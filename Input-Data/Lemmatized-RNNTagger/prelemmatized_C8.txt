Informa=que	A.qual.f.s	informaëque
Modélisa=on	N.P.m.s	Modélisaçon
UML	N.P.m.s	Uml
Objec-fs	N.P.m.s	Objec-fs
de	P	de
la	D.def.f.s	le
séance	N.C.f.s	séance
:	PONCT.W	:
Créa	N.P.m.s	Créa
-on	CL.suj.3.m.s	on
d'	P	de
un	D.ind.m.s	un
site	N.C.m.s	site
Web	N.P.m.s	Web
dynamique	A.qual.m.s	dynamique
PHP	N.P.m.s	Php
PHP	N.P.m.s	Php
•	N.P.m.s	•
PHP	N.P.m.s	Php
est	V.P.3.s	être
un	D.ind.m.s	un
langage	N.C.m.s	langage
de	P	de
programma	N.C.m.s	programma
-on	CL.suj.3.m.s	on
u=lisé	VK.m.s	uëliser
pour	P	pour
la	D.def.f.s	le
construc=on	N.C.f.s	construcçon
de	P	de
sites	N.C.m.p	site
Web	N.P.m.s	Web
dynamiques	N.C.f.p	dynamique
–	P	à
Pages	N.C.f.p	page
PHP	N.P.m.s	Php
:	PONCT.W	:
pages	N.C.f.p	page
Web	N.P.m.s	Web
qui	PRO.rel.f.p	qui
con=ennent	V.P.3.p	concenter
de	P	de
PHP	N.P.m.s	Php
•	N.C.m.s	•
On	CL.suj.3.m.s	on
va	V.P.3.s	aller
mélanger	VW	mélanger
le	D.def.m.s	le
PHP	N.P.m.s	Php
au	P+D.def.m.s	au
code	N.C.m.s	code
HTML	N.P.m.s	<unknown>
/	C.C	@card@
CSS	N.P.m.s	CSS
•	N.C.m.s	•
Le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
va	V.P.3.s	aller
être	VW	être
analysé	VK.m.s	analyser
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
•	P	à
Le	D.def.m.s	le
résultat	N.C.m.s	résultat
va	V.P.3.s	aller
être	VW	être
une	D.ind.f.s	un
nouvelle	A.qual.f.s	nouveau
page	N.C.f.s	page
Web	N.P.m.s	Web
mise	VK.f.s	mettre
à	P	à
jour	N.C.m.s	jour
automa=quement	ADV.-	automaçquement
par	P	par
le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
coursPHP-1.php	N.C.m.s	<unknown>
<html>	N.P.x.s	<unknown>
…	P	à
Le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
est	V.P.3.s	être
à	P	à
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
la	D.def.f.s	le
balise	N.C.f.s	balise
date_default_-mezone_set("Europe/Paris")	N.P.x.s	<unknown>
;	PONCT.W	;
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
…	N.C.m.s	…
?	PONCT.S	?

>	N.C.m.s	>
ou	C.C	ou
entouré	VK.m.s	entourer
par	P	par
la	D.def.f.s	le
balise	N.C.f.s	balise
echo	N.C.m.s	echo
"	PONCT.W	"
<p	P	àp
style='font-style	N.C.m.s	styleë'font-style
:	PONCT.W	:
italic	ET	italic
;	PONCT.W	;
'	PONCT.W	'
>	P	à
Paris	N.P.m.s	Paris
,	PONCT.W	,
le	D.def.m.s	le
"	PONCT.W	"
<script	N.C.m.s	<unknown>
language="php">	ET	languageçphpçë
.date('d	ET	edete-ded
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
…	D.card.m.p	…
</script>	N.P.x.s	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
…	P	à
</html>	N.C.m.p	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
57	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P+D.def.m.s	c
Cycle	N.C.m.s	cycle
de	P	de
vie	N.C.f.s	vie
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
PHP	N.P.m.s	Php
1	A.card.f.s	@card@
)	PONCT.W	)
Le	D.def.m.s	le
client	N.C.m.s	client
envoie	V.P.3.s	envoyer
la	D.def.f.s	le
requête	N.C.f.s	requête
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
2	A.card.m.s	@card@
)	PONCT.W	)
Les	D.def.f.p	le
pages	N.C.f.p	page
PHP	N.P.m.s	Php
sont	V.P.3.p	être
analysées	VK.f.p	analyser
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
,	PONCT.W	,
le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
est	V.P.3.s	être
interprété	VK.m.s	interpréter
3	A.card.m.s	@card@
)	PONCT.W	)
Le	D.def.m.s	le
contenu	N.C.m.s	contenu
de	P	de
la	D.def.f.s	le
page	N.C.f.s	page
est	V.P.3.s	être
mise	VK.f.s	mettre
à	P	à
jour	N.C.m.s	jour
automa-quement	ADV.-	automa-quement
et	C.C	et
envoyé	VK.m.s	envoyer
au	P+D.def.m.s	au
client	N.C.m.s	client
(	PONCT.W	(
1	N.card.m.s	@card@
)	PONCT.W	)
Requête	V.P.3.s	requêter
Fichiers	N.C.m.p	fichier
sta=ques	A.qual.m.p	staëque
hUp://serveur/page.php	N.C.m.p	<unknown>
HTML	N.P.m.s	<unknown>
/	PONCT.W	@card@
CSS	N.P.f.s	CSS
(	PONCT.W	(
3	N.card.m.s	@card@
)	PONCT.W	)
Envoie	V.P.3.s	envoyer
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
(	PONCT.W	(
contenu	VK.m.s	contenir
du	P+D.def.m.s	du
contenu	N.C.m.s	contenu
mis	VK.m.s	mettre
à	P	à
jour	N.C.m.s	jour
HTML	N.P.m.s	<unknown>
calculé	VK.m.s	calculer
)	PONCT.W	)
Interpréteur	N.P.m.s	Interpréteur
PHP	N.P.m.s	Php
Pages	N.P.m.s	Pages
PHP	N.P.m.s	Php
(	PONCT.W	(
2	N.card.m.s	@card@
)	PONCT.W	)
Interpréta	V.J.3.s	interpréter
-on	CL.suj.3.m.s	on
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
du	P+D.def.m.s	du
code	N.C.m.s	code
PHP	N.P.m.s	Php
19/01/17	N.card.f.s	@card@
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
58	D.card.m.p	@card@
PHP	N.C.m.p	php
…	P	à
<h1>	N.P.f.s	<unknown>
Bienvenue	N.P.f.s	Bienvenue
sur	P	sur
le	D.def.m.s	le
site	N.C.m.s	site
PHP	N.P.m.s	Php
</h1>	N.P.x.s	<unknown>
<p	P	àp
style='font-style	N.C.m.s	styleë'font-style
:	PONCT.W	:
italic	N.C.m.s	italic
;	PONCT.W	;
'	PONCT.W	'
>	P	à
Paris	N.P.m.s	Paris
,	PONCT.W	,
le	D.def.m.s	le
28	A.card.m.s	@card@
/	PONCT.W	@card@
02	A.card.m.s	@card@
/	PONCT.W	@card@
2012</p>	D.card.m.p	@card@
hUp://serveur/courPHP-1.php	N.P.x.s	<unknown>
<p>	N.P.x.s	<unknown>
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
18:45:12	D.card.m.p	@card@
.</p>	N.P.x.s	<unknown>
…	P+D.def.m.s	c
Contenu	VK.m.s	contenir
HTML/CSS	N.P.x.s	<unknown>
coursPHP-1.php	N.C.m.s	<unknown>
calculé	VK.m.s	calculer
…	P	à
<h1>	N.P.f.s	<unknown>
Bienvenue	N.P.f.s	Bienvenue
sur	P	sur
le	D.def.m.s	le
site	N.C.m.s	site
PHP	N.P.m.s	Php
</h1>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
date_default_-mezone_set("Europe/Paris")	N.P.x.s	<unknown>
;	PONCT.W	;
Interpréteur	N.C.m.s	interpréteur
PHP	N.P.m.s	Php
echo	ET	echo
"	PONCT.W	"
<p	P	àp
style='font-style	N.C.m.s	styleë'font-style
:	PONCT.W	:
italic	A.qual.m.s	<unknown>
;	PONCT.W	;
'	PONCT.W	'
>	P	à
Paris	N.P.m.s	Paris
,	PONCT.W	,
le	D.def.m.s	le
"	PONCT.W	"
.	PONCT.S	.

date('d	ADV.-	dateë'd
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Page	N.C.f.s	page
PHP	N.C.m.s	php
originelle	A.qual.f.s	originel
?	PONCT.S	?

>	N.C.m.s	>
(	PONCT.W	(
PHP	N.C.m.s	php
&	PONCT.W	&
HTML	N.P.m.s	<unknown>
/	PONCT.W	@card@
CSS	N.P.f.s	CSS
)	PONCT.W	)
<script	ET	<unknown>
language="php">	ET	languageçphpçë
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
"	PONCT.W	"
.date("H:i:s	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
.</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
</script>	N.P.x.s	<unknown>
…	ET	…
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
59	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
code	ET	code
PHP	N.P.m.s	Php
coursPHP-2.php	N.C.m.s	<unknown>
Toute	D.ind.f.s	tout
instruc=on	N.C.f.s	instrucçon
PHP	N.P.m.s	Php
se	CL.refl.3.f.s	se
<	V.P.3.s	être
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
html>	ET	<unknown>
termine	V.P.3.s	terminer
par	P	par
un	D.ind.m.s	un
«	N.C.m.s	«
;	PONCT.W	;
»	N.C.m.s	»
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
date_default_=mezone_set("Europe/Paris")	N.P.x.s	<unknown>
;	PONCT.W	;
Por=on	N.C.m.s	porçon
de	P	de
code	N.C.m.s	code
PHP	N.P.m.s	Php
$today	N.P.m.s	<unknown>
=	PONCT.W	=
date("d-m	N.C.m.s	dateçd-m
-Y	ET	y
H:i:s	N.P.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
…	N.C.m.s	…
.	PONCT.S	.

?	PONCT.S	?

>	N.C.m.s	>
$variable	A.qual.m.s	çvariable
=	PONCT.W	=
"	PONCT.W	"
PHP5	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html>	N.C.m.p	<unknown>
<head>	N.P.m.s	<unknown>
…	P	à
</head>	N.P.x.s	<unknown>
La	D.def.f.s	le
séquence	N.C.f.s	séquence
/*	C.C	<unknown>
…	N.C.m.s	…
*/	PONCT.W	<unknown>
<body>	N.P.m.s	<unknown>
délimite	V.P.3.s	délimiter
un	D.ind.m.s	un
commentaire	N.C.m.s	commentaire
,	PONCT.W	,
<h1>	N.P.x.s	<unknown>
Exemple	N.C.m.s	exemple
PHP	N.P.m.s	Php
</h1>	N.P.x.s	<unknown>
visible	A.qual.m.s	visible
pour	P	pour
l'	D.def.m.s	le
auteur	N.C.m.s	auteur
,	PONCT.W	,
<p>Contenu	N.P.m.s	<unknown>
staBque	A.qual.m.s	stabque
:	PONCT.W	:
ça	PRO.dem.m.s	cela
ne	ADV.neg	ne
change	V.P.3.s	changer
pas	ADV.neg	pas
</p>	N.P.x.s	<unknown>
invisible	A.qual.m.s	invisible
pour	P	pour
le	D.def.m.s	le
client	N.C.m.s	client
<	N.C.m.s	<
?	PONCT.S	?

php	ADV.-	php
/*	C.C	<unknown>
ce	D.dem.m.s	ce
contenu	N.C.m.s	contenu
va	V.P.3.s	aller
être	VW	être
interprété	VK.m.s	interpréter
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
*/	P	à
Por=on	N.C.m.s	porçon
de	P	de
code	N.C.m.s	code
P	N.P.m.s	P
HP	N.P.m.s	Hp
echo	N.C.m.s	echo
"	PONCT.W	"
<p>Contenu	N.P.m.s	<unknown>
en	P	en
$variable	A.qual.m.s	çvariable
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Aujourd'hui	ADV.-	aujourd'hui
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
$today	N.P.m.s	<unknown>
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
L'	D.def.f.s	le
instruc=on	N.C.m.s	instrucçon
«	P	à
echo	N.C.m.s	echo
»	N.P.x.s	»
permet	V.P.3.s	permettre
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
d'	P	de
écrire	VW	écrire
dans	P	dans
le	D.def.m.s	le
document	N.C.m.s	document
final	A.qual.m.s	final
Manuele	A.qual.m.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
60	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	N.C.m.s	•
Code	N.P.m.s	Code
une	D.ind.f.s	un
fois	N.C.f.s	foi
interprété	VK.m.s	interpréter
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
…	N.C.m.s	…
<	N.C.m.s	<
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
html>	N.C.m.p	<unknown>
<html>	ET	<unknown>
<head>	N.P.m.s	<unknown>
…	P	à
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<h1>	ET	<unknown>
Exemple	N.C.m.s	exemple
PHP	N.P.m.s	Php
</h1>	N.P.x.s	<unknown>
<p>Contenu	N.P.m.s	<unknown>
sta=que	A.qual.m.s	staëque
:	PONCT.W	:
ça	PRO.dem.m.s	cela
ne	ADV.neg	ne
change	V.P.3.s	changer
pas	ADV.neg	pas
</p>	N.P.x.s	<unknown>
<p>Contenu	VK.m.s	cpcontenir
en	P	en
PHP5	N.P.m.s	<unknown>
</p>	N.P.x.s	<unknown>
<p>	N.P.x.s	<unknown>
Aujourd'hui	ADV.-	aujourd'hui
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
28-02-2012	A.card.m.s	@card@
19:38:54	D.card.m.p	@card@
</p>	N.C.m.p	<unknown>
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
Résultat	N.C.m.s	résultat
des	P+D.def.m.p	du
instruc-ons	N.C.m.p	instruc-on
«	P	à
echo	N.C.m.s	echo
»	N.C.m.s	»
Ce	PRO.dem.m.s	ce
qui	PRO.rel.m.s	qui
le	D.def.m.s	le
client	N.C.m.s	client
voit	V.P.3.s	voir
…	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
61	D.card.m.p	@card@
PHP	N.C.m.p	php
•	N.C.m.s	•
La	D.def.f.s	le
no	ADV.neg	no
-on	CL.suj.3.m.s	on
de	P	de
variable	N.C.f.s	variable
–	N.C.m.s	–
Une	D.ind.f.s	un
variable	N.C.f.s	variable
est	V.P.3.s	être
un	D.ind.m.s	un
conteneur	N.C.m.s	conteneur
de	P	de
valeur	N.C.f.s	valeur
–	C.S	–
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
lui	CL.obj.3.m.s	lui
affecter	VW	affecter
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
,	PONCT.W	,
qu'	PRO.rel.f.s	que
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
u=liser	VW	uëliser
plus	ADV.-	plus
tard	ADV.-	tard
$variable	A.qual.m.s	çvariable
=	PONCT.W	=
"	PONCT.W	"
PHP5	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Le	D.def.m.s	le
«	N.C.m.s	«
$	N.C.m.s	$
»	N.C.m.s	»
indique	V.P.3.s	indiquer
une	D.ind.f.s	un
variable	N.C.f.s	variable
Le	D.def.m.s	le
«	N.C.m.s	«
=	V.P.3.s	être
»	N.C.m.s	»
est	V.P.3.s	être
une	D.ind.f.s	un
affecta	V.J.3.s	affecter
-on	CL.suj.3.m.s	on
On	CL.suj.3.m.s	on
asribut	V.P.3.s	<unknown>
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
à	P	à
la	D.def.f.s	le
Le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
variable	N.C.f.s	variable
variable	A.qual.f.s	variable
commence	V.P.3.s	commencer
toujours	ADV.-	toujours
par	P	par
une	D.ind.f.s	un
leere	N.C.f.s	leere
ou	C.C	ou
un	D.ind.m.s	un
«	N.C.m.s	«
_	N.C.m.s	_
»	N.C.m.s	»
,	PONCT.W	,
sans	P	sans
echo	N.C.m.s	echo
"	PONCT.W	"
…	P	à
$variable	A.qual.m.s	çvariable
…	N.C.m.s	…
"	PONCT.W	"
;	PONCT.W	;
espace	V.P.3.s	espacer
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
la	D.def.f.s	le
valeur	N.C.f.s	valeur
gardée	VK.f.s	garder
dans	P	dans
la	D.def.f.s	le
variable	N.C.f.s	variable
par	P	par
Manuele	N.P.f.s	Manuele
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	C.C	@card@
son	D.poss.m.s	son
nom	N.C.m.s	nom
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
62	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	N.C.m.s	•
La	D.def.f.s	le
no	ADV.neg	no
-on	CL.suj.3.m.s	on
de	P	de
variable	N.C.f.s	variable
:	PONCT.W	:
les	D.def.m.p	le
types	N.C.m.p	type
des	P+D.def.f.p	du
données	N.C.f.p	donnée
–	N.C.f.p	–
Les	D.def.f.p	le
variables	N.C.f.p	variable
peuvent	V.P.3.p	pouvoir
garder	VW	garder
de	P	de
valeurs	N.C.f.p	valeur
de	P	de
différents	D.ind.m.p	différent
types	N.C.m.p	type
•	P	à
Nombres	N.P.m.s	Nombres
en-ers	N.C.m.p	en-er
(	PONCT.W	(
integer	N.C.m.s	integer
)	PONCT.W	)
:	PONCT.W	:
25	D.card.m.p	@card@
•	A.card.m.p	•
Nombres	A.qual.m.p	nombre
décimaux	N.C.m.p	décimal
(	PONCT.W	(
double	A.qual.m.s	double
ou	C.C	ou
float	N.C.m.s	float
)	PONCT.W	)
:	PONCT.W	:
2.25	D.card.f.p	@card@
•	D.card.f.p	•
Chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
(	PONCT.W	(
string	N.C.m.s	string
)	PONCT.W	)
:	PONCT.W	:
«	N.C.m.s	«
1	D.card.m.s	@card@
super	N.C.m.s	super
chaîne	N.C.f.s	chaîne
!	PONCT.S	!

»	N.C.m.s	»
•	N.C.m.s	•
Logique	N.P.m.s	Logique
(	PONCT.W	(
boolean	N.C.m.s	boolean
)	PONCT.W	)
:	PONCT.W	:
«	P	à
true	N.C.f.s	true
»	N.C.m.s	»
(	PONCT.W	(
1	N.card.m.s	@card@
)	PONCT.W	)
ou	C.C	ou
«	P+D.def.m.s	c
false	N.C.f.s	false
»	N.C.m.s	»
–	N.C.m.s	–
La	D.def.f.s	le
fonc=on	N.C.f.s	foncçon
geeype($variable)	N.P.m.s	Geeypeëüviableë
permet	V.P.3.s	permettre
de	P	de
savoir	VW	savoir
quel	A.int.m.s	quel
e	PONCT.W	e
type	N.C.m.s	type
de	P	de
valeur	N.C.f.s	valeur
con=ent	V.P.3.p	concer
la	D.def.f.s	le
variable	N.C.f.s	variable
•	P	à
$en=er	N.P.m.s	<unknown>
=	PONCT.W	=
25	N.card.m.s	@card@
;	PONCT.W	;
gesype($en=er)	N.C.m.s	<unknown>
è	P	è
integer	VW	integer
•	N.C.m.s	•
$decimal	N.C.m.s	<unknown>
=	P	à
2.25	N.card.m.s	@card@
;	PONCT.W	;
gesype($decimal)	N.C.m.s	gesypeë-decimalç
è	P	è
double	A.qual.m.s	double
•	P	à
$chaine	A.qual.f.s	çchain
=	PONCT.W	=
"	PONCT.W	"
1	A.card.f.s	@card@
super	N.C.m.s	super
chaîne	N.C.f.s	chaîne
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
gesype($chaine)	N.C.m.s	gesypeëchaineë
è	P	è
string	N.C.m.s	string
•	P+D.def.m.s	c
$bool	N.P.x.s	<unknown>
=	PONCT.W	=
true	N.C.f.s	true
;	PONCT.W	;
gesype($bool)	N.C.m.s	<unknown>
è	P	è
boolean	ET	boolean
Manuele	A.qual.m.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
63	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
Défini	VK.m.s	définir
-on	CL.suj.3.m.s	on
d'	P	de
une	D.ind.f.s	un
$enGer	N.P.x.s	<unknown>
=	PONCT.W	=
25	N.card.m.s	@card@
;	PONCT.W	;
variable	A.qual.m.s	variable
$decimal	A.qual.m.s	<unknown>
=	P	à
2.25	N.card.m.s	@card@
;	PONCT.W	;
$chaine	N.P.x.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
1	A.card.f.s	@card@
super	N.C.m.s	super
chaîne	N.C.f.s	chaîne
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
$boolean	ET	<unknown>
=	V.P.3.s	être
true	N.C.f.s	true
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

geeype($en-er)	N.C.f.p	<unknown>
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$en-er	N.P.m.s	<unknown>
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

geeype($decimal)	N.C.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$decimal	N.C.m.s	<unknown>
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

geeype($chaine)	N.C.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$chaine	N.C.f.s	cchaine
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

geeype($boolean)	N.C.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$boolean	ET	<unknown>
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Valeur	N.C.f.s	valeur
de	P	de
chaque	D.ind.m.s	chaque
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
la	D.def.f.s	le
geeype()	N.C.f.s	<unknown>
variable	A.qual.f.s	variable
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
informe	V.P.3.s	informer
le	D.def.m.s	le
type	N.C.m.s	type
$boolean	A.qual.m.s	<unknown>
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
64	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P	à
Opérateurs	N.C.m.p	opérateur
–	C.C	c
Différents	A.qual.m.p	différent
opérateurs	N.C.m.p	opérateur
permesent	V.P.3.p	permeser
de	P	de
manipuler	VW	manipuler
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
,	PONCT.W	,
qu'	C.S	que
ils	CL.suj.3.m.p	il
soient	V.S.3.p	être
dans	P	dans
les	D.def.m.p	le
variables	N.C.m.p	variable
ou	C.C	ou
pas	ADV.neg	pas
Opérateurs	N.C.m.p	opérateur
Opérateurs	N.C.m.p	opérateur
Opérateurs	N.C.m.p	opérateur
de	P	de
Opérateurs	N.C.m.p	opérateur
logiques	A.qual.m.p	logique
mathéma-ques	A.ind.m.p	mathéma-que
String	N.P.m.s	String
comparaison	N.C.f.s	comparaison
+	P	p
-	PONCT.W	-
*	N.C.m.s	*
/	PONCT.W	@card@
%	N.C.m.s	%
.	PONCT.S	.

==	I	çù
!	PONCT.S	!

=	PONCT.W	=
||	N.C.m.s	<unknown>
(	PONCT.W	(
OR	N.C.m.s	or
)	PONCT.W	)
(	PONCT.W	(
concaténaBon	N.C.m.s	concaténabon
)	PONCT.W	)
<=	P+D.def.m.s	çù
<	N.C.m.s	<
>=	N.P.m.s	<unknown>
>	N.C.m.s	>
&&	N.card.m.s	<unknown>
(	PONCT.W	(
AND	N.C.m.s	and
)	PONCT.W	)
!	PONCT.S	!

(	PONCT.W	(
not	N.C.m.s	not
)	PONCT.W	)
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$a	N.P.x.s	<unknown>
=	N.C.m.s	=
2	A.card.m.s	@card@
3	A.card.m.s	@card@
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
4	N.card.m.s	@card@
-	PONCT.W	-
$a	N.P.x.s	<unknown>
;	PONCT.W	;
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
Toto	N.P.m.s	Toto
”	N.C.m.s	”
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
Salut	N.P.m.s	Salut
"	PONCT.W	"
.	PONCT.S	.

$nom	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.C.m.s	<unknown>
4	D.card.m.p	@card@
-	PONCT.W	-
$a	N.P.x.s	<unknown>
vaut	V.P.3.s	valoir
$b	N.C.m.s	bb
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
65	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P	à
Tableaux	N.C.m.p	tableau
–	P	à
Variables	N.P.m.s	Variables
capables	A.qual.m.p	capable
d'	P	de
enregistrer	VW	enregistrer
plusieurs	D.ind.f.p	plusieurs
valeurs	N.C.f.p	valeur
d'	P	de
un	D.ind.m.s	un
type	N.C.m.s	type
•	P	à
Tableaux	N.C.m.p	tableau
à	P	à
indice	N.C.m.s	indice
:	PONCT.W	:
Aeen	N.P.f.s	<unknown>
-on	CL.suj.3.m.s	on
a	V.P.3.s	avoir
définir	VW	définir
toutes	PRO.ind.f.p	tout
–	P	à
Chaque	D.ind.m.s	chaque
posi=on	N.C.m.s	posiçon
est	V.P.3.s	être
iden=fiée	VK.f.s	idençfier
par	P	par
les	D.def.m.p	le
posi=ons	N.C.m.p	posiçon
avant	P	avant
de	P	de
les	D.def.m.p	le
un	D.ind.m.s	un
numéro	N.C.m.s	numéro
(	PONCT.W	(
commençant	VG	commencer
par	P	par
0	N.card.m.s	@card@
)	PONCT.W	)
u=liser	VW	uëliser
ou	C.C	ou
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
aura	V.F.3.s	avoir
une	D.ind.f.s	un
•	N.C.f.s	•
message	N.C.m.s	message
d'	P	de
erreur	N.C.f.s	erreur
.	PONCT.S	.

$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
0	N.card.m.s	@card@
]	PONCT.W	]
=	N.C.m.s	=
"	PONCT.W	"
A	N.C.m.s	a
"	PONCT.W	"
;	PONCT.W	;
•	N.C.m.s	•
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
1	N.card.m.s	@card@
]	PONCT.W	]
=	N.C.m.s	=
"	PONCT.W	"
B	N.C.m.s	b
"	PONCT.W	"
;	PONCT.W	;
•	N.C.m.s	•
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
3	N.card.m.s	@card@
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Fin	N.C.f.s	fin
"	PONCT.W	"
;	PONCT.W	;
•	N.C.m.p	•
A	P	à
B	N.C.m.s	b
Fin	N.C.f.s	fin
Suite	N.C.f.s	suite
$tableau	N.P.m.s	<unknown>
[	PONCT.W	[
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Suite	N.C.f.s	suite
"	PONCT.W	"
;	PONCT.W	;
•	D.card.m.p	•
Tableaux	N.C.m.p	tableau
associa-fs	A.qual.m.p	<unknown>
:	PONCT.W	:
0	D.card.m.s	@card@
1	A.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
–	N.C.m.p	–
Chaque	D.ind.m.s	chaque
posi=on	N.C.m.s	posiçon
reçoit	V.P.3.s	recevoir
un	D.ind.m.s	un
iden=fiant	N.C.m.s	idençfiant
(	PONCT.W	(
un	D.ind.m.s	un
label	N.C.m.s	label
)	PONCT.W	)
Jean	N.P.m.s	Jean
Dupont	N.P.m.s	Dupont
•	P	à
$tableauAssoc	N.P.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Prenom	N.P.m.s	Prenom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
•	ET	•
Prenom	N.P.m.s	Prenom
Nom	N.P.m.s	Nom
$tableauAssoc	N.P.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Nom	N.P.m.s	Nom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
66	D.card.m.p	@card@
PHP	N.P.m.s	Php
Message	N.C.m.s	message
d'	P	de
erreur	N.C.f.s	erreur
car	C.C	car
le	D.def.m.s	le
<head>	N.P.m.s	<unknown>
…	A.qual.m.s	…
contenu	VK.m.s	contenir
de	P	de
la	D.def.f.s	le
posi=on	N.C.f.s	posiçon
2	D.card.m.p	@card@
<style>	N.C.m.p	<unknown>
…	P	à
</style>	N.P.x.s	<unknown>
(	PONCT.W	(
$tableau[2	N.P.f.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
</head>	N.P.x.s	<unknown>
été	VK.m.s	être
défini	VK.m.s	définir
auparavant	ADV.-	auparavant
.	PONCT.S	.

<body>	N.P.m.s	<unknown>
…	P	à
<h2>Tableaux	N.C.m.p	çhiëtableau
à	P	à
indice	N.C.m.s	indice
</h2>	N.P.x.s	<unknown>
<table>	A.qual.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$tableau	A.qual.m.s	<unknown>
[	PONCT.W	[
0	N.card.m.s	@card@
]	PONCT.W	]
=	N.C.m.s	=
"	PONCT.W	"
A	N.C.m.s	a
"	PONCT.W	"
;	PONCT.W	;
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
1	N.card.m.s	@card@
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
B	N.C.m.s	b
"	PONCT.W	"
;	PONCT.W	;
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
3	A.card.m.s	@card@
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Fin	N.C.f.s	fin
"	PONCT.W	"
;	PONCT.W	;
Contenu	VK.m.s	contenir
de	P	de
la	D.def.f.s	le
$tableau	N.C.f.s	<unknown>
[	PONCT.W	[
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Suite	N.C.f.s	suite
"	PONCT.W	"
;	PONCT.W	;
posi=on	N.C.m.s	posiçon
4	D.card.m.p	@card@
(	PONCT.W	(
$tableau[4	N.C.m.p	<unknown>
]	PONCT.W	]
)	PONCT.W	)
echo	ET	echo
"	PONCT.W	"
<tr>	N.P.m.s	<unknown>
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[0	N.C.m.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
<td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[1	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
<td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[2	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td><td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[3	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td><td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[4	N.C.m.p	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td></tr>	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</table>	N.C.m.s	<unknown>
…	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
67	D.card.m.p	@card@
PHP	N.C.m.p	php
…	P+D.def.m.s	c
<h2>Tableau	N.C.m.s	chiätableau
associa=f	A.qual.m.s	associaëf
</h2>	N.P.m.s	<unknown>
<table>	A.ind.m.s	<unknown>
<tr>	N.P.m.s	<unknown>
<th>	N.P.m.s	<unknown>
Nom	N.P.m.s	Nom
</th>	N.P.m.s	<unknown>
<th>Prénom	N.P.m.s	<unknown>
</th>	N.P.m.s	<unknown>
</tr>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tableauAssoc	ET	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Prenom	N.P.m.s	Prenom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tableauAssoc	N.P.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Nom	N.P.m.s	Nom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<tr>	N.P.m.s	<unknown>
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableauAssoc	N.C.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Nom	N.P.m.s	Nom
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableauAssoc	N.C.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Prenom	N.P.m.s	Prenom
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td></tr>	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</table>	N.C.m.s	<unknown>
</body>	N.P.x.s	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
68	D.card.m.p	@card@
Informa=que	N.C.m.s	informaëque
Modélisa=on	N.P.m.s	Modélisaçon
UML	N.P.m.s	Uml
Objec-fs	N.P.m.s	Objec-fs
de	P	de
la	D.def.f.s	le
séance	N.C.f.s	séance
:	PONCT.W	:
Classes	N.P.m.s	Classes
&	PONCT.W	&
Objets	N.C.m.p	objet
PHP	N.P.m.s	Php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
PHP	N.P.m.s	Php
5	N.card.m.s	@card@
est	V.P.3.s	être
un	D.ind.m.s	un
langage	N.C.m.s	langage
«	P	à
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
»	N.C.m.s	»
–	N.C.m.s	–
Manipula=on	N.C.m.s	manipulaçon
de	P	de
classes	N.C.f.p	classe
et	C.C	et
d'	P	de
objets	N.C.m.p	objet
Défini=on	N.C.f.s	définion
de	P	de
classe	N.C.f.s	classe
Visibilité	N.C.f.s	visibilité
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
class	ET	class
Personne	PRO.neg.m.s	personne
private	ET	privat
$nom	ET	änom
class	ET	class
Personne	PRO.neg.m.s	personne
{	P	à
private	A.qual.f.s	privat
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
Défini=on	N.C.f.s	définion
d'	P	de
un	D.ind.m.s	un
asribut	N.C.m.s	<unknown>
public	A.qual.m.s	public
func	ET	func
-on	CL.suj.3.m.s	on
setNom	N.P.m.s	<unknown>
(	PONCT.W	(
$nouvNom	N.P.m.s	<unknown>
)	PONCT.W	)
Opéra=on	N.P.m.s	Opéraçon
:	PONCT.W	:
{	N.P.m.s	{
$this->nom	N.P.m.s	<unknown>
=	PONCT.W	=
$nouvNom	N.P.m.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
public	A.qual.m.s	public
func	ADV.-	func
-on	CL.suj.3.m.s	on
…	P	à
Accès	N.C.m.s	accès
à	P	à
un	D.ind.m.s	un
asribut	N.C.m.s	<unknown>
public	A.qual.m.s	public
func	ET	func
-on	CL.suj.3.m.s	on
getNom	N.P.m.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
{	P	à
$this->aeribut	N.P.x.s	<unknown>
return	N.C.m.s	return
$this->nom	N.P.x.s	<unknown>
;	PONCT.W	;
}	V.P.3.s	être
}	P	à
Retourner	VW	retourner
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
return	A.qual.f.s	return
valeur	N.C.f.s	valeur
;	PONCT.W	;
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
70	D.card.m.p	@card@
PHP	N.C.m.p	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
Objets	N.C.m.p	objet
–	P+D.def.m.s	c
Créa=on	N.C.m.s	créaçon
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
:	PONCT.W	:
$obj	N.P.m.s	<unknown>
=	ET	=
new	ET	new
classe()	N.C.m.s	classeëë
;	PONCT.W	;
…	P+D.def.m.s	c
Créa=on	N.C.m.s	créaçon
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$toto	N.P.m.s	<unknown>
=	P	à
new	ET	new
Personne	N.P.x.s	Personne
(	PONCT.W	(
)	PONCT.W	)
$toto	N.P.m.s	<unknown>
=	ET	=
new	ET	new
Personne()	N.P.m.s	Personneëù
;	PONCT.W	;
Accès	N.C.m.p	accès
aux	P+D.def.m.p	au
opéra=ons	N.C.m.p	opéraçon
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
publiques	A.qual.f.p	publique
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
…	N.C.m.s	…
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
$toto	ET	<unknown>
->	A.ind.m.s	-
getNom	N.C.m.s	getnom
(	PONCT.W	(
)	PONCT.W	)
$toto->nom	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
blablabla	ET	blablabla
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$toto->nom	N.P.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
Impossible	A.qual.m.s	impossible
d'	P	de
accéder	VW	accéder
aux	P+D.def.m.p	au
asributs	N.C.m.p	<unknown>
privés	A.qual.m.p	privé
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
71	D.card.m.p	@card@
PHP	N.P.m.s	Php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
<html>	N.P.x.s	<unknown>
<head>	N.P.m.s	<unknown>
…	P	à
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
class	ET	class
Personne	PRO.neg.m.s	personne
{	P	à
private	A.qual.f.s	privat
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

}	P	à
//fin	N.C.m.s	ééfin
classe	V.P.3.s	classer
Personne	PRO.neg.m.s	personne
?	PONCT.S	?

>	P	à
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
…	P	à
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$toto	ET	<unknown>
=	P	à
new	ET	new
Personne()	N.C.m.s	personneëë
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
Objet	N.P.m.s	Objet
<i>Personne</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$toto->nom	N.P.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Erreur	N.C.f.s	erreur
car	C.C	car
l'	D.def.m.s	le
asribut	N.C.m.s	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
«	P	à
nom	N.C.m.s	nom
»	N.C.m.s	»
est	V.P.3.s	être
privé	VK.m.s	priver
!	PONCT.S	!

!	PONCT.S	!

</body>	N.P.x.s	<unknown>
</htlml>	N.C.m.p	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
72	D.card.m.p	@card@
PHP	N.C.m.p	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
:	PONCT.W	:
–	N.C.m.s	–
Héritage	N.P.m.s	Héritage
:	PONCT.W	:
class	ET	class
SousClasse	N.P.m.s	Sousclasse
extends	ET	extend
SuperClasse	ET	superclasse
class	ET	class
Employe	ET	employe
extends	ET	extend
Personne	PRO.neg.m.s	personne
{	P	à
private	A.qual.f.s	privat
$salaire	N.C.m.s	çsalaire
=	P	à
1000	PRO.card.m.p	@card@
;	PONCT.W	;
La	D.def.f.s	le
classe	N.C.f.s	classe
Employe	N.P.m.s	Employe
hérite	V.P.3.s	hériter
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
Personne	N.P.x.s	Personne
public	A.qual.m.s	public
func	ET	func
-on	CL.suj.3.m.s	on
augmentaGon	ET	augmentagon
(	PONCT.W	(
$perc	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
class	ET	class
Employe	ET	employe
extends	ET	extend
Personne	PRO.neg.m.s	personne
if	ET	if
(	PONCT.W	(
$perc	N.P.m.s	<unknown>
>	N.C.m.s	>
0	A.card.m.s	@card@
)	PONCT.W	)
{	P	à
$this->salaire	N.P.x.s	<unknown>
=	PONCT.W	=
$this->salaire	N.P.x.s	<unknown>
$this->salaire*$perc	N.P.x.s	<unknown>
;	PONCT.W	;
On	CL.suj.3.m.s	on
rajoute	V.P.3.s	rajouter
un	D.ind.m.s	un
nouvel	A.qual.m.s	nouveau
asribut	N.C.m.s	<unknown>
}	P	à
private	A.qual.m.s	privat
$salaire	N.C.m.s	çsalaire
}	N.C.m.s	}
Et	C.C	et
des	P+D.def.m.p	du
nouvel	A.qual.m.s	nouveau
es	P+D.def.m.p	es
opéra=ons	N.C.m.p	opéraçon
public	A.qual.m.s	public
func	ET	func
-on	CL.suj.3.m.s	on
getSalaire()	ET	<unknown>
public	A.qual.m.s	public
func	ADV.-	func
-on	CL.suj.3.m.s	on
augmentaGon	N.C.f.s	augmentagon
{	P	à
return	N.C.m.s	return
$this->salaire	N.P.x.s	<unknown>
;	PONCT.W	;
}	ET	}
public	A.qual.m.s	public
func	ADV.-	func
-on	CL.suj.3.m.s	on
getSalaire	N.C.m.s	getsalaire
}	P	à
Fichier	N.P.m.s	Fichier
Employe.php	N.P.m.s	<unknown>
Manuele	N.P.m.s	Manuele
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
73	D.card.m.p	@card@
PHP	N.C.m.p	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
On	CL.suj.3.m.s	on
importe	V.P.3.s	importer
la	D.def.f.s	le
défini=on	N.C.f.s	définiçon
des	P+D.def.f.p	du
classes	N.C.f.p	classe
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
Employe	N.P.m.s	Employe
et	C.C	et
Personne	N.P.x.s	Personne
include	V.P.3.s	includer
"	PONCT.W	"
Employe.php	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Toto	N.P.m.s	Toto
est	V.P.3.s	être
un	D.ind.m.s	un
Employé	N.C.m.s	employé
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
donc	ADV.-	donc
$toto	N.P.x.s	<unknown>
=	P	à
new	ET	new
Employe()	N.P.m.s	<unknown>
;	PONCT.W	;
une	D.ind.f.s	un
Personne	N.C.f.s	personne
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
Toto	N.P.m.s	Toto
possède	V.P.3.s	posséder
un	D.ind.m.s	un
salaire	N.C.m.s	salaire
(	PONCT.W	(
Employe	N.P.f.s	Employe
)	PONCT.W	)
,	PONCT.W	,
$toto->augmenta-on(0.10)	N.P.x.s	<unknown>
;	PONCT.W	;
mais	C.C	mais
aussi	ADV.-	aussi
un	D.ind.m.s	un
nom	N.C.m.s	nom
(	PONCT.W	(
Personne	PRO.neg.m.s	personne
)	PONCT.W	)
echo	ET	echo
"	PONCT.W	"
<i>	D.card.m.p	<unknown>
nom	N.C.m.s	nom
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<i>	ET	çië
salaire	N.C.m.s	salaire
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getSalaire()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
€	N.C.m.s	€
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
La	D.def.f.s	le
classe	N.C.f.s	classe
Employe	N.P.m.s	Employe
hérite	V.P.3.s	hériter
tous	A.ind.m.p	tous
les	D.def.m.p	le
aeributs	N.C.m.p	<unknown>
et	C.C	et
opéra-ons	N.C.m.p	opéra-on
de	P	de
Personne	N.P.m.s	Personne
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
74	D.card.m.p	@card@
PHP	N.C.m.p	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
<html>	N.P.m.s	<unknown>
<head>	N.P.m.s	<unknown>
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<h1>Objets	N.C.m.p	<unknown>
en	P	en
PHP</h1>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
include	A.qual.m.s	includ
"	PONCT.W	"
Employe.php	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$toto	ET	<unknown>
=	ET	=
new	ET	new
Employe()	N.P.m.s	<unknown>
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
$toto->augmenta=on(0.10)	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Objet	N.P.m.s	<unknown>
Employe	N.P.m.s	Employe
:	PONCT.W	:
</p>	N.C.m.p	<unknown>
<ul>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
<i>	P	àià
nom	N.C.m.s	nom
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
<i>	P	àià
salaire	N.C.m.s	salaire
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getSalaire()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
€	N.C.m.s	€
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
</ul>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	ET	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
75	D.card.m.p	@card@
PHP	N.C.m.p	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
–	P	à
Méthode	N.P.m.s	Méthode
constructeur	N.C.m.s	constructeur
:	PONCT.W	:
__construct	N.C.m.s	çäconstruct
–	P	à
Redéfini	N.P.m.s	Redéfini
-on	CL.suj.3.m.s	on
d'	P	de
une	D.ind.f.s	un
opéra=on	N.C.f.s	opéraçon
class	ET	class
Manager	N.P.m.s	Manager
extends	ET	extend
Employe	N.P.m.s	Employe
{	P	à
private	A.qual.f.s	privat
$bonus	N.P.m.s	<unknown>
;	PONCT.W	;
func	ET	func
-on	CL.suj.3.m.s	on
__construct	N.P.m.s	<unknown>
(	PONCT.W	(
$bon	N.P.m.s	<unknown>
)	PONCT.W	)
Le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
est	V.P.3.s	être
appelé	VK.m.s	appeler
chaque	D.ind.m.s	chaque
{	N.C.m.s	{
$this->bonus	N.P.m.s	<unknown>
=	PONCT.W	=
$bon	N.P.m.s	<unknown>
;	PONCT.W	;
}	D.card.f.p	}
fois	N.C.f.p	foi
qu'	C.S	que
un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
créé	VK.m.s	créer
(	PONCT.W	(
new	ET	new
)	PONCT.W	)
public	A.qual.m.s	public
func	ADV.-	func
-on	CL.suj.3.m.s	on
getSalaire()	N.C.m.s	<unknown>
{	P	à
return	N.C.m.s	return
parent::getSalaire()	N.P.x.s	<unknown>
$this->bonus	N.P.m.s	<unknown>
;	PONCT.W	;
}	ET	}
public	N.C.m.s	public
func=on	A.qual.m.s	funcçon
setBonus	N.P.m.s	<unknown>
(	PONCT.W	(
$nouvBon	N.C.m.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
…	N.C.m.s	…
}	N.C.m.s	}
Redéfini=on	N.C.m.s	redéfinion
de	P	de
l'	D.def.f.s	le
opéra=on	N.C.f.s	opéraçon
getSalaire	N.C.m.s	getsalaire
public	A.qual.m.s	public
func=on	ET	funcçon
getBonus	N.P.m.s	Getbonus
(	PONCT.W	(
)	PONCT.W	)
{	N.C.m.s	{
…	N.C.m.s	…
}	P+D.def.m.s	c
parent::getSalaire	N.C.m.s	<unknown>
correspond	V.P.3.s	correspondre
à	P	à
}	N.C.m.s	}
l'	D.def.f.s	le
opéra=on	N.C.f.s	opéraçon
getSalaire	A.qual.f.s	getsalaire
définie	VK.f.s	définir
par	P	par
la	D.def.f.s	le
super-classe	N.C.f.s	super-classe
(	PONCT.W	(
Employe	N.P.f.s	Employe
)	PONCT.W	)
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
76	D.card.m.p	@card@
PHP	N.C.m.p	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
Appel	N.P.m.s	Appel
au	P+D.def.m.s	au
constructeur	N.C.m.s	constructeur
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
funcBon	A.qual.m.s	funcbon
__construct	N.P.x.s	<unknown>
(	PONCT.W	(
$bon	N.P.m.s	<unknown>
)	PONCT.W	)
require	VW	require
"	PONCT.W	"
Manager.php	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
{	N.C.m.p	{
$this->bonus	N.P.x.s	<unknown>
=	PONCT.W	=
$bon	N.P.m.s	<unknown>
;	PONCT.W	;
}	ET	}
$toto	ET	<unknown>
=	ET	=
new	ET	new
Manager(400)	N.P.m.s	Managerç0
;	PONCT.W	;
Appel	N.C.m.s	appel
à	P	à
l'	D.def.f.s	le
opéra=on	N.C.f.s	opéraçon
getSalaire	A.qual.f.s	getsalaire
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
Manager	N.P.m.s	Manager
$toto->augmenta=on(0.10)	N.P.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p><i>Manager</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
,	PONCT.W	,
salaire	N.C.m.s	salaire
"	PONCT.W	"
.	PONCT.S	.

$toto->getSalaire()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
€	N.C.m.s	€
"	PONCT.W	"
.	PONCT.S	.

"	PONCT.W	"
,	PONCT.W	,
bonus	N.C.m.p	bonus
"	PONCT.W	"
.	PONCT.S	.

$toto->getBonus()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
77	A.card.f.s	@card@
Informa=que	ET	informaëque
Modélisa=on	N.P.m.s	Modélisaçon
UML	N.P.m.s	Uml
Objec-fs	N.P.m.s	Objec-fs
de	P	de
la	D.def.f.s	le
séance	N.C.f.s	séance
:	PONCT.W	:
Formulaires	N.P.m.s	Formulaires
HTML	N.P.m.s	<unknown>
&	PONCT.W	&
PHP	N.P.m.s	Php
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
78	D.card.m.p	@card@
PHP	N.P.m.s	Php
est	V.P.3.s	être
un	D.ind.m.s	un
langage	N.C.m.s	langage
pour	P	pour
le	D.def.m.s	le
Web	N.P.m.s	Web
•	P	à
Communica	N.P.m.s	Communica
-on	CL.suj.3.m.s	on
entre	P	entre
le	D.def.m.s	le
client	N.C.m.s	client
(	PONCT.W	(
navigateur	N.C.m.s	navigateur
)	PONCT.W	)
et	C.C	et
le	D.def.m.s	le
serveur	N.C.m.s	serveur
(	PONCT.W	(
php	N.C.m.s	<unknown>
)	PONCT.W	)
–	N.C.m.s	–
Les	D.def.m.p	le
formulaires	N.C.f.p	formulaire
en	P	en
HTML	N.P.m.s	<unknown>
permesent	V.P.3.p	permeser
de	P	de
recueil	N.C.m.s	recueil
ir	A.qual.m.s	ir
des	P+D.def.f.p	du
données	N.C.f.p	donnée
auprès	ADV.-	auprès
de	P	de
l'	D.def.m.s	le
u=lisateur	N.C.m.s	uëlisateur
•	N.C.m.s	•
Les	D.def.f.p	le
données	N.C.f.p	donnée
sont	V.P.3.p	être
ensuite	ADV.-	ensuite
communiquées	VK.f.p	communiquer
à	P	à
un	D.ind.m.s	un
programme	N.C.m.s	programme
–	P	à
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
envoie	V.P.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
récoltées	VK.f.p	récolter
par	P	par
les	D.def.f.p	le
formulaires	N.C.f.p	formulaire
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
•	P	à
Le	D.def.m.s	le
programme	N.C.m.s	programme
(	PONCT.W	(
page	N.C.f.s	page
PHP	N.P.m.s	Php
)	PONCT.W	)
récupère	V.P.3.s	récupérer
les	D.def.f.p	le
données	N.C.f.p	donnée
grâce	N.C.f.s	grâce
à	P	à
des	D.ind.f.p	du
variables	N.C.f.p	variable
Page	N.C.f.s	page
PHP	N.P.m.s	Php
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
79	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
•	P	à
Un	D.ind.m.s	un
formulaire	A.qual.m.s	formulaire
HTML	N.P.m.s	<unknown>
est	V.P.3.s	être
défini	VK.m.s	définir
par	P	par
la	D.def.f.s	le
balise	N.C.f.s	balise
<form	N.P.m.s	<unknown>
…>	N.P.x.s	<unknown>
…	P	à
</form>	N.P.x.s	<unknown>
–	P	à
Tous	A.ind.m.p	tous
les	D.def.m.p	le
éléments	N.C.m.p	élément
sont	V.P.3.p	être
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
la	D.def.f.s	le
balise	N.C.f.s	balise
<form	ET	fform
name=	ET	nameç
"	PONCT.W	"
nomFormulaire	A.qual.m.s	nomformulaire
"	PONCT.W	"
ac-on=	ET	ac-onç
"	PONCT.W	"
page.php	ET	<unknown>
"	PONCT.W	"
method="get	ET	methodççget
|	P	à
post	N.C.m.s	post
"	PONCT.W	"
>	N.C.m.s	>
…	N.C.m.s	…
.	PONCT.S	.

</form>	N.P.x.s	<unknown>
ac	N.C.m.s	ac
-on	CL.suj.3.m.s	on
:	PONCT.W	:
à	P	à
qui	PRO.rel.m.s	qui
on	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
method	N.C.m.s	method
:	PONCT.W	:
comment	ADV.int	comment
on	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
–	P	à
Les	D.def.m.p	le
champs	N.C.m.p	champ
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
sont	V.P.3.p	être
introduits	VK.m.p	introduire
par	P	par
différents	D.ind.f.p	différent
balises	N.C.f.p	balise
:	PONCT.W	:
•	N.C.m.s	•
<	N.C.m.s	<
input	A.qual.m.s	input
type=	N.C.m.s	typeë
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
value=	N.C.m.s	valueë
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
id=	N.C.m.s	idà
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
/>	N.C.m.p	<unknown>
•	N.C.m.s	•
<	ET	<
textarea	ET	textarea
name=	ET	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
id=	N.C.m.s	idà
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
cols=	N.C.m.s	colsà
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
rows=	N.C.m.s	rowsà
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
>	N.C.m.s	>
…	N.C.m.s	…
</textarea>	N.P.m.s	<unknown>
•	N.C.m.s	•
<	A.ind.m.s	<
select	A.qual.m.s	select
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
id=	N.C.m.s	idà
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
size=	N.C.m.s	sizeë
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
>	N.C.m.s	>
<	N.C.m.s	<
op	ET	op
-on	CL.suj.3.m.s	on
value=	V.P.3.s	<unknown>
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
>	N.C.m.s	>
…	P	à
</op-on>	N.C.m.p	<unknown>
</select>	ET	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
80	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
<input	N.P.m.s	<unknown>
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="nomClient	A.qual.m.s	nameçnomclient
"	PONCT.W	"
value="votre	ET	valueçävotre
nom	ET	nom
"	PONCT.W	"
size="40	ET	<unknown>
"	PONCT.W	"
maxlength="150	ET	<unknown>
"	PONCT.W	"
/>	ET	<unknown>
<select	ET	<unknown>
name="produit">	V.P.3.s	<unknown>
<op	V.P.3.s	colper
-on	CL.suj.3.m.s	on
value="SuperKdo">	V.P.3.s	<unknown>
Super	N.P.m.s	Super
Kdo	N.P.m.s	Kdo
</op-on>	N.P.x.s	<unknown>
…	ET	…
</select>	ET	<unknown>
<textarea	ET	<unknown>
name="opinionClient	V.P.3.p	nameçoopinionclier
"	PONCT.W	"
cols="40	ET	<unknown>
"	PONCT.W	"
rows="5	ET	<unknown>
"	PONCT.W	"
>	V.P.3.s	être
Votre	D.poss.f.s	votre
opinion	N.C.f.s	opinion
sur	P	sur
nos	D.poss.m.p	notre
produits	N.C.m.p	produit
<input	ET	çinput
type="reset	N.C.m.s	typeëereset
"	PONCT.W	"
value="Neeoyer	N.C.m.s	<unknown>
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</textarea>	ET	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	N.P.x.s	<unknown>
input	N.C.m.s	input
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
se	CL.refl.3.m.s	se
charge	V.P.3.s	charger
d'	P	de
envoyer	VW	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
du	P+D.def.m.s	du
Manuele	N.P.m.s	Manuele
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
formulaire	A.qual.m.s	formulaire
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
81	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
<form	ET	fform
name="formClient	ET	<unknown>
"	PONCT.W	"
ac-on="coursPHP-7.php	ET	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
>	P	à
<label	N.C.m.s	çlabel
for="nom">	N.P.x.s	<unknown>
Nom</label>	N.P.x.s	<unknown>
À	P	à
qui	PRO.rel.m.s	qui
les	D.def.m.p	le
<input	ET	çinput
type="text	ET	typeëtext
"	PONCT.W	"
id="nom	ET	idçänom
"	PONCT.W	"
name="nomClient	ET	nameçnomclient
"	PONCT.W	"
données	VK.f.p	donner
sont	V.P.3.p	être
value="votre	ET	valueçävotre
nom	N.C.m.s	nom
"	PONCT.W	"
size="40	D.card.m.p	<unknown>
"	PONCT.W	"
maxlength="150	ET	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	N.P.x.s	<unknown>
envoyées	VK.f.p	envoyer
<label>	ET	çlabelà
Produit</label>	N.P.x.s	<unknown>
input	ET	input
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
<select	N.P.m.s	<unknown>
name="produit">	ET	nameäproduitäë
Zone	N.P.f.s	Zone
de	P	de
saisie	N.C.f.s	saisie
<op	N.P.m.s	<unknown>
-on	CL.suj.3.m.s	on
value="SuperKdo">	V.P.3.s	<unknown>
Super	N.P.m.s	Super
Kdo</op-on>	N.P.x.s	Kdoëoop-Onç
<op	N.P.m.s	<unknown>
-on	CL.suj.3.m.s	on
value="MegaTruc">	V.P.3.s	<unknown>
Mega	N.P.m.s	Mega
Truc</op-on>	N.P.x.s	Trucçoop-Onç
select	V.P.3.s	<unknown>
…	N.P.x.s	…
op	ET	op
-on	CL.suj.3.m.s	on
<op	V.P.3.s	colper
-on	CL.suj.3.m.s	on
value="BabyFun">	ET	<unknown>
Baby	N.P.m.s	Baby
Fun</op-on>	N.P.x.s	Funçoop-Onç
Liste	N.P.m.s	Liste
de	P	de
sélec=on	N.C.f.s	sélecçon
</select>	N.P.x.s	<unknown>
<br/>	N.P.x.s	<unknown>
d'	P	de
op=ons	N.C.m.p	opçon
<label>	N.P.m.s	<unknown>
Opinion</label>	N.P.x.s	<unknown>
textarea	ET	textarea
<textarea	ET	<unknown>
name="opinionClient	A.qual.m.s	nameçopinionclient
"	PONCT.W	"
cols="40	N.C.m.s	<unknown>
"	PONCT.W	"
rows="5	ET	<unknown>
"	PONCT.W	"
>	V.P.3.s	être
Votre	D.poss.f.s	votre
opinion	N.C.f.s	opinion
sur	P	sur
nos	D.poss.m.p	notre
produits	N.C.m.p	produit
</textarea>	A.ind.m.p	<unknown>
Zone	N.P.f.s	Zone
de	P	de
texte	N.C.m.s	texte
<br/>	N.P.x.s	<unknown>
input	A.qual.m.s	input
type="submit	ET	<unknown>
"	PONCT.W	"
<input	ET	çinput
type="submit	ET	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
class="bouton	ET	classüëbouton
"	PONCT.W	"
/>	ET	<unknown>
Input	ET	input
type="reset	N.C.m.s	typeëereset
"	PONCT.W	"
<input	ET	çinput
type="reset	N.C.m.s	typeëereset
"	PONCT.W	"
value="Neeoyer	ET	<unknown>
"	PONCT.W	"
class="bouton	ET	classüëbouton
"	PONCT.W	"
/>	D.card.m.p	<unknown>
Boutons	N.C.m.p	bouton
d'	P	de
envoi	N.C.m.s	envoi
et	C.C	et
de	P	de
</form>	N.P.x.s	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
reset	V.P.3.s	resentir
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
82	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
&	PONCT.W	&
PHP	N.P.m.s	Php
•	P	à
Les	D.def.f.p	le
données	N.C.f.p	donnée
recueil	N.C.m.s	recueil
ies	VK.f.p	aller
dans	P	dans
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
sont	V.P.3.p	être
transmises	VK.f.p	transmettre
au	P+D.def.m.s	au
programme	N.C.m.s	programme
indiqué	VK.m.s	indiquer
dans	P	dans
ac-on=	N.C.m.s	ac-onç
…	N.C.m.s	…
•	N.C.m.s	•
Dans	P	dans
PHP	N.P.m.s	Php
,	PONCT.W	,
on	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
ces	D.dem.f.p	ce
données	N.C.f.p	donnée
grâce	N.C.f.s	grâce
à	P	à
deux	D.card.m.p	deux
tableaux	N.C.m.p	tableau
associa-fs	A.qual.m.p	<unknown>
spéciaux	A.qual.m.p	spécial
–	P	à
$_GET	N.P.m.s	<unknown>
è	P	è
<form	N.P.m.s	<unknown>
acBon=	N.C.m.s	acbonç
"	PONCT.W	"
…	P	à
"	PONCT.W	"
method="get	N.C.m.s	methodçëget
"	PONCT.W	"
>	N.C.m.s	>
•	N.C.m.s	•
$_GET["nom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
<input	N.P.m.s	<unknown>
…	P	à
name="nom	N.C.m.s	nameçnom
"	PONCT.W	"
/>	PONCT.W	<unknown>
–	P	à
$_POST	N.P.m.s	<unknown>
è	P	è
<form	N.P.m.s	<unknown>
acBon=	N.C.m.s	acbonç
"	PONCT.W	"
…	P	à
"	PONCT.W	"
method="post	N.C.m.s	methodçpost
"	PONCT.W	"
>	N.C.m.s	>
•	N.C.m.s	•
$_POST["nom	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
<input	N.P.m.s	<unknown>
…	P	à
name="nom	N.C.m.s	nameçnom
"	PONCT.W	"
/>	ET	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
83	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
&	PONCT.W	&
PHP	N.P.m.s	Php
<form	ET	fform
name="formClient	ET	<unknown>
"	PONCT.W	"
ac-on="coursPHP-7.php	ET	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
>	ET	>
<label	N.C.m.s	çlabel
for="nom">Nom</label>	ET	<unknown>
<input	ET	çinput
type="text	ET	typeëtext
"	PONCT.W	"
id="nom	ET	idçänom
"	PONCT.W	"
name="nomClient	A.qual.m.s	nameçnomclient
"	PONCT.W	"
value="votre	ET	valueçävotre
nom	ET	nom
"	PONCT.W	"
size="40	ET	<unknown>
"	PONCT.W	"
maxlength="150	ET	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	N.C.m.s	<unknown>
…	N.C.m.s	…
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
$_POST["nomClient	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$op	ET	çop
=	PONCT.W	=
$_POST["opinionClient	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$prod	N.P.m.s	<unknown>
=	PONCT.W	=
$_POST["produit	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Merci	N.P.m.s	<unknown>
de	P	de
votre	D.poss.m.s	votre
parBcipaBon	N.C.m.s	parbcipabon
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Votre	N.P.m.s	<unknown>
produit	N.C.m.s	produit
est	V.P.3.s	être
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$prod	N.P.m.s	<unknown>
</i>	N.P.x.s	<unknown>
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
Votre	D.poss.f.s	votre
opinion	N.C.f.s	opinion
est	V.P.3.s	être
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$op	N.P.m.s	<unknown>
</i>	N.P.x.s	<unknown>
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
84	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
&	PONCT.W	&
PHP	N.P.m.s	Php
•	P	à
Méthode	N.P.m.s	Méthode
GET	N.P.m.s	Get
–	N.C.m.s	–
Les	D.def.f.p	le
données	N.C.f.p	donnée
sont	V.P.3.p	être
envoyées	VK.f.p	envoyer
dans	P	dans
l'	D.def.m.s	le
URL	N.P.f.s	Url
du	P+D.def.m.s	du
programme	N.C.m.s	programme
–	N.P.m.s	–
Limitée	VK.f.s	limiter
à	P	à
256	D.card.m.p	@card@
octets	N.C.m.p	octet
<form	N.P.m.s	<unknown>
name="formGet	ET	<unknown>
"	PONCT.W	"
–	P	à
Déconseillé	N.C.m.s	déconseillé
ac-on="coursPHP-8.php	N.P.x.s	<unknown>
"	PONCT.W	"
method="GET">	A.ind.m.s	<unknown>
<label>Nom</label>	ET	<unknown>
<input	ET	çinput
type="text	ET	typeëtext
"	PONCT.W	"
name="client	ET	nameçclient
"	PONCT.W	"
size="20	N.C.m.s	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	N.P.x.s	<unknown>
<label>Mot	N.P.m.s	<unknown>
de	P	de
passe	V.P.3.s	passer
</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="password	ET	typeëppassword
"	PONCT.W	"
name="mdp	ET	<unknown>
"	PONCT.W	"
size="10"/>	N.C.m.s	<unknown>
<br/>	ET	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
<p>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
<i>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$_GET["client	N.P.f.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</i>	I	Iiië
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Man	N.P.m.s	Man
?	PONCT.S	?

>	P	à
uele	A.qual.f.s	uel
Kirsch	ET	kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
85	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
&	PONCT.W	&
PHP	N.P.m.s	Php
<form	ET	fform
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
ac-on="coursPHP-9.php	N.C.m.s	<unknown>
"	PONCT.W	"
method="POST">	N.P.m.s	Methodçëpostëë
<fieldset>	N.P.x.s	<unknown>
•	P	à
Exemple	N.C.m.s	exemple
<legend>	ET	<unknown>
Vos	N.P.m.s	Vos
données	N.C.f.p	donnée
</legend>	N.P.x.s	<unknown>
<label	N.P.m.s	<unknown>
>…</label>	N.P.x.s	<unknown>
<	ET	<
input	ET	input
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="nom	ET	nameçnom
"	PONCT.W	"
…	N.C.m.s	…
/>	N.C.m.p	<unknown>
<br/>	N.P.x.s	<unknown>
<label	N.P.m.s	<unknown>
>…</label>	N.P.x.s	<unknown>
<	ET	<
input	ET	input
type="email	N.C.m.s	typeëemail
"	PONCT.W	"
name="email	A.qual.m.s	nameçemail
"	PONCT.W	"
…	D.card.m.p	…
/><br/>	ET	<unknown>
<input	ET	çinput
type="radio	ET	typeçeradio
"	PONCT.W	"
name="sexe	ET	nameçsexe
"	PONCT.W	"
value="Homme	N.C.m.s	valueççhomme
"	PONCT.W	"
/>	ET	<unknown>
Homme	ET	homme
<input	ET	çinput
type="radio	ET	typeçeradio
"	PONCT.W	"
name="sexe	ET	nameçsexe
"	PONCT.W	"
value="Femme	N.C.m.s	valueëëfemme
"	PONCT.W	"
/>	D.card.m.p	<unknown>
Femme<br/>	N.C.m.p	<unknown>
</fieldset>	N.P.x.s	<unknown>
<fieldset>	N.P.x.s	<unknown>
<legend>	ET	<unknown>
Vos	D.poss.m.p	votre
produits	N.C.m.p	produit
</legend>	N.P.x.s	<unknown>
<label>…</label>	N.P.x.s	<unknown>
<select	ET	<unknown>
name="produit">	V.P.3.s	<unknown>
<op	V.P.3.s	colper
-on	CL.suj.3.m.s	on
value="SuperKdo">…</op-on>	V.P.3.s	<unknown>
<op	V.P.3.s	colper
-on	CL.suj.3.m.s	on
value="MegaTruc">	V.P.3.s	<unknown>
Mega	N.P.m.s	Mega
Truc</op-on>	N.P.x.s	Trucçoop-Onç
<op	N.P.m.s	<unknown>
-on	CL.suj.3.m.s	on
value="BabyFun">	V.P.3.s	<unknown>
…	P	à
</op-on>	N.P.x.s	<unknown>
</select>	N.P.x.s	<unknown>
<br/>	N.P.x.s	<unknown>
<label>…</label>	N.P.x.s	<unknown>
<textarea	N.P.x.s	<unknown>
name="opinion	N.C.f.s	nameççopinion
"	PONCT.W	"
…	N.C.m.s	…
>	N.C.m.s	>
…	N.C.m.s	…
</textarea>	ET	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
P	N.P.m.s	P
</	PONCT.W	<unknown>
inhe	A.qual.f.s	inhe
fieliro	V.F.3.s	<unknown>
d	P	d
-	PONCT.W	-
UP	N.P.m.s	Up
set	V.P.3.s	seoir
1	D.card.m.s	@card@
>	N.C.m.s	>
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
86	D.card.m.p	@card@
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
&	PONCT.W	&
PHP	N.P.m.s	Php
<body>	N.P.m.s	<unknown>
•	P	à
Exemple	N.C.m.s	exemple
<h1>Récapitula=f	N.P.m.s	<unknown>
</h1>	N.P.x.s	<unknown>
<ul>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Nom	N.P.m.s	Nom
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["nom	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Email	N.P.m.s	Email
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["email	N.C.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Sexe	N.P.m.s	Sexe
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["sexe	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Produit	N.C.m.s	produit
préféré	VK.m.s	préférer
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["produit	N.C.m.s	çäpostëëproduit
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Sugges	N.P.m.s	Sugges
-on	CL.suj.3.m.s	on
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["opinion	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</ul>	N.P.m.s	<unknown>
</body>	N.P.x.s	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
87	D.card.m.p	@card@
Informa=que	ET	informaëque
Modélisa=on	N.P.m.s	Modélisaçon
UML	N.P.m.s	Uml
Objec-fs	N.P.m.s	Objec-fs
de	P	de
la	D.def.f.s	le
séance	N.C.f.s	séance
:	PONCT.W	:
Instruc-ons	N.P.m.s	Instruc-Ons
de	P	de
contrôle	N.C.m.s	contrôle
en	P	en
PHP	N.P.m.s	Php
Fonc-ons	N.P.m.s	Fonc-ons
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
88	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	D.card.m.p	•
Instruc-ons	N.P.m.s	Instruc-Ons
de	P	de
contrôle	N.C.m.s	contrôle
–	D.card.m.p	–
Instruc=ons	V.Y.1.p	instruccer
pour	P	pour
gérer	VW	gérer
le	D.def.m.s	le
flot	N.C.m.s	flot
d'	P	de
exécu=on	N.C.f.s	exécuëon
–	P	à
Instruc-ons	N.P.m.s	Instruc-Ons
condi-onnelles	A.qual.f.p	condi-onnel
•	P	à
El	CL.suj.3.m.s	el
es	CL.obj.3.m.p	es
condi=onnent	V.P.3.p	condiçonner
l'	D.def.f.s	le
exécu=on	N.C.f.s	exécuëon
•	N.P.m.s	•
Semblables	N.C.m.p	semblable
à	P	à
un	D.ind.m.s	un
nœud	N.C.m.s	nüud
de	P	de
Décision	N.C.f.s	décision
(	PONCT.W	(
diagramme	N.C.m.s	diagramme
ac=vités	N.C.f.p	acçvité
)	PONCT.W	)
•	P	à
if	N.C.m.s	if
…	P	à
else	PPRO.3.f.s	<unknown>
…	P	à
,	PONCT.W	,
switch	N.C.m.s	switch
…	P	à
case	N.C.f.s	case
…	N.C.m.s	…
–	D.card.m.p	–
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.f.s	boucle
•	C.S	•
El	CL.suj.3.m.s	el
es	CL.obj.3.m.p	es
permesent	V.P.3.p	permeser
la	D.def.f.s	le
répé-	N.C.f.s	<unknown>
-on	CL.suj.3.m.s	on
d'	P	de
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
instruc=ons	N.C.m.p	instrucçon
•	P	à
for	N.C.m.s	for
…	N.C.m.s	…
,	PONCT.W	,
foreach	N.C.m.s	foreach
…	N.C.m.s	…
,	PONCT.W	,
while	N.C.m.s	while
…	N.C.m.s	…
,	PONCT.W	,
do	P	do
…	P+D.def.m.s	c
while	N.C.m.s	while
Manuele	A.qual.m.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
89	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	P	à
Instruc-ons	N.P.m.s	Instruc-Ons
condi-onnelles	A.qual.f.p	condi-onnel
if	ET	if
…	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
…	P	à
if	ET	if
(	PONCT.W	(
condiGon	N.C.m.s	condigon
)	PONCT.W	)
[	PONCT.W	[
condi=on	N.C.m.s	condiëon
VRAI	N.P.m.s	Vrai
]	PONCT.W	]
{	D.card.m.s	{
bloc	N.C.m.s	bloc
d'	P	de
instrucGons	N.C.m.p	instrucgon
si	ADV.-	si
vrai	A.qual.m.s	vrai
;	PONCT.W	;
}	P	à
Bloc	N.P.m.s	Bloc
else	PPRO.3.f.s	<unknown>
d'	P	de
instruc-ons	N.C.m.p	instruc-on
opGonnel	A.qual.m.s	opgonnel
si	ADV.-	si
vrai	A.qual.m.s	vrai
{	P	à
bloc	N.C.m.s	bloc
d'	P	de
instrucGons	N.C.m.p	instrucgon
si	ADV.-	si
faux	A.qual.m.p	faux
;	PONCT.W	;
}	N.C.m.s	}
[	PONCT.W	[
sinon	N.C.m.s	sinon
]	PONCT.W	]
Bloc	N.P.m.s	Bloc
if	N.P.m.s	If
(	PONCT.W	(
$qte	N.P.m.s	<unknown>
>=	P+D.def.m.s	çù
100	PRO.card.m.p	@card@
)	PONCT.W	)
d'	P	de
instruc-ons	N.C.m.p	instruc-on
{	P	à
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0.10	N.card.m.s	@card@
;	PONCT.W	;
/*	V.P.3.s	avoir
remise	V.P.3.s	remiser
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
offerte	VK.f.s	offrir
*/	C.C	ce
si	C.S	si
faux	A.qual.m.s	faux
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
une	D.ind.f.s	un
remise	N.C.f.s	remise
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	V.P.3.s	être
…	P+D.def.m.s	c
$remise	N.P.f.s	<unknown>
=	PONCT.W	=
0.05	N.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
une	D.ind.f.s	un
remise	N.C.f.s	remise
de	P	de
5	D.card.m.p	@card@
%	N.C.m.p	%
</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
}	P	à
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
90	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	P	à
Instruc-ons	V.Y.1.p	instruc-er
condi-onnelles	A.qual.f.p	condi-onnel
if	ET	if
…	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
…	V.P.3.s	être
–	N.C.m.s	–
Les	D.def.f.p	le
données	N.C.f.p	donnée
pour	P	pour
la	D.def.f.s	le
condi=on	N.C.f.s	condiëon
peuvent	V.P.3.p	pouvoir
venir	VW	venir
d'	P	de
un	D.ind.m.s	un
formulaire	A.qual.m.s	formulaire
formExemple11.html	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
coursPHP-11.php	ET	<unknown>
<form	ET	fform
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
$qte	N.P.m.s	<unknown>
=	PONCT.W	=
$_POST["qte	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
ac-on="coursPHP-11.php	N.C.m.s	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
$prixunit	N.C.m.s	<unknown>
=	PONCT.W	=
$_POST["prix	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
…	N.P.x.s	…
$remise	N.P.f.s	<unknown>
=	PONCT.W	=
0	PRO.card.m.s	@card@
;	PONCT.W	;
<select	N.P.m.s	<unknown>
name="prix">	ET	nameäçprixçë
<op	N.P.m.s	<unknown>
-on	CL.suj.3.m.s	on
value="10">	V.P.3.s	<unknown>
if	ET	if
(	PONCT.W	(
$qte	N.P.m.s	<unknown>
>=	P+D.def.m.s	çù
100	A.card.m.s	@card@
)	PONCT.W	)
Super	N.P.m.s	Super
Kdo	N.P.m.s	Kdo
-	PONCT.W	-
10€	D.card.m.p	10à
</op-on>	N.C.m.p	<unknown>
{	P	à
$remise	N.C.f.s	<unknown>
=	V.P.3.s	être
0.10	N.card.m.s	@card@
;	PONCT.W	;
/*	V.P.3.s	avoir
remise	V.P.3.s	remiser
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
offerte	VK.f.s	offrir
*/	C.C	ce
…	P	à
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
une	D.ind.f.s	un
remise	N.C.f.s	remise
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
</select>	N.P.x.s	<unknown>
}	N.C.m.s	}
…	P	à
<input	ET	çinput
type="number	N.C.m.s	typeëenumber
"	PONCT.W	"
size="10	A.qual.m.s	<unknown>
"	PONCT.W	"
$prix	N.P.m.s	<unknown>
=	V.P.3.s	être
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	ET	<unknown>
name="qte	N.C.m.s	<unknown>
"	PONCT.W	"
/>	N.P.x.s	<unknown>
-	PONCT.W	-
(	PONCT.W	(
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	N.C.m.s	<unknown>
*	N.C.m.s	*
$remise	N.P.f.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
…	ET	…
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
Pour	P	pour
un	D.ind.m.s	un
prix	N.C.m.s	prix
de	P	de
<i>	N.P.m.s	<unknown>
$prixunit	V.P.3.s	<unknown>
</i>	N.P.x.s	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Devis	VK.m.p	valueëdever
"	PONCT.W	"
/>	C.C	<unknown>
l'	D.def.f.s	le
unité	N.C.f.s	unité
et	C.C	et
<i>	N.P.x.s	<unknown>
$qte	N.P.x.s	<unknown>
</i>	N.P.x.s	<unknown>
unités	N.C.f.p	unité
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
à	P	à
</form>	N.P.x.s	<unknown>
régler	VW	régler
<i>	N.P.m.s	<unknown>
$prix	N.P.m.s	<unknown>
</i></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
91	D.card.m.p	@card@
PHP	N.P.m.s	Php
<form	ET	fform
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
ac-on="coursPHP-11.php	ET	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
<label>Produit	N.C.m.s	<unknown>
:	PONCT.W	:
</label>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
<select	A.qual.m.s	<unknown>
name="prix">	ET	nameäçprixçë
$qte	A.qual.m.s	<unknown>
=	PONCT.W	=
$_POST["qte	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
<op	V.P.3.s	colper
-on	CL.suj.3.m.s	on
value="10	V.P.3.s	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
Super	N.P.m.s	Super
…	P	à
</op-on>	N.P.m.s	<unknown>
$prixunit	N.P.x.s	<unknown>
=	PONCT.W	=
$_POST["prix	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
…	ET	…
</select>	N.P.x.s	<unknown>
<br/>	N.P.x.s	<unknown>
$remise	N.P.x.s	<unknown>
=	PONCT.W	=
0	D.card.m.s	@card@
;	PONCT.W	;
<label	N.C.m.s	çlabel
>Quan=té	N.P.x.s	<unknown>
:	PONCT.W	:
</label>	N.P.m.s	<unknown>
…	N.C.m.p	…
.	PONCT.S	.

<input	N.C.m.s	<unknown>
name="qte	A.ind.m.s	<unknown>
"	PONCT.W	"
type="number	N.C.m.s	typeëenumber
"	PONCT.W	"
if	ET	if
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
>=	P+D.def.m.s	çù
100	A.card.m.s	@card@
)	PONCT.W	)
size="10	N.C.m.s	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	N.P.x.s	<unknown>
{	P	à
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0.10	PRO.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
…	ADV.-	à
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Devis	VK.m.p	valueëdever
"	PONCT.W	"
/>	N.C.m.p	<unknown>
}	N.C.m.s	}
</form>	N.P.x.s	<unknown>
…	N.C.m.s	…
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
92	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P	à
Instruc-ons	V.Y.1.p	instruc-er
condi-onnelles	A.qual.f.p	condi-onnel
if	ET	if
…	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
…	V.P.3.s	être
–	P	à
Les	D.def.m.p	le
blocs	N.C.m.p	bloc
if	A.qual.m.s	if
…	P	à
else	CL.suj.3.f.s	else
…	CL.obj.3.m.s	c
peuvent	V.P.3.p	pouvoir
contenir	VW	contenir
n'	ADV.neg	ne
importe	V.P.3.s	importer
quel	A.int.m.s	quel
e	PONCT.W	e
instruc=on	N.C.m.s	instrucçon
,	PONCT.W	,
y	CL.obj.3.m.s	y
compris	VK.m.s	comprendre
d'	D.ind.m.p	de
autres	A.ind.m.p	autre
blocs	N.C.m.p	bloc
if	A.qual.m.s	if
…	P	à
else	PPRO.3.f.s	<unknown>
…	P	à
if	N.C.m.s	if
(	PONCT.W	(
condiGon1	N.C.f.s	<unknown>
)	PONCT.W	)
{	D.card.m.s	{
bloc	N.C.m.s	bloc
d'	P	de
instrucGons	N.C.m.p	instrucgon
si	ADV.-	si
condiGon1	N.C.f.s	<unknown>
vraie	A.qual.f.s	vrai
;	PONCT.W	;
}	P	à
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
condi-on2	N.C.m.s	<unknown>
)	PONCT.W	)
{	D.card.m.s	{
bloc	N.C.m.s	bloc
d'	P	de
instrucGons	N.C.m.p	instrucgon
si	ADV.-	si
condiGon2	N.C.f.s	<unknown>
vraie	A.qual.f.s	vrai
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
bloc	N.C.m.s	bloc
d'	P	de
instrucGons	N.C.m.p	instrucgon
si	C.S	si
les	D.def.m.p	le
condiGons	N.C.m.p	condigon
sont	V.P.3.p	être
fausses	A.qual.m.p	faux
;	PONCT.W	;
}	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
93	D.card.m.p	@card@
PHP	N.C.m.p	php
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$qte	A.qual.m.s	<unknown>
=	PONCT.W	=
$_POST["qte	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$prixunit	V.P.3.s	<unknown>
=	PONCT.W	=
$_POST["prix	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
>=	P+D.def.m.s	çù
100	A.card.m.s	@card@
)	PONCT.W	)
{	P+D.def.m.s	c
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0.10	N.card.m.s	@card@
;	PONCT.W	;
}	ET	}
<form	ET	fform
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
elseif	N.P.m.s	<unknown>
(	PONCT.W	(
$qte	N.P.m.s	<unknown>
>=	P+D.def.m.s	çù
50	A.card.m.s	@card@
)	PONCT.W	)
ac-on="coursPHP-12.php	ET	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
{	N.C.m.s	{
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0.05	N.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
…	N.C.m.s	…
<select	N.C.m.s	<unknown>
name="prix">	ET	nameäçprixçë
…	P	à
</select>	N.P.x.s	<unknown>
else	PPRO.3.f.s	<unknown>
…	V.P.3.s	être
{	P+D.def.m.s	c
$remise	N.P.f.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
}	ET	}
<input	N.C.m.s	<unknown>
type="number	N.C.m.s	typeëenumber
"	PONCT.W	"
…	P	à
name="qte"/>	N.C.m.s	<unknown>
…	P	à
$prix	N.P.m.s	<unknown>
=	V.P.3.s	être
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	ET	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Devis	VK.m.p	valueëdever
"	PONCT.W	"
/>	N.P.x.s	<unknown>
-	PONCT.W	-
(	PONCT.W	(
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	N.P.x.s	<unknown>
*	N.C.m.s	*
$remise	N.P.f.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
</form>	ET	foformë
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
Prix	N.C.m.s	prix
unitaire	A.qual.m.s	unitaire
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$prixunit	V.P.3.s	<unknown>
</i>	N.P.x.s	<unknown>
,	PONCT.W	,
QuanBté	N.P.x.s	Quanbté
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$qte	N.P.x.s	<unknown>
</i>	N.P.x.s	<unknown>
,	PONCT.W	,
Remise	N.P.f.s	Remise
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$remise*100	N.C.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</i>	D.card.m.p	<unknown>
%	N.C.m.p	%
</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p><i>Total	N.P.m.s	<unknown>
à	P	à
régler	VW	régler
:	PONCT.W	:
</i>	N.P.m.s	<unknown>
<b>	N.P.m.s	<unknown>
$prix	N.P.m.s	<unknown>
</b></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Manuele	A.qual.f.s	manuel
Kirsch	N.P.x.s	Kirsch
?	PONCT.S	?

Pi	C.S	pi
>	N.C.m.s	>
n	N.C.m.s	n
heiro	N.C.m.s	heiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
94	D.card.m.p	@card@
PHP	N.C.m.p	php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
for	N.C.m.s	for
–	P	à
La	D.def.f.s	le
boucle	A.qual.f.s	boucle
for	N.C.m.s	for
permet	V.P.3.s	permettre
de	P	de
répéter	VW	répéter
(	PONCT.W	(
un	D.ind.m.s	un
certain	A.ind.m.s	certain
nombre	N.C.m.s	nombre
de	P	de
fois	N.C.f.p	foi
)	PONCT.W	)
l'	D.def.f.s	le
exécu=on	N.C.f.s	exécuëon
d'	P	de
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
instruc=ons	N.C.m.p	instrucçon
for	A.qual.m.s	for
(	PONCT.W	(
iniGalisaGon	N.C.m.s	inigalisagon
;	PONCT.W	;
condiGon	N.C.m.s	condigon
;	PONCT.W	;
incrémentaGon	N.C.m.s	incrémentagon
)	PONCT.W	)
{	D.card.m.s	{
bloc	N.C.m.s	bloc
d'	P	de
instrucGons	N.C.m.p	instrucgon
à	P	à
répéter	VW	répéter
;	PONCT.W	;
}	N.C.m.s	}
[	PONCT.W	[
i	ADV.-	i
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
]	PONCT.W	]
$i	V.P.3.s	cevoir
=	V.P.3.s	être
1	D.card.m.s	@card@
echo	N.C.m.s	echo
…	P	à
i++	N.C.m.s	iu
[	PONCT.W	[
else	PPRO.3.f.s	<unknown>
]	PONCT.W	]
la	D.def.f.s	le
suite	N.C.f.s	suite
…	P	à
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.qual.m.s	ci
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$i++	N.C.m.s	çiu
è	P	è
$i	N.C.m.s	çi
=	V.P.3.s	être
$i	N.C.m.s	çi
1	D.card.m.s	@card@
}	N.C.m.s	}
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
95	D.card.m.p	@card@
PHP	N.C.m.p	php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
for	A.qual.m.s	for
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
for	A.qual.m.s	for
(	PONCT.W	(
$i	N.C.m.s	çi
=	P	à
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.qual.m.s	ci
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
96	D.card.m.p	@card@
PHP	N.C.m.p	php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
while	N.C.m.s	while
–	P	à
La	D.def.f.s	le
boucle	A.qual.f.s	boucle
while	N.C.m.s	while
permet	V.P.3.s	permettre
de	P	de
con=nuer	VW	conänuer
à	P	à
réaliser	VW	réaliser
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
opéra=ons	N.C.m.p	opéraçon
tant	ADV.-	tant
qu'	C.S	que
une	D.ind.f.s	un
condi	N.C.f.s	condi
-on	CL.suj.3.m.s	on
soit	V.S.3.s	être
vraie	A.qual.f.s	vrai
[	PONCT.W	[
i	ADV.-	i
<=	N.card.m.s	<unknown>
6	A.card.m.s	@card@
]	PONCT.W	]
$i	V.P.3.s	cevoir
=	V.P.3.s	être
1	D.card.m.s	@card@
echo	N.C.m.s	echo
…	N.C.m.s	…
$i	N.C.m.s	çi
=	P	à
$i	N.C.m.s	çi
1	N.card.m.s	@card@
;	PONCT.W	;
[	PONCT.W	[
else	PPRO.3.f.s	<unknown>
]	PONCT.W	]
la	D.def.f.s	le
suite	N.C.f.s	suite
…	P	à
$i	N.C.m.s	çi
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$i	N.C.f.s	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.ind.m.s	çi
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$i	N.P.m.s	<unknown>
=	V.P.3.s	être
$i	N.C.m.s	çi
1	A.card.m.s	@card@
;	PONCT.W	;
}	ET	}
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
97	D.card.m.p	@card@
PHP	N.C.m.p	php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
while	N.C.m.s	while
On	CL.suj.3.m.s	on
donne	V.P.3.s	donner
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
ini-ale	A.qual.f.s	ini-al
à	P	à
la	D.def.f.s	le
variable	N.C.f.s	variable
$i	N.P.f.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$i	A.qual.m.s	ci
=	P	à
1	N.card.m.s	@card@
;	PONCT.W	;
Tant	ADV.-	tant
que	C.S	que
$i	N.C.m.s	çi
ne	ADV.neg	ne
dépasse	V.P.3.s	dépasser
while	N.C.m.s	while
(	PONCT.W	(
$i	ADV.-	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
)	PONCT.W	)
{	P	à
pas	ADV.neg	pas
la	D.def.f.s	le
valeur	N.C.f.s	valeur
6	D.card.m.p	@card@
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.qual.m.s	ci
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$i	N.P.m.s	<unknown>
=	V.P.3.s	être
$i	N.C.m.s	çi
1	A.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
On	CL.suj.3.m.s	on
met	V.P.3.s	mettre
à	P	à
jour	N.C.m.s	jour
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
$i	N.P.m.s	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
98	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
foreach	N.C.m.s	foreach
–	P	à
La	D.def.f.s	le
boucle	N.C.f.s	boucle
foreach	N.P.m.s	Foreach
permet	V.P.3.s	permettre
de	P	de
répéter	VW	répéter
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
instruc=ons	N.C.m.p	instrucçon
pour	P	pour
chaque	D.ind.f.s	chaque
valeur	N.C.f.s	valeur
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
[	PONCT.W	[
reste	V.P.3.s	rester
-t-il	CL.suj.3.m.s	il
une	D.ind.f.s	un
$-tre	N.C.f.s	--tre
reçoit	V.P.3.s	recevoir
la	D.def.f.s	le
$tableau	A.qual.f.s	<unknown>
valeur	N.C.f.s	valeur
?	PONCT.S	?

]	PONCT.W	]
prochaine	A.qual.f.s	prochain
valeur	N.C.f.s	valeur
echo	ADV.-	echo
…	N.C.m.s	…
[	PONCT.W	[
plus	ADV.-	plus
de	P	de
valeur	N.C.f.s	valeur
dans	P	dans
le	D.def.m.s	le
tableau	N.C.m.s	tableau
]	PONCT.W	]
la	D.def.f.s	le
suite	N.C.f.s	suite
…	P	à
foreach	N.C.m.s	foreach
(	PONCT.W	(
$tableau	N.C.m.s	<unknown>
as	ET	as
$-tre	N.C.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<$-tre>	N.P.m.s	<unknown>
Titre	N.C.m.s	titre
$-tre	N.C.m.s	<unknown>
</$-tre>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
99	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
foreach	ET	foreach
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
On	CL.suj.3.m.s	on
définit	V.P.3.s	définir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
$tableau	A.qual.m.s	<unknown>
=	PONCT.W	=
array("h1	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h2	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h3	N.C.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h4	ET	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h5	N.C.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h6	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach	ET	foreach
(	PONCT.W	(
$tableau	N.C.m.s	<unknown>
as	ET	as
$-tre	N.C.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<$-tre>	N.P.m.s	<unknown>
Titre	N.C.m.s	titre
$-tre	N.C.m.s	<unknown>
Pour	P	pour
chaque	D.ind.f.s	chaque
valeur	N.C.f.s	valeur
</$-tre>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
dans	P	dans
le	D.def.m.s	le
tableau	N.C.m.s	tableau
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
100	D.card.m.p	@card@
PHP	N.C.m.p	php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
foreach	N.C.m.s	foreach
–	N.C.m.s	–
ça	PRO.dem.m.s	cela
fonc=onne	V.P.3.s	foncçonner
aussi	ADV.-	aussi
pour	P	pour
les	D.def.m.p	le
tableaux	N.C.m.p	tableau
associa=fs	A.qual.m.p	associaëf
On	CL.suj.3.m.s	on
définit	V.P.3.s	définir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associa=f	A.qual.m.s	associaëf
:	PONCT.W	:
clé	N.C.f.s	clé
=>	D.card.f.p	<unknown>
valeur	N.C.f.s	valeur
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tableau	A.qual.m.s	<unknown>
=	PONCT.W	=
array	N.C.m.s	array
(	PONCT.W	(
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
prenom	N.C.m.s	prenom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
adresse	N.C.f.s	adresse
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
qq	A.card.f.s	<unknown>
part	V.P.3.s	partir
à	P	à
Paris	N.P.m.s	Paris
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
Pour	P	pour
chaque	D.ind.m.s	chaque
pair	N.C.m.s	pair
foreach	A.qual.m.s	foreach
(	PONCT.W	(
$tableau	N.C.m.s	<unknown>
as	ET	as
$cle=>$valeur	N.P.x.s	<unknown>
)	PONCT.W	)
{	P	à
$clé	N.C.m.s	<unknown>
=>	ET	çù
$valeur	N.C.f.s	çvaleur
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
$cle	ET	ccle
:	PONCT.W	:
$valeur	N.C.f.s	çvaleur
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
dans	P	dans
$tableau	N.C.m.s	<unknown>
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
101	D.card.m.p	@card@
PHP	N.C.m.p	php
•	D.card.m.p	•
Instruc-ons	N.C.m.p	instruc-on
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
boucles	N.C.f.p	boucle
imbriquées	VK.f.p	imbriquer
–	P	à
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
d'	P	de
imbriquer	VW	imbriquer
des	D.ind.f.p	du
boucles	N.C.f.p	boucle
les	D.def.f.p	le
unes	PRO.ind.f.p	un
dans	P	dans
les	D.def.m.p	le
autres	A.ind.m.p	autre
<table>	N.C.f.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
for	A.qual.m.s	for
(	PONCT.W	(
$lin	N.C.m.s	çlin
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
$lin	N.C.m.s	çlin
<=	P+D.def.m.s	çù
9	A.card.m.s	@card@
;	PONCT.W	;
$lin++	N.P.x.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<tr>	A.qual.m.s	<unknown>
”	N.C.m.s	”
;	PONCT.W	;
for	N.C.m.s	for
(	PONCT.W	(
$col	N.C.m.s	ccol
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
$col	N.C.m.s	ccol
<=	P+D.def.m.s	çù
9	A.card.m.s	@card@
;	PONCT.W	;
$col++	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

(	PONCT.W	(
$col	N.C.m.s	ccol
*	N.C.m.s	*
$lin	N.C.m.s	çlin
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
</tr>	N.P.f.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.p	}
?	PONCT.S	?

>	P	à
</table>	N.C.m.s	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
102	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P	à
Fonc-ons	N.P.m.s	Fonc-ons
–	P	à
PHP	N.P.m.s	Php
offre	V.P.3.s	offrir
une	D.ind.f.s	un
large	A.qual.f.s	large
panoplie	N.C.f.s	panoplie
de	P	de
fonc=ons	N.C.m.p	foncçon
•	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
isset($var)	N.C.m.s	issetçëvarç
à	P	à
TRUE	N.P.x.s	True
si	C.S	si
$var	N.P.m.s	<unknown>
est	V.P.3.s	être
connue	VK.f.s	connaître
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
:	PONCT.W	:
empty($var)	N.C.m.s	emptyçüvarà
à	P	à
TRUE	N.P.x.s	True
si	C.S	si
$var	N.P.x.s	<unknown>
est	V.P.3.s	être
vide	A.qual.m.s	vide
(	PONCT.W	(
ou	C.C	ou
vaut	V.P.3.s	valoir
0	N.card.m.s	@card@
)	PONCT.W	)
–	C.S	–
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
écrire	VW	écrire
les	D.def.m.p	le
nôtres	PRO.poss.m.p	nôtre
(	PONCT.W	(
même	ADV.-	même
en	P	en
dehors	N.C.m.p	dehors
des	D.ind.f.p	du
classes	N.C.f.p	classe
)	PONCT.W	)
•	CL.obj.3.m.s	c
func	ET	func
-on	CL.suj.3.m.s	on
nomFonc	ET	<unknown>
-on	CL.suj.3.m.s	on
(	PONCT.W	(
$paramètre	N.C.m.s	çparamètre
,	PONCT.W	,
…	N.C.m.s	…
)	PONCT.W	)
{	D.card.m.p	{
instruc-ons	N.C.m.p	instruc-on
}	P	à
func	N.C.m.s	func
-on	CL.suj.3.m.s	on
saluta	V.J.3.s	saluter
-on	CL.suj.3.m.s	on
(	PONCT.W	(
$nom	N.C.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<h1>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p	P	àp
class=droite>Aujourd'hui	N.C.m.s	class-droite-aujourd'hu
,	PONCT.W	,
nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
le	D.def.m.s	le
"	PONCT.W	"
.date('d	N.C.m.s	edete-ded
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
103	D.card.m.p	@card@
<	N.C.m.p	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
PHP	N.P.m.s	Php
…	N.C.m.s	…
func	ET	func
-on	CL.suj.3.m.s	on
saluta	V.J.3.s	saluter
-on	CL.suj.3.m.s	on
(	PONCT.W	(
$nom	N.C.m.s	<unknown>
)	PONCT.W	)
{	ET	{
<form	ET	fform
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
date_default_-mezone_set("Europe/Paris")	N.P.m.s	<unknown>
;	PONCT.W	;
ac-on="coursPHP-15.php	N.C.m.s	<unknown>
"	PONCT.W	"
>	D.card.m.s	>
<label	N.C.m.s	çlabel
>Nom	N.P.m.s	<unknown>
:	PONCT.W	:
</label>	N.P.m.s	<unknown>
echo	ET	echo
"	PONCT.W	"
<h1>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="client	ET	nameçclient
"	PONCT.W	"
echo	N.C.m.s	echo
"	PONCT.W	"
<p	P	àp
class=droite>Aujourd'hui	N.C.m.s	class-droite-aujourd'hu
…	N.C.m.s	…
"	PONCT.W	"
size="25"/>	N.C.m.p	<unknown>
.	PONCT.S	.

date('d	ADV.-	dateë'd
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
…	ET	…
}	ET	}
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="OK	N.C.f.s	valueççok
"	PONCT.W	"
/>	ET	<unknown>
</form>	N.P.x.s	<unknown>
if	ET	if
(	PONCT.W	(
isset	A.qual.m.s	isset
(	PONCT.W	(
$_POST["client	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
AND	I	and
!	PONCT.S	!

empty	ET	empty
(	PONCT.W	(
$_POST["client	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	P	à
saluta	V.J.3.s	saluter
-on	CL.suj.3.m.s	on
(	PONCT.W	(
$_POST["client	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
;	PONCT.W	;
}	P	à
else	CL.suj.3.f.s	else
{	P	à
saluta	V.J.3.s	saluter
-on	CL.suj.3.m.s	on
(	PONCT.W	(
"	PONCT.W	"
cher	A.qual.m.s	cher
client	N.C.m.s	client
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
104	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P	à
Importa	N.P.m.s	Importa
-on	CL.suj.3.m.s	on
des	D.ind.m.p	du
fichiers	N.C.m.p	fichier
•	P	à
Incorporer	VW	incorporer
le	D.def.m.s	le
contenu	N.C.m.s	contenu
d'	P	de
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
dans	P	dans
une	D.ind.f.s	un
page	N.C.f.s	page
PHP	N.P.m.s	Php
•	N.C.m.s	•
But	N.P.m.s	But
:	PONCT.W	:
réu=lisa=on	N.C.f.s	réuëlisaëon
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
,	PONCT.W	,
uniformisa=on	N.C.f.s	<unknown>
du	P+D.def.m.s	du
site	N.C.m.s	site
–	P	à
include	N.C.m.s	include
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
et	C.C	et
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
•	N.C.m.s	•
include	N.C.m.s	include
remplace	V.P.3.s	remplacer
la	D.def.f.s	le
ligne	N.C.f.s	ligne
par	P	par
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
•	P	à
include_once	N.P.x.s	<unknown>
fait	V.P.3.s	faire
ça	PRO.dem.m.s	cela
une	D.ind.f.s	un
seule	A.ind.f.s	seul
fois	N.C.f.s	foi
(	PONCT.W	(
même	ADV.-	même
dans	P	dans
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
)	PONCT.W	)
–	P	à
require	VW	require
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
et	C.C	et
require_once	N.C.m.s	requireçonce
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
•	N.C.m.s	•
idem	N.C.m.s	idem
include	V.P.3.s	includer
,	PONCT.W	,
mais	C.C	mais
si	C.S	si
le	D.def.m.s	le
fichier	N.C.m.s	fichier
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
,	PONCT.W	,
on	CL.suj.3.m.s	on
a	V.P.3.s	avoir
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
105	D.card.m.p	@card@
PHP	N.C.m.p	php
<meta	N.P.m.s	<unknown>
charset="UTF-8	A.qual.m.s	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<head>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
…	P	à
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
head.html	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
<=tle>Mon	N.P.m.s	<unknown>
site</=tle>	N.P.x.s	<unknown>
require	VW	require
"	PONCT.W	"
mesfonc-ons.php	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
<link	N.P.m.s	<unknown>
rel="stylesheet	N.C.m.s	<unknown>
"	PONCT.W	"
</head>	N.P.m.s	<unknown>
<body>	N.P.m.s	<unknown>
href="css/blocs.css	N.C.m.p	<unknown>
"	PONCT.W	"
/>	P	àà
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
headerNav.html	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
…	P	à
<header>	N.P.m.s	<unknown>
<h1>Mon	N.P.m.s	<unknown>
site</h1>	A.ind.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
</header>	N.P.x.s	<unknown>
<nav>	ET	änavä
saluta	V.J.3.s	saluter
-on	CL.suj.3.m.s	on
(	PONCT.W	(
"	PONCT.W	"
cher	A.qual.m.s	cher
client	N.C.m.s	client
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
<h2>Exemples	N.C.m.p	çhcexemple
</h2>	N.P.x.s	<unknown>
?	PONCT.S	?

>	P	à
<ul>	N.C.m.p	çulà
<ar=cle>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
<li>…</li>	N.P.x.s	<unknown>
<h2>	N.P.x.s	<unknown>
News	ET	new
</h2>	ET	<unknown>
func	ET	func
-on	CL.suj.3.m.s	on
saluta	V.J.3.s	saluter
-on	CL.suj.3.m.s	on
(	PONCT.W	(
$nom	N.C.m.s	<unknown>
)	PONCT.W	)
{	P	à
…	P	à
<p>	N.C.m.s	<unknown>
…	P	à
</p>	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
<p	P	àp
class=droite><b>Bienvenue	N.C.f.s	class-droite-bienvenue
,	PONCT.W	,
</ul>	N.P.f.s	<unknown>
</ar=cle>	N.P.x.s	<unknown>
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</b></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
</nav>	N.P.x.s	<unknown>
…	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<p	P	àp
class=droite>Aujourd'hui	N.C.m.s	class-droite-aujourd'hu
,	PONCT.W	,
nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
le	D.def.m.s	le
"	PONCT.W	"
.date('d	N.C.m.s	edete-ded
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
?	PONCT.S	?

>	N.C.m.s	>
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
106	D.card.m.p	@card@
PHP	N.P.m.s	Php
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
head.html	ET	<unknown>
"	PONCT.W	"
<head>	N.P.m.s	<unknown>
…	ET	…
<-tle>Mon	N.P.m.s	<unknown>
site</-tle>	N.P.x.s	<unknown>
<link	ET	çlink
rel="stylesheet	ET	<unknown>
"	PONCT.W	"
href="css/blocs.css	N.C.m.p	<unknown>
"	PONCT.W	"
/>	P	àà
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<header>	N.P.m.s	<unknown>
<h1>Mon	N.P.m.s	<unknown>
site</h1>	N.P.x.s	<unknown>
</header>	N.P.m.s	<unknown>
<nav>	N.P.m.s	<unknown>
<h2>Exemples	N.C.m.p	çhcexemple
</h2>	ET	<unknown>
include_once	ET	includeçonce
"	PONCT.W	"
headerNav.html	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
<ul>	N.P.x.s	<unknown>
<li>…</li>	N.P.x.s	<unknown>
…	P	à
</ul>	N.P.x.s	<unknown>
require	VW	require
"	PONCT.W	"
mesfonc-ons.php	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
</nav>	N.P.x.s	<unknown>
saluta	V.J.3.s	saluter
-on	CL.suj.3.m.s	on
(	PONCT.W	(
"	PONCT.W	"
cher	A.qual.m.s	cher
client	N.C.m.s	client
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
<sec=on>	N.P.m.s	<unknown>
<p	P	àp
class=droite><b>Bienvenue	VK.f.s	class-droiteçbienvenir
,	PONCT.W	,
cher	A.qual.m.s	cher
client	N.C.m.s	client
!	PONCT.S	!

</b></p><p	N.P.x.s	<unknown>
class=droite>Aujourd'hui	ADV.-	class-droite-aujourd'hi
,	PONCT.W	,
nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
le	D.def.m.s	le
22/	A.card.m.s	@card@
03	A.card.m.s	@card@
/	C.C	@card@
2014	D.card.m.p	@card@
</p>	N.C.m.p	<unknown>
…	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
107	D.card.m.p	@card@
Informa=que	ET	informaëque
Modélisa=on	N.P.m.s	Modélisaçon
UML	N.P.m.s	Uml
Objec-fs	N.C.m.p	objec-f
de	P	de
la	D.def.f.s	le
séance	N.C.f.s	séance
:	PONCT.W	:
PHP	N.P.m.s	Php
&	PONCT.W	&
les	D.def.f.p	le
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
108	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	P+D.def.m.s	c
Accès	N.C.m.s	accès
aux	P+D.def.f.p	au
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
à	P	à
par-r	P	<unknown>
de	P	de
PHP	N.P.m.s	Php
–	P	à
PHP-MySQL	N.P.m.s	Php-Mysql
sont	V.P.3.p	être
très	ADV.-	très
u=lisés	VK.m.p	uëliser
pour	P	pour
les	D.def.m.p	le
sites	N.C.m.p	site
Web	N.P.m.s	Web
–	N.P.m.s	–
Différents	A.qual.m.p	différent
«	C.C	c
bibliothèques	N.C.f.p	bibliothèque
»	P	à
disponibles	N.C.m.p	disponible
•	P+D.def.m.s	c
mysqli	N.C.m.s	<unknown>
et	C.C	et
PDO	N.P.x.s	Pdo
•	D.card.f.p	•
Etapes	N.C.f.p	etape
pour	P	pour
l'	CL.obj.3.f.s	la
u-liser	VW	u-liser
une	D.ind.f.s	un
base	N.C.f.s	base
des	P+D.def.f.p	du
données	N.C.f.p	donnée
1	A.card.f.s	@card@
)	PONCT.W	)
connexion	N.C.f.s	connexion
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
MySQL	N.P.m.s	Mysql
2	A.card.m.s	@card@
)	PONCT.W	)
envoi	V.P.3.s	<unknown>
des	D.ind.f.p	du
requêtes	N.C.f.p	requête
SQL	N.P.m.s	Sql
(	PONCT.W	(
select	N.C.m.s	select
,	PONCT.W	,
insert	A.qual.m.s	insert
into	ET	into
…	N.P.x.s	…
)	PONCT.W	)
3	A.card.m.s	@card@
)	PONCT.W	)
récupéra=on	V.P.3.s	<unknown>
des	P+D.def.m.p	du
résultats	N.C.m.p	résultat
4	N.card.f.s	@card@
)	PONCT.W	)
fermeture	V.P.3.s	fermeturer
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
109	D.card.m.p	@card@
PHP	N.P.m.s	Php
•	P+D.def.m.s	c
Connexion	N.C.f.s	connexion
à	P	à
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
MySQL	N.P.m.s	Mysql
à	P	à
travers	N.C.m.p	travers
mysqli	N.C.m.s	<unknown>
–	P	à
Toute	A.ind.f.s	tout
la	D.def.f.s	le
communica=on	N.C.f.s	communicaëon
avec	P	avec
la	D.def.f.s	le
BdD	N.P.f.s	Bdd
passe	V.P.3.s	passer
par	P	par
un	D.ind.m.s	un
objet	N.C.m.s	objet
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
«	P	à
mysqli	N.C.m.s	<unknown>
»	N.C.m.s	»
–	N.C.m.s	–
La	D.def.f.s	le
connexion	N.C.f.s	connexion
s'	CL.refl.3.f.s	se
effectue	V.P.3.s	effectuer
à	P	à
la	D.def.f.s	le
créa	N.C.f.s	créa
-on	CL.suj.3.m.s	on
de	P	de
cet	D.dem.m.s	ce
objet	N.C.m.s	objet
(	PONCT.W	(
new	ET	new
)	PONCT.W	)
$idcon	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$	P	à
host	N.C.m.s	host
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
obj	ET	obj
nom	N.C.m.s	nom
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
base	A.qual.m.s	bas
de	P	de
données	N.C.f.p	donnée
et	C.C	et
idenBfiant	VG	idenbfier
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
uBlisateur	N.C.m.s	ublisateur
autorisé	VK.m.s	autoriser
à	P	à
accéder	VW	accéder
à	P	à
la	D.def.f.s	le
base	N.C.f.s	base
•	A.qual.f.s	•
Toute	D.ind.f.s	tout
connexion	N.C.f.s	connexion
ouverte	A.qual.f.s	ouvert
doit	V.P.3.s	devoir
être	VW	être
fermée	VK.f.s	fermer
$bool	N.P.x.s	<unknown>
=	PONCT.W	=
$idcon->close	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
on	CL.suj.3.m.s	on
demande	V.P.3.s	demander
à	P	à
l'	D.def.m.s	le
objet	N.C.m.s	objet
mysqli	A.qual.m.s	<unknown>
de	P	de
fermer	VW	fermer
la	D.def.f.s	le
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
connexion	N.C.f.s	connexion
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
110	D.card.m.p	@card@
PHP	N.C.m.p	php
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$host	ET	çhost
=	PONCT.W	=
"	PONCT.W	"
localhost	ET	localhost
"	PONCT.W	"
;	PONCT.W	;
$user	VW	çuser
=	PONCT.W	=
"	PONCT.W	"
root	N.C.m.s	root
"	PONCT.W	"
;	PONCT.W	;
Astuce	N.P.m.s	Astuce
:	PONCT.W	:
placer	VW	placer
ces	D.dem.m.p	ce
informa=ons	N.C.m.p	informaçon
dans	P	dans
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
$mdp	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
root	N.C.m.s	root
"	PONCT.W	"
;	PONCT.W	;
et	C.C	et
faire	VW	faire
require	VW	require
(	PONCT.W	(
ou	C.C	ou
include	N.C.m.s	include
)	PONCT.W	)
"	PONCT.W	"
fichier	N.C.m.s	fichier
"	PONCT.W	"
$bdd	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
clientsBD	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Créa=on	N.C.m.s	créaçon
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$host	N.P.m.s	<unknown>
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.P.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
connexion	N.C.f.s	connexion
if	ET	if
(	PONCT.W	(
$mysqli->connect_errno	N.P.x.s	<unknown>
)	PONCT.W	)
{	P	à
L'	D.def.m.s	le
asribut	N.C.m.s	<unknown>
connect_errno	ET	<unknown>
die	VK.f.s	dire
(	PONCT.W	(
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Impossible	A.qual.m.s	impossible
de	P	de
connecter	VW	connecter
à	P	à
$bdd	N.P.m.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
de	P	de
indique	N.C.f.s	indique
si	C.S	si
la	D.def.f.s	le
connexion	N.C.f.s	connexion
.	PONCT.S	.

$mysqli->connect_error	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
a	V.P.3.s	avoir
bien	ADV.-	bien
été	VK.m.s	être
établie	VK.f.s	établir
}	P	à
else	PPRO.3.f.s	<unknown>
{	N.C.m.p	{
En	P	en
cas	N.C.m.s	cas
de	P	de
problème	N.C.m.s	problème
,	PONCT.W	,
echo	N.C.m.s	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Connecté	VK.m.s	connecter
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
$host	N.P.m.s	<unknown>
,	PONCT.W	,
on	CL.suj.3.m.s	on
arrête	V.P.3.s	arrêter
avec	P	avec
la	D.def.f.s	le
à	P	à
la	D.def.f.s	le
base	N.C.f.s	base
$bdd	N.P.m.s	<unknown>
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
fonc=on	ADV.-	foncçon
die	N.C.f.s	die
.	PONCT.S	.

$mysqli->close()	N.P.x.s	<unknown>
;	PONCT.W	;
}	D.ind.f.s	}
Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
111	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P+D.def.m.s	c
Envoie	N.C.f.s	envoie
de	P	de
requêtes	N.C.f.p	requête
à	P	à
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.m.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
Résultat	N.C.m.s	résultat
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
exécuBon	A.qual.f.s	exécubon
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
Requête	VK.f.s	requêter
SQL	N.P.m.s	Sql
à	P	à
sur	P	sur
l'	D.def.m.s	le
objet	N.C.m.s	objet
connexion	N.C.f.s	connexion
exécuter	VW	exécuter
–	P	à
Requête	N.C.f.s	requête
SQL	N.P.f.s	Sql
:	PONCT.W	:
•	N.C.m.s	•
S'	C.S	si
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
d'	P	de
un	D.ind.m.s	un
SELECT	N.C.m.s	select
,	PONCT.W	,
le	D.def.m.s	le
résultat	N.C.m.s	résultat
correspond	V.P.3.s	correspondre
aux	P+D.def.f.p	au
données	N.C.f.p	donnée
fournies	VK.f.p	fournir
par	P	par
la	D.def.f.s	le
requête	N.C.f.s	requête
(	PONCT.W	(
objet	N.C.m.s	objet
mysqli_result	N.C.m.s	<unknown>
)	PONCT.W	)
•	P	à
Sinon	N.P.m.s	Sinon
(	PONCT.W	(
INSERT	N.P.m.s	Insert
,	PONCT.W	,
UPDATE	N.P.m.s	Update
,	PONCT.W	,
DELETE	N.P.f.s	Delete
…	N.C.m.s	…
)	PONCT.W	)
,	PONCT.W	,
le	D.def.m.s	le
résultat	N.C.m.s	résultat
sera	V.F.3.s	être
TRUE	N.P.f.s	True
si	C.S	si
la	D.def.f.s	le
requête	N.C.f.s	requête
est	V.P.3.s	être
bien	ADV.-	bien
exécutée	VK.f.s	exécuter
,	PONCT.W	,
FALSE	N.P.m.s	False
sinon	C.C	sinon
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
112	D.card.m.p	@card@
<form	N.C.m.p	<unknown>
name="formNouveauClient	V.P.3.p	<unknown>
"	PONCT.W	"
PHP	N.P.m.s	Php
ac-on="coursPHP-18.php	N.C.m.s	<unknown>
"	PONCT.W	"
method="POST">	A.ind.m.s	methodçostëë
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="nom	ET	nameçnom
"	PONCT.W	"
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

/>	C.C	<unknown>
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="email	A.qual.m.s	nameçemail
"	PONCT.W	"
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

/>	C.C	<unknown>
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

<input	N.C.m.s	<unknown>
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
113	D.card.m.p	@card@
coursPHP-18.php	N.C.m.p	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
!	PONCT.S	!

empty($_POST["nom"])	N.C.m.s	emptyëççpostçëëë
AND	I	and
!	PONCT.S	!

empty($_POST[P	N.C.m.s	emptyùçç
"	PONCT.W	"
e	P	e
HP	N.C.m.s	hp
mail	N.C.m.s	mail
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	CL.obj.3.m.s	c
require	VW	require
"	PONCT.W	"
connexion.php	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
connexion()	N.C.f.s	connexionçë
;	PONCT.W	;
connexion.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$nom	N.P.m.s	<unknown>
=	PONCT.W	=
$_POST["nom	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
func	ADV.-	func
-on	CL.suj.3.m.s	on
connexion()	V.P.3.s	<unknown>
{	P	à
$email	N.C.m.s	<unknown>
=	PONCT.W	=
$_POST["email	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$host	ET	çhost
=	PONCT.W	=
"	PONCT.W	"
localhost	ET	localhost
"	PONCT.W	"
;	PONCT.W	;
$adr	N.P.m.s	<unknown>
=	PONCT.W	=
$_POST["adresse	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$user	VW	çuser
=	PONCT.W	=
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$id	N.C.m.s	çid
=	PONCT.W	=
'	PONCT.W	'
\N	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
/*	D.card.m.p	<unknown>
auto-increment	ADV.-	auto-increment
*/	PONCT.W	<unknown>
$mdp	ET	<unknown>
=	PONCT.W	=
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$bdd	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
clientsBD	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
INSERT	N.P.m.s	Insert
INTO	N.P.m.s	Into
client	ET	client
(	PONCT.W	(
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	N.C.f.s	adresse
)	PONCT.W	)
VALUES	N.P.m.s	Values
(	PONCT.W	(
'	PONCT.W	'
$id	N.P.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$nom	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$email	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$adr	N.P.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
"	PONCT.W	"
;	PONCT.W	;
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$host	N.P.m.s	<unknown>
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$mysqli->connect_errno	N.P.x.s	<unknown>
)	PONCT.W	)
{	P	à
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

$result	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<p>Désolée	N.P.m.s	<unknown>
,	PONCT.W	,
…	D.card.m.s	…
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
die	N.C.f.s	die
(	PONCT.W	(
"	PONCT.W	"
<p>	N.C.m.s	<unknown>
Impossible	A.qual.m.s	impossible
…	N.C.m.s	…
"	PONCT.W	"
else	PPRO.3.f.s	<unknown>
{	N.C.m.s	{
.	PONCT.S	.

$mysqli->connect_error	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
Vous	CL.suj.2.m.p	vous
êtes	V.P.2.p	être
le	D.def.m.s	le
client	N.C.m.s	client
numéro	A.qual.m.s	numéro
<i>	A.ind.m.s	çië
"	PONCT.W	"
}	N.C.m.s	}
.	PONCT.S	.

$mysqli->insert_id	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</i></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
return	N.C.m.s	return
$mysqli	N.P.x.s	<unknown>
;	PONCT.W	;
}	V.P.3.s	être
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
$mysqli->close()	N.P.x.s	<unknown>
;	PONCT.W	;
}	ET	}
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	C.C	@card@
…	N.C.m.s	…
?	PONCT.S	?

>	N.C.m.s	>
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
114	A.card.m.s	@card@
PHP	N.C.m.p	php
•	P	à
Récupéra	V.J.3.s	récupérer
-on	CL.suj.3.m.s	on
des	D.ind.f.p	du
données	N.C.f.p	donnée
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.m.s	<unknown>
(	PONCT.W	(
"	PONCT.W	"
SELECT	N.P.f.s	Select
*	ET	*
FROM	N.P.m.s	From
table	V.P.3.s	tabler
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
–	V.P.3.s	être
Les	D.def.f.p	le
requêtes	N.C.f.p	requête
SELECT	N.P.m.s	Select
fournissent	V.P.3.p	fournir
des	D.ind.f.p	du
données	N.C.f.p	donnée
–	P	à
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
le	D.def.m.s	le
résultat	N.C.m.s	résultat
(	PONCT.W	(
ligne	N.C.f.s	ligne
à	P	à
ligne	N.C.f.s	ligne
)	PONCT.W	)
à	P	à
l'	D.def.f.s	le
aide	N.C.f.s	aide
des	P+D.def.m.p	du
opéra=ons	N.C.m.p	opéraçon
fetch_*	N.P.m.s	Fetchëë
–	N.C.m.s	–
Chaque	D.ind.m.s	chaque
appel	N.C.m.s	appel
à	P	à
fetch_*	N.P.m.s	Fetchëë
retourne	V.P.3.s	retourner
la	D.def.f.s	le
prochaine	A.qual.f.s	prochain
ligne	N.C.f.s	ligne
•	N.P.m.s	•
Ligne	N.P.m.s	Ligne
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
à	P	à
indice	N.C.m.s	indice
:	PONCT.W	:
$result->fetch_row	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
•	N.P.x.s	•
Ligne	N.P.m.s	Ligne
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associa=f	A.qual.m.s	associaëf
:	PONCT.W	:
$result->fetch_assoc	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
•	N.P.x.s	•
Ligne	N.P.m.s	Ligne
dans	P	dans
un	D.ind.m.s	un
objet	N.C.m.s	objet
:	PONCT.W	:
$result->fetch_object	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
115	A.card.f.s	@card@
connexion.php	V.P.3.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
coursPHP-19.php	N.C.m.s	<unknown>
PHP	N.P.m.s	Php
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
func	ADV.-	func
-on	CL.suj.3.m.s	on
connexion()	V.P.3.s	<unknown>
{	P	à
require	VW	require
"	PONCT.W	"
connexion.php	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
connexion()	N.C.f.s	connexionçë
;	PONCT.W	;
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$host	N.P.m.s	<unknown>
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.P.m.s	Select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	N.C.f.s	adresse
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

return	N.C.m.s	return
$mysqli	N.P.m.s	<unknown>
;	PONCT.W	;
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.m.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
On	CL.suj.3.m.s	on
exécute	V.P.3.s	exécuter
la	D.def.f.s	le
requête	N.C.f.s	requête
avec	P	avec
if	N.C.m.s	if
(	PONCT.W	(
!	PONCT.S	!

$result	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Desolée	VK.f.s	desoler
…	P	à
</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	P	à
l'	D.def.f.s	le
opéra=on	N.C.f.s	opéraçon
$mysqli->query	N.P.m.s	<unknown>
else	CL.suj.3.f.s	else
{	V.P.3.s	être
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.C.m.s	çligne
=	PONCT.W	=
$result->fetch_object()	N.P.x.s	<unknown>
)	PONCT.W	)
{	N.card.m.s	{
L'	D.def.f.s	le
opéra=on	N.C.f.s	opéraçon
$result->fetch_object	N.P.x.s	<unknown>
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

récupère	V.P.3.s	récupérer
la	D.def.f.s	le
prochaine	A.qual.f.s	prochain
ligne	N.C.f.s	ligne
,	PONCT.W	,
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->id	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
FAUX	N.P.m.p	Faux
s'	C.S	si
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
y	CL.obj.3.m.s	y
reste	V.P.3.s	rester
plus	ADV.neg	plus
de	D.ind.f.p	de
lignes	N.C.f.p	ligne
.	PONCT.S	.

echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->nom	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->email	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Chaque	D.ind.m.s	chaque
aeribut	N.C.m.s	<unknown>
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->adresse	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
devient	V.P.3.s	devenir
un	D.ind.m.s	un
aeribut	N.C.m.s	<unknown>
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

$ligne	V.P.3.s	çligner
}	N.C.m.s	}
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.f.s	Gesçon
116	D.card.m.p	@card@
PHP	N.C.m.p	php
La	D.def.f.s	le
même	A.ind.f.s	même
requête	N.C.f.s	requête
avec	P	avec
récupéra	V.J.3.s	récupérer
-on	CL.suj.3.m.s	on
des	D.ind.m.p	du
informa-ons	N.C.m.p	informa-on
•	P	à
…	N.C.m.s	…
par	P	par
tableau	N.C.m.s	tableau
à	P	à
indice	N.C.m.s	indice
•	N.C.m.s	•
…	N.C.m.s	…
par	P	par
tableau	N.C.m.s	tableau
associa=f	A.qual.m.s	associaëf
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

$sql	A.qual.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.C.m.s	select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	V.P.3.s	adresser
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.C.m.s	select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	V.P.3.s	adresser
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.C.m.s	çligne
=	PONCT.W	=
$result->fetch_row()	N.P.x.s	<unknown>
)	PONCT.W	)
{	P+D.def.m.s	c
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.P.m.s	<unknown>
=	PONCT.W	=
$result->fetch_assoc	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
)	PONCT.W	)
{	N.C.m.s	{
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[0	N.C.m.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['id	N.C.m.s	çligneç'id
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[1	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['nom	N.P.m.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[2	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['email	N.C.m.s	çligne-'email
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[3	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['adresse	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
."<td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

}	N.C.m.s	}
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

}	N.C.m.s	}
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

ça	PRO.dem.m.s	cela
commence	V.P.3.s	commencer
toujours	ADV.-	toujours
par	P	par
0	PRO.card.m.p	@card@
chaque	D.ind.m.s	chaque
asribut	N.C.m.s	<unknown>
est	V.P.3.s	être
accessible	A.qual.m.s	accessible
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
par	P	par
son	D.poss.m.s	son
nom	N.C.m.s	nom
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
117	D.card.m.p	@card@
PHP	N.C.m.p	php
•	D.card.m.p	•
Autres	A.ind.m.p	autre
informa=ons	N.C.m.p	informaçon
peuvent	V.P.3.p	pouvoir
être	VW	être
récupérées	VK.f.p	récupérer
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
mysqli_result	N.P.m.s	<unknown>
(	PONCT.W	(
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.m.s	<unknown>
(	PONCT.W	(
…	N.C.m.s	…
)	PONCT.W	)
)	PONCT.W	)
–	D.card.m.s	–
Combien	ADV.int	combien
de	P	de
lignes	N.C.f.p	ligne
et	C.C	et
colonnes	N.C.f.p	colonne
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
récupérer	VW	récupérer
•	P	à
$nblignes	N.C.m.p	<unknown>
=	PONCT.W	=
$result->num_rows	N.P.x.s	<unknown>
;	PONCT.W	;
•	D.card.m.s	•
$nbcol	N.P.x.s	<unknown>
=	PONCT.W	=
$result->field_count	N.P.x.s	<unknown>
;	PONCT.W	;
–	P	à
Les	D.def.m.p	le
noms	N.C.m.p	nom
des	P+D.def.f.p	du
colonnes	N.C.f.p	colonne
(	PONCT.W	(
aeributs	N.C.m.p	<unknown>
)	PONCT.W	)
dans	P	dans
le	D.def.m.s	le
résultat	N.C.m.s	résultat
•	P	à
$colonnes	N.P.x.s	<unknown>
=	PONCT.W	=
$result->fetch_fields()	N.P.x.s	<unknown>
;	PONCT.W	;
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
118	D.card.m.p	@card@
PHP	N.C.m.p	php
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

A	P	à
par=r	VW	paràr
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
$result	N.P.m.s	<unknown>
,	PONCT.W	,
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
$sql	N.P.m.s	<unknown>
=	P	à
"	PONCT.W	"
SELECT	N.P.m.s	Select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	V.P.3.s	adresser
récupérer	VW	récupérer
le	D.def.m.s	le
nombre	N.C.m.s	nombre
de	P	de
lignes	N.C.f.p	ligne
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
(	PONCT.W	(
asribut	N.C.m.s	<unknown>
num_rows	ET	numärow
)	PONCT.W	)
et	C.C	et
de	P	de
colonnes	N.C.f.p	colonne
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.m.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
par	P	par
ligne	N.C.f.s	ligne
(	PONCT.W	(
asribut	N.C.m.s	<unknown>
field_count	N.C.m.s	field-count
)	PONCT.W	)
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

echo	ET	echo
"	PONCT.W	"
<p>	I	àpà
Nous	CL.suj.1.m.p	nous
avons	V.P.1.p	avoir
"	PONCT.W	"
.	PONCT.S	.

$result->num_rows	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
clients	N.C.m.p	client
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
Il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
"	PONCT.W	"
.	PONCT.S	.

$result->field_count	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
asributs	N.C.m.p	<unknown>
par	P	par
client	N.C.m.s	client
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
récupérer	VW	récupérer
les	D.def.m.p	le
$-tres	N.C.m.p	--tre
=	PONCT.W	=
$result->fetch_fields()	N.P.x.s	<unknown>
;	PONCT.W	;
colonnes	N.C.f.p	colonne
.	PONCT.S	.

Chaque	D.ind.f.s	chaque
colonne	N.C.f.s	colonne
est	V.P.3.s	être
un	D.ind.m.s	un
foreach	N.C.m.s	foreach
(	PONCT.W	(
$-tres	N.P.m.s	<unknown>
as	N.C.m.p	as
$colonne	N.C.f.s	çcolonne
)	PONCT.W	)
{	D.def.m.s	c
objet	N.C.m.s	objet
et	C.C	et
l'	D.def.m.s	le
asribut	N.C.m.s	<unknown>
name	A.qual.m.s	name
donne	V.P.3.s	donner
echo	ET	echo
"	PONCT.W	"
<th>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$colonne->name	N.C.f.s	ccolonne-äname
.	PONCT.S	.

"	PONCT.W	"
</th>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
son	D.poss.m.s	son
nom	N.C.m.s	nom
.	PONCT.S	.

}	P	à
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.C.m.s	çligne
=	PONCT.W	=
$result->fetch_object()	N.P.x.s	<unknown>
)	PONCT.W	)
{	V.P.3.s	être
La	D.def.f.s	le
ligne	N.C.f.s	ligne
aussi	ADV.-	aussi
est	V.P.3.s	être
un	D.ind.m.s	un
objet	N.C.m.s	objet
dont	PRO.rel.m.s	dont
les	D.def.m.p	le
echo	ET	echo
"	PONCT.W	"
<tr>	A.qual.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
aeributs	N.C.m.p	<unknown>
correspondent	V.P.3.p	correspondre
aux	P+D.def.m.p	au
foreach	ET	foreach
(	PONCT.W	(
$ligne	N.C.f.s	çligne
as	ET	as
$colonne=>$val	N.P.x.s	<unknown>
)	PONCT.W	)
{	D.card.f.p	{
colonnes	N.C.f.p	colonne
.	PONCT.S	.

On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
u=liser	VW	uëliser
un	D.ind.m.s	un
echo	N.C.m.s	echo
"	PONCT.W	"
<td>	A.ind.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$val	N.P.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach	A.qual.m.s	foreach
pour	P	pour
accéder	VW	accéder
à	P	à
la	D.def.f.s	le
valeur	N.C.f.s	valeur
}	P	à
echo	ET	echo
"	PONCT.W	"
</tr>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
des	D.ind.m.p	du
aeributs	N.C.m.p	<unknown>
.	PONCT.S	.

Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR0	N.P.f.s	<unknown>
}	N.P.f.s	}
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

6	A.card.m.s	@card@
Ges=on	N.C.m.s	gesçon
119	D.card.m.p	@card@
Informa=que	A.qual.f.s	informaëque
Modélisa=on	N.P.m.s	Modélisaçon
UML	N.P.m.s	Uml
Objec-fs	N.C.m.p	objec-f
de	P	de
la	D.def.f.s	le
séance	N.C.f.s	séance
:	PONCT.W	:
Mécanismes	N.C.m.p	mécanisme
de	P	de
sessions	N.C.f.p	session
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
120	A.card.m.s	@card@
PHP	N.C.m.p	php
•	P+D.def.m.s	c
Mécanisme	N.C.m.s	mécanisme
de	P	de
sessions	N.C.f.p	session
–	P	à
Chaque	D.ind.f.s	chaque
visite	N.C.f.s	visite
à	P	à
un	D.ind.m.s	un
site	N.C.m.s	site
/	C.C	@card@
page	N.C.f.s	page
est	V.P.3.s	être
indépendante	A.qual.f.s	indépendant
–	P	à
Les	D.def.f.p	le
sessions	N.C.f.p	session
permesent	V.P.3.p	permeser
de	P	de
conserver	VW	conserver
les	D.def.m.p	le
informa=ons	N.C.m.p	informaçon
des	P+D.def.m.p	du
visiteurs	N.C.m.p	visiteur
entre	P	entre
les	D.def.f.p	le
pages	N.C.f.p	page
–	P	à
Les	D.def.m.p	le
informa=ons	N.C.m.p	informaçon
sur	P	sur
les	D.def.f.p	le
sessions	N.C.f.p	session
sont	V.P.3.p	être
stockées	VK.f.p	stocker
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
•	P	à
Fonc=onnement	N.C.m.s	foncçonnement
général	A.qual.m.s	général
1	A.card.f.s	@card@
)	PONCT.W	)
Ouverture	N.C.f.s	ouverture
de	P	de
session	N.C.f.s	session
:	PONCT.W	:
session_start	N.C.m.s	sessionästart
(	PONCT.W	(
)	PONCT.W	)
•	P	à
Chaque	D.ind.m.s	chaque
u=lisateur	N.C.m.s	uëlisateur
reçoit	V.P.3.s	recevoir
un	D.ind.m.s	un
iden=fiant	A.qual.m.s	idençfiant
transmis	VK.m.s	transmettre
entre	P	entre
les	D.def.f.p	le
pages	N.C.f.p	page
2	A.card.m.s	@card@
)	PONCT.W	)
Défini=on	N.C.f.s	définion
des	P+D.def.f.p	du
variables	N.C.f.p	variable
de	P	de
sessions	N.C.f.p	session
(	PONCT.W	(
données	N.C.f.p	donnée
)	PONCT.W	)
•	P	à
Les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
sont	V.P.3.p	être
transmises	VK.f.p	transmettre
de	P	de
page	N.C.f.s	page
à	P	à
page	N.C.f.s	page
•	N.C.m.s	•
$_SESSION["variable	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
valeur	N.C.f.s	valeur
;	PONCT.W	;
3	PRO.card.f.p	@card@
)	PONCT.W	)
Fermeture	N.C.f.s	fermeture
de	P	de
session	N.C.f.s	session
:	PONCT.W	:
session_destroy()	N.C.m.s	sessionädestroyçë
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
121	D.card.m.p	@card@
PHP	N.P.m.s	Php
Login	N.P.m.s	Login
&	PONCT.W	&
mdp	N.C.m.p	<unknown>
différents	A.qual.m.p	différent
de	P	de
uml	A.qual.m.s	<unknown>
Login	N.P.m.s	Login
&	PONCT.W	&
mdp	ET	<unknown>
corrects	A.qual.m.p	correct
(	PONCT.W	(
uml	A.qual.m.s	<unknown>
/uml	N.C.m.s	<unknown>
)	PONCT.W	)
<	ET	<
form	ET	form
name=	N.C.m.s	nameç
"	PONCT.W	"
…	N.C.m.s	…
"	PONCT.W	"
ac-on="coursPHP-23.php	N.C.m.s	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
>	P	à
<label	N.C.m.s	çlabel
>Login	N.P.m.s	<unknown>
:	PONCT.W	:
</label>	N.P.m.s	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="login	ET	nameçlogin
"	PONCT.W	"
maxlength="15	ET	<unknown>
"	PONCT.W	"
/>	ET	<unknown>
<br/>	ET	<unknown>
<label	A.qual.m.s	çlabel
>Mot	N.C.m.s	cmot
de	P	de
passe	N.C.f.s	passe
:	PONCT.W	:
</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="password	ET	typeëppassword
"	PONCT.W	"
name="mdp	ET	<unknown>
"	PONCT.W	"
maxlength="15	ET	<unknown>
"	PONCT.W	"
/>	ET	<unknown>
<br/>	ET	<unknown>
<input	ET	çinput
type="submit	ET	<unknown>
"	PONCT.W	"
value="OK	N.C.f.s	valueççok
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
122	A.card.m.s	@card@
PHP	N.C.m.p	php
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Ouverture	N.C.f.s	ouverture
d'	P	de
une	D.ind.f.s	un
session	N.C.f.s	session
<html>	N.P.x.s	<unknown>
(	PONCT.W	(
au	P+D.def.m.s	au
début	N.C.m.s	début
de	P	de
chaque	D.ind.f.s	chaque
page	N.C.f.s	page
)	PONCT.W	)
<head>	N.P.x.s	<unknown>
…	P	à
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

$login	N.C.m.s	çlogin
=	PONCT.W	=
$_POST["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
Défini=on	N.C.f.s	définion
des	P+D.def.f.p	du
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
$mdp	N.P.x.s	<unknown>
=	PONCT.W	=
$_POST["mdp	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$_SESSION["var	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
if	ET	if
(	PONCT.W	(
$login	N.C.m.s	çlogin
==	PONCT.W	<unknown>
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
AND	ET	and
$mdp	ET	<unknown>
==	ET	çù
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
{	P+D.def.m.s	c
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	V.P.3.s	être
$login	N.P.m.s	<unknown>
;	PONCT.W	;
…	ET	…
echo	ET	echo
"	PONCT.W	"
<h1>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
cher	A.qual.m.s	cher
$login	N.C.m.s	çlogin
</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
}	D.card.f.p	}
session	N.C.f.s	session
con=ennent	V.P.3.p	concenter
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<h1>Desolé	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
les	D.def.m.p	le
informa=ons	N.C.m.p	informaçon
qui	PRO.rel.m.p	qui
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Page	N.C.f.s	page
accessible	A.qual.m.s	accessible
uniquement	ADV.-	uniquement
aux	P+D.def.m.p	au
membres	N.C.m.p	membre
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
passeront	V.F.3.p	passer
de	P	de
page	N.C.f.s	page
en	P	en
}	N.C.m.s	}
page	N.C.f.s	page
.	PONCT.S	.

?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	ET	<unknown>
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
123	A.card.m.s	@card@
PHP	N.C.m.p	php
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html>	N.C.m.p	<unknown>
<head>	N.P.m.s	<unknown>
…	P	à
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
isset(	ET	<unknown>
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
AND	I	and
!	PONCT.S	!

empty(	N.C.m.s	emptyù
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	D.card.m.s	{
$login	N.C.m.s	çlogin
=	PONCT.W	=
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
…	P+D.def.m.s	c
Usage	N.C.m.s	usage
des	P+D.def.f.p	du
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
echo	ET	echo
"	PONCT.W	"
<p>Client	N.P.m.s	<unknown>
<b>	ET	çbë
$login	N.P.m.s	<unknown>
</b>	N.P.x.s	<unknown>
:	PONCT.W	:
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
une	D.ind.f.s	un
page	N.C.f.s	page
pour	P	pour
$	N.C.m.s	$
le	D.def.m.s	le
_Ss	N.C.m.s	-s
Eab	N.P.m.s	Eab
SSoIn	N.P.m.s	Ssoin
Oné	VK.m.s	oner
N[s	ET	nà
"	PONCT.W	"
</	PONCT.W	<unknown>
v	A.card.m.s	v
p	N.C.f.p	p
ar>	N.C.m.s	arç
"	PONCT.W	"
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<h1>Desolé	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ADV.-	-pà
Il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
privée	A.qual.f.s	privé
!	PONCT.S	!

!	PONCT.S	!

Il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
être	VW	être
membre	N.C.m.s	membre
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
…	N.C.m.s	…
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
124	A.card.m.s	@card@
PHP	N.C.m.p	php
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html>	N.C.m.p	<unknown>
<head>	N.P.m.s	<unknown>
…	P	à
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
isset(	ET	<unknown>
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
AND	I	and
!	PONCT.S	!

empty(	N.C.m.s	emptyù
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	N.C.m.s	{
…	N.C.m.s	…
unset($_SESSION["login"])	N.P.x.s	Unsetçëëë-Sessionçëëë
;	PONCT.W	;
Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
session	N.C.f.s	session
session_destroy()	N.P.m.s	Sessionädestroyçë
;	PONCT.W	;
session_destroy()	N.C.m.s	sessionädestroyçë
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<h1>Desolé	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Pas	ADV.neg	pas
de	P	de
connexion	N.C.f.s	connexion
ac=ve	V.P.3.s	acçver
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Ne	ADV.-	ne
pas	ADV.neg	pas
oublier	VW	oublier
de	P	de
vider	VW	vider
les	D.def.m.p	le
}	N.C.m.p	}
?	PONCT.S	?

>	D.card.f.p	>
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
…	P	à
unset(	ET	<unknown>
$_SESSION[	N.P.x.s	<unknown>
"	PONCT.W	"
var	N.C.m.s	var
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
125	D.card.m.p	@card@
PHP	N.C.m.p	php
•	P+D.def.m.s	c
Mécanisme	N.C.m.s	mécanisme
de	P	de
sessions	N.C.f.p	session
–	P+D.def.m.s	c
Base	N.P.m.s	Base
pour	P	pour
la	D.def.f.s	le
ges=on	N.C.f.s	gesçon
de	P	de
panier	N.C.m.s	panier
dans	P	dans
les	D.def.m.p	le
sites	N.C.m.p	site
de	P	de
e-commerce	N.C.m.s	e-commerce
–	P	à
Les	D.def.m.p	le
produits	N.C.m.p	produit
choisis	VK.m.p	choisir
par	P	par
le	D.def.m.s	le
client	N.C.m.s	client
sont	V.P.3.p	être
enregistrés	VK.m.p	enregistrer
en	P	en
tant	ADV.-	tant
que	C.S	que
variables	A.qual.m.p	variable
de	P	de
session	N.C.f.s	session
–	C.S	–
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
y	CL.obj.3.m.s	y
garder	VW	garder
des	D.ind.m.p	du
objets	N.C.m.p	objet
SIMPLES	N.C.m.p	simple
class	ET	class
LigneProduit	N.P.m.s	Ligneproduit
{	P	à
public	N.C.m.s	public
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
public	A.qual.m.s	public
$qte	A.qual.m.s	<unknown>
;	PONCT.W	;
Contenu	VK.m.s	contenir
du	P+D.def.m.s	du
panier	N.C.m.s	panier
est	V.P.3.s	être
gardé	VK.m.s	garder
dans	P	dans
les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
.	PONCT.S	.

/*	P	àà
constructeur	N.C.m.s	constructeur
*/	P	à
Tableau	N.C.m.s	tableau
contenant	VG	contenir
des	D.ind.m.p	du
objets	N.C.m.p	objet
func	ET	func
-on	CL.suj.3.m.s	on
__construct(	N.P.m.s	<unknown>
$nom	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
LigneProduit	N.P.m.s	Ligneproduit
.	PONCT.S	.

$this->nom	N.P.x.s	<unknown>
=	P	à
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
Chaque	D.ind.m.s	chaque
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
$this->qte	N.P.x.s	<unknown>
=	V.P.3.s	être
1	N.card.m.s	@card@
;	PONCT.W	;
con=ent	V.P.3.p	concer
un	D.ind.m.s	un
objet	N.C.m.s	objet
.	PONCT.S	.

}	N.C.m.s	}
}	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
126	D.card.m.p	@card@
PHP	N.P.m.s	Php
Chaque	D.ind.m.s	chaque
produit	N.C.m.s	produit
choisi	VK.m.s	choisir
est	V.P.3.s	être
iden=fié	VK.m.s	idençfier
func	ADV.-	func
-on	CL.suj.3.m.s	on
ajouterProduit($produit)	VK.m.s	<unknown>
{	VK.m.s	être
par	P	par
un	D.ind.m.s	un
«	N.C.m.s	«
id	A.qual.m.s	id
»	N.C.m.s	»
(	PONCT.W	(
ici	ADV.-	ici
le	D.def.m.s	le
nom	N.C.m.s	nom
)	PONCT.W	)
.	PONCT.S	.

$qte	N.C.m.s	<unknown>
=	PONCT.W	=
0	PRO.card.m.s	@card@
;	PONCT.W	;
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
va	V.P.3.s	aller
contenir	VW	contenir
un	D.ind.m.s	un
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
if	A.qual.m.s	if
(	PONCT.W	(
!	PONCT.S	!

isset	A.qual.m.s	isset
(	PONCT.W	(
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	P+D.def.m.s	c
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
=	ET	=
new	ET	new
LigneProduit($produit)	N.P.x.s	<unknown>
;	PONCT.W	;
$qte	N.P.m.s	<unknown>
=	PONCT.W	=
$_SESSION[$produit]->qte	N.P.x.s	<unknown>
}	N.C.m.s	}
S'	C.S	si
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
aucun	D.neg.m.s	aucun
$_SESSION[$produit	N.C.m.s	çäsessionäëpuit
]	PONCT.W	]
,	PONCT.W	,
else	PPRO.3.f.s	<unknown>
{	P	à
//	PONCT.W	@card@
produit	V.P.3.s	produire
déjà	ADV.-	déjà
là	ADV.-	là
,	PONCT.W	,
augmenter	VW	augmenter
alors	ADV.-	alors
sa	D.poss.f.s	son
quan=té	N.C.f.s	quançté
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
créer	VW	créer
un	D.ind.m.s	un
nouveau	A.qual.m.s	nouveau
objet	N.C.m.s	objet
$objet	N.P.m.s	<unknown>
=	PONCT.W	=
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
LigneProduit	N.P.m.s	Ligneproduit
$objet->qte	N.P.x.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
1	A.card.f.s	@card@
;	PONCT.W	;
$qte	N.P.m.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
;	PONCT.W	;
S'	C.S	si
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
déjà	ADV.-	déjà
un	D.ind.m.s	un
}	N.C.m.s	}
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
,	PONCT.W	,
return	N.C.m.s	return
$qte	N.P.x.s	<unknown>
;	PONCT.W	;
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
juste	ADV.-	juste
augmenter	VW	augmenter
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
}	N.C.m.s	}
l'	D.def.m.s	le
asribut	N.C.m.s	<unknown>
«	N.C.m.s	«
qte	PRO.rel.m.s	<unknown>
»	N.C.m.s	»
dans	P	dans
l'	D.def.m.s	le
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
Manuele	N.P.m.s	Manuele
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
127	A.card.m.s	@card@
PHP	N.P.m.p	Php
Lorsqu'	C.S	lorsque
on	CL.suj.3.m.s	on
veut	V.P.3.s	vouloir
supprimer	VW	supprimer
un	D.ind.m.s	un
func	N.C.m.s	func
-on	CL.suj.3.m.s	on
supprimerProduit($produit)	VK.m.s	<unknown>
{	P	à
produit	N.C.m.s	produit
,	PONCT.W	,
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
réduire	VW	réduire
sa	D.poss.f.s	son
quan=té	N.C.f.s	quançté
$qte	A.qual.f.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
dans	P	dans
l'	D.def.m.s	le
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
if	N.P.m.s	If
(	PONCT.W	(
isset(	V.P.3.s	<unknown>
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	C.S	{
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
l'	D.def.m.s	le
objet	N.C.m.s	objet
$objet	N.P.m.s	<unknown>
=	PONCT.W	=
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
LigneProduit	N.P.m.s	Ligneproduit
gardé	VK.m.s	garder
dans	P	dans
$objet->qte	N.P.x.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
-	PONCT.W	-
1	A.card.m.s	@card@
;	PONCT.W	;
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
$qte	N.P.x.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
;	PONCT.W	;
On	CL.suj.3.m.s	on
réduit	V.P.3.s	réduire
sa	D.poss.f.s	son
quan=té	N.C.f.s	quançté
d'	P	de
une	D.ind.f.s	un
unité	N.C.f.s	unité
if	N.P.m.s	If
(	PONCT.W	(
$qte	N.P.m.s	<unknown>
<=	P+D.def.m.s	çù
0	A.card.f.s	@card@
)	PONCT.W	)
{	N.C.m.s	{
//on	PONCT.W	<unknown>
supprime	V.P.3.s	supprimer
le	D.def.m.s	le
produit	N.C.m.s	produit
unset($_SESSION[$produit])	N.P.x.s	<unknown>
;	PONCT.W	;
}	V.P.3.s	être
}	N.C.m.s	}
S'	C.S	si
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
en	CL.obj.3.m.s	en
reste	V.P.3.s	rester
plus	ADV.neg	plus
(	PONCT.W	(
la	D.def.f.s	le
quan-té	N.C.f.s	quan-té
a	V.P.3.s	avoir
aseint	VK.m.s	aseindre
0	D.card.f.p	@card@
unités	N.C.f.p	unité
)	PONCT.W	)
,	PONCT.W	,
on	CL.suj.3.m.s	on
supprime	V.P.3.s	supprimer
le	D.def.m.s	le
return	N.C.m.s	return
$qte	A.qual.m.s	<unknown>
;	PONCT.W	;
produit	N.C.m.s	produit
de	P	de
la	D.def.f.s	le
session	N.C.f.s	session
}	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
128	D.card.m.p	@card@
PHP	N.P.m.s	Php
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
récupérer	VW	récupérer
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
panier	N.C.m.s	panier
en	P	en
récupérant	VG	récupérer
le	D.def.m.s	le
contenu	N.C.m.s	contenu
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
de	P	de
session	N.C.f.s	session
$_SESSION	N.P.x.s	<unknown>
Pour	P	pour
chaque	D.ind.m.s	chaque
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
gardé	VK.m.s	garder
dans	P	dans
func	ADV.-	func
-on	CL.suj.3.m.s	on
afficherPanier()	N.C.f.s	afficherpanierçà
{	P	à
$_SESSION	N.C.f.s	çäsession
echo	ET	echo
"	PONCT.W	"
<table>	A.qual.f.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach($_SESSION	N.C.f.s	foreachëçsession
as	ET	as
$objet	N.C.m.s	çobjet
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<tr><td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$objet->nom	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
<td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$objet->qte	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
</tr>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
</table>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
129	D.card.m.p	@card@
PHP	N.P.m.s	Php
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
130	D.card.m.p	@card@
PHP	N.P.m.s	Php
:	PONCT.W	:
Panier	N.P.m.s	Panier
avancé	VK.m.s	avancer
•	N.P.m.s	•
Voici	V.P.3.s	<unknown>
un	D.ind.m.s	un
exemple	N.C.m.s	exemple
avancé	VK.m.s	avancer
de	P	de
Panier	N.P.m.s	Panier
qui	PRO.rel.m.s	qui
u=lise	V.P.3.s	uëliser
les	D.def.f.p	le
classes	N.C.f.p	classe
en	P	en
PHP	N.P.m.s	Php
et	C.C	et
la	D.def.f.s	le
no=on	N.C.f.s	noëon
de	P	de
session	N.C.f.s	session
•	P	à
Le	D.def.m.s	le
panier	N.C.m.s	panier
est	V.P.3.s	être
modélisé	VK.m.s	modéliser
par	P	par
une	D.ind.f.s	un
classe	N.C.f.s	classe
Panier	N.P.m.s	Panier
Panier	N.P.m.s	Panier
+	P	p
nbProduits	N.C.m.p	<unknown>
:	PONCT.W	:
int	D.card.f.p	<unknown>
Produit	D.card.f.p	produit
lignes	N.C.f.p	ligne
+	P	p
ajouterProduit	VK.m.s	ajouterproduire
(	PONCT.W	(
code	N.C.m.s	code
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
prix	N.C.m.s	prix
)	PONCT.W	)
+	P	p
code	N.C.m.s	code
:	PONCT.W	:
String	N.P.m.s	String
+	P	p
supprimerProduit	N.C.m.s	<unknown>
(	PONCT.W	(
code	N.C.m.s	code
)	PONCT.W	)
*	N.C.m.s	*
+	P	p
nom	N.C.m.s	nom
:	PONCT.W	:
String	N.P.m.s	String
+	P	p
calculerTotal	N.C.m.s	calculertotal
(	PONCT.W	(
)	PONCT.W	)
:	PONCT.W	:
float	N.C.m.s	float
+	P	p
prix	N.C.m.p	prix
:	PONCT.W	:
float	N.C.m.s	float
+	P	p
getNbProduits	N.C.m.p	<unknown>
(	PONCT.W	(
)	PONCT.W	)
:	PONCT.W	:
int	PRO.card.m.p	<unknown>
LignePanier	N.P.m.s	Lignepanier
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
+	P	p
qte	C.S	<unknown>
:	PONCT.W	:
int	D.card.m.p	<unknown>
class	N.C.m.p	class
Produit	VK.m.s	produire
{	P	à
class	N.C.m.p	class
LignePanier	N.P.m.s	Lignepanier
{	P	à
public	N.C.m.s	public
$code	N.C.m.s	ccode
;	PONCT.W	;
public	N.C.m.s	public
$prod	N.C.m.s	<unknown>
;	PONCT.W	;
public	N.C.m.s	public
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
public	N.C.m.s	public
$qte	N.P.x.s	<unknown>
;	PONCT.W	;
public	A.qual.m.s	public
$prix	N.P.m.s	<unknown>
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	C.C	@card@
}	N.C.m.s	}
?	PONCT.S	?

>	N.C.m.s	>
UFR06	N.P.m.s	<unknown>
Ges=on	N.P.m.s	Gesçon
131	D.card.m.p	@card@
PHP	N.P.m.s	Php
:	PONCT.W	:
Panier	N.P.m.s	Panier
avancé	VK.m.s	avancer
class	ET	class
Panier	N.P.m.s	Panier
{	P	à
Chaque	D.ind.f.s	chaque
Ligne	N.C.f.s	ligne
de	P	de
Panier	N.P.m.s	Panier
est	V.P.3.s	être
gardée	VK.f.s	garder
dans	P	dans
public	N.C.m.s	public
$lignes	N.C.f.p	çligne
;	PONCT.W	;
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associa=f	A.qual.m.s	associaëf
public	A.qual.m.s	public
$nbProduits	N.P.x.s	<unknown>
;	PONCT.W	;
$this->lignes[$code	N.P.x.s	<unknown>
]	PONCT.W	]
=>	N.P.m.s	<unknown>
$LignePanier	N.P.m.s	<unknown>
func=on	N.C.m.s	funcçon
__construct()	N.P.x.s	<unknown>
{	P	à
On	CL.suj.3.m.s	on
commence	V.P.3.s	commencer
avec	P	avec
zéro	A.qual.m.s	zéro
produits	N.C.m.p	produit
$this->nbProduits	N.P.x.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
dans	P	dans
le	D.def.m.s	le
panier	N.C.m.s	panier
}	C.S	}
On	CL.suj.3.m.s	on
va	V.P.3.s	aller
créer	VW	créer
le	D.def.m.s	le
tableau	N.C.m.s	tableau
func	A.qual.m.s	func
-on	CL.suj.3.m.s	on
ajouterProduit($code	V.P.3.s	ajouterproduitoder
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$prix	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
lors	N.C.m.s	lors
de	P	de
l'	D.def.m.s	le
ajout	N.C.m.s	ajout
du	P+D.def.m.s	du
…	N.C.m.s	…
if	A.qual.m.s	if
(	PONCT.W	(
$this->nbProduits	N.P.x.s	<unknown>
==	P+D.def.m.s	çù
0	A.card.m.s	@card@
)	PONCT.W	)
{	P+D.def.m.s	c
premier	A.ord.m.s	premier
produit	N.C.m.s	produit
au	P+D.def.m.s	au
$prod	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
Produit($code	N.P.x.s	Produitçücode
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$prix	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
panier	N.C.m.s	panier
$lp	N.P.x.s	<unknown>
=	PONCT.W	=
new	ET	new
LignePanier($prod)	N.P.m.s	Lignepanierçlç
;	PONCT.W	;
$this->lignes[$code	N.P.x.s	<unknown>
]	PONCT.W	]
=	V.P.3.s	être
$lp	N.P.x.s	<unknown>
;	PONCT.W	;
$this->nbProduits	N.P.x.s	<unknown>
=	V.P.3.s	être
1	N.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

Manuele	A.qual.f.s	manuel
Kirsch	N.P.f.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
132	D.card.m.p	@card@
PHP	N.C.m.p	php
:	PONCT.W	:
Panier	N.P.m.s	Panier
avancé	VK.m.s	avancer
func	ET	func
-on	CL.suj.3.m.s	on
ajouterProduit($code	V.P.3.s	ajouterproduitoder
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$prix	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
if	N.C.m.s	if
(	PONCT.W	(
$this->nbProduits	N.P.x.s	<unknown>
==	V.P.3.s	cevoir
0	PRO.card.m.s	@card@
)	PONCT.W	)
{	N.C.m.s	{
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

}	N.C.m.s	}
Pour	P	pour
ajouter	VW	ajouter
,	PONCT.W	,
on	CL.suj.3.m.s	on
vérifie	V.P.3.s	vérifier
si	C.S	si
le	D.def.m.s	le
else	N.C.m.s	else
{	P	à
produit	N.C.m.s	produit
est	V.P.3.s	être
déjà	ADV.-	déjà
dans	P	dans
le	D.def.m.s	le
panier	N.C.m.s	panier
if	A.qual.m.s	if
(	PONCT.W	(
isset	A.qual.m.s	isset
(	PONCT.W	(
$this->lignes[$code	N.P.x.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	P+D.def.m.s	c
$lp	N.P.x.s	<unknown>
=	PONCT.W	=
$this->lignes[$code	N.P.x.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
$qte	N.P.x.s	<unknown>
=	V.P.3.s	être
$lp->qte	N.P.x.s	<unknown>
;	PONCT.W	;
S'	C.S	si
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
est	V.P.3.s	être
,	PONCT.W	,
on	CL.suj.3.m.s	on
le	CL.obj.3.m.s	le
récupère	V.P.3.s	récupérer
et	C.C	et
on	CL.suj.3.m.s	on
$lp->qte	N.P.x.s	<unknown>
=	V.P.3.s	être
$qte	N.P.m.s	<unknown>
1	N.card.m.s	@card@
;	PONCT.W	;
met	V.P.3.s	mettre
à	P	à
jours	N.C.m.p	jour
la	D.def.f.s	le
quan-té	N.C.f.s	quan-té
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
$prod	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
Produit($code	N.P.x.s	Produitçücode
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$prix	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$lp	N.P.x.s	<unknown>
=	PONCT.W	=
new	ET	new
LignePanier($prod)	N.P.m.s	Lignepanierçlç
;	PONCT.W	;
S'	C.S	si
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
y	CL.obj.3.m.s	y
est	V.P.3.s	être
pas	ADV.neg	pas
,	PONCT.W	,
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
y	CL.obj.3.m.s	y
ajouter	VW	ajouter
une	D.ind.f.s	un
nouvelle	A.qual.f.s	nouveau
ligne	N.C.f.s	ligne
de	P	de
panier	N.C.m.s	panier
$this->lignes[$code	N.P.x.s	<unknown>
]	PONCT.W	]
=	PONCT.W	=
$lp	N.P.x.s	<unknown>
;	PONCT.W	;
$this->nbProduits	N.P.x.s	<unknown>
=	PONCT.W	=
$this->nbProduits	N.P.x.s	<unknown>
1	A.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
}	P+D.def.m.s	c
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
133	D.card.m.p	@card@
PHP	N.P.m.s	Php
:	PONCT.W	:
Panier	N.P.m.s	Panier
avancé	VK.m.s	avancer
func	ET	func
-on	CL.suj.3.m.s	on
ajouterProduit($code	V.P.3.s	ajouterproduitoder
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$prix	N.P.m.s	<unknown>
)	PONCT.W	)
{	C.S	{
On	CL.suj.3.m.s	on
ne	ADV.neg	ne
supprime	V.P.3.s	supprimer
que	ADV.neg	que
si	C.S	si
le	D.def.m.s	le
if	N.C.m.s	if
(	PONCT.W	(
isset	N.C.m.s	isset
(	PONCT.W	(
$this->lignes[$code	N.P.x.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	P+D.def.m.s	c
produit	N.C.m.s	produit
est	V.P.3.s	être
dans	P	dans
le	D.def.m.s	le
panier	N.C.m.s	panier
$lp	N.P.x.s	<unknown>
=	PONCT.W	=
$this->lignes[$code	N.P.x.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
S'	C.S	si
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
est	V.P.3.s	être
,	PONCT.W	,
on	CL.suj.3.m.s	on
met	V.P.3.s	mettre
à	P	à
jour	N.C.m.s	jour
la	D.def.f.s	le
quan=té	N.C.f.s	quançté
,	PONCT.W	,
$lp->qte	N.P.x.s	<unknown>
=	V.P.3.s	être
$lp->qte	N.P.x.s	<unknown>
-	PONCT.W	-
1	N.card.m.s	@card@
;	PONCT.W	;
en	P	en
supprimant	VG	supprimer
1	D.card.m.s	@card@
unité	N.C.f.s	unité
if	A.qual.m.s	if
(	PONCT.W	(
$lp->qte	N.C.m.s	<unknown>
<	N.C.m.s	<
1	N.card.m.s	@card@
)	PONCT.W	)
{	N.C.m.s	{
Par	P	par
contre	ADV.-	contre
,	PONCT.W	,
s'	C.S	si
il	CL.suj.3.m.s	il
ne	ADV.neg	ne
reste	V.P.3.s	rester
plus	ADV.neg	plus
rien	PRO.neg.m.s	rien
unset($this->lignes[$code])	N.C.m.s	unsetçëthis-ëlignecodeë
;	PONCT.W	;
(	PONCT.W	(
qte	C.S	<unknown>
<	N.C.m.s	<
1	N.card.m.s	@card@
)	PONCT.W	)
,	PONCT.W	,
on	CL.suj.3.m.s	on
supprime	V.P.3.s	supprimer
la	D.def.f.s	le
ligne	N.C.f.s	ligne
$this->nbProduits	N.P.x.s	<unknown>
=	PONCT.W	=
$this->nbProduits	N.P.x.s	<unknown>
-	PONCT.W	-
1	A.card.m.s	@card@
;	PONCT.W	;
de	P	de
panier	N.C.m.s	panier
du	P+D.def.m.s	du
tableau	N.C.m.s	tableau
}	N.C.m.s	}
}	N.C.m.s	}
}	P	à
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.f.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
134	D.card.m.p	@card@
PHP	N.C.m.p	php
:	PONCT.W	:
Panier	N.P.m.s	Panier
avancé	VK.m.s	avancer
•	N.P.m.s	•
C'	CL.suj.3.m.s	ce
est	V.P.3.s	être
un	D.ind.m.s	un
objet	N.C.m.s	objet
Panier	N.P.m.s	Panier
que	C.S	que
notre	D.poss.m.s	notre
site	N.C.m.s	site
va	V.P.3.s	aller
manipuler	VW	manipuler
•	P	à
Une	D.ind.f.s	un
page	N.C.f.s	page
«	P	à
ctlPanier.php	N.C.m.s	<unknown>
»	N.P.x.s	»
va	V.P.3.s	aller
ainsi	ADV.-	ainsi
gérer	VW	gérer
le	D.def.m.s	le
panier	N.C.m.s	panier
•	N.C.m.s	•
Pour	P	pour
cela	PRO.dem.m.s	cela
,	PONCT.W	,
el	CL.suj.3.m.s	el
e	CL.obj.3.m.s	e
va	V.P.3.s	aller
devoir	VW	devoir
garder	VW	garder
un	D.ind.m.s	un
objet	N.C.m.s	objet
Panier	N.P.m.s	Panier
dans	P	dans
$_SESSION	N.C.f.s	çäsession
ctlPanier	A.qual.m.s	<unknown>
Panier	N.P.m.s	Panier
+	P	p
$_SESSION	N.C.f.s	çäsession
+	P	p
nbProduits	N.C.m.p	<unknown>
:	PONCT.W	:
int	PRO.card.m.p	<unknown>
+	P	p
ajouterProduit	VK.m.s	ajouterproduire
(	PONCT.W	(
code	N.C.m.s	code
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
prix	N.C.m.s	prix
)	PONCT.W	)
:	PONCT.W	:
int	PRO.card.m.p	<unknown>
+	P	p
ajouterProduit	VK.m.s	ajouterproduire
(	PONCT.W	(
code	N.C.m.s	code
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
prix	N.C.m.s	prix
)	PONCT.W	)
+	P	p
supprimerProduit	VK.m.s	<unknown>
(	PONCT.W	(
code	N.C.m.s	code
)	PONCT.W	)
:	PONCT.W	:
int	PRO.card.m.p	<unknown>
+	P	p
supprimerProduit	VK.m.s	<unknown>
(	PONCT.W	(
code	N.C.m.s	code
)	PONCT.W	)
+	P	p
afficherPanier	N.C.m.s	afficherpanier
(	PONCT.W	(
)	PONCT.W	)
+	P	p
calculerTotal	N.C.m.s	calculertotal
(	PONCT.W	(
)	PONCT.W	)
:	PONCT.W	:
float	N.C.m.s	float
+	P	p
terminerSession	N.C.f.s	terminersession
(	PONCT.W	(
)	PONCT.W	)
+	P	p
getNbProduits	N.C.m.p	<unknown>
(	PONCT.W	(
)	PONCT.W	)
:	PONCT.W	:
int	PRO.card.m.p	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
include	ET	include
"	PONCT.W	"
Panier.php	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

?	PONCT.S	?

>	P	à
<html>	N.P.x.s	<unknown>
.	PONCT.S	.

.	PONCT.S	.

Man	N.P.m.s	Man
.	PONCT.S	.

u	P+D.def.m.s	u
</ele	N.P.m.s	<unknown>
Kir	N.P.m.s	Kir
htmslch	ET	<unknown>
>	P	à
Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
135	D.card.m.p	@card@
PHP	N.C.m.p	php
:	PONCT.W	:
Panier	N.P.m.s	Panier
avancé	VK.m.s	avancer
•	P	à
Or	C.C	or
un	D.ind.m.s	un
objet	N.C.m.s	objet
Panier	N.P.m.s	Panier
est	V.P.3.s	être
un	D.ind.m.s	un
objet	N.C.m.s	objet
complexe	A.qual.m.s	complexe
•	A.qual.m.s	•
Pour	P	pour
le	CL.obj.3.m.s	le
garder	VW	garder
dans	P	dans
$_SESSION	N.P.x.s	<unknown>
,	PONCT.W	,
il	CL.suj.3.m.s	il
va	V.P.3.s	aller
falloir	VW	falloir
le	D.def.m.s	le
«	N.C.m.s	«
compacter	VW	compacter
»	N.C.m.s	»
:	PONCT.W	:
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
la	D.def.f.s	le
sérialisa	N.C.f.s	<unknown>
-on	CL.suj.3.m.s	on
–	P	à
$_SESSION["panier	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
serialize($panier)	N.C.m.s	serializeçpanier
–	P+D.def.m.s	c
unserialize	N.C.m.s	unserialize
(	PONCT.W	(
$_SESSION["panier	N.C.m.s	çäsessionçanier
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
func	ADV.-	func
-on	CL.suj.3.m.s	on
ajouterProduit($produit	VK.m.s	ajouterproduit-produir
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$prix	N.P.m.s	<unknown>
)	PONCT.W	)
{	V.P.3.s	être
Pour	P	pour
ajouter	VW	ajouter
ou	C.C	ou
supprimer	VW	supprimer
un	PRO.ind.m.s	un
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

produit	VK.m.s	produire
au	P+D.def.m.s	au
panier	N.C.m.s	panier
,	PONCT.W	,
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
le	D.def.m.s	le
$panier	N.C.m.s	<unknown>
=	PONCT.W	=
unserialize($_SESSION["panier"])	A.qual.m.s	<unknown>
;	PONCT.W	;
récupérer	VW	récupérer
,	PONCT.W	,
le	CL.obj.3.m.s	le
modifier	VW	modifier
puis	C.C	pui
le	D.def.m.s	le
$panier->ajouterProduit($produit	N.C.m.s	ppanier-çajouterproduitçëtuit
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$prix	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
remeere	VW	<unknown>
dans	P	dans
la	D.def.f.s	le
session	N.C.f.s	session
$_SESSION["panier	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
serialize($panier)	N.C.m.s	serializeçpanier
;	PONCT.W	;
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

func	ADV.-	func
-on	CL.suj.3.m.s	on
supprimerProduit($produit)	VK.m.s	<unknown>
{	N.C.m.s	{
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

$panier	A.qual.m.s	<unknown>
=	PONCT.W	=
unserialize($_SESSION["panier"])	N.C.m.s	<unknown>
;	PONCT.W	;
$panier->supprimerProduit($produit)	N.P.x.s	<unknown>
;	PONCT.W	;
$_SESSION["panier	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
serialize($panier)	N.C.m.s	serializeçpanier
;	PONCT.W	;
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

Pinheiro	N.P.m.s	Pinheiro
-	PONCT.W	-
UP1	N.P.m.s	Up1
/	PONCT.W	@card@
CRI	N.P.m.s	Cri
/	PONCT.W	@card@
UFR06	N.P.f.s	<unknown>
Ges=on	N.P.m.s	Gesçon
136	A.card.m.s	@card@

