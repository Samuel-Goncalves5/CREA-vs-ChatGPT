Développement	N.C.m.s	développement
Web	N.P.m.s	Web
–	N.C.m.s	–
PHP	N.P.m.s	Php
Cours	N.C.m.s	cours
1	D.card.m.s	@card@
Organisation	N.C.f.s	organisation
•	P	à
12	D.card.f.p	@card@
séances	N.C.f.p	séance
•	P	à
Une	D.ind.f.s	un
séance	N.C.f.s	séance
=	PONCT.W	=
1h30	N.C.f.p	@card@
cours	P	cours
1h30	N.C.f.p	@card@
TD	N.C.m.p	td
,	PONCT.W	,
Projet	N.C.m.s	projet
•	P	à
Projet	N.C.m.s	projet
en	P	en
binôme	N.C.m.s	binôme
ou	C.C	ou
en	P	en
solo	N.C.m.s	solo
(	PONCT.W	(
selon	P	selon
les	D.def.m.p	le
groupes	N.C.m.p	groupe
du	P+D.def.m.s	du
premier	A.ord.m.s	premier
semestre	N.C.m.s	semestre
)	PONCT.W	)
•	N.C.m.s	•
1	A.card.m.s	@card@
Devoir	N.C.m.s	devoir
Sur	P	sur
Table	N.P.m.s	Table
•	P	à
Interros	N.P.m.s	Interros
Surprises	N.C.f.p	surprise
10	D.card.f.p	@card@
minutes	N.C.f.p	minute
•	P	à
Participation	N.C.f.s	participation
,	PONCT.W	,
travail	N.C.m.s	travail
continu	VK.m.s	continir
notés	VK.m.p	noter
sous	P	sous
forme	N.C.f.s	forme
de	P	de
points	N.C.m.p	point
bonus	A.qual.m.p	bonu
•	P	à
TD	N.C.m.p	td
de	P	de
la	D.def.f.s	le
semaine	N.C.f.s	semaine
,	PONCT.W	,
divers	A.qual.m.p	divers
documents	N.C.m.p	document
et	C.C	et
informations	N.C.f.p	information
diverses	A.qual.f.p	divers
sur	P	sur
l'	D.def.f.s	le
EPI	N.P.x.s	Epi
•	P	à
Fin	N.C.f.s	fin
cours	N.C.m.s	cours
avril	N.C.m.s	avril
•	P	à
Evaluation	N.C.f.s	evaluation
–	P	à
Contrôle	N.C.m.s	contrôle
continu	VK.m.s	continir
(	PONCT.W	(
50	D.card.m.p	@card@
%	N.C.m.p	%
)	PONCT.W	)
•	P	à
Devoir	N.P.m.s	Devoir
Maison	N.C.f.s	maison
•	P	à
Projet	N.C.m.s	projet
•	N.C.m.s	•
1	D.card.m.s	@card@
Devoirs	N.C.m.s	devoir
Sur	P	sur
Table	N.C.f.s	table
•	D.card.f.p	•
Interrogations	N.C.f.p	interrogation
surprises	VK.f.p	surprendre
•	P	à
Bonus	N.P.m.s	Bonus
Participation	N.C.f.s	participation
–	P	à
Examen	N.P.m.s	Examen
partiel	A.qual.m.s	partiel
(	PONCT.W	(
50	D.card.m.p	@card@
%	N.C.m.p	%
)	PONCT.W	)
Programme	N.C.m.s	programme
du	P+D.def.m.s	du
cours	N.C.m.s	cours
•	P	à
Introduction	N.C.f.s	introduction
générale	A.qual.f.s	général
au	P+D.def.m.s	au
web	N.C.m.s	web
–	D.card.f.p	–
Architectures	N.C.f.p	architecture
techniques	A.qual.f.p	technique
–	P+D.def.m.s	c
Rappel	N.P.m.s	Rappel
sur	P	sur
HTML	N.P.m.s	<unknown>
et	C.C	et
la	D.def.f.s	le
différence	N.C.f.s	différence
Statique/Dynamique	N.P.x.s	<unknown>
–	P	à
Explications	N.C.f.p	explication
sur	P	sur
l'	D.def.m.s	le
environnement	N.C.m.s	environnement
web	A.qual.m.s	web
–	P	à
Premiers	A.ord.m.p	premier
pas	N.C.m.p	pas
en	P	en
PHP	N.C.m.s	php
–	P	à
Installation	N.C.f.s	installation
WAMP/MAMP/XAMP	N.P.x.s	<unknown>
•	P+D.def.m.s	c
PHP	N.P.m.s	Php
•	P+D.def.m.s	c
PHP	N.C.m.s	php
et	C.C	et
MySQL	N.P.m.s	Mysql
Architecture	N.C.f.s	architecture
générale	A.qual.f.s	général
d'	P	de
un	D.ind.m.s	un
site	N.C.m.s	site
web	N.C.m.s	web
Base	A.qual.m.s	bas
de	P	de
Données	N.P.m.s	Données
(	PONCT.W	(
information	N.C.f.s	information
brute	A.qual.f.s	brut
)	PONCT.W	)
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
(	PONCT.W	(
utilisateur	N.C.m.s	utilisateur
)	PONCT.W	)
(	PONCT.W	(
site	N.C.m.s	site
visible	A.qual.m.s	visible
)	PONCT.W	)
Serveur	N.C.m.s	serveur
d'	P	de
Application	N.C.f.s	application
(	PONCT.W	(
traitements	N.C.m.p	traitement
internes	A.qual.m.p	interne
)	PONCT.W	)
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Architecture	N.C.f.s	architecture
générale	A.qual.f.s	général
d'	P	de
un	D.ind.m.s	un
site	N.C.m.s	site
web	N.C.m.s	web
Base	A.qual.m.s	bas
de	P	de
Données	N.P.m.s	Données
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Serveur	N.P.m.s	Serveur
d'	P	de
Application	N.C.f.s	application
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Architecture	N.C.f.s	architecture
générale	A.qual.f.s	général
d'	P	de
un	D.ind.m.s	un
site	N.C.m.s	site
web	N.C.m.s	web
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
&	PONCT.W	&
Base	N.C.m.s	base
de	P	de
Données	N.P.m.s	Données
Apache	N.P.m.s	Apache
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Architecture	N.C.f.s	architecture
générale	A.qual.f.s	général
d'	P	de
un	D.ind.m.s	un
site	N.C.m.s	site
web	N.C.m.s	web
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
&	PONCT.W	&
Base	N.C.m.s	base
de	P	de
Données	N.C.f.p	donnée
Apache	N.P.m.s	Apache
XAMP	N.P.m.s	Xamp
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Rappel	N.P.m.s	Rappel
des	P+D.def.f.p	du
versions	N.C.f.p	version
des	P+D.def.f.p	du
technologies	N.C.f.p	technologie
Vérifiez	V.Y.2.p	vérifier
bien	ADV.-	bien
les	D.def.f.p	le
versions	N.C.f.p	version
de	P	de
tutoriaux	N.C.m.p	tutorial
que	PRO.rel.f.p	que
vous	CL.suj.2.m.p	vous
trouverez	V.F.2.p	trouver
sur	P	sur
internet	N.C.m.s	Internet
!	PONCT.S	!

§	P	à
HTML	N.P.m.s	<unknown>
pas	ADV.neg	pas
vraiment	ADV.-	vraiment
de	P	de
version	N.C.f.s	version
minimale	A.qual.f.s	minimal
hormis	P	hormis
1.1	A.card.m.s	@card@
...	PONCT.W	<unknown>
les	D.def.m.p	le
navigateurs	N.C.m.p	navigateur
interprètent	V.P.3.p	interpréter
ce	PRO.dem.m.s	ce
qu'	PRO.rel.m.s	que
ils	CL.suj.3.m.p	il
peuvent	V.P.3.p	pouvoir
§	N.C.m.s	§
HTML	N.P.m.s	<unknown>
5	D.card.f.p	@card@
version	N.C.f.s	version
actuelle	A.qual.f.s	actuel
(	PONCT.W	(
4	N.card.m.s	@card@
passe	V.P.3.s	passer
aussi	ADV.-	aussi
)	PONCT.W	)
§	P	à
PHP	N.C.m.s	php
4	A.card.m.s	@card@
obsolète	A.qual.f.s	obsolète
et	C.C	et
non-supporté	VK.m.s	non-supporter
(	PONCT.W	(
+	P	p
failles	N.C.f.p	faille
de	P	de
sécurité	N.C.f.s	sécurité
)	PONCT.W	)
§	P	à
PHP	N.P.m.s	Php
5.6	D.card.f.p	@card@
supporté	VK.m.s	supporter
§	P+D.def.m.s	c
PHP	N.C.m.s	php
7.3	D.card.f.p	@card@
version	N.C.f.s	version
actuelle	A.qual.f.s	actuel
§	P+D.def.m.s	c
MySQL	N.P.m.s	Mysql
8	D.card.f.p	@card@
version	N.C.f.s	version
actuelle	A.qual.f.s	actuel
(	PONCT.W	(
mais	C.C	mais
peu	ADV.-	peu
de	P	de
soucis	N.C.m.p	souci
avec	P	avec
le	D.def.m.s	le
langage	N.C.m.s	langage
,	PONCT.W	,
car	C.C	car
standard	N.C.m.s	standard
SQL	N.P.m.s	Sql
,	PONCT.W	,
excepté	VK.m.s	excepter
si	ADV.-	si
tutorial	A.qual.m.s	tutorial
<=	P+D.def.m.s	çù
MySQL	N.P.m.s	Mysql
3.0	A.card.m.s	@card@
)	PONCT.W	)
Rappel	N.C.m.s	rappel
des	P+D.def.f.p	du
versions	N.C.f.p	version
des	P+D.def.f.p	du
technologies	N.C.f.p	technologie
Vérifiez	V.Y.2.p	vérifier
bien	ADV.-	bien
les	D.def.f.p	le
versions	N.C.f.p	version
de	P	de
tutoriaux	N.C.m.p	tutorial
que	PRO.rel.f.p	que
vous	CL.suj.2.m.p	vous
trouverez	V.F.2.p	trouver
sur	P	sur
internet	N.C.m.s	Internet
!	PONCT.S	!

§	P	à
Documentation	N.C.f.s	documentation
PHP	N.P.m.s	Php
:	PONCT.W	:
http://php.net/manual/fr/	N.C.m.s	<unknown>
§	P	à
Exemple	N.C.m.s	exemple
concret	A.qual.m.s	concret
avec	P	avec
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
de	P	de
chaînes	N.C.f.p	chaîne
:	PONCT.W	:
http://php.net/manual/fr/ref.strings.php	N.C.m.s	<unknown>
Rappel	N.P.m.s	Rappel
HTML	N.P.m.s	<unknown>
•	P	à
Header	N.P.m.s	Header
/	PONCT.W	@card@
Body	N.P.m.s	Body
•	P	à
Listes	N.C.m.p	liste
•	P	à
Tableaux	N.C.m.p	tableau
•	P	à
Images	N.P.m.s	Images
et	C.C	et
Liens	N.C.m.p	lien
HTML	N.P.m.s	<unknown>
Chaque	D.ind.f.s	chaque
balise	N.C.f.s	balise
ouverte	VK.f.s	ouvrir
html	ADV.-	<unknown>
doit	V.P.3.s	devoir
être	VW	être
fermée	VK.f.s	fermer
<html>	N.P.x.s	<unknown>
<balise>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</balise>	N.P.x.s	<unknown>
head	ET	head
body	ET	body
<head>	N.P.m.s	<unknown>
<title>	ET	<unknown>
Exemple	N.P.m.s	Exemple
HTML	N.P.m.s	<unknown>
</title>	N.P.m.s	<unknown>
title	V.P.3.s	titler
h1	N.C.f.s	<unknown>
p	N.C.f.p	p
p	P	p
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
i	PONCT.W	i
b	N.C.m.s	b
<h1>	N.P.x.s	<unknown>
Exemple</h1>	N.P.x.s	<unknown>
<p>	N.P.x.s	<unknown>
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
<i>	D.card.m.p	<unknown>
really</i>	N.C.m.s	<unknown>
<b>	N.P.x.s	<unknown>
Important</b>	N.P.x.s	<unknown>
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
<p>	ADV.-	-pà
L'	D.def.f.s	le
informatique	N.C.f.s	informatique
peut	V.P.3.s	pouvoir
vous	CL.obj.2.m.p	vous
aider	VW	aider
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
</body>	N.P.x.s	<unknown>
</html>	N.P.m.s	<unknown>
HTML	N.P.m.s	<unknown>
•	P	à
Structure	N.C.f.s	structure
d'	P	de
un	D.ind.m.s	un
document	N.C.m.s	document
HTML	N.P.m.s	<unknown>
<	N.C.m.s	<
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
html>	ET	<unknown>
Indication	N.C.f.s	indication
«	P	à
idiome	N.C.m.s	idiome
»	P+D.def.m.s	c
HTML	N.P.m.s	<unknown>
<html>	N.P.m.s	<unknown>
<head>	N.P.m.s	<unknown>
<	ET	<
meta	ET	meta
name="author	ET	nameçauthor
"	PONCT.W	"
content=	ET	contentà
Entête	N.C.f.s	entête
(	PONCT.W	(
head	ET	head
)	PONCT.W	)
"	PONCT.W	"
Manuele	A.qual.f.s	manuel
Kirsch	N.P.m.s	Kirsch
Pinheiro	N.P.m.s	Pinheiro
"	PONCT.W	"
/>	D.card.f.p	<unknown>
Informations	N.C.f.p	information
générales	A.qual.f.p	général
<	P+D.def.m.s	c
title>	A.qual.m.s	<unknown>
Exemple	N.C.m.s	exemple
HTML	N.P.m.s	<unknown>
</title>	N.P.x.s	<unknown>
sur	P	sur
le	D.def.m.s	le
document	N.C.m.s	document
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<h1>Exemple</h1>	N.P.m.s	<unknown>
<p>Ceci	N.P.m.s	<unknown>
est	V.P.3.s	être
<i>really</i>	N.P.x.s	<unknown>
Corps	N.P.x.s	Corps
(	PONCT.W	(
body	ET	body
)	PONCT.W	)
<b>Important</b>	N.P.m.s	<unknown>
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
Contenu	VK.m.s	contenir
du	P+D.def.m.s	du
document	N.C.m.s	document
<p>	A.qual.m.s	<unknown>
L'	D.def.f.s	le
informatique	N.C.f.s	informatique
peut	V.P.3.s	pouvoir
vous	CL.obj.2.m.p	vous
aider	VW	aider
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
</body>	N.P.x.s	<unknown>
</html>	N.P.m.s	<unknown>
HTML	N.P.m.s	<unknown>
•	P	à
Elément	N.P.m.s	Elément
DOCTYPE	N.C.f.s	doctype
–	P	à
Indique	V.P.3.s	indiquer
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
quelle	D.int.f.s	quel
version	N.C.f.s	version
de	P	de
HTML	N.P.m.s	<unknown>
a	V.P.3.s	avoir
été	VK.m.s	être
utilisée	VK.f.s	utiliser
–	P	à
HTML	N.P.m.s	<unknown>
4.01	D.card.m.p	@card@
•	N.C.m.p	•
Couramment	ADV.-	couramment
compris	VK.m.s	comprendre
par	P	par
tous	A.ind.m.p	tous
les	D.def.m.p	le
navigateurs	N.C.m.p	navigateur
<	N.C.m.p	<
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
html	ADV.-	<unknown>
PUBLIC	A.qual.m.s	public
"	PONCT.W	"
-//W3C//DTD	N.C.m.s	<unknown>
HTML	N.P.m.s	<unknown>
4.01	D.card.m.p	@card@
Transitional//EN	N.C.m.p	<unknown>
"	PONCT.W	"
http://www.w3.org/TR/html4/loose.dtd>	N.C.m.p	<unknown>
–	P	à
HTML	N.P.m.s	<unknown>
5	D.card.m.p	@card@
<	N.C.m.p	<
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
html>	N.C.m.p	<unknown>
•	P	à
En	P	en
cours	N.C.m.s	cours
de	P	de
définition	N.C.f.s	définition
•	P	à
Reconnu	VK.m.s	reconnaître
uniquement	ADV.-	uniquement
par	P	par
les	D.def.m.p	le
navigateurs	N.C.m.p	navigateur
les	D.def.m.p	le
plus	ADV.-	plus
récents	A.qual.m.p	récent
(	PONCT.W	(
Google	N.P.m.s	Google
Chrome	N.P.m.s	Chrome
16.0	N.card.f.s	@card@
,	PONCT.W	,
Firefox	N.P.m.s	Firefox
9.0	N.card.f.s	@card@
,	PONCT.W	,
Internet	N.P.m.s	Internet
Explorer	N.P.m.s	Explorer
9	N.card.m.s	@card@
...	PONCT.W	<unknown>
)	PONCT.W	)
HTML	N.P.m.s	<unknown>
•	P+D.def.m.s	c
Eléments	N.C.m.p	elément
de	P	de
l'	D.def.f.s	le
entête	N.C.f.s	entête
(	PONCT.W	(
head	ET	head
)	PONCT.W	)
<head>	N.P.m.s	<unknown>
<	P	à
meta	V.J.3.s	meter
name="author	ET	nameçauthor
"	PONCT.W	"
–	P	à
Informations	N.C.f.p	information
complémentaires	A.qual.f.p	complémentaire
content=	V.P.3.p	contenter
"	PONCT.W	"
Manuele	A.qual.f.s	manuel
"	PONCT.W	"
/>	N.C.m.s	<unknown>
sur	P	sur
le	D.def.m.s	le
document	N.C.m.s	document
<	D.card.m.s	<
title>	A.qual.m.s	<unknown>
Exemple	N.C.m.s	exemple
HTML	N.P.m.s	<unknown>
</title>	A.ind.m.s	<unknown>
</head>	N.P.x.s	<unknown>
–	N.P.x.s	–
Ce	CL.suj.3.m.s	ce
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
document	N.C.m.s	document
,	PONCT.W	,
donc	ADV.-	donc
ces	D.dem.f.p	ce
informations	N.C.f.p	information
ne	ADV.neg	ne
sont	V.P.3.p	être
pas	ADV.neg	pas
affichées	VK.f.p	afficher
dans	P	dans
la	D.def.f.s	le
page	N.C.f.s	page
–	P	à
Typiquement	ADV.-	typiquement
,	PONCT.W	,
informations	N.C.f.p	information
pour	P	pour
les	D.def.m.p	le
moteurs	N.C.m.p	moteur
de	P	de
recherche	N.C.f.s	recherche
•	P	à
Balises	N.C.f.p	balise
–	P+D.def.m.s	c
<titre>	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
</titre>	N.C.m.s	<unknown>
:	PONCT.W	:
titre	N.C.m.s	titre
du	P+D.def.m.s	du
document	N.C.m.s	document
–	P	à
<meta	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
/>	N.C.m.s	<unknown>
:	PONCT.W	:
métadonnées	N.C.f.p	métadonnée
(	PONCT.W	(
descriptions	N.C.f.p	description
)	PONCT.W	)
sur	P	sur
le	D.def.m.s	le
document	N.C.m.s	document
–	N.C.m.s	–
<link	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
/>	N.C.m.s	<unknown>
,	PONCT.W	,
<style>	N.P.f.s	<unknown>
...	PONCT.W	<unknown>
</style>	N.P.m.s	<unknown>
:	PONCT.W	:
styles	N.C.m.p	style
HTML	N.P.m.s	<unknown>
•	D.card.m.s	•
Eléments	N.C.m.p	elément
de	P	de
l'	D.def.f.s	le
entête	N.C.f.s	entête
(	PONCT.W	(
head	ET	head
)	PONCT.W	)
<	P+D.def.m.s	c
title	N.C.m.s	title
>	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
HTML	N.P.m.s	<unknown>
</	PONCT.W	<unknown>
title	N.C.m.s	title
>	P+D.def.m.s	c
Ouverture	N.C.f.s	ouverture
et	C.C	et
fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
balise	N.C.f.s	balise
<meta	ET	<unknown>
name="author	ET	nameçauthor
"	PONCT.W	"
content=	ET	contentà
"	PONCT.W	"
auteur	N.C.m.s	auteur
"	PONCT.W	"
/>	D.card.m.p	<unknown>
Attributs	N.C.m.p	attribut
associés	VK.m.p	associer
à	P	à
la	D.def.f.s	le
balise	N.C.f.s	balise
Les	D.def.m.p	le
éléments	N.C.m.p	élément
de	P	de
Précisions	N.C.f.p	précision
sur	P	sur
une	D.ind.f.s	un
balise	N.C.f.s	balise
l'	D.def.f.s	le
entête	N.C.f.s	entête
ne	ADV.neg	ne
sont	V.P.3.p	être
Chaque	D.ind.f.s	chaque
balise	N.C.f.s	balise
possède	V.P.3.s	posséder
son	D.poss.m.s	son
ensemble	N.C.m.s	ensemble
pas	ADV.neg	pas
visibles	A.qual.m.p	visible
dans	P	dans
le	D.def.m.s	le
corps	N.C.m.s	corps
du	P+D.def.m.s	du
d'	P	de
attributs	N.C.m.p	attribut
document	ADV.-	document
<balise	A.qual.m.s	çbalise
attribut	N.C.m.s	attribut
=	PONCT.W	=
"	PONCT.W	"
valeur	N.C.f.s	valeur
"	PONCT.W	"
...	PONCT.W	<unknown>
>	ET	>
<meta	ET	<unknown>
name="description	N.C.f.s	nameçdescription
"	PONCT.W	"
value=	N.C.m.s	valueë
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
/>	N.C.m.s	<unknown>
<meta	V.J.3.s	cmeter
charset="ISO-8859-1">	N.C.m.s	<unknown>
HTML	N.C.m.s	<unknown>
•	P	à
Eléments	N.C.m.p	elément
du	P+D.def.m.s	du
corps	N.C.m.s	corps
(	PONCT.W	(
body	ET	body
)	PONCT.W	)
<body>	N.P.m.s	<unknown>
–	P+D.def.m.s	c
Contenu	VK.m.s	contenir
du	P+D.def.m.s	du
document	N.C.m.s	document
<h1>Exemple</h1>	N.P.m.s	<unknown>
<p>Ceci	N.P.m.s	<unknown>
est	V.P.3.s	être
<i>really</i>	N.P.x.s	<unknown>
–	N.P.x.s	–
Partie	VK.f.s	partir
rendue	VK.f.s	rendre
visible	A.qual.f.s	visible
par	P	par
les	D.def.m.p	le
<b>Important</b>	N.C.m.p	<unknown>
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
navigateurs	N.C.m.p	navigateur
<p>	A.qual.m.p	<unknown>
L'	D.def.f.s	le
informatique	N.C.f.s	informatique
peut	V.P.3.s	pouvoir
vous	CL.suj.2.m.p	vous
•	P	à
Balises	N.P.x.s	Balises
:	PONCT.W	:
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
en	CL.obj.3.m.s	en
a	V.P.3.s	avoir
plein	A.qual.m.s	plein
...	PONCT.W	<unknown>
aider	VW	aider
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
</body>	N.P.x.s	<unknown>
–	P	à
Titres	N.C.m.p	titre
:	PONCT.W	:
<h1>	N.P.x.s	<unknown>
,	PONCT.W	,
<h2>	N.P.f.s	<unknown>
...	PONCT.W	<unknown>
<h6>	N.P.f.s	<unknown>
–	P	à
Paragraphe	N.P.m.s	Paragraphe
et	C.C	et
saut	V.P.3.s	sauoir
de	P	de
ligne	N.C.f.s	ligne
:	PONCT.W	:
<p>	N.P.f.s	<unknown>
et	C.C	et
<br	N.P.m.s	<unknown>
/>	PONCT.W	<unknown>
–	D.card.f.p	–
Citations	N.C.f.p	citation
et	C.C	et
mises	N.C.f.p	mise
en	P	en
valeur	N.C.f.s	valeur
:	PONCT.W	:
<b>	N.P.m.s	<unknown>
,	PONCT.W	,
<i>	N.P.f.s	<unknown>
,	PONCT.W	,
<blockquote>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
–	P	à
Images	N.C.f.p	image
et	C.C	et
liens	N.C.m.p	lien
:	PONCT.W	:
<img>	N.C.m.p	<unknown>
,	PONCT.W	,
<a	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
>	N.C.m.s	>
...	PONCT.W	<unknown>
–	N.C.m.s	–
Listes	N.P.m.s	Listes
:	PONCT.W	:
<ol>	N.C.m.p	çolà
,	PONCT.W	,
<ul>	N.P.f.s	<unknown>
,	PONCT.W	,
<li>	N.P.m.s	<unknown>
–	P	à
Tableaux	N.C.m.p	tableau
:	PONCT.W	:
<table>	N.P.f.s	<unknown>
,	PONCT.W	,
<tr>	N.P.f.s	<unknown>
,	PONCT.W	,
<td>	N.P.f.s	<unknown>
...	PONCT.W	<unknown>
–	P+D.def.m.s	c
Organisation	N.C.f.s	organisation
du	P+D.def.m.s	du
document	N.C.m.s	document
:	PONCT.W	:
<div>	N.P.f.s	<unknown>
,	PONCT.W	,
<section>	N.P.f.s	<unknown>
...	PONCT.W	<unknown>
HTML	N.P.m.s	<unknown>
•	P	à
Eléments	N.C.m.p	elément
du	P+D.def.m.s	du
corps	N.C.m.s	corps
(	PONCT.W	(
body	N.C.m.s	body
)	PONCT.W	)
•	P	à
Les	D.def.m.p	le
titres	N.C.m.p	titre
:	PONCT.W	:
h1	N.C.f.s	<unknown>
,	PONCT.W	,
h2	N.C.m.s	<unknown>
,	PONCT.W	,
h3	N.C.f.s	<unknown>
,	PONCT.W	,
h4	D.card.m.p	<unknown>
,	PONCT.W	,
h5	N.C.f.s	<unknown>
,	PONCT.W	,
h6	N.C.f.s	<unknown>
–	N.C.m.p	–
Les	D.def.m.p	le
éléments	N.C.m.p	élément
h	A.qual.m.p	h
x	PRO.card.m.p	x
permettent	V.P.3.p	permettre
de	P	de
définir	VW	définir
des	D.ind.m.p	du
titres	N.C.m.p	titre
de	P	de
différents	A.qual.m.p	différent
niveaux	N.C.m.p	niveau
•	P	à
h1	N.C.f.s	<unknown>
correspond	V.P.3.s	correspondre
au	P+D.def.m.s	au
titre	N.C.m.s	titre
principal	A.qual.m.s	principal
–	C.C	c
Ils	CL.suj.3.m.p	il
doivent	V.P.3.p	devoir
apparaître	VW	apparaître
dans	P	dans
l'	D.def.m.s	le
ordre	N.C.m.s	ordre
(	PONCT.W	(
h1	N.C.f.s	<unknown>
avant	P	avant
h2	N.C.m.s	<unknown>
)	PONCT.W	)
avec	P	avec
un	D.ind.m.s	un
seul	A.ind.m.s	seul
titre	N.C.m.s	titre
principal	A.qual.m.s	principal
(	PONCT.W	(
h1	N.C.f.s	<unknown>
)	PONCT.W	)
<body>	N.P.m.s	<unknown>
<h1>	N.P.x.s	<unknown>
Exemple</h1>	N.P.x.s	<unknown>
h1	N.C.f.s	<unknown>
...	PONCT.W	<unknown>
</body>	N.P.m.s	<unknown>
HTML	N.P.m.s	<unknown>
•	P+D.def.m.s	c
Eléments	N.C.m.p	elément
du	P+D.def.m.s	du
corps	N.C.m.s	corps
(	PONCT.W	(
body	N.C.m.s	body
)	PONCT.W	)
•	N.C.m.s	•
Paragraphe	N.P.m.s	Paragraphe
,	PONCT.W	,
saut	V.P.3.s	sauoir
de	P	de
ligne	N.C.f.s	ligne
et	C.C	et
citation	N.C.f.s	citation
...	PONCT.W	<unknown>
–	P	à
La	D.def.f.s	le
balise	N.C.f.s	balise
<p>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
</p>	N.P.m.s	<unknown>
indique	V.P.3.s	indiquer
un	D.ind.m.s	un
paragraphe	N.C.m.s	paragraphe
–	P	à
La	D.def.f.s	le
balise	N.C.f.s	balise
<br	N.P.m.s	<unknown>
/>	PONCT.W	<unknown>
fait	V.P.3.s	faire
un	D.ind.m.s	un
simple	A.qual.m.s	simple
saut	N.C.m.s	saut
de	P	de
ligne	N.C.f.s	ligne
–	N.C.m.s	–
Les	D.def.f.p	le
balises	N.C.f.p	balise
<b>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</b>	N.P.x.s	<unknown>
et	C.C	et
<i>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</i>	N.P.m.s	<unknown>
mettent	V.P.3.p	mettre
un	D.ind.m.s	un
texte	N.C.m.s	texte
en	P	en
relief	N.C.m.s	relief
(	PONCT.W	(
en	P	en
gras	N.C.m.s	gras
ou	C.C	ou
en	P	en
italique	N.C.f.s	italique
)	PONCT.W	)
–	P	à
La	D.def.f.s	le
balise	N.C.f.s	balise
<blockquote>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
</blockquote>	N.P.m.s	<unknown>
permet	V.P.3.s	permettre
de	P	de
citer	VW	citer
une	D.ind.f.s	un
autre	A.ind.f.s	autre
page	N.C.f.s	page
Web	N.P.m.s	Web
<blockquote	N.P.m.s	<unknown>
cite="http://source/	N.C.m.s	<unknown>
"	PONCT.W	"
>	P	à
citation	N.C.f.s	citation
</blockquote>	N.P.x.s	<unknown>
–	P	à
La	D.def.f.s	le
balise	N.C.f.s	balise
<hr	N.P.m.s	<unknown>
/>	N.P.x.s	<unknown>
permet	V.P.3.s	permettre
d'	P	de
établir	VW	établir
une	D.ind.f.s	un
séparation	N.C.f.s	séparation
(	PONCT.W	(
ligne	N.C.f.s	ligne
horizontal	A.qual.m.s	horizontal
)	PONCT.W	)
dans	P	dans
le	D.def.m.s	le
document	N.C.m.s	document
HTML	N.P.m.s	<unknown>
•	P	à
Eléments	N.C.m.p	elément
body	ET	body
<html>	ET	<unknown>
h1	ET	<unknown>
<head>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
h2	N.C.m.s	<unknown>
i	PONCT.W	i
<h1>	N.P.x.s	<unknown>
Exemple	N.C.m.s	exemple
h1</h1>	A.ind.m.s	<unknown>
br	N.C.m.s	<unknown>
<h2>	ET	çhôë
Exemple	N.C.m.s	exemple
h2</h2>	N.P.x.s	<unknown>
p	P	p
<p>	N.P.x.s	<unknown>
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
paragraphe	N.C.m.s	paragraphe
avec	P	avec
un	D.ind.m.s	un
<i>	A.qual.m.s	çië
terme	N.C.m.s	terme
technique</i>	A.qual.m.s	<unknown>
et	C.C	et
un	D.ind.m.s	un
b	N.C.m.s	b
<br/>	N.C.m.s	<unknown>
<b>	N.P.m.s	<unknown>
mot-clé</b>	N.P.x.s	Mot-Cléëmbë
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
<blockquote	ET	çblockquote
cite=	ET	citeë
"	PONCT.W	"
http://fr.wikipedia.org/wiki/	N.C.m.s	<unknown>
Hypertext_markup_language	N.P.x.s	Hypertextëmarguage
"	PONCT.W	"
>	N.C.m.s	>
HTML	N.P.m.s	<unknown>
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
conçu	VK.m.s	concevoir
pour	P	pour
spécifier	VW	spécifier
l'	D.def.f.s	le
apparence	N.C.f.s	apparence
visuelle	A.qual.f.s	visuel
exacte	A.qual.f.s	exact
des	P+D.def.m.p	du
documents	N.C.m.p	document
.	PONCT.S	.

</blockquote>	N.P.x.s	<unknown>
hr	A.qual.m.s	<unknown>
<hr/>	N.P.m.s	<unknown>
<p>	N.P.x.s	<unknown>
L'	D.def.f.s	le
informatique	N.C.f.s	informatique
peut	V.P.3.s	pouvoir
vous	CL.obj.2.m.p	vous
aider	VW	aider
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
blockquote	N.C.m.s	blockquote
</body>	N.P.x.s	<unknown>
</html>	ET	<unknown>
HTML	N.P.m.s	<unknown>
•	P+D.def.m.s	c
HTML	N.P.m.s	<unknown>
–	P	à
Langage	N.C.m.s	langage
de	P	de
balises	N.C.f.p	balise
,	PONCT.W	,
permettant	VG	permettre
la	D.def.f.s	le
structuration	N.C.f.s	structuration
des	P+D.def.f.p	du
pages	N.C.f.p	page
Web	N.P.m.s	Web
–	P	à
Organisation	N.C.f.s	organisation
en	P	en
balises	N.C.f.p	balise
<balise	V.P.3.s	çbaliser
attr="valeur">	A.qual.f.s	atträçvaleurçë
...	PONCT.W	<unknown>
</balise>	N.P.x.s	<unknown>
–	P+D.def.m.s	c
Organisation	N.C.f.s	organisation
du	P+D.def.m.s	du
document	N.C.m.s	document
•	P	à
Entête	N.C.f.s	entête
:	PONCT.W	:
head	ET	head
•	P	à
Corps	N.C.m.s	corps
du	P+D.def.m.s	du
document	N.C.m.s	document
:	PONCT.W	:
body	ET	body
–	P	à
Différents	A.qual.m.p	différent
types	N.C.m.p	type
de	P	de
balises	N.C.f.p	balise
possibles	A.qual.f.p	possible
•	A.qual.f.p	•
Listes	N.C.m.p	liste
,	PONCT.W	,
tableaux	N.C.m.p	tableau
,	PONCT.W	,
images	N.C.f.p	image
,	PONCT.W	,
liens	N.C.m.p	lien
...	PONCT.W	<unknown>
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
listes	N.C.f.p	liste
•	P	à
Plusieurs	D.ind.m.p	plusieurs
types	N.C.m.p	type
de	P	de
listes	N.C.f.p	liste
sont	V.P.3.p	être
possibles	A.qual.m.p	possible
–	P	à
Listes	N.C.m.p	liste
numérotés	VK.m.p	numéroter
:	PONCT.W	:
<ol>	N.C.m.p	çolà
...	PONCT.W	<unknown>
</ol>	N.C.m.s	<unknown>
–	P	à
Listes	N.C.m.p	liste
non-numérotés	VK.m.p	non-numéroter
:	PONCT.W	:
<ul>	N.C.m.p	çulà
...	PONCT.S	<unknown>
</ul>	N.P.f.s	<unknown>
–	P+D.def.m.s	c
Peu	PRO.ind.m.p	peu
importe	V.P.3.s	importer
la	D.def.f.s	le
liste	N.C.f.s	liste
,	PONCT.W	,
un	D.ind.m.s	un
seul	A.ind.m.s	seul
moyen	N.C.m.s	moyen
d'	P	de
indiquer	VW	indiquer
les	D.def.m.p	le
éléments	N.C.m.p	élément
:	PONCT.W	:
<li>	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
</li>	N.P.m.s	<unknown>
<ol>	N.P.m.s	<unknown>
<li>	N.P.m.s	<unknown>
Item	N.P.m.s	Item
1	D.card.m.s	@card@
</li>	N.P.m.s	<unknown>
<li>	N.P.m.s	<unknown>
Item	N.P.m.s	Item
2	D.card.m.p	@card@
</li>	N.C.m.p	<unknown>
</ol>	N.P.x.s	<unknown>
<ul>	N.P.x.s	<unknown>
<li>	ET	çlië
Premier	A.ord.m.s	premier
item	ET	item
</li>	N.P.m.s	<unknown>
<li>	N.P.m.s	<unknown>
Second	N.P.m.s	Second
item	N.P.m.s	Item
</li>	N.P.m.s	<unknown>
</ul>	N.P.m.s	<unknown>
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
tableaux	N.C.m.p	tableau
•	P	à
Pour	P	pour
créer	VW	créer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
en	P	en
HTML	N.P.f.s	<unknown>
,	PONCT.W	,
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
combiner	VW	combiner
plusieurs	D.ind.f.p	plusieurs
balises	N.C.f.p	balise
:	PONCT.W	:
–	P	à
table	N.C.f.s	table
,	PONCT.W	,
tr	PONCT.W	<unknown>
,	PONCT.W	,
td	N.C.m.s	<unknown>
,	PONCT.W	,
caption	N.C.f.s	caption
,	PONCT.W	,
th	ET	th
,	PONCT.W	,
thead	ET	thead
,	PONCT.W	,
tbody	ET	<unknown>
<table	A.qual.m.s	çtable
border="1	N.C.m.s	<unknown>
"	PONCT.W	"
>	D.card.m.s	>
Tableau	N.C.m.s	tableau
<tr>	N.P.m.s	<unknown>
<table>	N.C.f.s	<unknown>
Ligne	N.P.m.s	Ligne
<td>	N.P.x.s	<unknown>
HTML	N.P.m.s	<unknown>
2</td>	N.P.x.s	<unknown>
<tr>	N.P.x.s	<unknown>
<td>	N.P.x.s	<unknown>
1995</td>	N.P.x.s	<unknown>
</tr>	N.P.x.s	<unknown>
<tr>	N.P.x.s	<unknown>
<td>HTML	N.P.m.s	<unknown>
4</td>	N.P.x.s	<unknown>
<td>1999</td>	N.P.x.s	<unknown>
Cellule	N.P.f.s	Cellule
</tr>	N.P.f.s	<unknown>
<td>	N.P.f.s	<unknown>
</table>	N.P.x.s	<unknown>
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
tableaux	N.C.m.p	tableau
<table	A.qual.m.s	çtable
border="1">	A.qual.f.s	borderç-ëë
caption	N.C.f.s	caption
:	PONCT.W	:
légende	A.qual.f.s	légend
<caption>	N.C.f.s	ccaptionç
Historique	A.qual.f.s	historique
du	P+D.def.m.s	du
HTML	N.P.m.s	<unknown>
</caption>	N.P.x.s	<unknown>
<thead>	N.P.x.s	<unknown>
thead	ET	thead
:	PONCT.W	:
Entête	N.C.f.s	entête
du	P+D.def.m.s	du
tableau	N.C.m.s	tableau
<tr>	N.P.m.s	<unknown>
<th>	N.P.m.s	<unknown>
Version</th>	N.P.x.s	<unknown>
th	ET	th
:	PONCT.W	:
Cellule	N.C.f.s	cellule
de	P	de
l'	D.def.f.s	le
entête	N.C.f.s	entête
<th>	N.P.m.s	<unknown>
Année	N.P.m.s	Année
</th>	N.P.m.s	<unknown>
</tr>	ET	<unknown>
</thead>	N.P.x.s	<unknown>
tbody	ET	<unknown>
:	PONCT.W	:
corps	N.C.m.p	corps
du	P+D.def.m.s	du
<tbody>	N.P.m.s	<unknown>
tableau	N.C.m.s	tableau
<tr>	A.qual.m.s	<unknown>
<td>HTML	N.P.m.s	<unknown>
2</td>	N.P.x.s	<unknown>
<td>1995</td>	N.P.x.s	<unknown>
</tr>	N.P.x.s	<unknown>
<tr>	N.P.x.s	<unknown>
<td>HTML	N.P.m.s	<unknown>
4</td>	N.P.x.s	<unknown>
<td>1999</td>	N.P.x.s	<unknown>
</tr>	N.P.x.s	<unknown>
</tbody>	N.P.x.s	<unknown>
</table>	N.P.x.s	<unknown>
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
images	N.C.f.p	image
•	P	à
Insertion	N.C.f.s	insertion
d'	P	de
images	N.C.f.p	image
dans	P	dans
le	D.def.m.s	le
texte	N.C.m.s	texte
:	PONCT.W	:
balise	V.P.3.s	baliser
img	ET	img
<img	ET	<unknown>
src="fichier.jpg	ET	<unknown>
"	PONCT.W	"
width=	ET	widthë
"	PONCT.W	"
80	N.card.m.s	@card@
"	PONCT.W	"
alt="texte	ET	altçëtexte
"	PONCT.W	"
/>	ET	<unknown>
Texte	N.C.m.s	texte
alternatif	A.qual.m.s	alternatif
Taille	N.C.f.s	taille
optionnelle	A.qual.f.s	optionnel
infobulle	A.qual.f.s	infobulle
width=	ET	widthë
"	PONCT.W	"
80	N.card.m.s	@card@
"	PONCT.W	"
height="70	N.C.m.p	<unknown>
"	PONCT.W	"
src	N.C.m.s	<unknown>
:	PONCT.W	:
où	ADV.int	où
se	CL.refl.3.f.s	se
trouve	V.P.3.s	trouver
l'	D.def.f.s	le
image	N.C.f.s	image
Page.html	N.P.m.s	<unknown>
Soit	C.C	soit
elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
avec	P	avec
la	D.def.f.s	le
page	N.C.f.s	page
Web	N.P.m.s	Web
img	N.C.m.s	<unknown>
(	PONCT.W	(
répertoire	N.C.m.s	répertoire
)	PONCT.W	)
src=".\img\Paris_ND.jpg	N.P.x.s	<unknown>
"	PONCT.W	"
Paris_ND.jpg	N.P.x.s	<unknown>
(	PONCT.W	(
fichier	N.C.m.s	fichier
)	PONCT.W	)
Soit	C.C	soit
elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
sur	P	sur
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
:	PONCT.W	:
src="http://lsteffenel.fr/images/petanque-cochonnet.jpg	N.P.x.s	<unknown>
"	PONCT.W	"
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
images	N.C.f.p	image
•	P	à
Balises	N.P.m.s	Balises
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
Images	N.C.f.p	image
<html>	N.P.x.s	<unknown>
<head>	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
</head>	N.P.m.s	<unknown>
<body>	N.P.m.s	<unknown>
<h1>Exemples	N.C.m.p	çh1eexemple
</h1>	ET	<unknown>
<p>Image	N.P.x.s	<unknown>
distante	A.qual.f.s	distant
:	PONCT.W	:
<img	ET	<unknown>
src="http://lsteffenel.fr/images/petanque-cochonnet.jpg	ET	<unknown>
"	PONCT.W	"
width="80	ET	<unknown>
"	PONCT.W	"
alt="Cochonnet	A.qual.m.s	altäëcochonnet
et	C.C	et
petanques	N.C.f.p	petanque
"	PONCT.W	"
/>	N.C.m.p	<unknown>
</p>	N.C.m.p	<unknown>
<p>Image	N.C.m.s	çpçimage
local	A.qual.m.s	local
:	PONCT.W	:
<img	ET	<unknown>
src=".\img\Paris_ND.jpg	ET	<unknown>
"	PONCT.W	"
height="70	A.ind.m.s	<unknown>
"	PONCT.W	"
alt="Vue	V.P.3.s	altçhvuer
de	P	de
Paris	N.P.m.s	Paris
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</p>	N.C.m.p	<unknown>
</body>	N.P.x.s	<unknown>
</html>	N.P.m.s	<unknown>
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
liens	N.C.m.p	lien
•	P	à
L'	D.def.m.s	le
usage	N.C.m.s	usage
des	P+D.def.m.p	du
liens	N.C.m.p	lien
permet	V.P.3.s	permettre
de	P	de
relier	VW	relier
une	D.ind.f.s	un
page	N.C.f.s	page
Web	N.P.m.s	Web
à	P	à
d'	D.ind.f.p	de
autres	A.ind.f.p	autre
pages	N.C.f.p	page
,	PONCT.W	,
voire	C.C	voire
à	P	à
d'	D.ind.m.p	de
autres	A.ind.m.p	autre
points	N.C.m.p	point
dans	P	dans
la	D.def.f.s	le
page	N.C.f.s	page
<a	P	ce
href=	ET	hrefà
"	PONCT.W	"
ref">	N.C.m.s	refçë
lien	A.qual.m.s	lien
visible</a>	N.P.x.s	Visibleëmaë
•	P	à
L'	D.def.m.s	le
attribut	N.C.m.s	attribut
href	A.qual.m.s	href
indique	V.P.3.s	indiquer
vers	P	vers
où	ADV.int	où
aller	VW	aller
lorsqu'	C.S	lorsque
on	CL.suj.3.m.s	on
clique	V.P.3.s	cliquer
sur	P	sur
le	D.def.m.s	le
lien	N.C.m.s	lien
–	P	à
Lien	N.P.m.s	Lien
local	A.qual.m.s	local
:	PONCT.W	:
<a	P	ce
href=	ET	hrefà
"	PONCT.W	"
autrePage.html">	ADV.-	<unknown>
vers	P	vers
autre	A.ind.f.s	autre
page	N.C.f.s	page
</a>	N.P.x.s	<unknown>
–	P	à
Lien	N.P.m.s	Lien
distant	A.qual.m.s	distant
:	PONCT.W	:
<	N.P.m.s	<
a	V.P.3.s	avoir
href=	ADV.-	hrefà
"	PONCT.W	"
http://serveur/page.html">	N.C.m.p	<unknown>
ailleurs	ADV.-	ailleurs
</a>	N.P.x.s	<unknown>
–	P	à
Envoyer	VW	envoyer
un	D.ind.m.s	un
mail	N.C.m.s	mail
:	PONCT.W	:
<a	P	ce
href=	ET	hrefà
"	PONCT.W	"
mailto:monemail@serveur.com">	ET	<unknown>
envoyer	VW	envoyer
mail</a>	N.P.x.s	<unknown>
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
liens	N.C.m.p	lien
On	CL.suj.3.m.s	on
attribue	V.P.3.s	attribuer
un	D.ind.m.s	un
identificateur	N.C.m.s	identificateur
<balise	A.qual.m.s	çbalise
id="identificateur	N.C.m.s	idççidentificateur
"	PONCT.W	"
>	P	à
<h1	N.C.m.s	<unknown>
id="debut">	N.C.m.p	idä-debutçë
Liens	N.P.m.s	Liens
</h1>	N.P.x.s	<unknown>
<p>Lien	N.P.m.s	<unknown>
vers	P	vers
<a	D.card.m.p	<unknown>
href="http://epi.univ-paris1.fr">	N.C.m.p	<unknown>
l'	D.def.m.s	le
EPI	N.P.m.s	Epi
</a>	N.P.x.s	<unknown>
</p>	N.P.x.s	<unknown>
<p>Lien	N.P.m.s	<unknown>
vers	P	vers
<a	D.card.m.p	<unknown>
href="coursHTML-5.html">	ET	<unknown>
exemple	V.P.3.s	exempler
tableaux	A.qual.m.p	tableau
</a>	N.P.x.s	<unknown>
</p>	N.P.x.s	<unknown>
<p>Envoyer	VW	äpçenvoyer
un	D.ind.m.s	un
mail	N.C.m.s	mail
à	P	à
<a	D.card.m.p	<unknown>
href="mailto:moi@mail.com">	ET	<unknown>
moi	PPRO.1.m.s	moi
</a>	N.P.x.s	<unknown>
</p>	N.C.m.p	<unknown>
<p>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
Lien	ADV.-	lien
vers	P	vers
l'	D.def.m.s	le
identificateur	N.C.m.s	identificateur
<a	P	ce
href=	N.C.m.s	hrefà
"	PONCT.W	"
#identificateur">	N.P.m.s	<unknown>
<p>	N.P.x.s	<unknown>
<a	N.P.x.s	<unknown>
href="coursHTML-7.html#debut">	N.P.x.s	<unknown>
Retourner	VW	retourner
au	P+D.def.m.s	au
début	N.C.m.s	début
</a>	N.P.x.s	<unknown>
</p>	N.P.x.s	<unknown>
Statique	A.qual.m.s	statique
vs	A.qual.m.s	vs
Dynamique	N.C.m.s	dynamique
•	N.C.m.s	•
Statique	N.P.m.s	Statique
:	PONCT.W	:
Partie	N.C.f.s	partie
«	P	à
fixe	N.C.m.s	fixe
»	N.C.m.s	»
des	P+D.def.f.p	du
pages	N.C.f.p	page
–	P+D.def.m.s	c
HTML	N.P.m.s	<unknown>
renvoyées	VK.f.p	renvoyer
au	P+D.def.m.s	au
client	N.C.m.s	client
:	PONCT.W	:
les	D.def.f.p	le
–	A.card.f.p	–
CSS	N.P.f.s	CSS
parties	N.C.f.p	partie
qui	PRO.rel.f.p	qui
ne	ADV.neg	ne
changent	V.P.3.p	changer
pas	ADV.neg	pas
–	P+D.def.m.s	c
JavaScript	N.P.m.s	Javascript
(	PONCT.W	(
JS	N.P.x.s	Js
)	PONCT.W	)
quoi	PRO.rel.f.p	quoi
qu'	PRO.rel.f.p	que
il	CL.suj.3.m.s	il
arrive	V.P.3.s	arriver
•	P	à
Dynamique	N.P.f.s	Dynamique
:	PONCT.W	:
–	P+D.def.m.s	c
CGI	N.P.f.s	Cgi
Partie	VK.f.s	partir
«	P	à
variable	N.C.f.s	variable
»	N.C.m.s	»
des	P+D.def.f.p	du
pages	N.C.f.p	page
–	P	à
PHP	N.P.m.s	Php
renvoyées	VK.f.p	renvoyer
au	P+D.def.m.s	au
client	N.C.m.s	client
:	PONCT.W	:
les	D.def.f.p	le
–	A.card.f.p	–
Java	N.P.m.s	Java
parties	N.C.f.p	partie
qui	PRO.rel.f.p	qui
changent	V.P.3.p	changer
selon	P	selon
–	P	à
JavaScript	N.P.m.s	Javascript
(	PONCT.W	(
JS	N.P.x.s	Js
)	PONCT.W	)
les	D.def.f.p	le
requêtes	N.C.f.p	requête
et	C.C	et
les	D.def.f.p	le
–	A.card.f.p	–
...	PONCT.W	<unknown>
informations	N.C.f.p	information
disponibles	A.qual.f.p	disponible
Statique	A.qual.f.s	statique
vs	D.poss.m.p	votre
Dynamique	N.C.m.s	dynamique
•	P+D.def.m.s	c
Site	ET	site
web	N.C.m.s	web
statique	A.qual.m.s	statique
:	PONCT.W	:
Aucun	D.neg.m.s	aucun
changement	N.C.m.s	changement
dans	P	dans
les	D.def.f.p	le
pages	N.C.f.p	page
lorsque	C.S	lorsque
l'	D.def.m.s	le
on	CL.suj.3.m.s	on
«	CL.obj.3.m.s	c
rafraichit	V.P.3.s	rafraichir
»	P	à
/refait	N.C.m.s	<unknown>
la	D.def.f.s	le
même	A.ind.f.s	même
requête	N.C.f.s	requête
•	N.C.m.s	•
Dynamique	N.P.m.s	Dynamique
:	PONCT.W	:
Les	D.def.f.p	le
pages	N.C.f.p	page
évoluent	V.P.3.p	évoluer
selon	P	selon
les	D.def.f.p	le
informations	N.C.f.p	information
externes	A.qual.f.p	externe
(	PONCT.W	(
à	P	à
chaque	D.ind.f.s	chaque
requête	N.C.f.s	requête
,	PONCT.W	,
en	P	en
général	N.C.m.s	général
)	PONCT.W	)
Statique	N.P.m.s	Statique
vs	PPRO.2.m.p	vs
Dynamique	N.P.m.s	Dynamique
•	P	à
Site	ET	site
web	N.C.m.s	web
statique	A.qual.m.s	statique
body	ET	body
{	P	à
<html>	N.P.x.s	<unknown>
background-color	N.P.m.s	Background-color
:	PONCT.W	:
<head>	N.P.x.s	<unknown>
lightblue	V.P.3.s	<unknown>
;	PONCT.W	;
<link	N.P.m.s	<unknown>
rel="stylesheet	N.C.m.s	<unknown>
"	PONCT.W	"
}	D.card.m.p	}
type="text/css	N.C.m.p	<unknown>
"	PONCT.W	"
href="mystyle.css">	ET	<unknown>
h1	V.P.3.s	haïr
{	P+D.def.m.s	c
</head>	N.P.x.s	<unknown>
color	N.C.m.s	color
:	PONCT.W	:
navy	ET	navy
;	PONCT.W	;
<body>	N.P.m.s	<unknown>
margin-left	N.C.m.s	margin-left
:	PONCT.W	:
20px	N.card.m.s	<unknown>
;	PONCT.W	;
</body>	N.P.x.s	<unknown>
}	P+D.def.m.s	c
</html>	N.P.m.s	<unknown>
CSS	N.P.m.s	CSS
HTML	N.P.m.s	<unknown>
Statique	N.P.m.s	Statique
vs	V.P.3.s	voir
Dynamique	N.P.m.s	Dynamique
•	P	à
Site	ET	site
web	N.C.m.s	web
dynamique	A.qual.m.s	dynamique
body	ET	body
{	P	à
<html>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
background-color	N.C.m.s	background-color
:	PONCT.W	:
<head>	N.P.x.s	<unknown>
include("head.html")	ET	<unknown>
;	PONCT.W	;
lightblue	N.C.f.s	<unknown>
;	PONCT.W	;
<link	N.P.m.s	<unknown>
rel="stylesheet	ET	<unknown>
"	PONCT.W	"
echo	ET	echo
"	PONCT.W	"
<body>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	D.card.m.p	}
type="text/css	N.C.m.p	<unknown>
"	PONCT.W	"
Var	N.P.m.s	Var
=	V.P.3.s	être
3	D.card.m.p	@card@
5	N.card.m.s	@card@
;	PONCT.W	;
href="mystyle.css">	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
Valeur	N.P.m.s	Valeur
:	PONCT.W	:
$Var	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
h1	N.C.m.p	<unknown>
{	N.C.m.p	{
</head>	N.P.x.s	<unknown>
color	N.C.m.s	color
:	PONCT.W	:
navy	ET	navy
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
</body>	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
margin-left	N.C.m.s	margin-left
:	PONCT.W	:
20px	PRO.card.m.p	<unknown>
;	PONCT.W	;
include("foot.html")	N.C.m.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
CSS	N.P.m.s	CSS
HTML	N.P.m.s	<unknown>
PHP	N.P.m.s	Php
Apache	N.P.m.s	Apache
,	PONCT.W	,
URI/URL	N.P.m.s	Uriéurl
,	PONCT.W	,
DNS	N.P.f.s	Dns
,	PONCT.W	,
PHP	N.P.m.s	Php
•	P+D.def.m.s	c
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
:	PONCT.W	:
Apache	N.P.m.s	Apache
(	PONCT.W	(
traite	V.P.3.s	traiter
les	D.def.f.p	le
connexions	N.C.f.p	connexion
et	C.C	et
transmet	V.P.3.s	transmettre
les	D.def.f.p	le
requêtes	N.C.f.p	requête
)	PONCT.W	)
•	N.C.f.s	•
S'	CL.refl.3.m.s	se
appuie	V.P.3.s	appuyer
sur	P	sur
HTTP	N.C.m.s	<unknown>
,	PONCT.W	,
URI/URL	N.P.m.s	Uriéurl
,	PONCT.W	,
DNS	N.P.f.s	Dns
(	PONCT.W	(
pour	P	pour
communiquer	VW	communiquer
ainsi	ADV.-	ainsi
que	C.S	que
comprendre	VW	comprendre
quelle	D.int.f.s	quel
ressource	N.C.f.s	ressource
et	C.C	et
quel	A.int.m.s	quel
site	N.C.m.s	site
sont	V.P.3.p	être
visés	VK.m.p	viser
)	PONCT.W	)
•	N.P.x.s	•
Extension	N.C.f.s	extension
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
web	N.C.m.s	web
:	PONCT.W	:
PHP	N.P.m.s	Php
(	PONCT.W	(
lit	V.P.3.s	lire
les	D.def.f.p	le
requêtes	N.C.f.p	requête
qu'	PRO.rel.f.p	que
Apache	N.P.m.s	Apache
lui	CL.obj.3.m.s	lui
transmet	V.P.3.s	transmettre
,	PONCT.W	,
et	C.C	et
fait	V.P.3.s	faire
les	D.def.m.p	le
traitements	N.C.m.p	traitement
demandés	VK.m.p	demander
)	PONCT.W	)
Apache	N.P.m.s	Apache
&	PONCT.W	&
PHP	N.P.m.s	Php
•	P+D.def.m.s	c
Apache	N.P.m.s	Apache
va	V.P.3.s	aller
traiter	VW	traiter
les	D.def.f.p	le
connexions	N.C.f.p	connexion
et	C.C	et
requêtes	N.C.f.p	requête
•	P	à
PHP	N.P.m.s	Php
va	V.P.3.s	aller
construire	VW	construire
la	D.def.f.s	le
réponse	N.C.f.s	réponse
en	P	en
exécutant	VG	exécuter
la	D.def.f.s	le
logique	N.C.f.s	logique
métier	N.C.m.s	métier
(	PONCT.W	(
le	D.def.m.s	le
code	N.C.m.s	code
)	PONCT.W	)
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Apache	N.P.m.s	Apache
Apache	N.P.m.s	Apache
•	N.P.m.s	•
Apache	N.P.m.s	Apache
:	PONCT.W	:
Serveur	ET	serveur
web	N.C.m.s	web
libre	A.qual.m.s	libre
et	C.C	et
gratuit	A.qual.m.s	gratuit
Dispose	N.P.m.s	Dispose
d'	P	de
extensions	N.C.f.p	extension
pour	P	pour
se	CL.refl.3.f.p	se
lier	VW	lier
à	P	à
PHP	N.P.m.s	Php
ou	C.C	ou
à	P	à
d'	D.ind.m.p	de
autres	A.ind.m.p	autre
outils	N.C.m.p	outil
pour	P	pour
traiter	VW	traiter
les	D.def.f.p	le
requêtes	N.C.f.p	requête
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Apache	N.P.m.s	Apache
Apache	N.P.m.s	Apache
•	N.P.m.s	•
Apache	N.P.m.s	Apache
:	PONCT.W	:
Usage	N.P.m.s	Usage
classique	A.qual.m.s	classique
associe	V.P.3.s	associer
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
à	P	à
des	D.ind.f.p	du
requêtes	N.C.f.p	requête
<html>	A.qual.f.p	<unknown>
http://monsite.fr/page.htm	N.P.x.s	<unknown>
Coucou	N.P.m.s	Coucou
(	PONCT.W	(
GET	N.P.m.s	Get
page.htm	ET	<unknown>
)	PONCT.W	)
</html>	ET	<unknown>
page.htm	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Apache	N.P.m.s	Apache
Apache	N.P.m.s	Apache
1	N.card.m.s	@card@
.	PONCT.S	.

Client	N.P.m.s	Client
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
avec	P	avec
la	D.def.f.s	le
ressource	N.C.f.s	ressource
visée	VK.f.s	viser
2	A.card.f.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
lit	V.P.3.s	lire
la	D.def.f.s	le
requête	N.C.f.s	requête
,	PONCT.W	,
et	C.C	et
cherche	V.P.3.s	chercher
le	D.def.m.s	le
fichier	N.C.m.s	fichier
3	A.card.m.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
répond	V.P.3.s	répondre
à	P	à
la	D.def.f.s	le
requête	N.C.f.s	requête
en	P	en
envoyant	VG	envoyer
le	D.def.m.s	le
fichier	N.C.m.s	fichier
GET	N.P.m.s	Get
page.htm	ET	<unknown>
<html>	N.P.m.s	<unknown>
http://monsite.fr/page.htm	N.P.x.s	<unknown>
Coucou	N.P.m.s	Coucou
(	PONCT.W	(
GET	N.P.m.s	Get
page.htm	N.P.x.s	<unknown>
)	PONCT.W	)
</html>	ET	<unknown>
Coucou	ET	coucou
page.htm	ET	<unknown>
<html>	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Coucou	N.P.m.s	Coucou
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
</html>	N.P.m.s	<unknown>
page.htm	ET	<unknown>
Apache	N.P.m.s	Apache
Apache	N.P.m.s	Apache
•	P	à
Requête	N.C.f.s	requête
et	C.C	et
réponse	V.P.3.s	réponser
transmises	VK.f.p	transmettre
avec	P	avec
:	PONCT.W	:
–	P	à
HTTP	N.C.m.s	<unknown>
1.0	D.card.m.p	@card@
ou	C.C	ou
HTTP	N.C.m.p	<unknown>
1.1	A.card.m.s	@card@
ou	C.C	ou
HTTP/2	N.C.m.p	<unknown>
–	N.C.m.s	–
(	PONCT.W	(
HyperText	N.P.m.s	Hypertext
Transfer	N.P.m.s	Transfer
Protocol	N.P.m.s	Protocol
)	PONCT.W	)
GET	N.P.m.s	Get
page.htm	ET	<unknown>
<html>	N.P.m.s	<unknown>
http://monsite.fr/page.htm	N.P.x.s	<unknown>
Coucou	N.P.m.s	Coucou
(	PONCT.W	(
GET	N.P.m.s	Get
page.htm	N.P.x.s	<unknown>
)	PONCT.W	)
</html>	ET	<unknown>
Coucou	ET	coucou
page.htm	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Protocole	N.P.m.s	Protocole
pour	P	pour
transmettre	VW	transmettre
les	D.def.f.p	le
Apache	A.qual.f.p	apache
informations	N.C.f.p	information
:	PONCT.W	:
HTTP	N.P.m.s	Http
Apache	N.P.m.s	Apache
Apache	N.P.m.s	Apache
•	P+D.def.m.s	c
Serveur	N.P.m.s	Serveur
web	N.C.m.s	web
s'	CL.refl.3.m.s	se
appuie	V.P.3.s	appuyer
donc	ADV.-	donc
,	PONCT.W	,
sur	P	sur
:	PONCT.W	:
–	P	à
Protocole	N.P.m.s	Protocole
HTTP	N.P.m.s	Http
(	PONCT.W	(
utilise	V.P.3.s	utiliser
généralement	ADV.-	généralement
le	D.def.m.s	le
port	N.C.m.s	port
80	A.card.m.s	@card@
)	PONCT.W	)
–	P	à
Protocole	N.P.m.s	Protocole
HTTPS	N.P.m.s	Https
(	PONCT.W	(
utilise	V.P.3.s	utiliser
généralement	ADV.-	généralement
le	D.def.m.s	le
port	N.C.m.s	port
443	A.card.m.s	@card@
)	PONCT.W	)
[	PONCT.W	[
S	CL.refl.3.m.s	s
pour	P	pour
«	P	à
secure	N.C.m.s	secure
»	N.C.m.s	»
,	PONCT.W	,
en	P	en
utilisant	VG	utiliser
des	D.ind.m.p	du
certificats	N.C.m.p	certificat
pour	P	pour
chiffrer	VW	chiffrer
la	D.def.f.s	le
connexion	N.C.f.s	connexion
ET	C.C	et
pour	P	pour
s'	CL.refl.3.m.s	se
assurer	VW	assurer
que	C.S	que
l'	D.def.m.s	le
hôte/host	N.C.m.s	<unknown>
est	V.P.3.s	être
bien	ADV.-	bien
celui	PRO.dem.m.s	celui
que	PRO.rel.m.s	que
l'	CL.obj.3.m.s	le
on	CL.suj.3.m.s	on
cherche	V.P.3.s	chercher
]	PONCT.W	]
•	V.P.3.s	être
Pour	P	pour
pouvoir	VW	pouvoir
communiquer	VW	communiquer
avec	P	avec
les	D.def.m.p	le
navigateurs	N.C.m.p	navigateur
Apache	N.P.m.s	Apache
&	PONCT.W	&
URI/URL	N.P.m.s	Uriéurl
•	P	à
Identification	N.C.f.s	identification
des	P+D.def.f.p	du
ressources	N.C.f.p	ressource
avec	P	avec
URI	N.P.m.s	Uri
et	C.C	et
URL	N.P.m.s	Url
–	N.C.m.s	–
URI	N.P.m.s	Uri
:	PONCT.W	:
Uniform	N.P.m.s	Uniform
Resource	N.P.m.s	Resource
Identifier	N.P.m.s	Identifier
Adresse	N.P.m.s	Adresse
unique	A.qual.m.s	unique
vers	P	vers
–	N.C.m.s	–
URL	N.P.m.s	Url
:	PONCT.W	:
Uniform	N.P.m.s	Uniform
Resource	N.P.m.s	Resource
Locator	N.P.m.s	Locator
la	D.def.f.s	le
ressource	N.C.f.s	ressource
«	P	à
page.htm	N.C.m.s	<unknown>
»	P+D.def.m.s	c
GET	N.P.m.s	Get
page.htm	ET	<unknown>
http://monsite.fr/page.htm	N.P.x.s	<unknown>
(	PONCT.W	(
GET	N.P.m.s	Get
page.htm	N.P.x.s	<unknown>
)	PONCT.W	)
Coucou	N.P.m.s	Coucou
<html>	ET	<unknown>
<html>	N.P.m.s	<unknown>
Coucou	N.P.m.s	Coucou
Navigateur	N.P.m.s	Navigateur
Coucou	N.P.m.s	Coucou
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
</html>	N.P.m.s	<unknown>
</html>	ET	<unknown>
page.htm	ET	<unknown>
page.htm	ET	<unknown>
Apache	N.P.m.s	Apache
Apache	N.P.m.s	Apache
&	PONCT.W	&
URI/URL	N.P.m.s	Uriéurl
•	P	à
Identification	N.C.f.s	identification
des	P+D.def.f.p	du
ressources	N.C.f.p	ressource
avec	P	avec
URI	N.P.m.s	Uri
et	C.C	et
URL	N.P.m.s	Url
•	D.card.m.p	•
http://monsite.fr/page.htm	N.P.x.s	<unknown>
–	P	à
Ressource	N.C.f.s	ressource
:	PONCT.W	:
«	D.card.m.s	«
page.htm	N.C.m.s	<unknown>
»	P	à
–	N.C.m.s	–
Dans	P	dans
le	D.def.m.s	le
dossier	N.C.m.s	dossier
:	PONCT.W	:
«	N.C.m.s	«
/	PONCT.W	@card@
»	N.C.m.s	»
(	PONCT.W	(
la	D.def.f.s	le
racine	N.C.f.s	racine
)	PONCT.W	)
–	N.C.m.s	–
Sur	P	sur
le	D.def.m.s	le
site	N.C.m.s	site
web	N.C.m.s	web
:	PONCT.W	:
«	D.card.m.p	«
http://monsite.fr	N.C.m.s	<unknown>
»	N.C.m.s	»
•	N.C.m.s	•
ftp://machine1.autresite.com/images/oiseau.jpg	N.C.m.s	<unknown>
–	P	à
Ressource	N.C.f.s	ressource
:	PONCT.W	:
«	D.card.m.s	«
oiseau.jpg	N.C.m.p	<unknown>
»	N.C.m.s	»
–	N.C.m.s	–
Dans	P	dans
le	D.def.m.s	le
dossier	N.C.m.s	dossier
:	PONCT.W	:
«	D.card.m.p	«
/images/	N.C.m.p	<unknown>
»	N.C.m.s	»
–	N.C.m.s	–
Sur	P	sur
la	D.def.f.s	le
machine	N.C.f.s	machine
«	P	à
machine1.autresite.com	N.C.m.s	<unknown>
»	N.C.m.s	»
accessible	A.qual.m.s	accessible
en	P	en
«	N.C.m.s	«
ftp://	N.C.m.s	<unknown>
»	P	à
Apache	N.P.m.s	Apache
&	PONCT.W	&
URI/URL	N.P.m.s	Uriéurl
Apache	N.P.m.s	Apache
&	PONCT.W	&
DNS	N.C.m.p	dn
•	P	à
Chaque	D.ind.f.s	chaque
machine	N.C.f.s	machine
sur	P	sur
internet	N.C.m.s	Internet
est	V.P.3.s	être
identifiée	VK.f.s	identifier
par	P	par
son	D.poss.m.s	son
IP	N.P.m.s	Ip
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
IPV4	N.P.m.s	Ipv4
:	PONCT.W	:
8.8.8.8	N.card.m.s	@card@
ou	C.C	ou
127.0.0.1	PRO.card.m.p	@card@
•	P	à
Exemple	N.C.m.s	exemple
IPV6	N.P.x.s	Ipv6
:	PONCT.W	:
2001:0db8:85a3:0000:0000:8a2e	N.card.f.s	<unknown>
:	PONCT.W	:
0370:7334	PRO.card.m.p	@card@
•	P	à
Pas	ADV.neg	pas
très	ADV.-	très
pratique	A.qual.m.s	pratique
pour	P	pour
visiter	VW	visiter
des	D.ind.m.p	du
sites	N.C.m.p	site
web	N.C.m.s	web
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
mais	C.C	mais
parfait	A.qual.m.s	parfait
pour	P	pour
rendre	VW	rendre
unique	A.qual.m.s	unique
une	D.ind.f.s	un
machine	N.C.f.s	machine
Apache	N.P.m.s	Apache
&	PONCT.W	&
DNS	N.C.m.p	dn
•	P	à
DNS	N.C.m.p	dn
:	PONCT.W	:
Domain	N.P.m.s	Domain
Name	N.P.m.s	Name
System	N.P.m.s	System
•	P	à
Gère	N.P.m.s	Gère
les	D.def.m.p	le
«	A.card.m.p	«
noms	N.C.m.p	nom
de	P	de
domaine	N.C.m.s	domaine
»	N.C.m.s	»
(	PONCT.W	(
exemple	N.C.m.s	exemple
:	PONCT.W	:
univ-paris1.fr	N.C.m.s	<unknown>
)	PONCT.W	)
•	N.C.m.s	•
Permet	N.P.m.s	Permet
de	P	de
lier	VW	lier
un	D.ind.m.s	un
nom	N.C.m.s	nom
de	P	de
domaine	N.C.m.s	domaine
à	P	à
une	D.ind.f.s	un
ou	C.C	ou
des	P+D.def.m.p	du
IP	N.C.m.p	ip
•	P+D.def.m.s	c
Permet	N.P.m.s	Permet
de	P	de
gérer	VW	gérer
des	D.ind.m.p	du
«	A.card.m.p	«
sous-domaines	N.C.m.p	sous-domaine
»	N.C.m.s	»
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
:	PONCT.W	:
univ-paris1.fr	ET	<unknown>
www.univ-paris1.fr	ET	<unknown>
ent.univ-paris1.fr	ET	<unknown>
•	P	à
«	P	à
www	N.C.m.s	www
»	N.C.m.s	»
et	C.C	et
«	N.C.m.s	«
ent	V.P.3.p	être
»	N.C.m.p	»
sont	V.P.3.p	être
des	D.ind.m.p	du
sous-domaines	N.C.m.p	sous-domaine
Apache	N.P.m.s	Apache
&	PONCT.W	&
DNS	N.C.m.p	dn
Apache	N.P.m.s	Apache
&	PONCT.W	&
DNS	N.C.m.p	dn
1	N.card.m.s	@card@
.	PONCT.S	.

Client	N.P.m.s	Client
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
avec	P	avec
la	D.def.f.s	le
ressource	N.C.f.s	ressource
visée	VK.f.s	viser
2	A.card.f.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
lit	V.P.3.s	lire
la	D.def.f.s	le
requête	N.C.f.s	requête
,	PONCT.W	,
et	C.C	et
cherche	V.P.3.s	chercher
le	D.def.m.s	le
fichier	N.C.m.s	fichier
3	A.card.m.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
répond	V.P.3.s	répondre
à	P	à
la	D.def.f.s	le
requête	N.C.f.s	requête
en	P	en
envoyant	VG	envoyer
le	D.def.m.s	le
fichier	N.C.m.s	fichier
GET	N.P.m.s	Get
page.htm	ET	<unknown>
HOST	N.P.m.s	Host
chez.moi.fr	ET	<unknown>
<html>	N.P.m.s	<unknown>
GET	N.P.m.s	Get
page.htm	ET	<unknown>
GET	N.P.m.s	Get
page.htm	ET	<unknown>
Coucou	N.P.m.s	Coucou
HOST	N.P.m.s	Host
mio.es	N.P.m.s	<unknown>
HOST	N.P.m.s	Host
chez.moi.fr	ET	<unknown>
</html>	N.P.m.s	<unknown>
Coucou	N.P.m.s	Coucou
Pouet	N.P.m.s	Pouet
page.htm	ET	<unknown>
<html>	ET	<unknown>
<html>	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Coucou	N.P.m.s	Coucou
Pouet	N.P.m.s	Pouet
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
<html>	N.P.m.s	<unknown>
</html>	N.P.m.s	<unknown>
</html>	N.P.m.s	<unknown>
Pouet	ET	pouet
</html>	ET	<unknown>
page.htm	ET	<unknown>
page.htm	ET	<unknown>
Apache	N.P.m.s	Apache
page.htm	ET	<unknown>
Apache	N.P.m.s	Apache
&	PONCT.W	&
DNS	N.C.m.p	dn
•	N.C.m.p	•
Plusieurs	D.ind.m.p	plusieurs
noms	N.C.m.p	nom
de	P	de
domaine	N.C.m.s	domaine
peuvent	V.P.3.p	pouvoir
renvoyer	VW	renvoyer
vers	P	vers
la	D.def.f.s	le
même	A.ind.f.s	même
IP	N.P.m.s	Ip
•	P	à
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
peut	V.P.3.s	pouvoir
donc	ADV.-	donc
afficher	VW	afficher
des	D.ind.m.p	du
sites	N.C.m.p	site
différents	A.qual.m.p	différent
selon	P	selon
l'	D.def.f.s	le
hôte	N.C.f.s	hôte
demandé	VK.m.s	demander
dans	P	dans
la	D.def.f.s	le
requête	N.C.f.s	requête
–	P	à
Chez	P	chez
Apache	N.P.m.s	Apache
,	PONCT.W	,
on	CL.suj.3.m.s	on
appelle	V.P.3.s	appeler
cela	PRO.dem.m.s	cela
des	P+D.def.m.p	du
«	ET	«
virtual	A.qual.m.s	virtual
hosts	N.C.m.p	host
»	P	à
(	PONCT.W	(
vhosts	N.C.m.p	vhost
)	PONCT.W	)
–	N.C.m.s	–
Pour	P	pour
gérer	VW	gérer
cela	PRO.dem.m.s	cela
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
devez	V.P.2.p	devoir
avoir	VW	avoir
accès	N.C.m.s	accès
à	P	à
la	D.def.f.s	le
configuration	N.C.f.s	configuration
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
web	A.qual.m.s	web
.	PONCT.S	.

Ce	PRO.dem.m.s	ce
qui	PRO.rel.m.s	qui
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
toujours	ADV.-	toujours
le	D.def.m.s	le
cas	N.C.m.s	cas
lorsque	C.S	lorsque
vous	CL.suj.2.m.p	vous
souscrivez	V.P.2.p	souscrire
à	P	à
un	D.ind.m.s	un
service	N.C.m.s	service
«	N.C.m.s	«
d'	P	de
hébergement	N.C.m.s	hébergement
web	A.qual.m.s	web
»	A.qual.m.s	»
.	PONCT.S	.

•	N.C.m.s	•
Pour	P	pour
avoir	VW	avoir
un	D.ind.m.s	un
«	N.C.m.s	«
bon	A.qual.m.s	bon
»	N.C.m.s	»
site	N.C.m.s	site
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
utile	A.qual.m.s	utile
de	P	de
lui	CL.obj.3.f.s	lui
choisir	VW	choisir
un	D.ind.m.s	un
nom	N.C.m.s	nom
de	P	de
domaine	N.C.m.s	domaine
pertinent	A.qual.m.s	pertinent
–	P	à
Les	D.def.m.p	le
certificats	N.C.m.p	certificat
pour	P	pour
mettre	VW	mettre
du	P+D.def.m.s	du
HTTPS	N.P.m.s	Https
se	CL.refl.3.m.s	se
basant	VG	baser
sur	P	sur
les	D.def.m.p	le
noms	N.C.m.p	nom
de	P	de
domaine	N.C.m.s	domaine
,	PONCT.W	,
et	C.C	et
pas	ADV.neg	pas
sur	P	sur
les	D.def.m.p	le
IP	N.P.m.s	Ip
Apache	N.P.m.s	Apache
&	PONCT.W	&
PHP	N.P.m.s	Php
•	N.C.m.s	•
PHP	N.P.m.s	Php
est	V.P.3.s	être
une	D.ind.f.s	un
extension	N.C.f.s	extension
à	P	à
côté	N.C.m.s	côté
de	P	de
Apache	N.P.m.s	Apache
<html>	N.P.x.s	<unknown>
–	P+D.def.m.s	c
Apache	N.P.m.s	Apache
configuré	VK.m.s	configurer
pour	P	pour
appeler	VW	appeler
PHP	N.P.m.s	Php
lorsqu'	C.S	lorsque
il	CL.suj.3.m.s	il
<	V.P.3.s	être
?	PONCT.S	?

php	N.C.m.s	<unknown>
voit	V.P.3.s	voir
passer	VW	passer
une	D.ind.f.s	un
requête	N.C.f.s	requête
terminant	VG	terminer
par	P	par
«	D.card.m.s	«
.php	N.C.m.s	<unknown>
»	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
B	N.C.m.s	b
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
–	N.C.m.s	–
PHP	N.P.m.s	Php
traite	V.P.3.s	traiter
le	D.def.m.s	le
fichier	N.C.m.s	fichier
en	P	en
question	N.C.f.s	question
,	PONCT.W	,
et	C.C	et
produit	V.P.3.s	produire
</html>	N.P.x.s	<unknown>
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
renvoyée	VK.f.s	renvoyer
par	P	par
Apache	N.P.m.s	Apache
page.php	ET	<unknown>
GET	N.P.m.s	Get
page.php	ET	<unknown>
GET	N.P.m.s	Get
page.php	ET	<unknown>
B	D.card.m.s	B
<html>	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
<html>	N.P.m.s	<unknown>
B	N.P.m.s	B
B	N.P.m.s	B
</html>	N.P.m.s	<unknown>
</html>	ET	<unknown>
Apache	ET	apache
page.php	ET	<unknown>
page.php	ET	<unknown>
Apache	N.P.m.s	Apache
&	PONCT.W	&
CGI	N.P.f.s	Cgi
•	N.C.m.s	•
CGI	N.P.f.s	Cgi
:	PONCT.W	:
Common	ET	common
Gateway	N.P.m.s	Gateway
Interface	N.P.m.s	Interface
–	P	à
Des	D.ind.m.p	du
outils	N.C.m.p	outil
autres	A.qual.m.p	autre
que	PRO.rel.m.p	que
PHP	N.P.m.s	Php
peuvent	V.P.3.p	pouvoir
être	VW	être
appelés	VK.m.p	appeler
par	P	par
les	D.def.m.p	le
<html>	N.C.m.p	<unknown>
serveurs	A.qual.m.p	serveur
web	N.C.m.s	web
...	PONCT.W	<unknown>
–	N.P.m.s	–
</html>	N.P.m.s	<unknown>
CGI	N.P.f.s	Cgi
est	V.P.3.s	être
un	D.ind.m.s	un
standard	N.C.m.s	standard
pour	P	pour
envoyer	VW	envoyer
les	D.def.f.p	le
requêtes	N.C.f.p	requête
aux	P+D.def.m.p	au
autres	A.ind.m.p	autre
outils	N.C.m.p	outil
,	PONCT.W	,
et	C.C	et
lire	VW	lire
leurs	D.poss.f.p	leur
réponses	N.C.f.p	réponse
page.xyz	N.P.m.s	<unknown>
GET	N.P.m.s	Get
page.xyz	ET	<unknown>
GET	N.P.m.s	Get
page.xyz	ET	<unknown>
Hello	N.P.m.s	Hello
CGI	N.P.m.s	Cgi
<html>	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
<html>	N.P.m.s	<unknown>
B	N.P.m.s	B
Hello	N.P.m.s	Hello
</html>	N.P.m.s	<unknown>
</html>	N.P.m.s	<unknown>
CGI	N.P.m.s	Cgi
Apache	ET	apache
page.xyz	ET	<unknown>
page.xyz	ET	<unknown>
Objectifs	N.C.m.p	objectif
du	P+D.def.m.s	du
cours	N.C.m.s	cours
:	PONCT.W	:
Création	N.C.f.s	création
d'	P	de
un	D.ind.m.s	un
site	N.C.m.s	site
Web	N.P.m.s	Web
dynamique	A.qual.m.s	dynamique
PHP	N.P.m.s	Php
PHP	N.P.m.s	Php
•	N.P.m.s	•
PHP	N.P.m.s	Php
est	V.P.3.s	être
un	D.ind.m.s	un
langage	N.C.m.s	langage
de	P	de
programmation	N.C.f.s	programmation
utilisé	VK.m.s	utiliser
pour	P	pour
la	D.def.f.s	le
construction	N.C.f.s	construction
de	P	de
sites	N.C.m.p	site
Web	N.P.m.s	Web
dynamiques	N.C.f.p	dynamique
–	P	à
Pages	N.C.f.p	page
PHP	N.P.m.s	Php
:	PONCT.W	:
pages	N.C.f.p	page
Web	N.P.m.s	Web
qui	PRO.rel.f.p	qui
contiennent	V.P.3.p	contenir
de	P	de
PHP	N.P.m.s	Php
•	N.C.m.s	•
On	CL.suj.3.m.s	on
va	V.P.3.s	aller
mélanger	VW	mélanger
le	D.def.m.s	le
PHP	N.P.m.s	Php
au	P+D.def.m.s	au
code	N.C.m.s	code
HTML	N.P.m.s	<unknown>
/	PONCT.W	@card@
CSS	N.P.m.s	CSS
•	N.C.m.s	•
Le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
va	V.P.3.s	aller
être	VW	être
analysé	VK.m.s	analyser
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
•	P	à
Le	D.def.m.s	le
résultat	N.C.m.s	résultat
va	V.P.3.s	aller
être	VW	être
une	D.ind.f.s	un
nouvelle	A.qual.f.s	nouveau
page	N.C.f.s	page
Web	N.P.m.s	Web
mise	VK.f.s	mettre
à	P	à
jour	N.C.m.s	jour
automatiquement	ADV.-	automatiquement
par	P	par
le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
coursPHP-1.php	N.C.m.s	<unknown>
<html>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
Le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
est	V.P.3.s	être
à	P	à
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
la	D.def.f.s	le
balise	N.C.f.s	balise
date_default_timezone_set("Europe/Paris")	N.P.x.s	<unknown>
;	PONCT.W	;
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
ou	C.C	ou
entouré	VK.m.s	entourer
par	P	par
la	D.def.f.s	le
balise	N.C.f.s	balise
echo	N.C.m.s	echo
"	PONCT.W	"
<p	P	àp
style='font-style	N.C.m.s	styleë'font-style
:	PONCT.W	:
italic	ET	italic
;	PONCT.W	;
'	PONCT.W	'
>	P	à
Paris	N.P.m.s	Paris
,	PONCT.W	,
le	D.def.m.s	le
"	PONCT.W	"
<script	N.C.m.s	<unknown>
language="php">	ET	languageçphpçë
.date('d	ET	edete-ded
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
...	PONCT.W	<unknown>
</script>	N.C.m.s	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
...	PONCT.W	<unknown>
</html>	N.P.m.s	<unknown>
PHP	N.P.m.s	Php
PHP	N.P.m.s	Php
:	PONCT.W	:
Php	ET	<unknown>
Hypertext	N.P.m.s	Hypertext
Preprocessor	N.P.m.s	Preprocessor
.	PONCT.S	.

Ø	P	à
Langage	N.C.m.s	langage
interprété	VK.m.s	interpréter
pour	P	pour
créer	VW	créer
des	D.ind.m.p	du
sites	N.C.m.p	site
dynamiques	A.qual.m.p	dynamique
Ø	P	à
Langage	N.C.m.s	langage
de	P	de
script	N.C.m.s	script
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
Ø	P	à
Langage	N.C.m.s	langage
faiblement	ADV.-	faiblement
typé	VK.m.s	typer
Ø	P	à
Langage	N.C.m.s	langage
«	P+D.def.m.s	c
Embedded	N.P.m.s	Embedded
HTML	N.P.m.s	<unknown>
»	N.C.m.s	»
Ø	ET	Ø
Open	N.P.m.s	Open
source	N.C.f.s	source
:	PONCT.W	:
PHP	N.P.m.s	Php
a	V.P.3.s	avoir
permis	VK.m.s	permettre
de	P	de
créer	VW	créer
un	D.ind.m.s	un
grand	A.qual.m.s	grand
nombre	N.C.m.s	nombre
de	P	de
sites	N.C.m.p	site
web	N.C.m.s	web
célèbres	A.qual.m.p	célèbre
,	PONCT.W	,
comme	P	comme
Facebook	N.P.m.s	Facebook
,	PONCT.W	,
Wikipédia	N.P.m.s	Wikipédia
,	PONCT.W	,
etc	ADV.-	<unknown>
.	PONCT.S	.

Commandes	N.C.f.p	commande
PHP	N.C.m.s	php
de	P	de
base	N.C.f.s	base
•	P	à
Variables	N.P.m.s	Variables
•	P	à
Types	N.C.m.p	type
•	P	à
Opérateurs	N.C.m.p	opérateur
•	D.card.f.p	•
Fonctions	N.C.f.p	fonction
•	P	à
echo	N.C.m.s	echo
,	PONCT.W	,
gettype	N.C.m.s	gettype
,	PONCT.W	,
unset	N.C.m.s	unset
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
suffit	V.P.3.s	suffire
de	P	de
télécharger	VW	télécharger
la	D.def.f.s	le
suite	N.C.f.s	suite
logiciele	A.qual.f.s	logiciel
:	PONCT.W	:
•	N.P.m.s	•
WAMP	N.P.m.s	Wamp
:	PONCT.W	:
http://www.wampserver.com/	N.C.m.s	<unknown>
•	N.C.m.s	•
MAMP	N.P.m.s	Mamp
:	PONCT.W	:
http://www.mamp.info/	N.C.m.s	<unknown>
•	P	à
XAMPP	N.P.m.s	Xampp
:	PONCT.W	:
https://www.apachefriends.org/fr/	N.C.m.s	<unknown>
Et	C.C	et
un	D.ind.m.s	un
éditeur	N.C.m.s	éditeur
de	P	de
texte	N.C.m.s	texte
:	PONCT.W	:
•	D.card.m.s	•
Sublim	N.P.m.s	Sublim
Text	N.P.m.s	Text
(	PONCT.W	(
macOs	N.C.m.p	maco
)	PONCT.W	)
:	PONCT.W	:
http://www.sublimetext.com/2	N.C.m.s	<unknown>
•	P	à
Notepad++	N.P.m.s	Notepadun
(	PONCT.W	(
Windows	N.P.m.s	Windows
)	PONCT.W	)
:	PONCT.W	:
https://notepad-plus-plus.org/fr/	N.C.m.s	<unknown>
•	P	à
Autres	PRO.ind.m.p	autre
(	PONCT.W	(
Linux/BSD/UNIX	N.P.x.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
emacs	N.C.m.p	emac
,	PONCT.W	,
vim	N.C.m.s	vim
,	PONCT.W	,
nano	N.C.m.s	nano
,	PONCT.W	,
gedit	N.C.m.s	gedit
,	PONCT.W	,
...	PONCT.W	<unknown>
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
PHP	N.P.m.s	Php
Syntaxe	N.C.m.s	syntaxe
de	P	de
base	N.C.f.s	base
:	PONCT.W	:
<	I	à
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
HTML	N.P.m.s	<unknown>
PUBLIC	A.qual.m.s	public
"	PONCT.W	"
-//W3C//	PONCT.W	<unknown>
<	I	à
!	PONCT.S	!

doctype	N.C.m.s	doctype
html>	A.ind.m.s	<unknown>
DTD	N.P.m.s	Dtd
HTML	N.P.m.s	<unknown>
4.01//EN	N.C.m.s	@card@
"	PONCT.W	"
"	PONCT.W	"
http://	D.card.m.p	<unknown>
<	D.card.m.p	<
html>	ET	<unknown>
www.w3.org/TR/html4/strict.dtd">	ET	<unknown>
<	P	à
head>	ET	headà
<	P+D.def.m.s	c
title>	N.C.m.s	titleë
Titre</title>	N.C.m.s	<unknown>
</head>	N.P.x.s	<unknown>
<	D.card.m.s	<
body>	N.C.m.s	bodyà
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
Hello	N.P.m.s	Hello
World	N.P.m.s	World
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	N.C.m.p	<unknown>
Commentaires	N.C.m.p	commentaire
PHP	N.P.m.s	Php
Commentaires	N.C.m.p	commentaire
:	PONCT.W	:
Commentaires	N.C.m.p	commentaire
hérités	A.qual.m.p	hérité
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	PONCT.W	C
et	C.C	et
Perl	N.P.m.s	Perl
//	PONCT.W	@card@
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
commentaire	N.C.m.s	commentaire
sur	P	sur
une	D.ind.f.s	un
seule	A.ind.f.s	seul
ligne	N.C.f.s	ligne
/*	C.C	<unknown>
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
commentaire	N.C.m.s	commentaire
sur	P	sur
plusieurs	D.ind.f.p	plusieurs
lignes	N.C.f.p	ligne
*/	P	à
Commentaire	N.C.m.s	commentaire
style	N.C.m.s	style
shell	A.qual.m.s	shell
#	C.S	#
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
commentaire	N.C.m.s	commentaire
sur	P	sur
une	D.ind.f.s	un
seule	A.ind.f.s	seul
ligne	N.C.f.s	ligne
Variables	N.P.m.s	Variables
PHP	N.P.m.s	Php
•	P	à
La	D.def.f.s	le
notion	N.C.f.s	notion
de	P	de
variable	N.C.f.s	variable
–	N.C.m.s	–
Une	D.ind.f.s	un
variable	N.C.f.s	variable
est	V.P.3.s	être
un	D.ind.m.s	un
conteneur	N.C.m.s	conteneur
de	P	de
valeur	N.C.f.s	valeur
–	PRO.rel.m.s	c
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
lui	CL.obj.3.m.s	lui
affecter	VW	affecter
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
,	PONCT.W	,
qu'	PRO.rel.f.s	que
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
utiliser	VW	utiliser
plus	ADV.-	plus
tard	ADV.-	tard
$variable	A.qual.m.s	çvariable
=	PONCT.W	=
"	PONCT.W	"
PHP5	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Le	D.def.m.s	le
«	N.C.m.s	«
$	N.C.m.s	$
»	N.C.m.s	»
indique	V.P.3.s	indiquer
une	D.ind.f.s	un
variable	N.C.f.s	variable
Le	D.def.m.s	le
«	N.C.m.s	«
=	V.P.3.s	être
»	N.C.m.s	»
est	V.P.3.s	être
une	D.ind.f.s	un
affectation	N.C.f.s	affectation
On	CL.suj.3.m.s	on
attribut	V.P.3.s	attribotre
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
à	P	à
la	D.def.f.s	le
Le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
variable	N.C.f.s	variable
variable	A.qual.f.s	variable
commence	V.P.3.s	commencer
toujours	ADV.-	toujours
par	P	par
une	D.ind.f.s	un
lettre	N.C.f.s	lettre
ou	C.C	ou
un	D.ind.m.s	un
«	N.C.m.s	«
_	N.C.m.s	_
»	N.C.m.s	»
,	PONCT.W	,
sans	P	sans
echo	N.C.m.s	echo
"	PONCT.W	"
...	PONCT.W	<unknown>
$variable	A.qual.m.s	çvariable
...	PONCT.W	<unknown>
"	PONCT.W	"
;	PONCT.W	;
espace	V.P.3.s	espacer
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
la	D.def.f.s	le
valeur	N.C.f.s	valeur
gardée	VK.f.s	garder
dans	P	dans
la	D.def.f.s	le
variable	N.C.f.s	variable
par	P	par
son	D.poss.m.s	son
nom	N.C.m.s	nom
Variables	N.P.m.s	Variables
PHP	N.P.m.s	Php
•	P	à
La	D.def.f.s	le
notion	N.C.f.s	notion
de	P	de
variable	N.C.f.s	variable
:	PONCT.W	:
les	D.def.m.p	le
types	N.C.m.p	type
des	P+D.def.f.p	du
données	N.C.f.p	donnée
–	N.C.f.p	–
Les	D.def.f.p	le
variables	N.C.f.p	variable
peuvent	V.P.3.p	pouvoir
garder	VW	garder
de	P	de
valeurs	N.C.f.p	valeur
de	P	de
différents	D.ind.m.p	différent
types	N.C.m.p	type
•	P	à
Nombres	A.qual.m.p	nombre
entiers	A.qual.m.p	entier
(	PONCT.W	(
integer	ET	integer
)	PONCT.W	)
:	PONCT.W	:
25	D.card.m.p	@card@
•	N.C.m.p	•
Nombres	A.qual.m.p	nombre
décimaux	N.C.m.p	décimal
(	PONCT.W	(
double	A.qual.m.s	double
ou	C.C	ou
float	N.C.m.s	float
)	PONCT.W	)
:	PONCT.W	:
2.25	D.card.f.p	@card@
•	D.card.f.p	•
Chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
(	PONCT.W	(
string	N.C.m.s	string
)	PONCT.W	)
:	PONCT.W	:
«	N.C.m.s	«
1	D.card.m.s	@card@
super	N.C.m.s	super
chaîne	N.C.f.s	chaîne
!	PONCT.S	!

»	N.C.m.s	»
•	N.C.m.s	•
Logique	N.P.m.s	Logique
(	PONCT.W	(
boolean	N.C.m.s	boolean
)	PONCT.W	)
:	PONCT.W	:
«	P	à
true	N.C.f.s	true
»	N.C.m.s	»
(	PONCT.W	(
1	N.card.m.s	@card@
)	PONCT.W	)
ou	C.C	ou
«	P+D.def.m.s	c
false	A.qual.f.s	fals
»	N.C.m.s	»
–	N.C.m.s	–
La	D.def.f.s	le
fonction	N.C.f.s	fonction
gettype($variable)	N.P.m.s	Gettypeëçvariableë
permet	V.P.3.s	permettre
de	P	de
savoir	VW	savoir
quelle	D.int.f.s	quel
type	N.C.f.s	type
de	P	de
valeur	N.C.f.s	valeur
contient	V.P.3.s	contenir
la	D.def.f.s	le
variable	N.C.f.s	variable
•	P	à
$entier	A.qual.m.s	çentier
=	PONCT.W	=
25	N.card.m.s	@card@
;	PONCT.W	;
gettype($entier)	N.C.m.s	gettypeëentierc
->	A.ind.m.s	-
integer	ET	integer
•	P	à
$decimal	N.C.m.s	<unknown>
=	P	à
2.25	N.card.m.s	@card@
;	PONCT.W	;
gettype($decimal)	N.C.m.s	gettypeë-decimalç
->	A.ind.m.s	-
double	A.qual.m.s	double
•	P	à
$chaine	N.P.f.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
1	A.card.f.s	@card@
super	N.C.m.s	super
chaîne	N.C.f.s	chaîne
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
gettype($chaine)	N.C.m.s	gettypeëchaineë
->	A.ind.m.s	-
string	N.C.m.s	string
•	P+D.def.m.s	c
$bool	N.P.x.s	<unknown>
=	PONCT.W	=
true	N.C.f.s	true
;	PONCT.W	;
gettype($bool)	N.C.m.s	gettypeëäolë
->	A.ind.m.s	-
boolean	ET	boolean
Variables	N.P.m.s	Variables
PHP	N.P.m.s	Php
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
Définition	N.C.f.s	définition
d'	P	de
une	D.ind.f.s	un
$entier	N.C.f.s	çentier
=	PONCT.W	=
25	N.card.m.s	@card@
;	PONCT.W	;
variable	A.qual.m.s	variable
$decimal	A.qual.m.s	<unknown>
=	P	à
2.25	N.card.m.s	@card@
;	PONCT.W	;
$chaine	N.P.x.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
1	A.card.f.s	@card@
super	N.C.m.s	super
chaîne	N.C.f.s	chaîne
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
$boolean	ET	<unknown>
=	V.P.3.s	être
true	N.C.f.s	true
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

gettype($entier)	N.C.m.s	gettypeëentierc
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$entier	N.C.m.s	çentier
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

gettype($decimal)	N.P.x.s	Gettypeëëdecimalç
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$decimal	N.C.m.s	<unknown>
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

gettype($chaine)	N.C.m.s	gettypeëchaineë
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$chaine	N.C.f.s	cchaine
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

gettype($boolean)	N.P.x.s	Gettypeëçoonç
.	PONCT.S	.

"	PONCT.W	"
:	PONCT.W	:
$boolean	ET	<unknown>
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Valeur	N.C.f.s	valeur
de	P	de
chaque	D.ind.m.s	chaque
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
la	D.def.f.s	le
gettype()	N.C.f.s	gettypeëë
variable	A.qual.f.s	variable
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
informe	V.P.3.s	informer
le	D.def.m.s	le
type	N.C.m.s	type
$boolean	A.qual.m.s	<unknown>
de	P	de
la	D.def.f.s	le
variable	A.qual.m.s	variable
Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
PHP	N.P.m.s	Php
Opérateur	N.C.m.s	opérateur
sur	P	sur
les	D.def.f.p	le
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
:	PONCT.W	:
–	D.card.f.p	–
concaténation	N.C.f.s	concaténation
:	PONCT.W	:
chaine1	N.C.f.s	<unknown>
.	PONCT.S	.

Chaine2	D.card.m.p	<unknown>
Opérateurs	N.C.m.p	opérateur
logiques	A.qual.m.p	logique
:	PONCT.W	:
•	D.card.m.p	•
AND	N.P.m.s	And
ou	C.C	ou
&&	PRO.card.m.p	<unknown>
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
$a	N.P.x.s	<unknown>
et	C.C	et
$b	N.C.m.s	bb
vrais	A.qual.m.p	vrai
)	PONCT.W	)
•	N.card.m.s	•
OR	N.P.x.s	Or
ou	C.C	ou
||	N.P.x.s	<unknown>
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
$a	N.P.x.s	<unknown>
ou	C.C	ou
$b	N.P.x.s	<unknown>
sont	V.P.3.p	être
vrais	A.qual.m.p	vrai
)	PONCT.W	)
Opérateurs	N.C.m.p	opérateur
arithmétiques	A.qual.m.p	arithmétique
:	PONCT.W	:
•	D.ind.f.s	•
addition	N.C.f.s	addition
:	PONCT.W	:
$a	N.C.f.s	ça
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
soustraction	N.C.f.s	soustraction
:	PONCT.W	:
$a	N.P.x.s	<unknown>
-	PONCT.W	-
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
multiplication	N.C.f.s	multiplication
:	PONCT.W	:
$a	N.C.f.s	ça
*	N.C.m.s	*
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
division	N.C.f.s	division
:	PONCT.W	:
$a	N.P.x.s	<unknown>
/	PONCT.W	@card@
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
modulo	N.C.m.s	modulo
(	PONCT.W	(
reste	N.C.m.s	reste
de	P	de
la	D.def.f.s	le
division	N.C.f.s	division
entière	A.qual.f.s	entier
)	PONCT.W	)
:	PONCT.W	:
$a	D.card.m.p	<unknown>
%	N.C.m.p	%
$b	N.C.m.s	bb
.	PONCT.S	.

Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
PHP	N.P.m.s	Php
Opérateurs	N.C.m.p	opérateur
arithmétiques	A.qual.m.p	arithmétique
:	PONCT.W	:
•	D.card.f.p	•
Attention	N.C.f.s	attention
:	PONCT.W	:
lorsqu'	C.S	lorsque
une	D.ind.f.s	un
chaine	N.C.f.s	chaine
de	P	de
caractère	N.C.m.s	caractère
est	V.P.3.s	être
évaluée	VK.f.s	évaluer
comme	P	comme
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
numérique	A.qual.f.s	numérique
,	PONCT.W	,
les	D.def.f.p	le
règles	N.C.f.p	règle
suivantes	A.qual.f.p	suivant
s'	CL.refl.3.f.p	se
appliquent	V.P.3.p	appliquer
:	PONCT.W	:
•	P	à
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
1	N.card.m.s	@card@
"	PONCT.W	"
4.5	N.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
5.5	D.card.m.p	@card@
•	N.C.m.p	•
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
1	A.card.m.s	@card@
"	PONCT.W	"
titi	N.C.m.s	titi
149	A.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
1	D.card.m.s	@card@
car	C.C	car
la	D.def.f.s	le
chaine	N.C.f.s	chaine
vaut	V.P.3.s	valoir
0	PRO.card.m.s	@card@
si	C.S	si
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
du	P+D.def.m.s	du
texte	N.C.m.s	texte
ou	C.C	ou
,	PONCT.W	,
•	P	à
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
1	N.card.m.s	@card@
"	PONCT.W	"
149	A.card.m.s	@card@
titi	N.C.m.s	titi
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
150	PRO.card.m.p	@card@
car	C.C	car
la	D.def.f.s	le
chaine	N.C.f.s	chaine
vaut	V.P.3.s	valoir
149	N.card.f.s	@card@
(	PONCT.W	(
commence	N.C.f.s	commence
par	P	par
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
numérique	A.qual.f.s	numérique
)	PONCT.W	)
.	PONCT.S	.

Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
PHP	N.P.m.s	Php
Opérateurs	N.C.m.p	opérateur
de	P	de
comparaison	N.C.f.s	comparaison
:	PONCT.W	:
•	N.C.m.s	•
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
==	D.card.m.p	<unknown>
$b	N.C.m.s	bb
•	N.C.m.s	•
différent	A.qual.m.s	différent
de	P	de
:	PONCT.W	:
$a	N.P.m.s	<unknown>
!	PONCT.S	!

=	PONCT.W	=
$b	N.C.m.s	bb
•	N.C.m.s	•
supérieur	N.C.m.s	supérieur
à	P	à
:	PONCT.W	:
$a	N.C.f.s	ça
>	P+D.def.m.s	c
$b	N.C.m.s	bb
•	N.C.m.s	•
inférieur	A.qual.m.s	inférieur
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
<	P+D.def.m.s	c
$b	N.C.m.s	bb
•	N.C.m.s	•
supérieur	A.qual.m.s	supérieur
ou	C.C	ou
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
>=	P+D.def.m.s	çù
$b	N.C.m.s	bb
•	N.C.m.s	•
inférieur	A.qual.m.s	inférieur
ou	C.C	ou
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
<=	P+D.def.m.s	çù
$b	N.C.m.s	bb
Exemple	N.C.m.s	exemple
:	PONCT.W	:
echo	ET	echo
$toto	N.P.m.s	<unknown>
==	P+D.def.m.s	çù
0	A.card.f.s	@card@
?	PONCT.S	?

"	PONCT.W	"
Vrai	N.P.m.s	Vrai
"	PONCT.W	"
:	PONCT.W	:
"	PONCT.W	"
Faux	N.C.m.p	fau
"	PONCT.W	"
;	PONCT.W	;
Opérateurs	N.C.m.p	opérateur
PHP	N.P.m.s	Php
•	D.card.m.p	•
Opérateurs	N.C.m.p	opérateur
–	A.qual.m.p	–
Différents	A.qual.m.p	différent
opérateurs	N.C.m.p	opérateur
permettent	V.P.3.p	permettre
de	P	de
manipuler	VW	manipuler
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
,	PONCT.W	,
qu'	C.S	que
ils	CL.suj.3.m.p	il
soient	V.S.3.p	être
dans	P	dans
les	D.def.m.p	le
variables	N.C.m.p	variable
ou	C.C	ou
pas	ADV.neg	pas
Opérateurs	N.C.m.p	opérateur
Opérateurs	N.C.m.p	opérateur
Opérateurs	N.C.m.p	opérateur
de	P	de
Opérateurs	N.C.m.p	opérateur
logiques	A.qual.m.p	logique
mathématiques	A.qual.m.p	mathématique
String	N.P.m.s	String
comparaison	N.C.f.s	comparaison
+	P	p
-	PONCT.W	-
*	N.C.m.s	*
/	PONCT.W	@card@
%	N.C.m.s	%
.	PONCT.S	.

==	I	çù
!	PONCT.S	!

=	PONCT.W	=
||	N.C.m.s	<unknown>
(	PONCT.W	(
OR	N.P.x.s	Or
)	PONCT.W	)
(	PONCT.W	(
concaténation	N.C.f.s	concaténation
)	PONCT.W	)
<=	N.P.m.s	<unknown>
<	N.C.m.s	<
>=	N.C.m.s	<unknown>
>	N.C.m.s	>
&&	N.card.m.s	<unknown>
(	PONCT.W	(
AND	N.C.m.s	and
)	PONCT.W	)
!	PONCT.S	!

(	PONCT.W	(
not	N.C.m.s	not
)	PONCT.W	)
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$a	N.P.x.s	<unknown>
=	N.C.m.s	=
2	A.card.m.s	@card@
3	A.card.m.s	@card@
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
4	N.card.m.s	@card@
-	PONCT.W	-
$a	N.P.x.s	<unknown>
;	PONCT.W	;
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
Toto	N.P.m.s	Toto
”	N.C.m.s	”
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
Salut	N.P.m.s	Salut
"	PONCT.W	"
.	PONCT.S	.

$nom	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.C.m.s	<unknown>
4	D.card.m.p	@card@
-	PONCT.W	-
$a	N.P.x.s	<unknown>
vaut	V.P.3.s	valoir
$b	N.C.m.s	bb
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Fonctions	N.C.f.p	fonction
PHP	N.P.m.s	Php
Date	N.P.f.s	Date
Déclaration	N.C.f.s	déclaration
avec	P	avec
:	PONCT.W	:
•	P	à
DATETIME	N.C.f.s	datetime
$date	N.C.f.s	<unknown>
=	P	à
new	ET	new
DateTime('2000-01-05')	N.P.m.s	<unknown>
;	PONCT.W	;
•	P	à
DATE_CREATE	N.C.m.s	dateçcreate
:	PONCT.W	:
un	D.ind.m.s	un
Alias	N.C.m.s	alias
de	P	de
DateTime::__construct()	N.P.x.s	<unknown>
$date2	N.C.f.s	<unknown>
=	PONCT.W	=
date_create('2000-01-01')	N.C.m.s	<unknown>
;	PONCT.W	;
Extraction	N.C.f.s	extraction
du	P+D.def.m.s	du
Mois	N.P.m.s	Mois
,	PONCT.W	,
année	N.C.f.s	année
,	PONCT.W	,
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
:	PONCT.W	:
Avec	P	avec
style	N.C.m.s	style
procédural	A.qual.m.s	procédural
en	P	en
utilisant	VG	utiliser
DATE_FORMAT	N.P.m.s	Dateëformat
echo	ET	echo
date_format($date	ET	dateëformatçdate
,	PONCT.W	,
"	PONCT.W	"
m	N.C.m.s	m
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
Avec	P	avec
style	N.C.m.s	style
orienté	VK.m.s	orienter
objet	N.C.m.s	objet
(	PONCT.W	(
OO	N.P.m.s	Oo
)	PONCT.W	)
:	PONCT.W	:
echo	ET	echo
$date->format('Y')	N.P.x.s	<unknown>
;	PONCT.W	;
Fonctions	N.C.f.p	fonction
PHP	N.P.m.s	Php
Date	N.P.f.s	Date
Exemples	N.C.m.p	exemple
:	PONCT.W	:
•	D.card.m.s	•
$date=date(	N.P.x.s	<unknown>
"	PONCT.W	"
d-m	P	d-m
-y	ET	y
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
la	D.def.f.s	le
date	N.C.f.s	date
du	P+D.def.m.s	du
jour	N.C.m.s	jour
"	PONCT.W	"
.$date	N.P.f.s	<unknown>
;	PONCT.W	;
•	P	à
$heure	N.C.f.s	çheure
=	PONCT.W	=
date("h:i:s")	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
l'	D.def.f.s	le
heure	N.C.f.s	heure
du	P+D.def.m.s	du
jour	N.C.m.s	jour
"	PONCT.W	"
.$heure	N.P.m.s	<unknown>
;	PONCT.W	;
Tableaux	N.C.m.p	tableau
PHP	N.P.m.s	Php
•	P	à
Tableaux	N.C.m.p	tableau
–	P	à
Variables	N.P.m.s	Variables
capables	A.qual.m.p	capable
d'	P	de
enregistrer	VW	enregistrer
plusieurs	D.ind.f.p	plusieurs
valeurs	N.C.f.p	valeur
d'	P	de
un	D.ind.m.s	un
type	N.C.m.s	type
•	P	à
Tableaux	N.C.m.p	tableau
à	P	à
indice	N.C.m.s	indice
:	PONCT.W	:
Attention	N.C.f.s	attention
a	V.P.3.s	avoir
définir	VW	définir
toutes	PRO.ind.f.p	tout
–	P	à
Chaque	D.ind.f.s	chaque
position	N.C.f.s	position
est	V.P.3.s	être
identifiée	VK.f.s	identifier
par	P	par
les	D.def.f.p	le
positions	N.C.f.p	position
avant	P	avant
de	P	de
les	D.def.m.p	le
un	D.ind.m.s	un
numéro	N.C.m.s	numéro
(	PONCT.W	(
commençant	VG	commencer
par	P	par
0	N.card.m.s	@card@
)	PONCT.W	)
utiliser	VW	utiliser
ou	C.C	ou
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
aura	V.F.3.s	avoir
une	D.ind.f.s	un
•	N.C.f.s	•
message	N.C.m.s	message
d'	P	de
erreur	N.C.f.s	erreur
.	PONCT.S	.

$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
0	N.card.m.s	@card@
]	PONCT.W	]
=	N.C.m.s	=
"	PONCT.W	"
A	N.C.m.s	a
"	PONCT.W	"
;	PONCT.W	;
•	N.C.m.s	•
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
1	N.card.m.s	@card@
]	PONCT.W	]
=	N.C.m.s	=
"	PONCT.W	"
B	N.C.m.s	b
"	PONCT.W	"
;	PONCT.W	;
•	N.C.m.s	•
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
3	N.card.m.s	@card@
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Fin	N.C.f.s	fin
"	PONCT.W	"
;	PONCT.W	;
•	N.C.m.p	•
A	P	à
B	N.C.m.s	b
Fin	N.C.f.s	fin
Suite	N.C.f.s	suite
$tableau	N.P.m.s	<unknown>
[	PONCT.W	[
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Suite	N.C.f.s	suite
"	PONCT.W	"
;	PONCT.W	;
•	D.card.m.p	•
Tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
:	PONCT.W	:
0	D.card.m.s	@card@
1	A.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
–	N.C.m.p	–
Chaque	D.ind.f.s	chaque
position	N.C.f.s	position
reçoit	V.P.3.s	recevoir
un	D.ind.m.s	un
identifiant	N.C.m.s	identifiant
(	PONCT.W	(
un	D.ind.m.s	un
label	N.C.m.s	label
)	PONCT.W	)
Jean	N.P.m.s	Jean
Dupont	N.P.m.s	Dupont
•	P	à
$tableauAssoc	N.P.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Prenom	N.P.m.s	Prenom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
•	ET	•
Prenom	N.P.m.s	Prenom
Nom	N.P.m.s	Nom
$tableauAssoc	N.P.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Nom	N.P.m.s	Nom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
Tableaux	N.C.m.p	tableau
PHP	N.P.m.s	Php
Les	D.def.m.p	le
tableaux	N.C.m.p	tableau
de	P	de
PHP	N.P.m.s	Php
ressemblent	V.P.3.p	ressembler
aux	P+D.def.m.p	au
tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
(	PONCT.W	(
hash-	A.qual.f.p	hash-
tables	N.C.f.p	table
)	PONCT.W	)
.	PONCT.S	.

•	P	à
L'	D.def.m.s	le
index	N.C.m.s	index
est	V.P.3.s	être
appelé	VK.m.s	appeler
clé	VK.m.s	cler
•	P	à
La	D.def.f.s	le
valeur	N.C.f.s	valeur
associée	VK.f.s	associer
à	P	à
la	D.def.f.s	le
clé	N.C.f.s	clé
est	V.P.3.s	être
appelée	VK.f.s	appeler
valeur	N.C.f.s	valeur
On	CL.suj.3.m.s	on
déclare	V.P.3.s	déclarer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
de	P	de
deux	D.card.f.p	deux
façons	N.C.f.p	façon
:	PONCT.W	:
•	P	à
Utiliser	VW	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
array()	V.P.3.s	arraycer
pour	P	pour
créer	VW	créer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
•	P	à
Ou	C.C	ou
affecter	VW	affecter
directement	ADV.-	directement
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
au	P+D.def.m.s	au
tableau	N.C.m.s	tableau
PHP	N.P.m.s	Php
Message	N.P.m.s	Message
d'	P	de
erreur	N.C.f.s	erreur
car	C.C	car
le	D.def.m.s	le
<head>	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
contenu	A.qual.m.s	contenu
de	P	de
la	D.def.f.s	le
position	N.C.f.s	position
2	A.card.f.s	@card@
<style>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</style>	N.P.m.s	<unknown>
(	PONCT.W	(
$tableau[2	N.P.f.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
</head>	N.P.x.s	<unknown>
été	VK.m.s	être
défini	VK.m.s	définir
auparavant	ADV.-	auparavant
.	PONCT.S	.

<body>	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
<h2>Tableaux	N.C.m.s	çhiëtableau
à	P	à
indice	N.C.m.s	indice
</h2>	N.P.x.s	<unknown>
<table>	A.qual.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$tableau	A.qual.m.s	<unknown>
[	PONCT.W	[
0	N.card.m.s	@card@
]	PONCT.W	]
=	N.C.m.s	=
"	PONCT.W	"
A	N.C.m.s	a
"	PONCT.W	"
;	PONCT.W	;
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
1	N.card.m.s	@card@
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
B	N.C.m.s	b
"	PONCT.W	"
;	PONCT.W	;
$tableau	N.C.m.s	<unknown>
[	PONCT.W	[
3	A.card.m.s	@card@
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Fin	N.C.f.s	fin
"	PONCT.W	"
;	PONCT.W	;
Contenu	VK.m.s	contenir
de	P	de
la	D.def.f.s	le
$tableau	N.C.f.s	<unknown>
[	PONCT.W	[
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Suite	N.C.f.s	suite
"	PONCT.W	"
;	PONCT.W	;
position	N.C.f.s	position
4	A.card.f.s	@card@
(	PONCT.W	(
$tableau[4	N.C.m.p	<unknown>
]	PONCT.W	]
)	PONCT.W	)
echo	ET	echo
"	PONCT.W	"
<tr>	N.P.m.s	<unknown>
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[0	N.C.m.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
<td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[1	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
<td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[2	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td><td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[3	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td><td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableau[4	N.C.m.p	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td></tr>	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</table>	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
Tableaux	N.C.m.p	tableau
PHP	N.P.m.s	Php
...	PONCT.S	<unknown>
<h2>Tableau	N.C.m.s	chiätableau
associatif	A.qual.m.s	associatif
</h2>	N.P.m.s	<unknown>
<table>	A.ind.m.s	<unknown>
<tr>	N.P.m.s	<unknown>
<th>	N.P.m.s	<unknown>
Nom	N.P.m.s	Nom
</th>	N.P.m.s	<unknown>
<th>Prénom	N.P.m.s	<unknown>
</th>	N.P.m.s	<unknown>
</tr>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tableauAssoc	ET	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Prenom	N.P.m.s	Prenom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tableauAssoc	N.P.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Nom	N.P.m.s	Nom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<tr>	N.P.m.s	<unknown>
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableauAssoc	N.C.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Nom	N.P.m.s	Nom
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$tableauAssoc	N.C.m.s	<unknown>
[	PONCT.W	[
"	PONCT.W	"
Prenom	N.P.m.s	Prenom
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td></tr>	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</table>	N.C.m.s	<unknown>
</body>	N.P.x.s	<unknown>
Tableaux	N.P.m.s	Tableaux
PHP	N.P.m.s	Php
Fonctions	N.C.f.p	fonction
sur	P	sur
les	D.def.m.p	le
tableaux	N.C.m.p	tableau
:	PONCT.W	:
•	P	à
sizeof()	N.C.m.s	sizeofçë
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
nombre	N.C.m.s	nombre
d'	P	de
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
,	PONCT.W	,
ou	C.C	ou
•	P	à
count()	N.C.m.s	countçë
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
nombre	N.C.m.s	nombre
d'	P	de
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
s'	PRO.rel.m.s	se
il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
,	PONCT.W	,
1	N.card.m.s	@card@
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
et	C.C	et
0	PRO.card.m.s	@card@
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
.	PONCT.S	.

Tableaux	N.C.m.p	tableau
PHP	N.P.m.s	Php
Exemple	N.C.m.s	exemple
:	PONCT.W	:
•	P	à
$suite	N.C.f.s	-suite
=	PONCT.W	=
array(1	N.C.m.s	<unknown>
,	PONCT.W	,
2	N.card.m.s	@card@
,	PONCT.W	,
3	A.card.m.s	@card@
,	PONCT.W	,
4	N.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
•	N.card.m.s	•
$tab[0	N.C.m.s	<unknown>
]	PONCT.W	]
=	V.P.3.s	être
1	N.card.m.s	@card@
;	PONCT.W	;
•	P	à
$tab[1	N.C.m.s	<unknown>
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
;	PONCT.W	;
#	C.S	#
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
mélanger	VW	mélanger
les	D.def.m.p	le
contenus	N.C.m.p	contenu
•	P	à
$tab["chaine	N.C.m.s	çtabççchain
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
valeur	N.C.f.s	valeur
"	PONCT.W	"
;	PONCT.W	;
#	C.S	#
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
mélanger	VW	mélanger
les	D.def.f.p	le
clés	N.C.f.p	clé
.	PONCT.S	.

•	P	à
$personne	PRO.neg.m.s	cpersonne
=	PONCT.W	=
array("type	N.C.m.s	arrayççtype
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
M.	N.C.m.s	monsieur
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Smith	N.P.m.s	Smith
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
Tableaux	N.C.m.p	tableau
PHP	N.P.m.s	Php
Parcourir	VW	parcourir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
//	PONCT.W	@card@
On	CL.suj.3.m.s	on
crée	V.P.3.s	créer
notre	D.poss.m.s	notre
array	N.C.m.s	array
$prenoms	ET	-prenom
$prenoms	ET	-prenom
=	PONCT.W	=
array	N.C.m.s	array
(	PONCT.W	(
'	PONCT.W	'
François	N.P.m.s	François
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Michel	N.P.m.s	Michel
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Nicole	N.P.f.s	Nicole
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Véronique	N.P.f.s	Véronique
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Benoît	N.P.m.s	Benoît
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
Puis	C.C	pui
on	CL.suj.3.m.s	on
fait	V.P.3.s	faire
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
pour	P	pour
tout	PRO.ind.m.s	tout
afficher	VW	afficher
:	PONCT.W	:
for	N.C.m.s	for
(	PONCT.W	(
$numero	N.P.m.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
$numero	N.P.m.s	<unknown>
<	N.P.m.s	<
5	N.card.m.s	@card@
;	PONCT.W	;
$numero++	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
$prenoms[$numero	N.P.x.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

'	PONCT.W	'
<br	N.C.m.s	<unknown>
/>	PONCT.W	<unknown>
'	PONCT.W	'
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Tableaux	N.C.m.p	tableau
PHP	N.P.m.s	Php
Parcourir	VW	parcourir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$prenoms	ET	-prenom
=	PONCT.W	=
array	N.C.m.s	array
(	PONCT.W	(
'	PONCT.W	'
François	N.P.m.s	François
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Michel	N.P.m.s	Michel
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Nicole	N.P.f.s	Nicole
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Véronique	N.P.f.s	Véronique
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Benoît	N.P.m.s	Benoît
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
foreach($prenoms	N.C.m.p	foreachëëprenom
as	ET	as
$id	ET	çid
=>	N.P.x.s	<unknown>
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
Case	N.P.f.s	Case
(	PONCT.W	(
$id	N.C.m.s	çid
)	PONCT.W	)
=	V.P.3.s	être
$valeur	N.C.f.s	çvaleur
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Tableaux	N.C.m.p	tableau
PHP	N.P.m.s	Php
Parcourir	VW	parcourir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
:	PONCT.W	:
<	A.qual.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$personne	N.P.x.s	<unknown>
=	PONCT.W	=
array("type	N.C.m.s	arrayççtype
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
M.	N.C.m.s	monsieur
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	ET	çù
"	PONCT.W	"
Smith	N.P.m.s	Smith
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach($personne	N.P.x.s	Foreachëpersonne
as	ET	as
$cle	N.C.m.s	ccle
=>	N.P.x.s	<unknown>
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
cle=	ET	cleë
"	PONCT.W	"
.$cle	N.C.m.s	<unknown>
.	PONCT.S	.
“	N.C.m.s	“
valeur=	N.C.m.s	valeurà
"	PONCT.W	"
.	PONCT.S	.

$valeur	N.C.f.s	çvaleur
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Développement	N.C.m.s	développement
Web	N.P.m.s	Web
–	N.P.m.s	–
PHP	N.P.m.s	Php
Cours	N.C.m.s	cours
2	D.card.m.p	@card@
Rappels	N.C.m.p	rappel
Base	A.qual.m.s	bas
de	P	de
Données	N.P.m.s	Données
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Serveur	N.P.m.s	Serveur
d'	P	de
Application	N.C.f.s	application
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Rappels	N.P.m.s	Rappels
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
&	PONCT.W	&
Base	N.C.f.s	base
de	P	de
Données	N.P.m.s	Données
Apache	N.P.m.s	Apache
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Rappels	N.P.m.s	Rappels
•	N.P.m.s	•
WAMP/MAMP/LAMP/XAMP	N.P.x.s	<unknown>
:	PONCT.W	:
–	N.C.m.s	–
Windows/Mac/Linux/Unix	N.P.x.s	<unknown>
–	N.C.m.s	–
Apache	N.P.m.s	Apache
=	P	à
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
–	N.P.m.s	–
MySQL	N.P.m.s	Mysql
=	PONCT.W	=
Base	N.C.f.s	base
de	P	de
Données	N.C.f.p	donnée
–	P	à
PHP	N.C.m.s	php
=	PONCT.W	=
Préprocesseur	N.C.m.s	préprocesseur
des	P+D.def.f.p	du
pages	N.C.f.p	page
web	ET	web
Rappels	N.C.m.p	rappel
•	D.card.f.p	•
Communications	N.C.f.p	communication
entre	P	entre
«	D.card.m.s	«
navigateur	N.C.m.s	navigateur
web	N.C.m.s	web
»	N.C.m.s	»
et	C.C	et
«	P	à
serveur	N.C.m.s	serveur
web	N.C.m.s	web
»	N.C.m.s	»
se	CL.refl.3.f.p	se
font	V.P.3.p	faire
avec	P	avec
protocole	N.C.m.s	protocole
HTTP	N.P.m.s	Http
GET	N.P.m.s	Get
page.htm	ET	<unknown>
<html>	N.P.m.s	<unknown>
http://monsite.fr/page.htm	N.P.x.s	<unknown>
Coucou	N.P.m.s	Coucou
(	PONCT.W	(
GET	N.P.m.s	Get
page.htm	N.P.x.s	<unknown>
)	PONCT.W	)
</html>	ET	<unknown>
Coucou	ET	coucou
page.htm	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Protocole	N.P.m.s	Protocole
pour	P	pour
transmettre	VW	transmettre
les	D.def.f.p	le
Apache	A.qual.f.p	apache
informations	N.C.f.p	information
:	PONCT.W	:
HTTP	N.P.m.s	Http
Rappels	N.C.m.p	rappel
•	N.P.m.s	•
PHP	N.P.m.s	Php
est	V.P.3.s	être
une	D.ind.f.s	un
extension	N.C.f.s	extension
à	P	à
côté	N.C.m.s	côté
de	P	de
Apache	N.P.m.s	Apache
–	P	à
Apache	N.P.m.s	Apache
configuré	VK.m.s	configurer
pour	P	pour
appeler	VW	appeler
PHP	N.P.m.s	Php
lorsqu'	C.S	lorsque
il	CL.suj.3.m.s	il
voit	V.P.3.s	voir
passer	VW	passer
une	D.ind.f.s	un
requête	N.C.f.s	requête
terminant	VG	terminer
par	P	par
«	D.card.m.s	«
.php	N.C.m.s	<unknown>
»	N.C.m.s	»
–	P	à
PHP	N.P.m.s	Php
traite	V.P.3.s	traiter
le	D.def.m.s	le
fichier	N.C.m.s	fichier
en	P	en
question	N.C.f.s	question
,	PONCT.W	,
et	C.C	et
produit	V.P.3.s	produire
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
renvoyée	VK.f.s	renvoyer
par	P	par
Apache	N.P.m.s	Apache
<html>	N.P.x.s	<unknown>
<	N.P.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
B	N.C.m.s	b
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P+D.def.m.s	c
</html>	ET	<unknown>
page.php	ET	<unknown>
GET	N.P.m.s	Get
page.php	ET	<unknown>
GET	N.P.m.s	Get
page.php	ET	<unknown>
B	D.card.m.s	B
<html>	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
<html>	N.P.m.s	<unknown>
B	N.P.m.s	B
B	N.P.m.s	B
</html>	N.P.m.s	<unknown>
</html>	ET	<unknown>
Apache	ET	apache
page.php	ET	<unknown>
page.php	ET	<unknown>
Caractéristiques	N.C.f.p	caractéristique
PHP	N.P.m.s	Php
•	P	à
Langage	N.C.m.s	langage
faiblement	ADV.-	faiblement
typé	VK.m.s	typer
–	P	à
Beaucoup	ADV.-	beaucoup
plus	ADV.-	plus
flexible	A.qual.m.s	flexible
...	PONCT.W	<unknown>
–	N.C.m.s	–
...	PONCT.W	<unknown>
mais	C.C	mais
possibilité	N.C.f.s	possibilité
de	P	de
faire	VW	faire
n'	ADV.neg	ne
importe	V.P.3.s	importer
quoi	PRO.int.m.s	quoi
•	P	à
Langage	N.C.m.s	langage
interprété	VK.m.s	interpréter
//	PONCT.W	@card@
Sur	P	sur
le	D.def.m.s	le
terminal	N.C.m.s	terminal
de	P	de
Linux	N.P.m.s	Linux
–	P	à
CLI	N.P.m.s	Cli
disponible	A.qual.m.s	disponible
pour	P	pour
scripts	N.C.m.p	script
//	PONCT.W	@card@
Command	N.P.m.s	Command
Line	N.P.m.s	Line
Interface	N.C.f.s	interface
•	P	à
Usage	N.P.m.s	Usage
dans	P	dans
ce	D.dem.m.s	ce
cours	N.C.m.s	cours
:	PONCT.W	:
extension	N.C.f.s	extension
apache	V.P.3.s	apacher
Rappel	N.P.m.s	Rappel
:	PONCT.W	:
Formulaires	N.P.m.s	Formulaires
HTML	N.P.m.s	<unknown>
•	N.P.m.s	•
Communication	N.C.f.s	communication
entre	P	entre
le	D.def.m.s	le
client	N.C.m.s	client
(	PONCT.W	(
navigateur	N.C.m.s	navigateur
)	PONCT.W	)
et	C.C	et
le	D.def.m.s	le
serveur	N.C.m.s	serveur
(	PONCT.W	(
php	N.C.m.s	<unknown>
)	PONCT.W	)
–	N.C.m.s	–
Les	D.def.m.p	le
formulaires	N.C.f.p	formulaire
en	P	en
HTML	N.P.m.s	<unknown>
permettent	V.P.3.p	permettre
de	P	de
recueillir	VW	recueillir
des	D.ind.f.p	du
données	N.C.f.p	donnée
auprès	ADV.-	auprès
de	P	de
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
•	N.C.m.s	•
Les	D.def.f.p	le
données	N.C.f.p	donnée
sont	V.P.3.p	être
ensuite	ADV.-	ensuite
communiquées	VK.f.p	communiquer
à	P	à
un	D.ind.m.s	un
programme	N.C.m.s	programme
–	P	à
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
envoie	V.P.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
récoltées	VK.f.p	récolter
par	P	par
les	D.def.f.p	le
formulaires	N.C.f.p	formulaire
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
•	P	à
Le	D.def.m.s	le
programme	N.C.m.s	programme
(	PONCT.W	(
page	N.C.f.s	page
PHP	N.P.m.s	Php
)	PONCT.W	)
récupère	V.P.3.s	récupérer
les	D.def.f.p	le
données	N.C.f.p	donnée
grâce	N.C.f.s	grâce
à	P	à
des	D.ind.f.p	du
variables	N.C.f.p	variable
Page	N.C.f.s	page
PHP	N.P.m.s	Php
Rappel	N.P.m.s	Rappel
:	PONCT.W	:
Formulaires	N.P.m.s	Formulaires
HTML	N.P.m.s	<unknown>
•	P	à
Un	D.ind.m.s	un
formulaire	A.qual.m.s	formulaire
HTML	N.P.m.s	<unknown>
est	V.P.3.s	être
défini	VK.m.s	définir
par	P	par
la	D.def.f.s	le
balise	N.C.f.s	balise
<form	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
>	N.C.m.s	>
...	PONCT.W	<unknown>
</form>	N.P.x.s	<unknown>
–	P	à
Tous	A.ind.m.p	tous
les	D.def.m.p	le
éléments	N.C.m.p	élément
sont	V.P.3.p	être
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
la	D.def.f.s	le
balise	N.C.f.s	balise
<form	ET	fform
name=	ET	nameç
"	PONCT.W	"
nomFormulaire	A.qual.m.s	nomformulaire
"	PONCT.W	"
action=	ET	actionà
"	PONCT.W	"
page.php	ET	<unknown>
"	PONCT.W	"
method="get	ET	methodççget
|	P	à
post	N.C.m.s	post
"	PONCT.W	"
>	N.C.m.s	>
...	PONCT.W	<unknown>
.	PONCT.S	.

</form>	N.P.x.s	<unknown>
action	N.C.f.s	action
:	PONCT.W	:
à	P	à
qui	PRO.rel.f.s	qui
on	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
method	N.C.m.s	method
:	PONCT.W	:
comment	ADV.int	comment
on	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
–	P	à
Les	D.def.m.p	le
champs	N.C.m.p	champ
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
sont	V.P.3.p	être
introduits	VK.m.p	introduire
par	P	par
différents	D.ind.f.p	différent
balises	N.C.f.p	balise
:	PONCT.W	:
•	N.C.m.s	•
<	N.C.m.s	<
input	N.C.m.s	input
type=	N.C.m.s	typeë
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
name=	N.C.m.s	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
value=	N.C.m.s	valueë
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
id=	N.C.m.s	idà
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
/>	N.C.m.s	<unknown>
•	N.C.m.s	•
<	ET	<
textarea	ET	textarea
name=	ET	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
id=	ET	idà
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
cols=	N.C.m.s	colsà
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
rows=	ET	rowsà
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
...	PONCT.W	<unknown>
</textarea>	N.C.m.s	<unknown>
•	N.C.m.s	•
<	A.ind.m.s	<
select	ET	select
name=	N.C.m.s	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
id=	N.C.m.s	idà
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
size=	N.C.m.s	sizeë
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
<	P	à
option	N.C.f.s	option
value=	A.qual.m.s	<unknown>
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
...	PONCT.W	<unknown>
</option>	N.P.m.s	<unknown>
</select>	ET	<unknown>
Rappel	N.P.m.s	Rappel
:	PONCT.W	:
Formulaires	N.C.m.p	formulaire
HTML	N.P.m.s	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="nomClient	A.qual.m.s	nameçnomclient
"	PONCT.W	"
value="votre	ET	valueçävotre
nom	ET	nom
"	PONCT.W	"
size="40	ET	<unknown>
"	PONCT.W	"
maxlength="150	ET	<unknown>
"	PONCT.W	"
/>	ET	<unknown>
<select	ET	<unknown>
name="produit">	ET	nameäproduitäë
<option	N.C.f.s	çoption
value="SuperKdo">	ET	valueççsuperkdoëë
Super	N.P.m.s	Super
Kdo	N.P.m.s	Kdo
</option>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</select>	ET	<unknown>
<textarea	ET	<unknown>
name="opinionClient	ET	nameçopinionclient
"	PONCT.W	"
cols="40	ET	<unknown>
"	PONCT.W	"
rows="5	ET	<unknown>
"	PONCT.W	"
>	V.P.3.s	être
Votre	D.poss.f.s	votre
opinion	N.C.f.s	opinion
sur	P	sur
nos	D.poss.m.p	notre
produits	N.C.m.p	produit
</textarea>	A.ind.m.p	<unknown>
<input	ET	çinput
type="reset	N.C.m.s	typeëereset
"	PONCT.W	"
value="Nettoyer	VW	valueëënettoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	N.P.x.s	<unknown>
input	N.C.m.s	input
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
se	CL.refl.3.m.s	se
charge	V.P.3.s	charger
d'	P	de
envoyer	VW	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
Rappel	N.P.m.s	Rappel
:	PONCT.W	:
Formulaires	N.P.m.s	Formulaires
HTML	N.P.m.s	<unknown>
À	P	à
qui	PRO.rel.m.s	qui
les	D.def.f.p	le
données	N.C.f.p	donnée
sont	V.P.3.p	être
envoyées	VK.f.p	envoyer
input	ET	input
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
Zone	N.P.f.s	Zone
de	P	de
saisie	N.C.f.s	saisie
select	A.qual.f.s	select
...	PONCT.W	<unknown>
option	N.C.f.s	option
Liste	N.C.f.s	liste
de	P	de
sélection	N.C.f.s	sélection
d'	P	de
options	N.C.f.p	option
textarea	ET	textarea
Zone	N.P.m.s	Zone
de	P	de
texte	N.C.m.s	texte
input	A.qual.m.s	input
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
Input	ET	input
type="reset	N.C.m.s	typeëereset
"	PONCT.W	"
Boutons	N.P.m.s	Boutons
d'	P	de
envoi	N.C.m.s	envoi
et	C.C	et
de	P	de
reset	N.C.m.s	reset
du	P+D.def.m.s	du
formulaire	A.qual.m.s	formulaire
<form	ET	fform
name="formClient	ET	<unknown>
"	PONCT.W	"
action="coursPHP-7.php	ET	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
>	D.card.m.s	>
<label	N.C.m.s	çlabel
for="nom">	N.P.x.s	<unknown>
Nom</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="text	ET	typeëtext
"	PONCT.W	"
id="nom	ET	idçänom
"	PONCT.W	"
name="nomClient	ET	nameçnomclient
"	PONCT.W	"
value="votre	ET	valueçävotre
nom	ET	nom
"	PONCT.W	"
size="40	ET	<unknown>
"	PONCT.W	"
maxlength="150	ET	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	ET	<unknown>
<label>	N.P.m.s	<unknown>
Produit</label>	N.P.x.s	<unknown>
<select	N.P.m.s	<unknown>
name="produit">	ET	nameäproduitäë
<option	N.C.f.s	çoption
value="SuperKdo">	ET	valueççsuperkdoëë
Super	N.P.m.s	Super
Kdo</option>	N.P.x.s	<unknown>
<option	N.C.f.s	çoption
value="MegaTruc">	N.C.f.p	<unknown>
Mega	N.P.m.s	Mega
Truc</option>	N.P.x.s	Trucçioptionç
<option	N.C.f.s	çoption
value="BabyFun">	ET	<unknown>
Baby	N.P.m.s	Baby
Fun</option>	N.P.x.s	Funçooptionç
</select>	N.P.x.s	<unknown>
<br/>	N.P.x.s	<unknown>
<label>	N.P.m.s	<unknown>
Opinion</label>	N.P.x.s	<unknown>
<textarea	ET	<unknown>
name="opinionClient	V.P.3.p	nameçoopinionclier
"	PONCT.W	"
cols="40	N.C.m.s	<unknown>
"	PONCT.W	"
rows="5	ET	<unknown>
"	PONCT.W	"
>	V.P.3.s	être
Votre	D.poss.f.s	votre
opinion	N.C.f.s	opinion
sur	P	sur
nos	D.poss.m.p	notre
produits	N.C.m.p	produit
</textarea>	A.ind.m.p	<unknown>
<br/>	N.P.x.s	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
class="bouton	ET	classüëbouton
"	PONCT.W	"
/>	ET	<unknown>
<input	ET	çinput
type="reset	N.C.m.s	typeëereset
"	PONCT.W	"
value="Nettoyer	VW	valueëënettoyer
"	PONCT.W	"
class="bouton	ET	classüëbouton
"	PONCT.W	"
/>	ET	<unknown>
</form>	ET	foformë
Communications	N.C.f.p	communication
Client	N.P.m.s	Client
-	PONCT.W	-
Serveur	N.C.m.s	serveur
•	N.C.m.s	•
2	D.card.f.p	@card@
méthodes	N.C.f.p	méthode
génériques	A.qual.f.p	générique
d'	P	de
envoi	N.C.m.s	envoi
de	P	de
données	N.C.f.p	donnée
:	PONCT.W	:
–	P+D.def.m.s	c
GET	N.P.m.s	Get
:	PONCT.W	:
(	PONCT.W	(
Query	N.P.m.s	Query
String	N.P.m.s	String
)	PONCT.W	)
Valeurs	N.P.m.s	Valeurs
passées	VK.f.p	passer
via	P	via
l'	D.def.m.s	le
URL	N.P.f.s	Url
par	P	par
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
[	PONCT.W	[
valeurs	N.C.f.p	valeur
lisibles	A.qual.f.p	lisible
dans	P	dans
l'	D.def.f.s	le
en-tête	N.C.f.s	en-tête
et	C.C	et
dans	P	dans
les	D.def.m.p	le
logs	N.C.m.p	log
d'	P	de
accès	N.C.m.s	accès
]	PONCT.W	]
•	P	à
http://monsite.fr/mapage.php	N.C.m.s	<unknown>
?	PONCT.S	?

var=truc&nom=moi	N.C.m.s	varàtrucänom-moi
–	P	à
POST	N.P.m.s	Post
:	PONCT.W	:
On	CL.suj.3.m.s	on
remplit	V.P.3.s	remplir
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
,	PONCT.W	,
et	C.C	et
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
envoie	V.P.3.s	envoyer
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
dans	P	dans
le	D.def.m.s	le
«	N.C.m.s	«
body	ET	body
»	N.C.m.s	»
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
HTTP	N.P.m.s	Http
[	PONCT.W	[
valeurs	N.C.f.p	valeur
lisibles	A.qual.f.p	lisible
si	C.S	si
le	D.def.m.s	le
«	N.C.m.s	«
body	N.C.m.s	body
»	N.C.m.s	»
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
est	V.P.3.s	être
accessible	A.qual.f.s	accessible
]	PONCT.W	]
•	P+D.def.m.s	c
http://monsite.fr/mapage.php	N.C.m.s	<unknown>
Communications	N.C.f.p	communication
Client	N.P.m.s	Client
-	PONCT.W	-
Serveur	N.C.m.s	serveur
•	N.C.m.s	•
Les	D.def.f.p	le
données	N.C.f.p	donnée
recueillies	VK.f.p	recueillir
dans	P	dans
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
sont	V.P.3.p	être
transmises	VK.f.p	transmettre
au	P+D.def.m.s	au
programme	N.C.m.s	programme
indiqué	VK.m.s	indiquer
dans	P	dans
action=	N.C.f.s	actionç
...	PONCT.W	<unknown>
•	N.C.m.s	•
Dans	P	dans
PHP	N.P.m.s	Php
,	PONCT.W	,
on	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
ces	D.dem.f.p	ce
données	N.C.f.p	donnée
grâce	N.C.f.s	grâce
à	P	à
deux	D.card.m.p	deux
tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
spéciaux	A.qual.m.p	spécial
–	P	à
$_GET	N.P.m.s	<unknown>
->	ET	-
<form	ET	fform
action=	ET	actionà
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
method="get	N.C.m.s	methodçëget
"	PONCT.W	"
>	N.C.m.s	>
•	N.C.m.s	•
$_GET["nom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
<input	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
name="nom	ET	nameçnom
"	PONCT.W	"
/>	PONCT.W	<unknown>
–	P	à
$_POST	N.P.m.s	<unknown>
->	ET	-
<form	ET	fform
action=	ET	actionà
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
method="post	N.C.m.s	methodçpost
"	PONCT.W	"
>	N.C.m.s	>
•	N.C.m.s	•
$_POST["nom	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
<input	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
name="nom	ET	nameçnom
"	PONCT.W	"
/>	N.P.x.s	<unknown>
Communication	N.C.f.s	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
GET	N.P.m.s	Get
1	A.card.f.s	@card@
.	PONCT.S	.

Client	N.P.m.s	Client
envoie	V.P.3.s	envoyer
des	D.ind.f.p	du
données	N.C.f.p	donnée
OU	CL.suj.3.m.s	ou
clique	V.P.3.s	cliquer
sur	P	sur
un	D.ind.m.s	un
lien	N.C.m.s	lien
prévu	VK.m.s	prévoir
2	A.card.m.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
récupère	V.P.3.s	récupérer
et	C.C	et
analyse	V.P.3.s	analyser
la	D.def.f.s	le
requête	N.C.f.s	requête
3	A.card.f.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
crée	V.P.3.s	créer
des	D.ind.m.p	du
tableaux	N.C.m.p	tableau
contenant	VG	contenir
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
et	C.C	et
les	D.def.f.p	le
envoie	N.C.f.p	envoie
à	P	à
PHP	N.P.m.s	Php
GET	N.P.m.s	Get
page.php	N.C.m.s	<unknown>
GET	N.P.m.s	Get
var=42	N.card.f.s	<unknown>
GET	N.P.m.s	Get
:	PONCT.W	:
http://site.fr/page.php	N.C.m.s	<unknown>
?	PONCT.S	?

var=42	D.card.m.p	<unknown>
var=42	D.card.m.p	<unknown>
GET	N.P.m.s	Get
/page.php	N.C.m.s	<unknown>
?	PONCT.S	?

var=42	D.card.m.p	<unknown>
<html>	N.C.m.p	<unknown>
Coucou	N.P.m.s	Coucou
</html>	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
page.php	ET	<unknown>
Apache	N.P.m.s	Apache
Communications	N.C.f.p	communication
C/S	N.C.m.s	cé
:	PONCT.W	:
GET	N.P.m.s	Get
•	P+D.def.m.s	c
URL	N.P.m.s	Url
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
contient	V.P.3.s	contenir
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
–	N.C.m.s	–
Formulaire	N.C.m.s	formulaire
passé	VK.m.s	passer
par	P	par
l'	D.def.f.s	le
URL	N.P.f.s	Url
–	N.P.m.s	–
Construction	N.C.f.s	construction
de	P	de
sa	D.poss.f.s	son
propre	A.qual.m.s	propre
URL	N.P.f.s	Url
:	PONCT.W	:
<a	D.poss.f.s	con
href="http://monsite.fr/page.php	N.C.m.s	<unknown>
?	PONCT.S	?

var=bla&x=42&y=0">Lien</a>	N.P.x.s	<unknown>
page.php	ADV.-	pagethphp
la	D.def.f.s	le
page	N.C.f.s	page
qui	PRO.rel.f.s	qui
traitera	V.F.3.s	traiter
la	D.def.f.s	le
requête	N.C.f.s	requête
var	A.qual.m.s	var
contient	N.C.m.s	contient
«	P+D.def.m.s	c
bla	N.C.m.s	bla
»	N.C.m.s	»
x	A.card.m.s	X
contient	V.P.3.s	contenir
42	D.card.m.p	@card@
y	CL.obj.3.f.s	y
contient	V.P.3.s	contenir
0	D.card.m.s	@card@
«	N.C.m.s	«
?	PONCT.S	?

»	P	à
sépare	V.P.3.s	séparer
l'	D.def.f.s	le
adresse	N.C.f.s	adresse
de	P	de
ressource	N.C.f.s	ressource
des	P+D.def.f.p	du
données	N.C.f.p	donnée
«	N.C.m.s	«
&	PONCT.W	&
»	P	à
sépare	V.P.3.s	séparer
chaque	D.ind.f.s	chaque
donnée	N.C.f.s	donnée
(	PONCT.W	(
champs/valeur	N.C.m.s	<unknown>
)	PONCT.W	)
Communications	N.C.f.p	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
GET	N.C.m.s	get
•	P	à
Méthode	N.P.m.s	Méthode
GET	N.P.m.s	Get
–	N.C.m.s	–
Les	D.def.f.p	le
données	N.C.f.p	donnée
sont	V.P.3.p	être
envoyées	VK.f.p	envoyer
dans	P	dans
l'	D.def.m.s	le
URL	N.P.f.s	Url
du	P+D.def.m.s	du
programme	N.C.m.s	programme
–	N.P.m.s	–
Limitée	VK.f.s	limiter
à	P	à
256	D.card.m.p	@card@
octets	N.C.m.p	octet
<form	N.P.m.s	<unknown>
name="formGet	ET	<unknown>
"	PONCT.W	"
–	P	à
Déconseillé	N.C.m.s	déconseillé
action="coursPHP-8.php	ET	<unknown>
"	PONCT.W	"
method="GET">	A.ind.m.s	<unknown>
<label>Nom</label>	ET	<unknown>
<input	ET	çinput
type="text	ET	typeëtext
"	PONCT.W	"
name="client	ET	nameçclient
"	PONCT.W	"
size="20	N.C.m.s	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	N.P.x.s	<unknown>
<label>Mot	N.P.m.s	<unknown>
de	P	de
passe	V.P.3.s	passer
</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="password	ET	typeëppassword
"	PONCT.W	"
name="mdp	ET	<unknown>
"	PONCT.W	"
size="10"/>	N.C.m.s	<unknown>
<br/>	ET	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
<p>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
<i>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$_GET["client	N.P.f.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</i>	I	Iiië
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Communications	N.C.f.p	communication
C/S	N.C.m.s	cé
:	PONCT.W	:
GET	N.C.m.s	get
1	D.card.m.s	@card@
-	PONCT.W	-
On	CL.suj.3.m.s	on
lance	V.P.3.s	lancer
un	D.ind.m.s	un
programme	N.C.m.s	programme
qui	PRO.rel.m.s	qui
écoute	V.P.3.s	écouter
les	D.def.f.p	le
requêtes	N.C.f.p	requête
envoyées	VK.f.p	envoyer
sur	P	sur
notre	D.poss.m.s	notre
propre	A.qual.m.s	propre
machine	N.C.f.s	machine
(	PONCT.W	(
localhost	N.C.m.s	localhost
)	PONCT.W	)
,	PONCT.W	,
sur	P	sur
le	D.def.m.s	le
port	N.C.m.s	port
5000	N.card.m.s	@card@
2	A.card.m.s	@card@
-	PONCT.W	-
On	CL.suj.3.m.s	on
crée	V.P.3.s	créer
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
qui	PRO.rel.m.s	qui
enverra	V.F.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
avec	P	avec
la	D.def.f.s	le
méthode	N.C.f.s	méthode
GET	N.P.m.s	Get
,	PONCT.W	,
vers	P	vers
une	D.ind.f.s	un
page	N.C.f.s	page
de	P	de
notre	D.poss.f.s	notre
machine	N.C.f.s	machine
sur	P	sur
le	D.def.m.s	le
port	N.C.m.s	port
5000	D.card.f.p	@card@
Communications	N.C.f.p	communication
C/S	N.C.m.s	cé
:	PONCT.W	:
GET	N.C.m.s	get
3	A.card.m.s	@card@
–	N.card.m.s	–
On	CL.suj.3.m.s	on
remplit	V.P.3.s	remplir
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
avec	P	avec
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
,	PONCT.W	,
puis	C.C	pui
on	CL.suj.3.m.s	on
clique	V.P.3.s	cliquer
sur	P	sur
«	N.C.m.s	«
Envoyer	VW	envoyer
»	P	à
4	A.card.m.s	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
GET	N.P.f.s	Get
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
(	PONCT.W	(
localhost	N.C.m.s	localhost
)	PONCT.W	)
avec	P	avec
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
variables	N.C.f.p	variable
dans	P	dans
l'	D.def.f.s	le
URL	N.P.f.s	Url
Communications	N.C.f.p	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
GET	N.P.m.s	Get
5	D.card.m.p	@card@
–	N.C.m.p	–
Depuis	P	depuis
le	D.def.m.s	le
programme	N.C.m.s	programme
«	P	à
serveur	N.C.m.s	serveur
»	C.S	»
on	CL.suj.3.m.s	on
écrit	V.P.3.s	écrire
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
6	A.card.f.s	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
récupère	V.P.3.s	récupérer
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
,	PONCT.W	,
il	CL.suj.3.m.s	il
considère	V.P.3.s	considérer
donc	ADV.-	donc
qu'	C.S	que
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
de	P	de
la	D.def.f.s	le
ressource	N.C.f.s	ressource
visée	VK.f.s	viser
par	P	par
cette	D.dem.f.s	ce
URL	N.P.f.s	Url
avec	P	avec
ces	D.dem.f.p	ce
variables	N.C.f.p	variable
et	C.C	et
valeurs	N.C.f.p	valeur
6	D.card.m.p	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
commence	V.P.3.s	commencer
à	P	à
récupérer	VW	récupérer
la	D.def.f.s	le
réponse	N.C.f.s	réponse
Communications	N.C.f.p	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
GET	N.P.m.s	Get
7	D.card.m.p	@card@
–	N.C.m.p	–
Depuis	P	depuis
le	D.def.m.s	le
programme	N.C.m.s	programme
«	P	à
serveur	N.C.m.s	serveur
»	N.C.m.s	»
,	PONCT.W	,
on	CL.suj.3.m.s	on
termine	V.P.3.s	terminer
la	D.def.f.s	le
réponse	N.C.f.s	réponse
(	PONCT.W	(
Ctrl	N.P.m.s	<unknown>
D)/ferme	N.C.m.s	düéferme
la	D.def.f.s	le
connexion	N.C.f.s	connexion
8	A.card.f.s	@card@
–	P	à
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
voit	V.P.3.s	voir
la	D.def.f.s	le
connexion	N.C.f.s	connexion
se	CL.refl.3.f.s	se
fermer	VW	fermer
,	PONCT.W	,
il	CL.suj.3.m.s	il
considère	V.P.3.s	considérer
que	C.S	que
les	D.def.f.p	le
données	N.C.f.p	donnée
qu'	PRO.rel.f.p	que
il	CL.suj.3.m.s	il
a	V.P.3.s	avoir
récupéré	VK.m.s	récupérer
constitue	V.P.3.s	constituer
la	D.def.f.s	le
réponse	N.C.f.s	réponse
entière	A.qual.f.s	entier
,	PONCT.W	,
il	CL.suj.3.m.s	il
l'	CL.obj.3.m.s	le
affiche	V.P.3.s	afficher
Communications	N.C.f.p	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
GET	N.P.m.s	Get
(	PONCT.W	(
logs	N.C.m.p	log
)	PONCT.W	)
1	N.card.m.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
va	V.P.3.s	aller
regarder	VW	regarder
les	D.def.m.p	le
«	A.card.m.p	«
logs	N.C.m.p	log
»	N.C.m.p	»
de	P	de
apache	N.C.f.s	apache
(	PONCT.W	(
les	D.def.m.p	le
journaux	N.C.m.p	journal
enregistrant	VG	enregistrer
toutes	A.ind.f.p	tout
les	D.def.f.p	le
transactions	N.C.f.p	transaction
que	PRO.rel.f.p	que
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
a	V.P.3.s	avoir
traité	VK.m.s	traiter
)	PONCT.W	)
2	A.card.m.s	@card@
–	N.C.m.s	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
demande	V.P.3.s	demander
la	D.def.f.s	le
page	N.C.f.s	page
contenant	VG	contenir
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
3	A.card.m.s	@card@
–	N.card.m.s	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
envoie	V.P.3.s	envoyer
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
par	P	par
l'	D.def.m.s	le
URL	N.P.f.s	Url
...	PONCT.W	<unknown>
on	CL.suj.3.m.s	on
voit	V.P.3.s	voir
toutes	A.ind.f.p	tout
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
dans	P	dans
la	D.def.f.s	le
requête	N.C.f.s	requête
GET	N.P.m.s	Get
enregistrée	VK.f.s	enregistrer
Communication	N.C.f.s	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
1	A.card.f.s	@card@
.	PONCT.S	.

Client	N.C.m.s	client
rempli	N.C.m.s	rempli
formulaire	A.qual.m.s	formulaire
puis	C.C	pui
déclenche	V.P.3.s	déclencher
une	D.ind.f.s	un
requête	N.C.f.s	requête
2	A.card.f.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
récupère	V.P.3.s	récupérer
et	C.C	et
analyse	V.P.3.s	analyser
la	D.def.f.s	le
requête	N.C.f.s	requête
3	A.card.f.s	@card@
.	PONCT.S	.

Apache	N.P.m.s	Apache
crée	V.P.3.s	créer
des	D.ind.m.p	du
tableaux	N.C.m.p	tableau
contenant	VG	contenir
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
et	C.C	et
les	D.def.f.p	le
envoie	N.C.f.p	envoie
à	P	à
PHP	N.P.m.s	Php
GET	N.P.m.s	Get
page.php	N.C.m.s	<unknown>
POST	N.P.m.s	Post
Name=Flo	N.P.m.s	Namefflo
POST	N.P.m.s	Post
:	PONCT.W	:
http://site.fr/page.php	N.C.m.s	<unknown>
Name=Flo	N.P.m.s	Namefflo
POST	N.P.m.s	Post
Name=Flo	N.P.m.s	Namefflo
Name	N.P.m.s	Name
:	PONCT.W	:
Flo	N.P.m.s	Flo
<html>	N.P.m.s	<unknown>
Coucou	N.P.m.s	Coucou
</html>	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
page.php	ET	<unknown>
Apache	N.P.m.s	Apache
Communication	N.C.f.s	communication
C/S	N.P.m.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
<form	ET	fform
name="formClient	ET	<unknown>
"	PONCT.W	"
action="coursPHP-7.php	ET	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
>	ET	>
<label	N.C.m.s	çlabel
for="nom">Nom</label>	ET	<unknown>
<input	ET	çinput
type="text	ET	typeëtext
"	PONCT.W	"
id="nom	ET	idçänom
"	PONCT.W	"
name="nomClient	A.qual.m.s	nameçnomclient
"	PONCT.W	"
value="votre	ET	valueçävotre
nom	ET	nom
"	PONCT.W	"
size="40	N.C.m.s	<unknown>
"	PONCT.W	"
maxlength="150	ET	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
$_POST["nomClient	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$op	ET	çop
=	PONCT.W	=
$_POST["opinionClient	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$prod	N.P.m.s	<unknown>
=	PONCT.W	=
$_POST["produit	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Merci	N.P.m.s	<unknown>
de	P	de
votre	D.poss.f.s	votre
participation	N.C.f.s	participation
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Votre	N.P.m.s	<unknown>
produit	N.C.m.s	produit
est	V.P.3.s	être
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$prod	N.P.m.s	<unknown>
</i>	N.P.x.s	<unknown>
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
Votre	D.poss.f.s	votre
opinion	N.C.f.s	opinion
est	V.P.3.s	être
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$op	N.P.m.s	<unknown>
</i>	N.P.x.s	<unknown>
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Communication	N.C.f.s	communication
C/S	N.C.m.s	cé
:	PONCT.W	:
POST	N.P.m.s	Post
-	PONCT.W	-
HTML	N.P.m.s	<unknown>
•	P	à
Exemple	N.C.m.s	exemple
<form	ET	fform
name=	ET	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
action="coursPHP-9.php	ET	<unknown>
"	PONCT.W	"
method="POST">	A.ind.m.s	methodçostëë
<fieldset>	ET	<unknown>
<legend>	ET	<unknown>
Vos	N.P.m.s	Vos
données	N.C.f.p	donnée
</legend>	N.P.x.s	<unknown>
<label	N.P.m.s	<unknown>
>	N.P.x.s	>
...	PONCT.W	<unknown>
</label>	N.P.x.s	<unknown>
<	ET	<
input	A.qual.m.s	input
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="nom	ET	nameçnom
"	PONCT.W	"
...	PONCT.W	<unknown>
/>	ET	<unknown>
<br/>	N.C.m.s	<unknown>
<label	N.P.m.s	<unknown>
>	N.C.m.s	>
...	PONCT.W	<unknown>
</label>	N.P.m.s	<unknown>
<	ET	<
input	ET	input
type="email	N.C.m.s	typeëemail
"	PONCT.W	"
name="email	A.qual.m.s	nameçemail
"	PONCT.W	"
...	PONCT.W	<unknown>
/><br/>	N.C.m.s	<unknown>
<input	ET	çinput
type="radio	ET	typeçeradio
"	PONCT.W	"
name="sexe	ET	nameçsexe
"	PONCT.W	"
value="Homme	N.C.m.s	valueççhomme
"	PONCT.W	"
/>	ET	<unknown>
Homme	ET	homme
<input	ET	çinput
type="radio	ET	typeçeradio
"	PONCT.W	"
name="sexe	ET	nameçsexe
"	PONCT.W	"
value="Femme	N.C.m.s	valueëëfemme
"	PONCT.W	"
/>	D.card.m.p	<unknown>
Femme<br/>	N.C.m.p	<unknown>
</fieldset>	ET	<unknown>
<fieldset>	N.P.x.s	<unknown>
<legend>	ET	<unknown>
Vos	D.poss.m.p	votre
produits	N.C.m.p	produit
</legend>	N.P.x.s	<unknown>
<label>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</label>	N.P.m.s	<unknown>
<select	N.P.m.s	<unknown>
name="produit">	ET	nameäproduitäë
<option	N.C.f.s	çoption
value="SuperKdo">	N.C.f.s	valueççsuperkdoëë
...	PONCT.S	<unknown>
</option>	N.P.x.s	<unknown>
<option	N.C.f.s	çoption
value="MegaTruc">	N.C.f.p	<unknown>
Mega	N.P.m.s	Mega
Truc</option>	N.P.x.s	Trucçioptionç
<option	N.C.f.s	çoption
value="BabyFun">	ET	<unknown>
...	PONCT.W	<unknown>
</option>	N.P.x.s	<unknown>
</select>	N.P.x.s	<unknown>
<br/>	N.P.x.s	<unknown>
<label>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</label>	ET	<unknown>
<textarea	ET	<unknown>
name="opinion	N.C.f.s	nameççopinion
"	PONCT.W	"
...	PONCT.W	<unknown>
>	N.C.m.s	>
...	PONCT.S	<unknown>
</textarea>	N.P.m.s	<unknown>
</fieldset>	N.P.m.s	<unknown>
Communication	N.C.f.s	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
-	PONCT.W	-
PHP	N.P.m.s	Php
•	D.card.m.s	•
Exemple	N.C.m.s	exemple
<body>	N.P.m.s	<unknown>
<h1>Récapitulatif	A.qual.m.s	cht-récapitulatif
</h1>	N.P.x.s	<unknown>
<ul>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Nom	N.P.m.s	Nom
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["nom	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Email	N.P.m.s	Email
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["email	N.C.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Sexe	N.P.m.s	Sexe
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["sexe	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Produit	N.C.m.s	produit
préféré	VK.m.s	préférer
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["produit	N.C.m.s	çäpostëëproduit
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
Suggestion	N.C.f.s	suggestion
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$_POST["opinion	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</li>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</ul>	N.C.m.s	<unknown>
</body>	N.P.x.s	<unknown>
Communication	N.C.f.s	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
1	D.card.m.s	@card@
-	PONCT.W	-
On	CL.suj.3.m.s	on
lance	V.P.3.s	lancer
un	D.ind.m.s	un
programme	N.C.m.s	programme
qui	PRO.rel.m.s	qui
écoute	V.P.3.s	écouter
les	D.def.f.p	le
requêtes	N.C.f.p	requête
envoyées	VK.f.p	envoyer
sur	P	sur
notre	D.poss.m.s	notre
propre	A.qual.m.s	propre
machine	N.C.f.s	machine
(	PONCT.W	(
localhost	N.C.m.s	localhost
)	PONCT.W	)
,	PONCT.W	,
sur	P	sur
le	D.def.m.s	le
port	N.C.m.s	port
5000	N.card.m.s	@card@
2	A.card.m.s	@card@
-	PONCT.W	-
On	CL.suj.3.m.s	on
crée	V.P.3.s	créer
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
qui	PRO.rel.m.s	qui
enverra	V.F.3.s	envoyer
les	D.def.f.p	le
données	N.C.f.p	donnée
avec	P	avec
la	D.def.f.s	le
méthode	N.C.f.s	méthode
POST	N.P.m.s	Post
,	PONCT.W	,
vers	P	vers
une	D.ind.f.s	un
page	N.C.f.s	page
de	P	de
notre	D.poss.f.s	notre
machine	N.C.f.s	machine
sur	P	sur
le	D.def.m.s	le
port	N.C.m.s	port
5000	D.card.f.p	@card@
Communication	N.C.f.s	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
3	PRO.card.m.p	@card@
–	C.S	–
On	CL.suj.3.m.s	on
remplit	V.P.3.s	remplir
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
avec	P	avec
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
,	PONCT.W	,
puis	C.C	pui
on	CL.suj.3.m.s	on
clique	V.P.3.s	cliquer
sur	P	sur
«	N.C.m.s	«
Envoyer	VW	envoyer
»	P	à
4	A.card.m.s	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
POST	N.P.m.s	Post
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
(	PONCT.W	(
localhost	N.C.m.s	localhost
)	PONCT.W	)
en	P	en
visant	VG	viser
la	D.def.f.s	le
ressource	N.C.f.s	ressource
/index.php	N.P.x.s	<unknown>
,	PONCT.W	,
et	C.C	et
en	P	en
incluant	VG	inclure
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
variables	N.C.f.p	variable
dans	P	dans
le	D.def.m.s	le
corps	N.C.m.s	corps
(	PONCT.W	(
body	N.C.m.s	body
)	PONCT.W	)
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
HTTP	N.P.m.s	Http
Communication	N.C.f.s	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
5	D.card.m.p	@card@
–	N.C.m.p	–
Depuis	P	depuis
le	D.def.m.s	le
programme	N.C.m.s	programme
«	P	à
serveur	N.C.m.s	serveur
»	C.S	»
on	CL.suj.3.m.s	on
écrit	V.P.3.s	écrire
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
6	A.card.f.s	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
récupère	V.P.3.s	récupérer
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
,	PONCT.W	,
il	CL.suj.3.m.s	il
considère	V.P.3.s	considérer
donc	ADV.-	donc
qu'	C.S	que
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
6	A.card.m.s	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
d'	P	de
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
possible	A.qual.f.s	possible
accessible	A.qual.f.s	accessible
à	P	à
commence	N.C.f.s	commence
à	P	à
récupérer	VW	récupérer
la	D.def.f.s	le
cette	D.dem.f.s	ce
URL	N.P.f.s	Url
lorsque	C.S	lorsque
l'	D.def.f.s	le
on	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
des	D.ind.f.p	du
réponse	N.C.f.s	réponse
données	VK.f.p	donner
en	P	en
POST	N.P.m.s	Post
Communication	N.C.f.s	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
8	A.card.m.s	@card@
–	N.C.m.s	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
voit	V.P.3.s	voir
la	D.def.f.s	le
connexion	N.C.f.s	connexion
se	CL.refl.3.f.s	se
fermer	VW	fermer
,	PONCT.W	,
il	CL.suj.3.m.s	il
considère	V.P.3.s	considérer
que	C.S	que
les	D.def.f.p	le
données	N.C.f.p	donnée
qu'	PRO.rel.f.p	que
il	CL.suj.3.m.s	il
a	V.P.3.s	avoir
récupéré	VK.m.s	récupérer
constitue	V.P.3.s	constituer
la	D.def.f.s	le
réponse	N.C.f.s	réponse
entière	A.qual.f.s	entier
,	PONCT.W	,
il	CL.suj.3.m.s	il
l'	CL.obj.3.f.s	la
affiche	V.P.3.s	afficher
7	D.card.m.p	@card@
–	N.C.m.s	–
Depuis	P	depuis
le	D.def.m.s	le
programme	N.C.m.s	programme
«	P	à
serveur	N.C.m.s	serveur
»	N.C.m.s	»
,	PONCT.W	,
on	CL.suj.3.m.s	on
termine	V.P.3.s	terminer
la	D.def.f.s	le
réponse	N.C.f.s	réponse
(	PONCT.W	(
Ctrl	N.P.f.s	<unknown>
D)/ferme	N.P.m.s	Düéferme
la	D.def.f.s	le
connexion	N.C.f.s	connexion
Communications	N.C.f.p	communication
C/S	N.P.f.s	CRS
:	PONCT.W	:
POST	N.P.m.s	Post
(	PONCT.W	(
logs	N.C.m.p	log
)	PONCT.W	)
1	N.card.m.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
va	V.P.3.s	aller
regarder	VW	regarder
les	D.def.m.p	le
«	A.card.m.p	«
logs	N.C.m.p	log
»	N.C.m.p	»
de	P	de
apache	N.C.f.s	apache
(	PONCT.W	(
les	D.def.m.p	le
journaux	N.C.m.p	journal
enregistrant	VG	enregistrer
toutes	A.ind.f.p	tout
les	D.def.f.p	le
transactions	N.C.f.p	transaction
que	PRO.rel.f.p	que
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
a	V.P.3.s	avoir
traité	VK.m.s	traiter
)	PONCT.W	)
2	A.card.m.s	@card@
–	N.C.m.s	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
demande	V.P.3.s	demander
la	D.def.f.s	le
page	N.C.f.s	page
contenant	VG	contenir
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
3	A.card.m.s	@card@
–	N.card.m.s	–
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
envoie	V.P.3.s	envoyer
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
en	P	en
POST	N.P.m.s	Post
,	PONCT.W	,
on	CL.suj.3.m.s	on
ne	ADV.neg	ne
voit	V.P.3.s	voir
aucun	D.neg.m.s	aucun
nom	N.C.m.s	nom
de	P	de
variable	N.C.f.s	variable
ni	C.C	ni
valeur	N.C.f.s	valeur
dans	P	dans
les	D.def.m.p	le
logs	N.C.m.p	log
d'	P	de
apache	N.C.f.s	apache
!	PONCT.S	!

Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
•	N.C.m.s	•
Une	D.ind.f.s	un
requête	N.C.f.s	requête
envoyée	VK.f.s	envoyer
=	P	à
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
reçue	VK.f.s	recevoir
•	D.card.f.p	•
Réponses	N.C.f.p	réponse
HTTP	N.P.m.s	Http
de	P	de
5	D.card.m.p	@card@
types	N.C.m.p	type
(	PONCT.W	(
officiels	N.C.m.p	officiel
)	PONCT.W	)
:	PONCT.W	:
–	D.card.m.s	–
1xx	PRO.card.f.p	<unknown>
:	PONCT.W	:
informationnelle	A.qual.f.s	informationnel
–	P	à
2xx	N.card.m.s	2xx
:	PONCT.W	:
succès	N.C.m.p	succès
–	N.C.m.s	–
3xx	A.card.m.p	<unknown>
:	PONCT.W	:
redirection	N.C.f.s	redirection
–	P	à
4xx	N.C.m.s	<unknown>
:	PONCT.W	:
erreur	N.C.f.s	erreur
côté	N.C.m.s	côté
client	N.C.m.s	client
//	PONCT.W	@card@
404	PRO.card.f.p	@card@
:	PONCT.W	:
url	A.qual.m.s	url
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
–	VK.m.s	être
5xx	N.card.m.s	<unknown>
:	PONCT.W	:
erreur	N.C.f.s	erreur
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
–	N.C.m.s	–
[	PONCT.W	[
autres	A.ind.f.p	autre
erreurs	N.C.f.p	erreur
sont	V.P.3.p	être
liées	VK.f.p	lier
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
web	N.C.m.s	web
utilisé	VK.m.s	utiliser
]	PONCT.W	]
Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
:	PONCT.W	:
classiques	N.C.m.p	classique
200	A.card.m.s	@card@
OK	C.C	ok
La	D.def.f.s	le
requête	N.C.f.s	requête
a	V.P.3.s	avoir
bien	ADV.-	bien
été	VK.m.s	être
reçue	VK.f.s	recevoir
,	PONCT.W	,
comprise	VK.f.s	comprendre
,	PONCT.W	,
et	C.C	et
exécutée	VK.f.s	exécuter
301	A.card.m.s	@card@
308	A.card.m.s	@card@
Permanent	N.C.m.s	permanent
Redirect	N.P.m.s	Redirect
La	D.def.f.s	le
ressource	N.C.f.s	ressource
a	V.P.3.s	avoir
été	VK.m.s	être
définitivement	ADV.-	définitivement
déplacée	VK.f.s	déplacer
à	P	à
une	D.ind.f.s	un
autre	A.ind.f.s	autre
URL	N.P.f.s	Url
302	D.card.m.p	@card@
307	D.card.m.p	@card@
Temporary	N.P.m.s	Temporary
Redirect	N.P.m.s	Redirect
La	D.def.f.s	le
ressource	N.C.f.s	ressource
est	V.P.3.s	être
temporairement	ADV.-	temporairement
déplacée	VK.f.s	déplacer
à	P	à
une	D.ind.f.s	un
autre	A.ind.f.s	autre
URL	N.P.f.s	Url
403	D.card.m.p	@card@
Forbidden	N.P.m.s	Forbidden
La	D.def.f.s	le
requête	N.C.f.s	requête
est	V.P.3.s	être
correcte	A.qual.f.s	correct
,	PONCT.W	,
mais	C.C	mais
le	D.def.m.s	le
client	N.C.m.s	client
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
le	D.def.m.s	le
droit	N.C.m.s	droit
de	P	de
demander	VW	demander
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
de	P	de
faire	VW	faire
cette	D.dem.f.s	ce
action	N.C.f.s	action
404	D.card.m.p	@card@
Not	N.P.m.s	Not
Found	V.P.3.s	foundre
La	D.def.f.s	le
ressource	N.C.f.s	ressource
visée	VK.f.s	viser
par	P	par
l'	D.def.f.s	le
URL	N.P.f.s	Url
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
été	VK.m.s	être
trouvée	VK.f.s	trouver
500	N.card.m.s	@card@
Internal	N.P.m.s	Internal
Server	VW	server
Error	N.P.m.s	Error
Erreur	N.C.f.s	erreur
générique/non	N.C.m.s	<unknown>
spécifique	A.qual.m.s	spécifique
...	PONCT.W	<unknown>
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	A.qual.m.s	web
a	V.P.3.s	avoir
échoué	VK.m.s	échouer
quelque	D.ind.f.s	quelque
chose	N.C.f.s	chose
à	P	à
un	D.ind.m.s	un
moment	N.C.m.s	moment
502	A.card.m.s	@card@
Bad	N.P.m.s	Bad
Gateway	N.P.m.s	Gateway
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
visé	VK.m.s	viser
n'	ADV.neg	ne
arrive	V.P.3.s	arriver
pas	ADV.neg	pas
à	P	à
contacter	VW	contacter
le	D.def.m.s	le
serveur	N.C.m.s	serveur
qui	PRO.rel.m.s	qui
traite	V.P.3.s	traiter
la	D.def.f.s	le
requête	N.C.f.s	requête
envoyée	VK.f.s	envoyer
Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
:	PONCT.W	:
200	D.card.m.p	@card@
Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
1	D.card.m.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
«	P	à
localhost	N.C.m.s	localhost
»	N.C.m.s	»
sur	P	sur
le	D.def.m.s	le
port	N.C.m.s	port
8888	N.card.m.s	@card@
,	PONCT.W	,
en	P	en
demandant	VG	demander
la	D.def.f.s	le
ressource	N.C.f.s	ressource
‘	N.C.m.s	‘
/	PONCT.W	@card@
’	N.C.m.s	’
2	A.card.m.s	@card@
–	N.C.m.p	–
Apache	N.P.m.s	Apache
répond	V.P.3.s	répondre
dans	P	dans
l'	D.def.f.s	le
en-tête	N.C.f.s	en-tête
de	P	de
la	D.def.f.s	le
réponse	N.C.f.s	réponse
HTTP	N.P.m.s	Http
que	PRO.rel.f.s	que
tout	PRO.ind.m.s	tout
va	V.P.3.s	aller
bien	ADV.-	bien
(	PONCT.W	(
OK	N.P.x.s	Ok
)	PONCT.W	)
:	PONCT.W	:
code	N.C.m.s	code
200	PRO.card.m.p	@card@
2	A.card.m.s	@card@
–	N.C.m.p	–
Apache	N.P.m.s	Apache
envoie	V.P.3.s	envoyer
la	D.def.f.s	le
page	N.C.f.s	page
web	N.C.m.s	web
demandée	VK.f.s	demander
dans	P	dans
le	D.def.m.s	le
corps	N.C.m.s	corps
(	PONCT.W	(
body	N.C.m.s	body
)	PONCT.W	)
de	P	de
la	D.def.f.s	le
réponse	N.C.f.s	réponse
Statuts	N.P.m.s	Statuts
HTTP	N.P.m.s	Http
:	PONCT.W	:
404	D.card.m.p	@card@
Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
1	D.card.m.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
«	P	à
localhost	N.C.m.s	localhost
»	N.C.m.s	»
sur	P	sur
le	D.def.m.s	le
port	N.C.m.s	port
8888	N.card.m.s	@card@
,	PONCT.W	,
en	P	en
demandant	VG	demander
une	D.ind.f.s	un
ressource	N.C.f.s	ressource
qui	PRO.rel.f.s	qui
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
2	A.card.m.s	@card@
–	P+D.def.m.s	c
Apache	N.P.m.s	Apache
répond	V.P.3.s	répondre
dans	P	dans
l'	D.def.f.s	le
en-tête	N.C.f.s	en-tête
de	P	de
la	D.def.f.s	le
réponse	N.C.f.s	réponse
HTTP	N.P.m.s	Http
que	PRO.rel.f.s	que
la	D.def.f.s	le
ressource	N.C.f.s	ressource
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
été	VK.m.s	être
trouvée	VK.f.s	trouver
:	PONCT.W	:
code	N.C.m.s	code
404	D.card.m.p	@card@
2	A.card.m.s	@card@
–	P+D.def.m.s	c
Apache	N.P.m.s	Apache
envoie	V.P.3.s	envoyer
dans	P	dans
le	D.def.m.s	le
corps	N.C.m.s	corps
de	P	de
la	D.def.f.s	le
réponse	N.C.f.s	réponse
HTTP	N.P.m.s	Http
une	D.ind.f.s	un
page	N.C.f.s	page
web	N.C.m.s	web
détaillant	VG	détailler
l'	D.def.f.s	le
erreur	N.C.f.s	erreur
au	P+D.def.m.s	au
client	N.C.m.s	client
(	PONCT.W	(
au	P+D.def.m.s	au
format	N.C.m.s	format
HTML	N.P.m.s	<unknown>
pour	P	pour
que	C.S	que
le	D.def.m.s	le
client	N.C.m.s	client
puisse	V.S.3.s	pouvoir
la	D.def.f.s	le
lire	N.C.f.s	lire
)	PONCT.W	)
Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
:	PONCT.W	:
400	D.card.m.p	@card@
Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
1	D.card.m.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
incorrecte	A.qual.f.s	incorrect
(	PONCT.W	(
protocole	N.C.m.s	protocole
inexistant	A.qual.m.s	inexistant
)	PONCT.W	)
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
«	P	à
localhost	N.C.m.s	localhost
»	N.C.m.s	»
sur	P	sur
le	D.def.m.s	le
port	N.C.m.s	port
8888	N.card.m.s	@card@
2	A.card.m.s	@card@
–	P+D.def.m.s	c
Apache	N.P.m.s	Apache
répond	V.P.3.s	répondre
dans	P	dans
l'	D.def.f.s	le
en-tête	N.C.f.s	en-tête
de	P	de
la	D.def.f.s	le
réponse	N.C.f.s	réponse
HTTP	N.P.m.s	Http
que	C.S	que
la	D.def.f.s	le
requête	N.C.f.s	requête
est	V.P.3.s	être
incorrecte	A.qual.f.s	incorrect
(	PONCT.W	(
elle	CL.suj.3.f.s	elle
ne	ADV.neg	ne
respecte	V.P.3.s	respecter
pas	ADV.neg	pas
les	D.def.m.p	le
standards	N.C.m.p	standard
qu'	PRO.rel.m.p	que
il	CL.suj.3.m.s	il
connait	V.I.3.s	conner
)	PONCT.W	)
2	A.card.m.s	@card@
–	P+D.def.m.s	c
Apache	N.P.m.s	Apache
envoie	V.P.3.s	envoyer
dans	P	dans
le	D.def.m.s	le
corps	N.C.m.s	corps
de	P	de
la	D.def.f.s	le
réponse	N.C.f.s	réponse
HTTP	N.P.m.s	Http
une	D.ind.f.s	un
page	N.C.f.s	page
web	N.C.m.s	web
détaillant	VG	détailler
l'	D.def.f.s	le
erreur	N.C.f.s	erreur
au	P+D.def.m.s	au
client	N.C.m.s	client
(	PONCT.W	(
au	P+D.def.m.s	au
format	N.C.m.s	format
HTML	N.P.m.s	<unknown>
pour	P	pour
que	C.S	que
le	D.def.m.s	le
client	N.C.m.s	client
puisse	V.S.3.s	pouvoir
la	D.def.f.s	le
lire	N.C.f.s	lire
)	PONCT.W	)
PHP	N.P.m.s	Php
:	PONCT.W	:
Contrôle	N.C.m.s	contrôle
de	P	de
Flot	N.P.m.s	Flot
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
contrôle	N.C.m.s	contrôle
–	D.card.f.p	–
Instructions	N.C.f.p	instruction
pour	P	pour
gérer	VW	gérer
le	D.def.m.s	le
flot	N.C.m.s	flot
d'	P	de
exécution	N.C.f.s	exécution
–	P	à
Instructions	N.C.f.p	instruction
conditionnelles	A.qual.f.p	conditionnel
•	C.S	•
elles	CL.suj.3.f.p	elle
conditionnent	V.P.3.p	conditionner
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
•	P	à
Semblables	N.C.m.p	semblable
à	P	à
un	D.ind.m.s	un
nœud	N.C.m.s	nüud
de	P	de
Décision	N.C.f.s	décision
(	PONCT.W	(
diagramme	N.C.m.s	diagramme
activités	N.C.f.p	activité
)	PONCT.W	)
•	P	à
if	ET	if
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
,	PONCT.W	,
switch	N.C.m.s	switch
...	PONCT.W	<unknown>
case	N.C.f.s	case
...	PONCT.W	<unknown>
–	D.card.f.p	–
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.f.s	boucle
•	C.S	•
elles	CL.suj.3.f.p	elle
permettent	V.P.3.p	permettre
la	D.def.f.s	le
répétition	N.C.f.s	répétition
d'	P	de
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
•	P	à
for	N.C.m.s	for
...	PONCT.W	<unknown>
,	PONCT.W	,
foreach	N.C.m.s	foreach
...	PONCT.W	<unknown>
,	PONCT.W	,
while	N.C.m.s	while
...	PONCT.W	<unknown>
,	PONCT.W	,
do	N.C.m.s	do
...	PONCT.W	<unknown>
while	N.C.m.s	while
PHP	N.P.m.s	Php
:	PONCT.W	:
if	ET	if
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
•	P	à
Instructions	N.C.f.p	instruction
conditionnelles	A.qual.f.p	conditionnel
if	ET	if
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
if	N.C.m.s	if
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
{	P+D.def.m.s	c
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
si	ADV.-	si
vrai	A.qual.m.s	vrai
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
si	ADV.-	si
faux	A.qual.m.s	faux
;	PONCT.W	;
}	N.C.m.s	}
[	PONCT.W	[
condition	N.C.f.s	condition
VRAI	N.P.m.s	Vrai
]	PONCT.W	]
Bloc	N.P.m.s	Bloc
d'	P	de
instructions	N.C.f.p	instruction
si	ADV.-	si
vrai	A.qual.m.s	vrai
optionnel	A.qual.m.s	optionnel
[	PONCT.W	[
sinon	C.C	sinon
]	PONCT.W	]
Bloc	N.P.m.s	Bloc
d'	P	de
instructions	N.C.f.p	instruction
si	C.S	si
faux	A.qual.m.s	faux
if	ET	if
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
>=	P+D.def.m.s	çù
100	A.card.m.s	@card@
)	PONCT.W	)
{	P+D.def.m.s	c
$remise	N.C.f.s	<unknown>
=	V.P.3.s	être
0.10	N.card.m.s	@card@
;	PONCT.W	;
/*	V.P.3.s	avoir
remise	V.P.3.s	remiser
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
offerte	VK.f.s	offrir
*/	P	à
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
une	D.ind.f.s	un
remise	N.C.f.s	remise
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	A.card.f.s	{
...	PONCT.W	<unknown>
$remise	N.C.f.s	<unknown>
=	V.P.3.s	être
0.05	N.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
une	D.ind.f.s	un
remise	N.C.f.s	remise
de	P	de
5	D.card.m.p	@card@
%	N.C.m.p	%
</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
PHP	N.C.m.s	php
:	PONCT.W	:
if	I	if
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
•	P	à
Instructions	N.C.f.p	instruction
conditionnelles	A.qual.f.p	conditionnel
if	A.qual.f.p	if
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
–	N.C.m.s	–
Les	D.def.f.p	le
données	N.C.f.p	donnée
pour	P	pour
la	D.def.f.s	le
condition	N.C.f.s	condition
peuvent	V.P.3.p	pouvoir
venir	VW	venir
d'	P	de
un	D.ind.m.s	un
formulaire	A.qual.m.s	formulaire
formExemple11.html	N.C.m.s	<unknown>
<form	ET	fform
name=	ET	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
action="coursPHP-11.php	N.C.f.s	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
...	PONCT.W	<unknown>
<select	N.P.m.s	<unknown>
name="prix">	ET	nameäçprixçë
<option	N.C.f.s	çoption
value="10">	V.P.3.s	<unknown>
Super	N.P.m.s	Super
Kdo	N.P.m.s	Kdo
-	PONCT.W	-
10€	D.card.m.p	10à
</option>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</select>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
<input	ET	çinput
type="number	N.C.m.s	typeëenumber
"	PONCT.W	"
size="10	ET	<unknown>
"	PONCT.W	"
name="qte	ET	<unknown>
"	PONCT.W	"
/>	ET	<unknown>
...	PONCT.W	<unknown>
<input	ET	çinput
type="submit	ET	<unknown>
"	PONCT.W	"
value="Devis	VK.m.p	valueëdever
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
coursPHP-11.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$qte	A.qual.m.s	<unknown>
=	PONCT.W	=
$_POST["qte	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$prixunit	V.P.3.s	<unknown>
=	PONCT.W	=
$_POST["prix	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0	PRO.card.m.s	@card@
;	PONCT.W	;
if	N.C.m.s	if
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
>=	P+D.def.m.s	çù
100	A.card.m.s	@card@
)	PONCT.W	)
{	P+D.def.m.s	c
$remise	N.C.f.s	<unknown>
=	V.P.3.s	être
0.10	N.card.m.s	@card@
;	PONCT.W	;
/*	V.P.3.s	avoir
remise	V.P.3.s	remiser
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
offerte	VK.f.s	offrir
*/	P	à
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
une	D.ind.f.s	un
remise	N.C.f.s	remise
de	P	de
10	D.card.m.p	@card@
%	N.C.m.p	%
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
$prix	N.P.m.s	<unknown>
=	V.P.3.s	être
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	N.C.m.s	<unknown>
-	PONCT.W	-
(	PONCT.W	(
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	N.P.x.s	<unknown>
*	N.C.m.s	*
$remise	N.P.f.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
Pour	P	pour
un	D.ind.m.s	un
prix	N.C.m.s	prix
de	P	de
<i>	N.P.m.s	<unknown>
$prixunit	V.P.3.s	<unknown>
</i>	N.P.x.s	<unknown>
l'	D.def.f.s	le
unité	N.C.f.s	unité
et	C.C	et
<i>	N.P.x.s	<unknown>
$qte	N.P.x.s	<unknown>
</i>	N.P.x.s	<unknown>
unités	N.C.f.p	unité
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
à	P	à
régler	VW	régler
<i>	N.P.m.s	<unknown>
$prix	N.P.m.s	<unknown>
</i></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
if	I	if
...	PONCT.W	<unknown>
else	ET	else
...	PONCT.W	<unknown>
<form	ET	fform
name=	N.C.m.s	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
action="coursPHP-11.php	N.C.f.s	<unknown>
"	PONCT.W	"
>	P+D.def.m.s	c
<label>Produit	N.C.m.s	<unknown>
:	PONCT.W	:
</label>	N.P.m.s	<unknown>
<select	ET	<unknown>
name="prix">	ET	nameäçprixçë
<option	N.C.f.s	çoption
value="10	N.card.f.s	<unknown>
"	PONCT.W	"
>	P	à
Super	N.P.m.s	Super
...	PONCT.W	<unknown>
</option>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</select>	ET	<unknown>
<br/>	N.P.x.s	<unknown>
<label	N.P.m.s	<unknown>
>Quantité	N.P.x.s	<unknown>
:	PONCT.W	:
</label>	N.P.m.s	<unknown>
<input	ET	çinput
name="qte	ET	<unknown>
"	PONCT.W	"
type="number	N.C.m.s	typeëenumber
"	PONCT.W	"
size="10	N.C.m.s	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
<br/>	ET	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Devis	VK.m.p	valueëdever
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$qte	A.qual.m.s	<unknown>
=	PONCT.W	=
$_POST["qte	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$prixunit	V.P.3.s	<unknown>
=	PONCT.W	=
$_POST["prix	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0	PRO.card.m.s	@card@
;	PONCT.W	;
...	PONCT.W	<unknown>
.	PONCT.S	.

if	A.qual.m.s	if
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
>=	P+D.def.m.s	çù
100	A.card.m.s	@card@
)	PONCT.W	)
{	P+D.def.m.s	c
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0.10	N.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Vous	N.P.m.s	<unknown>
avez	V.P.2.p	avoir
...	PONCT.W	<unknown>
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
...	PONCT.S	<unknown>
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
if	I	if
...	PONCT.W	<unknown>
elseif	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
•	P	à
Instructions	N.C.f.p	instruction
conditionnelles	A.qual.f.p	conditionnel
if	A.qual.f.p	if
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
–	P	à
Les	D.def.m.p	le
blocs	N.C.m.p	bloc
if	I	if
...	PONCT.S	<unknown>
else	CL.suj.3.f.p	<unknown>
...	PONCT.S	<unknown>
peuvent	V.P.3.p	pouvoir
contenir	VW	contenir
n'	ADV.neg	ne
importe	V.P.3.s	importer
quelle	D.int.f.s	quel
instruction	N.C.f.s	instruction
,	PONCT.W	,
y	CL.obj.3.m.s	y
compris	VK.m.s	comprendre
d'	D.ind.m.p	de
autres	A.ind.m.p	autre
blocs	N.C.m.p	bloc
if	I	if
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
...	PONCT.W	<unknown>
if	N.C.m.s	if
(	PONCT.W	(
condition1	N.C.f.s	<unknown>
)	PONCT.W	)
{	D.card.m.s	{
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
si	ADV.-	si
condition1	N.C.f.s	<unknown>
vraie	A.qual.f.s	vrai
;	PONCT.W	;
}	P+D.def.m.s	c
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
condition2	N.C.f.s	<unknown>
)	PONCT.W	)
{	P+D.def.m.s	c
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
si	ADV.-	si
condition2	N.C.f.s	<unknown>
vraie	A.qual.f.s	vrai
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
si	C.S	si
les	D.def.f.p	le
conditions	N.C.f.p	condition
sont	V.P.3.p	être
fausses	A.qual.f.p	faux
;	PONCT.W	;
}	P	à
<form	ET	fform
name=	ET	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
action="coursPHP-12.php	N.C.f.s	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
...	PONCT.W	<unknown>
<select	N.C.m.s	<unknown>
name="prix">	ET	nameäçprixçë
...	PONCT.W	<unknown>
</select>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
<input	N.C.m.s	<unknown>
type="number	N.C.m.s	typeëenumber
"	PONCT.W	"
...	PONCT.W	<unknown>
name="qte"/>	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Devis	VK.m.p	valueëdever
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$qte	A.qual.m.s	<unknown>
=	PONCT.W	=
$_POST["qte	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$prixunit	V.P.3.s	<unknown>
=	PONCT.W	=
$_POST["prix	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
>=	P+D.def.m.s	çù
100	A.card.m.s	@card@
)	PONCT.W	)
{	P+D.def.m.s	c
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0.10	PRO.card.m.s	@card@
;	PONCT.W	;
}	A.card.m.s	}
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
>=	P+D.def.m.s	çù
50	A.card.m.s	@card@
)	PONCT.W	)
{	P+D.def.m.s	c
$remise	N.C.f.s	<unknown>
=	PONCT.W	=
0.05	A.card.f.s	@card@
;	PONCT.W	;
}	P+D.def.f.p	f
else	PPRO.3.f.s	<unknown>
{	P+D.def.m.s	c
$remise	N.P.f.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
$prix	N.P.m.s	<unknown>
=	V.P.3.s	être
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	N.P.x.s	<unknown>
-	PONCT.W	-
(	PONCT.W	(
$prixunit	N.P.m.s	<unknown>
*	N.C.m.s	*
$qte	N.P.x.s	<unknown>
*	N.C.m.s	*
$remise	N.P.f.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
Prix	N.C.m.s	prix
unitaire	A.qual.m.s	unitaire
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$prixunit	V.P.3.s	<unknown>
</i>	N.P.x.s	<unknown>
,	PONCT.W	,
Quantité	N.C.f.s	quantité
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
$qte	N.P.m.s	<unknown>
</i>	N.P.x.s	<unknown>
,	PONCT.W	,
Remise	N.P.f.s	Remise
:	PONCT.W	:
<i>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$remise*100	N.C.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</i>	D.card.m.p	<unknown>
%	N.C.m.p	%
</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p><i>Total	N.P.m.s	<unknown>
à	P	à
régler	VW	régler
:	PONCT.W	:
</i>	N.P.m.s	<unknown>
<b>	N.P.m.s	<unknown>
$prix	N.P.m.s	<unknown>
</b></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
44	PRO.card.m.p	@card@
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
for	N.C.m.s	for
...	PONCT.W	<unknown>
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.f.s	boucle
:	PONCT.W	:
for	N.C.m.s	for
–	P	à
La	D.def.f.s	le
boucle	A.qual.f.s	boucle
for	N.C.m.s	for
permet	V.P.3.s	permettre
de	P	de
répéter	VW	répéter
(	PONCT.W	(
un	D.ind.m.s	un
certain	A.ind.m.s	certain
nombre	N.C.m.s	nombre
de	P	de
fois	N.C.f.p	foi
)	PONCT.W	)
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
d'	P	de
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
for	A.qual.m.s	for
(	PONCT.W	(
initialisation	N.C.f.s	initialisation
;	PONCT.W	;
condition	N.C.f.s	condition
;	PONCT.W	;
incrémentation	N.C.f.s	incrémentation
)	PONCT.W	)
{	N.C.m.s	{
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
à	P	à
répéter	VW	répéter
;	PONCT.W	;
}	N.C.m.s	}
$i	N.C.m.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
[	PONCT.W	[
i	PONCT.W	i
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
]	PONCT.W	]
echo	N.C.m.s	echo
...	PONCT.W	<unknown>
i++	ADV.-	iuu
[	PONCT.W	[
else	PPRO.3.f.s	<unknown>
]	PONCT.W	]
la	D.def.f.s	le
suite	N.C.f.s	suite
...	PONCT.W	<unknown>
$i++	N.P.m.s	<unknown>
->	A.ind.m.s	-
$i	N.P.m.s	<unknown>
=	V.P.3.s	être
$i	ADV.-	çi
+	P	p
1	D.card.m.s	@card@
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.qual.m.s	ci
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.P.x.s	}
PHP	N.C.m.s	php
:	PONCT.W	:
for	N.C.m.s	for
...	PONCT.W	<unknown>
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.f.s	boucle
:	PONCT.W	:
for	N.C.m.s	for
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
for	A.qual.m.s	for
(	PONCT.W	(
$i	N.C.m.s	çi
=	P	à
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.qual.m.s	ci
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
while	N.C.m.s	while
...	PONCT.W	<unknown>
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
while	N.C.m.s	while
–	P	à
La	D.def.f.s	le
boucle	N.C.f.s	boucle
while	N.C.m.s	while
permet	V.P.3.s	permettre
de	P	de
continuer	VW	continuer
à	P	à
réaliser	VW	réaliser
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
opérations	N.C.f.p	opération
tant	ADV.-	tant
qu'	C.S	que
une	D.ind.f.s	un
condition	N.C.f.s	condition
soit	V.S.3.s	être
vraie	A.qual.f.s	vrai
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
[	PONCT.W	[
i	ADV.-	i
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
]	PONCT.W	]
echo	N.C.m.s	echo
...	PONCT.W	<unknown>
$i	N.C.m.s	çi
=	V.P.3.s	être
$i	ADV.-	çi
+	P	p
1	N.card.m.s	@card@
;	PONCT.W	;
[	PONCT.W	[
else	PPRO.3.f.s	<unknown>
]	PONCT.W	]
la	D.def.f.s	le
suite	N.C.f.s	suite
...	PONCT.W	<unknown>
$i	N.P.m.s	<unknown>
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$i	N.C.f.s	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.qual.m.s	ci
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$i	N.P.m.s	<unknown>
=	V.P.3.s	être
$i	N.C.m.s	çi
+	P	p
1	N.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
PHP	N.C.m.s	php
:	PONCT.W	:
while	N.C.m.s	while
...	PONCT.W	<unknown>
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
while	N.C.m.s	while
On	CL.suj.3.m.s	on
donne	V.P.3.s	donner
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
initiale	A.qual.f.s	initial
à	P	à
la	D.def.f.s	le
variable	N.C.f.s	variable
$i	N.P.f.s	<unknown>
Tant	ADV.-	tant
que	C.S	que
$i	N.P.f.s	<unknown>
ne	ADV.neg	ne
dépasse	V.P.3.s	dépasser
pas	ADV.neg	pas
la	D.def.f.s	le
valeur	N.C.f.s	valeur
6	A.card.f.s	@card@
On	CL.suj.3.m.s	on
met	V.P.3.s	mettre
à	P	à
jour	N.C.m.s	jour
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
$i	N.C.f.s	çi
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$i	A.qual.m.s	ci
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
6	A.card.m.s	@card@
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h$i>	N.P.x.s	<unknown>
Titre	ET	titre
niveau	N.C.m.s	niveau
$i	A.qual.m.s	ci
</h$i>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$i	N.P.m.s	<unknown>
=	V.P.3.s	être
$i	ADV.-	çi
+	P	p
1	N.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
foreach	N.C.m.s	foreach
...	PONCT.W	<unknown>
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.f.s	boucle
:	PONCT.W	:
foreach	N.C.m.s	foreach
–	P	à
La	D.def.f.s	le
boucle	N.C.f.s	boucle
foreach	N.P.m.s	Foreach
permet	V.P.3.s	permettre
de	P	de
répéter	VW	répéter
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
d'	P	de
instructions	N.C.f.p	instruction
pour	P	pour
chaque	D.ind.f.s	chaque
valeur	N.C.f.s	valeur
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
$tableau	A.qual.m.s	<unknown>
[	PONCT.W	[
reste	V.P.3.s	rester
-t-il	CL.suj.3.m.s	il
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
?	PONCT.S	?

]	PONCT.W	]
$titre	N.C.m.s	<unknown>
reçoit	V.P.3.s	recevoir
la	D.def.f.s	le
prochaine	A.qual.f.s	prochain
valeur	N.C.f.s	valeur
echo	A.qual.f.s	echo
...	PONCT.W	<unknown>
[	PONCT.W	[
plus	ADV.-	plus
de	P	de
valeur	N.C.f.s	valeur
dans	P	dans
le	D.def.m.s	le
tableau	N.C.m.s	tableau
]	PONCT.W	]
la	D.def.f.s	le
suite	N.C.f.s	suite
...	PONCT.W	<unknown>
foreach	N.C.m.s	foreach
(	PONCT.W	(
$tableau	N.P.m.s	<unknown>
as	ET	as
$titre	N.C.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<$titre>	N.P.m.s	<unknown>
Titre	N.C.m.s	titre
$titre	N.C.m.s	<unknown>
</$titre>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.P.x.s	}
PHP	N.C.m.s	php
:	PONCT.W	:
foreach	N.C.m.s	foreach
...	PONCT.W	<unknown>
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
foreach	N.P.m.s	Foreach
On	CL.suj.3.m.s	on
définit	V.P.3.s	définir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
Pour	P	pour
chaque	D.ind.f.s	chaque
valeur	N.C.f.s	valeur
dans	P	dans
le	D.def.m.s	le
tableau	N.C.m.s	tableau
<	A.qual.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$tableau	A.qual.m.s	<unknown>
=	PONCT.W	=
array("h1	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h2	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h3	N.C.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h4	ET	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h5	N.C.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
h6	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach	ET	foreach
(	PONCT.W	(
$tableau	N.C.m.s	<unknown>
as	ET	as
$titre	N.C.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<$titre>	N.P.m.s	<unknown>
Titre	N.P.m.s	Titre
$titre	N.C.m.s	<unknown>
</$titre>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
foreach	N.C.m.s	foreach
...	PONCT.W	<unknown>
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
foreach	N.C.m.s	foreach
–	N.P.m.s	–
ça	PRO.dem.m.s	cela
fonctionne	V.P.3.s	fonctionner
aussi	ADV.-	aussi
pour	P	pour
les	D.def.m.p	le
tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
On	CL.suj.3.m.s	on
définit	V.P.3.s	définir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
:	PONCT.W	:
clé	N.C.f.s	clé
=>	N.P.x.s	<unknown>
valeur	N.C.f.s	valeur
Pour	P	pour
chaque	D.ind.m.s	chaque
pair	N.C.m.s	pair
$clé	A.qual.m.s	<unknown>
=>	N.P.x.s	<unknown>
$valeur	N.C.f.s	çvaleur
dans	P	dans
$tableau	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tableau	A.qual.m.s	<unknown>
=	PONCT.W	=
array	N.C.m.s	array
(	PONCT.W	(
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
prenom	N.C.m.s	prenom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
adresse	N.C.f.s	adresse
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
qq	A.card.f.s	<unknown>
part	V.P.3.s	partir
à	P	à
Paris	N.P.m.s	Paris
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach	N.C.m.s	foreach
(	PONCT.W	(
$tableau	N.C.m.s	<unknown>
as	ET	as
$cle=>$valeur	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
$cle	ET	ccle
:	PONCT.W	:
$valeur	N.C.f.s	çvaleur
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
boucles	N.C.m.p	boucle
•	D.card.f.p	•
Instructions	N.C.f.p	instruction
de	P	de
boucle	N.C.m.s	boucle
:	PONCT.W	:
boucles	N.C.f.p	boucle
imbriquées	VK.f.p	imbriquer
–	P	à
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
d'	P	de
imbriquer	VW	imbriquer
des	D.ind.f.p	du
boucles	N.C.f.p	boucle
les	D.def.f.p	le
unes	PRO.ind.f.p	un
dans	P	dans
les	D.def.f.p	le
autres	A.qual.f.p	autre
<table>	N.C.f.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
for	A.qual.m.s	for
(	PONCT.W	(
$lin	N.C.m.s	çlin
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
$lin	N.C.m.s	çlin
<=	P+D.def.m.s	çù
9	A.card.m.s	@card@
;	PONCT.W	;
$lin++	N.C.m.s	çlinui
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<tr>	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
for	N.C.m.s	for
(	PONCT.W	(
$col	N.C.m.s	ccol
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
$col	N.C.m.s	ccol
<=	P+D.def.m.s	çù
9	A.card.m.s	@card@
;	PONCT.W	;
$col++	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

(	PONCT.W	(
$col	N.C.m.s	ccol
*	N.C.m.s	*
$lin	N.C.m.s	çlin
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
</tr>	N.P.f.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.p	}
?	PONCT.S	?

>	P	à
</table>	N.C.m.s	<unknown>
52	D.card.f.p	@card@
Evaluation	N.C.f.p	evaluation
des	P+D.def.m.p	du
Etudiants	N.C.m.p	etudiant
Date	N.P.f.s	Date
Type	N.P.f.s	Type
Description	N.C.f.s	description
Binôme	N.P.m.s	Binôme
S05	N.P.f.s	<unknown>
(	PONCT.W	(
19/02	N.card.f.s	@card@
)	PONCT.W	)
[	PONCT.W	[
DM	N.C.m.p	dm
]	PONCT.W	]
Devoir	N.P.m.s	Devoir
Maison	N.C.f.s	maison
1	A.card.m.s	@card@
mini	N.C.m.s	mini
projet	N.C.m.s	projet
à	P	à
rendre	VW	rendre
par	P	par
mail	N.C.m.s	mail
(	PONCT.W	(
25/02	D.card.m.p	@card@
–	N.C.m.s	–
23h42	A.card.m.s	@card@
)	PONCT.W	)
OUI	N.P.x.s	Oui
S10	PRO.card.m.p	@card@
(	PONCT.W	(
02/04	PRO.card.m.p	@card@
)	PONCT.W	)
[	PONCT.W	[
DST	N.P.m.s	Dst
]	PONCT.W	]
Devoir	VW	devoir
sur	P	sur
Table	N.P.m.s	Table
1	D.card.m.s	@card@
examen	N.C.m.s	examen
écrit	VK.m.s	écrire
sans	P	sans
document	N.C.m.s	document
ni	C.C	ni
machine	N.C.f.s	machine
NON	N.P.f.s	Non
50	D.card.m.p	@card@
%	N.C.m.p	%
S12	N.P.f.s	St2
(	PONCT.W	(
16/04	N.card.f.s	@card@
)	PONCT.W	)
[	PONCT.W	[
PROJ	N.P.m.s	Proj
]	PONCT.W	]
Projet	N.P.m.s	Projet
Présentation	N.C.f.s	présentation
du	P+D.def.m.s	du
projet	N.C.m.s	projet
OUI	A.card.m.s	OuI
mai	N.C.m.s	mai
Partiel	N.P.m.s	Partiel
1	D.card.m.s	@card@
examen	N.C.m.s	examen
écrit	V.P.3.s	écrire
sans	P	sans
document	N.C.m.s	document
ni	C.C	ni
machine	N.C.f.s	machine
NON	N.P.f.s	Non
50	D.card.m.p	@card@
%	N.C.m.p	%
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
•	P	à
Fonctions	N.C.f.p	fonction
–	P	à
PHP	N.P.m.s	Php
offre	V.P.3.s	offrir
une	D.ind.f.s	un
large	A.qual.f.s	large
panoplie	N.C.f.s	panoplie
de	P	de
fonctions	N.C.f.p	fonction
•	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
isset($var)	N.C.m.s	issetçëvarç
à	P	à
TRUE	N.P.x.s	True
si	C.S	si
$var	N.P.x.s	<unknown>
a	V.P.3.s	avoir
été	VK.m.s	être
déclarée	VK.f.s	déclarer
•	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
empty($var)	N.C.m.s	emptyçüvarà
à	P	à
TRUE	N.P.x.s	True
si	C.S	si
$var	N.P.x.s	<unknown>
est	V.P.3.s	être
vide	A.qual.m.s	vide
(	PONCT.W	(
ou	C.C	ou
vaut	V.P.3.s	valoir
0	N.card.m.s	@card@
)	PONCT.W	)
–	C.S	–
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
écrire	VW	écrire
les	D.def.m.p	le
nôtres	PRO.poss.m.p	nôtre
(	PONCT.W	(
même	ADV.-	même
en	P	en
dehors	N.C.m.p	dehors
des	P+D.def.f.p	du
classes	N.C.f.p	classe
)	PONCT.W	)
•	P	à
function	N.C.f.s	function
nomFonction	N.C.f.s	nomfonction
(	PONCT.W	(
$paramètre	N.C.m.s	çparamètre
,	PONCT.W	,
...	PONCT.W	<unknown>
)	PONCT.W	)
{	P	à
instructions	N.C.f.p	instruction
}	P	à
function	N.C.f.s	function
salutation	N.C.f.s	salutation
(	PONCT.W	(
$nom	N.C.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<h1>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p	P	àp
class=droite>Aujourd'hui	N.C.m.s	class-droite-aujourd'hu
,	PONCT.W	,
nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
le	D.def.m.s	le
"	PONCT.W	"
.date('d	N.C.m.s	edete-ded
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
PHP	N.C.m.s	php
...	PONCT.W	<unknown>
<form	ET	fform
name=	N.C.m.s	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
action="coursPHP-15.php	ET	<unknown>
"	PONCT.W	"
>	A.ind.m.s	>
<label	N.C.m.s	çlabel
>Nom	N.P.m.s	<unknown>
:	PONCT.W	:
</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="client	ET	nameçclient
"	PONCT.W	"
size="25"/>	N.C.m.p	<unknown>
...	PONCT.W	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="OK	N.C.f.s	valueççok
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
function	N.C.f.s	function
salutation	N.C.f.s	salutation
(	PONCT.W	(
$nom	N.C.m.s	<unknown>
)	PONCT.W	)
{	P	à
date_default_timezone_set("Europe/Paris")	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<h1>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	N.C.m.s	echo
"	PONCT.W	"
<p	P	àp
class=droite>Aujourd'hui	N.C.m.s	class-droite-aujourd'hu
...	PONCT.W	<unknown>
"	PONCT.W	"
.	PONCT.S	.

date('d	ADV.-	dateë'd
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
if	ET	if
(	PONCT.W	(
isset	N.C.m.s	isset
(	PONCT.W	(
$_POST["client	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
AND	I	and
!	PONCT.S	!

empty	ET	empty
(	PONCT.W	(
$_POST["client	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	P	à
salutation	N.C.f.s	salutation
(	PONCT.W	(
$_POST["client	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
salutation	N.C.f.s	salutation
(	PONCT.W	(
"	PONCT.W	"
cher	A.qual.m.s	cher
client	N.C.m.s	client
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Visibilité	N.C.f.s	visibilité
des	P+D.def.f.p	du
variables	N.C.f.p	variable
En	P	en
PHP	N.P.m.s	Php
il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
3	D.card.m.p	@card@
niveaux	N.C.m.p	niveau
de	P	de
visibilité	N.C.f.s	visibilité
d'	P	de
une	D.ind.f.s	un
variables	N.C.f.s	variable
selon	P	selon
le	D.def.m.s	le
contexte	N.C.m.s	contexte
:	PONCT.W	:
•	N.C.m.s	•
Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
:	PONCT.W	:
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
disponibles	A.qual.f.p	disponible
n'	ADV.neg	ne
importe	V.P.3.s	importer
où	PRO.rel.f.s	où
dans	P	dans
le	D.def.m.s	le
programme	N.C.m.s	programme
.	PONCT.S	.

•	P	à
Les	D.def.f.p	le
variables	N.C.f.p	variable
globales	A.qual.f.p	global
:	PONCT.W	:
ce	CL.suj.3.m.s	ce
sont	V.P.3.p	être
toutes	A.ind.f.p	tout
les	D.def.f.p	le
variables	N.C.f.p	variable
,	PONCT.W	,
tableaux	N.C.m.p	tableau
,	PONCT.W	,
objets	N.C.m.p	objet
et	C.C	et
constantes	A.qual.f.p	constant
que	C.S	que
nous	CL.suj.1.m.p	nous
créons	V.P.1.p	créer
nous	PPRO.1.m.p	nous
-même	CL.refl.1.m.p	même
dans	P	dans
le	D.def.m.s	le
programme	N.C.m.s	programme
principal	A.qual.m.s	principal
.	PONCT.S	.

elles	CL.suj.3.f.p	elle
ne	ADV.neg	ne
sont	V.P.3.p	être
généralement	ADV.-	généralement
visibles	A.qual.f.p	visible
que	ADV.neg	que
dans	P	dans
le	D.def.m.s	le
programme	N.C.m.s	programme
principal	A.qual.m.s	principal
.	PONCT.S	.

•	P	à
Les	D.def.f.p	le
variables	N.C.f.p	variable
locales	A.qual.f.p	local
:	PONCT.W	:
ce	CL.suj.3.m.s	ce
sont	V.P.3.p	être
toutes	A.ind.f.p	tout
les	D.def.f.p	le
variables	N.C.f.p	variable
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
(	PONCT.W	(
paramètres	N.C.m.p	paramètre
compris	A.qual.m.p	compris
)	PONCT.W	)
.	PONCT.S	.

Leur	D.poss.f.s	leur
visibilité	N.C.f.s	visibilité
n'	ADV.neg	ne
est	V.P.3.s	être
que	ADV.neg	que
locale	A.qual.f.s	local
,	PONCT.W	,
et	C.C	et
le	D.def.m.s	le
programme	N.C.m.s	programme
principal	A.qual.m.s	principal
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
pas	ADV.neg	pas
agir	VW	agir
sur	P	sur
ces	D.dem.f.p	ce
variables	N.C.f.p	variable
.	PONCT.S	.

Portée	VK.f.s	porter
des	P+D.def.f.p	du
variables	N.C.f.p	variable
globales	A.qual.f.p	global
•	P	à
En	P	en
PHP	N.P.m.s	Php
,	PONCT.W	,
une	D.ind.f.s	un
variable	N.C.f.s	variable
globale	A.qual.f.s	global
peut	V.P.3.s	pouvoir
être	VW	être
utilisée	VK.f.s	utiliser
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
sans	P	sans
la	CL.obj.3.f.s	la
passer	VW	passer
en	P	en
paramètre	N.C.m.s	paramètre
–	P	à
Usage	N.P.m.s	Usage
du	P+D.def.m.s	du
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	N.C.m.s	«
global	A.qual.m.s	global
»	N.C.m.s	»
–	P	à
La	D.def.f.s	le
variable	N.C.f.s	variable
doit	V.P.3.s	devoir
être	VW	être
déclarée	VK.f.s	déclarer
avec	P	avec
«	N.C.m.s	«
global	A.qual.m.s	global
»	N.C.m.s	»
dans	P	dans
chaque	D.ind.f.s	chaque
fonction	N.C.f.s	fonction
où	PRO.rel.f.s	où
cela	PRO.dem.m.s	cela
est	V.P.3.s	être
nécessaire	A.qual.f.s	nécessaire
Portée	VK.f.s	porter
des	P+D.def.f.p	du
variables	N.C.f.p	variable
globales	A.qual.f.p	global
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$a	N.P.x.s	<unknown>
=	P	à
1	A.card.m.s	@card@
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
2	N.card.m.s	@card@
;	PONCT.W	;
function	N.C.f.s	function
somme()	N.C.m.s	sommeçà
{	P	à
global	A.qual.m.s	global
$a	N.P.m.s	<unknown>
,	PONCT.W	,
$b	N.C.m.s	bb
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
$a	N.P.x.s	<unknown>
$b	N.C.m.s	bb
;	PONCT.W	;
echo	ET	echo
«	N.C.m.s	«
»	N.C.m.s	»
.$b	N.C.m.s	<unknown>
;	PONCT.W	;
}	P	à
somme()	N.C.m.s	sommeçà
;	PONCT.W	;
somme()	N.C.m.s	sommeçà
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
On	CL.suj.3.m.s	on
a	V.P.3.s	avoir
déclaré	VK.m.s	déclarer
$a	N.P.m.s	<unknown>
et	C.C	et
$b	N.C.m.s	bb
avec	P	avec
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	N.C.m.s	«
global	A.qual.m.s	global
»	N.C.m.s	»
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
somme	N.C.f.s	somme
pour	P	pour
qu'	C.S	que
elles	CL.suj.3.f.p	elle
soient	V.S.3.p	être
manipulées	VK.f.p	manipuler
par	P	par
celle	PRO.dem.f.s	celui
-ci	ADV.-	-ci
.	PONCT.S	.

Portée	VK.f.s	porter
des	P+D.def.f.p	du
variables	N.C.f.p	variable
globales	A.qual.f.p	global
•	P	à
Une	D.ind.f.s	un
autre	A.qual.f.s	autre
méthode	N.C.f.s	méthode
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
variables	N.C.f.p	variable
globales	A.qual.f.p	global
est	V.P.3.s	être
d'	P	de
utiliser	VW	utiliser
la	D.def.f.s	le
superglobale	A.qual.f.s	superglobal
$GLOBALS	N.P.x.s	<unknown>
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$a	N.P.x.s	<unknown>
=	P	à
1	A.card.m.s	@card@
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
2	N.card.m.s	@card@
;	PONCT.W	;
function	N.C.f.s	function
somme()	N.C.m.s	sommeçà
{	P+D.def.m.s	c
$GLOBALS['b	N.P.m.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
=	PONCT.W	=
$GLOBALS['a	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
$GLOBALS['b	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
$GLOBALS['b	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	N.C.m.s	>
Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
•	A.qual.f.p	•
Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
sont	V.P.3.p	être
générées	VK.f.p	générer
automatiquement	ADV.-	automatiquement
par	P	par
PHP	N.P.m.s	Php
:	PONCT.W	:
–	C.S	–
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
disponibles	A.qual.f.p	disponible
quel	A.int.m.s	quel
que	PRO.rel.m.s	que
soit	V.S.3.s	être
le	D.def.m.s	le
contexte	N.C.m.s	contexte
du	P+D.def.m.s	du
script	N.C.m.s	script
(	PONCT.W	(
même	ADV.-	même
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
sans	P	sans
être	VW	être
passées	VK.f.p	passer
en	P	en
paramètre	N.C.m.s	paramètre
de	P	de
celle	PRO.dem.f.s	celui
-ci	ADV.-	-ci
)	PONCT.W	)
–	C.S	–
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
écrites	VK.f.p	écrire
en	P	en
majuscules	N.C.m.p	majuscule
et	C.C	et
commencent	V.P.3.p	commencer
,	PONCT.W	,
par	P	par
un	D.ind.m.s	un
underscore	N.C.m.s	underscore
«	P	à
_	N.C.m.s	_
»	N.C.m.s	»
–	C.S	–
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
généralement	ADV.-	généralement
des	D.ind.m.p	du
tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
•	P	à
$GLOBALS	N.P.x.s	<unknown>
:	PONCT.W	:
rassemble	N.C.m.s	rassemble
les	D.def.f.p	le
variables	N.C.f.p	variable
globales	A.qual.f.p	global
.	PONCT.S	.

•	P	à
$_ENV	N.C.m.s	<unknown>
:	PONCT.W	:
ce	CL.suj.3.m.s	ce
sont	V.P.3.p	être
des	D.ind.f.p	du
variables	N.C.f.p	variable
d'	P	de
environnement	N.C.m.s	environnement
toujours	ADV.-	toujours
données	VK.f.p	donner
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
.	PONCT.S	.

•	P	à
$_SESSION	N.C.f.s	çäsession
:	PONCT.W	:
se	CL.refl.3.f.p	se
sont	V.P.3.p	être
des	D.ind.f.p	du
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
.	PONCT.S	.

Ces	D.dem.f.p	ce
variables	N.C.f.p	variable
restent	V.P.3.p	rester
stockées	VK.f.p	stocker
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
le	D.def.m.s	le
temps	N.C.m.s	temps
de	P	de
la	D.def.f.s	le
présence	N.C.f.s	présence
d'	P	de
un	D.ind.m.s	un
visiteur	N.C.m.s	visiteur
.	PONCT.S	.

•	P	à
$_COOKIE	N.C.m.s	cocookie
:	PONCT.W	:
contient	V.P.3.s	contenir
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
des	P+D.def.f.p	du
cookies	N.C.f.p	cookie
enregistrés	VK.m.p	enregistrer
sur	P	sur
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
du	P+D.def.m.s	du
visiteur	N.C.m.s	visiteur
.	PONCT.S	.

•	P	à
$_GET	N.C.m.s	<unknown>
:	PONCT.W	:
contient	V.P.3.s	contenir
les	D.def.f.p	le
données	N.C.f.p	donnée
envoyées	VK.f.p	envoyer
en	P	en
paramètres	N.C.m.p	paramètre
dans	P	dans
l'	D.def.m.s	le
URL	N.P.f.s	Url
.	PONCT.S	.

•	P	à
$_POST	N.P.m.s	<unknown>
:	PONCT.W	:
contient	V.P.3.s	contenir
les	D.def.f.p	le
informations	N.C.f.p	information
qui	PRO.rel.f.p	qui
viennent	V.P.3.p	venir
d'	P	de
être	VW	être
envoyées	VK.f.p	envoyer
par	P	par
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
.	PONCT.S	.

Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
<html><head>	N.P.m.s	<unknown>
<title>La	N.P.m.s	<unknown>
variable	A.qual.m.s	variable
$_SERVER</title>	N.P.x.s	<unknown>
</head><body>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
en	P	en
cours	N.C.m.s	cours
d\'execution	N.C.f.s	d-'execution
'	PONCT.W	'
.	PONCT.S	.

'	PONCT.W	'
a	V.P.3.s	avoir
partir	VW	partir
de	P	de
la	D.def.f.s	le
racine	N.C.f.s	racine
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_SERVER['PHP_SELF	N.P.m.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
<br/>	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
echo	N.C.m.s	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
de	P	de
la	D.def.f.s	le
racine	N.C.f.s	racine
du	P+D.def.m.s	du
script	N.C.m.s	script
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_SERVER['DOCUMENT_ROOT	N.C.f.s	cyserverçecument
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
<br/>	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
echo	N.C.m.s	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
du	P+D.def.m.s	du
client	N.C.m.s	client
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_SERVER['HTTP_USER_AGENT	N.C.m.s	phserverç'ptpusert
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

'	PONCT.W	'
<br>	N.C.m.s	çbrà
'	PONCT.W	'
;	PONCT.W	;
echo	N.C.m.s	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
qui	PRO.rel.m.s	qui
execute	V.P.3.s	executer
le	D.def.m.s	le
script	N.C.m.s	script
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_SERVER['SERVER_NAME	N.P.f.s	Éververç'Serçeme
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
<br/><br/>	N.P.x.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
Votre	D.poss.f.s	votre
adresse	N.C.f.s	adresse
IP	N.P.x.s	Ip
est	V.P.3.s	être
:	PONCT.W	:
'	ADV.-	'
.	PONCT.S	.

$_SERVER['REMOTE_ADDR	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</body></html>	N.P.x.s	<unknown>
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
PHP	N.P.m.s	Php
(	PONCT.W	(
serveur	N.C.m.s	serveur
)	PONCT.W	)
–	N.C.m.s	–
===	N.C.m.s	çäë
,	PONCT.W	,
isset	N.C.m.s	isset
,	PONCT.W	,
empty	N.C.m.s	empty
,	PONCT.W	,
is_nul	N.C.m.s	isänul
–	P	à
include	N.C.m.s	include
,	PONCT.W	,
require	VW	require
,	PONCT.W	,
include_once	N.C.f.s	includeçonce
,	PONCT.W	,
require_once	N.C.f.s	requireçonce
–	N.C.m.s	–
...	PONCT.W	<unknown>
•	P	à
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
(	PONCT.W	(
client	N.C.m.s	client
)	PONCT.W	)
–	P+D.def.m.s	c
header()	N.C.m.s	headerçë
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
<	P	à
?	PONCT.S	?

php	N.C.m.s	<unknown>
$var1	N.P.m.s	<unknown>
=	PONCT.W	=
42	N.card.m.s	@card@
;	PONCT.W	;
$var2	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
42	N.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
$var3	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
42	D.card.m.p	@card@
"	PONCT.W	"
;	PONCT.W	;
$var4	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
42	D.card.m.p	@card@
"	PONCT.W	"
;	PONCT.W	;
echo(($var1	N.C.m.s	<unknown>
==	V.P.3.s	cevoir
$var2)."#	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo(($var1	N.C.m.s	<unknown>
==	PONCT.W	<unknown>
$var3)."#	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo(($var1	N.C.m.s	<unknown>
==	V.P.3.s	cevoir
$var4)."#	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo(($var1	N.C.m.s	<unknown>
===	ET	çùë
$var2)."#	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo(($var1	N.C.m.s	<unknown>
===	ET	çùë
$var3)."#	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo(($var2	N.C.m.s	<unknown>
==	V.P.3.s	cevoir
$var3)."#	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
faiblement	ADV.-	faiblement
typé	A.qual.m.s	typé
:	PONCT.W	:
==	PRO.rel.m.s	çù
compare	V.P.3.s	comparer
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
===	P	çùà
compare	D.card.f.p	compare
valeurs	N.C.f.p	valeur
ET	C.C	et
types	N.C.m.p	type
TRUE	N.P.f.s	True
==	P+D.def.f.p	çù
1	D.card.m.s	@card@
FALSE	N.P.m.s	False
==	V.P.3.s	cevoir
0	D.card.m.s	@card@
1#	A.card.m.s	1à
1#	A.card.m.s	1à
1#	A.card.m.s	1à
#	N.C.m.p	#
#	N.C.m.s	#
#	N.C.m.s	#
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
Importation	N.C.f.s	importation
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
•	P	à
Incorporer	VW	incorporer
le	D.def.m.s	le
contenu	N.C.m.s	contenu
d'	P	de
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
dans	P	dans
une	D.ind.f.s	un
page	N.C.f.s	page
PHP	N.P.m.s	Php
•	N.C.m.s	•
But	N.P.m.s	But
:	PONCT.W	:
réutilisation	N.C.f.s	réutilisation
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
,	PONCT.W	,
uniformisation	N.C.f.s	uniformisation
du	P+D.def.m.s	du
site	N.C.m.s	site
–	P	à
include	N.C.m.s	include
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
et	C.C	et
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
•	N.C.m.s	•
include	N.C.m.s	include
remplace	V.P.3.s	remplacer
la	D.def.f.s	le
ligne	N.C.f.s	ligne
par	P	par
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
•	P	à
include_once	N.P.x.s	<unknown>
fait	V.P.3.s	faire
ça	PRO.dem.m.s	cela
une	D.ind.f.s	un
seule	A.ind.f.s	seul
fois	N.C.f.s	foi
(	PONCT.W	(
même	ADV.-	même
dans	P	dans
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
)	PONCT.W	)
–	P	à
require	VW	require
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
et	C.C	et
require_once	N.C.m.s	requireçonce
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
•	N.C.m.s	•
idem	N.C.m.s	idem
include	V.P.3.s	includer
,	PONCT.W	,
mais	C.C	mais
si	C.S	si
le	D.def.m.s	le
fichier	N.C.m.s	fichier
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
,	PONCT.W	,
on	CL.suj.3.m.s	on
a	V.P.3.s	avoir
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
<meta	N.P.m.s	<unknown>
charset="UTF-8	N.C.m.s	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
...	PONCT.W	<unknown>
<title>Mon	N.P.m.s	<unknown>
site</title>	A.ind.m.s	<unknown>
<link	N.P.m.s	<unknown>
rel="stylesheet	ET	<unknown>
"	PONCT.W	"
href="css/blocs.css	N.C.m.p	<unknown>
"	PONCT.W	"
/>	P	àà
<header>	N.P.m.s	<unknown>
<h1>Mon	N.P.m.s	<unknown>
site</h1>	N.C.m.p	<unknown>
</header>	N.P.x.s	<unknown>
<nav>	N.P.m.s	<unknown>
<h2>Exemples	N.C.m.p	çhcexemple
</h2>	N.P.x.s	<unknown>
<ul>	N.P.x.s	<unknown>
<li>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</li>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
</ul>	N.P.m.s	<unknown>
</nav>	N.P.x.s	<unknown>
<head>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
head.html	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
require	VW	require
"	PONCT.W	"
mesfonctions.php	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
headerNav.html	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
...	PONCT.S	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
salutation	N.C.f.s	salutation
(	PONCT.W	(
"	PONCT.W	"
cher	A.qual.m.s	cher
client	N.C.m.s	client
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<article>	N.C.m.s	<unknown>
<h2>	N.P.x.s	<unknown>
News	N.P.m.s	News
</h2>	ET	<unknown>
<p>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
</p>	N.C.m.s	<unknown>
</article>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
function	N.C.f.s	function
salutation	N.C.f.s	salutation
(	PONCT.W	(
$nom	N.C.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<p	N.C.f.s	<unknown>
class=droite><b>Bienvenue	VK.f.s	class-droiteçbienvenir
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
!	PONCT.S	!

</b></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p	P	àp
class=droite>Aujourd'hui	N.C.m.s	class-droite-aujourd'hu
,	PONCT.W	,
nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
le	D.def.m.s	le
"	PONCT.W	"
.date('d	N.C.m.s	edete-ded
/	PONCT.W	@card@
m	N.C.m.s	m
/	PONCT.W	@card@
Y	ET	y
'	PONCT.W	'
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.P.m.s	Php
include_once	N.C.f.s	includeçonce
"	PONCT.W	"
head.html	ET	<unknown>
"	PONCT.W	"
include_once	ET	includeçonce
"	PONCT.W	"
headerNav.html	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
require	VW	require
"	PONCT.W	"
mesfonctions.php	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
salutation	N.C.f.s	salutation
(	PONCT.W	(
"	PONCT.W	"
cher	A.qual.m.s	cher
client	N.C.m.s	client
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
<head>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
<title>Mon	N.P.m.s	<unknown>
site</title>	A.ind.m.s	<unknown>
<link	N.P.m.s	<unknown>
rel="stylesheet	ET	<unknown>
"	PONCT.W	"
href="css/blocs.css	N.C.m.p	<unknown>
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<header>	N.P.m.s	<unknown>
<h1>Mon	N.P.m.s	<unknown>
site</h1>	N.P.x.s	<unknown>
</header>	N.P.m.s	<unknown>
<nav>	N.P.m.s	<unknown>
<h2>Exemples	N.C.m.p	çhcexemple
</h2>	ET	<unknown>
<ul>	N.P.x.s	<unknown>
<li>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</li>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</ul>	N.P.f.s	<unknown>
</nav>	N.P.x.s	<unknown>
<section>	N.C.f.s	<unknown>
<p	P	àp
class=droite><b>Bienvenue	VK.f.s	class-droiteçbienvenir
,	PONCT.W	,
cher	A.qual.m.s	cher
client	N.C.m.s	client
!	PONCT.S	!

</b></p><p	N.P.x.s	<unknown>
class=droite>Aujourd'hui	ADV.-	class-droite-aujourd'hi
,	PONCT.W	,
nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
le	D.def.m.s	le
22/	A.card.m.s	@card@
03	A.card.m.s	@card@
/	C.C	@card@
2014	D.card.m.p	@card@
</p>	N.C.m.p	<unknown>
...	PONCT.W	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
gettype($var)	N.P.x.s	Gettypeëçvarù
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
•	P+D.def.m.s	c
addslashes()	N.C.m.s	<unknown>
:	PONCT.W	:
ajoute	V.P.3.s	ajouter
des	P+D.def.m.p	du
antislashs	N.C.m.p	antislash
devant	P	devant
les	D.def.m.p	le
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
$res	A.qual.m.p	<unknown>
=	PONCT.W	=
addslashes("L'a")	N.C.m.s	addslashesçalç
;	PONCT.W	;
//	PONCT.W	@card@
retourne	V.P.3.s	retourner
L\’a	N.P.f.s	Làça
.	PONCT.S	.

•	P	à
strstr(texte	N.C.m.s	<unknown>
,	PONCT.W	,
chaineAchercher	N.C.m.s	chaineachercher
)	PONCT.W	)
:	PONCT.W	:
trouve	V.P.3.s	trouver
la	D.def.f.s	le
première	A.ord.f.s	premier
occurrence	N.C.f.s	occurrence
dans	P	dans
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
$email	N.P.m.s	<unknown>
=	PONCT.W	=
'	PONCT.W	'
name@example.com	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
$domain	N.C.m.s	<unknown>
=	PONCT.W	=
strstr($email	N.C.m.s	<unknown>
,	PONCT.W	,
'	PONCT.W	'
@	N.C.m.s	@
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
$domain	N.P.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
Affiche	N.P.m.s	Affiche
:	PONCT.W	:
@example.com	N.P.x.s	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
htmlspecialchars	N.C.m.p	<unknown>
(	PONCT.W	(
chaine	N.C.f.s	chaine
,	PONCT.W	,
flags	N.C.m.p	flag
)	PONCT.W	)
:	PONCT.W	:
Conversion	N.C.f.s	conversion
des	P+D.def.m.p	du
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
en	P	en
entités	N.C.f.p	entité
HTML	N.P.m.s	<unknown>
.	PONCT.S	.

Remplace	N.C.f.s	remplace
par	P	par
exemple	N.C.m.s	exemple
&	PONCT.W	&
(	PONCT.W	(
ET	C.C	et
commercial	A.qual.m.s	commercial
)	PONCT.W	)
en	P	en
&amp	N.C.m.s	çamp
;	PONCT.W	;
Un	D.ind.m.s	un
exemple	N.C.m.s	exemple
de	P	de
flag	N.C.m.s	flag
est	V.P.3.s	être
ENT_QUOTES	N.P.x.s	Entçquotes
qui	PRO.rel.m.s	qui
Convertit	V.P.3.s	convertir
les	D.def.m.p	le
guillemets	N.C.m.p	guillemet
doubles	A.qual.m.p	double
et	C.C	et
les	D.def.m.p	le
guillemets	N.C.m.p	guillemet
simples	A.qual.m.p	simple
.	PONCT.S	.

$str	VW	<unknown>
=	PONCT.W	=
"	PONCT.W	"
This	N.P.m.s	This
is	CL.suj.3.m.p	is
some	V.P.3.s	somer
<b>	ET	çbë
bold	ET	bold
</b>	ET	çmbë
text	N.C.m.s	text
.	PONCT.W	.
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
htmlspecialchars($str)	A.qual.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
affichera	V.F.3.s	afficher
:	PONCT.W	:
This	N.P.m.s	This
is	CL.suj.3.m.p	is
some	N.C.m.p	some
&lt	N.card.m.s	<unknown>
;	PONCT.W	;
b&gt	N.C.m.s	bc
;	PONCT.W	;
bold	ET	bold
&lt	N.C.m.s	çlt
;	PONCT.W	;
/b&gt	N.C.m.p	<unknown>
;	PONCT.W	;
text	N.C.m.s	text
.	PONCT.S	.

PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
strip_tags	N.C.m.p	stripçtag
(	PONCT.W	(
chaine	N.C.f.s	chaine
,	PONCT.W	,
allowableTags	N.C.m.p	allowabletag
)	PONCT.W	)
:	PONCT.W	:
Supprime	N.C.f.s	supprime
les	D.def.f.p	le
balises	N.C.f.p	balise
HTML	N.P.m.s	<unknown>
et	C.C	et
PHP	N.P.m.s	Php
d'	P	de
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
.	PONCT.S	.

Les	D.def.m.p	le
commentaires	N.C.m.p	commentaire
HTML	N.P.m.s	<unknown>
et	C.C	et
PHP	N.P.m.s	Php
sont	V.P.3.p	être
également	ADV.-	également
supprimés	VK.m.p	supprimer
Ce	D.dem.m.s	ce
comportement	N.C.m.s	comportement
peut	V.P.3.s	pouvoir
être	VW	être
modifié	VK.m.s	modifier
avec	P	avec
le	D.def.m.s	le
paramètre	N.C.m.s	paramètre
allowableTags	N.C.m.p	allowabletag
$text	N.P.x.s	<unknown>
=	P	à
‘	P	à
<p>Paragraph.</p><	N.P.x.s	<unknown>
!	PONCT.S	!

--	PONCT.W	--
Comment	ADV.int	comment
--	PONCT.W	--
><a	ET	çha
href="#fragment">Other	ET	hrefçäëfragmenther
text</a>	A.ind.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
//	PONCT.W	@card@
Autorise	V.P.3.s	autoriser
<p>	N.P.f.s	<unknown>
et	C.C	et
<a>	ET	çaë
echo	ET	echo
strip_tags($text	N.P.x.s	Strip-tagsçëtext
,	PONCT.W	,
'	PONCT.W	'
<p><a>	N.P.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
affichera	V.F.3.s	afficher
:	PONCT.W	:
//	PONCT.W	@card@
<p>Paragraph.</p>	N.P.x.s	<unknown>
<a	N.P.x.s	<unknown>
href="#fragment">Other	ET	hrefçäëfragmenther
text</a>	N.P.x.s	Textüéaë
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
strlen()	N.C.m.s	<unknown>
:	PONCT.W	:
retourne	V.P.3.s	retourner
la	D.def.f.s	le
longueur	N.C.f.s	longueur
de	P	de
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
•	P	à
strtolower()	N.C.m.s	<unknown>
:	PONCT.W	:
passe	V.P.3.s	passer
tous	A.ind.m.p	tous
les	D.def.m.p	le
caractères	N.C.m.p	caractère
en	P	en
minuscules	N.C.m.p	minuscule
•	P	à
strtoupper()	N.C.m.s	<unknown>
:	PONCT.W	:
passe	V.P.3.s	passer
tous	A.ind.m.p	tous
les	D.def.m.p	le
caractères	N.C.m.p	caractère
en	P	en
majuscules	N.C.m.p	majuscule
•	P	à
strpos(texte	N.C.m.s	<unknown>
,	PONCT.W	,
chaine	N.C.f.s	chaine
)	PONCT.W	)
:	PONCT.W	:
recherche	V.P.3.s	rechercher
la	D.def.f.s	le
position	N.C.f.s	position
de	P	de
la	D.def.f.s	le
première	A.ord.f.s	premier
«	N.C.f.s	«
chaine	N.C.f.s	chaine
»	P	à
trouvée	VK.f.s	trouver
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
trim()	N.C.m.s	trimçë
:	PONCT.W	:
efface	N.C.f.s	efface
les	D.def.m.p	le
espaces	N.C.m.p	espace
blancs	A.qual.m.p	blanc
au	P+D.def.m.s	au
début	N.C.m.s	début
et	C.C	et
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
d'	P	de
une	D.ind.f.s	un
chaine	N.C.f.s	chaine
•	P	à
ereg(chaine	A.qual.f.s	eregüchain
,	PONCT.W	,
texte	N.C.m.s	texte
)	PONCT.W	)
:	PONCT.W	:
recherche	N.C.f.s	recherche
dans	P	dans
texte	N.C.m.s	texte
,	PONCT.W	,
les	D.def.f.p	le
séquences	N.C.f.p	séquence
des	P+D.def.m.p	du
caractères	N.C.m.p	caractère
«	P	à
chaine	N.C.f.s	chaine
»	N.C.m.s	»
.	PONCT.S	.

Retourne	V.P.3.s	retourner
la	D.def.f.s	le
longueur	N.C.f.s	longueur
de	P	de
l'	D.def.f.s	le
occurrence	N.C.f.s	occurrence
trouvée	VK.f.s	trouver
si	C.S	si
une	D.ind.f.s	un
occurrence	N.C.f.s	occurrence
a	V.P.3.s	avoir
été	VK.m.s	être
trouvée	VK.f.s	trouver
dans	P	dans
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
string	A.qual.f.s	string
,	PONCT.W	,
FALSE	N.P.x.s	False
dans	P	dans
le	D.def.m.s	le
cas	N.C.m.s	cas
contraire	A.qual.m.s	contraire
ou	C.C	ou
si	C.S	si
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
est	V.P.3.s	être
survenue	VK.f.s	survenir
.	PONCT.S	.

if	ET	if
(	PONCT.W	(
ereg("BCD	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
ABCDEF	N.P.m.s	Abcdef
"	PONCT.W	"
)	PONCT.W	)
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
oui	I	oui
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
non	ADV.-	non
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
isset($var1	N.P.x.s	<unknown>
,	PONCT.W	,
$var2	N.P.m.s	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
)	PONCT.W	)
:	PONCT.W	:
Détermine	N.P.f.s	Détermine
si	C.S	si
une	D.ind.f.s	un
variable	N.C.f.s	variable
ou	C.C	ou
plusieurs	PRO.ind.f.p	plusieurs
sont	V.P.3.p	être
définies	VK.f.p	définir
et	C.C	et
sont	V.P.3.p	être
différentes	A.qual.f.p	différent
de	P	de
NULL	N.P.f.s	Null
•	P	à
unset($var1,$var2	N.P.x.s	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
)	PONCT.W	)
:	PONCT.W	:
Détruit	VK.m.s	détruire
les	D.def.f.p	le
variables	N.C.f.p	variable
•	P+D.def.m.s	c
empty($var)	N.C.m.s	emptyçüvarà
:	PONCT.W	:
Détermine	N.C.f.s	détermine
si	C.S	si
une	D.ind.f.s	un
variable	N.C.f.s	variable
est	V.P.3.s	être
vide	A.qual.f.s	vide
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
Une	D.ind.f.s	un
variable	N.C.f.s	variable
non	ADV.neg	non
déclarée	VK.f.s	déclarer
et	C.C	et
une	D.ind.f.s	un
variable	N.C.f.s	variable
vide	A.qual.f.s	vide
ne	ADV.neg	ne
sont	V.P.3.p	être
pas	ADV.neg	pas
pareilles	A.qual.f.p	pareil
...	PONCT.S	<unknown>
FALSE	N.P.m.s	False
=	P	à
0	D.card.m.s	@card@
TRUE	N.P.f.s	True
=	V.P.3.s	être
1	D.card.m.s	@card@
-1	N.card.m.s	@card@
1-	D.card.m.s	@card@
1-1	A.card.m.s	@card@
-1	PONCT.W	@card@
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
echo(isset($var)	A.qual.m.s	echoëissetçüvarç
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
<br>	ET	çbrà
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$var	N.P.x.s	<unknown>
=	V.P.3.s	être
42	PRO.card.m.p	@card@
;	PONCT.W	;
echo(isset($var)	N.C.m.s	echoëissetççvarç
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
<br>	ET	çbrà
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$var	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
"	PONCT.W	"
;	PONCT.W	;
echo(isset($var)	N.C.m.s	echoëissetççvarç
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
<br>	N.C.m.s	çbrà
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
unset($var)	N.C.m.s	unsetççvarà
;	PONCT.W	;
echo(isset($var)	N.C.m.s	echoëissetççvarç
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
<br>	N.C.m.s	çbrà
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
$Var	N.P.m.s	<unknown>
isset	A.qual.m.s	isset
empty	ET	empty
(	PONCT.W	(
$var	N.P.m.s	<unknown>
non	ADV.neg	non
déclarée	VK.f.s	déclarer
)	PONCT.W	)
(	PONCT.W	(
0	A.card.m.s	@card@
)	PONCT.W	)
FAUX	N.P.m.s	Faux
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
42	A.card.m.s	@card@
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
(	PONCT.W	(
0	A.card.m.s	@card@
)	PONCT.W	)
FAUX	N.C.m.p	fau
«	P+D.def.m.s	c
»	N.C.m.s	»
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
(	PONCT.W	(
unset	N.C.m.s	unset
$var	N.P.m.s	<unknown>
)	PONCT.W	)
(	PONCT.W	(
0	A.card.m.s	@card@
)	PONCT.W	)
FAUX	N.P.m.s	Faux
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
Valeur	N.C.f.s	valeur
«	P	à
null	A.qual.m.s	nul
»	N.C.m.s	»
disponible	A.qual.m.s	disponible
,	PONCT.W	,
mais	C.C	mais
signifie	V.P.3.s	signifier
que	C.S	que
la	D.def.f.s	le
variable	N.C.f.s	variable
existe	V.P.3.s	exister
•	P	à
Null	N.P.m.s	Null
!	PONCT.S	!

=	P	à
Empty	N.P.m.s	Empty
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	N.C.m.s	echo
(	PONCT.W	(
is_null($var)	N.P.x.s	Isänullçüvarù
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$var=0	N.P.m.s	<unknown>
;	PONCT.W	;
echo	N.C.m.s	echo
(	PONCT.W	(
is_null($var)	N.P.x.s	Isänullçüvarù
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$var=	ET	çvarà
"	PONCT.W	"
"	PONCT.W	"
;	PONCT.W	;
echo	N.C.m.s	echo
(	PONCT.W	(
is_null($var)	N.P.x.s	Isänullçüvarù
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$var	N.P.x.s	<unknown>
=	PONCT.W	=
null	A.qual.m.s	nul
;	PONCT.W	;
echo	N.C.m.s	echo
(	PONCT.W	(
is_null($var)	N.P.x.s	Isänullçüvarù
.	PONCT.S	.

"	PONCT.W	"
-	PONCT.W	-
"	PONCT.W	"
.	PONCT.S	.

empty($var)	N.C.m.s	emptyçüvarà
.	PONCT.S	.

"	PONCT.W	"
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
Notice	N.P.m.s	Notice
:	PONCT.W	:
Undefined	N.P.m.s	Undefined
variable	A.qual.m.s	variable
:	PONCT.W	:
var	P	var
in	ET	in
Standard	N.P.m.s	Standard
input	V.P.3.s	inputer
code	ET	code
on	CL.suj.3.m.s	on
line	V.P.3.s	liner
2	A.card.m.s	@card@
1-1	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
-1	CL.suj.3.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
-1	CL.suj.3.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
1-1	D.card.m.s	@card@
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
$Var	P	àvar
is_null	N.P.m.s	Isänull
empty	ET	empty
(	PONCT.W	(
$var	N.P.m.s	<unknown>
non	ADV.neg	non
déclarée	VK.f.s	déclarer
)	PONCT.W	)
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI*	N.P.m.s	<unknown>
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
0	A.card.m.s	@card@
(	PONCT.W	(
0	A.card.m.s	@card@
)	PONCT.W	)
FAUX	N.P.m.s	Faux
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
«	N.C.m.s	«
»	N.C.m.s	»
(	PONCT.W	(
0	A.card.m.s	@card@
)	PONCT.W	)
FAUX	N.P.m.s	Faux
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
null	ET	null
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	N.P.m.s	Vrai
(	PONCT.W	(
1	A.card.m.s	@card@
)	PONCT.W	)
VRAI	A.card.m.s	VraI
*	N.C.m.s	*
:	PONCT.W	:
is_null()	N.C.m.s	isänullçë
déclenche	V.P.3.s	déclencher
une	D.ind.f.s	un
alerte	N.C.f.s	alerte
(	PONCT.W	(
PHP	N.P.m.s	Php
Notice	N.P.m.s	Notice
)	PONCT.W	)
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
été	VK.m.s	être
allouée	VK.f.s	allouer
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P+D.def.m.s	c
array_values(array)	N.C.m.s	<unknown>
:	PONCT.W	:
Retourne	N.C.f.s	retourne
toutes	A.ind.f.p	tout
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
–	P	à
elles-mêmes	PRO.refl.f.s	elle-même
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
(	PONCT.W	(
utile	A.qual.m.s	utile
pour	P	pour
vider	VW	vider
cases	N.C.f.p	case
vides	A.qual.f.p	vide
)	PONCT.W	)
•	P	à
array_keys(array	N.C.m.s	arrayçkeys-array
,	PONCT.W	,
valeur	N.C.f.s	valeur
)	PONCT.W	)
:	PONCT.W	:
Retourne	N.C.f.s	retourne
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
associées	VK.f.p	associer
à	P	à
«	D.card.f.p	«
valeur	N.C.f.s	valeur
»	P	à
–	N.C.m.s	–
si	C.S	si
valeur	N.C.f.s	valeur
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
spécifiée	VK.f.s	spécifier
alors	ADV.-	alors
retourne	V.P.3.s	retourner
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
du	P+D.def.m.s	du
tableau	N.C.m.s	tableau
(	PONCT.W	(
utile	A.qual.m.s	utile
pour	P	pour
connaitre	VW	connaître
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
possibles	A.qual.f.p	possible
)	PONCT.W	)
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P+D.def.m.s	c
array_values(array)	N.C.m.s	<unknown>
:	PONCT.W	:
Retourne	N.C.f.s	retourne
toutes	A.ind.f.p	tout
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
–	P	à
elles-mêmes	PRO.refl.f.s	elle-même
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
0	A.card.m.s	@card@
-	PONCT.W	-
42	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
1	N.card.m.s	@card@
-	PONCT.W	-
42	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
2	A.card.m.s	@card@
-	PONCT.W	-
9	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
5	N.card.m.s	@card@
-	PONCT.W	-
42	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
8	A.card.m.s	@card@
-	PONCT.W	-
6	A.card.m.s	@card@
0	A.card.m.s	@card@
-	PONCT.W	-
42	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
1	D.card.m.s	@card@
-	PONCT.W	-
42	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
2	A.card.m.s	@card@
-	PONCT.W	-
9	A.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
3	D.card.m.p	@card@
-	PONCT.W	-
42	N.card.m.s	@card@
;	PONCT.W	;
;	PONCT.W	;
4	D.card.m.p	@card@
-	PONCT.W	-
6	A.card.m.s	@card@
<	N.C.m.p	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$tab[0	A.qual.m.s	<unknown>
]	PONCT.W	]
=	V.P.3.s	être
42	N.card.m.s	@card@
;	PONCT.W	;
$tab[1	N.C.m.s	<unknown>
]	PONCT.W	]
=	V.P.3.s	être
42	N.card.m.s	@card@
;	PONCT.W	;
$tab[2	N.C.m.s	<unknown>
]	PONCT.W	]
=	V.P.3.s	être
9	A.card.m.s	@card@
;	PONCT.W	;
$tab[5	N.P.m.s	<unknown>
]	PONCT.W	]
=	V.P.3.s	être
42	N.card.m.s	@card@
;	PONCT.W	;
$tab[8	N.C.m.s	<unknown>
]	PONCT.W	]
=	PONCT.W	=
6	N.card.m.s	@card@
;	PONCT.W	;
$var1=array_values($tab)	N.P.m.s	<unknown>
;	PONCT.W	;
foreach($tab	ET	foreachëëtab
as	ET	as
$id	ET	çid
=>	N.P.m.s	<unknown>
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
<br>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach($var1	N.C.m.s	<unknown>
as	N.C.m.p	as
$id	ET	çid
=>	ET	çù
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
Prenom	N.P.m.s	Prenom
-	PONCT.W	-
Jean	N.P.m.s	Jean
;	PONCT.W	;
;	PONCT.W	;
Nom	N.P.m.s	Nom
-	PONCT.W	-
Martin	N.P.m.s	Martin
;	PONCT.W	;
;	PONCT.W	;
Prenom2	N.P.m.s	<unknown>
-	PONCT.W	-
Olivier	N.P.m.s	Olivier
;	PONCT.W	;
;	PONCT.W	;
Prenom3	N.P.m.s	<unknown>
-	PONCT.W	-
Jean	N.P.m.s	Jean
0	N.card.m.s	@card@
-	PONCT.W	-
Jean	N.P.m.s	Jean
;	PONCT.W	;
;	PONCT.W	;
1	N.card.m.s	@card@
-	PONCT.W	-
Martin	N.P.m.s	Martin
;	PONCT.W	;
;	PONCT.W	;
2	A.card.m.s	@card@
-	PONCT.W	-
Olivier	N.P.m.s	Olivier
;	PONCT.W	;
;	PONCT.W	;
3	A.card.m.s	@card@
-	PONCT.W	-
Jean	N.P.m.s	Jean
<	N.P.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tab["Prenom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	ET	çtabçnom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom2	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Olivier	N.P.m.s	Olivier
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom3	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Martin	N.P.m.s	Martin
"	PONCT.W	"
;	PONCT.W	;
$var1=array_values($tab)	N.P.m.s	<unknown>
;	PONCT.W	;
foreach($tab	ET	foreachëëtab
as	ET	as
$id	ET	çid
=>	ET	çù
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
<br>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach($var1	N.C.m.s	<unknown>
as	N.C.m.p	as
$id	ET	çid
=>	ET	çù
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
array_keys(array	N.C.m.s	arrayçkeys-array
,	PONCT.W	,
valeur	N.C.f.s	valeur
)	PONCT.W	)
:	PONCT.W	:
Retourne	N.C.f.s	retourne
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
associées	VK.f.p	associer
à	P	à
«	D.card.f.p	«
valeur	N.C.f.s	valeur
»	P	à
–	N.C.m.s	–
si	C.S	si
valeur	N.C.f.s	valeur
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
spécifiée	VK.f.s	spécifier
alors	ADV.-	alors
retourne	V.P.3.s	retourner
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
du	P+D.def.m.s	du
tableau	N.C.m.s	tableau
0	A.card.m.s	@card@
-	PONCT.W	-
Prenom	N.P.m.s	Prenom
;	PONCT.W	;
;	PONCT.W	;
1	D.card.m.s	@card@
-	PONCT.W	-
Prenom3	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tab["Prenom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	ET	çtabçnom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom2	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Olivier	N.P.m.s	Olivier
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom3	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Martin	N.P.m.s	Martin
"	PONCT.W	"
;	PONCT.W	;
$var1=array_keys($tab	N.P.m.s	<unknown>
,	PONCT.W	,
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach($tab	ET	foreachëëtab
as	ET	as
$id	ET	çid
=>	N.P.m.s	<unknown>
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
<br>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach($var1	N.C.m.s	<unknown>
as	N.C.m.p	as
$id	ET	çid
=>	ET	çù
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
array_keys(array	N.C.m.s	arrayçkeys-array
,	PONCT.W	,
valeur	N.C.f.s	valeur
)	PONCT.W	)
:	PONCT.W	:
Retourne	N.C.f.s	retourne
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
associées	VK.f.p	associer
à	P	à
«	D.card.f.p	«
valeur	N.C.f.s	valeur
»	P	à
–	N.C.m.s	–
si	C.S	si
valeur	N.C.f.s	valeur
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
spécifiée	VK.f.s	spécifier
alors	ADV.-	alors
retourne	V.P.3.s	retourner
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
du	P+D.def.m.s	du
tableau	N.C.m.s	tableau
0	A.card.m.s	@card@
-	PONCT.W	-
Prenom	N.P.m.s	Prenom
;	PONCT.W	;
;	PONCT.W	;
1	D.card.m.s	@card@
-	PONCT.W	-
Nom	N.P.m.s	Nom
;	PONCT.W	;
;	PONCT.W	;
2	A.card.m.s	@card@
-	PONCT.W	-
Prenom2	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
3	A.card.m.s	@card@
-	PONCT.W	-
Prenom3	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tab["Prenom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	ET	çtabçnom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom2	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Olivier	N.P.m.s	Olivier
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom3	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Martin	N.P.m.s	Martin
"	PONCT.W	"
;	PONCT.W	;
$var1=array_keys($tab)	N.P.m.s	<unknown>
;	PONCT.W	;
foreach($tab	ET	foreachëëtab
as	ET	as
$id	ET	çid
=>	ET	çù
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
<br>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach($var1	N.C.m.s	<unknown>
as	N.C.m.p	as
$id	ET	çid
=>	ET	çù
$val	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$id	ET	çid
-	PONCT.W	-
$val	N.P.m.s	<unknown>
;	PONCT.W	;
;	PONCT.W	;
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
•	P	à
in_array(valeur	N.C.m.s	inçarrayçvaleur
,	PONCT.W	,
array	N.C.m.s	array
)	PONCT.W	)
:	PONCT.W	:
Vérifie	V.P.3.s	vérifier
si	C.S	si
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
appartient	V.P.3.s	appartenir
à	P	à
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
•	A.qual.m.s	•
array_key_exists(key	N.C.m.s	arrayçkey-existsy
,	PONCT.W	,
array	N.C.m.s	array
)	PONCT.W	)
:	PONCT.W	:
Vérifie	V.P.3.s	vérifier
si	C.S	si
une	D.ind.f.s	un
clé	N.C.f.s	clé
existe	V.P.3.s	exister
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
TRUE	N.P.f.s	True
=	P	à
1	D.card.m.s	@card@
FALSE	N.P.m.s	False
=	V.P.3.s	être
0	D.card.m.s	@card@
1	N.card.m.s	@card@
-	PONCT.W	-
1	N.card.m.s	@card@
-	PONCT.W	-
-	PONCT.W	-
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$tab["Prenom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	ET	çtabçnom
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom2	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Olivier	N.P.m.s	Olivier
"	PONCT.W	"
;	PONCT.W	;
$tab["Prenom3	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Jean	N.P.m.s	Jean
"	PONCT.W	"
;	PONCT.W	;
$tab["Nom	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
Martin	N.P.m.s	Martin
"	PONCT.W	"
;	PONCT.W	;
$var1=in_array("Jean	N.P.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$tab	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$var2=array_key_exists("Nom	N.P.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$tab	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$var3=in_array("A	N.P.x.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$tab	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$var4=array_key_exists("A	N.P.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$tab	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
$var1	N.P.m.s	<unknown>
-	PONCT.W	-
$var2	N.P.m.s	<unknown>
-	PONCT.W	-
$var3	N.P.m.s	<unknown>
-	PONCT.W	-
$var4	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
•	N.C.m.s	•
En	P	en
PHP	N.P.m.s	Php
,	PONCT.W	,
la	D.def.f.s	le
fonction	N.C.f.s	fonction
header()	N.C.m.s	headerçë
se	CL.refl.3.f.s	se
charge	V.P.3.s	charger
d'	P	de
envoyer	VW	envoyer
au	P+D.def.m.s	au
client	N.C.m.s	client
les	D.def.f.p	le
en-têtes	N.C.f.p	en-tête
passés	VK.m.p	passer
en	P	en
paramètre	N.C.m.s	paramètre
•	P	à
Règle	N.C.f.s	règle
importante	A.qual.f.s	important
:	PONCT.W	:
l'	D.def.m.s	le
appel	N.C.m.s	appel
à	P	à
‘	D.card.m.s	‘
header()	N.C.m.s	headerçë
’	N.P.x.s	’
doit	V.P.3.s	devoir
se	CL.refl.3.m.s	se
faire	VW	faire
avant	P	avant
tout	D.ind.m.s	tout
envoi	N.C.m.s	envoi
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
–	P	à
Attention	N.C.f.s	attention
aux	P+D.def.f.p	au
includes	N.C.f.p	include
qui	PRO.rel.f.p	qui
écriraient	V.C.3.p	écrire
quelque	D.ind.f.s	quelque
chose	N.C.f.s	chose
...	PONCT.W	<unknown>
–	N.C.m.s	–
Ne	ADV.neg	ne
PAS	ADV.neg	pas
écrire	VW	écrire
de	P	de
<html>	N.P.x.s	<unknown>
vu	VK.m.s	voir
que	C.S	que
l'	D.def.m.s	le
on	CL.suj.3.m.s	on
est	V.P.3.s	être
dans	P	dans
les	D.def.f.p	le
en-têtes	N.C.f.p	en-tête
HTTP	N.P.m.s	Http
et	C.C	et
non	ADV.neg	non
HTML	I	<unknown>
!	PONCT.S	!

PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
•	P+D.def.m.s	c
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
utiliser	VW	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
«	P	à
header()	N.C.m.s	headerçë
»	N.C.m.s	»
pour	P	pour
envoyer	VW	envoyer
des	D.ind.m.p	du
codes	N.C.m.p	code
HTTP	N.P.m.s	Http
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
header("HTTP/1.0	A.ind.m.s	<unknown>
404	A.card.m.s	@card@
Not	ET	not
Found	N.P.m.s	Found
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
header("Status	N.C.m.s	headerçstatus
:	PONCT.W	:
301	D.card.m.p	@card@
Moved	N.P.m.s	Moved
Permanently	N.P.m.s	Permanently
"	PONCT.W	"
,	PONCT.W	,
false	N.C.f.s	false
,	PONCT.W	,
301	N.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
header('Location	N.C.f.s	headerç'location
:	PONCT.W	:
http://www.votresite.com/	N.C.m.s	<unknown>
pageprotegee.php	N.C.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
Header	N.P.m.s	Header
HTTP	N.P.m.s	Http
renvoyé	VK.m.s	renvoyer
par	P	par
Apache	N.P.m.s	Apache
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
donc	ADV.-	donc
ce	PRO.dem.m.s	ce
que	PRO.rel.m.s	que
vous	CL.suj.2.m.p	vous
pouvez	V.P.2.p	pouvoir
modifier	VW	modifier
avec	P	avec
la	D.def.f.s	le
fonction	N.C.f.s	fonction
«	P	à
header()	N.C.m.s	headerçë
»	P	à
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
•	N.C.m.s	•
Pour	P	pour
créer	VW	créer
une	D.ind.f.s	un
redirection	N.C.f.s	redirection
avec	P	avec
PHP	N.P.m.s	Php
,	PONCT.W	,
on	CL.suj.3.m.s	on
utilise	V.P.3.s	utiliser
header	N.C.m.s	header
pour	P	pour
envoyer	VW	envoyer
des	D.ind.f.p	du
en-têtes	N.C.f.p	en-tête
de	P	de
type	N.C.m.s	type
Location	N.C.f.s	location
(	PONCT.W	(
adresse	N.C.f.s	adresse
)	PONCT.W	)
•	P+D.def.m.s	c
Script	N.C.m.s	script
de	P	de
redirection	N.C.f.s	redirection
(	PONCT.W	(
HTTP	N.C.m.s	<unknown>
302	A.card.f.p	@card@
)	PONCT.W	)
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
header('Location	N.C.f.s	headerç'location
:	PONCT.W	:
http://monsite.com/page.php	N.C.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
•	P+D.def.m.s	c
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
envoyer	VW	envoyer
des	D.ind.m.p	du
fichiers	N.C.m.p	fichier
et	C.C	et
jouer	VW	jouer
avec	P	avec
d'	D.ind.m.p	de
autres	A.ind.m.p	autre
champs	N.C.m.p	champ
HTTP	A.qual.m.p	<unknown>
tels	A.qual.m.p	tel
que	C.S	que
le	D.def.m.s	le
«	N.C.m.s	«
Content-	N.P.m.s	Content-R
Type	N.C.m.s	type
»	N.C.m.s	»
–	N.C.m.s	–
«	P	à
Content-Type	N.P.m.s	Content-Type
»	N.C.m.s	»
indique	V.P.3.s	indiquer
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
donnée	N.C.f.s	donnée
,	PONCT.W	,
donc	ADV.-	donc
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
essayera	V.F.3.s	essayer
d'	P	de
utiliser	VW	utiliser
l'	D.def.m.s	le
outil	N.C.m.s	outil
préféré	A.qual.m.s	préféré
de	P	de
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
pour	P	pour
lire	VW	lire
ce	D.dem.m.s	ce
fichier	N.C.m.s	fichier
•	A.qual.m.s	•
readfile()	N.C.m.s	readfileçà
permet	V.P.3.s	permettre
d'	P	de
envoyer	VW	envoyer
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
déclare	V.P.3.s	déclarer
en	P	en
header	N.C.m.s	header
qu'	C.S	que
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
de	P	de
«	D.card.m.p	«
text/html	N.C.m.s	<unknown>
»	P	à
,	PONCT.W	,
donc	C.C	donc
du	P+D.def.m.s	du
texte	N.C.m.s	texte
interprétable	A.qual.m.s	interprétable
par	P	par
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
ou	C.C	ou
lisible	A.qual.m.s	lisible
par	P	par
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
.	PONCT.S	.

Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
l'	CL.obj.3.m.s	le
affiche	V.P.3.s	afficher
donc	ADV.-	donc
.	PONCT.S	.

PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
déclare	V.P.3.s	déclarer
en	P	en
header	N.C.m.s	header
qu'	C.S	que
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
de	P	de
«	D.card.m.p	«
image/jpeg	N.C.m.s	<unknown>
»	N.C.m.s	»
,	PONCT.W	,
donc	ADV.-	donc
d'	P	de
une	D.ind.f.s	un
image	N.C.f.s	image
au	P+D.def.m.s	au
format	N.C.m.s	format
JPEG	N.P.m.s	Jpeg
.	PONCT.S	.

Le	D.def.m.s	le
texte	N.C.m.s	texte
n'	ADV.neg	ne
en	CL.obj.3.m.s	en
étant	VG	être
pas	ADV.neg	pas
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
impossible	A.qual.m.s	impossible
d'	P	de
afficher	VW	afficher
une	D.ind.f.s	un
image	N.C.f.s	image
,	PONCT.W	,
mais	C.C	mais
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
essaye	V.P.3.s	essayer
tout	ADV.-	tout
de	P	de
même	A.qual.m.s	même
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
déclare	V.P.3.s	déclarer
en	P	en
header	N.C.m.s	header
qu'	C.S	que
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
de	P	de
«	D.card.m.p	«
video/mp4	N.C.m.s	<unknown>
»	N.C.m.s	»
,	PONCT.W	,
donc	ADV.-	donc
d'	P	de
une	D.ind.f.s	un
vidéo	N.C.f.s	vidéo
au	P+D.def.m.s	au
format	N.C.m.s	format
MP4	N.P.m.s	Mp4
.	PONCT.S	.

Le	D.def.m.s	le
texte	N.C.m.s	texte
n'	ADV.neg	ne
en	CL.obj.3.m.s	en
étant	VG	être
pas	ADV.neg	pas
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
impossible	A.qual.m.s	impossible
d'	P	de
afficher	VW	afficher
la	D.def.f.s	le
vidéo	N.C.f.s	vidéo
,	PONCT.W	,
mais	C.C	mais
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
essaye	V.P.3.s	essayer
tout	PRO.ind.m.s	tout
de	P	de
même	ADV.-	même
de	P	de
le	CL.obj.3.m.s	le
lire	VW	lire
avec	P	avec
un	D.ind.m.s	un
lecteur	N.C.m.s	lecteur
de	P	de
vidéos	N.C.m.p	vidéo
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
déclare	V.P.3.s	déclarer
en	P	en
header	N.C.m.s	header
qu'	C.S	que
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
de	P	de
«	P	à
application/octet-	A.qual.m.s	<unknown>
stream	A.qual.m.s	stream
»	N.C.m.s	»
,	PONCT.W	,
donc	ADV.-	donc
d'	P	de
un	D.ind.m.s	un
flux	N.C.m.s	flux
d'	P	de
octets	N.C.m.p	octet
.	PONCT.S	.

Par	P	par
défaut	N.C.m.s	défaut
,	PONCT.W	,
les	D.def.m.p	le
navigateurs	N.C.m.p	navigateur
proposent	V.P.3.p	proposer
de	P	de
télécharger	VW	télécharger
le	D.def.m.s	le
fichier	N.C.m.s	fichier
associé	VK.m.s	associer
plutôt	ADV.-	plutôt
que	C.S	que
de	P	de
l'	CL.obj.3.m.s	le
afficher	VW	afficher
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
//	PONCT.W	@card@
On	CL.suj.3.m.s	on
declare	V.P.3.s	declarer
un	D.ind.m.s	un
PDF	N.C.m.s	<unknown>
header('Content-Type	N.C.m.s	headerç'content-type
:	PONCT.W	:
application/pdf	N.C.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
Le	D.def.m.s	le
client	N.C.m.s	client
verra	V.F.3.s	voir
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
"	PONCT.W	"
downloaded.pdf	ET	<unknown>
"	PONCT.W	"
header('Content-	A.qual.m.s	headerç'content-
Disposition	N.C.f.s	disposition
:	PONCT.W	:
attachment	N.C.m.s	attachment
;	PONCT.W	;
filename="downloaded.pdf	ET	<unknown>
"	PONCT.W	"
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
Le	D.def.m.s	le
fichier	N.C.m.s	fichier
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
web	A.qual.m.s	web
qui	PRO.rel.m.s	qui
sera	V.F.3.s	être
transmis	VK.m.s	transmettre
readfile('original.pdf')	N.C.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
HTTP	N.P.m.s	Http
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$file	A.qual.m.s	çfile
=	PONCT.W	=
'	PONCT.W	'
monkey.gif	N.C.m.s	monkeyagif
'	PONCT.W	'
;	PONCT.W	;
if	ET	if
(file_exists($file))	N.C.m.s	ffileçexist-leëf
{	P	à
header('Content-Description	N.C.f.s	headerç'cont-description
:	PONCT.W	:
File	ET	file
Transfer	N.P.m.s	Transfer
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
header('Content-Type	N.C.m.s	headerç'content-type
:	PONCT.W	:
application/octet-stream	N.C.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
header('Content-	N.C.f.s	headerç'content-
Disposition	N.C.f.s	disposition
:	PONCT.W	:
attachment	N.C.m.s	attachment
;	PONCT.W	;
filename="'.basename($file).'"')	N.C.m.s	filename-f'çe
;	PONCT.W	;
header('Expires	N.C.m.p	headerç'expire
:	PONCT.W	:
0	D.card.m.s	@card@
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
header('Cache-Control	N.C.m.s	headerç'cache-control
:	PONCT.W	:
must-revalidate	N.C.m.s	must-revalidate
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
header('Pragma	N.C.m.s	headerç'pragma
:	PONCT.W	:
public	A.qual.m.s	public
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
header('Content-Length	N.C.f.p	headerç'content-length
:	PONCT.W	:
'	ADV.-	'
.	PONCT.S	.

filesize($file))	N.C.m.s	filesizeëfileçà
;	PONCT.W	;
readfile($file)	N.C.m.s	readfileçfileë
;	PONCT.W	;
exit	V.P.3.s	exir
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Développement	N.C.m.s	développement
Web	N.P.m.s	Web
–	N.P.m.s	–
PHP	N.P.m.s	Php
Cours	N.P.m.s	Cours
3	D.card.m.p	@card@
Rappels	N.C.m.p	rappel
:	PONCT.W	:
Architecture	N.C.f.s	architecture
Générale	A.qual.f.s	général
Base	N.C.f.s	base
de	P	de
Données	N.P.m.s	Données
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Serveur	N.P.m.s	Serveur
d'	P	de
Application	N.C.f.s	application
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Rappels	N.P.m.s	Rappels
:	PONCT.W	:
Architecture	N.C.f.s	architecture
Générale	A.qual.f.s	général
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
&	PONCT.W	&
Base	N.C.f.s	base
de	P	de
Données	N.P.m.s	Données
Apache	N.P.m.s	Apache
Front	N.P.m.s	Front
Office	ET	office
Back	N.P.m.s	Back
Office	ET	office
Rappels	N.P.m.s	Rappels
:	PONCT.W	:
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
•	N.P.m.s	•
Communications	N.C.f.p	communication
entre	P	entre
«	D.card.m.s	«
navigateur	N.C.m.s	navigateur
web	N.C.m.s	web
»	N.C.m.s	»
et	C.C	et
«	P	à
serveur	N.C.m.s	serveur
web	N.C.m.s	web
»	N.C.m.s	»
se	CL.refl.3.f.p	se
font	V.P.3.p	faire
avec	P	avec
protocole	N.C.m.s	protocole
HTTP	N.P.m.s	Http
http://monsite.fr/page.htm	N.P.x.s	<unknown>
(	PONCT.W	(
GET	N.P.m.s	Get
page.htm	N.P.x.s	<unknown>
)	PONCT.W	)
GET	N.P.m.s	Get
page.htm	ET	<unknown>
<html>	N.P.m.s	<unknown>
Coucou	N.P.m.s	Coucou
</html>	ET	<unknown>
Coucou	ET	coucou
page.htm	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Apache	N.P.m.s	Apache
Protocole	N.P.m.s	Protocole
pour	P	pour
transmettre	VW	transmettre
les	D.def.f.p	le
informations	N.C.f.p	information
:	PONCT.W	:
HTTP	N.P.m.s	Http
Rappels	N.C.m.p	rappel
:	PONCT.W	:
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
•	D.card.f.p	•
Communications	N.C.f.p	communication
entre	P	entre
client	N.C.m.s	client
et	C.C	et
serveur	N.C.m.s	serveur
se	CL.refl.3.f.p	se
font	V.P.3.p	faire
avec	P	avec
les	D.def.f.p	le
méthodes	N.C.f.p	méthode
GET	N.P.m.s	Get
et	C.C	et
POST	N.P.m.s	Post
•	P+D.def.m.s	c
GET	N.P.m.s	Get
:	PONCT.W	:
passage	N.C.m.s	passage
d'	P	de
informations	N.C.f.p	information
par	P	par
l'	D.def.m.s	le
URL	N.P.f.s	Url
,	PONCT.W	,
donc	ADV.-	donc
par	P	par
la	D.def.f.s	le
requête	N.C.f.s	requête
elle-même	PRO.refl.f.s	elle-même
•	P	à
POST	N.P.m.s	Post
:	PONCT.W	:
passage	N.C.m.s	passage
d'	P	de
information	N.C.f.s	information
par	P	par
le	D.def.m.s	le
contenu	N.C.m.s	contenu
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
Rappels	N.P.m.s	Rappels
:	PONCT.W	:
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
•	N.C.m.s	•
Une	D.ind.f.s	un
requête	N.C.f.s	requête
envoyée	VK.f.s	envoyer
=	P	à
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
reçue	VK.f.s	recevoir
•	D.card.f.p	•
Réponses	N.C.f.p	réponse
HTTP	N.P.m.s	Http
de	P	de
5	D.card.m.p	@card@
types	N.C.m.p	type
(	PONCT.W	(
officiels	N.C.m.p	officiel
)	PONCT.W	)
:	PONCT.W	:
–	D.card.m.s	–
1xx	PRO.card.f.p	<unknown>
:	PONCT.W	:
informationnelle	A.qual.f.s	informationnel
–	P	à
2xx	N.card.m.s	2xx
:	PONCT.W	:
succès	N.C.m.p	succès
–	N.C.m.s	–
3xx	A.card.m.p	<unknown>
:	PONCT.W	:
redirection	N.C.f.s	redirection
–	P+D.def.m.s	c
4xx	N.C.m.s	<unknown>
:	PONCT.W	:
erreur	N.C.f.s	erreur
côté	N.C.m.s	côté
client	N.C.m.s	client
–	P	à
5xx	N.C.m.s	<unknown>
:	PONCT.W	:
erreur	N.C.f.s	erreur
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
–	N.C.m.s	–
[	PONCT.W	[
autres	A.ind.f.p	autre
erreurs	N.C.f.p	erreur
sont	V.P.3.p	être
liées	VK.f.p	lier
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
web	N.C.m.s	web
utilisé	VK.m.s	utiliser
]	PONCT.W	]
Rappels	N.C.m.p	rappel
:	PONCT.W	:
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
•	N.P.m.s	•
Header	N.P.m.s	Header
HTTP	N.P.m.s	Http
permet	V.P.3.s	permettre
de	P	de
déclarer	VW	déclarer
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
données	N.C.f.p	donnée
transmises	VK.f.p	transmettre
–	P+D.def.m.s	c
Content-Type	N.P.m.s	Content-Type
:	PONCT.W	:
text/html	N.C.m.s	<unknown>
–	P	à
Content-Type	N.P.x.s	Content-Type
:	PONCT.W	:
application/pdf	N.C.m.s	<unknown>
–	P+D.def.m.s	c
Content-Type	N.P.m.s	Content-Type
:	PONCT.W	:
application/octet-stream	N.C.m.s	<unknown>
–	ET	–
Content-Type	N.P.m.s	Content-Type
:	PONCT.W	:
video/mp4	N.C.m.s	<unknown>
•	P	à
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
web	N.C.m.s	web
a	V.P.3.s	avoir
des	D.ind.m.p	du
paramètres	N.C.m.p	paramètre
personnalisables	A.qual.m.p	personnalisable
pour	P	pour
choisir	VW	choisir
un	D.ind.m.s	un
programme	N.C.m.s	programme
externe	A.qual.m.s	externe
(	PONCT.W	(
ou	C.C	ou
pas	ADV.neg	pas
)	PONCT.W	)
selon	P	selon
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
données	N.C.f.p	donnée
Rappels	N.C.m.p	rappel
:	PONCT.W	:
PHP	N.P.m.s	Php
•	N.C.m.s	•
PHP	N.P.m.s	Php
est	V.P.3.s	être
une	D.ind.f.s	un
extension	N.C.f.s	extension
à	P	à
côté	N.C.m.s	côté
de	P	de
Apache	N.P.m.s	Apache
–	P	à
Apache	N.P.m.s	Apache
configuré	VK.m.s	configurer
pour	P	pour
appeler	VW	appeler
PHP	N.P.m.s	Php
lorsqu'	C.S	lorsque
il	CL.suj.3.m.s	il
voit	V.P.3.s	voir
passer	VW	passer
une	D.ind.f.s	un
requête	N.C.f.s	requête
terminant	VG	terminer
par	P	par
«	D.card.m.s	«
.php	N.C.m.s	<unknown>
»	N.C.m.s	»
–	P	à
PHP	N.P.m.s	Php
traite	V.P.3.s	traiter
le	D.def.m.s	le
fichier	N.C.m.s	fichier
en	P	en
question	N.C.f.s	question
,	PONCT.W	,
et	C.C	et
produit	V.P.3.s	produire
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
renvoyée	VK.f.s	renvoyer
par	P	par
Apache	N.P.m.s	Apache
<html>	N.P.x.s	<unknown>
<	N.P.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
B	N.C.m.s	b
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P+D.def.m.s	c
</html>	ET	<unknown>
page.php	ET	<unknown>
GET	N.P.m.s	Get
page.php	ET	<unknown>
GET	N.P.m.s	Get
page.php	ET	<unknown>
Navigateur	N.P.m.s	Navigateur
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
Apache	N.P.m.s	Apache
<html>	N.P.m.s	<unknown>
B	N.P.m.s	B
<html>	N.P.m.s	<unknown>
page.php	ET	<unknown>
<html>	N.P.x.s	<unknown>
B	N.P.m.s	B
</html>	N.P.x.s	<unknown>
page.php	ET	<unknown>
Rappels	N.P.m.s	Rappels
:	PONCT.W	:
PHP	N.P.m.s	Php
•	P	à
Langage	N.C.m.s	langage
faiblement	ADV.-	faiblement
typé	VK.m.s	typer
–	P	à
Beaucoup	ADV.-	beaucoup
plus	ADV.-	plus
flexible	A.qual.m.s	flexible
...	PONCT.W	<unknown>
–	N.C.m.s	–
...	PONCT.W	<unknown>
mais	C.C	mais
possibilité	N.C.f.s	possibilité
de	P	de
faire	VW	faire
n'	ADV.neg	ne
importe	V.P.3.s	importer
quoi	PRO.int.m.s	quoi
•	P	à
Langage	N.C.m.s	langage
interprété	VK.m.s	interpréter
–	P+D.def.m.s	c
CLI	N.P.m.s	Cli
disponible	A.qual.m.s	disponible
pour	P	pour
scripts	N.C.m.p	script
•	P	à
Usage	N.P.m.s	Usage
dans	P	dans
ce	D.dem.m.s	ce
cours	N.C.m.s	cours
:	PONCT.W	:
extension	N.C.f.s	extension
apache	V.P.3.s	apacher
SGBD	N.P.m.s	Sgbd
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
SGBD	N.P.m.s	Sgbd
:	PONCT.W	:
Système	N.C.m.s	système
de	P	de
Gestion	N.C.f.s	gestion
de	P	de
Base	N.C.f.s	base
de	P	de
Données	N.P.m.s	Données
[	PONCT.W	[
DBMS	N.P.x.s	Dbms
:	PONCT.W	:
DataBase	N.P.m.s	Database
Management	ET	management
System	N.P.m.s	System
]	PONCT.W	]
•	P+D.def.m.s	c
BDD	N.P.m.s	Bdd
:	PONCT.W	:
Base	N.C.f.s	base
de	P	de
Données	N.P.m.s	Données
[	PONCT.W	[
DB	N.C.m.s	db
:	PONCT.W	:
DataBase	N.P.m.s	Database
]	PONCT.W	]
SGBD	N.P.m.s	Sgbd
&	PONCT.W	&
BDD	N.P.m.s	Bdd
Personne	N.P.m.s	Personne
Cours	N.C.m.s	cours
ID	N.P.m.s	Id
Nom	N.P.m.s	Nom
Prenom	N.P.m.s	Prenom
1	D.card.m.s	@card@
Jaffal	N.P.m.s	Jaffal
Ali	N.P.m.s	Ali
2	A.card.m.s	@card@
Boissier	N.P.m.s	Boissier
Fabrice	N.P.m.s	Fabrice
•	N.P.m.s	•
BDD	N.P.m.s	Bdd
:	PONCT.W	:
les	D.def.f.p	le
données	N.C.f.p	donnée
organisées	VK.f.p	organiser
dans	P	dans
un	D.ind.m.s	un
conteneur	N.C.m.s	conteneur
Table	N.P.m.s	Table
:	PONCT.W	:
Personne	PRO.neg.m.s	personne
•	P	à
SGBD	N.P.m.s	Sgbd
:	PONCT.W	:
le	D.def.m.s	le
système	N.C.m.s	système
ou	C.C	ou
le	D.def.m.s	le
SELECT	N.P.m.s	Select
*	V.P.3.s	être
FROM	N.P.m.s	From
Personne	PRO.neg.m.s	personne
logiciel	N.C.m.s	logiciel
qui	PRO.rel.m.s	qui
gère	V.P.3.s	gérer
les	D.def.f.p	le
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
1:Jaffal:Ali	N.P.m.s	<unknown>
;	PONCT.W	;
2:Boissier:Fabrice	N.C.m.s	<unknown>
;	PONCT.W	;
SGBD	N.P.m.s	Sgbd
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
Qu'	PRO.rel.m.s	que
est	V.P.3.s	être
ce	PRO.dem.m.s	ce
qu'	PRO.rel.m.s	que
un	D.ind.m.s	un
SGBD	N.C.m.s	<unknown>
?	PONCT.S	?

«	P	à
C'	CL.suj.3.m.s	ce
est	V.P.3.s	être
un	D.ind.m.s	un
logiciel	A.qual.m.s	logiciel
système	N.C.m.s	système
destiné	VK.m.s	destiner
à	P	à
stocker	VW	stocker
et	C.C	et
à	P	à
partager	VW	partager
des	D.ind.f.p	du
informations	N.C.f.p	information
dans	P	dans
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
,	PONCT.W	,
en	P	en
garantissant	VG	garantir
la	D.def.f.s	le
qualité	N.C.f.s	qualité
,	PONCT.W	,
la	D.def.f.s	le
pérennité	N.C.f.s	pérennité
et	C.C	et
la	D.def.f.s	le
confidentialité	N.C.f.s	confidentialité
des	P+D.def.f.p	du
informations	N.C.f.p	information
,	PONCT.W	,
tout	ADV.-	tout
en	P	en
cachant	VG	cacher
la	D.def.f.s	le
complexité	N.C.f.s	complexité
des	P+D.def.f.p	du
opérations	N.C.f.p	opération
.	PONCT.W	.
»	N.C.m.s	»
WIKIPEDIA	N.P.x.s	Wikipedia
Parmi	P	parmi
les	D.def.m.p	le
logiciels	N.C.m.p	logiciel
les	D.def.m.p	le
plus	ADV.-	plus
connus	A.qual.m.p	connu
,	PONCT.W	,
on	CL.suj.3.m.s	on
trouve	V.P.3.s	trouver
:	PONCT.W	:
MySQL	N.P.x.s	Mysql
,	PONCT.W	,
PostgreSQL	N.P.x.s	Postgresql
,	PONCT.W	,
SQLite	N.P.f.s	Sqlite
,	PONCT.W	,
Oracle	N.P.m.s	Oracle
et	C.C	et
MariaDB	N.P.m.s	Mariadb
.	PONCT.S	.

Pour	P	pour
une	D.ind.f.s	un
liste	N.C.f.s	liste
détaillée	A.qual.f.s	détaillé
des	P+D.def.m.p	du
SGBD	N.P.m.p	Sgbd
,	PONCT.W	,
consulter	VW	consulter
ce	D.dem.m.s	ce
lien	N.C.m.s	lien
http://fadace.developpez.com/sgbdcmp/#LI	N.C.m.s	<unknown>
SGBD	N.P.m.s	Sgbd
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
«	N.C.m.s	«
Avant	P	avant
»	N.C.m.s	»
:	PONCT.W	:
on	CL.suj.3.m.s	on
organisait	V.I.3.s	organiser
soi	PRO.refl.m.s	soi
-même	A.ind.m.s	même
un	D.ind.m.s	un
disque	N.C.m.s	disque
ou	C.C	ou
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
,	PONCT.W	,
et	C.C	et
on	CL.suj.3.m.s	on
codait	V.I.3.s	coder
un	D.ind.m.s	un
bout	N.C.m.s	bout
de	P	de
programme	N.C.m.s	programme
spécifique	A.qual.m.s	spécifique
pour	P	pour
naviguer	VW	naviguer
dedans	N.P.m.s	Dedans
(	PONCT.W	(
et	C.C	et
effectuer	VW	effectuer
des	D.ind.f.p	du
lectures/écritures	N.C.f.p	<unknown>
)	PONCT.W	)
BDD	N.P.m.s	Bdd
(	PONCT.W	(
Search	N.P.m.s	Search
for	N.C.m.s	for
«	P	à
handle	N.C.m.s	handle
»	P	à
description	N.C.f.s	description
)	PONCT.W	)
Get	N.P.m.s	Get
/car/door/handle/description	N.C.m.s	<unknown>
[	PONCT.W	[
Seek	N.P.m.s	Seek
Disc	N.P.m.s	Disc
1	A.card.m.s	@card@
,	PONCT.W	,
Track	N.P.m.s	Track
4	A.card.m.s	@card@
,	PONCT.W	,
Block	N.P.m.s	Block
2	A.card.m.s	@card@
&	PONCT.W	&
Extract	N.P.m.s	Extract
2	D.card.m.p	@card@
blocks	N.C.m.p	block
]	PONCT.W	]
Application	N.C.f.s	application
SGBD	N.P.m.s	Sgbd
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
Aujourd’hui	N.P.m.s	Aujourd-Hui
:	PONCT.W	:
usage	N.C.m.s	usage
d'	P	de
un	D.ind.m.s	un
pilote	N.C.m.s	pilote
logiciel	A.qual.m.s	logiciel
effectuant	VG	effectuer
les	D.def.f.p	le
transactions	N.C.f.p	transaction
avec	P	avec
le	D.def.m.s	le
SGBD	N.P.m.s	Sgbd
–	N.C.m.s	–
API	N.P.x.s	Api
,	PONCT.W	,
bibliothèque	N.C.f.s	bibliothèque
,	PONCT.W	,
...	PONCT.W	<unknown>
extension	N.C.f.s	extension
permettant	VG	permettre
de	P	de
mettre	VW	mettre
du	P+D.def.m.s	du
SQL	N.P.m.s	Sql
dans	P	dans
un	D.ind.m.s	un
langage	N.C.m.s	langage
de	P	de
programmation	N.C.f.s	programmation
,	PONCT.W	,
et	C.C	et
de	P	de
récupérer	VW	récupérer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
réponse	V.P.3.s	réponser
SELECT	N.C.m.s	select
*	N.C.m.s	*
FROM	N.P.m.s	From
Personne	PRO.neg.m.s	personne
Connecteur	N.C.m.s	connecteur
(	PONCT.W	(
API	N.P.f.s	Api
,	PONCT.W	,
extension	N.C.f.s	extension
,	PONCT.W	,
...	PONCT.W	<unknown>
)	PONCT.W	)
1:Jaffal:Ali	N.P.m.s	<unknown>
;	PONCT.W	;
2:Boissier:Fabrice	N.C.m.s	<unknown>
;	PONCT.W	;
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
SGBD	N.P.m.s	Sgbd
PHP	N.P.m.s	Php
&	PONCT.W	&
SGBD	N.P.m.s	Sgbd
:	PONCT.W	:
Connecteurs	N.C.m.p	connecteur
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.P.m.s	Select
*	N.C.m.p	*
FROM	N.P.m.s	From
Personne	PRO.neg.m.s	personne
"	PONCT.W	"
;	PONCT.W	;
$res	N.C.m.p	<unknown>
=	PONCT.W	=
mysqli->query($sql)	N.C.m.p	<unknown>
;	PONCT.W	;
$line	N.P.f.s	<unknown>
=	PONCT.W	=
$res->fetch_object()	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
$line->nom	N.P.f.s	<unknown>
;	PONCT.W	;
page.php	N.C.m.s	<unknown>
SELECT	N.P.m.s	Select
*	ET	*
FROM	N.P.m.s	From
Personne	N.P.m.s	Personne
GET	N.P.m.s	Get
page.php	ET	<unknown>
MySQLi	N.P.m.s	Mysqli
Jaffal	N.P.m.s	Jaffal
1:Jaffal:Ali	N.P.m.s	<unknown>
;	PONCT.W	;
2:Boissier:Fabrice	N.C.m.s	<unknown>
;	PONCT.W	;
Navigateur	N.P.m.s	Navigateur
Base	N.P.m.s	Base
de	P	de
Données	N.C.f.p	donnée
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
PHP	N.P.m.s	Php
&	PONCT.W	&
SGBD	N.P.m.s	Sgbd
:	PONCT.W	:
Connecteurs	N.C.m.p	connecteur
•	P	à
Plusieurs	D.ind.f.p	plusieurs
extensions	N.C.f.p	extension
à	P	à
PHP	N.P.m.s	Php
existent	V.P.3.p	exister
pour	P	pour
interroger	VW	interroger
des	D.ind.m.p	du
SGBD	N.P.x.s	Sgbd
:	PONCT.W	:
–	N.C.m.p	–
MySQL	N.P.m.s	Mysql
:	PONCT.W	:
obsolète	N.C.f.s	obsolète
–	P	à
ne	ADV.neg	ne
pas	ADV.neg	pas
l'	CL.obj.3.m.s	le
utiliser	VW	utiliser
!	PONCT.S	!

(	PONCT.W	(
attention	N.C.f.s	attention
:	PONCT.W	:
anciens	A.qual.m.p	ancien
tutos	N.C.m.p	tuto
l'	CL.obj.3.m.s	le
utilisent	V.P.3.p	utiliser
)	PONCT.W	)
–	N.P.m.s	–
MySQLi	N.P.m.s	Mysqli
:	PONCT.W	:
MySQL	N.P.m.s	Mysql
«	P+D.def.m.s	c
improved	N.C.m.s	improved
»	P+D.def.m.s	c
mise	VK.f.s	mettre
à	P	à
jour	N.C.m.s	jour
de	P	de
l'	D.def.f.s	le
extension	N.C.f.s	extension
MySQL	N.P.m.s	Mysql
–	P	à
PDO	N.P.x.s	Pdo
:	PONCT.W	:
PHP	N.P.m.s	Php
Data	N.P.m.s	Data
Object	N.C.m.s	object
pilote	N.C.m.s	pilote
générique	A.qual.m.s	générique
multi-SGBD	N.P.x.s	<unknown>
•	N.P.m.s	•
(	PONCT.W	(
Hors	P	hors
PHP	N.P.m.s	Php
:	PONCT.W	:
ODBC	N.P.x.s	Odbc
(	PONCT.W	(
middleware	ET	middleware
)	PONCT.W	)
,	PONCT.W	,
connecteur	N.C.m.s	connecteur
quasi-universel	A.qual.m.s	quasi-universel
)	PONCT.W	)
–	ET	–
Open	N.P.m.s	Open
DataBase	N.P.m.s	Database
Connectivity	N.P.m.s	Connectivity
MySQL	N.P.m.s	Mysql
avec	P	avec
PHP	N.P.m.s	Php
Manipulation	N.C.f.s	manipulation
des	P+D.def.f.p	du
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
MySQL	N.P.m.s	Mysql
se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
soit	C.C	soit
via	P	via
une	D.ind.f.s	un
interface	N.C.f.s	interface
graphique	A.qual.f.s	graphique
comme	P	comme
‘	P	à
PhpMyAdmin	N.P.m.s	Phpmyadmin
’	V.P.3.s	être
soit	C.C	soit
en	P	en
exécutant	VG	exécuter
un	D.ind.m.s	un
script	N.C.m.s	script
PHP	N.C.m.s	php
.	PONCT.S	.

1	A.card.m.s	@card@
.	PONCT.S	.

PhpMyAdmin	N.P.m.s	Phpmyadmin
•	V.P.3.s	être
Un	D.ind.m.s	un
programme	N.C.m.s	programme
permettant	VG	permettre
d'	P	de
avoir	VW	avoir
une	D.ind.f.s	un
vue	N.C.f.s	vue
rapide	A.qual.f.s	rapide
de	P	de
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
données	N.C.f.p	donnée
.	PONCT.S	.

•	N.C.m.s	•
C'	CL.suj.3.m.s	ce
est	V.P.3.s	être
un	PRO.ind.m.s	un
des	P+D.def.m.p	du
outils	N.C.m.p	outil
les	D.def.m.p	le
plus	ADV.-	plus
connus	A.qual.m.p	connu
permettant	VG	permettre
de	P	de
manipuler	VW	manipuler
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
MySQL	N.P.m.s	Mysql
.	PONCT.S	.

•	N.C.m.s	•
PhpMyAdmin	N.P.m.s	Phpmyadmin
est	V.P.3.s	être
livré	VK.m.s	livrer
avec	P	avec
WAMP	N.P.m.s	Wamp
,	PONCT.W	,
et	C.C	et
presque	ADV.-	presque
tous	A.ind.m.p	tous
les	D.def.m.p	le
hébergeurs	N.C.m.p	hébergeur
permettent	V.P.3.p	permettre
d'	P	de
utiliser	VW	utiliser
phpMyAdmin	N.C.m.s	<unknown>
.	PONCT.S	.

(	PONCT.W	(
chemin	N.C.m.s	chemin
d'	P	de
accès	N.C.m.s	accès
:	PONCT.W	:
http://localhost:8888/phpMyAdmin	N.C.m.s	<unknown>
)	PONCT.W	)
MySQL	N.P.m.s	Mysql
avec	P	avec
PHP	N.P.m.s	Php
2	A.card.m.s	@card@
.	PONCT.S	.

Script	N.C.m.s	script
PHP	N.C.m.s	php
•	D.card.f.p	•
Etapes	N.C.f.p	etape
pour	P	pour
utiliser	VW	utiliser
une	D.ind.f.s	un
base	N.C.f.s	base
des	P+D.def.f.p	du
données	N.C.f.p	donnée
1	A.card.f.s	@card@
)	PONCT.W	)
Connexion	N.C.f.s	connexion
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
MySQL	N.P.m.s	Mysql
2	A.card.m.s	@card@
)	PONCT.W	)
Envoi	N.C.m.s	envoi
des	P+D.def.f.p	du
requêtes	N.C.f.p	requête
SQL	N.P.m.s	Sql
(	PONCT.W	(
select	N.C.m.s	select
,	PONCT.W	,
insert	A.qual.m.s	insert
into	ET	into
...	PONCT.W	<unknown>
)	PONCT.W	)
3	A.card.m.s	@card@
)	PONCT.W	)
Récupération	N.C.f.s	récupération
des	P+D.def.m.p	du
résultats	N.C.m.p	résultat
4	N.card.f.s	@card@
)	PONCT.W	)
Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
MySQLi	N.P.m.s	Mysqli
•	N.P.m.s	•
Connexion	N.C.f.s	connexion
à	P	à
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
MySQL	N.P.m.s	Mysql
à	P	à
travers	N.C.m.p	travers
mysqli	N.C.m.s	<unknown>
–	P	à
Toute	A.ind.f.s	tout
la	D.def.f.s	le
communication	N.C.f.s	communication
avec	P	avec
la	D.def.f.s	le
BdD	N.P.f.s	Bdd
passe	V.P.3.s	passer
par	P	par
un	D.ind.m.s	un
objet	N.C.m.s	objet
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
«	P	à
mysqli	N.C.m.s	<unknown>
»	N.C.m.s	»
–	N.C.m.s	–
La	D.def.f.s	le
connexion	N.C.f.s	connexion
s'	CL.refl.3.f.s	se
effectue	V.P.3.s	effectuer
à	P	à
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
cet	D.dem.m.s	ce
objet	N.C.m.s	objet
(	PONCT.W	(
new	ET	new
)	PONCT.W	)
$idcon	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$	N.card.m.s	$
host	N.C.m.s	host
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
objet	N.C.m.s	objet
identifiant	A.qual.m.s	identifiant
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
nom	N.C.m.s	nom
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
utilisateur	A.qual.m.s	utilisateur
autorisé	VK.m.s	autoriser
à	P	à
accéder	VW	accéder
à	P	à
la	D.def.f.s	le
base	A.qual.f.s	bas
mot	N.C.f.s	mot
de	P	de
passe	N.C.f.s	passe
base	A.qual.f.s	bas
de	P	de
données	N.C.f.p	donnée
•	P	à
Toute	D.ind.f.s	tout
connexion	N.C.f.s	connexion
ouverte	A.qual.f.s	ouvert
doit	V.P.3.s	devoir
être	VW	être
fermée	VK.f.s	fermer
$bool	N.P.x.s	<unknown>
=	PONCT.W	=
$idcon->close	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
on	CL.suj.3.m.s	on
demande	V.P.3.s	demander
à	P	à
l'	D.def.m.s	le
objet	N.C.m.s	objet
mysqli	A.qual.m.s	<unknown>
de	P	de
fermer	VW	fermer
la	D.def.f.s	le
connexion	N.C.f.s	connexion
MySQLi	N.P.m.s	Mysqli
Astuce	N.P.m.s	Astuce
:	PONCT.W	:
placer	VW	placer
ces	D.dem.f.p	ce
informations	N.C.f.p	information
dans	P	dans
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
et	C.C	et
faire	VW	faire
require	VW	require
(	PONCT.W	(
ou	C.C	ou
include	N.C.m.s	include
)	PONCT.W	)
"	PONCT.W	"
fichier	A.qual.m.s	fichier
"	PONCT.W	"
Création	N.C.f.s	création
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
connexion	N.C.f.s	connexion
L'	D.def.m.s	le
attribut	N.C.m.s	attribut
connect_errno	N.P.m.s	<unknown>
de	P	de
indique	V.P.3.s	indiquer
si	C.S	si
la	D.def.f.s	le
connexion	N.C.f.s	connexion
a	V.P.3.s	avoir
bien	ADV.-	bien
été	VK.m.s	être
établie	VK.f.s	établir
En	P	en
cas	N.C.m.s	cas
de	P	de
problème	N.C.m.s	problème
,	PONCT.W	,
on	CL.suj.3.m.s	on
arrête	V.P.3.s	arrêter
avec	P	avec
la	D.def.f.s	le
fonction	N.C.f.s	fonction
die	VK.f.s	dire
.	PONCT.S	.

Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$host	ET	çhost
=	PONCT.W	=
"	PONCT.W	"
localhost	ET	localhost
"	PONCT.W	"
;	PONCT.W	;
$user	VW	çuser
=	PONCT.W	=
"	PONCT.W	"
root	N.C.m.s	root
"	PONCT.W	"
;	PONCT.W	;
$mdp	ET	<unknown>
=	PONCT.W	=
"	PONCT.W	"
root	N.C.m.s	root
"	PONCT.W	"
;	PONCT.W	;
$bdd	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
clientsBD	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$mysqli	N.P.m.s	<unknown>
=	ET	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$host	N.P.m.s	<unknown>
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$mysqli->connect_errno	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
die	N.C.f.s	die
(	PONCT.W	(
"	PONCT.W	"
<p>	N.C.m.s	<unknown>
Impossible	A.qual.m.s	impossible
de	P	de
connecter	VW	connecter
à	P	à
$bdd	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$mysqli->connect_error	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Connecté	VK.m.s	connecter
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
$host	N.P.m.s	<unknown>
,	PONCT.W	,
à	P	à
la	D.def.f.s	le
base	N.C.f.s	base
$bdd	N.P.m.s	<unknown>
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$mysqli->close()	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
MySQLi	N.P.m.s	Mysqli
•	V.P.3.s	être
Envoie	N.C.f.s	envoie
de	P	de
requêtes	N.C.f.p	requête
à	P	à
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
Résultat	N.C.m.s	résultat
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
exécution	N.C.f.s	exécution
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
sur	P	sur
l'	D.def.m.s	le
objet	N.C.m.s	objet
connexion	N.C.f.s	connexion
Requête	V.P.3.s	requêter
SQL	N.P.m.s	Sql
à	P	à
exécuter	VW	exécuter
–	P	à
Requête	N.C.f.s	requête
SQL	N.P.f.s	Sql
:	PONCT.W	:
•	N.C.m.s	•
S'	C.S	si
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
d'	P	de
un	D.ind.m.s	un
SELECT	N.C.m.s	select
,	PONCT.W	,
le	D.def.m.s	le
résultat	N.C.m.s	résultat
correspond	V.P.3.s	correspondre
aux	P+D.def.f.p	au
données	N.C.f.p	donnée
fournies	VK.f.p	fournir
par	P	par
la	D.def.f.s	le
requête	N.C.f.s	requête
(	PONCT.W	(
objet	N.C.m.s	objet
mysqli_result	N.C.m.s	<unknown>
)	PONCT.W	)
•	P	à
Sinon	N.P.m.s	Sinon
(	PONCT.W	(
INSERT	N.P.m.s	Insert
,	PONCT.W	,
UPDATE	N.P.m.s	Update
,	PONCT.W	,
DELETE	N.P.f.s	Delete
...	PONCT.W	<unknown>
)	PONCT.W	)
,	PONCT.W	,
le	D.def.m.s	le
résultat	N.C.m.s	résultat
sera	V.F.3.s	être
TRUE	N.P.f.s	True
si	C.S	si
la	D.def.f.s	le
requête	N.C.f.s	requête
est	V.P.3.s	être
bien	ADV.-	bien
exécutée	VK.f.s	exécuter
,	PONCT.W	,
FALSE	N.P.m.s	False
sinon	C.C	sinon
<form	N.P.m.s	<unknown>
name="formNouveauClient	ET	<unknown>
"	PONCT.W	"
action="coursPHP-18.php	ET	<unknown>
"	PONCT.W	"
method="POST">	A.ind.m.s	methodçostëë
...	PONCT.W	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="nom	ET	nameçnom
"	PONCT.W	"
...	PONCT.W	<unknown>
/>	ET	<unknown>
...	PONCT.W	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="email	ET	nameçemail
"	PONCT.W	"
...	PONCT.W	<unknown>
/>	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
PHP	N.P.m.s	Php
connexion.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
function	N.C.f.s	function
connexion()	N.C.f.s	connexionçë
{	P	à
$host	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
localhost	ET	localhost
"	PONCT.W	"
;	PONCT.W	;
$user	VW	çuser
=	PONCT.W	=
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$mdp	ET	<unknown>
=	PONCT.W	=
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$bdd	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
clientsBD	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$mysqli	N.P.m.s	<unknown>
=	ET	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$host	N.P.m.s	<unknown>
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$mysqli->connect_errno	N.P.x.s	<unknown>
)	PONCT.W	)
{	P	à
die	N.C.f.s	die
(	PONCT.W	(
"	PONCT.W	"
<p>	N.C.m.s	<unknown>
Impossible	A.qual.m.s	impossible
...	PONCT.W	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$mysqli->connect_error	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
}	D.card.m.p	}
return	N.C.m.s	return
$mysqli	N.P.m.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
coursPHP-18.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
!	PONCT.S	!

empty($_POST["nom"])	N.C.m.s	emptyëççpostçëëë
AND	I	and
!	PONCT.S	!

empty($_POST["e	N.C.m.s	emptyçostçëe
mail	N.C.m.s	mail
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	CL.obj.3.m.s	c
require	VW	require
"	PONCT.W	"
connexion.php	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
connexion()	N.C.f.s	connexionçë
;	PONCT.W	;
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
$_POST["nom	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$email	N.P.m.s	<unknown>
=	PONCT.W	=
$_POST["email	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$adr	N.P.x.s	<unknown>
=	PONCT.W	=
$_POST["adresse	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$id	ET	çid
=	V.P.3.s	être
'	PONCT.W	'
\N	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
/*	N.C.m.p	<unknown>
auto-increment	ADV.-	auto-increment
*/	PONCT.W	<unknown>
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
INSERT	N.P.m.s	Insert
INTO	N.P.m.s	Into
client	ET	client
(	PONCT.W	(
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	N.C.f.s	adresse
)	PONCT.W	)
VALUES	N.P.m.s	Values
(	PONCT.W	(
'	PONCT.W	'
$id	N.P.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$nom	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$email	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$adr	N.P.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
"	PONCT.W	"
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

$result	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<p>Désolée	N.P.f.s	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
Vous	CL.suj.2.m.p	vous
êtes	V.P.2.p	être
le	D.def.m.s	le
client	N.C.m.s	client
numéro	A.qual.m.s	numéro
<i>	A.ind.m.s	çië
"	PONCT.W	"
.	PONCT.S	.

$mysqli->insert_id	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</i></p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	D.card.m.s	}
$mysqli->close()	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
...	PONCT.S	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
MySQLi	N.P.m.s	Mysqli
•	P	à
Récupération	N.C.f.s	récupération
des	P+D.def.f.p	du
données	N.C.f.p	donnée
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.m.s	<unknown>
(	PONCT.W	(
"	PONCT.W	"
SELECT	N.P.m.s	Select
*	ET	*
FROM	N.P.m.s	From
table	V.P.3.s	tabler
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
–	V.P.3.s	être
Les	D.def.f.p	le
requêtes	N.C.f.p	requête
SELECT	N.P.m.s	Select
fournissent	V.P.3.p	fournir
des	D.ind.f.p	du
données	N.C.f.p	donnée
–	P	à
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
le	D.def.m.s	le
résultat	N.C.m.s	résultat
(	PONCT.W	(
ligne	N.C.f.s	ligne
à	P	à
ligne	N.C.f.s	ligne
)	PONCT.W	)
à	P	à
l'	D.def.f.s	le
aide	N.C.f.s	aide
des	P+D.def.f.p	du
opérations	N.C.f.p	opération
fetch_*	N.P.m.s	Fetchëë
–	N.C.m.s	–
Chaque	D.ind.m.s	chaque
appel	N.C.m.s	appel
à	P	à
fetch_*	N.P.m.s	Fetchëë
retourne	V.P.3.s	retourner
la	D.def.f.s	le
prochaine	A.qual.f.s	prochain
ligne	N.C.f.s	ligne
•	N.P.m.s	•
Ligne	N.P.m.s	Ligne
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
à	P	à
indice	N.C.m.s	indice
:	PONCT.W	:
$result->fetch_row	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
•	N.P.x.s	•
Ligne	N.P.m.s	Ligne
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
:	PONCT.W	:
$result->fetch_assoc	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
•	N.P.x.s	•
Ligne	N.P.m.s	Ligne
dans	P	dans
un	D.ind.m.s	un
objet	N.C.m.s	objet
:	PONCT.W	:
$result->fetch_object	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
;	PONCT.W	;
connexion.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
function	N.C.f.s	function
connexion()	N.C.f.s	connexionçë
{	N.C.m.s	{
...	PONCT.W	<unknown>
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$host	N.P.m.s	<unknown>
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
...	PONCT.W	<unknown>
return	N.C.m.s	return
$mysqli	N.P.m.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	C.S	>
On	CL.suj.3.m.s	on
exécute	V.P.3.s	exécuter
la	D.def.f.s	le
requête	N.C.f.s	requête
avec	P	avec
l'	D.def.f.s	le
opération	N.C.f.s	opération
$mysqli->query	N.P.m.s	<unknown>
L'	D.def.f.s	le
opération	N.C.f.s	opération
$result->fetch_object	N.P.m.s	<unknown>
récupère	V.P.3.s	récupérer
la	D.def.f.s	le
prochaine	A.qual.f.s	prochain
ligne	N.C.f.s	ligne
,	PONCT.W	,
FAUX	N.P.m.s	Faux
s'	C.S	si
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
y	CL.obj.3.m.s	y
reste	V.P.3.s	rester
plus	ADV.neg	plus
de	D.ind.f.p	de
lignes	N.C.f.p	ligne
.	PONCT.S	.

Chaque	D.ind.m.s	chaque
attribut	N.C.m.s	attribut
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
devient	V.P.3.s	devenir
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
$ligne	A.qual.m.s	çligne
coursPHP-19.php	N.P.x.s	<unknown>
<	A.ind.m.s	<
?	PONCT.S	?

php	ADV.-	php
require	VW	require
"	PONCT.W	"
connexion.php	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
connexion()	N.C.f.s	connexionçë
;	PONCT.W	;
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.C.m.s	select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	V.P.3.s	adresser
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

$result	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Desolée	N.P.f.s	Desolée
...	PONCT.W	<unknown>
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	N.C.m.s	{
...	PONCT.W	<unknown>
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.P.m.s	<unknown>
=	PONCT.W	=
$result->fetch_object()	N.P.x.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
...	PONCT.W	<unknown>
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->id	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->nom	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->email	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne->adresse	N.P.f.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
...	PONCT.S	<unknown>
}	N.C.m.s	}
...	PONCT.S	<unknown>
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
MySQLi	N.P.m.s	Mysqli
La	D.def.f.s	le
même	A.qual.f.s	même
requête	N.C.f.s	requête
avec	P	avec
récupération	N.C.f.s	récupération
des	P+D.def.f.p	du
informations	N.C.f.p	information
•	N.C.m.s	•
...	PONCT.W	<unknown>
par	P	par
tableau	N.C.m.s	tableau
à	P	à
indice	N.C.m.s	indice
...	PONCT.W	<unknown>
$sql	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.C.m.s	select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	V.P.3.s	adresser
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
...	PONCT.W	<unknown>
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.P.m.s	<unknown>
=	PONCT.W	=
$result->fetch_row()	N.P.x.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
...	PONCT.W	<unknown>
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[0	N.C.m.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[1	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[2	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne[3	N.C.f.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
...	PONCT.W	<unknown>
}	N.C.m.s	}
...	PONCT.W	<unknown>
ça	PRO.dem.m.s	cela
commence	V.P.3.s	commencer
toujours	ADV.-	toujours
par	P	par
0	D.card.m.s	@card@
•	N.C.m.s	•
...	PONCT.W	<unknown>
par	P	par
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
...	PONCT.W	<unknown>
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.P.m.s	Select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	V.P.3.s	adresser
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
...	PONCT.W	<unknown>
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.P.m.s	<unknown>
=	PONCT.W	=
$result->fetch_assoc	N.P.x.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
)	PONCT.W	)
{	N.C.m.s	{
...	PONCT.W	<unknown>
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['id	N.C.m.s	çligneç'id
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['nom	N.P.m.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['email	N.C.m.s	çligne-'email
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$ligne['adresse	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
."<td>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
...	PONCT.W	<unknown>
}	N.C.m.s	}
...	PONCT.W	<unknown>
chaque	D.ind.m.s	chaque
attribut	N.C.m.s	attribut
est	V.P.3.s	être
accessible	A.qual.m.s	accessible
par	P	par
son	D.poss.m.s	son
nom	N.C.m.s	nom
MySQLi	N.P.m.s	Mysqli
•	D.card.f.p	•
Autres	A.ind.f.p	autre
informations	N.C.f.p	information
peuvent	V.P.3.p	pouvoir
être	VW	être
récupérées	VK.f.p	récupérer
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
mysqli_result	N.P.m.s	<unknown>
(	PONCT.W	(
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.m.s	<unknown>
(	PONCT.W	(
...	PONCT.W	<unknown>
)	PONCT.W	)
)	PONCT.W	)
–	D.card.m.s	–
Combien	ADV.int	combien
de	P	de
lignes	N.C.f.p	ligne
et	C.C	et
colonnes	N.C.f.p	colonne
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
récupérer	VW	récupérer
•	P	à
$nblignes	N.C.m.p	<unknown>
=	PONCT.W	=
$result->num_rows	N.P.x.s	<unknown>
;	PONCT.W	;
•	D.card.m.s	•
$nbcol	N.P.x.s	<unknown>
=	PONCT.W	=
$result->field_count	N.P.x.s	<unknown>
;	PONCT.W	;
–	P	à
Les	D.def.m.p	le
noms	N.C.m.p	nom
des	P+D.def.f.p	du
colonnes	N.C.f.p	colonne
(	PONCT.W	(
attributs	N.C.m.p	attribut
)	PONCT.W	)
dans	P	dans
le	D.def.m.s	le
résultat	N.C.m.s	résultat
•	P	à
$colonnes	N.P.x.s	<unknown>
=	PONCT.W	=
$result->fetch_fields()	N.P.x.s	<unknown>
;	PONCT.W	;
MySQLi	N.P.m.s	Mysqli
A	P	à
partir	VW	partir
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
$result	N.P.m.s	<unknown>
,	PONCT.W	,
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
récupérer	VW	récupérer
le	D.def.m.s	le
nombre	N.C.m.s	nombre
de	P	de
lignes	N.C.f.p	ligne
(	PONCT.W	(
attribut	N.C.m.s	attribut
num_rows	ET	numärow
)	PONCT.W	)
et	C.C	et
de	P	de
colonnes	N.C.f.p	colonne
par	P	par
ligne	N.C.f.s	ligne
(	PONCT.W	(
attribut	N.C.m.s	attribut
field_count	N.C.m.s	field-count
)	PONCT.W	)
.	PONCT.S	.

...	PONCT.W	<unknown>
$sql	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.C.m.s	select
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	V.P.3.s	adresser
FROM	N.P.m.s	From
client	V.P.3.p	clier
ORDER	N.P.m.s	Order
BY	N.P.m.s	By
nom	N.C.m.s	nom
"	PONCT.W	"
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query	N.P.x.s	<unknown>
(	PONCT.W	(
$sql	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
...	PONCT.W	<unknown>
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Nous	CL.suj.1.m.p	nous
avons	V.P.1.p	avoir
"	PONCT.W	"
.	PONCT.S	.

$result->num_rows	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
clients	N.C.m.p	client
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
Il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
"	PONCT.W	"
.	PONCT.S	.

$result->field_count	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
attributs	N.C.m.p	attribut
par	P	par
client	N.C.m.s	client
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
...	PONCT.W	<unknown>
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
récupérer	VW	récupérer
les	D.def.f.p	le
colonnes	N.C.f.p	colonne
.	PONCT.S	.

Chaque	D.ind.f.s	chaque
colonne	N.C.f.s	colonne
est	V.P.3.s	être
un	D.ind.m.s	un
objet	N.C.m.s	objet
et	C.C	et
l'	D.def.m.s	le
attribut	N.C.m.s	attribut
name	A.qual.m.s	name
donne	V.P.3.s	donner
son	D.poss.m.s	son
nom	N.C.m.s	nom
.	PONCT.S	.

La	D.def.f.s	le
ligne	N.C.f.s	ligne
aussi	ADV.-	aussi
est	V.P.3.s	être
un	D.ind.m.s	un
objet	N.C.m.s	objet
dont	PRO.rel.m.s	dont
les	D.def.m.p	le
attributs	N.C.m.p	attribut
correspondent	V.P.3.p	correspondre
aux	P+D.def.f.p	au
colonnes	N.C.f.p	colonne
.	PONCT.S	.

On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
utiliser	VW	utiliser
un	D.ind.m.s	un
foreach	N.C.m.s	foreach
pour	P	pour
accéder	VW	accéder
à	P	à
la	D.def.f.s	le
valeur	N.C.f.s	valeur
des	P+D.def.m.p	du
attributs	N.C.m.p	attribut
.	PONCT.S	.

...	PONCT.W	<unknown>
$titres	N.C.m.p	<unknown>
=	PONCT.W	=
$result->fetch_fields()	N.P.x.s	<unknown>
;	PONCT.W	;
foreach	ET	foreach
(	PONCT.W	(
$titres	N.C.m.p	<unknown>
as	ET	as
$colonne	N.P.f.s	<unknown>
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
<th>	N.P.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$colonne->name	N.C.f.s	ccolonne-äname
.	PONCT.S	.

"	PONCT.W	"
</th>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.C.m.s	çligne
=	PONCT.W	=
$result->fetch_object()	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<tr>	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach	N.C.m.s	foreach
(	PONCT.W	(
$ligne	N.C.f.s	çligne
as	ET	as
$colonne=>$val	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$val	N.P.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.p	}
}	ET	}
echo	ET	echo
"	PONCT.W	"
</tr>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.p	}
...	PONCT.W	<unknown>
MySQLi	N.P.m.s	Mysqli
$mysql	N.P.m.s	<unknown>
=	ET	=
new	ET	new
mysqli	N.C.m.s	<unknown>
(	PONCT.W	(
$host	N.P.m.s	<unknown>
,	PONCT.W	,
$user	N.P.m.s	<unknown>
,	PONCT.W	,
$mdp	N.C.m.s	<unknown>
,	PONCT.W	,
$bdd	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
$mysql->connect_errno()	N.P.x.s	<unknown>
;	PONCT.W	;
$sql	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
INSERT	N.P.m.s	Insert
INTO	N.P.m.s	Into
client	ET	client
(	PONCT.W	(
id	ET	id
,	PONCT.W	,
nom	N.C.m.s	nom
,	PONCT.W	,
email	N.C.m.s	email
,	PONCT.W	,
adresse	N.C.f.s	adresse
)	PONCT.W	)
VALUES	N.P.m.s	Values
(	PONCT.W	(
'	PONCT.W	'
$id	N.P.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$nom	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$email	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
$adr	N.P.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
"	PONCT.W	"
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysql->query($sql)	N.P.x.s	<unknown>
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.C.f.s	çligne
=	PONCT.W	=
$result->fetch_object()	N.P.x.s	<unknown>
)	PONCT.W	)
{	P+D.def.m.s	c
$ligne->id	N.P.f.s	<unknown>
;	PONCT.W	;
$ligne->nom	N.P.x.s	<unknown>
;	PONCT.W	;
}	P+D.def.m.s	c
$mysql->close()	N.P.x.s	<unknown>
;	PONCT.W	;
MySQLi	N.P.m.s	Mysqli
•	N.P.x.s	•
Pour	P	pour
debugger	N.C.m.s	debugger
:	PONCT.W	:
(	PONCT.W	(
sauf	P	sauf
en	P	en
production	N.C.f.s	production
)	PONCT.W	)
/*	D.card.m.p	<unknown>
Test	N.P.m.s	Test
d'	P	de
erreur	N.C.f.s	erreur
a	V.P.3.s	avoir
la	D.def.f.s	le
connexion	N.C.f.s	connexion
*/	PONCT.W	<unknown>
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli("localhost	ET	mysqliççlocalhost
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
nobody	ET	nobody
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(mysqli_connect_errno())	N.C.m.s	<unknown>
{	P+D.def.m.s	c
printf("La	N.P.x.s	Printfëla
connexion	N.C.f.s	connexion
a	V.P.3.s	avoir
échoué	VK.m.s	échouer
:	PONCT.W	:
%s\n	N.C.m.s	çsën
"	PONCT.W	"
,	PONCT.W	,
mysqli_connect_error())	N.C.m.s	mysqliëconnectëerçëë
;	PONCT.W	;
exit()	N.C.m.s	exitçf
;	PONCT.W	;
}	N.C.m.p	}
/*	N.C.m.p	<unknown>
Test	V.P.3.s	tenir
d'	P	de
erreur	N.C.f.s	erreur
lors	ADV.-	lors
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
*/	PONCT.W	<unknown>
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

$mysqli->query("SET	N.C.m.s	<unknown>
a=1	V.P.3.s	avoir
"	PONCT.W	"
)	PONCT.W	)
)	PONCT.W	)
{	N.C.m.s	{
print_r($mysqli->error_list)	N.C.m.s	print-rçmysqli-çerrorçlistà
;	PONCT.W	;
}	P+D.def.m.s	c
PDO	N.P.x.s	Pdo
•	N.C.m.s	•
PDO	N.P.x.s	Pdo
:	PONCT.W	:
PHP	N.P.m.s	Php
Data	N.P.m.s	Data
Object	N.C.m.s	object
•	P	à
Pilote	N.P.m.s	Pilote
générique	V.P.3.s	génériquer
multi-SGBD	N.P.x.s	<unknown>
–	P+D.def.m.s	c
MySQL	N.P.m.s	Mysql
,	PONCT.W	,
PostGreSQL	N.P.x.s	Postgresql
,	PONCT.W	,
Oracle	N.P.m.s	Oracle
,	PONCT.W	,
DB2	N.P.m.s	<unknown>
,	PONCT.W	,
SQL	N.P.m.s	Sql
Server	N.P.m.s	Server
,	PONCT.W	,
...	PONCT.W	<unknown>
•	N.P.m.s	•
Similaire	N.C.m.s	similaire
à	P	à
MySQLi	N.P.m.s	Mysqli
–	P	à
Quelques	D.ind.f.p	quelque
variations	N.C.f.p	variation
dans	P	dans
la	D.def.f.s	le
syntaxe	N.C.f.s	syntaxe
...	PONCT.S	<unknown>
–	N.C.m.s	–
...	PONCT.W	<unknown>
et	C.C	et
dans	P	dans
le	D.def.m.s	le
comportement	N.C.m.s	comportement
PDO	N.P.x.s	Pdo
:	PONCT.W	:
Connexion	N.C.f.s	connexion
•	P	à
Connexion	N.C.f.s	connexion
se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
avec	P	avec
une	D.ind.f.s	un
«	P	à
connection	N.C.f.s	connection
string	N.C.m.s	string
»	P	à
contenant	VG	contenir
les	D.def.f.p	le
informations	N.C.f.p	information
de	P	de
la	D.def.f.s	le
BDD	N.P.f.s	Bdd
:	PONCT.W	:
–	P	à
Host	N.P.m.s	Host
:	PONCT.W	:
Localhost	N.P.m.s	Localhost
(	PONCT.W	(
ou	C.C	ou
127.0.0.1	PRO.card.f.p	@card@
)	PONCT.W	)
–	P+D.def.m.s	c
Port	N.P.m.s	Port
:	PONCT.W	:
9306	D.card.f.p	@card@
$connexion	N.C.f.s	çconnexion
=	PONCT.W	=
new	ET	new
PDO(	N.P.x.s	Pdoë
"	PONCT.W	"
mysql:host=mon_serveur	N.P.m.s	<unknown>
;	PONCT.W	;
port=mon_port	N.C.m.s	portämonçport
;	PONCT.W	;
dbname=ma_bdd	ET	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
mon_login	ET	monçlogin
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
mon_pass	N.C.m.p	monçpass
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
PDO	N.P.x.s	Pdo
:	PONCT.W	:
Ecriture	N.P.f.s	Ecriture
/	PONCT.W	@card@
EXEC	N.P.f.s	Exec
•	P	à
Requête	N.C.f.s	requête
d'	P	de
écriture	N.C.f.s	écriture
:	PONCT.W	:
INSERT	N.P.m.s	Insert
,	PONCT.W	,
UPDATE	N.P.m.s	Update
,	PONCT.W	,
DELETE	N.P.f.s	Delete
–	N.P.m.s	–
Se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
avec	P	avec
méthode	N.C.f.s	méthode
PDO::exec()	N.P.x.s	<unknown>
–	P	à
PAS	N.P.m.s	Pas
AVEC	P	avec
QUERY	N.P.m.s	Query
!	PONCT.S	!

–	P	à
Renvoie	V.P.3.s	renvoyer
le	D.def.m.s	le
nombre	N.C.m.s	nombre
de	P	de
modifications	N.C.f.p	modification
effectuées	VK.f.p	effectuer
(	PONCT.W	(
integer	ET	integer
)	PONCT.W	)
$requete	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
DELETE	N.P.m.s	Delete
FROM	N.P.m.s	From
ma_table	A.qual.m.s	maëtable
WHERE	N.P.m.s	Where
mon_champ	ET	monächamp
=	PONCT.W	=
ma_valeur	N.C.m.s	maëvaleur
"	PONCT.W	"
;	PONCT.W	;
$compteur	N.C.m.s	ccompteur
=	PONCT.W	=
$connexion->exec($requete)	N.P.x.s	Cconnexion-çexecuetequet
;	PONCT.W	;
PDO	N.P.x.s	Pdo
:	PONCT.W	:
Lecture	N.P.m.s	Lecture
/	PONCT.W	@card@
QUERY	N.P.m.s	Query
•	P+D.def.m.s	c
Requête	N.C.f.s	requête
de	P	de
lecture	N.C.f.s	lecture
:	PONCT.W	:
SELECT	N.P.m.s	Select
–	N.C.m.s	–
Se	CL.refl.3.f.s	se
fait	VK.m.s	faire
avec	P	avec
méthode	N.C.f.s	méthode
PDO::query()	N.P.m.s	<unknown>
–	P	à
PAS	N.P.m.s	Pas
AVEC	P	avec
EXEC	N.P.m.s	Exec
!	PONCT.S	!

–	P	à
Renvoie	V.P.3.s	renvoyer
les	D.def.m.p	le
résultats	N.C.m.p	résultat
(	PONCT.W	(
PDOStatement	N.C.m.s	pdostatement
)	PONCT.W	)
$requete	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.P.m.s	Select
*	N.C.m.p	*
FROM	N.P.m.s	From
ma_table	A.qual.m.s	maëtable
WHERE	N.P.m.s	Where
mon_champ	N.P.m.s	Monçchamp
=	PONCT.W	=
ma_valeur	N.C.m.s	maëvaleur
"	PONCT.W	"
;	PONCT.W	;
$resultats	N.C.m.p	<unknown>
=	PONCT.W	=
$connexion->query($requete)	N.P.x.s	Cconnexion-ëqueryçueteë
;	PONCT.W	;
PDO	N.P.x.s	Pdo
:	PONCT.W	:
Résultats	N.C.m.p	résultat
/	PONCT.W	@card@
FETCH	N.P.m.s	Fetch
•	P+D.def.m.s	c
Lecture	N.C.f.s	lecture
de	P	de
la	D.def.f.s	le
réponse	N.C.f.s	réponse
d'	P	de
une	D.ind.f.s	un
requête	N.C.f.s	requête
de	P	de
lecture	N.C.f.s	lecture
:	PONCT.W	:
fetch	N.C.m.s	fetch
•	P	à
fetch()	N.C.m.s	fetchëë
:	PONCT.W	:
renvoie	V.P.3.s	renvoyer
la	D.def.f.s	le
ligne	N.C.f.s	ligne
suivante	A.qual.f.s	suivant
des	P+D.def.m.p	du
résultats	N.C.m.p	résultat
•	P	à
fetchObject()	N.C.m.s	fetchobjectçë
:	PONCT.W	:
renvoie	V.P.3.s	renvoyer
la	D.def.f.s	le
ligne	N.C.f.s	ligne
suivante	A.qual.f.s	suivant
en	P	en
tant	ADV.-	tant
qu'	C.S	que
objet	N.C.m.s	objet
•	P	à
fetchAll()	N.C.m.s	fetchallçë
:	PONCT.W	:
renvoie	V.P.3.s	renvoyer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
de	P	de
toutes	A.ind.f.p	tout
les	D.def.f.p	le
réponses	N.C.f.p	réponse
$ligne	N.P.x.s	<unknown>
=	PONCT.W	=
$resultats->fetch(PDO::FETCH_ASSOC)	N.P.m.s	<unknown>
;	PONCT.W	;
<-	P	à-
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
$ligne	N.P.m.s	<unknown>
=	PONCT.W	=
$resultats->fetch(PDO::FETCH_NUM)	N.P.m.s	<unknown>
;	PONCT.W	;
<-	P	à-
tableau	N.C.m.s	tableau
simple	A.qual.m.s	simple
$ligne	N.C.m.s	çligne
=	PONCT.W	=
$resultats->fetch(PDO::FETCH_BOTH)	N.P.m.s	<unknown>
;	PONCT.W	;
<-	P	à-
les	D.def.m.p	le
2	A.card.m.s	@card@
(	PONCT.W	(
par	P	par
défaut	N.C.m.s	défaut
)	PONCT.W	)
$ligne	N.P.m.s	<unknown>
=	PONCT.W	=
$resultats->fetch(PDO::FETCH_OBJ)	N.P.m.s	<unknown>
;	PONCT.W	;
<-	ET	--
objet	N.C.m.s	objet
PDO	N.P.x.s	Pdo
:	PONCT.W	:
Fermeture	N.P.x.s	Fermeture
connexion	N.C.f.s	connexion
•	P	à
Avant	VG	avoir
de	P	de
refaire	VW	refaire
une	D.ind.f.s	un
requête	N.C.f.s	requête
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
libérer	VW	libérer
le	D.def.m.s	le
curseur	N.C.m.s	curseur
en	P	en
place	N.C.f.s	place
$resultats->closeCursor()	N.P.x.s	<unknown>
;	PONCT.W	;
PDO	N.P.x.s	Pdo
$connexion	N.C.f.s	çconnexion
=	PONCT.W	=
new	ET	new
PDO(	N.P.x.s	Pdoë
"	PONCT.W	"
mysql:host=mon_serveur	N.P.m.s	<unknown>
;	PONCT.W	;
port=mon_port	N.C.m.s	portämonçport
;	PONCT.W	;
dbname=ma_bdd	ET	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
mon_login	ET	monçlogin
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
mon_pass	N.C.m.p	monçpass
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$requete	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.P.m.s	Select
*	N.C.m.p	*
FROM	N.P.m.s	From
ma_table	A.qual.m.s	maëtable
WHERE	N.P.m.s	Where
mon_champ	N.P.m.s	Monçchamp
=	PONCT.W	=
ma_valeur	N.C.m.s	maëvaleur
"	PONCT.W	"
;	PONCT.W	;
$resultats	N.C.m.p	<unknown>
=	PONCT.W	=
$connexion->query($requete)	N.C.m.s	cconnexion--queryçuete
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$ligne	N.P.m.s	<unknown>
=	PONCT.W	=
$resultats->fetch(PDO::FETCH_OBJ)	N.P.m.s	<unknown>
)	PONCT.W	)
{	P+D.def.m.s	c
$ligne->id	N.P.f.s	<unknown>
;	PONCT.W	;
$ligne->nom	N.P.x.s	<unknown>
;	PONCT.W	;
}	ET	}
$resultats->closeCursor()	N.P.x.s	<unknown>
;	PONCT.W	;
PDO	N.P.x.s	Pdo
:	PONCT.W	:
...	PONCT.W	<unknown>
or	N.C.m.s	or
die()	V.P.3.s	diecer
•	V.P.3.s	être
Pour	P	pour
débugger	VW	débugger
sa	D.poss.f.s	son
requête	N.C.f.s	requête
,	PONCT.W	,
ne	ADV.neg	ne
pas	ADV.neg	pas
oublier	VW	oublier
de	P	de
demander	VW	demander
à	P	à
PHP	N.P.m.s	Php
d'	P	de
afficher	VW	afficher
l'	D.def.f.s	le
erreur	N.C.f.s	erreur
s'	C.S	si
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
en	CL.obj.3.m.s	en
a	V.P.3.s	avoir
!	PONCT.S	!

–	N.C.m.s	–
Sauf	P	sauf
en	P	en
production	N.C.f.s	production
!	PONCT.S	!

Une	D.ind.f.s	un
fois	N.C.f.s	foi
le	D.def.m.s	le
site	N.C.m.s	site
en	P	en
ligne	N.C.f.s	ligne
,	PONCT.W	,
il	CL.suj.3.m.s	il
ne	ADV.neg	ne
faut	V.P.3.s	falloir
jamais	ADV.neg	jamais
afficher	VW	afficher
les	D.def.f.p	le
erreurs	N.C.f.p	erreur
...	PONCT.W	<unknown>
–	N.C.m.s	–
Risque	N.C.m.s	risque
qu'	C.S	que
un	D.ind.m.s	un
pirate	N.C.m.s	pirate
récupère	V.P.3.s	récupérer
les	D.def.f.p	le
informations	N.C.f.p	information
de	P	de
debug	N.C.m.s	debug
$resultats	N.C.m.p	<unknown>
=	PONCT.W	=
$connexion->query($requete)	N.P.m.s	Cconnexion-ëqueryçueteëe
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

$resultats	N.C.m.p	<unknown>
)	PONCT.W	)
{	P+D.def.m.s	c
print_r($connexion-	N.C.m.s	print-r-connexion-
>errorInfo())	N.P.m.s	<unknown>
;	PONCT.W	;
}	P+D.def.m.s	c
Programmation	N.C.f.s	programmation
Orienté	N.P.m.s	Orienté
Objet	N.P.m.s	Objet
(	PONCT.W	(
POO	N.P.m.s	Poo
)	PONCT.W	)
«	P	à
Classe	N.P.m.s	Classe
et	C.C	et
Objet	N.P.m.s	Objet
»	N.C.m.s	»
•	N.C.m.s	•
Une	D.ind.f.s	un
classe	N.C.f.s	classe
permet	V.P.3.s	permettre
la	D.def.f.s	le
définition	N.C.f.s	définition
d'	P	de
un	D.ind.m.s	un
nouveau	A.qual.m.s	nouveau
type	N.C.m.s	type
de	P	de
variable	N.C.f.s	variable
qui	PRO.rel.m.s	qui
rassemble	V.P.3.s	rassembler
plusieurs	D.ind.m.p	plusieurs
attributs	N.C.m.p	attribut
.	PONCT.S	.

–	P	à
elle	CL.suj.3.f.s	elle
permet	V.P.3.s	permettre
également	ADV.-	également
la	D.def.f.s	le
définition	N.C.f.s	définition
de	P	de
fonctions	N.C.f.p	fonction
manipulant	VG	manipuler
ces	D.dem.m.p	ce
attributs	N.C.m.p	attribut
,	PONCT.W	,
en	P	en
POO	N.P.f.s	Poo
,	PONCT.W	,
ces	D.dem.f.p	ce
fonctions	N.C.f.p	fonction
s'	CL.refl.3.f.p	se
appellent	V.P.3.p	appeler
des	D.ind.f.p	du
‘	A.card.f.p	‘
méthodes	N.C.f.p	méthode
’	N.C.m.s	’
.	PONCT.S	.

•	N.C.m.s	•
Un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
une	D.ind.f.s	un
instance	N.C.f.s	instance
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
.	PONCT.S	.

Un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
alors	ADV.-	alors
assimilé	VK.m.s	assimiler
à	P	à
une	D.ind.f.s	un
variable	N.C.f.s	variable
et	C.C	et
sa	D.poss.f.s	son
classe	N.C.f.s	classe
au	P+D.def.m.s	au
type	N.C.m.s	type
de	P	de
cet	D.dem.m.s	ce
objet	N.C.m.s	objet
.	PONCT.S	.

Programmation	N.C.f.s	programmation
Orienté	N.P.m.s	Orienté
Objet	N.P.m.s	Objet
(	PONCT.W	(
POO	N.P.m.s	Poo
)	PONCT.W	)
«	P	à
concepts	N.C.m.p	concept
de	P	de
base	N.C.f.s	base
»	P	à
La	D.def.f.s	le
POO	N.P.f.s	Poo
a	V.P.3.s	avoir
deux	D.card.m.p	deux
buts	N.C.m.p	but
:	PONCT.W	:
•	P	à
Faciliter	VW	faciliter
la	D.def.f.s	le
réutilisation	N.C.f.s	réutilisation
du	P+D.def.m.s	du
code	N.C.m.s	code
déjà	ADV.-	déjà
écrit	VK.m.s	écrire
grâce	N.C.f.s	grâce
à	P	à
l'	D.def.m.s	le
héritage	N.C.m.s	héritage
•	P+D.def.m.s	c
Encapsulation	N.C.f.s	encapsulation
des	P+D.def.f.p	du
données	N.C.f.p	donnée
et	C.C	et
les	D.def.m.p	le
traitements	N.C.m.p	traitement
correspondants	A.qual.m.p	correspondant
Programmation	N.C.f.s	programmation
Orienté	N.P.m.s	Orienté
Objet	N.P.m.s	Objet
(	PONCT.W	(
POO	N.P.m.s	Poo
)	PONCT.W	)
«	D.card.m.p	«
concepts	N.C.m.p	concept
de	P	de
base	N.C.f.s	base
»	N.C.m.s	»
•	P	à
Faciliter	VW	faciliter
la	D.def.f.s	le
réutilisation	N.C.f.s	réutilisation
du	P+D.def.m.s	du
code	N.C.m.s	code
déjà	ADV.-	déjà
écrit	VK.m.s	écrire
grâce	N.C.f.s	grâce
à	P	à
l'	D.def.m.s	le
héritage	N.C.m.s	héritage
:	PONCT.W	:
–	P	à
L'	D.def.m.s	le
héritage	N.C.m.s	héritage
permet	V.P.3.s	permettre
,	PONCT.W	,
à	P	à
partir	VW	partir
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
déjà	ADV.-	déjà
existante	A.qual.f.s	existant
,	PONCT.W	,
d'	P	de
en	CL.obj.3.m.s	en
créer	VW	créer
une	D.ind.f.s	un
nouvelle	N.C.f.s	nouvelle
qui	PRO.rel.f.s	qui
reprendra	V.F.3.s	reprendre
ses	D.poss.f.p	son
caractéristiques	N.C.f.p	caractéristique
et	C.C	et
de	P	de
les	CL.obj.3.m.p	le
adapter	VW	adapter
aux	P+D.def.m.p	au
besoins	N.C.m.p	besoin
sans	P	sans
modifier	VW	modifier
la	D.def.f.s	le
classe	N.C.f.s	classe
de	P	de
base	N.C.f.s	base
.	PONCT.S	.

–	P	à
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
alors	ADV.-	alors
de	P	de
redéfinir	VW	redéfinir
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
dans	P	dans
des	D.ind.f.p	du
classes	N.C.f.p	classe
héritant	VG	hériter
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
de	P	de
base	N.C.f.s	base
sauf	P	sauf
si	C.S	si
cette	D.dem.f.s	ce
méthode	N.C.f.s	méthode
a	V.P.3.s	avoir
été	VK.m.s	être
définie	VK.f.s	définir
comme	P	comme
final	N.C.m.s	final
.	PONCT.S	.

L'	D.def.m.s	le
appel	N.C.m.s	appel
de	P	de
la	D.def.f.s	le
méthode	N.C.f.s	méthode
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
possible	A.qual.m.s	possible
sans	P	sans
se	CL.refl.3.m.s	se
soucier	VW	soucier
de	P	de
son	D.poss.m.s	son
type	N.C.m.s	type
intrinsèque	A.qual.m.s	intrinsèque
:	PONCT.W	:
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
du	P+D.def.m.s	du
polymorphisme	N.C.m.s	polymorphisme
.	PONCT.S	.

•	P	à
Le	D.def.m.s	le
polymorphisme	N.C.m.s	polymorphisme
traite	V.P.3.s	traiter
de	P	de
la	D.def.f.s	le
capacité	N.C.f.s	capacité
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
à	P	à
posséder	VW	posséder
plusieurs	D.ind.f.p	plusieurs
formes	N.C.f.p	forme
.	PONCT.S	.

ex	N.C.m.s	ex
:	PONCT.W	:
ma_fonction(int	N.C.m.s	maëfonctionçint
i	ADV.-	i
)	PONCT.W	)
ma_fonction(string	N.C.m.s	maëfonctionçstring
str	A.qual.m.s	<unknown>
)	PONCT.W	)
Programmation	N.C.f.s	programmation
Orienté	N.P.m.s	Orienté
Objet	N.P.m.s	Objet
(	PONCT.W	(
POO	N.P.m.s	Poo
)	PONCT.W	)
«	P	à
concepts	N.C.m.p	concept
de	P	de
base	N.C.f.s	base
»	N.C.m.s	»
•	P+D.def.m.s	c
Encapsulation	N.C.f.s	encapsulation
des	P+D.def.f.p	du
données	N.C.f.p	donnée
et	C.C	et
les	D.def.m.p	le
traitements	N.C.m.p	traitement
correspondants	A.qual.m.p	correspondant
.	PONCT.S	.

–	P	à
L'	D.def.f.s	le
encapsulation	N.C.f.s	encapsulation
permet	V.P.3.s	permettre
de	P	de
regrouper	VW	regrouper
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
d'	P	de
attributs	N.C.m.p	attribut
avec	P	avec
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
de	P	de
méthodes	N.C.f.p	méthode
en	P	en
une	D.ind.f.s	un
classe	N.C.f.s	classe
permettant	VG	permettre
de	P	de
les	CL.obj.3.m.p	le
manipuler	VW	manipuler
.	PONCT.S	.

PHP	N.C.m.s	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
PHP	N.P.m.s	Php
5	N.card.m.s	@card@
est	V.P.3.s	être
un	D.ind.m.s	un
langage	N.C.m.s	langage
«	P	à
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
»	P	à
–	P	à
Manipulation	N.C.f.s	manipulation
de	P	de
classes	N.C.f.p	classe
et	C.C	et
d'	P	de
objets	N.C.m.p	objet
Définition	N.C.f.s	définition
de	P	de
classe	N.C.f.s	classe
class	N.C.m.p	class
Personne	N.P.x.s	Personne
Visibilité	N.C.f.s	visibilité
:	PONCT.W	:
private	A.qual.f.s	privat
$nom	N.P.m.s	<unknown>
Définition	N.C.f.s	définition
d'	P	de
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
Opération	N.C.f.s	opération
:	PONCT.W	:
public	A.qual.m.s	public
function	N.C.f.s	function
...	PONCT.S	<unknown>
Accès	N.C.m.s	accès
à	P	à
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
$this->attribut	N.P.m.s	<unknown>
Retourner	VW	retourner
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
return	A.qual.f.s	return
valeur	N.C.f.s	valeur
;	PONCT.W	;
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
class	ET	class
Personne	PRO.neg.m.s	personne
{	P	à
private	A.qual.f.s	privat
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
public	ET	public
function	N.C.f.s	function
setNom	N.P.m.s	<unknown>
(	PONCT.W	(
$nouvNom	N.C.m.s	<unknown>
)	PONCT.W	)
{	P	à
$this->nom	N.P.m.s	<unknown>
=	PONCT.W	=
$nouvNom	N.P.m.s	<unknown>
;	PONCT.W	;
}	ET	}
public	A.qual.m.s	public
function	N.C.f.s	function
getNom	N.P.m.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
{	P	à
return	N.C.m.s	return
$this->nom	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
}	N.C.m.s	}
POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	P	à
Visibilité	N.C.f.s	visibilité
d'	P	de
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
ou	C.C	ou
d'	P	de
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
»	N.C.m.s	»
•	N.C.m.s	•
«	N.C.m.s	«
public	N.C.m.s	public
»	N.C.m.s	»
:	PONCT.W	:
si	C.S	si
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
ou	C.C	ou
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
est	V.P.3.s	être
public	A.qual.m.s	public
,	PONCT.W	,
alors	ADV.-	alors
on	CL.suj.3.m.s	on
pourra	V.F.3.s	pouvoir
y	CL.obj.3.m.s	y
avoir	VW	avoir
accès	N.C.m.s	accès
depuis	P	depuis
n'	ADV.neg	ne
importe	V.P.3.s	importer
où	PRO.rel.f.s	où
.	PONCT.S	.

•	N.C.m.s	•
«	P	à
private	A.qual.f.s	privat
»	N.C.m.s	»
:	PONCT.W	:
impose	V.P.3.s	imposer
quelques	D.ind.f.p	quelque
restrictions	N.C.f.p	restriction
.	PONCT.S	.

L'	D.def.m.s	le
accès	N.C.m.s	accès
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
et	C.C	et
méthodes	N.C.f.p	méthode
est	V.P.3.s	être
seulement	ADV.-	seulement
possible	A.qual.m.s	possible
depuis	P	depuis
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
.	PONCT.S	.

–	P	à
Ne	ADV.-	ne
mettez	V.Y.2.p	mettre
jamais	ADV.neg	jamais
le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
avec	P	avec
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
visibilité	N.C.f.s	visibilité
private	A.qual.f.s	privat
sinon	ADV.-	sinon
,	PONCT.W	,
elle	CL.suj.3.f.s	elle
ne	ADV.neg	ne
pourra	V.F.3.s	pouvoir
jamais	ADV.neg	jamais
être	VW	être
appelée	VK.f.s	appeler
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
ne	ADV.neg	ne
pourrez	V.P.2.p	pourrer
donc	ADV.-	donc
pas	ADV.neg	pas
instancier	A.qual.m.s	instancier
votre	D.poss.f.s	votre
classe	N.C.f.s	classe
•	N.C.m.s	•
«	N.C.m.s	«
protected	N.C.m.s	protected
»	N.C.m.s	»
a	V.P.3.s	avoir
le	D.def.m.s	le
même	A.qual.m.s	même
effet	N.C.m.s	effet
que	C.S	que
private	A.qual.f.s	privat
,	PONCT.W	,
à	P	à
l'	D.def.f.s	le
exception	N.C.f.s	exception
que	PRO.rel.f.s	que
toutes	A.ind.f.p	tout
les	D.def.f.p	le
classes	N.C.f.p	classe
filles	A.qual.f.p	fille
auront	V.F.3.p	avoir
accès	N.C.m.s	accès
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
protégés	VK.m.p	protéger
.	PONCT.S	.

PHP	N.C.m.s	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
Objets	N.C.m.p	objet
–	P	à
Création	N.C.f.s	création
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
:	PONCT.W	:
$obj	N.P.m.s	<unknown>
=	ET	=
new	ET	new
classe()	N.C.f.p	classeëë
;	PONCT.W	;
Création	N.C.f.s	création
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
$toto	N.P.m.s	<unknown>
=	P	à
new	ET	new
Personne	PRO.neg.m.s	personne
(	PONCT.W	(
)	PONCT.W	)
Accès	N.C.m.s	accès
aux	P+D.def.f.p	au
opérations	N.C.f.p	opération
publiques	A.qual.f.p	publique
$toto->setNom("Toto")	N.P.x.s	<unknown>
$toto	N.P.m.s	<unknown>
->	ET	-
getNom	N.P.m.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
Impossible	A.qual.m.s	impossible
d'	P	de
accéder	VW	accéder
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
privés	A.qual.m.p	privé
...	PONCT.S	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$toto	ET	<unknown>
=	P	à
new	ET	new
Personne()	N.C.m.s	personneëë
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
...	PONCT.W	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$toto->nom	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
blablabla	ET	blablabla
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$toto->nom	N.P.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
Erreur	N.C.f.s	erreur
car	C.C	car
l'	D.def.m.s	le
attribut	N.C.m.s	attribut
«	P	à
nom	N.C.m.s	nom
»	N.C.m.s	»
est	V.P.3.s	être
privé	VK.m.s	priver
!	PONCT.S	!

!	PONCT.S	!

<html>	N.C.m.p	<unknown>
<head>	N.P.m.s	<unknown>
...	PONCT.S	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
class	ET	class
Personne	PRO.neg.m.s	personne
{	P	à
private	A.qual.f.s	privat
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
...	PONCT.W	<unknown>
}	P	à
//fin	N.C.m.s	ééfin
classe	V.P.3.s	classer
Personne	PRO.neg.m.s	personne
?	PONCT.S	?

>	P	à
</head>	N.P.x.s	<unknown>
<body>	N.P.x.s	<unknown>
...	PONCT.S	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$toto	ET	<unknown>
=	P	à
new	ET	new
Personne()	N.C.m.s	personneëë
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
Objet	N.P.m.s	Objet
<i>Personne</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
...	PONCT.W	<unknown>
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$toto->nom	N.P.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</htlml>	N.P.x.s	<unknown>
PHP	N.P.m.s	Php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
:	PONCT.W	:
–	N.C.m.s	–
Héritage	N.P.m.s	Héritage
:	PONCT.W	:
class	ET	class
SousClasse	N.P.m.s	Sousclasse
extends	ET	extend
SuperClasse	V.P.3.s	superclasser
La	D.def.f.s	le
classe	N.C.f.s	classe
Employe	N.P.m.s	Employe
hérite	V.P.3.s	hériter
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
Personne	ET	personne
class	ET	class
Employe	ET	employe
extends	ET	extend
Personne	PRO.neg.m.s	personne
On	CL.suj.3.m.s	on
rajoute	V.P.3.s	rajouter
un	D.ind.m.s	un
nouvel	A.qual.m.s	nouveau
attribut	N.C.m.s	attribut
private	A.qual.m.s	privat
$salaire	N.P.m.s	<unknown>
Et	C.C	et
des	D.ind.f.p	du
nouvelles	A.qual.f.p	nouveau
opérations	N.C.f.p	opération
public	A.qual.m.s	public
function	N.C.f.s	function
augmentation	N.C.f.s	augmentation
public	A.qual.f.s	public
function	N.C.f.s	function
getSalaire	A.qual.f.s	getsalaire
class	ET	class
Employe	ET	employe
extends	ET	extend
Personne	PRO.neg.m.s	personne
{	P	à
private	A.qual.f.s	privat
$salaire	N.C.m.s	çsalaire
=	PONCT.W	=
1000	N.card.m.s	@card@
;	PONCT.W	;
public	ET	public
function	N.C.f.s	function
augmentation	N.C.f.s	augmentation
(	PONCT.W	(
$perc	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
if	N.C.m.s	if
(	PONCT.W	(
$perc	N.P.m.s	<unknown>
>	N.C.m.s	>
0	A.card.m.s	@card@
)	PONCT.W	)
{	P	à
$this->salaire	N.P.x.s	<unknown>
=	PONCT.W	=
$this->salaire	N.P.x.s	<unknown>
$this->salaire*$perc	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
}	ET	}
public	A.qual.m.s	public
function	N.C.f.s	function
getSalaire()	N.C.m.s	<unknown>
{	P	à
return	N.C.m.s	return
$this->salaire	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.card.m.s	}
}	P	à
Fichier	N.P.m.s	Fichier
Employe.php	N.P.m.s	<unknown>
PHP	N.P.m.s	Php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
On	CL.suj.3.m.s	on
importe	V.P.3.s	importer
la	D.def.f.s	le
définition	N.C.f.s	définition
des	P+D.def.f.p	du
classes	N.C.f.p	classe
Employe	N.P.m.s	Employe
et	C.C	et
Personne	N.P.m.s	Personne
Toto	N.P.m.s	Toto
est	V.P.3.s	être
un	D.ind.m.s	un
Employé	N.C.m.s	employé
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
donc	ADV.-	donc
une	D.ind.f.s	un
Personne	N.C.f.s	personne
Toto	N.P.m.s	Toto
possède	V.P.3.s	posséder
un	D.ind.m.s	un
salaire	N.C.m.s	salaire
(	PONCT.W	(
Employe	N.P.f.s	Employe
)	PONCT.W	)
,	PONCT.W	,
mais	C.C	mais
aussi	ADV.-	aussi
un	D.ind.m.s	un
nom	N.C.m.s	nom
(	PONCT.W	(
Personne	PRO.neg.m.s	personne
)	PONCT.W	)
La	D.def.f.s	le
classe	N.C.f.s	classe
Employe	N.P.m.s	Employe
hérite	V.P.3.s	hériter
tous	A.ind.m.p	tous
les	D.def.m.p	le
attributs	N.C.m.p	attribut
et	C.C	et
opérations	N.C.f.p	opération
de	P	de
Personne	N.P.f.s	Personne
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
include	A.qual.m.s	includ
"	PONCT.W	"
Employe.php	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$toto	ET	<unknown>
=	ET	=
new	ET	new
Employe()	N.P.m.s	<unknown>
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
$toto->augmentation(0.10)	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<i>	ET	çië
nom	N.C.m.s	nom
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<i>	ET	çië
salaire	N.C.m.s	salaire
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getSalaire()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
€	N.C.m.s	€
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.P.m.s	Php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
<html>	N.P.m.s	<unknown>
<head>	N.P.m.s	<unknown>
.	PONCT.S	.

.	PONCT.S	.

.	PONCT.S	.

</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<h1>Objets	N.C.m.p	<unknown>
en	P	en
PHP</h1>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
include	A.qual.m.s	includ
"	PONCT.W	"
Employe.php	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$toto	ET	<unknown>
=	ET	=
new	ET	new
Employe()	N.P.m.s	<unknown>
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
$toto->augmentation(0.10)	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>Objet	N.P.m.s	<unknown>
Employe	N.P.m.s	Employe
:	PONCT.W	:
</p>	N.C.m.p	<unknown>
<ul>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
<i>	P	àià
nom	N.C.m.s	nom
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</li>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<li>	N.P.m.s	<unknown>
<i>	P	àià
salaire	N.C.m.s	salaire
</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getSalaire()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
€	N.C.m.s	€
</li>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
</ul>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
PHP	N.P.m.s	Php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
–	P	à
Méthode	N.P.m.s	Méthode
constructeur	N.C.m.s	constructeur
:	PONCT.W	:
__construct	N.C.m.s	çäconstruct
–	P+D.def.m.s	c
Redéfinition	N.C.f.s	redéfinition
d'	P	de
une	D.ind.f.s	un
opération	N.C.f.s	opération
Le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
est	V.P.3.s	être
appelé	VK.m.s	appeler
chaque	D.ind.f.s	chaque
fois	N.C.f.s	foi
qu'	C.S	que
un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
créé	VK.m.s	créer
(	PONCT.W	(
new	ET	new
)	PONCT.W	)
Redéfinition	N.C.f.s	redéfinition
de	P	de
l'	D.def.f.s	le
opération	N.C.f.s	opération
getSalaire	A.qual.f.s	getsalaire
parent::getSalaire	A.qual.f.s	<unknown>
correspond	V.P.3.s	correspondre
à	P	à
l'	D.def.f.s	le
opération	N.C.f.s	opération
getSalaire	A.qual.f.s	getsalaire
définie	VK.f.s	définir
par	P	par
la	D.def.f.s	le
super-classe	N.C.f.s	super-classe
(	PONCT.W	(
Employe	N.P.m.s	Employe
)	PONCT.W	)
class	ET	class
Manager	N.P.m.s	Manager
extends	ET	extend
Employe	ET	employe
{	P	à
private	A.qual.f.s	privat
$bonus	N.P.m.s	<unknown>
;	PONCT.W	;
function	N.C.f.s	function
__construct	N.P.x.s	<unknown>
(	PONCT.W	(
$bon	N.P.m.s	<unknown>
)	PONCT.W	)
{	N.P.m.s	{
$this->bonus	N.P.m.s	<unknown>
=	PONCT.W	=
$bon	N.P.m.s	<unknown>
;	PONCT.W	;
}	ET	}
public	A.qual.m.s	public
function	N.C.f.s	function
getSalaire()	N.C.m.s	<unknown>
{	P	à
return	N.C.m.s	return
parent::getSalaire()	N.P.x.s	<unknown>
$this->bonus	N.P.m.s	<unknown>
;	PONCT.W	;
}	ET	}
public	A.qual.m.s	public
function	N.C.f.s	function
setBonus	N.P.m.s	<unknown>
(	PONCT.W	(
$nouvBon	N.C.m.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
...	PONCT.W	<unknown>
}	N.C.m.s	}
public	A.qual.m.s	public
function	N.C.f.s	function
getBonus	N.P.m.s	Getbonus
(	PONCT.W	(
)	PONCT.W	)
{	N.C.m.s	{
...	PONCT.W	<unknown>
}	N.C.m.s	}
}	P	à
PHP	N.P.m.s	Php
orienté	VK.m.s	orienter
objets	N.C.m.p	objet
•	P	à
Classes	N.P.m.s	Classes
&	PONCT.W	&
objets	N.C.m.p	objet
Appel	N.P.m.s	Appel
au	P+D.def.m.s	au
constructeur	N.C.m.s	constructeur
:	PONCT.W	:
function	N.C.f.s	function
__construct	N.P.x.s	<unknown>
(	PONCT.W	(
$bon	N.P.m.s	<unknown>
)	PONCT.W	)
{	N.P.m.s	{
$this->bonus	N.P.m.s	<unknown>
=	PONCT.W	=
$bon	N.P.m.s	<unknown>
;	PONCT.W	;
}	D.card.m.s	}
Appel	N.C.m.s	appel
à	P	à
l'	D.def.f.s	le
opération	N.C.f.s	opération
getSalaire	A.qual.f.s	getsalaire
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
Manager	N.P.m.s	Manager
<	N.P.m.s	<
?	PONCT.S	?

php	ADV.-	php
require	VW	require
"	PONCT.W	"
Manager.php	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$toto	N.P.x.s	<unknown>
=	PONCT.W	=
new	ET	new
Manager(400)	N.P.m.s	Managerç0
;	PONCT.W	;
$toto->setNom("Toto")	N.P.x.s	<unknown>
;	PONCT.W	;
$toto->augmentation(0.10)	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p><i>Manager</i>	N.P.x.s	<unknown>
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$toto->getNom()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
,	PONCT.W	,
salaire	N.C.m.s	salaire
"	PONCT.W	"
.	PONCT.S	.

$toto->getSalaire()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
€	N.C.m.s	€
"	PONCT.W	"
.	PONCT.S	.

"	PONCT.W	"
,	PONCT.W	,
bonus	N.C.m.p	bonus
"	PONCT.W	"
.	PONCT.S	.

$toto->getBonus()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	P	à
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
:	PONCT.W	:
:	PONCT.W	:
»	N.card.m.s	»
L'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
de	P	de
résolution	N.C.f.s	résolution
de	P	de
portée	N.C.f.s	portée
«	N.C.m.s	«
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
(	PONCT.W	(
double	A.qual.m.s	double
deux	D.card.m.p	deux
points	N.C.m.p	point
)	PONCT.W	)
fournit	V.P.3.s	fournir
un	D.ind.m.s	un
moyen	N.C.m.s	moyen
d'	P	de
accéder	VW	accéder
aux	P+D.def.m.p	au
membres	N.C.m.p	membre
statiques	A.qual.m.p	statique
ou	C.C	ou
constantes	A.qual.m.p	constant
,	PONCT.W	,
ainsi	ADV.-	ainsi
qu'	C.S	que
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
ou	C.C	ou
méthodes	N.C.f.p	méthode
surchargées	VK.f.p	surcharger
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
.	PONCT.S	.

•	P	à
Le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	P	à
self	N.C.m.s	self
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
méthodes	N.C.f.p	méthode
et	C.C	et
attributs	N.C.m.p	attribut
statiques	A.qual.m.p	statique
depuis	P	depuis
la	D.def.f.s	le
classe	N.C.f.s	classe
•	P	à
Le	D.def.m.s	le
mot	N.C.m.s	mot
clé	N.C.f.s	clé
«	CL.obj.3.m.s	c
parent	V.P.3.p	parer
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
propriétés	N.C.f.p	propriété
ou	C.C	ou
aux	P+D.def.f.p	au
méthodes	N.C.f.p	méthode
surchargées	VK.f.p	surcharger
ou	C.C	ou
constantes	A.qual.f.p	constant
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
depuis	P	depuis
la	D.def.f.s	le
classe	N.C.f.s	classe
fille	A.qual.f.s	fille
•	P	à
Pour	P	pour
référencer	VW	référencer
ces	D.dem.m.p	ce
éléments	N.C.m.p	élément
en	P	en
dehors	N.C.m.p	dehors
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
,	PONCT.W	,
utilisez	V.Y.2.p	utiliser
plutôt	ADV.-	plutôt
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
«	P	à
nomClasse	N.C.m.s	nomclasse
:	PONCT.W	:
:	PONCT.W	:
»	P+D.def.m.s	c
PHP	N.C.m.s	php
:	PONCT.W	:
Sessions	N.C.f.p	session
•	P	à
Mécanisme	N.C.m.s	mécanisme
de	P	de
sessions	N.C.f.p	session
–	P	à
Chaque	D.ind.f.s	chaque
visite	N.C.f.s	visite
à	P	à
un	D.ind.m.s	un
site	N.C.m.s	site
/	C.C	@card@
page	N.C.f.s	page
est	V.P.3.s	être
indépendante	A.qual.f.s	indépendant
–	P	à
Les	D.def.f.p	le
sessions	N.C.f.p	session
permettent	V.P.3.p	permettre
de	P	de
conserver	VW	conserver
les	D.def.f.p	le
informations	N.C.f.p	information
des	P+D.def.m.p	du
visiteurs	N.C.m.p	visiteur
entre	P	entre
les	D.def.f.p	le
pages	N.C.f.p	page
–	P	à
Les	D.def.f.p	le
informations	N.C.f.p	information
sur	P	sur
les	D.def.f.p	le
sessions	N.C.f.p	session
sont	V.P.3.p	être
stockées	VK.f.p	stocker
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
•	P	à
Fonctionnement	N.C.m.s	fonctionnement
général	A.qual.m.s	général
1	A.card.f.s	@card@
)	PONCT.W	)
Ouverture	N.C.f.s	ouverture
de	P	de
session	N.C.f.s	session
:	PONCT.W	:
session_start()	N.C.f.s	sessionästartëë
•	N.C.m.s	•
Chaque	D.ind.m.s	chaque
utilisateur	N.C.m.s	utilisateur
reçoit	V.P.3.s	recevoir
un	D.ind.m.s	un
identifiant	A.qual.m.s	identifiant
transmis	N.C.m.s	transmis
entre	P	entre
les	D.def.f.p	le
pages	N.C.f.p	page
2	A.card.m.s	@card@
)	PONCT.W	)
Définition	N.C.f.s	définition
des	P+D.def.f.p	du
variables	N.C.f.p	variable
de	P	de
sessions	N.C.f.p	session
(	PONCT.W	(
données	N.C.f.p	donnée
)	PONCT.W	)
•	P	à
Les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
sont	V.P.3.p	être
transmises	VK.f.p	transmettre
de	P	de
page	N.C.f.s	page
à	P	à
page	N.C.f.s	page
•	N.C.m.s	•
$_SESSION["variable	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
valeur	N.C.f.s	valeur
;	PONCT.W	;
3	PRO.card.f.p	@card@
)	PONCT.W	)
Fermeture	N.C.f.s	fermeture
de	P	de
session	N.C.f.s	session
:	PONCT.W	:
session_destroy()	N.C.m.s	sessionädestroyçë
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
Login	N.P.m.s	Login
&	PONCT.W	&
mdp	N.C.m.s	<unknown>
différents	A.qual.m.p	différent
de	P	de
uml	A.qual.m.s	<unknown>
Login	N.P.m.s	Login
&	PONCT.W	&
mdp	ET	<unknown>
corrects	A.qual.m.p	correct
(	PONCT.W	(
uml	A.qual.m.s	<unknown>
/uml	N.C.m.s	<unknown>
)	PONCT.W	)
<	ET	<
form	ET	form
name=	N.C.m.s	nameç
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
action="coursPHP-23.php	ET	<unknown>
"	PONCT.W	"
method="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
>	P	à
<label	N.C.m.s	çlabel
>Login	N.P.m.s	<unknown>
:	PONCT.W	:
</label>	N.P.m.s	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="login	ET	nameçlogin
"	PONCT.W	"
maxlength="15	ET	<unknown>
"	PONCT.W	"
/>	ET	<unknown>
<br/>	ET	<unknown>
<label	ET	çlabel
>Mot	N.C.m.s	cmot
de	P	de
passe	N.C.f.s	passe
:	PONCT.W	:
</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="password	ET	typeëppassword
"	PONCT.W	"
name="mdp	ET	<unknown>
"	PONCT.W	"
maxlength="15	ET	<unknown>
"	PONCT.W	"
/>	ET	<unknown>
<br/>	ET	<unknown>
<input	ET	çinput
type="submit	ET	<unknown>
"	PONCT.W	"
value="OK	N.C.f.s	valueççok
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
Ouverture	N.C.f.s	ouverture
d'	P	de
une	D.ind.f.s	un
session	N.C.f.s	session
(	PONCT.W	(
au	P+D.def.m.s	au
début	N.C.m.s	début
de	P	de
chaque	D.ind.f.s	chaque
page	N.C.f.s	page
)	PONCT.W	)
Définition	N.C.f.s	définition
des	P+D.def.f.p	du
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
$_SESSION["var	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
Les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
contiennent	V.P.3.p	contenir
les	D.def.f.p	le
informations	N.C.f.p	information
qui	PRO.rel.f.p	qui
passeront	V.F.3.p	passer
de	P	de
page	N.C.f.s	page
en	P	en
page	N.C.f.s	page
.	PONCT.S	.

<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html>	N.P.x.s	<unknown>
<head>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</head>	N.P.m.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
$login	N.P.m.s	<unknown>
=	PONCT.W	=
$_POST["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$mdp	ET	<unknown>
=	PONCT.W	=
$_POST["mdp	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$login	N.C.m.s	çlogin
==	PONCT.W	<unknown>
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
AND	ET	and
$mdp	ET	<unknown>
==	ET	çù
"	PONCT.W	"
uml	A.qual.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
{	P+D.def.m.s	c
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
$login	N.P.m.s	<unknown>
;	PONCT.W	;
...	PONCT.W	<unknown>
echo	ET	echo
"	PONCT.W	"
<h1>Bienvenue	N.P.f.s	<unknown>
,	PONCT.W	,
cher	A.qual.m.s	cher
$login	N.C.m.s	çlogin
</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<h1>Desolé	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Page	N.C.f.s	page
accessible	A.qual.m.s	accessible
uniquement	ADV.-	uniquement
aux	P+D.def.m.p	au
membres	N.C.m.p	membre
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
Usage	N.P.m.s	Usage
des	P+D.def.f.p	du
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
$_SESSION["var	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html>	N.P.x.s	<unknown>
<head>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</head>	N.P.m.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
isset(	ET	<unknown>
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
AND	I	and
!	PONCT.S	!

empty(	N.C.m.s	emptyù
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	D.card.m.s	{
$login	N.C.m.s	çlogin
=	PONCT.W	=
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
...	PONCT.W	<unknown>
echo	ET	echo
"	PONCT.W	"
<p>Client	ET	çpçclient
<b>	ET	çbë
$login	N.P.m.s	<unknown>
</b>	N.P.x.s	<unknown>
:	PONCT.W	:
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
une	D.ind.f.s	un
page	N.C.f.s	page
pour	P	pour
les	D.def.m.p	le
abonnés	N.C.m.p	abonné
</p>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<h1>Desolé	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	ADV.-	-pà
Il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
privée	A.qual.f.s	privé
!	PONCT.S	!

!	PONCT.S	!

Il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
être	VW	être
membre	N.C.m.s	membre
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	N.C.m.s	>
...	PONCT.W	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
session	N.C.f.s	session
session_destroy()	N.P.x.s	Sessionädestroyçë
Ne	ADV.neg	ne
pas	ADV.neg	pas
oublier	VW	oublier
de	P	de
vider	VW	vider
les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
unset(	ET	<unknown>
$_SESSION[	N.P.x.s	<unknown>
"	PONCT.W	"
var	N.C.m.s	var
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html>	N.P.x.s	<unknown>
<head>	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
</head>	N.P.m.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
isset(	ET	<unknown>
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
AND	I	and
!	PONCT.S	!

empty(	N.C.m.s	emptyù
$_SESSION["login	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	N.C.m.s	{
...	PONCT.W	<unknown>
unset($_SESSION["login"])	N.C.m.s	<unknown>
;	PONCT.W	;
session_destroy()	N.C.m.s	sessionädestroyçë
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
<h1>Desolé	N.P.m.s	<unknown>
!	PONCT.S	!

</h1>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.m.s	<unknown>
Pas	ADV.neg	pas
de	P	de
connexion	N.C.f.s	connexion
active	A.qual.f.s	actif
.	PONCT.S	.

</p>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	N.C.m.s	>
...	PONCT.W	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Fonctions	N.C.f.p	fonction
avancées	VK.f.p	avancer
(	PONCT.W	(
rappel	N.C.m.s	rappel
)	PONCT.W	)
•	P	à
isset($var1	N.P.x.s	<unknown>
,	PONCT.W	,
$var2	N.P.m.s	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
)	PONCT.W	)
:	PONCT.W	:
Détermine	N.P.f.s	Détermine
si	C.S	si
une	D.ind.f.s	un
variable	N.C.f.s	variable
ou	C.C	ou
plusieurs	PRO.ind.f.p	plusieurs
sont	V.P.3.p	être
définies	VK.f.p	définir
et	C.C	et
sont	V.P.3.p	être
différentes	A.qual.f.p	différent
de	P	de
NULL	N.P.f.s	Null
•	P	à
unset($var1,$var2	N.P.x.s	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
)	PONCT.W	)
:	PONCT.W	:
Détruit	VK.m.s	détruire
les	D.def.f.p	le
variables	N.C.f.p	variable
•	P+D.def.m.s	c
empty($var)	N.C.m.s	emptyçüvarà
:	PONCT.W	:
Détermine	N.C.f.s	détermine
si	C.S	si
une	D.ind.f.s	un
variable	N.C.f.s	variable
est	V.P.3.s	être
vide	A.qual.f.s	vide
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
Sans	P	sans
session	N.C.f.s	session
,	PONCT.W	,
si	C.S	si
on	CL.suj.3.m.s	on
demande	V.P.3.s	demander
une	D.ind.f.s	un
page	N.C.f.s	page
web	N.C.m.s	web
,	PONCT.W	,
on	CL.suj.3.m.s	on
obtient	V.P.3.s	obtenir
une	D.ind.f.s	un
réponse	N.C.f.s	réponse
classique	A.qual.f.s	classique
:	PONCT.W	:
les	D.def.f.p	le
déclarations	N.C.f.p	déclaration
habituelles	A.qual.f.p	habituel
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
web	A.qual.m.s	web
,	PONCT.W	,
et	C.C	et
la	D.def.f.s	le
page	N.C.f.s	page
demandée	VK.f.s	demander
1	A.card.f.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
demande	V.P.3.s	demander
une	D.ind.f.s	un
page	N.C.f.s	page
web	N.C.m.s	web
classique	A.qual.m.s	classique
sans	P	sans
session	N.C.f.s	session
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
web	N.C.m.s	web
sur	P	sur
«	D.card.m.s	«
localhost	N.C.m.s	localhost
»	P	à
port	N.C.m.s	port
«	N.C.m.s	«
8888	D.card.m.p	@card@
»	N.C.m.p	»
2	A.card.m.s	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
répond	V.P.3.s	répondre
normalement	ADV.-	normalement
avec	P	avec
le	D.def.m.s	le
code	N.C.m.s	code
HTTP	N.P.m.s	Http
200	N.card.m.s	@card@
,	PONCT.W	,
puis	C.C	pui
avec	P	avec
diverses	D.ind.f.p	divers
valeurs	N.C.f.p	valeur
indiquant	VG	indiquer
les	D.def.m.p	le
plugins	N.C.m.p	plugin
dont	PRO.rel.m.p	dont
il	CL.suj.3.m.s	il
dispose	V.P.3.s	disposer
3	D.card.m.p	@card@
–	P	à
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
envoie	V.P.3.s	envoyer
finalement	ADV.-	finalement
la	D.def.f.s	le
page	N.C.f.s	page
web	N.C.m.s	web
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
?	PONCT.S	?

>	P	à
<html><body>	N.P.m.s	<unknown>
PageWeb	N.P.m.s	Pageweb
</body></html>	N.P.x.s	<unknown>
Statuts	N.C.m.p	statut
HTTP	N.P.m.s	Http
:	PONCT.W	:
classiques	N.C.m.p	classique
(	PONCT.W	(
rappel	N.C.m.s	rappel
)	PONCT.W	)
200	D.card.m.p	@card@
OK	C.C	ok
La	D.def.f.s	le
requête	N.C.f.s	requête
a	V.P.3.s	avoir
bien	ADV.-	bien
été	VK.m.s	être
reçue	VK.f.s	recevoir
,	PONCT.W	,
comprise	VK.f.s	comprendre
,	PONCT.W	,
et	C.C	et
exécutée	VK.f.s	exécuter
301	A.card.m.s	@card@
308	A.card.m.s	@card@
Permanent	N.C.m.s	permanent
Redirect	N.P.m.s	Redirect
La	D.def.f.s	le
ressource	N.C.f.s	ressource
a	V.P.3.s	avoir
été	VK.m.s	être
définitivement	ADV.-	définitivement
déplacée	VK.f.s	déplacer
à	P	à
une	D.ind.f.s	un
autre	A.ind.f.s	autre
URL	N.P.f.s	Url
302	D.card.m.p	@card@
307	D.card.m.p	@card@
Temporary	N.P.m.s	Temporary
Redirect	N.P.m.s	Redirect
La	D.def.f.s	le
ressource	N.C.f.s	ressource
est	V.P.3.s	être
temporairement	ADV.-	temporairement
déplacée	VK.f.s	déplacer
à	P	à
une	D.ind.f.s	un
autre	A.ind.f.s	autre
URL	N.P.f.s	Url
403	D.card.m.p	@card@
Forbidden	N.P.m.s	Forbidden
La	D.def.f.s	le
requête	N.C.f.s	requête
est	V.P.3.s	être
correcte	A.qual.f.s	correct
,	PONCT.W	,
mais	C.C	mais
le	D.def.m.s	le
client	N.C.m.s	client
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
le	D.def.m.s	le
droit	N.C.m.s	droit
de	P	de
demander	VW	demander
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
de	P	de
faire	VW	faire
cette	D.dem.f.s	ce
action	N.C.f.s	action
404	D.card.m.p	@card@
Not	N.P.m.s	Not
Found	V.P.3.s	foundre
La	D.def.f.s	le
ressource	N.C.f.s	ressource
visée	VK.f.s	viser
par	P	par
l'	D.def.f.s	le
URL	N.P.f.s	Url
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
été	VK.m.s	être
trouvée	VK.f.s	trouver
500	N.card.m.s	@card@
Internal	N.P.m.s	Internal
Server	VW	server
Error	N.P.m.s	Error
Erreur	N.C.f.s	erreur
générique/non	N.C.m.s	<unknown>
spécifique	A.qual.m.s	spécifique
...	PONCT.W	<unknown>
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	A.qual.m.s	web
a	V.P.3.s	avoir
échoué	VK.m.s	échouer
quelque	D.ind.f.s	quelque
chose	N.C.f.s	chose
à	P	à
un	D.ind.m.s	un
moment	N.C.m.s	moment
502	A.card.m.s	@card@
Bad	N.P.m.s	Bad
Gateway	N.P.m.s	Gateway
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
visé	VK.m.s	viser
n'	ADV.neg	ne
arrive	V.P.3.s	arriver
pas	ADV.neg	pas
à	P	à
contacter	VW	contacter
le	D.def.m.s	le
serveur	N.C.m.s	serveur
qui	PRO.rel.m.s	qui
traite	V.P.3.s	traiter
la	D.def.f.s	le
requête	N.C.f.s	requête
envoyée	VK.f.s	envoyer
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
1	A.card.f.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
demande	V.P.3.s	demander
une	D.ind.f.s	un
page	N.C.f.s	page
web	N.C.m.s	web
contenant	VG	contenir
une	D.ind.f.s	un
session	N.C.f.s	session
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
web	N.C.m.s	web
sur	P	sur
«	D.card.m.s	«
localhost	N.C.m.s	localhost
»	P	à
port	N.C.m.s	port
«	N.C.m.s	«
8888	N.card.m.s	@card@
»	N.C.m.s	»
2	A.card.m.s	@card@
–	N.C.m.p	–
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
répond	V.P.3.s	répondre
avec	P	avec
le	D.def.m.s	le
code	N.C.m.s	code
HTTP	N.P.m.s	Http
200	N.card.m.s	@card@
,	PONCT.W	,
puis	C.C	pui
il	CL.suj.3.m.s	il
envoie	V.P.3.s	envoyer
le	D.def.m.s	le
numéro	N.C.m.s	numéro
de	P	de
session	N.C.f.s	session
PHP	N.P.m.s	Php
(	PONCT.W	(
un	D.ind.m.s	un
ID	N.C.m.s	id
unique	A.qual.m.s	unique
)	PONCT.W	)
.	PONCT.S	.

Cet	D.dem.m.s	ce
ID	N.P.m.s	Id
sera	V.F.3.s	être
renvoyé	VK.m.s	renvoyer
par	P	par
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
avec	P	avec
chaque	D.ind.f.s	chaque
requête	N.C.f.s	requête
pour	P	pour
identifier	VW	identifier
le	D.def.m.s	le
3	A.card.m.s	@card@
–	P	à
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
envoie	V.P.3.s	envoyer
client	N.C.m.s	client
côté	VK.m.s	côter
serveur	N.C.m.s	serveur
finalement	ADV.-	finalement
la	D.def.f.s	le
page	N.C.f.s	page
web	N.C.m.s	web
Lorsque	N.P.m.s	Lorsque
PHP	N.P.m.s	Php
demande	V.P.3.s	demander
à	P	à
créer	VW	créer
une	D.ind.f.s	un
session	N.C.f.s	session
,	PONCT.W	,
son	D.poss.m.s	son
ID	N.P.m.s	Id
est	V.P.3.s	être
transmis	VK.m.s	transmettre
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
.	PONCT.S	.

Côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
web	N.C.m.s	web
&	PONCT.W	&
PHP	N.P.m.s	Php
:	PONCT.W	:
une	D.ind.f.s	un
liste	N.C.f.s	liste
des	P+D.def.f.p	du
sessions	N.C.f.p	session
actives	A.qual.f.p	actif
est	V.P.3.s	être
stockée	VK.f.s	stocker
dans	P	dans
des	D.ind.m.p	du
fichiers	N.C.m.p	fichier
(	PONCT.W	(
avec	P	avec
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
variables	N.C.f.p	variable
que	PRO.rel.f.p	que
l'	D.def.f.s	le
on	CL.suj.3.m.s	on
souhaite	V.P.3.s	souhaiter
conserver	VW	conserver
entre	P	entre
chaque	D.ind.f.s	chaque
page	N.C.f.s	page
web	N.C.m.s	web
)	PONCT.W	)
Côté	N.C.m.s	côté
client	N.C.m.s	client
:	PONCT.W	:
l'	D.def.m.s	le
ID	N.C.m.s	id
de	P	de
session	N.C.f.s	session
est	V.P.3.s	être
renvoyé	VK.m.s	renvoyer
pour	P	pour
pouvoir	VW	pouvoir
«	P	à
s'	CL.refl.3.m.s	se
identifier	VW	identifier
»	N.C.m.s	»
...	PONCT.W	<unknown>
ATTENTION	N.C.f.s	attention
!	PONCT.S	!

L'	D.def.m.s	le
ID	N.P.m.s	Id
est	V.P.3.s	être
visible	A.qual.m.s	visible
sur	P	sur
le	D.def.m.s	le
réseau	N.C.m.s	réseau
!	PONCT.S	!

Quelqu’un	PRO.ind.m.s	quelquçun
de	P	de
mal	N.C.m.s	mal
intentionné	VK.m.s	intentionner
peut	V.P.3.s	pouvoir
copier	VW	copier
cet	D.dem.m.s	ce
ID	N.P.m.s	Id
et	C.C	et
s'	CL.refl.3.m.s	se
identifier	VW	identifier
avec	P	avec
à	P	à
la	D.def.f.s	le
place	N.C.f.s	place
du	P+D.def.m.s	du
navigateur	N.C.m.s	navigateur
légitime	A.qual.m.s	légitime
...	PONCT.W	<unknown>
Pour	P	pour
faire	VW	faire
une	D.ind.f.s	un
session	N.C.f.s	session
«	P	à
à	P	à
peu	ADV.-	peu
près	ADV.-	près
»	P	à
sécurisée	VK.f.s	sécuriser
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
nécessaire	A.qual.m.s	nécessaire
de	P	de
s'	CL.refl.3.m.s	se
assurer	VW	assurer
que	C.S	que
l'	D.def.f.s	le
on	CL.suj.3.m.s	on
parle	V.P.3.s	parler
au	P+D.def.m.s	au
même	A.ind.m.s	même
navigateur	N.C.m.s	navigateur
(	PONCT.W	(
en	CL.obj.3.m.s	en
vérifier	VW	vérifier
l'	D.def.m.s	le
IP	N.P.m.s	Ip
du	P+D.def.m.s	du
client	N.C.m.s	client
,	PONCT.W	,
par	P	par
exemple	N.C.m.s	exemple
)	PONCT.W	)
.	PONCT.S	.

Nous	CL.suj.1.m.p	nous
ne	ADV.neg	ne
verrons	V.F.1.p	voir
pas	ADV.neg	pas
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
bonnes	A.qual.f.p	bon
pratiques	N.C.f.p	pratique
dans	P	dans
ce	D.dem.m.s	ce
cours	N.C.m.s	cours
.	PONCT.S	.

<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html><body>	N.P.m.s	<unknown>
PageWeb	N.P.m.s	Pageweb
</body></html>	N.P.x.s	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
•	P	à
Mécanisme	N.C.m.s	mécanisme
de	P	de
sessions	N.C.f.p	session
–	P+D.def.m.s	c
Base	N.P.m.s	Base
pour	P	pour
la	D.def.f.s	le
gestion	N.C.f.s	gestion
de	P	de
panier	N.C.m.s	panier
dans	P	dans
les	D.def.m.p	le
sites	N.C.m.p	site
de	P	de
e-commerce	N.C.m.s	e-commerce
–	P	à
Les	D.def.m.p	le
produits	N.C.m.p	produit
choisis	VK.m.p	choisir
par	P	par
le	D.def.m.s	le
client	N.C.m.s	client
sont	V.P.3.p	être
enregistrés	VK.m.p	enregistrer
en	P	en
tant	ADV.-	tant
que	C.S	que
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
–	C.S	–
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
y	CL.obj.3.m.s	y
garder	VW	garder
des	D.ind.m.p	du
objets	N.C.m.p	objet
SIMPLES	N.C.m.p	simple
Contenu	VK.m.s	contenir
du	P+D.def.m.s	du
panier	N.C.m.s	panier
est	V.P.3.s	être
gardé	VK.m.s	garder
dans	P	dans
les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
.	PONCT.S	.

Tableau	N.C.m.s	tableau
contenant	VG	contenir
des	D.ind.m.p	du
objets	N.C.m.p	objet
LigneProduit	N.P.m.s	Ligneproduit
.	PONCT.S	.

Chaque	D.ind.m.s	chaque
$_SESSION[$produit	N.C.m.s	çäsessionäëpuit
]	PONCT.W	]
contient	V.P.3.s	contenir
un	D.ind.m.s	un
objet	N.C.m.s	objet
.	PONCT.S	.

class	N.C.m.p	class
LigneProduit	VK.m.s	<unknown>
{	P	à
public	N.C.m.s	public
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
public	N.C.m.s	public
$qte	N.P.x.s	<unknown>
;	PONCT.W	;
/*	ET	<unknown>
constructeur	N.C.m.s	constructeur
*/	P	à
function	N.C.f.s	function
__construct(	N.P.x.s	<unknown>
$nom	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
$this->nom	N.P.x.s	<unknown>
=	PONCT.W	=
$nom	N.P.m.s	<unknown>
;	PONCT.W	;
$this->qte	N.P.m.s	<unknown>
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
}	N.C.m.s	}
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
Chaque	D.ind.m.s	chaque
produit	N.C.m.s	produit
choisi	VK.m.s	choisir
est	V.P.3.s	être
identifié	VK.m.s	identifier
par	P	par
un	D.ind.m.s	un
«	N.C.m.s	«
id	A.qual.m.s	id
»	N.C.m.s	»
(	PONCT.W	(
ici	ADV.-	ici
le	D.def.m.s	le
nom	N.C.m.s	nom
)	PONCT.W	)
.	PONCT.S	.

$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
va	V.P.3.s	aller
contenir	VW	contenir
un	D.ind.m.s	un
objet	N.C.m.s	objet
LigneProduit	VK.m.s	<unknown>
S'	C.S	si
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
aucun	D.neg.m.s	aucun
$_SESSION[$produit	N.C.m.s	çäsessionäëpuit
]	PONCT.W	]
,	PONCT.W	,
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
créer	VW	créer
un	D.ind.m.s	un
nouveau	A.qual.m.s	nouveau
objet	N.C.m.s	objet
LigneProduit	VK.m.s	<unknown>
S'	C.S	si
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
déjà	ADV.-	déjà
un	D.ind.m.s	un
$_SESSION[$produit	N.C.m.s	çäsessionäëpuit
]	PONCT.W	]
,	PONCT.W	,
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
juste	ADV.-	juste
augmenter	VW	augmenter
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
l'	D.def.m.s	le
attribut	N.C.m.s	attribut
«	N.C.m.s	«
qte	PRO.rel.m.s	<unknown>
»	N.C.m.s	»
dans	P	dans
l'	D.def.m.s	le
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
function	N.C.f.s	function
ajouterProduit($produit)	V.P.3.s	ajouterproduitç-produire
{	P	à
$qte	N.P.x.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

isset	A.qual.m.s	isset
(	PONCT.W	(
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	P+D.def.m.s	c
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
=	ET	=
new	ET	new
LigneProduit($produit)	N.P.x.s	<unknown>
;	PONCT.W	;
$qte	N.P.x.s	<unknown>
=	PONCT.W	=
$_SESSION[$produit]->qte	N.P.x.s	<unknown>
}	P	à
else	PPRO.3.f.s	<unknown>
{	V.P.3.s	être
//	PONCT.W	@card@
produit	V.P.3.s	produire
déjà	ADV.-	déjà
là	ADV.-	là
,	PONCT.W	,
augmenter	VW	augmenter
alors	ADV.-	alors
sa	D.poss.f.s	son
quantité	N.C.f.s	quantité
$objet	N.P.x.s	<unknown>
=	PONCT.W	=
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
$objet->qte	N.P.x.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
1	N.card.m.s	@card@
;	PONCT.W	;
$qte	N.P.x.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
;	PONCT.W	;
}	P	à
return	N.C.m.s	return
$qte	N.P.x.s	<unknown>
;	PONCT.W	;
}	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Sessions	N.C.f.p	session
Lorsqu'	C.S	lorsque
on	CL.suj.3.m.s	on
veut	V.P.3.s	vouloir
supprimer	VW	supprimer
un	D.ind.m.s	un
produit	N.C.m.s	produit
,	PONCT.W	,
on	CL.suj.3.m.s	on
va	V.P.3.s	aller
réduire	VW	réduire
sa	D.poss.f.s	son
quantité	N.C.f.s	quantité
dans	P	dans
l'	D.def.m.s	le
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
On	CL.suj.3.m.s	on
récupère	V.P.3.s	récupérer
l'	D.def.m.s	le
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
gardé	VK.m.s	garder
dans	P	dans
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
On	CL.suj.3.m.s	on
réduit	V.P.3.s	réduire
sa	D.poss.f.s	son
quantité	N.C.f.s	quantité
d'	P	de
une	D.ind.f.s	un
unité	N.C.f.s	unité
S'	C.S	si
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
en	CL.obj.3.m.s	en
reste	V.P.3.s	rester
plus	ADV.neg	plus
(	PONCT.W	(
la	D.def.f.s	le
quantité	N.C.f.s	quantité
a	V.P.3.s	avoir
atteint	VK.m.s	atteindre
0	D.card.f.p	@card@
unités	N.C.f.p	unité
)	PONCT.W	)
,	PONCT.W	,
on	CL.suj.3.m.s	on
supprime	V.P.3.s	supprimer
le	D.def.m.s	le
produit	N.C.m.s	produit
de	P	de
la	D.def.f.s	le
session	N.C.f.s	session
function	N.C.f.s	function
supprimerProduit($produit)	A.qual.f.s	<unknown>
{	P	à
$qte	N.P.x.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
isset(	ET	<unknown>
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
)	PONCT.W	)
)	PONCT.W	)
{	P+D.def.m.s	c
$objet	N.C.m.s	çobjet
=	PONCT.W	=
$_SESSION[$produit	N.P.x.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
$objet->qte	N.P.x.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
-	PONCT.W	-
1	N.card.m.s	@card@
;	PONCT.W	;
$qte	N.P.m.s	<unknown>
=	PONCT.W	=
$objet->qte	N.P.x.s	<unknown>
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$qte	N.C.m.s	<unknown>
<=	P+D.def.m.s	çù
0	A.card.f.s	@card@
)	PONCT.W	)
{	N.C.m.s	{
//on	PONCT.W	<unknown>
supprime	V.P.3.s	supprimer
le	D.def.m.s	le
produit	N.C.m.s	produit
unset($_SESSION[$produit])	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
}	P	à
return	N.C.m.s	return
$qte	N.P.x.s	<unknown>
;	PONCT.W	;
}	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Sessions	N.C.f.p	session
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
récupérer	VW	récupérer
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
panier	N.C.m.s	panier
en	P	en
récupérant	VG	récupérer
le	D.def.m.s	le
contenu	N.C.m.s	contenu
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
de	P	de
session	N.C.f.s	session
$_SESSION	N.P.x.s	<unknown>
Pour	P	pour
chaque	D.ind.m.s	chaque
objet	N.C.m.s	objet
LigneProduit	N.P.m.s	Ligneproduit
gardé	VK.m.s	garder
dans	P	dans
$_SESSION	N.C.f.s	çäsession
function	N.C.f.s	function
afficherPanier()	A.qual.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
<table>	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
foreach($_SESSION	N.C.f.s	foreachëçsession
as	ET	as
$objet	N.C.m.s	çobjet
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
<tr><td>	N.P.f.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$objet->nom	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
<td>	N.P.x.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$objet->qte	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
</td>	N.C.m.s	<unknown>
</tr>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
"	PONCT.W	"
</table>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.P.x.s	}
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
Cookies	N.P.x.s	Cookies
•	P	à
Un	D.ind.m.s	un
cookie	N.C.m.s	cookie
est	V.P.3.s	être
un	D.ind.m.s	un
mécanisme	N.C.m.s	mécanisme
pour	P	pour
stocker	VW	stocker
des	P+D.def.f.p	du
informations	N.C.f.p	information
sur	P	sur
les	D.def.m.p	le
visiteurs	N.C.m.p	visiteur
afin	ADV.-	afin
de	P	de
les	CL.obj.3.m.p	le
identifier	VW	identifier
plus	ADV.-	plus
tard	ADV.-	tard
•	P	à
Contrairement	ADV.-	contrairement
aux	P+D.def.f.p	au
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
,	PONCT.W	,
les	D.def.f.p	le
cookies	N.C.f.p	cookie
sont	V.P.3.p	être
des	D.ind.m.p	du
petits	A.qual.m.p	petit
fichiers	N.C.m.p	fichier
stockés	VK.m.p	stocker
sur	P	sur
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
de	P	de
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
pour	P	pour
une	D.ind.f.s	un
durée	N.C.f.s	durée
de	P	de
vie	N.C.f.s	vie
que	PRO.rel.f.s	que
nous	CL.suj.1.m.p	nous
pouvons	V.P.1.p	pouvoir
définir	VW	définir
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.C.f.p	cookie
•	P	à
Les	D.def.f.p	le
cookies	N.C.f.p	cookie
sont	V.P.3.p	être
accessibles	A.qual.f.p	accessible
via	P	via
la	D.def.f.s	le
superglobale	A.qual.f.s	superglobal
$_COOKIE	N.P.m.s	<unknown>
•	P	à
La	D.def.f.s	le
fonction	N.C.f.s	fonction
setcookie()	N.P.m.s	Setcookieëë
permet	V.P.3.s	permettre
de	P	de
définir	VW	définir
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
qui	PRO.rel.m.s	qui
sera	V.F.3.s	être
envoyé	VK.m.s	envoyer
avec	P	avec
le	D.def.m.s	le
reste	N.C.m.s	reste
des	P+D.def.f.p	du
en-têtes	N.C.f.p	en-tête
HTTP	N.P.m.s	Http
–	N.C.m.s	–
Les	D.def.f.p	le
cookies	N.C.f.p	cookie
font	V.P.3.p	faire
partie	N.C.f.s	partie
des	P+D.def.f.p	du
en-têtes	N.C.f.p	en-tête
HTTP	N.P.m.s	Http
,	PONCT.W	,
ce	PRO.dem.m.s	ce
qui	PRO.rel.m.s	qui
impose	V.P.3.s	imposer
que	C.S	que
setcookie()	N.C.m.s	setcookieëë
soit	V.S.3.s	être
appelée	VK.f.s	appeler
avant	P	avant
tout	D.ind.m.s	tout
affichage	N.C.m.s	affichage
de	P	de
texte	N.C.m.s	texte
et	C.C	et
avant	P	avant
même	ADV.-	même
<	I	à
!	PONCT.S	!

doctype	N.C.m.s	doctype
>	N.C.m.s	>
–	P	à
La	D.def.f.s	le
fonction	N.C.f.s	fonction
setcookie()	N.P.m.s	Setcookieëë
peut	V.P.3.s	pouvoir
prendre	VW	prendre
jusqu'	P	jusque
à	P	à
7	D.card.m.p	@card@
paramètres	N.C.m.p	paramètre
:	PONCT.W	:
•	P	à
Le	D.def.m.s	le
premier	A.ord.m.s	premier
est	V.P.3.s	être
obligatoire	A.qual.m.s	obligatoire
car	C.C	car
il	CL.suj.3.m.s	il
définit	V.P.3.s	définir
le	D.def.m.s	le
nom	N.C.m.s	nom
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
•	N.C.m.s	•
Le	D.def.m.s	le
deuxième	A.ord.m.s	deuxième
définit	V.P.3.s	définir
la	D.def.f.s	le
valeur	N.C.f.s	valeur
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
•	N.C.m.s	•
Le	D.def.m.s	le
troisième	A.ord.m.s	troisième
définit	V.P.3.s	définir
la	D.def.f.s	le
durée	N.C.f.s	durée
de	P	de
vie	N.C.f.s	vie
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
en	P	en
seconde	A.ord.f.s	second
setcookie('nom	N.C.m.s	setcookieç'nom
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
nomUtilisateur	N.C.m.s	nomutilisateur
'	PONCT.W	'
,	PONCT.W	,
time()+3600*24)	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
$_COOKIE['nom	N.P.x.s	<unknown>
’	N.P.x.s	’
]	PONCT.W	]
;	PONCT.W	;
//	PONCT.W	@card@
affichage	V.P.3.s	affichager
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.f.p	Cookies
1	A.card.f.s	@card@
–	C.S	–
On	CL.suj.3.m.s	on
demande	V.P.3.s	demander
une	D.ind.f.s	un
page	N.C.f.s	page
web	N.C.m.s	web
contenant	VG	contenir
une	D.ind.f.s	un
session	N.C.f.s	session
et	C.C	et
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
avec	P	avec
une	D.ind.f.s	un
variable	N.C.f.s	variable
2	D.card.m.p	@card@
–	P	à
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
répond	V.P.3.s	répondre
avec	P	avec
le	D.def.m.s	le
code	N.C.m.s	code
HTTP	N.C.m.s	<unknown>
200	N.card.m.s	@card@
,	PONCT.W	,
puis	C.C	pui
il	CL.suj.3.m.s	il
envoie	V.P.3.s	envoyer
le	D.def.m.s	le
numéro	N.C.m.s	numéro
de	P	de
session	N.C.f.s	session
PHP	N.P.m.s	Php
,	PONCT.W	,
et	C.C	et
la	D.def.f.s	le
variable	N.C.f.s	variable
«	P	à
nom	N.C.m.s	nom
»	N.C.m.s	»
contenant	VG	contenir
la	D.def.f.s	le
valeur	N.C.f.s	valeur
«	P	à
nomUtilisateur	N.C.m.s	nomutilisateur
»	N.C.m.s	»
...	PONCT.S	<unknown>
chacun	PRO.ind.m.s	chacun
dans	P	dans
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
Lorsque	C.S	lorsque
PHP	N.P.m.s	Php
demande	V.P.3.s	demander
à	P	à
créer	VW	créer
des	D.ind.f.p	du
cookies	N.C.f.p	cookie
,	PONCT.W	,
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
sont	V.P.3.p	être
envoyées	VK.f.p	envoyer
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	A.qual.m.s	web
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
,	PONCT.W	,
pour	P	pour
que	C.S	que
celui	PRO.dem.m.s	celui
-ci	CL.suj.3.m.s	ci
stocke	V.P.3.s	stocker
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
localement	ADV.-	localement
.	PONCT.S	.

Les	D.def.f.p	le
cookies	N.C.f.p	cookie
sont	V.P.3.p	être
stockés	VK.m.p	stocker
sur	P	sur
votre	D.poss.m.s	votre
disque	N.C.m.s	disque
dur	A.qual.m.s	dur
!	PONCT.S	!

...	PONCT.W	<unknown>
Ils	CL.suj.3.m.p	il
sont	V.P.3.p	être
donc	ADV.-	donc
renvoyés	VK.m.p	renvoyer
à	P	à
chaque	D.ind.f.s	chaque
demande	N.C.f.s	demande
de	P	de
page	N.C.f.s	page
web	N.C.m.s	web
.	PONCT.S	.

Attention	N.C.f.s	attention
à	P	à
ne	ADV.neg	ne
pas	ADV.neg	pas
mettre	VW	mettre
trop	ADV.-	trop
de	P	de
données	N.C.f.p	donnée
:	PONCT.W	:
-	PONCT.W	-
Ne	ADV.-	ne
pas	ADV.neg	pas
y	CL.obj.3.m.s	y
mettre	VW	mettre
de	P	de
fichiers	N.C.m.p	fichier
-	PONCT.W	-
Ne	ADV.-	ne
pas	ADV.neg	pas
y	CL.obj.3.m.s	y
mettre	VW	mettre
d'	P	de
objets	N.C.m.p	objet
ou	C.C	ou
conteneurs	N.C.m.p	conteneur
trop	ADV.-	trop
gros	A.qual.m.p	gros
!	PONCT.S	!

(	PONCT.W	(
tableaux	N.C.m.p	tableau
,	PONCT.W	,
etc	ADV.-	<unknown>
...	PONCT.W	<unknown>
)	PONCT.W	)
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
setcookie('nom	N.C.m.s	setcookieç'nom
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
nomUtilisateur	N.C.m.s	nomutilisateur
'	PONCT.W	'
,	PONCT.W	,
time()+3600*24)	N.C.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Cookies	N.C.f.p	cookie
•	P	à
La	D.def.f.s	le
fonction	N.C.f.s	fonction
setrawcookie()	N.C.m.s	setrawcookieëë
est	V.P.3.s	être
exactement	ADV.-	exactement
la	D.def.f.s	le
même	A.ind.f.s	même
que	C.S	que
setcookie()	N.C.f.s	setcookieëë
exceptée	VK.f.s	excepter
que	C.S	que
la	D.def.f.s	le
valeur	N.C.f.s	valeur
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
ne	ADV.neg	ne
sera	V.F.3.s	être
pas	ADV.neg	pas
automatiquement	ADV.-	automatiquement
encodée	VK.f.s	encoder
dans	P	dans
l'	D.def.m.s	le
URL	N.P.m.s	Url
lors	A.qual.m.s	lors
de	P	de
l'	D.def.m.s	le
envoi	N.C.m.s	envoi
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
•	N.C.m.s	•
Pour	P	pour
détruire	VW	détruire
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
:	PONCT.W	:
appeler	VW	appeler
setcookie()	N.C.m.s	setcookieëë
avec	P	avec
une	D.ind.f.s	un
date	N.C.f.s	date
d'	P	de
expiration	N.C.f.s	expiration
dans	P	dans
le	D.def.m.s	le
passé	N.C.m.s	passé
:	PONCT.W	:
setcookie("Nomcookie	N.C.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
valeurCookie	N.C.f.s	valeurcookie
"	PONCT.W	"
,	PONCT.W	,
time()-3600)	N.C.m.s	<unknown>
;	PONCT.W	;
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
de	P	de
cookie	N.C.f.s	cookie
sous	P	sous
forme	N.C.f.s	forme
de	P	de
tableau	N.C.m.s	tableau
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
setcookie("cookie[three	A.qual.m.s	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookiethree	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
setcookie("cookie[two	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookietwo	ET	cookietwo
"	PONCT.W	"
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
setcookie("cookie[one	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookieone	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
//	PONCT.W	@card@
affichage	N.C.m.s	affichage
de	P	de
ces	D.dem.f.p	ce
cookies	N.C.f.p	cookie
if	ET	if
(isset($_COOKIE['cookie']))	ET	çissetçëçcookieçookie'çeë
{	N.C.m.s	{
//	PONCT.W	@card@
exemple	N.C.m.s	exemple
d'	P	de
appel	N.C.m.s	appel
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
:	PONCT.W	:
echo	ET	echo
'	PONCT.W	'
le	D.def.m.s	le
cookie	N.C.m.s	cookie
two	ET	two
est	V.P.3.s	être
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_COOKIE['cookie']['two	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

'	PONCT.W	'
sinon	C.C	sinon
parcours	N.C.m.s	parcours
avec	P	avec
foreach	N.C.m.s	foreach
comme	P	comme
suit	V.P.3.s	suivre
:	PONCT.W	:
<br/>	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
foreach	N.C.m.s	foreach
(	PONCT.W	(
$_COOKIE['cookie	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
as	ET	as
$name	N.C.f.s	<unknown>
=>	N.P.x.s	<unknown>
$value	N.C.f.s	çvalue
)	PONCT.W	)
{	P	à
$name	N.C.m.s	<unknown>
=	PONCT.W	=
htmlspecialchars($name)	N.C.m.s	<unknown>
;	PONCT.W	;
$value	N.C.f.s	çvalue
=	PONCT.W	=
htmlspecialchars($value)	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
$name	N.P.f.s	<unknown>
:	PONCT.W	:
$value	N.C.f.s	çvalue
<br	N.P.m.s	<unknown>
/>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
PHP	N.C.m.s	php
:	PONCT.W	:
Cookies	N.C.f.p	cookie
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
setcookie("cookie[three	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookiethree	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
setcookie("cookie[two	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookietwo	ET	cookietwo
"	PONCT.W	"
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
setcookie("cookie[one	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookieone	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
1	A.card.m.s	@card@
–	N.C.m.s	–
On	CL.suj.3.m.s	on
demande	V.P.3.s	demander
une	D.ind.f.s	un
page	N.C.f.s	page
web	N.C.m.s	web
contenant	VG	contenir
une	D.ind.f.s	un
session	N.C.f.s	session
et	C.C	et
trois	D.card.f.p	trois
cookies	N.C.f.p	cookie
2	A.card.m.s	@card@
–	P	à
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
répond	V.P.3.s	répondre
avec	P	avec
le	D.def.m.s	le
code	N.C.m.s	code
HTTP	N.C.m.s	<unknown>
200	N.card.m.s	@card@
,	PONCT.W	,
puis	C.C	pui
il	CL.suj.3.m.s	il
envoie	V.P.3.s	envoyer
des	D.ind.f.p	du
cookies	N.C.f.p	cookie
contenant	VG	contenir
les	D.def.m.p	le
3	A.card.m.s	@card@
variables	N.C.f.p	variable
et	C.C	et
le	D.def.m.s	le
numéro	N.C.m.s	numéro
de	P	de
session	N.C.f.s	session
PHP	N.P.m.s	Php
Chaque	D.ind.f.s	chaque
cookie	N.C.f.s	cookie
est	V.P.3.s	être
envoyé	VK.m.s	envoyer
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
avec	P	avec
ses	D.poss.f.p	son
valeurs	N.C.f.p	valeur
et	C.C	et
sa	D.poss.f.s	son
date	N.C.f.s	date
d'	P	de
expiration	N.C.f.s	expiration
...	PONCT.W	<unknown>
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.m.s	Cookies
[	PONCT.W	[
Navigateur	N.P.m.s	Navigateur
fait	V.P.3.s	faire
une	D.ind.f.s	un
requête	N.C.f.s	requête
]	PONCT.W	]
Le	D.def.m.s	le
client	N.C.m.s	client
a	V.P.3.s	avoir
cliqué	VK.m.s	cliquer
sur	P	sur
le	D.def.m.s	le
lien	N.C.m.s	lien
vers	P	vers
cookies4.php	N.C.m.s	<unknown>
Bien	ADV.-	bien
que	C.S	que
cette	D.dem.f.s	ce
page	N.C.f.s	page
n'	ADV.neg	ne
ait	V.S.3.s	avoir
besoin	N.C.m.s	besoin
d'	P	de
aucune	D.neg.f.s	aucun
valeur	N.C.f.s	valeur
de	P	de
cookie	N.C.f.s	cookie
(	PONCT.W	(
hormis	P	hormis
la	D.def.f.s	le
session	N.C.f.s	session
)	PONCT.W	)
,	PONCT.W	,
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
renvoie	V.P.3.s	renvoyer
TOUT	ADV.-	tout
LE	D.def.m.s	le
TEMPS	N.P.m.s	Temps
toutes	A.ind.f.p	tout
ses	D.poss.f.p	son
valeurs	N.C.f.p	valeur
stockées	VK.f.p	stocker
dans	P	dans
des	D.ind.f.p	du
cookies	N.C.f.p	cookie
!	PONCT.S	!

(	PONCT.W	(
évident	N.C.m.s	évident
:	PONCT.W	:
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
ne	ADV.neg	ne
connait	V.I.3.s	conner
pas	ADV.neg	pas
le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
contenu	VK.m.s	contenir
dans	P	dans
la	D.def.f.s	le
page	N.C.f.s	page
web	N.C.m.s	web
,	PONCT.W	,
donc	ADV.-	donc
il	CL.suj.3.m.s	il
renvoie	V.P.3.s	renvoyer
toutes	A.ind.f.p	tout
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
qu'	PRO.rel.f.p	que
il	CL.suj.3.m.s	il
est	V.P.3.s	être
censé	A.qual.m.s	censé
conserver	VW	conserver
)	PONCT.W	)
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.m.s	Cookies
[	PONCT.W	[
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
répond	V.P.3.s	répondre
]	PONCT.W	]
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
«	N.C.m.s	«
détruit	VK.m.s	détruire
»	P	à
la	D.def.f.s	le
session	N.C.f.s	session
...	PONCT.S	<unknown>
En	P	en
pratique	V.P.3.s	pratiquer
cela	PRO.dem.m.s	cela
signifie	V.P.3.s	signifier
que	C.S	que
les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
sont	V.P.3.p	être
détruites	VK.f.p	détruire
...	PONCT.W	<unknown>
mais	C.C	mais
pas	ADV.neg	pas
celles	PRO.dem.f.p	celui
des	P+D.def.f.p	du
cookies	N.C.f.p	cookie
!	PONCT.S	!

PHP	N.C.m.s	php
:	PONCT.W	:
Cookies	N.P.m.s	Cookies
[	PONCT.W	[
Navigateur	N.P.m.s	Navigateur
fait	V.P.3.s	faire
une	D.ind.f.s	un
requête	N.C.f.s	requête
]	PONCT.W	]
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
demande	V.P.3.s	demander
cookies5.php	ADV.-	<unknown>
La	D.def.f.s	le
session	N.C.f.s	session
est	V.P.3.s	être
détruite	VK.f.s	détruire
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
,	PONCT.W	,
mais	C.C	mais
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
continue	V.P.3.s	continuer
d'	P	de
envoyer	VW	envoyer
l'	D.def.m.s	le
ID	N.P.x.s	Id
dont	PRO.rel.m.s	dont
il	CL.suj.3.m.s	il
dispose	V.P.3.s	disposer
,	PONCT.W	,
ainsi	ADV.-	ainsi
que	C.S	que
les	D.def.f.p	le
cookies	N.C.f.p	cookie
qu'	PRO.rel.f.p	que
il	CL.suj.3.m.s	il
a	V.P.3.s	avoir
stocké	VK.m.s	stocker
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.m.s	Cookies
[	PONCT.W	[
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
répond	V.P.3.s	répondre
]	PONCT.W	]
On	CL.suj.3.m.s	on
force	V.P.3.s	forcer
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
a	V.P.3.s	avoir
écrire	VW	écrire
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
de	P	de
session	N.C.f.s	session
et	C.C	et
de	P	de
cookies	N.C.f.p	cookie
...	PONCT.W	<unknown>
Seules	A.qual.f.p	seul
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
stockées	VK.f.p	stocker
dans	P	dans
les	D.def.f.p	le
cookies	N.C.f.p	cookie
seront	V.F.3.p	être
affichables	A.qual.f.p	affichable
...	PONCT.W	<unknown>
étant	VG	être
donné	VK.m.s	donner
que	C.S	que
la	D.def.f.s	le
session	N.C.f.s	session
est	V.P.3.s	être
détruite	VK.f.s	détruire
!	PONCT.S	!

PHP	N.C.m.s	php
:	PONCT.W	:
Cookies	N.C.f.p	cookie
En	P	en
effet	N.C.m.s	effet
:	PONCT.W	:
les	D.def.f.p	le
2	A.card.f.p	@card@
variables	N.C.f.p	variable
stockées	VK.f.p	stocker
dans	P	dans
des	D.ind.f.p	du
cookies	N.C.f.p	cookie
s'	CL.refl.3.f.p	se
affichent	V.P.3.p	afficher
,	PONCT.W	,
mais	C.C	mais
pas	ADV.neg	pas
les	D.def.m.p	le
autres	PRO.ind.m.p	autre
-	PONCT.W	-
Nom	N.P.m.s	Nom
reste	V.P.3.s	rester
vide	A.qual.m.s	vide
,	PONCT.W	,
car	C.C	car
la	D.def.f.s	le
session	N.C.f.s	session
est	V.P.3.s	être
détruite	VK.f.s	détruire
,	PONCT.W	,
donc	ADV.-	donc
le	D.def.m.s	le
contenu	N.C.m.s	contenu
est	V.P.3.s	être
vide	A.qual.m.s	vide
-	PONCT.W	-
Prenom	N.P.m.s	Prenom
et	C.C	et
MonRawCookie	N.P.m.s	Monrawcookie
s'	CL.refl.3.m.p	se
affichent	V.P.3.p	afficher
car	C.C	car
ils	CL.suj.3.m.p	il
sont	V.P.3.p	être
renvoyés	VK.m.p	renvoyer
par	P	par
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
avec	P	avec
chaque	D.ind.f.s	chaque
requête	N.C.f.s	requête
«	P	à
tant	ADV.-	tant
que	C.S	que
»	P	à
leur	D.poss.f.s	leur
durée	N.C.f.s	durée
de	P	de
vie	N.C.f.s	vie
est	V.P.3.s	être
valable	A.qual.f.s	valable
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.x.s	Cookies
[	PONCT.W	[
Navigateur	N.P.m.s	Navigateur
fait	V.P.3.s	faire
une	D.ind.f.s	un
requête	N.C.f.s	requête
]	PONCT.W	]
Le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
demande	V.P.3.s	demander
la	D.def.f.s	le
page	N.C.f.s	page
cookies5.php	ADV.-	<unknown>
Il	CL.suj.3.m.s	il
continue	V.P.3.s	continuer
d'	P	de
envoyer	VW	envoyer
toutes	A.ind.f.p	tout
les	D.def.f.p	le
variables	N.C.f.p	variable
«	P	à
encore	ADV.-	encore
valables	A.qual.f.p	valable
»	P	à
contenues	VK.f.p	contenir
dans	P	dans
des	D.ind.f.p	du
cookies	N.C.f.p	cookie
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.m.s	Cookies
[	PONCT.W	[
Serveur	N.P.m.s	Serveur
Web	N.P.m.s	Web
répond	V.P.3.s	répondre
]	PONCT.W	]
Le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
répond	V.P.3.s	répondre
,	PONCT.W	,
mais	C.C	mais
il	CL.suj.3.m.s	il
ne	ADV.neg	ne
renvoie	V.P.3.s	renvoyer
aucun	D.neg.m.s	aucun
ID	N.C.m.s	id
de	P	de
session	N.C.f.s	session
(	PONCT.W	(
usage	N.C.m.s	usage
de	P	de
la	D.def.f.s	le
valeur	N.C.f.s	valeur
précédente	A.qual.f.s	précédent
encore	ADV.-	encore
possible	A.qual.f.s	possible
)	PONCT.W	)
PHP	N.P.m.s	Php
:	PONCT.W	:
Cookies	N.P.f.p	Cookies
Les	D.def.f.p	le
données	N.C.f.p	donnée
du	P+D.def.m.s	du
navigateur	N.C.m.s	navigateur
sont	V.P.3.p	être
stockées	VK.f.p	stocker
dans	P	dans
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
Cookie	N.P.m.s	Cookie
«	P	à
prenom	N.C.m.s	prenom
»	N.C.m.s	»
,	PONCT.W	,
contenant	VG	contenir
«	P	à
Fab	N.P.m.s	Fab
»	N.C.m.s	»
,	PONCT.W	,
pour	P	pour
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
p1web2019.metalman.eu	A.qual.m.s	<unknown>
dans	P	dans
le	D.def.m.s	le
dossier	N.C.m.s	dossier
«	P	à
test_cookie	N.C.m.s	test-cookie
»	N.C.m.s	»
avec	P	avec
divers	D.ind.m.p	divers
timestamps	N.C.m.p	timestamp
Un	D.ind.m.s	un
exemple	N.C.m.s	exemple
de	P	de
fichier	N.C.m.s	fichier
contenant	VG	contenir
des	D.ind.f.p	du
cookies	N.C.f.p	cookie
du	P+D.def.m.s	du
navigateur	N.C.m.s	navigateur
du	P+D.def.m.s	du
client	N.C.m.s	client
.	PONCT.S	.

Les	D.def.f.p	le
valeurs	N.C.f.p	valeur
sont	V.P.3.p	être
lisibles	A.qual.f.p	lisible
!	PONCT.S	!

Ne	ADV.neg	ne
JAMAIS	N.C.m.p	jamais
stocker	VW	stocker
de	P	de
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
dans	P	dans
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
!	PONCT.S	!

(	PONCT.W	(
que	C.S	que
le	D.def.m.s	le
contenu	N.C.m.s	contenu
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
soit	V.S.3.s	être
chiffré	VK.m.s	chiffrer
ou	C.C	ou
non	ADV.neg	non
:	PONCT.W	:
le	D.def.m.s	le
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
sera	V.F.3.s	être
accessible	A.qual.m.s	accessible
sur	P	sur
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
du	P+D.def.m.s	du
client	N.C.m.s	client
!	PONCT.S	!

)	PONCT.W	)
Cookie	N.P.f.s	Cookie
«	P	à
MonRawCookie	N.P.m.s	Monrawcookie
»	N.C.m.s	»
,	PONCT.W	,
contenant	VG	contenir
«	D.card.f.p	«
valeurCookie	N.C.f.s	valeurcookie
»	N.C.m.s	»
,	PONCT.W	,
pour	P	pour
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
p1web2019.metalman.eu	A.qual.m.s	<unknown>
dans	P	dans
le	D.def.m.s	le
dossier	N.C.m.s	dossier
«	P	à
test_cookie	N.C.f.s	test-cookie
»	N.C.m.s	»
avec	P	avec
divers	D.ind.m.p	divers
timestamps	N.C.m.p	timestamp
PHP	N.P.m.s	Php
:	PONCT.W	:
Sessions	N.C.f.p	session
&	PONCT.W	&
Cookies	N.P.x.s	Cookies
•	P	à
Session	N.P.f.s	Session
:	PONCT.W	:
variables	N.C.f.p	variable
conservées	VK.f.p	conserver
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
–	P+D.def.m.s	c
session_start()	N.C.m.s	sessionästartçë
;	PONCT.W	;
//	PONCT.W	@card@
sur	P	sur
chaque	D.ind.f.s	chaque
page	N.C.f.s	page
PHP	N.P.m.s	Php
–	N.C.m.s	–
$_SESSION["ma_variable	N.C.m.s	çäsessionäable
"	PONCT.W	"
]	PONCT.W	]
=	V.P.3.s	être
42	D.card.m.p	@card@
;	PONCT.W	;
//	PONCT.W	@card@
variables	N.C.f.p	variable
–	P	à
unset($_SESSION["ma_variable"])	N.C.f.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
variables	N.C.f.p	variable
–	P	à
session_destroy()	N.C.m.s	sessionädestroyçë
;	PONCT.W	;
//	PONCT.W	@card@
seulement	ADV.-	seulement
en	P	en
fin	N.C.f.s	fin
de	P	de
session	N.C.f.s	session
•	P	à
Cookies	N.P.x.s	Cookies
:	PONCT.W	:
variables	N.C.f.p	variable
conservées	VK.f.p	conserver
côté	N.C.m.s	côté
client	N.C.m.s	client
–	P	à
setcookie('nom	N.C.m.s	setcookieç'nom
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
nomUtilisateur	N.C.m.s	nomutilisateur
'	PONCT.W	'
,	PONCT.W	,
time()+3600*24)	N.C.m.s	<unknown>
;	PONCT.W	;
–	ET	–
echo	ET	echo
$_COOKIE['nom	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
–	D.card.m.s	–
setcookie('nom	N.C.m.s	setcookieç'nom
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
nomUtilisateur	N.C.m.s	nomutilisateur
'	PONCT.W	'
,	PONCT.W	,
time()-3600)	N.C.m.s	<unknown>
;	PONCT.W	;
Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
Un	D.ind.m.s	un
site	N.C.m.s	site
de	P	de
vente	N.C.f.s	vente
en	P	en
ligne	N.C.f.s	ligne
a	V.P.3.s	avoir
presque	ADV.-	presque
vidé	VK.m.s	vider
ses	D.poss.m.p	son
stocks	N.C.m.p	stock
...	PONCT.W	<unknown>
Il	CL.suj.3.m.s	il
ne	ADV.neg	ne
reste	V.P.3.s	rester
plus	ADV.neg	plus
qu'	ADV.neg	qu'
un	D.ind.m.s	un
seul	A.qual.m.s	seul
objet	N.C.m.s	objet
en	P	en
vente	N.C.f.s	vente
en	P	en
un	D.ind.m.s	un
seul	A.qual.m.s	seul
exemplaire	N.C.m.s	exemplaire
•	N.C.m.s	•
Que	PRO.int.m.s	que
se	CL.refl.3.m.s	se
passe	V.P.3.s	passer
-t-il	CL.suj.3.m.s	il
lorsque	C.S	lorsque
2	D.card.m.p	@card@
utilisateurs	N.C.m.p	utilisateur
essayent	V.P.3.p	essayer
d'	P	de
acheter	VW	acheter
en	P	en
même	A.qual.m.s	même
temps	N.C.m.s	temps
cet	D.dem.m.s	ce
objet	N.C.m.s	objet
?	PONCT.S	?

–	N.C.m.s	–
Impossible	A.qual.m.s	impossible
à	P	à
déterminer	VW	déterminer
...	PONCT.S	<unknown>
En	P	en
général	N.C.m.s	général
,	PONCT.W	,
les	D.def.m.p	le
deux	A.card.m.p	deux
utilisateurs	N.C.m.p	utilisateur
arriveront	V.F.3.p	arriver
à	P	à
passer	VW	passer
commande	N.C.f.s	commande
,	PONCT.W	,
et	C.C	et
le	D.def.m.s	le
vendeur	N.C.m.s	vendeur
verra	V.F.3.s	voir
2	D.card.f.p	@card@
commandes	N.C.f.p	commande
sur	P	sur
le	D.def.m.s	le
même	A.ind.m.s	même
objet	N.C.m.s	objet
,	PONCT.W	,
et	C.C	et
le	D.def.m.s	le
stock	N.C.m.s	stock
passera	V.F.3.s	passer
en	P	en
négatif	N.C.m.s	négatif
Transactions	N.P.x.s	Transactions
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
Une	D.ind.f.s	un
transaction	N.C.f.s	transaction
est	V.P.3.s	être
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
de	P	de
requêtes	N.C.f.p	requête
visant	VG	viser
à	P	à
changer	VW	changer
l'	D.def.m.s	le
état	N.C.m.s	état
d'	P	de
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
•	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
1	N.card.m.s	@card@
.	PONCT.S	.

On	CL.suj.3.m.s	on
sélectionne	V.P.3.s	sélectionner
des	D.ind.m.p	du
produits	N.C.m.p	produit
dans	P	dans
une	D.ind.f.s	un
BDD	N.P.f.s	Bdd
choix	N.C.m.s	choix
des	P+D.def.m.p	du
produits	N.C.m.p	produit
2	A.card.m.s	@card@
.	PONCT.S	.

On	CL.suj.3.m.s	on
créer	VW	créer
une	D.ind.f.s	un
nouvelle	A.qual.f.s	nouveau
ligne	N.C.f.s	ligne
dans	P	dans
une	D.ind.f.s	un
table	A.qual.f.s	table
création	N.C.f.s	création
d'	P	de
une	D.ind.f.s	un
nouvelle	A.qual.f.s	nouveau
réservation	N.C.f.s	réservation
de	P	de
produits	N.C.m.p	produit
3	PRO.card.m.p	@card@
.	PONCT.S	.

On	CL.suj.3.m.s	on
réduit	V.P.3.s	réduire
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
dans	P	dans
une	D.ind.f.s	un
autre	A.qual.f.s	autre
table	A.qual.f.s	table
réduction	N.C.f.s	réduction
de	P	de
la	D.def.f.s	le
quantité	N.C.f.s	quantité
de	P	de
plusieurs	D.ind.m.p	plusieurs
produits	N.C.m.p	produit
Les	D.def.f.p	le
3	A.card.f.p	@card@
requêtes	N.C.f.p	requête
sont	V.P.3.p	être
exécutées	VK.f.p	exécuter
en	P	en
une	D.ind.f.s	un
seule	A.ind.f.s	seul
transaction	N.C.f.s	transaction
Transactions	N.P.m.s	Transactions
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
Une	D.ind.f.s	un
transaction	N.C.f.s	transaction
peut	V.P.3.s	pouvoir
être	VW	être
vue	VK.f.s	voir
comme	P	comme
une	D.ind.f.s	un
requête	N.C.f.s	requête
«	P	à
métier	N.C.m.s	métier
»	N.C.m.s	»
/haut	A.qual.m.s	<unknown>
niveau	N.C.m.s	niveau
:	PONCT.W	:
-	PONCT.W	-
«	P	à
réserver	VW	réserver
des	D.ind.m.p	du
produits	N.C.m.p	produit
dans	P	dans
un	D.ind.m.s	un
magasin	N.C.m.s	magasin
»	N.C.m.s	»
est	V.P.3.s	être
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
qu'	C.S	que
un	D.ind.m.s	un
client	N.C.m.s	client
peut	V.P.3.s	pouvoir
demander	VW	demander
-	PONCT.W	-
En	P	en
pratique	N.C.f.s	pratique
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
que	C.S	que
le	D.def.m.s	le
client	N.C.m.s	client
choisisse	V.S.3.s	choisir
des	P+D.def.m.p	du
produits	N.C.m.p	produit
disponibles	A.qual.m.p	disponible
,	PONCT.W	,
que	C.S	que
l'	D.def.m.s	le
on	CL.suj.3.m.s	on
prépare	V.P.3.s	préparer
une	D.ind.f.s	un
note	N.C.f.s	note
liant	VG	lier
le	D.def.m.s	le
client	N.C.m.s	client
aux	P+D.def.m.p	au
produits	N.C.m.p	produit
,	PONCT.W	,
et	C.C	et
isoler	VW	isoler
les	D.def.m.p	le
produits	N.C.m.p	produit
pour	P	pour
les	CL.obj.3.m.p	le
mettre	VW	mettre
de	P	de
côté	N.C.m.s	côté
Les	D.def.f.p	le
requêtes	N.C.f.p	requête
«	A.qual.f.p	«
techniques	N.C.f.p	technique
»	P+D.def.m.s	c
/bas	N.C.m.s	ébas
niveau	N.C.m.s	niveau
toutes	A.ind.f.p	tout
seules	A.qual.f.p	seul
n'	ADV.neg	ne
ont	V.P.3.p	avoir
que	ADV.neg	que
peu	ADV.-	peu
de	P	de
signification	N.C.f.s	signification
,	PONCT.W	,
mais	C.C	mais
ensemble	ADV.-	ensemble
elles	CL.suj.3.f.p	elle
servent	V.P.3.p	servir
un	D.ind.m.s	un
but	N.C.m.s	but
commun	A.qual.m.s	commun
(	PONCT.W	(
cf	ET	cf
process	ET	process
mining	ET	mining
...	PONCT.W	<unknown>
)	PONCT.W	)
Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	N.C.m.s	•
Les	D.def.f.p	le
transactions	N.C.f.p	transaction
se	CL.refl.3.f.p	se
terminent	V.P.3.p	terminer
par	P	par
un	D.ind.m.s	un
«	N.C.m.s	«
commit	N.C.m.s	commit
»	N.C.m.s	»
–	P+D.def.m.s	c
Validation	N.C.f.s	validation
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
–	P	à
Écriture	N.C.f.s	écriture
des	P+D.def.f.p	du
modifications	N.C.f.p	modification
•	PRO.rel.f.p	•
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
vouloir	VW	vouloir
annuler	VW	annuler
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
en	P	en
cours	N.C.m.s	cours
de	P	de
route	N.C.f.s	route
ou	C.C	ou
après	P	après
un	D.ind.m.s	un
commit	N.C.m.s	commit
.	PONCT.S	.

On	CL.suj.3.m.s	on
effectue	V.P.3.s	effectuer
dans	P	dans
ce	D.dem.m.s	ce
cas	N.C.m.s	cas
un	D.ind.m.s	un
«	N.C.m.s	«
rollback	ET	rollback
»	N.C.m.s	»
–	N.C.m.s	–
La	D.def.f.s	le
transaction	N.C.f.s	transaction
est	V.P.3.s	être
annulée	VK.f.s	annuler
,	PONCT.W	,
aucune	D.neg.f.s	aucun
modification	N.C.f.s	modification
n'	ADV.neg	ne
est	V.P.3.s	être
apportée	VK.f.s	apporter
aux	P+D.def.f.p	au
données	N.C.f.p	donnée
dans	P	dans
la	D.def.f.s	le
BDD	N.P.f.s	Bdd
–	P	à
Les	D.def.f.p	le
anciennes	A.qual.f.p	ancien
valeurs	N.C.f.p	valeur
sont	V.P.3.p	être
remises	VK.f.p	remettre
dans	P	dans
la	D.def.f.s	le
BDD	N.P.f.s	Bdd
Transactions	N.P.x.s	Transactions
&	PONCT.W	&
BDD	N.P.m.s	Bdd
Le	D.def.m.s	le
«	N.C.m.s	«
commit	V.J.3.s	commettre
»	P+D.def.m.s	c
est	V.P.3.s	être
la	D.def.f.s	le
dernière	A.qual.f.s	dernier
étape	N.C.f.s	étape
d'	P	de
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
:	PONCT.W	:
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
à	P	à
ce	D.dem.m.s	ce
moment	N.C.m.s	moment
-là	ADV.-	là
que	C.S	que
le	D.def.m.s	le
SGBD	N.P.m.s	Sgbd
enregistre	V.P.3.s	enregistrer
les	D.def.m.p	le
changements	N.C.m.p	changement
.	PONCT.S	.

Généralement	ADV.-	généralement
,	PONCT.W	,
les	D.def.f.p	le
transactions	N.C.f.p	transaction
sont	V.P.3.p	être
effectuées	VK.f.p	effectuer
en	P	en
mémoire	N.C.f.s	mémoire
RAM	N.P.m.s	Ram
,	PONCT.W	,
et	C.C	et
lorsque	C.S	lorsque
qu'	C.S	que
un	D.ind.m.s	un
commit	N.C.m.s	commit
est	V.P.3.s	être
effectué	VK.m.s	effectuer
,	PONCT.W	,
les	D.def.m.p	le
changements	N.C.m.p	changement
sont	V.P.3.p	être
inscrits	VK.m.p	inscrire
sur	P	sur
les	D.def.m.p	le
disques	N.C.m.p	disque
durs	A.qual.m.p	dur
.	PONCT.S	.

Si	C.S	si
un	D.ind.m.s	un
SGBD	N.C.m.s	<unknown>
crashe	V.P.3.s	crasher
,	PONCT.W	,
il	CL.suj.3.m.s	il
doit	V.P.3.s	devoir
pouvoir	VW	pouvoir
retrouver	VW	retrouver
son	D.poss.m.s	son
dernier	A.qual.m.s	dernier
état	N.C.m.s	état
cohérent	A.qual.m.s	cohérent
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
ou	C.C	ou
alors	ADV.-	alors
il	CL.suj.3.m.s	il
doit	V.P.3.s	devoir
pouvoir	VW	pouvoir
proposer	VW	proposer
de	P	de
“	P	à
rejouer	VW	rejouer
”	P	à
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
transactions	N.C.f.p	transaction
effectuées	VK.f.p	effectuer
pour	P	pour
retrouver	VW	retrouver
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
cohérente	A.qual.f.s	cohérent
et	C.C	et
à	P	à
jour	N.C.m.s	jour
.	PONCT.S	.

Les	D.def.f.p	le
transactions	N.C.f.p	transaction
(	PONCT.W	(
leurs	D.poss.f.p	leur
requêtes	N.C.f.p	requête
groupées	VK.f.p	grouper
)	PONCT.W	)
sont	V.P.3.p	être
enregistrées	VK.f.p	enregistrer
dans	P	dans
les	D.def.m.p	le
logs	N.C.m.p	log
des	P+D.def.m.p	du
SGBD	N.P.x.s	Sgbd
,	PONCT.W	,
permettant	VG	permettre
de	P	de
rejouer	VW	rejouer
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
transactions	N.C.f.p	transaction
effectuées	VK.f.p	effectuer
.	PONCT.S	.

Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	P	à
Propriétés	N.C.f.p	propriété
ACID	N.P.m.s	Acid
:	PONCT.W	:
–	P+D.def.m.s	c
Atomicité	N.C.f.s	atomicité
–	P+D.def.m.s	c
Cohérence	N.C.f.s	cohérence
–	P	à
Isolation	N.C.f.s	isolation
–	P	à
Durabilité	N.C.f.s	durabilité
«	P	à
Un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
de	P	de
propriétés	N.C.f.p	propriété
qui	PRO.rel.f.p	qui
garantissent	V.P.3.p	garantir
qu'	C.S	que
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
informatique	A.qual.f.s	informatique
est	V.P.3.s	être
exécutée	VK.f.s	exécuter
de	P	de
façon	N.C.f.s	façon
fiable	A.qual.f.s	fiable
.	PONCT.S	.

»	N.C.m.s	»
Wikipédia	N.C.m.s	wikipédia
–	P	à
Propriétés	N.C.f.p	propriété
ACID	N.P.m.s	Acid
Les	D.def.f.p	le
propriétés	N.C.f.p	propriété
ACID	N.P.m.s	Acid
permettent	V.P.3.p	permettre
d'	P	de
assurer	VW	assurer
qu'	C.S	que
un	D.ind.m.s	un
SGBD	N.C.m.s	<unknown>
supporte	V.P.3.s	supporter
les	D.def.f.p	le
«	A.card.f.p	«
transactions	N.C.f.p	transaction
»	P+D.def.m.s	c
Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	P	à
Atomicité	N.C.f.s	atomicité
:	PONCT.W	:
Une	D.ind.f.s	un
transaction	N.C.f.s	transaction
est	V.P.3.s	être
«	P	à
atomique	A.qual.m.s	atomique
»	N.P.m.s	»
si	C.S	si
elle	CL.suj.3.f.s	elle
s'	CL.refl.3.f.s	se
effectue	V.P.3.s	effectuer
intégralement	ADV.-	intégralement
ou	C.C	ou
pas	ADV.neg	pas
du	P+D.def.m.s	du
tout	N.C.m.s	tout
(	PONCT.W	(
Une	D.ind.f.s	un
transaction	N.C.f.s	transaction
non-atomique	A.qual.f.s	non-atomique
créerait	V.C.3.s	créer
une	D.ind.f.s	un
réservation	N.C.f.s	réservation
avec	P	avec
les	D.def.m.p	le
produits	N.C.m.p	produit
,	PONCT.W	,
mais	C.C	mais
ne	ADV.neg	ne
réduirait	V.C.3.s	réduire
pas	ADV.neg	pas
la	D.def.f.s	le
quantité	N.C.f.s	quantité
dans	P	dans
les	D.def.m.p	le
stocks	N.C.m.p	stock
(	PONCT.W	(
par	P	par
exemple	N.C.m.s	exemple
)	PONCT.W	)
.	PONCT.S	.

Le	D.def.m.s	le
stock	N.C.m.s	stock
réel	A.qual.m.s	réel
ne	ADV.neg	ne
serait	V.C.3.s	être
pas	ADV.neg	pas
correctement	ADV.-	correctement
représenté	VK.m.s	représenter
,	PONCT.W	,
ce	PRO.dem.m.s	ce
qui	PRO.rel.m.s	qui
entraînerait	V.C.3.s	entraîner
des	D.ind.m.p	du
problèmes	N.C.m.p	problème
)	PONCT.W	)
Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	P	à
Cohérence	N.C.f.s	cohérence
:	PONCT.W	:
La	D.def.f.s	le
cohérence	N.C.f.s	cohérence
assure	V.P.3.s	assurer
que	C.S	que
toutes	A.ind.f.p	tout
les	D.def.f.p	le
contraintes	N.C.f.p	contrainte
de	P	de
la	D.def.f.s	le
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
sont	V.P.3.p	être
respectées	VK.f.p	respecter
avant	P	avant
et	C.C	et
après	P	après
les	D.def.f.p	le
transactions	N.C.f.p	transaction
(	PONCT.W	(
l'	D.def.m.s	le
état	N.C.m.s	état
de	P	de
la	D.def.f.s	le
base	N.C.f.s	base
de	P	de
donnée	N.C.f.s	donnée
est	V.P.3.s	être
valide	A.qual.f.s	valide
selon	P	selon
les	D.def.f.p	le
règles	N.C.f.p	règle
)	PONCT.W	)
(	PONCT.W	(
Une	D.ind.f.s	un
transaction	N.C.f.s	transaction
incohérente	A.qual.f.s	incohérent
permettrait	V.C.3.s	permettre
par	P	par
exemple	N.C.m.s	exemple
de	P	de
faire	VW	faire
référence	N.C.f.s	référence
à	P	à
des	D.ind.m.p	du
objets	N.C.m.p	objet
qui	PRO.rel.m.p	qui
n'	ADV.neg	ne
existent	V.P.3.p	exister
plus	ADV.neg	plus
,	PONCT.W	,
ce	PRO.dem.m.s	ce
qui	PRO.rel.m.s	qui
bloquerait	V.C.3.s	bloquer
les	D.def.f.p	le
jointures	N.C.f.p	jointure
)	PONCT.W	)
Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	P+D.def.m.s	c
Isolation	N.C.f.s	isolation
:	PONCT.W	:
Capacité	N.C.f.s	capacité
de	P	de
protéger	VW	protéger
les	D.def.f.p	le
données	N.C.f.p	donnée
contre	P	contre
plusieurs	D.ind.f.p	plusieurs
modifications	N.C.f.p	modification
simultanées	A.qual.f.p	simultané
.	PONCT.S	.

Une	D.ind.f.s	un
transaction	N.C.f.s	transaction
ne	ADV.neg	ne
doit	V.P.3.s	devoir
pas	ADV.neg	pas
dépendre	VW	dépendre
des	P+D.def.f.p	du
données	N.C.f.p	donnée
d'	P	de
une	D.ind.f.s	un
autre	A.ind.f.s	autre
transaction	N.C.f.s	transaction
.	PONCT.S	.

(	PONCT.W	(
Des	D.ind.f.p	du
transactions	N.C.f.p	transaction
non-isolées	A.qual.f.p	non-isolé
permettent	V.P.3.p	permettre
de	P	de
faire	VW	faire
des	D.ind.f.p	du
modifications	N.C.f.p	modification
sur	P	sur
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
qui	PRO.rel.f.p	qui
n'	ADV.neg	ne
existent	V.P.3.p	exister
plus	ADV.neg	plus
ou	C.C	ou
qui	PRO.rel.f.p	qui
ont	V.P.3.p	avoir
été	VK.m.s	être
modifiées	VK.f.p	modifier
entre	P	entre
temps	N.C.m.s	temps
)	PONCT.W	)
Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
problème	N.C.m.s	problème
isolation	N.C.f.s	isolation
:	PONCT.W	:
Un	D.ind.m.s	un
produit	N.C.m.s	produit
est	V.P.3.s	être
en	P	en
quantité	N.C.f.s	quantité
9	N.card.f.s	@card@
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
A	P	à
le	D.def.m.s	le
réduit	N.C.m.s	réduit
de	P	de
1	N.card.m.s	@card@
,	PONCT.W	,
il	CL.suj.3.m.s	il
devrait	V.C.3.s	devoir
se	CL.refl.3.m.s	se
retrouver	VW	retrouver
à	P	à
8	N.card.m.s	@card@
,	PONCT.W	,
mais	C.C	mais
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
B	N.C.m.s	b
le	D.def.m.s	le
réduit	N.C.m.s	réduit
de	P	de
3	D.card.m.p	@card@
entre	P	entre
temps	N.C.m.s	temps
.	PONCT.S	.

•	P	à
La	D.def.f.s	le
valeur	N.C.f.s	valeur
correcte	A.qual.f.s	correct
devrait	V.C.3.s	devoir
être	VW	être
3	D.card.m.p	@card@
1	D.card.m.s	@card@
=	V.P.3.s	être
4	D.card.m.p	@card@
=>	N.C.m.p	çù
9	A.card.m.s	@card@
–	N.C.m.p	–
4	A.card.m.p	@card@
=	N.C.m.p	=
5	D.card.m.p	@card@
mais	C.C	mais
comme	P	comme
l'	D.def.m.s	le
ordre	N.C.m.s	ordre
des	P+D.def.f.p	du
écritures	N.C.f.p	écriture
est	V.P.3.s	être
importante	A.qual.f.s	important
:	PONCT.W	:
1	N.card.m.s	@card@
)	PONCT.W	)
A	P	à
lit	VK.m.s	lire
la	D.def.f.s	le
valeur	N.C.f.s	valeur
9	D.card.m.p	@card@
SELECT	N.P.m.s	Select
qte	PRO.rel.f.s	<unknown>
FROM	N.P.m.s	From
produits	VK.m.p	produire
WHERE	N.P.m.s	Where
nom=	ET	nomà
«	P	à
pomme	N.C.m.s	pomme
»	N.C.m.s	»
2	A.card.m.s	@card@
)	PONCT.W	)
B	A.qual.m.s	b
lit	V.P.3.s	lire
la	D.def.f.s	le
valeur	N.C.f.s	valeur
9	A.card.f.s	@card@
SELECT	N.P.m.s	Select
qte	PRO.rel.f.s	<unknown>
FROM	N.P.m.s	From
produits	VK.m.p	produire
WHERE	N.P.m.s	Where
nom=	ET	nomà
«	P	à
pomme	N.C.m.s	pomme
»	N.C.m.s	»
3	A.card.m.s	@card@
)	PONCT.W	)
B	A.qual.m.s	b
réduit	N.C.m.s	réduit
de	P	de
3	PRO.card.m.p	@card@
la	D.def.f.s	le
quantité	N.C.f.s	quantité
:	PONCT.W	:
9	D.card.m.p	@card@
–	N.C.m.p	–
3	A.card.m.s	@card@
=	PONCT.W	=
6	A.card.m.s	@card@
(	PONCT.W	(
UPDATE	N.P.f.s	Update
qte	C.S	<unknown>
)	PONCT.W	)
4	N.card.m.s	@card@
)	PONCT.W	)
A	P	à
réduit	VK.m.s	réduire
de	P	de
1	N.card.m.s	@card@
la	D.def.f.s	le
quantité	N.C.f.s	quantité
:	PONCT.W	:
9	D.card.m.p	@card@
–	N.C.m.s	–
1	A.card.m.s	@card@
=	PONCT.W	=
8	A.card.m.s	@card@
(	PONCT.W	(
UPDATE	N.P.f.s	Update
qte	C.S	<unknown>
)	PONCT.W	)
5	N.card.m.s	@card@
)	PONCT.W	)
La	D.def.f.s	le
valeur	N.C.f.s	valeur
finale	A.qual.f.s	final
sera	V.F.3.s	être
8	N.card.m.s	@card@
,	PONCT.W	,
car	C.C	car
B	N.P.m.s	B
est	V.P.3.s	être
exécutée	VK.f.s	exécuter
en	P	en
dernière	A.qual.f.s	dernier
Transactions	N.C.f.p	transaction
&	PONCT.W	&
BDD	N.P.m.s	Bdd
•	P	à
Durabilité	N.C.f.s	durabilité
:	PONCT.W	:
En	P	en
cas	N.C.m.s	cas
de	P	de
panne	N.C.f.s	panne
(	PONCT.W	(
de	P	de
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
,	PONCT.W	,
du	P+D.def.m.s	du
système	N.C.m.s	système
d'	P	de
exploitation	N.C.f.s	exploitation
,	PONCT.W	,
du	P+D.def.m.s	du
SGBD	N.P.m.s	Sgbd
,	PONCT.W	,
...	PONCT.W	<unknown>
)	PONCT.W	)
,	PONCT.W	,
les	D.def.f.p	le
transactions	N.C.f.p	transaction
exécutées	VK.f.p	exécuter
sont	V.P.3.p	être
définitivement	ADV.-	définitivement
enregistrées	VK.f.p	enregistrer
.	PONCT.S	.

(	PONCT.W	(
À	P	à
moins	ADV.-	moins
que	C.S	que
la	D.def.f.s	le
panne	N.C.f.s	panne
ne	ADV.neg	ne
concerne	V.P.3.s	concerner
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.m.p	du
disques	N.C.m.p	disque
qui	PRO.rel.m.p	qui
contiennent	V.P.3.p	contenir
les	D.def.m.p	le
BDD	N.C.m.p	bdd
,	PONCT.W	,
les	D.def.f.p	le
transactions	N.C.f.p	transaction
effectuées	VK.f.p	effectuer
doivent	V.P.3.p	devoir
être	VW	être
enregistrées	VK.f.p	enregistrer
dès	P	dès
qu'	C.S	que
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
effectuées	VK.f.p	effectuer
)	PONCT.W	)
Transactions	N.C.f.p	transaction
avec	P	avec
MySQL	N.P.m.s	Mysql
MySQL	N.P.m.s	Mysql
a	V.P.3.s	avoir
la	D.def.f.s	le
particularité	N.C.f.s	particularité
de	P	de
gérer	VW	gérer
plusieurs	D.ind.m.p	plusieurs
moteurs	N.C.m.p	moteur
de	P	de
stockage	N.C.m.s	stockage
dans	P	dans
une	D.ind.f.s	un
même	A.ind.f.s	même
BDD	N.P.f.s	Bdd
,	PONCT.W	,
aussi	ADV.-	aussi
appelé	VK.m.s	appeler
moteur	N.C.m.s	moteur
de	P	de
table	N.C.f.s	table
.	PONCT.S	.

•	N.C.m.s	•
Un	D.ind.m.s	un
moteur	N.C.m.s	moteur
de	P	de
stockage	N.C.m.s	stockage
est	V.P.3.s	être
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
d'	P	de
algorithmes	N.C.m.p	algorithme
permettant	VG	permettre
de	P	de
stocker	VW	stocker
et	C.C	et
d'	P	de
accéder	VW	accéder
aux	P+D.def.f.p	au
données	N.C.f.p	donnée
dans	P	dans
un	D.ind.m.s	un
SGBD	N.P.m.s	Sgbd
.	PONCT.S	.

En	P	en
général	N.C.m.s	général
,	PONCT.W	,
un	D.ind.m.s	un
seul	A.qual.m.s	seul
moteur	N.C.m.s	moteur
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
par	P	par
BDD	N.P.m.s	Bdd
.	PONCT.S	.

•	N.C.m.s	•
Pour	P	pour
lister	VW	lister
tous	A.ind.m.p	tous
les	D.def.m.p	le
moteurs	N.C.m.p	moteur
,	PONCT.W	,
utilisez	V.Y.2.p	utiliser
la	D.def.f.s	le
requête	N.C.f.s	requête
:	PONCT.W	:
SHOW	N.P.m.s	Show
ENGINES	N.P.x.s	Engines
;	PONCT.W	;
Transactions	N.C.f.p	transaction
avec	P	avec
MySQL	N.P.m.s	Mysql
Principaux	A.qual.m.p	principal
moteurs	N.C.m.p	moteur
de	P	de
stockage	N.C.m.s	stockage
MySQL	N.P.m.s	Mysql
:	PONCT.W	:
MyISAM	N.P.m.s	Myisam
:	PONCT.W	:
moteur	N.C.m.s	moteur
par	P	par
défaut	N.C.m.s	défaut
jusque	P	jusque
MySQL	N.P.m.s	Mysql
5.5	D.card.m.p	@card@
•	N.C.m.p	•
Très	ADV.-	très
simple	A.qual.m.s	simple
d'	P	de
utilisation	N.C.f.s	utilisation
•	P	à
Très	ADV.-	très
performant	A.qual.m.s	performant
sur	P	sur
des	D.ind.f.p	du
tables	N.C.f.p	table
fréquemment	ADV.-	fréquemment
ouvertes	A.qual.f.p	ouvert
(	PONCT.W	(
très	ADV.-	très
rapide	A.qual.f.s	rapide
pour	P	pour
les	D.def.f.p	le
opérations	N.C.f.p	opération
count()	N.C.m.s	countçë
et	C.C	et
les	D.def.f.p	le
lectures	N.C.f.p	lecture
)	PONCT.W	)
•	N.P.m.s	•
Offre	V.P.3.s	offrir
un	D.ind.m.s	un
index	N.C.m.s	index
FULL-TEXT	N.P.m.s	Full-Text
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
de	P	de
faire	VW	faire
des	D.ind.f.p	du
recherches	N.C.f.p	recherche
précises	A.qual.f.p	précis
sur	P	sur
des	D.ind.m.p	du
textes	N.C.m.p	texte
×	P	à
Ne	ADV.neg	ne
supporte	V.P.3.s	supporter
ni	C.C	ni
les	D.def.f.p	le
clés	N.C.f.p	clé
étrangères	A.qual.f.p	étranger
,	PONCT.W	,
ni	C.C	ni
les	D.def.f.p	le
transactions	N.C.f.p	transaction
×	P	à
Gère	N.P.m.s	Gère
le	D.def.m.s	le
verrouillage	N.C.m.s	verrouillage
au	P+D.def.m.s	au
niveau	N.C.m.s	niveau
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
(	PONCT.W	(
bloque	V.P.3.s	bloquer
la	D.def.f.s	le
table	N.C.f.s	table
entière	A.qual.f.s	entier
lors	ADV.-	lors
des	D.ind.f.p	du
opérations	N.C.f.p	opération
d'	P	de
insertions	N.C.f.p	insertion
,	PONCT.W	,
suppressions	N.C.f.p	suppression
ou	C.C	ou
MAJ	N.P.x.s	Maj
)	PONCT.W	)
Transactions	N.C.f.p	transaction
avec	P	avec
MySQL	N.P.m.s	Mysql
Principaux	A.qual.m.p	principal
moteurs	N.C.m.p	moteur
de	P	de
stockage	N.C.m.s	stockage
MySQL	N.P.m.s	Mysql
:	PONCT.W	:
InnoDB	N.P.m.s	Innodb
:	PONCT.W	:
moteur	N.C.m.s	moteur
par	P	par
défaut	N.C.m.s	défaut
depuis	P	depuis
MySQL	N.P.m.s	Mysql
5.5	A.card.f.s	@card@
•	N.C.m.p	•
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
clés	N.C.f.p	clé
étrangères	A.qual.f.p	étranger
et	C.C	et
support	A.qual.m.s	support
des	P+D.def.f.p	du
transactions	N.C.f.p	transaction
(	PONCT.W	(
par	P	par
défaut	N.C.m.s	défaut
:	PONCT.W	:
chaque	D.ind.f.s	chaque
requête	N.C.f.s	requête
SQL	N.P.m.s	Sql
est	V.P.3.s	être
considérée	VK.f.s	considérer
comme	P	comme
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
)	PONCT.W	)
–	A.qual.f.s	–
Véritable	A.qual.f.s	véritable
gestion	N.C.f.s	gestion
du	P+D.def.m.s	du
modèle	N.C.m.s	modèle
relationnel	A.qual.m.s	relationnel
&	PONCT.W	&
transactionnel	A.qual.m.s	transactionnel
–	P	à
Respecte	N.C.m.s	respect
ACID	N.P.x.s	Acid
•	P	à
Gère	N.P.m.s	Gère
le	D.def.m.s	le
verrouillage	N.C.m.s	verrouillage
au	P+D.def.m.s	au
niveau	N.C.m.s	niveau
de	P	de
la	D.def.f.s	le
ligne	N.C.f.s	ligne
×	N.P.x.s	×
Ne	N.P.m.s	Ne
propose	V.P.3.s	proposer
pas	ADV.neg	pas
d'	P	de
index	N.C.m.s	index
FULL-TEXT	N.P.m.s	Full-Text
,	PONCT.W	,
légèrement	ADV.-	légèrement
plus	ADV.-	plus
lent	A.qual.m.s	lent
dans	P	dans
les	D.def.f.p	le
opérations	N.C.f.p	opération
Transactions	N.P.x.s	Transactions
avec	P	avec
MySQL	N.P.m.s	Mysql
Principaux	A.qual.m.p	principal
moteurs	N.C.m.p	moteur
de	P	de
stockage	N.C.m.s	stockage
MySQL	N.P.m.s	Mysql
:	PONCT.W	:
Memory	N.P.m.s	Memory
:	PONCT.W	:
Stocke	N.P.m.s	Stocke
les	D.def.f.p	le
données	N.C.f.p	donnée
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
en	P	en
mémoire	N.C.f.s	mémoire
(	PONCT.W	(
RAM	N.P.f.s	Ram
)	PONCT.W	)
.	PONCT.S	.

•	P	à
Accès	N.C.m.s	accès
très	ADV.-	très
rapides	A.qual.m.p	rapide
×	P	à
En	P	en
cas	N.C.m.s	cas
de	P	de
panne	N.C.f.s	panne
,	PONCT.W	,
les	D.def.f.p	le
données	N.C.f.p	donnée
stockées	VK.f.p	stocker
sont	V.P.3.p	être
perdues	A.qual.f.p	perdu
Transactions	N.C.f.p	transaction
avec	P	avec
MySQL	N.P.m.s	Mysql
1	N.card.m.s	@card@
.	PONCT.S	.

Début	N.C.m.s	début
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
:	PONCT.W	:
START	N.C.m.s	start
TRANSACTION	N.C.f.s	transaction
2	A.card.f.s	@card@
.	PONCT.S	.

Requêtes	N.C.f.p	requête
:	PONCT.W	:
SELECT	N.P.f.s	Select
,	PONCT.W	,
UPDATE	N.P.m.s	Update
,	PONCT.W	,
...	PONCT.W	<unknown>
3	A.card.m.s	@card@
.	PONCT.S	.

Validation	N.C.f.s	validation
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
:	PONCT.W	:
COMMIT	N.P.m.s	Commit
OU	D.poss.f.s	ou
Annulation	N.C.f.s	annulation
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
en	P	en
cas	N.C.m.s	cas
d'	P	de
erreur	N.C.f.s	erreur
:	PONCT.W	:
ROLLBACK	N.P.m.s	Rollback
•	N.C.m.s	•
S'	C.S	si
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
d'	P	de
intégrité	N.C.f.s	intégrité
dans	P	dans
les	D.def.f.p	le
données	N.C.f.p	donnée
,	PONCT.W	,
le	D.def.m.s	le
rollback	N.C.m.s	rollback
se	CL.refl.3.m.s	se
fait	V.P.3.s	faire
automatiquement	ADV.-	automatiquement
Transactions	N.C.f.p	transaction
avec	P	avec
MySQL	N.P.m.s	Mysql
Ne	ADV.neg	ne
pas	ADV.neg	pas
oublier	VW	oublier
d'	P	de
utiliser	VW	utiliser
un	D.ind.m.s	un
moteur	N.C.m.s	moteur
de	P	de
BDD	N.P.m.s	Bdd
compatible	A.qual.m.s	compatible
avec	P	avec
les	D.def.f.p	le
transactions	N.C.f.p	transaction
et	C.C	et
les	D.def.f.p	le
propriétés	N.C.f.p	propriété
ACID	N.P.m.s	Acid
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
et	C.C	et
utiliser	VW	utiliser
les	D.def.f.p	le
requêtes	N.C.f.p	requête
et	C.C	et
fonctions	N.C.f.p	fonction
de	P	de
transactions	N.C.f.p	transaction
si	ADV.-	si
nécessaire	A.qual.m.s	nécessaire
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
sinon	N.C.m.s	sinon
:	PONCT.W	:
une	D.ind.f.s	un
requête	N.C.f.s	requête
=	P	à
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
“	P	à
pas	ADV.neg	pas
toujours	ADV.-	toujours
ACID	N.P.m.s	Acid
”	P	à
Transactions	N.C.f.p	transaction
avec	P	avec
MySQL	N.P.m.s	Mysql
Exemple	N.C.m.s	exemple
de	P	de
gestion	N.C.f.s	gestion
de	P	de
transaction	N.C.f.s	transaction
:	PONCT.W	:
achats	N.C.m.p	achat
en	P	en
ligne	N.C.f.s	ligne
•	P+D.def.m.s	c
Spécification	N.C.f.s	spécification
du	P+D.def.m.s	du
moteur	N.C.m.s	moteur
InnoDB	N.P.m.s	Innodb
lors	A.qual.m.s	lors
de	P	de
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
,	PONCT.W	,
pour	P	pour
supporter	VW	supporter
les	D.def.f.p	le
transactions	N.C.f.p	transaction
CREATE	N.P.f.s	Create
TABLE	N.P.m.s	Table
Compte	N.C.m.s	compte
(	PONCT.W	(
ID	N.P.m.s	Id
int	V.J.3.s	enir
,	PONCT.W	,
Solde	N.P.m.s	Solde
int	V.J.3.s	enir
not	V.P.3.p	notre
nul	A.qual.m.s	nul
)	PONCT.W	)
ENGINE=InnoDB	N.P.x.s	Engineinnodb
;	PONCT.W	;
SET	N.P.m.s	Set
autocommit=0	V.P.3.s	<unknown>
;	PONCT.W	;
//désactiver	VW	éddésactiver
la	D.def.f.s	le
validation	N.C.f.s	validation
automatique	A.qual.f.s	automatique
des	P+D.def.f.p	du
requêtes	N.C.f.p	requête
START	N.P.m.s	Start
TRANSACTION	N.P.m.s	Transaction
;	PONCT.W	;
UPDATE	N.P.m.s	Update
compte	V.P.3.s	compter
SET	N.P.m.s	Set
solde=solde+100	N.card.m.s	<unknown>
where	N.C.m.s	where
id=IDVendeur	N.P.x.s	Idçidvendeur
;	PONCT.W	;
UPDATE	N.P.m.s	Update
compte	V.P.3.s	compter
SET	N.P.m.s	Set
solde=solde-100	D.card.m.s	<unknown>
where	N.C.m.s	where
id=IDAcheteur	N.P.x.s	Idçidacheteur
;	PONCT.W	;
COMMIT	N.P.m.s	Commit
;	PONCT.W	;
Transactions	N.C.f.p	transaction
avec	P	avec
PDO	N.P.x.s	Pdo
1	N.card.m.s	@card@
.	PONCT.S	.

Début	N.C.m.s	début
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
:	PONCT.W	:
$bdd->beginTransaction()	N.C.m.s	<unknown>
;	PONCT.W	;
2	A.card.m.s	@card@
.	PONCT.S	.

Requêtes	N.C.f.p	requête
de	P	de
la	D.def.f.s	le
transactions	N.C.f.s	transaction
:	PONCT.W	:
$bdd->query()	N.P.m.s	<unknown>
;	PONCT.W	;
$bdd->query()	N.P.m.s	<unknown>
;	PONCT.W	;
3	PRO.card.f.p	@card@
.	PONCT.S	.

Validation	N.C.f.s	validation
/	PONCT.W	@card@
Annulation	N.C.f.s	annulation
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
:	PONCT.W	:
$bdd->commit()	N.P.x.s	<unknown>
;	PONCT.W	;
$bdd->rollback()	N.P.x.s	<unknown>
;	PONCT.W	;

