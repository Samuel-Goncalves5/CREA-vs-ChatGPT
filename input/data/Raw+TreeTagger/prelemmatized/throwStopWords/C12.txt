Programmer
PHP
Julien
Gaulmin
julien.gaulmin
alcove.fr
version
1.44
Copyright
2000
Julien
Gaulmin
julien.gaulmin
alcove.fr
Alcôve
document
peut
être
reproduit
distribué
et/ou
modifié
selon
termes
Licence
GNU
Documentation
Libre
GNU
Free
Documentation
Licence
version
1.1
ultérieure
telle
publiée
anglais
Free
Software
Foundation
sans
partie
invariante
comme
première
couverture
front
cover
texts
deux
premières
pages
sans
partie
considérée
comme
quatrième
couverture
back
cover
texts
copie
licence
fournie
annexe
peut
être
consultée
url
http
//www.gnu.org/copyleft/fdl.html
Alcôve
Centre
Paris
Pleyel
153
bd
Anatole
France
93200
Saint-Denis
France
Tél.
+33
1
49
22
68
00
Fax
+33
1
49
22
68
01
E-mail
alcove
alcove.fr
Toile
www.alcove.fr
1
Table
matières
Chapitre
1
Introduction
langage
1.1
programmation
web
1.2
Présentation
PHP
1.3
Installation
configuration
PHP
Chapitre
2
bases
langage
2.1
Syntaxe
langage
2.2
structures
contrôle
2.3
Fonctions
2.4
Programmation
orientée
objet
Chapitre
3
Fonctionnalités
essentielles
3.1
Connexions
utilisateurs
3.2
Gestion
sessions
3.3
Autres
fonctionnalités
Chapitre
4
Utilisation
avancée
3
5
18
29
38
40
78
112
126
138
140
149
169
180
2
4.1
Interopérabilité
applicatifs
4.2
Traitement
chaînes
caractères
4.3
Fonctionnalités
utiles
4.4
Conclusion
182
202
217
254
3
Chapitre
1
Alcôve
-
Programmer
PHP
Introduction
langage
4
Introduction
langage
Alcôve
-
Programmer
PHP
Objectifs
chapitre
Principes
programmation
web
Présentation
PHP
Installation
configuration
5
Section
1
Alcôve
-
Programmer
PHP
programmation
web
6
programmation
web
Alcôve
-
Programmer
PHP
Objectifs
section
Rappels
HTML
web
interactif
Notions
CGI
Distinction
PHP/CGI
7
programmation
web
Alcôve
-
Programmer
PHP
Rappels
HTML
H
yper
ext
arkup
anguage
Définit
structure
logique
document
web
Composé
ensemble
commandes
formatage
Basé
notion
environnement
possédant
début
fin
-
délimiteurs
tags
marqueurs
8
programmation
web
Alcôve
-
Programmer
PHP
marqueurs
définis
entre
Ex
marqueur
/marqueur
plupart
environnements
peuvent
être
imbriqués
selon
règles
bien
définies
Ex
H1
B
titre
/B
/H1
permis
faire
chevaucher
environnements
Ex
H1
B
titre
/H1
/B
9
programmation
web
Alcôve
-
Programmer
PHP
Structure
générale
page
HTML
HTML
HEAD
TITLE
titre
/TITLE
commentaires
/HEAD
BODY
H1
chapitre
/H1
P
paragraphe
/P
ADDRESS
coordonnées
/ADDRESS
/BODY
/HTML
10
programmation
web
Alcôve
-
Programmer
PHP
web
interactif
Deux
principaux
types
interactions
–
côté
serveur
Server-side
scripting
–
côté
client
Client-side
scripting
Chacun
types
précédents
divise
encore
sous-catégories
11
programmation
web
Alcôve
-
Programmer
PHP
Côté
client
–
scripts
embarqués
page
HTML
HTML-embedded
scripting
-
Javascript
–
applets
-
Java
ActiveX
–
plugins
propriétaires
12
programmation
web
Alcôve
-
Programmer
PHP
Côté
serveur
–
CGI
-
Perl
Shell
–
Interpréteurs
intégrés
serveur
HTTP
scripts
embarqués
page
HTML
HTTPD
modules
HTML-embedded
scripting
-
PHP
ASP-VBScript
scripts
CGI
CGI-like
-
mod_perl/Apache
–
Servlets
-
Java
13
programmation
web
Alcôve
-
Programmer
PHP
WWW
interactif
Server-side
scripting
CGI
Perl
Shell
Client-side
scripting
Servlets
Java
Applets
Java
ActiveX
HTTPD
modules
HTML-embedded
scripting
PHP
ASP-VBS
HTML-embedded
scripting
JavaScript
CGI-like
mod_perl
/Apache
14
programmation
web
Alcôve
-
Programmer
PHP
Notions
CGI
ommon
G
ateway
I
nterface
Interface
communication
création
programmes
capables
être
exécutés
serveur
HTTP
Permet
création
dynamique
pages
côté
serveur
Généralement
utilisé
servir
requêtes
provenance
page
formulaire
HTML
15
programmation
web
Alcôve
-
Programmer
PHP
Principe
CGI
GET/POST
emballage
Formulaire
HTML
Browser
APPEL
variables
RÉSULTAT
RÉPONSE
Programme
externe
HTTP
Serveur
HTTP
CGI
16
programmation
web
Alcôve
-
Programmer
PHP
if
want_page==1
{
want_page=0
}
Scénario
génération
dynamique
page
via
CGI
–
utilisateur
remplit
formulaire
HTML
valide
–
navigateur
ouvre
connexion
vers
serveur
HTTP
envoie
requête
correspondante
nom
CGI
+
paramètres
–
serveur
HTTP
invoque
script
CGI
transmettant
paramètres
requête
–
script
CGI
génère
page
correspondant
paramètres
–
serveur
envoie
page
navigateur
ferme
connexion
–
navigateur
affiche
page
17
programmation
web
Alcôve
-
Programmer
PHP
Distinction
PHP/CGI
Tous
deux
situés
côté
serveur
PHP
code
PHP
contenu
pages
HTML
Ex
php
username
=
``
toto
HTML
BODY
H1
Bonjour
monsieur
php
print
username
/H1
/BODY
/HTML
CGI
code
HTML
contenu
code
CGI
Ex
#
/usr/bin/perl
-w
username
=
``
toto
print
``
Content-Type
text/html\n\n
HTML
BODY
H1
Bonjour
monsieur
username
/H1
/BODY
/HTML
18
Section
2
Alcôve
-
Programmer
PHP
Présentation
PHP
19
Présentation
PHP
Alcôve
-
Programmer
PHP
Objectifs
section
Vue
ensemble
PHP
histoire
langage
avantages
inconvénients
20
Présentation
PHP
Alcôve
-
Programmer
PHP
Vue
ensemble
PHP
server-side
HTML-embedded
scripting
language
Langage
script
côté
serveur
Embarqué
pages
HTML
Syntaxe
héritée
Perl
Extensible
nombreuses
bibliothèques
Supporte
pratiquement
tous
standards
web
Logiciel
Open
Source
Licence
PHP
type
BSD
21
Présentation
PHP
Alcôve
-
Programmer
PHP
histoire
langage
Créé
Rasmus
Lerdorf
1994
besoins
personnels
P
ersonnal
H
ome
P
age
Première
version
publique
1995
sous
nom
Personnal
Home
Page
Tools
capable
gérer
livre
or
compteur
accès
22
Présentation
PHP
Alcôve
-
Programmer
PHP
Deuxième
version
plus
complète
PHP/FI
1995
gestion
formulaires
HTML
bases
mSQL
ainsi
nouvel
interpréteur
PHP/FI
utilisé
environ
50000
sites
web
1997
23
Présentation
PHP
Alcôve
-
Programmer
PHP
1997
projet
devient
travail
équipe
interpréteur
réécrit
Zeev
Suraski
Andi
Gutmans
donner
version
PHP3
version
3
PHP
rapidement
imposée
atteindre
environ
150000
sites
web
durant
1999
source
Netcraft
devenir
P
HP
H
ypertext
P
reProcessor
24
Présentation
PHP
Alcôve
-
Programmer
PHP
Aujourd
hui
projet
chapeauté
Zend
société
privée
créée
Suraskyi
Gutmans
commercialise
logiciels
complémentaires
PHP
dernière
version
date
PHP4
2000
possède
interpréteur
optimisé
Zend
ouvre
autres
serveurs
HTTP
Apache
25
Présentation
PHP
Alcôve
-
Programmer
PHP
26
Présentation
PHP
Alcôve
-
Programmer
PHP
avantages
PHP
client
accès
code
source
puisque
celui-ci
interprété
avant
envoi
=
Javascript
client
reçoit
résultat
exécution
script
peut
configurer
serveur
HTTP
masquer
complètement
qualité
dynamique
pages
code
alourdi
commandes
destinées
générer
page
HTML
=
CGI
27
Présentation
PHP
Alcôve
-
Programmer
PHP
langage
possède
nombreuses
bibliothèques/modules
–
calcul
mathématique
–
création
dynamique
images
–
gestion
sessions
–
connexions
sécurisées
SSL
–
accès
plupart
SGBD
–
accès
bases
LDAP
28
Présentation
PHP
Alcôve
-
Programmer
PHP
inconvénients
PHP
aussi
rapide
mod_perl
certains
CGI
plus
portable
aussi
simple
ASP-VBScript
plus
respectueux
standards
web
sous
licence
Open
Source
-
plus
facilement
extensible
interactivité
niveau
client
-
doit
quand
utiliser
Javascript
cas
là
29
Section
3
Alcôve
-
Programmer
PHP
Installation
configuration
PHP
30
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Objectifs
section
Installation
PHP
Configuration
via
php3.ini/php.ini
Premier
test
Ajout
nouveaux
modules
31
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Installation
Trois
types
installation
–
module
dynamique
serveur
HTTP
ex
mod_php
Apache
–
module
statique
serveur
HTTP
20
plus
rapide
mod_php
nécessite
patcher
serveur
HTTP
tout
recompiler
–
sous
forme
CGI
serveurs
HTTP
non
supportés
32
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Télécharger
sources
http
//fr.php.net
mirroir
français
site
officiel
PHP
Installer
sources
répertoire
différent
celui
serveur
HTTP
ex
/usr/local/src/php/
commande
tar
-zxvf
php-
version
.tar.gz
-C
/usr/local/src/php/
Configuration
installation
–
./setup
configuration
interactive
–
./configure
options
./configure
help
connaître
toutes
options
33
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Compilation
installation
make
su
make
install
Association
fichiers
contenant
code
PHP
interpréteur
PHP
configuration
serveur
HTTP
Ex
serveur
Apache
srm.conf
httpd.conf
PHP3
-
AddType
application/x-httpd-php3
.php
PHP4
-
AddType
application/x-httpd-php
.php
Sous
Debian
tout
ceci
simplifié
grâce
utilitaire
apt-get
remplacer
php3
php4
PHP4
–
apt-get
install
php3
module
dynamique
Apache
–
apt-get
install
php3-cgi
CGI
34
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Configuration
PHP
php3.ini/php.ini
Généralement
/etc/php
version
/apache/
/usr/lib/php
version
/
fichier
php3.ini
PHP3
php.ini
PHP4
contrôle
principaux
comportements
PHP
Très
clair
facilement
configurable
Syntaxe
–
clef
=
valeur
–
clef
=
``
valeur
complexe
–
commentaire
–
booléen
-
1
True
Yes
/
0
Off
False
No
35
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Segmenté
parties
–
options
langage
–
ressources
maximales
allouées
PHP
–
gestion
erreurs
–
gestion
données
HTTP
–
fichiers
répertoires
–
extensions
dynamiques
modules
–
configuration
modules
PHP
prenne
modifications
compte
faut
relancer
serveur
HTTP
ex
serveur
Apache
-
apachectl
restart
36
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Premier
test
Créer
fichier
test.php
php
phpinfo
Placer
fichier
racine
serveur
HTTP
répertoire
doc_root
activé
option
safe_mode
Charger
URL
http
//localhost/test.php
navigateur
web
Bravo
créé
première
page
dynamique
PHP
plus
résume
toutes
fonctionnalités
PHP
configurées
machine
37
Installation
configuration
PHP
Alcôve
-
Programmer
PHP
Installer
nouveau
module
PHP
Placer
nouveau
fichier
nom
.so
extension_dir
défaut
/usr/lib/php
version
/apache
configurable
php3.ini/php.ini
utiliser
apt-get
install
php
version
_
nom
sous
Debian
Ajouter
ligne
extension=
nom
.so
php3.ini/php.ini
Configurer
aspects
relatifs
module
php3.ini/php.ini
Redémarrer
serveur
HTTP
38
Chapitre
2
Alcôve
-
Programmer
PHP
bases
langage
39
bases
langage
Alcôve
-
Programmer
PHP
Objectifs
chapitre
Syntaxe
langage
structures
contrôle
Fonctions
Programmation
orientée
objet
40
Section
1
Alcôve
-
Programmer
PHP
Syntaxe
langage
41
Syntaxe
langage
Alcôve
-
Programmer
PHP
Objectifs
section
Syntaxe
base
types
données
variables
constantes
opérateurs
42
Syntaxe
langage
Alcôve
-
Programmer
PHP
Syntaxe
base
Quatre
moyens
équivalents
passer
mode
HTML
PHP
–
standard
php
code
PHP
–
option
short_open_tag
code
PHP
–
option
asp_tags
code
PHP
–
marqueur
script
HTML
script
language=
php
code
PHP
/script
43
Syntaxe
langage
Alcôve
-
Programmer
PHP
Bases
syntaxe
héritées
Perl
–
séparateur
instructions
-
–
commentaires
code
/
*
commentaires
*
/
code
code
//
commentaires
code
#
commentaires
....
44
Syntaxe
langage
Alcôve
-
Programmer
PHP
types
données
PHP
supporte
types
données
suivants
–
nombres
entiers
–
nombres
virgule
flottante
–
chaînes
caractères
–
tableaux
–
objets
développés
section
programmation
orientée
objet
Tous
noms
variables
précédés
ex
toto
=
5
45
Syntaxe
langage
Alcôve
-
Programmer
PHP
possible
spécifier
variable
type
entier
façon
suivante
–
toto
=
123
#
entier
base
10
–
toto
=
-123
#
entier
négatif
–
toto
=
0123
#
entier
base
8
–
toto
=
0x123
#
entier
base
16
possible
spécifier
variable
type
flottant
double
façon
suivante
–
titi
=
1.234
#
nombre
virgule
flottante
–
titi
=
1.2e3
#
aussi
nombre
virgule
flottante
46
Syntaxe
langage
Alcôve
-
Programmer
PHP
possible
spécifier
variable
type
chaîne
caratères
façon
suivante
–
personne
=
Smith
#
chaîne
caractères
–
personne
=
``
M.
Smith
#
aussi
chaîne
caractères
deuxième
cas
chaîne
contient
noms
variables
celles-ci
remplacées
valeur
Ex
type
=
M.
nom
=
``
Smith
personne
=
``
type
nom
Equivalent
personne
=
Smith
47
Syntaxe
langage
Alcôve
-
Programmer
PHP
Quand
utilise
``
doit
échapper
certains
caractères
backslash
\
pouvoir
afficher
comme
tels
–
dollar
\
–
double
quotes
``
\
–
backslash
\
\\
existe
caractères
spéciaux
nécessitent
être
échappés
–
nouvelle
ligne
\n
–
retour
ligne
\r
–
tabulation
\t
Tout
autre
caractère
échappé
génèrera
avertissement
warning
48
Syntaxe
langage
Alcôve
-
Programmer
PHP
Lorsqu
chaîne
caractères
évaluée
comme
valeur
numérique
règles
suivantes
appliquent
–
chaîne
type
flottant/double
contient
e
E
sinon
type
entier
–
valeur
définie
première
partie
chaîne
0
texte
–
lorsque
première
expression
chaîne
type
variable
dépend
seconde
expression
Ex
toto
=
1
+
``
4.5
#
toto
vaut
5.5
toto
=
1
+
``
-1e3
#
toto
vaut
-999
toto
=
1
+
``
titi
+
149
#
toto
vaut
1
toto
=
1
+
``
149
+
titi
#
toto
vaut
150
49
Syntaxe
langage
Alcôve
-
Programmer
PHP
tableaux
PHP
ressemblent
tableaux
associatifs
hash-tables
Perl
index
tableau
appellé
clé
peut
être
indifféremment
entier
chaîne
caractères
valeur
associée
clé
appelée
valeur
peut
utiliser
fonction
array
créer
tableau
peut
aussi
affecter
directement
valeurs
tableau
fonction
list
permet
affecter
variables
comme
elles
constituaient
tableau
50
Syntaxe
langage
Alcôve
-
Programmer
PHP
Ex
tab
0
=
1
tab
1
=
``
toto
#
peut
mélanger
contenus
tab
``
toto
=
``
titi
#
peut
mélanger
clés
tab
``
toto
8
#
tableau
deux
dimensions
tab
``
toto
8
``
encore
2
#
quatre
dimensions
suite
=
array
1
2
3
4
personne
=
array
``
type
=
``
``
``
nom
=
Smith
list
num1
num2
=
suite
#
num1
vaut
1
num2
vaut
2
51
Syntaxe
langage
Alcôve
-
Programmer
PHP
peut
connaître
nombre
éléments
tableau
grâce
fonctions
–
sizeof
retourne
nombre
éléments
tableau
–
count
retourne
nombre
éléments
tableau
existe
1
variable
tableau
0
variable
existe
52
Syntaxe
langage
Alcôve
-
Programmer
PHP
Chaque
tableau
entretient
pointeur
courant
sert
naviguer
sein
grâce
fonctions
–
reset
place
pointeur
interne
premier
élément
retourne
valeur
–
current
retourne
valeur
élément
courant
–
next
place
pointeur
interne
élément
suivant
retourne
valeur
–
prev
place
pointeur
interne
élément
précédent
retourne
valeur
–
each
retourne
paire
clé/valeur
courante
tableau
avance
pointeur
élément
suivant
seule
fonction
retourne
faux
élément
vaut
0
``
53
Syntaxe
langage
Alcôve
-
Programmer
PHP
tableau
peut
être
trié
utilisant
fonctions
suivantes
–
asort
/arsort
trient
tableau
ordre
croissant/décroissant
valeurs
–
ksort
/rsort
trient
tableau
ordre
croissant/décroissant
clés
–
sort
trie
tableau
ordre
croissant
clés
valeurs
perd
correspondance
clé/valeur
–
uasort
/uksort
/usort
trient
tableau
façon
leurs
quasi-homonymes
u
user
fonction
comparaison
fournie
utilisateur
54
Syntaxe
langage
Alcôve
-
Programmer
PHP
Ex
function
cmp
b
{
if
==
b
return
0
return
b
-1
1
}
tab
=
array
3,2,5,6,1
usort
tab
cmp
while
list
cle
valeur
=
each
tab
{
echo
``
tab
cle
=
valeur
BR
\n
}
programme
équivalent
rsort
55
Syntaxe
langage
Alcôve
-
Programmer
PHP
variables
portée
variable
dépend
contexte
lequel
définie
plupart
variables
portée
étend
intégralité
script
PHP
elles
globales
Cependant
variables
locales
sein
fonction
56
Syntaxe
langage
Alcôve
-
Programmer
PHP
Ex
toto
=
1
#
portée
globale
function
affiche
{
echo
toto
#
portée
locale
}
affiche
exemple
affichera
rien
car
echo
utilise
variable
locale
toto
57
Syntaxe
langage
Alcôve
-
Programmer
PHP
Deux
façons
existent
accéder
variable
globale
sein
bloc
–
déclarer
variable
comme
global
sein
bloc
–
utiliser
tableau
associatif
GLOBALS
comme
clé
nom
variable
globale
58
Syntaxe
langage
Alcôve
-
Programmer
PHP
Ex
toto
=
1
#
portée
globale
titi
=
2
#
portée
globale
function
affiche
{
global
toto
#
portée
globale
echo
``
toto
GLOBALS
titi
}
affiche
exemple
affichera
1
2
59
Syntaxe
langage
Alcôve
-
Programmer
PHP
Variables
statiques
variable
statique
variable
locale
perd
valeur
chaque
fois
bloc
exécuté
utilise
comme
attribut
static
déclarer
telle
variable
Ex
static
toto
type
variables
très
utile
création
fonctions
récursives
60
Syntaxe
langage
Alcôve
-
Programmer
PHP
Ex
compter
récursivement
jusqu
10
function
compte
{
static
compteur
=
0
compteur++
echo
``
compteur
``
if
compteur
10
compte
}
compte
Affiche
1
2
3
4
5
6
7
8
9
10
61
Syntaxe
langage
Alcôve
-
Programmer
PHP
Variables
dynamiques
variable
dynamique
prend
valeur
variable
utilise
comme
nom
autre
variable
Ex
toto
=
``
Hello
#
toto
vaut
Hello
toto
=
``
World
#
Hello
vaut
World
echo
``
toto
Hello
#
affiche
Hello
World
echo
``
toto
{
toto
}
#
affiche
aussi
Hello
World
62
Syntaxe
langage
Alcôve
-
Programmer
PHP
nom
variable
peut
être
placé
entre
accolades
éviter
ambiguïtés
Ex
1
=
``
V1
=
``
V2
b
=
``
b
1
=
``
Résultat
{
b
}
1
==
``
V1
Résultat
{
b
1
}
==
``
V2
Conclusion
{
b
}
1
{
b
1
}
utilisent
2
contextes
différents
63
Syntaxe
langage
Alcôve
-
Programmer
PHP
Variables
extérieures
Toutes
variables
transmises
méthodes
POST
GET
accessibles
via
tableaux
associatifs
HTTP_POST_VARS
HTTP_GET_VARS
option
track_vars
activée
php3.ini/php.ini
variables
environnement
accessibles
comme
variables
PHP
classiques
ex
HOME
peut
aussi
utiliser
fonctions
getenv
putenv
manipuler
variables
environnement
64
Syntaxe
langage
Alcôve
-
Programmer
PHP
Variables
prédéfinies
Certaines
variables
prédéfinies
PHP
elles
disponibles
pendant
toute
exécution
script
PHP_SELF
URI
script
cours
exécution
GLOBALS
Tableau
variables
globales
HTTP_GET_VARS
Tableau
variables
issues
GET
HTTP_POST_VARS
Tableau
variables
issues
POST
HTTP_COOKIE_VARS
Tableau
variables
issues
cookies
65
Syntaxe
langage
Alcôve
-
Programmer
PHP
Variables
environnement
CGI
SERVER_SOFTWARE
SERVER_NAME
GATEWAY_INTERFACE
SERVER_PROTOCOL
SERVER_PORT
REQUEST_METHOD
PATH_INFO
PATH_TRANSLATED
SCRIPT_NAME
QUERY_STRING
REMOTE_HOST
REMOTE_ADDR
AUTH_TYPE
REMOTE_USER
REMOTE_IDENT
CONTENT_TYPE
CONTENT_LENGTH
http
//hoohoo.ncsa.uiuc.edu/cgi/env.html
66
Syntaxe
langage
Alcôve
-
Programmer
PHP
déterminer
type
variable
peut
utiliser
fonctions
suivantes
–
gettype
retourne
chaine
décrivant
type
variable
passée
argument
integer
double
string
array
object
unknown
type
–
is_long
/is_int
/is_integer
retourne
true
variable
passée
argument
entier
false
cas
contraire
–
is_double
/is_float
idem
flottants/doubles
–
is_string
idem
chaînes
caractères
–
is_array
idem
tableaux
–
is_object
idem
objets
67
Syntaxe
langage
Alcôve
-
Programmer
PHP
constantes
PHP
définit
certaines
constantes
propose
mécanisme
définir
autres
durant
exécution
script
définit
constante
utilisant
fonction
define
Ex
define
``
MA_CONSTANTE
``
Bonjour
echo
MA_CONSTANTE
#
affiche
Bonjour
68
Syntaxe
langage
Alcôve
-
Programmer
PHP
principales
constantes
définies
PHP
suivantes
–
__FILE__
nom
fichier
actuellement
exécuté
–
__LINE__
numéro
ligne
actuellement
exécutée
–
PHP_VERSION
présentation
version
PHP
utilisée
ex
3.0.8-dev
–
PHP_OS
système
exploitation
utilisé
machine
fait
tourner
PHP
ex
Linux
–
TRUE
vrai
–
FALSE
faux
–
E_
*
gestion
erreurs
cf
section
correspondante
69
Syntaxe
langage
Alcôve
-
Programmer
PHP
opérateurs
opérateurs
arithmétiques
–
addition
+
b
–
soustraction
-
b
–
multiplication
*
b
–
division
/
b
–
modulo
reste
division
entière
b
70
Syntaxe
langage
Alcôve
-
Programmer
PHP
opérateur
chaînes
caractères
–
concaténation
chaine1
chaine2
Ex
jour
=
``
Lundi
echo
jour
``
Affiche
Lundi
71
Syntaxe
langage
Alcôve
-
Programmer
PHP
opérateurs
bits
–
bit
bit
&
b
–
bit
bit
|
b
–
OU-Exclusif/XOR
bit
bit
ˆ
b
–
NON
bit
bit
˜
–
décalage
droite
b
bits
b
–
décalage
gauche
b
bits
b
72
Syntaxe
langage
Alcôve
-
Programmer
PHP
opérateurs
logiques
–
vrai
b
vrais
and
b
&
&
b
–
vrai
b
vrai
or
b
||
b
–
OU-Exclusif/XOR
vrai
seul
b
vrai
xor
b
–
NON
vrai
faux
73
Syntaxe
langage
Alcôve
-
Programmer
PHP
opérateurs
affectation
–
opérateur
affectation
plus
simple
signe
=
–
signifie
``
égal
opérande
gauche
signe
=
voit
affecté
valeur
opérande
droite
–
valeur
retournée
expression
assignement
valeur
assignée
Ex
=
b
=
4
+
3
#
vaut
7
b
vaut
4
74
Syntaxe
langage
Alcôve
-
Programmer
PHP
–
existe
plus
opérateurs
combinés
tous
opérateurs
arithmétiques
opérateurs
bits
bits
opérateur
concaténation
+=
-=
*
=
/=
=
.=
&
=
|=
ˆ=
=
=
˜=
–
ceux-ci
permettent
utiliser
valeur
variable
expression
affecter
résultat
expression
variable
Ex
toto
+=
3
#
équivaut
toto
=
toto
+
3
75
Syntaxe
langage
Alcôve
-
Programmer
PHP
–
opérateur
++
équivalent
+=
1
–
opérateur
équivalent
-=
1
–
deux
opérateurs
peuvent
être
placés
avant
pré-exécution
après
post-exécution
variable
laquelle
appliquent
Ex
toto
=
0
echo
++
toto
#
affiche
1
echo
toto++
#
affiche
1
echo
toto
#
affiche
2
76
Syntaxe
langage
Alcôve
-
Programmer
PHP
opérateurs
comparaison
–
égal
==
b
–
différent
=
b
–
supérieur
b
–
inférieur
b
–
supérieur
égal
=
b
–
inférieur
égal
=
b
77
Syntaxe
langage
Alcôve
-
Programmer
PHP
opérateur
ternaire
–
issu
langage
–
condition
expression1
expression2
–
renvoie
expression1
condition
vraie
expression2
cas
contraire
Ex
echo
toto
==
0
``
Nul
``
Non
nul
#
affiche
Nul
toto
vaut
0
Non
nul
sinon
78
Section
2
Alcôve
-
Programmer
PHP
structures
contrôle
79
structures
contrôle
Alcôve
-
Programmer
PHP
Objectifs
section
Introduction
Instructions
conditionnelles
Boucles
Inclusions
80
structures
contrôle
Alcôve
-
Programmer
PHP
Introduction
Tous
scripts
PHP
suite
instructions
instruction
peut
être
–
assignement
–
appel
fonction
–
instruction
conditionnelle
–
instruction
fait
rien
instruction
vide
instruction
termine
habituellement
point
virgule
81
structures
contrôle
Alcôve
-
Programmer
PHP
Plusieurs
instructions
peuvent
être
regroupées
bloc
délimité
accolades
{
}
bloc
considéré
comme
instruction
différents
types
instructions
décrits
chapitre
82
structures
contrôle
Alcôve
-
Programmer
PHP
Instructions
conditionnelles
instruction
if
plus
importantes
instructions
tous
langages
PHP
inclus
permet
exécution
conditionnelle
partie
code
fonctionnalités
instruction
if
mêmes
PHP
83
structures
contrôle
Alcôve
-
Programmer
PHP
Prototype
if
condition
{
#
instructions
exécuter
condition
vraie
}
chaine
caractère
contenant
0
évaluée
comme
fausse
84
structures
contrôle
Alcôve
-
Programmer
PHP
Souvent
souhaite
exécuter
instruction
condition
remplie
autre
instruction
condition
remplie
rôle
else
Prototype
if
condition
{
#
instructions
exécuter
condition
vraie
}
else
{
#
instructions
exécuter
condition
fausse
}
85
structures
contrôle
Alcôve
-
Programmer
PHP
elseif
permet
comme
expression
else
exécuter
instruction
après
if
cas
dernier
évalué
comme
faux
différence
expression
else
exécutera
instructions
expression
condionnelle
elseif
évaluée
comme
vraie
86
structures
contrôle
Alcôve
-
Programmer
PHP
Prototype
if
condition1
{
#
instructions
exécuter
condition1
vraie
}
elseif
condition2
{
#
instructions
exécuter
condition2
vraie
}
elseif
condition3
{
#
instructions
exécuter
condition3
vraie
}
else
{
#
instructions
exécuter
aucune
conditions
vraie
}
87
structures
contrôle
Alcôve
-
Programmer
PHP
syntaxe
if
venons
voir
directement
héritée
langage
toujours
très
adaptée
mélanger
code
PHP
HTML
PHP
propose
autre
syntaxe
if
permet
améliorer
lisibilité
88
structures
contrôle
Alcôve
-
Programmer
PHP
Prototype
simplifié
if
condition1
#
instructions
exécuter
condition1
vraie
elseif
condition2
#
instructions
exécuter
condition2
vraie
elseif
condition3
#
instructions
exécuter
condition3
vraie
else
#
instructions
exécuter
aucune
conditions
vraie
endif
89
structures
contrôle
Alcôve
-
Programmer
PHP
Ex
if
type
==
``
Femme
{
echo
``
Bonjour
Madame
}
elseif
type
==
``
Homme
{
echo
``
Bonjour
Monsieur
}
else
{
echo
``
Bonjour
bizarre
}
90
structures
contrôle
Alcôve
-
Programmer
PHP
Boucles
boucle
while
moyen
plus
simple
implémenter
boucle
PHP
boucle
comporte
manière
instructions
exécutées
tant
expression
vraie
valeur
expression
vérifiée
chaque
début
boucle
91
structures
contrôle
Alcôve
-
Programmer
PHP
valeur
change
durant
exécution
instruction
exécution
arrêtera
fin
itération
Comme
if
PHP
définit
syntaxe
simplifiée
plus
celle
héritée
langage
92
structures
contrôle
Alcôve
-
Programmer
PHP
Prototype
while
condition
{
#
instructions
exécuter
tant
condition
vraie
}
Prototype
simplifié
while
condition
#
instructions
exécuter
tant
condition
vraie
endwhile
93
structures
contrôle
Alcôve
-
Programmer
PHP
Ex
compter
jusqu
10
i
=
1
while
i
=
10
{
echo
``
i
``
i++
}
Affiche
1
2
3
4
5
6
7
8
9
10
94
structures
contrôle
Alcôve
-
Programmer
PHP
boucle
do
..
while
ressemble
beaucoup
boucle
while
différence
expression
testée
fin
chaque
itération
lieu
début
première
itération
boucle
toujours
exécutée
syntaxe
possible
boucles
do
..
while
aussi
héritée
langage
95
structures
contrôle
Alcôve
-
Programmer
PHP
Prototype
do
{
#
instructions
exécuter
première
fois
ensuite
tant
condition
vraie
}
while
condition
96
structures
contrôle
Alcôve
-
Programmer
PHP
Ex
compter
jusqu
10
i
=
1
do
{
echo
``
i
``
i++
}
while
i
=
10
Affiche
1
2
3
4
5
6
7
8
9
10
97
structures
contrôle
Alcôve
-
Programmer
PHP
boucle
for
PHP
tout
comme
boucle
plus
complexe
aussi
plus
puissante
fonctionne
comme
boucle
for
langage
Prototype
for
expression1
condition
expression2
{
#
instructions
exécuter
tant
condition
vraie
}
98
structures
contrôle
Alcôve
-
Programmer
PHP
expression1
évaluée
exécutée
quoi
arrive
début
boucle
début
chaque
itération
condition
évaluée
–
vraie
boucle
continue
instructions
nouveau
exécutées
–
fausse
exécution
boucle
arrête
fin
chaque
itération
expression2
évaluée
exécutée
99
structures
contrôle
Alcôve
-
Programmer
PHP
expressions/conditions
peuvent
éventuellement
être
laissées
vides
-
attention
boucles
infinies
Comme
if
while
PHP
définit
syntaxe
simplifiée
plus
celle
héritée
langage
Prototype
simplifié
for
expression1
condition
expression2
#
instructions
exécuter
tant
condition
vraie
endfor
100
structures
contrôle
Alcôve
-
Programmer
PHP
Ex
compter
jusqu
10
for
i
=
1
i
=
10
i++
{
echo
``
i
``
}
Ex2
compter
jusqu
10
for
i
=
1
i
=
10
print
``
i
``
i++
Ex3
compter
jusqu
10
for
i
=
1
i
=
10
print
i++
3
exemples
affichent
1
2
3
4
5
6
7
8
9
10
101
structures
contrôle
Alcôve
-
Programmer
PHP
PHP4
définit
boucle
foreach
comme
Perl
réaliser
boucle
éléments
tableau
PHP3
peut
réaliser
équivalent
boucle
while
fonction
list
each
vu
précédemment
Ex
afficher
tous
arguments
formulaire
POST
while
list
cle
valeur
=
each
HTTP_POST_VARS
{
echo
``
cle
=
valeur
``
}
102
structures
contrôle
Alcôve
-
Programmer
PHP
instruction
foreach
boucle
devient
foreach
HTTP_POST_VARS
cle
=
valeur
{
echo
``
cle
=
valeur
``
}
bien
veut
récupérer
valeurs
foreach
HTTP_POST_VARS
valeur
{
echo
``
valeur
``
}
103
structures
contrôle
Alcôve
-
Programmer
PHP
instruction
break
permet
sortir
boucle
importe
quel
moment
Ex
compter
jusqu
10
for
i
=
1
i++
{
if
i
10
break
echo
``
i
``
}
Affiche
1
2
3
4
5
6
7
8
9
10
104
structures
contrôle
Alcôve
-
Programmer
PHP
instruction
continue
permet
ignorer
instructions
restantes
boucle
passer
directement
itération
suivante
Ex
compter
2
2
jusqu
10
for
i
=
1
i
=
10
i++
{
if
i
2
continue
#
i
impaire
echo
``
i
``
}
Affiche
2
4
6
8
10
105
structures
contrôle
Alcôve
-
Programmer
PHP
instruction
switch
équivaut
serie
instructions
if
..
elseif
..
elseif
....
else
utilisée
comparer
variable
expression
grand
nombre
valeurs
différentes
exécuter
différentes
parties
code
suivant
valeur
laquelle
égale
106
structures
contrôle
Alcôve
-
Programmer
PHP
Prototype
switch
expression
{
case
resultat1
#
instructions
exécuter
expression
vaut
resultat1
break
case
resultat2
#
instructions
exécuter
expression
vaut
resultat2
break
default
#
instructions
exécuter
dernier
recours
}
107
structures
contrôle
Alcôve
-
Programmer
PHP
instruction
switch
exécute
chacune
clauses
ordre
écriture
exécutée
ligne
ligne
Aucun
code
exécuté
jusqu
premier
case
vérifié
108
structures
contrôle
Alcôve
-
Programmer
PHP
Lorsqu
trouve
premier
case
vérifié
PHP
exécute
alors
instructions
correspondantes
continue
jusqu
fin
bloc
switch
reproduire
fonctionnement
if
..
elseif
..
elseif
....
else
faut
terminer
tous
cases
break
peut
définir
case
exécuté
défaut
équivalent
else
grâce
default
109
structures
contrôle
Alcôve
-
Programmer
PHP
Ex
switch
type
{
case
``
Femme
echo
``
Bonjour
Madame
break
case
``
Homme
echo
``
Bonjour
Monsieur
break
default
echo
``
Bonjour
bizarre
}
110
structures
contrôle
Alcôve
-
Programmer
PHP
Inclusions
fonction
require
substitue
elle-même
contenu
fichier
spécifié
argument
substitution
opère
avant
interprétation
code
ressemble
peu
près
#
include
utilise
sein
boucle
fichier
tel
première
itération
réutilisé
chaque
itération
changé
entre
temps
plus
déconseillé
utiliser
require
nom
fichier
dynamique
contenant
variable
111
structures
contrôle
Alcôve
-
Programmer
PHP
fonction
include
inclut
évalue
fichier
spécifié
argument
Ceci
fait
chaque
fois
fonction
rencontrée
peut
utiliser
fonction
sein
boucle
inclure
fichier
différent
chaque
fois
exemple
ex
include
``
toto_
i
112
Section
3
Alcôve
-
Programmer
PHP
Fonctions
113
Fonctions
Alcôve
-
Programmer
PHP
Objectifs
section
Présentation
fonctions
PHP
valeurs
retour
arguments
114
Fonctions
Alcôve
-
Programmer
PHP
Présentation
fonctions
PHP
fonction
peut
être
définie
utilisant
syntaxe
suivante
function
ma_fonction
arg_1
arg_2
arg_n
{
#
Corps
fonction
return
valeur_de_retour
}
Tout
code
PHP
correct
syntaxiquement
peut
apparaître
fonction
définition
classe
PHP3
toute
fonction
doit
être
préalablement
définie
avant
être
utilisée
idem
langage
peut
être
définie
importe
PHP4
115
Fonctions
Alcôve
-
Programmer
PHP
valeurs
retour
valeurs
renvoyées
utilisant
instruction
retour
optionnelle
Tous
types
variables
peuvent
être
renvoyés
tableaux
objets
compris
Ex
function
carre
nombre
{
return
nombre
*
nombre
}
echo
carre
3
#
affiche
valeur
9
116
Fonctions
Alcôve
-
Programmer
PHP
peut
renvoyer
plusieurs
valeurs
temps
peut
obtenir
résultat
identique
renvoyant
tableau
Ex
function
couleurs
{
return
array
``
Coeur
``
Pique
``
Trèfle
Carreau
}
list
c1
c2
c3
c4
=
couleurs
117
Fonctions
Alcôve
-
Programmer
PHP
PHP4
permet
également
retour
fonction
référence
mécanisme
utile
lorsque
cherche
utiliser
fonction
trouver
variable
veux
lier
différence
passage
référence
faut
utiliser
&
deux
endroits
–
indiquer
retourne
référence
non
copie
comme
habitude
aussi
–
indiquer
liaison
référence
non
simple
assignement
variable
doit
avoir
lieu
variable
retour
118
Fonctions
Alcôve
-
Programmer
PHP
Ex
function
&
trouve_variable
param
{
#
recherche
variable
toto
return
toto
}
titi
=
&
trouve_variable
tata
titi-
x
=
2
propriétés
objet
retourné
fonction
trouve_variable
liées
titi
agit
copie
toto
119
Fonctions
Alcôve
-
Programmer
PHP
arguments
informations
peuvent
être
passées
fonction
utilisant
tableau
arguments
chaque
élément
séparé
virgule
élément
peut
être
variable
constante
PHP
supporte
–
passage
arguments
valeur
méthode
défaut
–
passage
arguments
référence
–
valeurs
défaut
arguments
liste
arguments
nombre
variable
fonctionne
PHP
résultat
similaire
peut
être
obtenu
utilisant
tableau
120
Fonctions
Alcôve
-
Programmer
PHP
Passage
arguments
valeur
méthode
défaut
variables
affectées
changements
sein
fonction
peut
changer
valeur
arguments
sein
fonction
sans
ceci
répercussions
extérieur
celle-ci
121
Fonctions
Alcôve
-
Programmer
PHP
Ex
function
ajoute_deux
nombre
{
nombre
+=
2
echo
nombre
}
toto
=
3
ajoute_deux
toto
#
affiche
5
echo
toto
#
affiche
3
122
Fonctions
Alcôve
-
Programmer
PHP
Passage
arguments
référence
variables
affectées
changements
sein
fonction
Deux
possibilités
–
façon
permanente
ajoutant
&
devant
nom
variable
définition
fonction
–
façon
ponctuelle
ajoutant
&
devant
nom
variable
lors
appel
fonction
123
Fonctions
Alcôve
-
Programmer
PHP
Ex
function
retranche_deux
&
nombre
{
nombre
-=
2
echo
nombre
}
toto
=
3
ajoute_deux
&
toto
#
affiche
5
echo
toto
#
affiche
5
retranche_deux
toto
#
affiche
3
echo
toto
#
affiche
3
124
Fonctions
Alcôve
-
Programmer
PHP
Valeurs
défaut
arguments
PHP
permet
comme
C++
spécifier
valeurs
défaut
arguments
type
scalaire
suffit
spécifier
valeur
défaut
=
déclaration
fonction
valeur
doit
être
constante
variables
attributs
classes
arguments
défaut
doivent
être
derniers
liste
125
Fonctions
Alcôve
-
Programmer
PHP
Ex
function
annotation
type
=
``
assez
bien
{
echo
``
type
travaillé
}
annotation
``
mal
#
affiche
mal
travaillé
annotation
#
affiche
assez
bien
travaillé
126
Section
4
Alcôve
-
Programmer
PHP
Programmation
orientée
objet
127
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
Objectifs
section
Rappels
programmation
orientée
objet
classes
PHP
objets
PHP
Particularités
PHP
128
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
Rappels
programmation
orientée
objet
POO
-
raisonner
termes
fonctionnalités
propriétés
non
terme
traitements
encapsulation
objet
représente
abstraction
entité
abstraite
concrète
laquelle
regroupe
structure
données
traitements
objet
possède
caractéristiques
fonctionnalités
utilise
sans
savoir
comment
elles
implémentées
ex
téléphone
129
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
caractéristiques/fonctionnalités
non
utiles
manipulation
objet
utiles
fonctionnement
masquées
utilisateur
ex
composants
internes
téléphone
héritage
objet
peut
dériver
autre
objet
posséder
caractéristiques/fonctionnalités
supplémentaires
tout
héritant
caractéristiques/fonctionalités
aïeul
ex
téléphone
sans
fils
téléphone
peu
particulier
130
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
polymorphisme
Lorsqu
invoque
méthode
objet
programme
saura
retrouver
méthode
parmis
celles
aïeux
objet
celle-ci
explicitement
définie
hérité
ex
méthode
``
décrocher
téléphone
sans
fils
131
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
création
instanciation
objet
méthode
porte
généralement
nom
classe
appellée
automatiquement
constructeur
Parfois
destruction
objet
méthode
porte
généralement
nom
classe
précédé
˜
appellée
automatiquement
destructeur
132
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
classe
collection
variables
attributs
fonctions
méthodes
appliquent
variables
objet
instance
classe
type
données
classe
objets
laquelle
appartient
peu
comme
toto
=
123
instance
type
entier
133
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
classes
PHP
PHP
définit
classe
objets
façon
suivante
class
MaClasse
{
#
Attributs
var
monAttribut
#
Méthodes
function
maMethode
argument
{
#
traitement
monAttribut
argument
}
}
134
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
objets
PHP
possible
spécifier
variable
objet
façon
suivante
monObjet
=
new
MaClasse
accède
attribut
méthode
façon
suivante
monObjet-
monAttribut
=
``
toto
monObjet-
maMethode
23
135
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
Particularités
PHP
Tous
attributs
méthodes
publics
objets
libérés
automatiquement
quand
plus
utilisés
Garbage
Collector
destructeur
136
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
Ex
Caddie
class
Caddie
{
var
elements
#
éléments
Caddie
#
Constructeur
ajoute
cadeau
chaque
nouveau
Caddie
function
Caddie
{
this-
ajoute
1
``
cadeau
}
#
Ajout
nombre
articles
type
type
Caddie
function
ajoute
nombre
type
{
this-
elements
type
+=
nombre
}
137
Programmation
orientée
objet
Alcôve
-
Programmer
PHP
#
Retrait
nombre
articles
type
type
Caddie
function
enleve
nombre
type
{
if
this-
elements
type
nombre
{
this-
elements
type
-=
nombre
return
true
}
else
{
return
false
}
}
}
138
Chapitre
3
Alcôve
-
Programmer
PHP
Fonctionnalités
essentielles
139
Fonctionnalités
essentielles
Alcôve
-
Programmer
PHP
Objectifs
chapitre
Gestion
connexions
utilisateurs
Gestion
sessions
Autres
fonctionnalités
essentielles
140
Section
1
Alcôve
-
Programmer
PHP
Connexions
utilisateurs
141
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
Objectifs
section
Gestion
utilisateurs
-
authentification
Gestion
connexions
142
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
Gestion
utilisateurs
-
authentification
fonctions
authentification
HTTP
disponibles
PHP
exécuté
comme
module
Apache
non
comme
CGI
utilise
fonction
header
demander
authentification
Authentication
Required
client
générant
ainsi
apparition
fenêtre
demande
nom
utilisateur
mot
passe
143
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
fois
champs
remplis
URL
nouveau
appelée
variables
suivantes
mises
jour
–
PHP_AUTH_USER
utilisateur
–
PHP_AUTH_PW
mot
passe
–
PHP_AUTH_TYPE
type
authentification
Actuellement
seule
authentification
basique
Basic
supportée
144
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
Ex
page
authentification
php
if
isset
PHP_AUTH_USER
{
Header
``
WWW-Authenticate
Basic
realm=
Titre
Header
``
HTTP/1.0
401
Unauthorized
echo
``
Texte
envoyer
client
cas
annulation
exit
}
else
{
echo
``
Bonjour
PHP_AUTH_USER.
br
echo
``
mot
passe
PHP_AUTH_PW
}
145
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
Gestion
connexions
statut
connexions
conservé
interne
PHP
trois
états
possibles
–
0
/
NORMAL
script
PHP
travaille
–
1
/
ABORTED
client
distant
déconnecté
–
2
/
TIMEOUT
durée
maximale
exécution
dépassée
146
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
défaut
script
PHP
termine
dès
client
déconnecte
peut
changer
politique
différentes
façons
–
continuer
script
comme
client
encore
là
activant
option
ignore_user_abort
php3.ini/php.ini
php3_ignore_user_abort/ignore_user_abort
apache.conf
–
exécuter
fonction
fermeture
préalablement
enregistrée
grâce
fonction
register_shutdown_function
147
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
fonction
enregistrée
register_shutdown_function
aussi
appelée
fin
script
quand
celui-ci
termine
normalement
pouvoir
avoir
comportement
différent
suivant
état
script
lors
finalisation
peut
tester
état
déconnecté
script
fonction
connection_aborted
fonction
connection_status
permet
également
retourner
état
script
0
1
2
3
148
Connexions
utilisateurs
Alcôve
-
Programmer
PHP
peut
modifier
délai
timeout
30
secondes
défaut
plusieurs
manières
–
fonction
set_time_limit
–
max_execution_time
php3.ini/php.ini
–
php3_max_execution_time/max_execution_time
apache.conf
fonction
enregistrée
register_shutdown_function
également
appelée
lorsqu
timeout
intervient
peut
tester
état
timeout
script
fonction
connection_timeout
149
Section
2
Alcôve
-
Programmer
PHP
Gestion
sessions
150
Gestion
sessions
Alcôve
-
Programmer
PHP
Objectifs
section
Principe
Sessions
PHPlib
Sessions
PHP4
151
Gestion
sessions
Alcôve
-
Programmer
PHP
Principe
gestion
sessions
PHP
moyen
sauver
informations
entre
deux
accès
requêtes
HTTP
Cela
permet
notamment
construire
applications
personnalisées
accroître
fonctionnalités
site
Malheureusement
gestion
sessions
inclue
fonctionnalités
standards
PHP
jusqu
version
PHP4
bibliothèque
complémentaire
développée
gérer
sessions
PHP3
PHPlib
152
Gestion
sessions
Alcôve
-
Programmer
PHP
Sessions
PHPlib
PHPlib
bibliothèque
PHP
libre
vise
faciliter
création
sites
PHP
toujours
utilisable
PHP4
présente
ailleurs
fonctionnalités
dernier
possède
toujours
natif
compose
classes
fonctions
permettent
–
suivi
sessions
–
utilisation
variables
persistantes
niveau
utilisateur
niveau
session
–
authentification
gestion
permissions
–
génération
rapide
code
HTML
153
Gestion
sessions
Alcôve
-
Programmer
PHP
Installation
–
récupérer
archive
http
//phplib.netuse.de
–
décompresser
répertoire
quelconque
ex
/usr/lib/phplib/
–
éditer
fichier
php3.ini/php.ini
fixer
options
façon
suivante
magic_quotes_gpc
=
Off
magic_quotes_runtime
=
Off
magic_quotes_sybase
=
Off
track_vars
=
auto_prepend_file
=
répertoire
contenant
prepend.php
include_path
=
répertoire
installation
154
Gestion
sessions
Alcôve
-
Programmer
PHP
utilisation
PHPlib
faut
créer
quelques
fichiers
plus
scripts
PHP
–
prepend.php
sert
définir
toutes
librairies
PHPlib
inclure
avant
chaque
fichier
–
local.inc
sert
définir
classes
vont
être
utilisées
scripts
155
Gestion
sessions
Alcôve
-
Programmer
PHP
gérer
sessions
variables
persistantes
librairie
sert
base
données
annuaire
LDAP
encore
simple
fichier
base
données
différentes
tables
utilisées
scripts
utilisant
PHPlib
doivent
être
créées
soins
grâce
fichiers
configurations
fournis
généralement
/usr/lib/phplib/stuff/
Ex
base
données
MySQL
mysql
-h
ma_machine_hote
ma_base
create_database.mysql
156
Gestion
sessions
Alcôve
-
Programmer
PHP
gérer
session
PHPlib
utilise
identifiant
transmis
script
script
cours
navigation
sessions
sans
reprise
identifiant
peut
être
transmis
URL
gérer
reprises
sessions
PHPlib
peut
stocker
identifiant
cookie
transmet
client
fin
chaque
script
fonction
page_close
157
Gestion
sessions
Alcôve
-
Programmer
PHP
PHPlib
définit
classes
accéder
bases
données
gérer
sessions
devez
définir
propres
classes
dérivent
classes
génériques
PHPlib
classes
généralement
stockées
fichier
local.inc
158
Gestion
sessions
Alcôve
-
Programmer
PHP
Toutes
pages
gérant
session
doivent
être
encadrées
–
page_open
array
``
sess
=
``
MaSession
–
page_close
souhaite
utiliser
option
auto_prepend_file
inclure
fichier
prepend.php
peut
commencer
script
include
fichier
rendre
variable
persistante
utilise
méthode
register
classe
MaSession
159
Gestion
sessions
Alcôve
-
Programmer
PHP
Ex
session.php
php
page_open
array
``
sess
=
``
MaSession
if
isset
toto
toto
=
1
print
++
toto
sess-
register
``
toto
page_close
160
Gestion
sessions
Alcôve
-
Programmer
PHP
Ex
suite
local.php
php
class
MaBaseSql
extends
DB_Sql
{
var
Host
=
``
ma_machine_hote
var
Database
=
``
ma_base
var
User
=
``
mon_utilisateur
var
Password
=
``
mon_password
}
class
MonContainerSql
extends
CT_Sql
{
var
database_class
=
``
MaBaseSql
var
database_table
=
``
ma_table
}
161
Gestion
sessions
Alcôve
-
Programmer
PHP
class
MaSession
extends
Session
{
var
classname
=
``
MaSession
var
mode
=
``
cookie
var
lifetime
=
6000
var
that_class
=
``
MonContainerSql
}
162
Gestion
sessions
Alcôve
-
Programmer
PHP
Ex
fin
prepend.php
php
if
is_array
_PHPLIB
_PHPLIB
``
libdir
=
``
require
_PHPLIB
``
libdir
``
db_mysql.inc
require
_PHPLIB
``
libdir
``
ct_sql.inc
require
_PHPLIB
``
libdir
``
session.inc
require
_PHPLIB
``
libdir
``
local.inc
require
_PHPLIB
``
libdir
``
page.inc
163
Gestion
sessions
Alcôve
-
Programmer
PHP
Sessions
PHP4
principe
PHPlib
attribue
nouvel
utilisateur
identificateur
session
SID
numéro
transmis
sous
forme
cookie
URLs
Quand
visiteur
accède
page
PHP4
vérifie
identificateur
session
transmis
requête
164
Gestion
sessions
Alcôve
-
Programmer
PHP
vérification
peut
être
faite
trois
manières
différentes
–
automatiquement
option
session.auto_start
activée
php.ini
–
explicitement
appel
fonction
session_start
–
implicitement
appel
fonction
session_register
cas
numéro
session
valide
tout
environnement
celle-ci
restauré
165
Gestion
sessions
Alcôve
-
Programmer
PHP
option
register_globals
php.ini
autorise
variables
globales
être
sauvegardées
session
Ex
php
session_register
``
toto
toto++
option
track_vars
php.ini
bloquée
1
versions
PHP4
supérieures
4.0.3
autorise
variables
HTTP_SESSION_VARS
être
sauvegardées
session
Ex
php
session_register
``
toto
HTTP_SESSION_VARS
``
toto
++
166
Gestion
sessions
Alcôve
-
Programmer
PHP
existe
deux
manières
transmettre
numéro
session
sein
URL
–
manuellement
grâce
constante
SID
chaîne
caractères
forme
session_name=session_id
vide
–
automatiquement
PHP4
compilé
option
enable-trans-sid
167
Gestion
sessions
Alcôve
-
Programmer
PHP
Ex
compteur
visites
php
session_register
``
compteur
compteur++
vu
page
echo
compteur
fois
=SID
sert
conserver
numéro
session
cas
cookies
desactivés
continuer
cliquez
href=
compteur.php
=SID
ici
/A
168
Gestion
sessions
Alcôve
-
Programmer
PHP
fonctions
plus
utilisées
–
session_start
crée
restaure
session
–
session_destroy
détruit
session
–
session_register
/session_unregister
sauvegarde/oublie
variable
–
session_set_save_handler
permet
définir
propres
fonctions
sauvegarde
sessions
stocker
données
base
données
exemple
169
Section
3
Alcôve
-
Programmer
PHP
Autres
fonctionnalités
170
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
Objectifs
section
Récupération
traitement
erreurs
cookies
171
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
Récupération
traitement
erreurs
existe
4
types
erreurs
alertes
PHP
–
E_ERROR
1
erreur
exécution
–
E_WARNING
2
alerte
–
E_PARSE
4
erreur
analyse
–
E_NOTICE
8
notes
alertes
peuvent
être
ignorées
définir
niveau
erreur
ajoute
chiffres
erreurs
souhaite
prendre
compte
bitmask
défaut
7
=
4
+
2
+
1
172
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
niveau
peut
être
changé
trois
manières
–
directive
error_reporting
php3.ini/php.ini
–
directive
php3_error_reporting/error_reporting/error_reporting
httpd.conf
–
fonction
error_reporting
173
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
Toutes
expressions
PHP
peuvent
être
appelées
préfixe
permet
ignorer
rapport
erreur
fonction
particulière
erreur
survient
telle
expression
option
track_errors
activée
php3.ini/php.ini
retrouve
message
erreur
variable
globale
php_errormsg
fonction
error_reporting
établit
niveau
erreur
prendre
compte
renvoie
ancien
niveau
174
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
fonction
error_log
envoie
message
erreur
–
logs
serveur
–
port
TCP
–
fichier
prend
comme
paramètres
–
message
message
doit
être
envoyé
–
message_type
type
transmission
choisi
0
système
standard
log
PHP
1
mail
2
machine
distante
TCP/IP
3
fichier
local
Ex
error_log
``
Alerte
rouge
1
webmaster
monsite.fr
175
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
cookies
cookies
mécanisme
enregistrement
informations
disque
client
aussi
relecture
informations
système
permet
authentifier
suivre
visiteurs
PHP
supporte
cookies
manière
transparente
176
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
envoyer
cookie
utilise
commande
setcookie
Cookies
font
partie
entête
HTTP
impose
setcookie
appelée
avant
tout
affichage
client
idem
header
PHP4
peut
contourner
limitation
bufferisant
sortie
standard
grâce
fonction
ob_start
puis
libérant
celle-ci
grâce
fonction
ob_end_flush
peut
aussi
indiquer
PHP4
bufferiser
automatiquement
sortie
grâce
option
output_buffering
php.ini
ceci
ralentit
sensiblement
PHP4
177
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
Tous
cookies
envoyés
client
automatiquement
retournés
script
PHP
placés
tableau
associatif
HTTP_COOKIE_VARS
Seuls
cookies
correspondent
nom
domaine
page
demandée
envoyés
serveur
navigateur
affecter
plusieurs
valeurs
seul
cookie
faut
ajouter
nom
cookie
178
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
Ex
cookie_ecriture.php
php
setcookie
``
MonCookie
``
Contenu
time
+
3600
HTML
BODY
H1
Maintenant
br
Allez
page
href
=
``
cookie_lecture.php
précédente
/a
/H1
/BODY
/HTML
179
Autres
fonctionnalités
Alcôve
-
Programmer
PHP
Ex
suite
cookie_lecture.php
HTML
BODY
H1
php
if
isset
HTTP_COOKIE_VARS
``
MonCookie
cookie
MonCookie
contient
php
print
HTTP_COOKIE_VARS
``
MonCookie
else
cookie
MonCookie.
br
Allez
chercher
href
=
cookie_ecriture.php
ici
/a
php
endif
/H1
/BODY
/HTML
180
Chapitre
4
Alcôve
-
Programmer
PHP
Utilisation
avancée
181
Utilisation
avancée
Alcôve
-
Programmer
PHP
Objectifs
chapitre
Interopérabilité
applicatifs
Traitement
chaînes
caractères
Fonctionnalités
utiles
182
Section
1
Alcôve
-
Programmer
PHP
Interopérabilité
applicatifs
183
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Objectifs
section
Utilisation
SGBDs
Interfaçage
API
Apache
Utilisation
LDAP
184
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Utilisation
SGBDs
grand
nombre
ystèmes
G
estion
B
ases
onnées
SGBD
supportés
PHP
plupart
accessibles
via
langage
SQL
tructured
Q
uery
angage
Celui-ci
permet
comme
nom
indique
réaliser
requêtes
bases
données
ceci
façon
structurée
standardisée
utilisation
bases
données
clé
voûte
sites
dynamiques
commerce
électronique
185
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Bases
SQL
supportées
Adabas
Empress
IBM
DB2
Informix
Interbase
mSQL
MySQL
ODBC
Access
MS-SQL
iODBC
Oracle
PostgreSQL
Raima
Velocis
Solid
Sybase
Autres
SGBD
supportés
–
dBase
–
filePro
lecture
seule
–
dbm
ndbm
gdbm
Berkeley
db
186
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Principales
commandes
SQL
–
CREATE
TABLE
crée
nouvelle
table
–
DELETE
supprime
lignes
table
–
INSERT
insère
nouvelle
ligne
table
–
SELECT
récupère
lignes
table
vue
–
UPDATE
modifie
valeurs
champs
187
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Ex
création
alimentation
table
CREATE
TABLE
Personne
Secu
INT8
NOT
NULL
PRIMARY
KEY
Nom
VARCHAR
20
NOT
NULL
Prenom
VARCHAR
20
NOT
NULL
INSERT
INTO
Personne
VALUES
132456789
Smith
John
INSERT
INTO
Personne
VALUES
987654321
Gates
Bill
188
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Ex
suite
affichage
table
suppression
entrée
SELECT
*
FROM
Personne
Secu
Nom
Prenom
132456789
Smith
John
987654321
Gates
Bill
DELETE
FROM
Personne
WHERE
Nom
=
Gates
189
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Chaque
base
SQL
possède
propre
API
mécanismes
consultation
globalement
mêmes
toutes
–
connexion
serveur
bases
données
machine
utilisateur
mot
passe
–
sélection
base
utiliser
nom
base
–
requête
SQL
–
exploitation
requête
affichage
–
déconnexion
Bien
sûr
avant
utiliser
base
données
particulière
faut
assurer
librairie
correspondante
chargée
PHP
190
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
base
données
MySQL
faut
ajouter
ligne
extension=mysql.so
fichier
php3.ini/php.ini
vérifier
fichier
mysql.so
trouve
bien
répertoire
extension_dir
fonctions
MySQL
plus
couramment
utilisées
suivantes
–
mysql_connect
ouvre
connexion
serveur
MySQL
–
mysql_list_
*
retournent
liste
bases
tables
champs
disponibles
serveur
–
mysql_select_db
selectionne
base
données
serveur
191
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
–
mysql_query
envoie
requête
SQL
base
données
active
serveur
renvoie
identifiant
résultat
mysql_result
exploite
résultat
mysql_fetch_
*
exploitent
manipulent
résultat
mysql_field_
*
permettent
naviguer
sein
résultat
–
mysql_close
ferme
connexion
serveur
MySQL
fait
défaut
fin
script
192
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
possible
réaliser
connection
persistante
serveur
MySQL
utilisant
fonction
mysql_pconnect
telle
connexion
fermée
automatiquement
fin
script
Accélère
sensiblement
scripts
quand
connexions
base
fréquentes
connexion
refermée
automatiquement
après
certain
temps
inutilisation
193
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Ex
php
mysql_pconnect
``
db.mon-server.com
``
username
password
mysql_select_db
``
ma_base
resultat
=
mysql_query
``
SELECT
*
FROM
ma_table
if
resultat
TABLE
TR
TH
Nom
/TH
TH
Description
/TH
/TR
194
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
php
while
tableau
=
mysql_fetch_array
resultat
echo
``
TR
TD
tableau
``
nom
``
/TD
TD
tableau
``
descr
``
/TD
/TR
\n
/TABLE
php
else
echo
``
table
vide
endif
195
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
existe
outils
administration
bases
données
entièrement
écrits
PHP
–
PHPMyAdmin
bases
MySQL
http
//www.phpwizard.net/phpMyAdmin/
–
PHPPgAdmin
bases
PostgreSQL
http
//www.phpwizard.net/phpPgAdmin/
outils
très
utiles
créer
bases
données
avant
utiliser
scripts
PHP
également
pratique
maintenir
bases
outils
libres
code
source
peut
servir
référence
accéder
bases
données
PHP
196
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Interfaçage
API
Apache
fonction
getallheaders
permet
récupérer
tous
en-têtes
HTTP
correspondant
requête
courante
en-têtes
stockés
tableau
associatif
Ex
headers
=
getallheaders
while
list
header
valeur
=
each
headers
{
echo
``
header
valeur
BR
\n
}
197
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Utilisation
LDAP
ightweight
irectory
ccess
P
rotocol
Protocole
normalisé
accès
services
annuaires
annuaire
équivalent
base
données
informations
rangées
manière
hiérarchique
caractéristiques
LDAP
–
organisation
globale
–
standard
ouvert
–
extensible
paramétrable
–
stockages
données
hétérogènes
–
sécurisé
198
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
LDAP
utilise
syntaxe
nom
distincts
dn
distinguished
names
Ex
dn
signification
dn
=
``
cn=Linus
Torvalds
ou=Devel
o=Transmeta
c=USA
country
=
USA
organization
=
Transmeta
organizationUnit
=
Devel
commonName
=
Linus
Torvalds
199
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Avant
pouvoir
utiliser
LDAP
PHP
faut
ajouter
ligne
extension
=
ldap.so
php3.ini/php.ini
vérifier
librairie
ldap.so
trouve
bien
répertoire
extension_dir
séquence
type
consultation/modification
base
LDAP
PHP
prendra
forme
suivante
–
ldap_connect
établit
connexion
serveur
LDAP
–
ldap_bind
liaison
authentification
serveur
–
ldap_get_
*
/ldap_add
/ldap_modify
consultation/modification
base
–
ldap_close
déconnexion
200
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
Ex
recherche
tous
dn
commançant
php
ds
=
ldap_connect
``
ldap.mon-serveur.com
if
ds
{
ldap_bind
ds
sr
=
ldap_search
ds
``
ou=Devel
o=Transmeta
c=USA
``
dn=l
*
info
=
ldap_get_entries
ds
sr
201
Interopérabilité
applicatifs
Alcôve
-
Programmer
PHP
for
i=0
i
info
``
count
i++
{
echo
``
dn
vaut
``
info
i
``
dn
``
br
echo
``
première
entrée
cn
vaut
``
info
i
``
cn
0
``
br
echo
``
première
email
vaut
``
info
i
``
mail
0
``
br
}
ldap_close
ds
}
else
{
echo
``
H4
Impossible
connecter
serveur
LDAP
/H4
}
202
Section
2
Alcôve
-
Programmer
PHP
Traitement
chaînes
caractères
203
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Objectifs
section
Manipulation
chaînes
caractères
Expressions
régulières
204
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Manipulation
chaînes
caractères
Affichage
–
echo
affiche
plusieurs
chaînes
séparées
virgules
–
print
affiche
chaîne
–
printf
affiche
chaîne
selon
chaîne
formatage
idem
langage
Ex
nom
=
``
toto
echo
``
Bonjour
nom
#
affiche
Bonjour
toto
print
``
Bonjour
nom
#
affiche
Bonjour
toto
printf
``
Bonjour
nom
#
affiche
Bonjour
toto
205
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Substitutions
–
addslashes
ajoute
backslash
devant
tous
caractères
spéciaux
–
stripslashes
enlève
backslashs
ajoutés
fonction
addslashes
–
str_replace
remplace
toutes
occurrences
chaîne
autre
Ex
print
addslashes
\
\
``
#
affiche
\
\
\
print
str_replace
``
toto
``
titi
``
Bonjour
toto
#
affiche
Bonjour
titi
206
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Découpage
–
explode
scinde
chaîne
morceaux
grâce
délimiteur
–
implode
/join
regroupe
tous
éléments
tableau
chaîne
ajoutant
chaîne
jointure
–
ltrim
/chop
enlève
espaces
début/fin
chaîne
Ex
composants
=
``
resistance
condensateur
transistor
``
composants
=
chop
composants
tableau
=
explode
``
``
composants
print
tableau
2
``
#
affiche
transistor
207
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Web
–
rawurlencode
/rawurldecode
encode/décode
chaîne
URL
selon
RFC1738
–
htmlspecialchars
/htmlentities
converti
tous
caractères
spéciaux
équivalent
HTML
Ex
url
=
rawurlencode
bonjour
/toto/
print
url
#
affiche
bonjour
40toi
20
2Ftoto
2F
html
=
htmlentities
``
2
3
print
html
#
affiche
2
3
source
HTML
contient
2
3
208
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Comparaison
–
parse_str
analyse
chaîne
déduit
variables
valeur
–
strcmp
comparaison
sensible
casse
–
strlen
retourne
longueur
chaîne
Ex
parse_str
``
toto=23
&
tab
=Ceci+fonctionne
&
tab
=aussi
print
``
toto
tab
0
tab
1
Affiche
23
Ceci
fonctionne
aussi
209
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Casse
–
strtolower
/strtoupper
met
tous
caractères
minuscule/majuscule
–
ucfirst
force
premier
caractère
chaîne
majuscule
–
ucwords
force
premier
caractère
chaque
mot
chaîne
majuscule
Ex
nom
=
``
BiLL
GaTeZ
print
nom
=
strtolower
nom
#
affiche
bill
gatez
print
strtolower
nom
#
affiche
Bill
Gatez
210
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Expressions
régulières
expressions
régulières
abrv
regex
utilisées
faire
manipulations
complexes
chaînes
caractères
ex
substitutions
recherches
complexes
PHP
gère
deux
types
expressions
régulières
–
expressions
régulières
avancées
POSIX
–
expressions
régulières
modifiées
langage
Perl
211
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Principes
base
expressions
régulières
–
recherche
séquences
caractères
sein
chaîne
–
besoin
expressions
décrire
séquences
–
utilisation
syntaxe
puissante
–
équivaut
définition
conditions
recherche
212
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Signification
principales
expressions
régulières
–
caractère
sauf
caractères
spéciaux
–
\c
caractère
spécial
sauf
chiffres
1
9
–
ˆ
début
ligne
–
fin
ligne
–
importe
quel
caractère
–
caractère
appartenant
ensemble
suite
caractères
et/ou
échelle
caractères
c-c
213
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
–
ˆs
caractère
appartenant
ensemble
–
r
*
0
1
plusieurs
occurrences
successives
expression
régulière
r
–
rx
r
suivie
expression
régulière
x
concaténation
–
r
{
}
nombre
entre
occurrences
successives
r
–
r
{
}
exactement
occurrences
successives
r
–
r
{
}
moins
occurrences
successives
expression
régulière
r.
214
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Utilisation
PHP
–
ereg
/eregi
expression
régulière
standard
sensible/insensible
casse
–
ereg_replace
/eregi_replace
expression
régulière
substitution
sensible/insensible
casse
–
split
découpe
chaîne
grâce
délimiteur
défini
expression
régulière
–
sql_regcase
prépare
expression
régulière
insensible
casse
utile
fonctions
supportant
recherches
insensible
casse
215
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
Ex
php
personne
=
``
Nom
Smith
Prénom
John
Age
52
Divers
blond
if
ereg
``
blond
personne
print
``
personne
blonde
#
Affiche
personne
blonde
if
eregi
``
age
*
0-9
+
personne
resultat
print
``
personne
resultat
1
ans
else
print
``
personne
age
#
Affiche
personne
52
ans
216
Traitement
chaînes
caractères
Alcôve
-
Programmer
PHP
print
eregi_replace
``
age
*
0-9
+
*
``
\1
68
personne
#
Affiche
Nom
Smith
Prénom
John
Age
68
print
sql_regcase
``
John
Smith
#
Affiche
Jj
Oo
Hh
Nn
Ss
Mm
Ii
Tt
Hh
217
Section
3
Alcôve
-
Programmer
PHP
Fonctionnalités
utiles
218
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Objectifs
section
Manipulation
traitement
fichiers
Arguments
gestion
URLs
Création
dynamique
images
Fonctions
mathématiques
PHP
XML
Templates
PHPlib
Utilisation
PHP
comme
langage
script
219
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Manipulation
traitement
fichiers
Quel
langage
programmation
gestion
fichiers
toujours
importante
stockage
données
gestion
fichiers
PHP
issue
langage
comporte
quelques
fonctions
supplémentaires
très
utiles
comme
gestion
fichiers
distants
exemple
220
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
principales
fonctions
manipulation
fichiers
suivantes
–
fopen
ouverture
fichier
possibilité
fournir
URL
HTTP
FTP
fichiers
distants
–
fclose
fermeture
fichier
–
fpassthru
lit
fichier
entier
affiche
–
fread
/fgets
lit
caractères
fichier
–
fwrite
/fputs
écrit
chaîne
fichier
–
rewind
/fseek
/ftell
positionnement
sein
fichier
221
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
affichage
image
image.png
php
Header
``
Content-type
image/png
if
fd
=
fopen
``
image.png
``
rb
echo
``
Impossible
ouvrir
fichier
else
fpassthru
fd
222
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex2
fichier
log
php
if
fd
=
fopen
``
mon_error.log
``
echo
``
Impossible
ouvrir
fichier
else
fputs
fd
``
Erreur
errormsg\n
#
Ecrit
dernier
message
erreur
renvoyé
mon_error.log
223
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
principales
fonctions
gestion
fichiers
suivantes
–
file_exists
test
existence
fichier
–
copy
copie
fichier
–
rename
renomme
fichier
–
unlink
efface
définitivement
fichier
Ex
php
fichier
=
``
toto.html
if
file_exists
fichier
copy
fichier
``
/tmp/
fichier
else
echo
``
Impossible
ouvrir
fichier
224
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
principales
fonctions
manipulation
répertoires
suivantes
–
chdir
changement
répertoire
courant
–
opendir
ouverture
répertoire
–
closedir
fermeture
répertoire
–
readdir
lit
entrée
suivante
répertoire
–
rewinddir
revient
début
répertoire
–
mkdir
crée
nouveau
répertoire
–
rmdir
supprime
répertoire
–
dir
instanciation
objet
répertoire
manipulation
objet
celui-ci
225
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
équivalent
commande
ls
php
chdir
``
/tmp
dir
=
dir
``
dir-
rewind
while
fichier
=
dir-
read
echo
``
fichier
br
dir-
close
226
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Arguments
gestion
URLs
gestion
URLs
importante
encoder/décoder
informations
sein
celles-ci
peut
utiliser
URL
transmettre
informations
variables
script
autre
mécanisme
peut
constituer
mini-gestion
sessions
exemple
227
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
principales
fonctions
utilisées
gestion
URLs
suivantes
–
parse_url
analyse
URL
retourne
composants
sous
forme
tableau
associatif
–
urlencode/urldecode
encode/décode
chaîne
remplaçant
caractères
spéciaux
xx
espaces
+
application/x-www-form-urlencode
–
base64_encode/base64_decode
encode/décode
chaîne
base64
permettre
certains
systèmes
manipuler
informations
binaires
8
bits
ex
corps
mail
228
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
transmission
variable
URL
php
chaine
=
``
Bonjour
tout
monde
href=
mon-cgi
chaine=
php
echo
urlencode
chaine
Envoyer
/A
Appelle
script
CGI
mon-cgi
URL
mon-cgi
chaine=Bonjour+tout+le+monde+
3F
229
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Création
dynamique
images
PHP
limité
création
fichiers
HTML
peut
aussi
servir
générer
dynamiquement
images
PNG
JPEG
GIF
images
peuvent
être
émises
directement
vers
client
sauvegardées
serveur
Elles
très
pratiques
dessiner
rapidement
graphiques
partir
données
dynamiques
ex
statistiques
site
résultats
sondage
230
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
générer
images
PHP
utilise
librairie
GD
Celle-ci
compose
ensemble
fonctions
permettent
créer
images
dynamiques
qualité
très
peu
code
Historiquement
format
GIF
premier
avoir
supporté
aujourd
hui
prefère
formats
JPEG
surtout
PNG
format
plus
ouvert
tous
Bien
sûr
avant
utiliser
librairie
faut
préalable
charger
PHP
ajoutant
ligne
extension=gd.so
fichier
php3.ini/php.ini
vérifiant
fichier
gd.so
trouve
bien
extension_dir
231
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
API
très
intuitive
–
ImageCreate
*
créer
image
blanche
partir
image
existante
–
ImageColor
*
définir
couleur
transparence
–
ImageString
écrire
texte
–
Image
forme
dessiner
formes
géométrique
connue
rectangle
arc
ligne
polygone
–
ImageFill
*
colorier
formes
–
Image
attribut
connaître
attribut
largeur
hauteur
taille
image
–
Image
type
envoyer
image
type
PNG
JPEG
GIF
navigateur
–
ImageDestroy
détruire
image
232
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Toutes
fonctions
API
manipulent
pointeur
image
courante
pointeur
retourné
fonction
ImageCreate
*
création
image
Typiquement
crée
fichier
PHP
seul
but
retourner
image
dynamique
233
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
arguments
créer
image
alors
passés
URL
manière
formulaires
mode
GET
exemple
ex
IMG
src
=
``
bouton.php
texte=TITRE+BOUTON
fichier
doit
retourner
en-tête
correspondant
image
retournée
ex
Header
``
Content-type
image/gif
afin
navigateur
puisse
correctement
afficher
peut
aussi
créer
fonction
génère
image
technique
moins
facile
utiliser
car
faut
occuper
stocker
image
puis
éventuellement
détruire
suite
234
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
génération
dynamique
boutons
bouton.php
php
Header
``
Content-type
image/gif
if
isset
texte
texte
=
``
image
=
ImageCreateFromGif
``
images/bouton.gif
couleur
=
ImageColorAllocate
image
255
255
255
espace
=
ImageSX
image
-
7.5
*
strlen
texte
/
2
ImageString
image
5
espace
9
texte
couleur
ImageGif
image
ImageDestroy
image
235
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Avant
IMG
src
=
``
bouton.php
texte=Mon+titre
Après
236
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Fonctions
mathématiques
existe
deux
types
fonctions
mathématiques
PHP
–
fonctions
standards
appliquent
entiers
long
double
–
fonctions
précision
nombres
représentés
chaînes
caractères
constante
M_PI
définie
nombre
Pi
237
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
fonctions
standards
plus
utilisées
suivantes
–
abs
valeur
absolue
–
number_format
formate
nombre
groupe
milliers
–
round
/ceil
/floor
arrondis
–
max
/min
encadrements
–
pow
/sqrt
puissances
–
exp
/log
/log10
exponentielles
logarithmes
238
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
–
cos
/sin
/tan
/acos
/asin
/atan
trigonométrie
–
base_convert
/BinDec
/DecBin
/HexDec
/
DecHex
/OctDec
/DecOct
changements
bases
–
rand
/srand
/getrandmax
nombres
pseudo-aléatoires
fonctions
mt_
*
meilleures
plus
rapides
239
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
x
=
-12
print
sqrt
pow
x
2
``
=
``
abs
x
#
Affiche
12
=
12
print
number_format
round
12550.49999999
3
``
``
#
Affiche
12
550,000
print
cos
M_PI/4
``
=
``
1/sqrt
2
#
Affiche
0.70710678118655
=
0.70710678118655
240
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
PHP
XML
e
X
tensible
arkup
anguage
Standard
ouvert
description
données
Utilise
marqueurs
différence
autres
ML
décrivent
données
non
manière
celles-ci
doivent
être
affichées
ex
HTML
utilisation
XML
PHP
nécessite
installation
librairie
Expat
http
//www.jclark.com/xml/
compilation
PHP
option
with-xml
Depuis
version
1.3.7
Apache
librairie
Expat
directement
intégrée
serveur
web
241
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
module
XML
permet
créer
parseur
XML
appelant
fonctions
définies
utilisateur
permettant
traiter
données
incluses
tags
XML
Fonctions
principales
–
xml_parser_create
crée
parseur
XML
retourne
descripteur
parseur
utiliser
autres
fonctions
–
xml_set_element_handler
modifie
options
associées
parseur
sensibilité
casse
encodage
caractères
–
xml_set_character_data_handler
définit
fonctions
appeler
ouverture
fermeture
tag
XML
spécifique
–
xml_parse
parseur
XML
–
xml_parser_free
élimination
parseur
XML
mémoire
242
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
peut
directement
manipuler
parseur
XML
intérieur
objet
PHP
faut
cela
définir
parseur
comme
variable
instance
objet
passer
objet
référence
fonction
xml_set_object
Ex
xml_set_object
parser
&
object
suite
faut
utiliser
fonctions
xml_set_
*
this-
parser
comme
identifiant
parseur
243
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Utilisation
templates
PHPlib
PHPlib
propose
classe
Template
permettant
séparer
squelette
HTML
page
traitement
données
permettant
modifier
dynamiquement
page
parties
dynamiques
page
représentées
code
HTML
identifiants
entourés
accolades
identifiants
remplacées
valeur
calculée
script
PHP
244
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
template
expl.ihtml
html
head
title
{
LETITRE
}
/title
/head
body
br
exemple
variable
{
ICI
}
/body
/html
245
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
suite
code
PHP
utilisant
template
expl.ihtml
include
``
template.inc
tmpl
=
new
Template
``
rep-template
tmpl-
set_file
``
main
``
expl.ihtml
tmpl-
set_var
array
LETITRE
=
Exemple
titre
ICI
=
message
tpml-
parse
``
out
``
main
tmpl-
p
``
out
246
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Fonctions
associées
templates
–
template
retourne
objet
Template
associé
répertoire
stockés
squelettes
HTML
–
set_file
associe
fichier
template
variable
représente
celui-ci
–
set_var
affecte
valeur
nom
variable
template
deux
dernières
fonctions
peuvent
aussi
être
appelées
comme
unique
argument
tableau
contenant
paires
clefs/valeurs
247
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
–
parse
fonction
substitue
valeur
toutes
variables
définies
variable
référence
puis
stocke
ajoute
résultat
variable
cible
–
p
fonction
affiche
valeur
variable
passée
argument
navigateur
248
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Afin
pouvoir
traiter
éléments
répétitifs
tableaux
listes
sélection
peut
déclarer
blocs
variables
manipulées
classe
Template
définition
utilise
commentaires
HTML
Ex
form
action
=
``
{
PHPSELF
}
select
name
=
``
variable
BEGIN
monbloc
-
option
{
MUL
}
END
monbloc
-
/select
br
input
type=
submit
/form
249
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
suite
tmpl
=
new
Template
``
rep-template
tmpl-
set_file
``
main
``
expl.ihtml
tmpl-
set_bloc
``
main
``
monbloc
``
toto
tmpl-
set_var
``
PHPSELF
PHP_SELF
for
i
=
1
i
10
i++
{
tmpl-
set_var
``
MUL
i
tmpl-
parse
``
toto
``
monbloc
true
}
tpml-
parse
``
out
``
main
tmpl-
p
``
out
250
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
fois
bloc
défini
peut
répéter
spécifiant
true
comme
dernier
argument
fonction
parse
fonction
set_block
parent
blocname
name
indique
variable
parent
contient
bloc
nommé
blocname
fonction
enlève
bloc
parent
remplace
variable
name
251
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Utilisation
PHP
comme
langage
script
peut
utiliser
toute
puissance
richesse
fonctions
PHP
faire
scripts
non
orientés
web
faut
avoir
préalable
compilé
PHP
comme
CGI
cohabitation
entre
plusieurs
formes
PHP
possible
machine
commande
php
donne
alors
accès
shell
PHP
chaque
commande
PHP
tapée
interprétée
immédiatement
252
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Bien
sûr
seules
commandes
encadrées
php
interprétées
autres
affichées
telles-quelles
option
-q
permet
éviter
avoir
en-tête
HTTP
envoyé
avant
premier
affichage
réaliser
scripts
classiques
PHP
suffit
faire
commencer
fichier
ligne
#
/usr/bin/php
version
-q
253
Fonctionnalités
utiles
Alcôve
-
Programmer
PHP
Ex
script
invite
login
login.php
#
/usr/bin/php
version
-q
Bonjour
monsieur
php
echo
USER
``
\n
machine
php
echo
HOSTNAME
\n
vérifiant
variables
USER
HOSTNAME
bien
exportées
shell
rendant
script
login.php
exécutable
chmod
+x
login.php
commande
./login.php
affiche
Bonjour
monsieur
nom_login
machine
nom_machine
254
Section
4
Alcôve
-
Programmer
PHP
Conclusion
255
Conclusion
Alcôve
-
Programmer
PHP
Objectifs
chapitre
Conseils
programmation
PHP
avenir
PHP
Références
Glossaire
256
Conclusion
Alcôve
-
Programmer
PHP
Conseils
programmation
PHP
Penser
matière
réutilisabilité
code
lésiner
commentaires
aideront
autres
comprendre
code
rarement
seul
travailler
site
web
Segmenter
code
PHP
rendre
plus
clair
–
préférer
fonctions
courtes
mono-tâches
–
utiliser
fichiers
différents
257
Conclusion
Alcôve
-
Programmer
PHP
Essayer
séparer
maximum
aspects
graphiques
charte
graphique
feuilles
styles
contenu
gestion
données
dynamiques
mise
forme
affichage
données
dynamiques
–
utilisation
fichiers
en-têtes
barres
navigation
pieds
pages
séparés
–
utilisation
fichiers
contenant
classes
manipulées
scripts
258
Conclusion
Alcôve
-
Programmer
PHP
avenir
PHP
plus
plus
utilisé
Internet
plusieurs
millions
domaines
différents
PHP4
depuis
début
année
2000
version
néanmoins
contestée
ex
FSF
cause
nouvelles
licences
apporte
cependant
plus
rapidité
ex
analyseur
Zend
nouvelles
fonctionnalités
natives
ex
gestion
sessions
259
Conclusion
Alcôve
-
Programmer
PHP
Références
Livres
–
Professional
PHP
Programming
Wrox
–
Programmation
Web
PHP
Eyrolles
–
PHP
précis
&
concis
O
Reilly
–
Programmation
PHP
CampusPress
260
Conclusion
Alcôve
-
Programmer
PHP
URLs
–
site
officiel
PHP
http
//www.php.net
–
Documentation
officielle
anglais
http
//www.php.net/manual
–
Traduction
française
documentation
officielle
http
//dev.nexen.net/docs
–
site
Zend
http
//www.zend.com
–
Développement
PHP/MySQL
chez
Nexen
http
//dev.nexen.net
261
Conclusion
Alcôve
-
Programmer
PHP
–
Projets
libres
autour
PHP
http
//www.phpwizard.net
–
Articles
techniques
PHP
http
//www.phpbuilder.com/
–
site
officiel
PHPlib
http
//phplib.netuse.de
–
Site
Francophone
Aide
Programmation
PHP
http
//www.phpfr.org
262
Conclusion
Alcôve
-
Programmer
PHP
Glossaire
–
Apache
serveur
web
HTTP
plus
utilisé
Internet
–
Browser
navigateur/butineur
page
web
–
CGI
Common
Gateway
Interface
interface
communication
création
programmes
capables
être
exécutés
serveur
HTTP
permet
création
dynamique
pages
côté
serveur
–
GET
méthode
HTTP
transmission
formulaires
via
URLs
données
encodées
URL
263
Conclusion
Alcôve
-
Programmer
PHP
–
GIF
Graphics
Interchange
Format
format
breveté
images
compressés
très
utilisé
web
–
HTML
Hyper
Text
Markup
Language
langage
description
structurale
documents
basé
notion
environnement
délimiteurs
utilisé
créer
pages
web
–
HTTP
HyperText
Transfer
Protocol
protocole
transfert
fichiers
utilisé
web
–
HTTPD
HTTP
Daemon
partie
principale
serveur
web
échange
via
HTTP
fichiers
clients
web
navigateurs
264
Conclusion
Alcôve
-
Programmer
PHP
–
JPEG
format
images
compressés
très
utilisé
web
–
LDAP
Lightweight
Directory
Access
Protocol
protocole
normalisé
accès
services
annuaires
–
PHP
PHP
Hypertext
PreProcessor
langage
script
côté
serveur
embarqué
pages
HTML
–
PNG
Portable
Network
Graphics
format
libre
images
compressés
créé
fournir
alternative
libre
format
GIF
265
Conclusion
Alcôve
-
Programmer
PHP
–
POST
méthode
HTTP
transmission
formulaires
corps
requête
alternative
méthode
GET
–
Regex
raccourci
Regular
Expressions
syntaxe
réaliser
manipulations
complexes
chaînes
caractères
–
Session
PHP
mécanisme
sauvegarde
informations
entre
deux
accès
requêtes
HTTP
–
SGBD
Système
Gestion
Bases
Données
266
Conclusion
Alcôve
-
Programmer
PHP
–
SQL
Structured
Query
Langage
langage
structuré
requête
interroger
SGBDs
–
URL
Uniform
Resource
Locator
syntaxe
utilisée
localiser
ressource
fichier
web
ex
http
//www.php.net/index.html
–
WWW
World
Wide
Web
aussi
appellé
web
nom
donné
réseau
Internet
–
XML
eXtensible
Markup
Language
standard
ouvert
description
données
basé
utilisation
marqueurs
decrivant
données
encapsulent
267
