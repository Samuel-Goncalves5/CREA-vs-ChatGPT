PHP
ET
MYSQL
Introduction

HTML
pages
destinées
à
être
publiées
sur
Internet
Texte
à
afficher
instructions
de
mise
en
page

Pas
d
instructions
de
calcul
ou
de
traitements
conditionnels


Des
sites
de
plus
en
plus
riches
en
informations
Nécessité
croissante
d
améliorer
le
contenu
des
sites

Mises
à
jour
manuelles
trop
complexes



Exemple
modifier
l
entête
sur
plusieurs
pages
Besoin
de
réponses
spécifiques
liées
à
un
BD
par
exemple
Passage
de
sites
statiques
à
des
sites
dynamiques
Web
dynamique
coté
client

Traité
par
le
navigateur

Résultats
variables
en
fonction
du
navigateur
Nécessité
de
tests
importants

Indépendant
Pas

du
serveur
de
rechargement
de
la
page
tout
est
fait
en
local
Confiance

Sources
du
programme
disponibles

Données
envoyées
au
serveur
pas
fiables

Base
de
données
stockée
chez
le
client
Web
dynamique
coté
serveur

L
interprétation
est
réalisée
par
le
serveur

Indépendant
de
la
machine
et
du
navigateur

Compatible
avec
tous
les
navigateurs
Les

Les

échanges
ne
concernent
que
du
HTML
ou
Json
ou
autre
sources
sont
sur
le
serveur
donc
invisibles
Besoin
d
échanges
entre
le
navigateur
et
le
serveur

Rechargement

Ou
Ajax
de
la
page
à
chaque
modification
Web
dynamique
client
ou
serveur

Il
faut
les
deux

Script
côté
client
Javascript
Calculs
et
traitement
simples

Mises
à
jour
de
la
page
web
sans
rechargement
ajax


Script
côté
serveur
Php
ou
autre
Calculs
traitements
plus
conséquents

Requêtes
vers
une
base
de
données

Opérations
sécurisées

Le
langage
Php
histoire



PHP
Hypertext
PreProcessor
La
première
version
de
PHP
Personal
Home
Pages
sort
en
La
version
actuelle
est
sortie
en

la

version
n
est
plus
maintenue
depuis
août
Environ
des
sites
web
dynamiques
utilisent
php
Le
langage
Php


Langage
pour
la
création
d
applications
Web
Exécution
coté
serveur

Indépendant
de
la
plate
forme
utilisée

Facile
à
combiner
avec
un
serveur
Web
et
une
BD
Logiciels



tout
en
un
WampServer
EasyPhp
Gratuit
code
source
disponible
Ecriture
de
scripts
simples
Inclusion
directe
de
Php
dans
du
HTML
Le
langage
Php

Programme
s
exécutant
côté
serveur
Web

Extension
php
pour
les
pages
PHP

Fichiers
pouvant
aussi
contenir
du
HTML

Les
fichiers
php
sont
stockés
sur
le
serveur

Désignés
par
une
URL
http
www
lip
fr
page
php

Le
chargement
de
l
URL
provoque
l
exécution
côté
serveur

Le
script
Php
va
généralement
créer
du
HTML
Exemple

On
veut
créer
la
page
web
ci
dessous

Pour
un
nombre
quelconque
de
valeurs
venant
d
un
formulaire
par
exemple
html
body
br
br
br
body
html
Version
Javascript

Insertion
de
javascript
avec
la
balise
script
Boucle
for
classique

Affichage
du
contenu
via
document
write

Concaténation
de
chaînes
avec
le
signe


Exécuté
par
le
navigateur
html
body
script
type
text
javascript
for
var
i
i
i
document
write
i
i
i
br
script
body
html
Version
Php

Insertion
de
Php
avec
la
balise
php
Boucle
for
classique

Affichage
du
contenu
via
echo

Concaténation
de
chaînes
avec
le
signe


Exécuté
par
le
serveur
puis
envoyé
au
navigateur
html
body
php
for
i
i
i
echo
i
i
i
br
body
html
Différence
entre
Javascript
et
Php

Javascript
Le
navigateur
demande
le
fichier
html

Le
fichier
html
contenant
du
javascript
est
envoyé

Le
navigateur
exécute
le
javascript

L
affichage
est
fait
de
manière
dynamique


Php
Le
navigateur
demande
le
fichier
php

Le
serveur
exécute
le
code
php
et
envoie
le
résultat

La
page
envoyée
au
navigateur
est
affichée

Code
Php
autre
version

Seules
les
parties
purement
dynamiques
sont
faites
en
Php
Tout
le
reste
est
du
html
de
base

Pas
forcément
très
lisible

html
body
php
for
i
i
i
php
echo
i
php
echo
i
i
br
php
body
html
Code
Php
autre
version

Tout
le
fichier
html
est
créé
en
Php

Syntaxe
assez
lourde
php
echo
html
n
echo
body
n
for
i
i
i
echo
i
i
i
br
n
echo
body
n
echo
html
n
PHP
SYNTAXE
VARIABLES
Variables

Une
variable
est
toujours
précédée
de


Types


i
est
une
variable
qui
s
appelle
i
Entiers
réels
chaînes
de
caractères
objets
Pas
de
déclaration
explicite
l
affectation
d
une
valeur
suffit


Affectation
par
valeur
i
Affectation
par
référence
variable
j
i

Changement
de
type
automatique


la
modification
de
i
modifie
j
comme
les
pointeurs
en
C
compteur
premier
Valeur
par
défaut
avant
l
affectation

Attention
si
on
essaye
de
lire
son
contenu
Variables

Variable
locale


Visible
uniquement
à
l
intérieur
d
un
contexte
d
utilisation
Variable
globale


Visible
dans
tout
le
script
Utilisation
de
l
instruction
global
pour
accéder
à
une
variable
globale
dans
des
contextes
locaux
var
function
test
global
var
echo
var
Chaînes
de
caractères

Création
affectation
entre
guillemets


Concaténation
avec
le
signe


test
a
test
bonjour
au
revoir
Substitutions
possible
de
variables
à
l
intérieur
d
une
chaîne


x
test
x
est
similaire
à
x
test
x
pas
de
substitution
avec
des
apostrophes

x
test
x
x
test
x
Encodages
des
caractères
spéciaux
obligatoire

n
t
Création
de
variables
dynamiques

Possibilité
de
créer
une
variable
dynamique

Création
à
partir
du
contenu
d
une
autre
variable
var
test
var
test
similaire
à
test
test
echo
var
test
var
affiche
test
test
test
similaire
avec
des
tableaux
nom
variable
array
val
val
nom
variable
x
Opérations
sur
les
chaînes

Longueur
d
une
chaîne
strlen

strlen
str

Comparaison

x

y
Concaténation

x
y

Nombreuses
fonctions
de
manipulation
disponibles
Fonctions
sur
les
chaînes

Afficher
une
chaîne
de
caractères


Retourner
un
morceau
d
un
chaîne
substr
chaine
debut
longueur



debut
peut
être
négatif
en
partant
de
la
fin
longueur
est
facultatif
toute
la
fin
de
la
chaîne
est
retournée
Couper
une
chaîne
en
morceaux
avec
un
délimiteur


echo
chaine
tableau
explode
delimiteur
chaine
INSTRUCTIONS
Instructions
conditionnelles

if
then
else

définition
spéciale
pour
le
else
if
pas
obligatoire
if
cond
elseif
cond
else
version
courte
condition
instructionSiVrai
instructionSiFaux
Instructions
conditionnelles

switch
case
switch
expression
case
break
case
break
case
break
default
Boucles

Boucles
for

for

initialisation
condition
increment
Boucles
while

while
condition

do
while
condition
Instructions
conditionnelles

Saut
inconditionnel


Arrêt
inconditionnel


continue
termine
l
itération
courante
de
la
boucle
break
termine
la
boucle
complètement
Arrêt
d
exécution
du
script

exit
termine
le
script
for
i
i
i
if
i
continue
echo
i
br
for
i
i
i
if
i
break
echo
i
br
affiche
les
valeurs
sauf
affiche
jusqu
à
exclu
TABLEAUX
Les
tableaux

Création
à
l
aide
de
la
fonction
array

tableau

array
deux
Tableaux
à
une
dimension

Les
éléments
peuvent
être
de
différents
types

L
index
d
un
tableau
commence
à

Fonction

count
pour
avoir
le
nombre
d
éléments
d
un
tableau
Tableaux
simples

Association
numéro
valeur
Création
du
tableau
tableau
array
valeur
valeur
valeurN
Affectation
d
un
élément
tableau
indice
valeur
Récupération
d
un
élément
variable
tableau
indice
Parcours
version
for
i
i
count
tableau
i
echo
i
tableau
i
br
Parcours
version
foreach
tableau
as
valeur
echo
valeur
br
Tableaux
associatifs

Associations
clé
d
index
valeur
Création
du
tableau
tableau
array
cle
val
cle
val
cleN
valN
Affectation
d
un
élément
tableau
cle
valeur
Récupération
d
un
élément
variable
tableau
cle
Parcours
version
foreach
tableau
as
cle
valeur
echo
cle
valeur
br
Parcours
version
reset
tableau
while
list
cle
valeur
each
tableau
echo
cle
valeur
br
Tableaux
multidimensionnels

Pas
de
méthode
de
création
native

On
imbrique
des
tableaux
Création
d
un
tableau
à
deux
dimensions
tab
array
Val
Val
ValN
tab
array
Val
Val
ValN
tableau
array
tab
tab
Affectation
d
un
élément
tableau
indice
indice
variable
Récupération
d
un
élément
variable
tableau
indice
indice
Parcours
for
i
i
count
tableau
i
for
j
j
count
tableau
i
j
echo
i
j
tableau
i
j
br
Fonctions
sur
les
tableaux

Taille
d
un
tableau


Compter
le
nombre
d
occurrences
des
valeurs
d
un
tableau



tab
array
map
fonction
tab
Filtrage
par
une
fonction
supprime
les
éléments
ne
vérifiant
pas
le
critère


sort
tab
selon
les
valeurs
ksort
tab
selon
les
clefs
Mappage
par
une
fonction
applique
la
fonction
à
tous
les
éléments


tab
array
count
values
tab
Tri


count
tab
array
filter
tab
fonction
Intervertir
les
clefs
et
valeurs

tab
array
flip
tab
FONCTIONS
Fonctions

Pas
de
typage
Arguments

Valeur
de
retour


Récursivité
possible
php
définition
de
la
fonction
factorielle
function
factorielle
n
if
n
return
else
return
n
factorielle
n
appel
de
la
fonction
et
afficahage
du
résultat
echo
factorielle
Fonctions

Valeurs
par
défaut
possibles
pour
les
arguments




Tous
les
arguments
peuvent
avoir
des
valeurs
par
défaut
function
racine
x
racine
Appel
racine
a
b
ou
racine
a
Valeurs
par
défaut
uniquement
pour
les
derniers
arguments

racine
x
degre
impossible
si
un
seul
argument
alors
degre
vaut
par
défaut
function
racine
x
degre
return
pow
x
degre
racine
retourne
la
racine
cubique
de
racine
retourne
la
racine
carrée
de
Fonctions

Nombre
d
arguments
inconnu

func
num
args
nombre
d
arguments

func
get
arg
i
argument
i
Numérotés
à
partir
de
fonction
calculant
le
produit
de
tous
les
arguments
function
produit
prod
for
i
i
func
num
args
i
prod
func
get
arg
i
return
prod
echo
produit
Fonctions

Passage
de
paramètres
par
valeur


Utilise
une
copie
des
paramètres
d
appel
Passage
de
paramètre
par
référence


Utilise
directement
les
paramètres
d
appel
donc
modifiable
Passage
de
paramètre
avec
function
double
val
val
return
val
x
y
double
x
y
x
y
double
x
y
x
Variables
globales
et
statiques

Static
permet
de
conserver
une
variable
dans
une
fonction
v
function
test
global
v
variable
globale
static
x
variable
statique
x
v
echo
x
br
test
affiche
test
affiche
Appel
dynamique

Similaire
aux
variables
dynamiques
function
bonjour
echo
bonjour
br
function
bonsoir
echo
bonsoir
br
création
d
un
variable
contenant
le
nom
d
une
fonction
salut
date
h
bonjour
bonsoir
salut
Fonctions
de
fonctions

Vérifie
l
existence
d
une
fonction


Retourne
la
liste
des
fonctions
définies


tableau
get
defined
functions
Enregistre
une
fonction
à
exécuter
à
la
fin
du
script


function
exists
fonction
register
shutdown
function
fonction
Fonctions
utiles

Header

Permet
de
modifier
l
entête
du
protocole
http

Utilisation
principale
redirection
vers
une
autre
page
if
isConnected
user
header
Location
accueil
php
else
header
Location
login
php
LES
FORMULAIRES
Exploitation
d
un
formulaire





Accès
à
la
page
du
formulaire
Remplissage
modification
des
champs
Envoi
du
formulaire
submit
Récupération
du
formulaire
soumis
Traitement
du
formulaire
Calculs

Transformations

Accès
aux
BD


Client
Envoi
de
la
réponse
au
client
Serveur
Récupération
des
paramètres

Les
paramètres
sont
récupérés
dans
un
tableau

POST
nom
si
la
méthode
d
envoi
est
POST

GET
nom
si
la
méthode
d
envoi
est
GET

form
method
POST
action

Exemple

Dans
le
formulaire
input
name
nom

On
récupère
le
contenu
en
php
avec
POST
nom
GET
nom
Pour
continuer

Le
plus
simple
pour
comprendre

Utiliser
la
méthode
GET
pour
passer
les
arguments

Regarder
l
URL
appelée
http
www
test
com
test
php
champ
valeur
Les
différents
paramètres
envoyés
et
leur
valeur
sont
visibles
Ici
GET
champ
vaut
valeur

Puis

utiliser
POST
une
fois
qu
on
a
compris
Spécificités
selon
les
types

les
cases
à
cocher
sont
envoyées
sous
forme
de
tableau
Un
exemple
form
method
GET
action
test
php
input
type
text
name
Champ
value
Texte
br
textarea
name
Champ
cols
rows
Texte
textarea
br
select
name
Champ
option
value
Option
Option
option
option
value
Option
selected
selected
Option
option
select
br
input
type
checkbox
name
Champ
value
Case
checked
checked
Case
br
input
type
checkbox
name
Champ
value
Case
checked
checked
Case
br
input
type
radio
name
Champ
value
Case
radio
br
input
type
radio
name
Champ
value
Case
radio
br
input
type
radio
name
Champ
value
Case
radio
br
input
type
submit
name
Soumission
value
Soumettre
form
test
php
Champ
Texte
Champ
Texte
Champ
Option
Champ
Case
Champ
Case
Champ
Case
Soumission
Soumettre
Un
exemple

Récupération
avec
GET

Vérification
de
l
existence
d
une
variable

isset
var
Attention
au
contenu
des
choses
reçues

Nombreuses
failles
si
on
ne
fait
pas
attention
affichage
de
tous
les
champs
reçus
via
le
formulaire
resultat
GET
Champ
br
resultat
GET
Champ
br
resultat
GET
Champ
br
for
i
i
count
GET
Champ
i
resultat
GET
Champ
i
br
if
isset
GET
Champ
resultat
GET
Champ
br
echo
resultat
FONCTIONNALITÉS
SUPPLÉMENTAIRES
Date
et
heure

Retourner
la
date
courante
dans
une
chaîne
de
caractères
chaine
date
format
nombre

chaine
date
Y
m
d
retourne


Idem
pour
un
tableau
associatif


tableau
getdate
nombre
Vérification
de
la
validité
d
une
date

checkdate
mois
jour
année
Les
cookies

Écrire
des
cookies

fonction
setcookie
PremierCookie
Salut
time

timestamp
en
secondes
différent
de
Javascript
à
exécuter
avant
tout
autre
envoi
vers
le
serveur
envoyé
dans
l
entête
cookie
non
visible
avant
le
prochain
chargement
d
une
page
Lecture

COOKIE
PremierCookie
setcookie
PremierCookie
Salut
time
if
isset
COOKIE
PremierCookie
echo
cookie
non
défini
br
else
echo
COOKIE
PremierCookie
br
Les
sessions

Objectif
garder
des
données
de
page
en
page

session
start


Crée
une
nouvelle
session
Ou
ravive
une
session
déjà
existante
SESSION
nom
valeur
permet
de
créer
une
variable
de
session
session
destroy
détruit
la
session
en
cours
session
start
SESSION
ma
variable
Sessions
exemple
html
body
form
method
post
action
test
php
table
border
tr
td
Nom
td
td
input
type
text
name
Nom
size
value
x
td
tr
tr
td
Prénom
td
td
input
type
text
name
Prenom
size
value
y
td
tr
tr
td
eMail
td
td
input
type
text
name
Email
size
value
z
td
tr
tr
td
colspan
input
type
submit
name
soumettre
value
Envoyer
td
tr
table
form
body
html
Sessions
exemple
test
php
php
session
start
SESSION
nom
POST
Nom
SESSION
prenom
POST
Prenom
SESSION
email
POST
Email
Sessions
exemple
session
php
html
body
php
session
start
echo
Identifiant
session
id
br
echo
Nom
de
la
session
session
name
br
echo
Nom
SESSION
nom
br
echo
Prénom
SESSION
prenom
br
echo
Mail
SESSION
email
br
session
destroy
body
html
Envoyer
des
emails

La
fonction
mail
mail
recipient
subject
message
headers
params

Nécessite
un
serveur
mail
accessible
sur
le
serveur

php
dest
Moi
moi
moi
com
Toi
toi
toi
com
subject
Test
content
Bonjour
n
content
Ceci
est
un
message
de
test
n
content
Moi
headers
From
Moi
moi
moi
com
n
headers
Content
Type
text
html
charset
iso
n
headers
Cc
lui
lui
com
n
mail
dest
subject
content
headers
Créer
autre
chose
que
du
HTML

Php
peut
créer
autre
chose
que
du
HTML

Images
grand
choix
de
formats
comme
GIF
PNG
JPEG
WBMP
Fichiers
pdf
librairie
tcpdf
csv
word
excel

Aucune
limitation
il
suffit
de
savoir
comment
modifier
l
entête
header
puis
afficher
le
contenu

php
header
Content
type
image
png
im
imagecreatefrompng
test
png
im
imagerotate
im
imagepng
im
PHP
ET
MYSQL
Bases
de
données

Présentation
HTML
Javascript

Navigateur
IE
Firefox
Chrome


Traitements
création
de
la
page
PHP
ASP
JSP
servlet
CGI

Serveur
Web
Apache
IIS


Données
Tables
SQL

Serveur
BD
Access
Oracle
MySQL
PostGreSQL

Bases
de
données

PHP
permet
de
travailler
nativement
avec
la
plupart
des
SGBDR



Trois
fonctions
sont
essentielles




Mysql
Oracle
Sybase
Microsoft
SQL
Server
PostgreSQL
Dans
les
autres
cas
on
peut
utiliser
des
drivers
spécifiques
Connexion
au
serveur
Exécution
de
la
requête
SQL
Gestion
des
résultats
On
va
voir
le
fonctionnement
avec
les
PHP
Data
Objects

Indépendant
partiellement
du
SGBD
utilisé
MySQL
et
Php
connexion

Connexion
création
d
un
objet
PDO




Adresse
de
la
base
et
nom
de
la
table
Nom
d
utilisateur
Mot
de
passe
Déconnexion
destruction
de
l
objet
try
ouverture
de
la
connexion
dbh
new
PDO
mysql
host
port
dbname
test
root
fermeture
de
la
connexion
dbh
null
catch
Exception
e
die
Erreur
e
getMessage
MySQL
et
Php
requêtes

Avec
la
méthode
query
pour
les
recherches

Le
méthode
exec
pour
les
modifications


Libération
des
ressources

closeCursor
dbh
new
PDO
mysql
host
dbname
test
root
reponse
dbh
query
SELECT
FROM
test
nb
modifs
dbh
exec
UPDATE
test
SET
test
id
reponse
closeCursor
dbh
null
MySQL
et
Php
traitement

Nombre
de
réponses


rowCount
Traitement
des
réponses
fetch
retourne
les
résultats
un
par
un

fetchAll
retourne
un
tableau
avec
tous
les
résultats

if
reponse
rowCount
while
donnees
reponse
fetch
echo
donnees
test
id
donnees
test
val
br
else
echo
aucun
résultat
br
MySQL
et
Php
Un
exemple
html
body
ul
php
try
dbh
new
PDO
mysql
host
dbname
test
root
id
POST
id
reponse
dbh
query
SELECT
FROM
test
WHERE
test
id
id
if
reponse
rowCount
while
donnees
reponse
fetch
echo
li
donnees
test
id
donnees
test
val
li
else
echo
li
aucun
résultat
li
reponse
closeCursor
dbh
null
catch
Exception
e
die
Erreur
e
getMessage
ul
body
html
Sécurité

Que
se
passe
t
il
si

id

id
OR

id
DROP
TABLE
test
id
POST
id
reponse
dbh
query
SELECT
FROM
test
WHERE
test
id
id
SELECT
FROM
test
WHERE
test
id
SELECT
FROM
test
WHERE
test
id
OR
SELECT
FROM
test
WHERE
test
id
DROP
TABLE
test
Requêtes
avancées

Préparation
de
requêtes
génériques

prepare
query

execute
avec
arguments

Plus
sécurisé
que
la
version
précédente
mise
en
cache
plus
portable
en
clair
à
utiliser
req
dbh
prepare
SELECT
test
id
test
val
FROM
test
WHERE
test
id
AND
test
val
req
execute
array
x
y
Remarques
finales


Limiter
au
maximum
les
droits
de
l
utilisateur
Les
données
transmises
par
le
client
ne
sont
pas
fiables

SQL
Injection

Javascript
injection
Tenter


de
mettre
javascript
alert
Hello
dans
un
input
Toujours
tester
l
existence
la
validité
d
un
fichier
code
à
inclure
Regarder
régulièrement
les
logs
MYSQL
MySQL
types
de
données




INT
FLOAT
TEXT
DATETIME
TIMESTAMP


ENUM
value
value


Ensemble
fixé
de
valeurs
SET
value
value


Date
et
heure
Horaire
Unix
Une
ou
plusieurs
parmi
Et
beaucoup
d
autres
MySQL
opérations

Création
de
bases
de
données

CREATE

Suppression
de
bases
de
données

DROP
IF

DATABASE
nom
bd
DATABASE
IF
EXISTS
nom
bd
EXISTS
évite
une
erreur
si
la
base
n
existe
pas
Utilisation
d
une
base
de
données

USE
La
nom
bd
base
spécifiée
sera
utilisée
par
défaut
MySQL
opérations

CREATE
TABLE
permet
de
créer
une
nouvelle
table
dans
la
base
de
données
courante

CREATE
TABLE
tbl
name
champ

AUTO
INCREMENT
le
contenu
est
incrémenté
automatiquement
après
chaque
insertion

PRIMARY
KEY
clé
d
index
primaire
unique
CREATE
TABLE
test
test
id
INT
NOT
NULL
AUTO
INCREMENT
PRIMARY
KEY
test
val
INT
NOT
NULL
MySQL
opérations

Suppression
d
une
Table

DROP

TABLE
tbl
name
tbl
name
Modifier
la
structure
d
une
table
existante

ALTER
TABLE
tbl
name
alter
spec
alter
spec
MySQL
opérations

Insérer
de
nouveaux
enregistrement
INSERT
INTO
article
Champ
Champ
VALUES
test

Remplacer
un
enregistrement
REPLACE
INTO
article
Champ
Champ
VALUES
test
MySQL
opérations

Modification
des
valeurs
UPDATE
table
name
SET
column
name
expr
WHERE
section
condition
where

Suppression
d
enregistrements
DELETE
FROM
table
name
WHERE
definition
MySQL
opérations

Sélection
d
enregistrement
SELECT
DISTINCT
ALL
expression
de
selection
FROM
tables
WHERE
expression
where
GROUP
BY
col
name
HAVING
where
definition
ORDER
BY
ASC
DESC

Exemples
SELECT
FROM
article
WHERE
PrixArt

SELECT
NumGrArt
AVG
PrixArt
FROM
article
GROUP
BY
NumArt

UN
EXEMPLE
COMPLET
SIMPLE
DOCTYPE
html
PUBLIC
W
C
DTD
XHTML
Strict
EN
http
www
w
org
TR
xhtml
DTD
xhtml
strict
dtd
html
head
title
Site
de
vente
en
ligne
title
head
body
div
id
container
div
id
header
ul
id
top
menu
li
a
href
index
php
index
a
li
li
a
href
rechercher
php
rechercher
a
li
li
a
href
commander
php
commander
a
li
ul
div
header
div
id
main
Affichage
du
catalogue
venant
de
la
base
de
données
div
main
div
id
footer
p
Copyright
copy
SdVeL
Tous
droits
réservés
p
div
footer
div
container
body
html
config
php
php
session
start
user
root
pwd
host
bdd
test
try
dbh
new
PDO
mysql
host
host
dbname
bdd
user
pwd
catch
Exception
e
die
Erreur
e
getMessage
menu
array
index
php
index
rechercher
php
rechercher
commander
php
commander
header
php
php
include
once
config
php
DOCTYPE
html
PUBLIC
W
C
DTD
XHTML
Strict
EN
http
www
w
org
TR
xhtml
DTD
xhtml
strict
dtd
html
head
title
Site
de
vente
en
ligne
title
head
body
div
id
container
div
id
header
ul
id
top
menu
php
foreach
menu
as
page
url
page
title
echo
li
a
href
page
url
page
title
a
li
n
ul
div
header
div
id
main
footer
php
div
main
div
id
footer
p
Copyright
copy
DVD
Club
Tous
droits
réservés
p
div
footer
div
container
body
html
Toutes
les
autres
pages
Création
d
autant
de
pages
que
nécessaire




Modification
de
l
entête
ou
du
pied
de
page
via
les
fichiers
header
php
footer
php
Modification
des
identifiants
de
connexion
via
le
fichier
config
php
Reste
à
modifier
les
fichiers
header
footer
et
faire
une
css

php
include
header
php
Affichage
du
catalogue
venant
de
la
base
de
données
php
reponse
dbh
query
SELECT
FROM
test
if
reponse
rowCount
while
donnees
reponse
fetch
echo
else
echo
li
aucun
résultat
li
php
include
footer
php
Pour
aller
plus
loin

Il
faut
ensuite
apprendre

Quelques
fonctions
de
base
supplémentaires

A
ne
jamais
faire
confiance
au
client

La
gestion
des
objets
en
Php

Les
méthodes
de
programmation
avancées
MVC
Gestion
de
templates
