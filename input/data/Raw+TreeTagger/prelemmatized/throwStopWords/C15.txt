Cours
initiation
PHP
Initiation
programmation
page
web
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
1
Cours
initiation
PHP
TABLE
MATIERES
1
PRE-REQUIS
................................................................................................................................................................
5
2
INTRODUCTION
.........................................................................................................................................................
6
Qu'est-ce
PHP
...................................................................................................................................
6
Historique
....................................................................................................................................................
6
s'adresse
PHP
................................................................................................................................
6
Comment
ça
marche
...................................................................................................................................
7
nouvelle
génération
Web
sites
Web
actifs
................................................................................
7
Technologies
dynamiques
côté
client
.........................................................................................................
7
Technologies
côté
serveur
..........................................................................................................................
7
l'intérêt
traitement
côté
serveur
........................................................................................................
7
Architecture
.................................................................................................................................................
8
3
INSTALLATION
........................................................................................................................................................
10
3.1
Installation
manuel
..............................................................................................................................................
10
Installation
PHP
....................................................................................................................................
10
Configuration
PHP
................................................................................................................................
10
Installation
Apache
.................................................................................................................................
11
Configuration
Apache
.............................................................................................................................
11
Lancement
arrêt
serveur
..................................................................................................................
12
Test
configuration
.............................................................................................................................
12
Interfaçage
SGBD
.......................................................................................................................
12
Quelle
base
données
........................................................................................................................
13
3.2
Installation
rapide
EasyPHP
.......................................................................................................................
14
Présentation
'
EasyPHP
..........................................................................................................................
14
Installation
'
EasyPHP
.............................................................................................................................
14
3.3
Installation
support
cours
.........................................................................................................................
15
4
LANGAGE
PHP
.........................................................................................................................................................
16
4.1
Quelques
règles
base
.....................................................................................................................................
16
4.2
variable
PHP
..................................................................................................................................................
18
Type
variables
......................................................................................................................................
18
constantes
..........................................................................................................................................
18
Variable
type
Booléens
..........................................................................................................................
19
Variable
type
entier
................................................................................................................................
19
nombres
virgule
flottante
...............................................................................................................
19
variable
type
chaînes
caractères
.................................................................................................
21
Traitement
variables
chaînes
...............................................................................................
22
variable
type
tableaux
........................................................................................................................
23
variable
type
tableaux
........................................................................................................................
23
variable
type
objet
..............................................................................................................................
23
transtypage
...........................................................................................................................................
24
variables
super
global
..........................................................................................................................
26
4.3
opérateurs
......................................................................................................................................................
27
opérateurs
arithmétiques
....................................................................................................................
27
opérateur
affectation
............................................................................................................................
27
opérateur
concaténation
....................................................................................................................
27
opérateur
arobase
..................................................................................................................................
27
opérateurs
comparaison
................................................................................................................
28
opérateurs
logiques
............................................................................................................................
28
opérateurs
d'incrémentation
................................................................................................................
28
Raccourcis
affectation
variables
........................................................................................................
28
4.4
Instructions
...........................................................................................................................................................
29
Instruction
conditionnelles
.........................................................................................................................
29
Branchement
conditionnel
mots
clé
else
elseif
.......................................................................
29
Instruction
switch
..................................................................................................................................
32
boucles
...............................................................................................................................................
32
4.5.
Tableaux
.........................................................................................................................................................
34
Fonction
traitement
tableaux
...........................................................................................................
35
Parcourir
tableaux
boucles
....................................................................................................
35
Tri
tableaux
...........................................................................................................................................
39
4.6
Fonctions
..............................................................................................................................................................
41
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
2
Cours
initiation
PHP
fonction
prédéfinis
..............................................................................................................................
41
fonctions
utilisateurs
...........................................................................................................................
41
Portée
variables
..................................................................................................................................
43
Fonction
imbriquer
.....................................................................................................................................
43
inclusions
............................................................................................................................................
45
5
FORMULAIRES
................................................................................................................................................
46
méthode
GET
.....................................................................................................................................
46
méthode
POST
....................................................................................................................................
46
Urlencode
Urldecode
........................................................................................................................
48
Recupération
variables
.......................................................................................................................
49
contrôles
HTML
..................................................................................................................................
50
Validation
formulaires
.........................................................................................................................
53
Htmlentites
htmlspecialchars
..............................................................................................................
54
en-têtes
HTTP
....................................................................................................................................
55
Récupérer
en-têtes
requête
........................................................................................................
55
6
BASE
DONNEES
.................................................................................................................................................
56
Pourquoi
utiliser
base
données
.......................................................................................................
56
Architecture
externe
base
données
web
....................................................................................
56
6.1
Accès
bases
données
..............................................................................................................................
56
Support
PHP
connexion
bases
données
.................................................................................
56
Rudiments
langage
SQL
......................................................................................................................
56
PhpMyadmin
.............................................................................................................................................
57
Installer
base
formation
.....................................................................................................................
57
6.2
Base
données
MySQL
.....................................................................................................................................
59
Etablir
connexion
................................................................................................................................
59
Choisir
base
données
existante
....................................................................................................
59
Déconnexion
base
données
..........................................................................................................
60
Envoyer
requête
vers
base
données
........................................................................................
61
Rechercher
données
base
.....................................................................................................
64
Naviguer
données
base
.....................................................................................................
66
Insérer
données
base
............................................................................................................
68
addslashes
stripslashes
..................................................................................................................
68
Modifier
données
base
..........................................................................................................
68
Supprimer
données
base
.......................................................................................................
70
dates
heures
...................................................................................................................................
70
Conversion
entre
formats
date
PHP
formats
date
MySQL
........................................
73
6.3
Utiliser
ODBC
........................................................................................................................................................
75
Installation
driver
odbc
MySql
......................................................................................................
75
Configuration
source
donnée
...................................................................................................
75
7
SESSIONS
COOKIES
................................................................................................................................
78
7.1
Cookies
..........................................................................................................................................................
78
est-ce
cookie
...........................................................................................................................
78
Cookies
PHP
........................................................................................................................................
78
Accéder
cookie
..................................................................................................................................
78
Supprimer
cookie
.................................................................................................................................
78
7.2
sessions
.........................................................................................................................................................
81
sessions
cookies
........................................................................................................................
81
Passage
paramètres
URL
..........................................................................................................
81
sessions
utilisant
fonctions
PHP
...................................................................................................
82
Configuration
php.ini
............................................................................................................................
82
Ouverture
session
...........................................................................................................................
83
Enregistrement
variable
session
................................................................................................
83
Utilisation
variables
session
............................................................................................................
83
Dés-enregistrement
variables
suppression
session
...................................................................
83
8
GESTION
FICHIERS
.......................................................................................................................................
86
Ouvrir
fichiers
.....................................................................................................................................
86
Fermer
fichiers
....................................................................................................................................
87
Naviguer
fichiers
........................................................................................................................
87
Afficher
fichiers
...................................................................................................................................
87
Lire
fichiers
.........................................................................................................................................
87
Ecrire
fichiers
.............................................................................................................................
88
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
3
Cours
initiation
PHP
Copier
supprimer
renommer
fichiers
.............................................................................................
88
Chargements
tableaux
partir
fichiers
...........................................................................................
90
Chargements
tableaux
partir
fichiers
...........................................................................................
90
Gérer
répertoires
................................................................................................................................
91
Afficher
image
....................................................................................................................................
93
9
GESTION
ERREURS
........................................................................................................................................
95
Introduction
................................................................................................................................................
95
9.1
types
erreurs
PHP
......................................................................................................................................
95
Erreur
syntaxe
......................................................................................................................................
95
Erreur
sémantique
................................................................................................................................
95
Erreur
logique
............................................................................................................................................
96
Erreur
environnement
.............................................................................................................................
96
messages
erreur
PHP
.....................................................................................................................
96
9.2
niveaux
erreur
PHP
....................................................................................................................................
96
Définition
niveau
rapport
erreur
....................................................................................................
96
Définition
duniveau
rapport
erreur
php.ini
.......................................................................
97
Définition
niveau
rapport
erreur
script
...........................................................................
97
9.3
Gérer
erreurs
...................................................................................................................................................
97
Suppression
messages
erreur
.........................................................................................................
97
Message
erreur
personnalisé
.................................................................................................................
98
Journalisation
erreurs
.........................................................................................................................
99
10
PROGRAMMATION
ORIENTE
OBJET
...........................................................................................................
100
10.1
Quelques
concepts
programmation
orientée
objet
..................................................................................
100
11
CLASSES
OBJETS
PHP
4
...........................................................................................................
101
11.1
Création
classe
.......................................................................................................................................
101
Création
attributs
................................................................................................................................
101
Création
méthodes
...........................................................................................................................
101
Constructeur
classe
............................................................................................................................
101
11.2
Instanciation
.....................................................................................................................................................
102
11.3
Accès
attributs
méthodes
classe
.......................................................................................
102
accesseurs
.......................................................................................................................................
102
11.4
Héritage
.............................................................................................................................................................
103
opérateur
contexte
classe
.....................................................................................................
104
11.5
Redéfinition
.......................................................................................................................................................
105
Manipulation
classes
objets
origine
similaire
..........................................................................
105
CLASSES
OBJETS
PHP
5
.................................................................................................................
107
Quelques
exemples
changements
...................................................................................................
107
11.6
Création
classe
.......................................................................................................................................
107
Constructeurs
destructeurs
.................................................................................................................
108
11.7
Création
d'une
instance
...................................................................................................................................
109
11.8
Assignation
d'un
objet
.....................................................................................................................................
109
11.9
Héritage
.............................................................................................................................................................
109
11.10
Visibilité
...........................................................................................................................................................
109
Visibilité
membres
............................................................................................................................
110
Visibilité
méthodes
............................................................................................................................
110
L'opérateur
résolution
portée
...................................................................................................
111
11.11
Abstraction
d'objets
.......................................................................................................................................
112
11.12
Interfaces
.........................................................................................................................................................
113
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
4
Cours
initiation
PHP
1
PRE-REQUIS
être
suivi
efficacité
certaines
connaissances
utiles
cours
langage
HTML
PHP
permet
faire
manipulations
balise
balise
Bases
données
Langage
Sql
Langage
JavaScript
notions
base
comme
création
base
données
tables
types
données
etc
L'interrogation
select
l'insertion
insert
modification
update
etc
Création
fonction
manipulation
chaînes
etc
Réseaux
Fonctionnement
générale
Structure
client/serveur
etc
cours
s'adresse
débutants
déjà
programmé
langage
simple
ceux
désirant
acquérir
notions
base
programmation
PHP
déjà
pratiqué
JavaScript
constaterez
PHP
présente
langage
script
similitudes
n'est
guère
plus
compliqué
moins
gérer
propre
serveur
n'est
réaliste
cas
d'un
intranet
obligé
subir
hébergeur
impose
comme
'
langage
PHP
pur
dur
comme
c'est
cas
d'autres
langages
normalisés
autant
langage
PHP
multiples
extensions
permet
PHP
gère
HTML
balise
balise
niveau
plus
bas
allez
devoir
mettre
mains
cambouis
resterons
cadre
réalisation
pages
Web
simples
n'aborderons
techniques
sophistiquées
faisant
appel
multimédia
plus
montrerons
comment
appliquer
PHP
commerce
électronique
laisserons
également
l'ombre
questions
d'hébergement
payant
sites
Web
tout
'
rattache
acquisition
nom
domaine
exemple
essayerons
réaliser
application
gestion
simple
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
5
Cours
initiation
PHP
2
Introduction
Qu'est-ce
PHP
PHP
langage
script
imbriqué
non
pages
HTML
traité
serveur
PHP
permet
construire
dynamiquement
pages
HTML
contenant
résultats
calculs
requêtes
SQL
adressées
système
gestion
bases
données
SGBD
Grâce
nombreuses
extensions
PHP
peut
générer
fichiers
PDF
s'interfacer
serveurs
messagerie
serveurs
LDAP
encore
générer
images
graphiques
GIF
volée
citer
quelques-unes
fonctionnalités
plus
importantes
PHP
peut
aussi
s'interfacer
quasitotalité
SGBD
marché
qu'ils
commerciaux
qu'ils
viennent
monde
libre
Free
Software
PHP
langage
script
niveau
serveur
comparable
ASP
Microsoft
comporte
beaucoup
plus
fonctions
supporte
pratiquement
tous
standards
Web
extensible
Historique
langage
PHP
mis
point
début
d'automne
1994
Rasmus
Lerdorf
langage
script
permettait
conserver
trace
utilisateurs
venant
consulter
CV
site
grâce
l'accès
base
données
l'intermédiaire
requêtes
SQL
Ainsi
donné
nombreux
internautes
demandèrent
programme
Rasmus
Lerdorf
mit
ligne
1995
première
version
programme
qu'il
baptisa
Personal
Sommaire
Page
Tools
outils
basiques
pages
perso
puis
Personal
Home
Page
v1.0
traduisez
page
personnelle
version
1.0
Etant
donné
succès
PHP
1.0
Rasmus
Lerdorf
décida
d'améliorer
langage
intégrant
structures
plus
avancées
telles
boucles
structures
conditionnelles
intégra
package
permettant
d'interpréter
formulaires
qu'il
développé
FI
Form
Interpreter
ainsi
support
mSQL
C'est
façon
version
2
langage
baptisée
l'occasion
PHP/FI
version
2
vit
jour
durant
l'été
1995
PHP
2
rapidement
utilisé
nombreux
sites
15000
fin
1996
puis
50000
milieu
d'année
1997
partir
1997
Zeev
Suraski
Andi
Gurmans
rejoignirent
Rasmus
former
équipe
programmeurs
afin
mettre
point
PHP
3
Stig
Bakken
Shane
Caraveo
Jim
Winstead
rejoignèrent
suite
C'est
ainsi
version
3.0
PHP
disponible
6
juin
1998
s'appelle
désormais
PHP
Hypertext
Preprocessor
existe
ailleurs
applications
web
prêtes
l'emploi
PHPNuke
PHP
SPIP
PHPSlash
permettant
monter
facilement
gratuitement
portail
juillet
2000
plus
300.000
sites
tournaient
déjà
sous
PHP
fin
l'année
1999
version
bêta
PHP
baptisée
PHP4
apparue
version
PHP4
version
plus
rapide
autres
car
utilise
nouveau
moteur
Zend
plus
support
sessions
directement
intégré
alors
autres
versions
fallait
installer
bibliothèque
PHPlib
accéder
contrôle
session
fallait
écrire
2005
version
PHP5
s'adresse
PHP
PHP
l'outil
idéal
création
tout
site
Internet
intranet
taille
moyenne
grande
taille
n'ayant
supporter
grand
nombre
requêtes
simultanées
Plusieurs
sites
affirment
afficher
plus
450
000
pages
jour
machine
configuration
suivante
Dual
PII-333
512Mb
RAM
2x9Go
SCSI
cela
sans
atteindre
100
charge
chacun
deux
processeurs
``
PHP
can
spew
out
HTML
much
much
faster
than
the
leased
line
can
push
the
bits
Rasmus
Lerdorf
Reprenant
syntaxe
claire
familière
puisque
très
proche
celle
langage
PHP
langage
prise
main
généralement
rapide
PHP
provoque
moins
phénomènes
rejet
Perl
C'est
langage
conviendra
autant
débutant
désireux
familiariser
techniques
web
dynamique
qu'au
professionnel
cherchant
solution
simple
puissante
fiable
création
sites
taille
moyenne
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
6
Cours
initiation
PHP
Comment
ça
marche
PHP
langage
destiné
l'écriture
scripts
peut
travailler
façon
autonome
sans
support
HTML
instructions
PHP
placées
entre
deux
balises
particulières
permet
tant
navigateur
qu'au
serveur
reconnaître
Lorsque
navigateur
demande
page
serveur
celui-ci
rencontre
balises
PHP
appelle
l'interpréteur
PHP
exécute
certain
nombre
d'actions
fonction
nature
instructions
contenues
page
plus
souvent
va
résulter
création
sorties
pouvant
non
comporter
commandes
HTML
sorties
vont
être
envoyées
navigateur
va
afficher
C'est
processus
création
pages
Web
dynamiques
nouvelle
génération
Web
sites
Web
actifs
web
s'est
orienté
vers
sites
web
actifs
permettant
l'utilisateur
recevoir
pages
personnalisées
offrant
fait
navigation
plus
dynamique
réalisés
l'aide
d'une
combinaison
langages
technologies
utiliser
seul
combinés
car
tous
indépendants
uns
autres
technologies
peuvent
être
réparties
deux
groupes
selon
qu'il
s'agit
technologies
côté
client
côté
serveur
Technologies
dynamiques
côté
client
Toutes
technologies
innovations
relativement
récentes
principal
inconvénient
côté
client
l'administrateur
site
webmestre
dispose
d'aucun
contrôle
logiciel
utilisé
afficher
page
Comme
entreprises
tiennent
évidemment
prendre
compte
autant
d'utilisateurs
possible
maximum
navigateurs
progrès
particulièrement
lents
nouvelles
technologies
prises
charge
uniquement
dernière
génération
principaux
navigateurs
marché
technologies
côtés
client
Contrôle
ActiveX
Applets
Java
scripts
côté
client
essentiellement
JavaScript
DHTML
Technologies
côté
serveur
quelques
années
Common
Gateway
Interface
CGI
constituait
seule
vraie
solution
permettant
mettre
données
dynamiques
Web
programmes
CGI
constituent
moyen
relativement
simple
créer
application
web
acceptant
saisies
l'utilisateur
d'interroger
base
données
renvoyer
certains
résultats
navigateur
Microsoft
Netscape
tous
deux
développés
API
propriétaires
pouvant
être
utilisées
développer
code
permettant
servir
requêtes
web
Parmi
dernières
technologies
web
côté
serveur
peut
citer
Active
Server
Pages
ASP
servlets
Java
JavaServer
Pages
JSP
PHP
PHP
fonctionne
façon
similaire
JSP
ASP
sections
script
encadrées
balises
incorporées
page
HTML
scripts
exécutés
serveur
avant
page
envoyée
navigateur
bien
qu'une
page
PHP
préoccupe
prise
charge
navigateur
Contrairement
ASP
PHP
cependant
indépendant
plate-forme
existe
différentes
versions
Windows
Unix
Linux
ainsi
nombreux
serveurs
Apache
IIS
facteur
décisif
qu'il
libre
``
Open
Source
l'intérêt
traitement
côté
serveur
traitement
génération
page
web
côté
serveur
offrent
plusieurs
avantages
rapport
technologies
côté
client
notamment
diminution
trafic
réseau
limitant
échanges
client/serveur
l'envoi
requête
réponse
réduction
temps
téléchargement
client
reçoit
qu'une
simple
page
HTML
élimination
problèmes
compatibilité
navigateur
Amélioration
mesures
sécuritaires
puisque
pouvez
coder
choses
jamais
vues
navigateur
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
7
Cours
initiation
PHP
Architecture
plupart
sites
web
offrent
contenu
statique
comme
publications
scientifiques
articles
pages
sites
consistent
texte
simple
agrémenté
quelques
images
liens
hypertextes
menant
vers
d'autres
pages
catégorie
sites
web
techniques
côté
client
suffisent
amplement
HTML
feuilles
style
cascade
CSS
permettent
structurer
présenter
contenu
pages
Javascript
permettant
d'ajouter
touche
plus
sophistiquée
nécessaire
Source
inconnue
Or
trouve
qu'Internet
intranets
plus
plus
utilisés
applications
plupart
mettent
jeu
bases
données
sites
applications
dynamiques
car
contenu
modifié
selon
données
impliquées
actions
l'utilisateur
Lorsqu'une
requête
page
provient
navigateur
Client
serveur
HTTP
procède
trois
étapes
lecture
requête
navigateur
Client
identification
page
serveur
puis
envoi
page
navigateur
Client
via
Internet
intranet
C'est
bien
là
PHP
entre
scène
exécutant
programme
PHP
serveur
pouvez
créer
puissantes
applications
agissant
façon
interactive
base
données
générant
contenu
dynamique
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
8
Cours
initiation
PHP
Source
inconnue
lieu
renvoyer
page
HTML
statique
l'utilisateur
souhaitez
serveur
accomplisse
certaines
actions
fonction
code
PHP
PHP
doit
prendre
quelques
décisions
créer
page
appropriée
situation
fait
PHP
actions
serveur
suivantes
lecture
requête
navigateur
Client
identification
page
serveur
exécution
instructions
venant
PHP
besoin
PHP
interroge
base
données
modifier
page
renvoi
page
navigateur
Client
via
Internet
intranet
code
HTML
pur
interprété
navigateur
non
exécuté
serveur
écrivant
code
PHP
exécuté
serveur
web
pouvez
accomplir
bien
plus
choses
qu'il
n'est
normalement
possible
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
9
Cours
initiation
PHP
3
Installation
devez
installer
PHP
serveur
Web
permettra
d'accéder
scripts
PHP
via
navigateur
utiliserons
serveur
Web
Apache
leader
marché
rapide
fiable
gratuit
serveur
IIS
fonctionne
également
pouvez
installer
Apache
PHP
deux
façons
•
Automatiquement
utilisant
utilitaire
installe
configure
tout
besoin
verrons
détail
installation
chapitre
``
Installation
rapide
EasyPHP
•
Manuellement
suivant
étapes
ci-dessous
3.1
Installation
manuel
fichiers
nécessaires
l'installation
PHP
d'Apache
disponibles
web
l'adresse
http
//www.php.net/
conseillé
télécharger
dernières
versions
disponibles
Installation
PHP
Créer
répertoire
nommé
php
/
autre
répertoire
copiez
fichiers
PHP
Configuration
PHP
Php4
Copiez
fichier
php4ts.dll
PHP
/WINNT/System
32
Copier
fichier
php.ini-dist
PHP
/WINNT
retirant
``
–dist
fichier
permet
régler
différents
paramètres
PHP
Php5
Copiez
fichier
php5ts.dll
PHP
/WINNT/System
32
Copier
fichier
php.ini-recommended
PHP
/WINNT
retirant
–
recommended
fichier
permet
régler
différents
paramètres
PHP
Voici
liste
points
utiles
noter
``
servent
commentaires
•
``
Paths
and
Directories
Ajouter
point
include_path
Mettre
chemin
fichiers
dll
exemple
\php\extensions
extension_dir
Php4
Paths
and
Directories
include_path
=
doc_root
=
user_dir
=
upload_max_filesize
=
2097152
extension_dir
=
\php\extensions
enable_dl
=
Php5
Paths
and
Directories
include_path
=
doc_root
=
user_dir
=
upload_max_filesize
=
2097152
extension_dir
=
\php\ext
enable_dl
=
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
10
Cours
initiation
PHP
•
``
Windows
Extensions
Dé-commenter
ligne
fichiers
d'extension
l'on
souhaite
utiliser
enlevant
point
virgule
exemple
souhaitez
utiliser
fonctions
ftp
imap
Php4
Windows
Extensions
extension=php_ftp.dll
extension=php_gettext.dll
extension=php_ifx.dll
extension=php_imap.dll
Php5
Windows
Extensions
extension=php_mysql.dll
extension=php_ftp.dll
extension=php_gettext.dll
extension=php_ifx.dll
extension=php_imap.dll
Remarque
MySQL
supporté
nativement
PHP4
nécessaire
charger
dll
cas
PHP5
•
``
Session
souhaitez
utiliser
sessions
PHP
plus
simple
garder
configuration
défaut
stocker
sessions
fichiers
faut
contre
spécifier
chemin
répertoire
stockées
sessions
exemple
pouvez
créer
répertoire
\php\sessions
Php4
Php5
Session
session.save_handler
=
files
sessions
stockées
fichiers
session.save_path
=
\php\sessions
session.use_cookies
=
1
utilise
cookies
transmettre
l'identifiant
session
session.name
=
PHPSESSID
etc
Installation
Apache
devez
installer
/Program
files/Apache
group
Configuration
Apache
fichier
``
httpd.conf
permet
configurer
Apache
pouvez
exemple
ajouter
adresse
IP
ligne
Server
Name
pouvez
également
modifier
racine
Web
documents
l'aide
directive
DocumentRoot
défaut
s'agit
répertoire
``
htdocs
répertoire
d'installation
d'Apache
convient
changer
``
\web
exemple
ServerName
127.0.0.1
DocumentRoot
``
/web
peu
plus
bas
Directory
``
/web
Options
All
AllowOverride
All
Order
allow
deny
Allow
from
all
/Directory
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
11
Cours
initiation
PHP
Copiez
lignes
configuration
suivantes
puis
collez-les
fichier
httpd.conf
Php4
#
for
the
apache
module
LoadModule
php4_module
/php/sapi/php4apache.dll
#
Ajouter
suite
ligne
ci-dessous
extensions
#
voulez
voir
reconnaître
php
précédée
point
AddType
application/x-httpd-php
.phtml
.pwml
.php3
.php4
.php
.php2
.inc
#
for
the
cgi
binary
you
can
use
that
one
compiled
with
force
cgi
redirect
too
ScriptAlias
/php4/
``
/php/
Action
application/x-httpd-php4
``
/php4/php.exe
Php5
#
for
the
apache
module
LoadModule
php5_module
/php/sapi/php5apache.dll
#
Ajouter
suite
ligne
ci-dessous
extensions
#
voulez
voir
reconnaître
php
précédée
point
AddType
application/x-httpd-php
.phtml
.pwml
.php3
.php4
.php
.php2
.inc
.php5
#
for
the
cgi
binary
you
can
use
that
one
compiled
with
force
cgi
redirect
too
ScriptAlias
/php5/
``
/php/
Action
application/x-httpd-php5
``
/php5/php.exe
plus
informations
Apache
site
web
Apache
Software
Foundation
adresse
http
//www.apache.org/
existe
aussi
précis
concis
Apache
chez
O
Reilly
Lancement
arrêt
serveur
Démarrer
Programmes
Apache
httpd
Server
cliquez
Start
Apache
in
console
fenêtre
ouvre
indiquant
Apache
Winn
32
PHP
running
…
arrêter
serveur
Démarrer
Exécuter
tapez
cmd
fenêtre
ouvre
tapez
cd
program
files/apache
group/apache
puis
apache
–k
shutdown
Test
configuration
tester
tout
bien
installé
faut
d'abord
rendre
http
//127.0.0.1
adresse
IP
site
devez
obtenir
page
indiquant
Apache
fonctionne
correctement
cas
contraire
vérifiez
bien
lancé
apache.exe
faut
ensuite
vérifier
PHP
fonctionne
aussi
cela
lancez
éditeur
texte
exemple
phpedit
Créer
nouveau
fichier
l'extension
adaptée
phpinfo.php
exemple
insérez-y
ligne
suivante
phpinfo
Sauvegardez
fichier
répertoire
adéquat
\program
files\apache
group\apache\htdocs\
puis
lancez
fichier
l'aide
navigateur
http
//127.0.0.1/phpinfo.php
devez
obtenir
page
d'information
configuration
PHP
Interfaçage
SGBD
L'interfaçage
base
données
certainement
aspects
plus
intéressants
langage
PHP
base
données
peut
offrir
solutions
très
séduisantes
peu
près
toutes
applications
nécessitant
génération
pages
HTML
dynamiques
Ceci
permettra
d'organiser
pages
trois
parties
•
corps
HTML
faisant
présentation
invoquant
scripts
génération
dynamique
contenu
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
12
Cours
initiation
PHP
•
scripts
génération
contenu
mise
forme
données
lues
base
données
•
l'interfaçage
base
données
fonctions
d'enrobage
wrappers
permettant
s'abstraire
base
données
utilisée
Quelle
base
données
trio
PHP
+
MySQL
+
Apache
solution
éprouvée
très
fiable
machine
Linux
FreeBSD
plate-forme
Win32
souvent
livré
package
appelé
``
MAP
PHP
contient
connexions
natives
vers
plupart
systèmes
bases
données
plus
MySQL
pouvez
connecter
directement
bases
données
PostgreSQL
mSQL
Oracle
dbm
filePro
Informix
Interbase
Sybase
citer
qu'elles
Grâce
standard
ODBC
Open
Database
Connectivity
pouvez
connecter
n'importe
quelle
base
données
possédant
pilote
ODBC
comme
produits
Microsoft
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
13
Cours
initiation
PHP
3.2
Installation
rapide
EasyPHP
Présentation
'
EasyPHP
EasyPHP
installe
configure
automatiquement
environnement
travail
complet
permettant
mettre
œuvre
toute
puissance
souplesse
qu'offrent
langage
dynamique
PHP
support
efficace
bases
données
EasyPHP
regroupe
serveur
http
Apache
base
données
MySQL
PHP
outil
d'administration
base
données
phpMyAdmin
Installation
'
EasyPHP
utiliserons
cadre
cours
version
EasyPHP
1.8
comprenant
Apache
1.3.33
PHP
4.3.10
PHPMyadmin
2.6.1
MySQL
4.1.9
Télécharger
EasyPHP
site
http
//www.easyphp.org/
l'installer
l'aide
fichier
d'installation
easyphp1-8_setup.exe
``
lancement
``
d'EasyPHP
revient
mettre
route
serveur
Apache
MySQL
l'installation
raccourci
vers
EasyPHP
créé
répertoire
``
Démarrer/Programmes/EasyPHP
fois
EasyPHP
lancé
icône
place
barre
tâches
côté
l'horloge
clic
droit
permet
d'accéder
différents
menus
•
fichier
Log
renvoie
erreurs
générées
Apache
MySQL
•
configuration
donne
accès
différentes
configurations
d'EasyPHP
•
web
local
ouvre
page
http
//localhost/index.htm
page
d'accueil
d'EasyPHP
•
démarrer/Arrêter
démarre/arrête
Apache
MySQL
•
quitter
ferme
EasyPHP
pages
PHP
interprétées
pouvez
placer
fichiers
répertoire
www
serveur
Apache
configuré
ouvrir
automatiquement
fichier
index
lorsque
saisissez
l'adresse
http
//localhost/
condition
évidemment
serveur
Apache
route
page
sert
page
d'accueil
Web
local
permet
vérifier
bon
fonctionnement
d'EasyPHP
Afin
d'avoir
vision
plus
claire
développements
conseillé
créer
répertoire
projet
d'ajouter
alias
indiquant
répertoire
contenant
fichiers
existe
autant
façons
programmer
PHP
qu'il
existe
d'éditeurs
spécialisés
non
éditeurs
html
coloration
syntaxique
saisie
semi-automatique
tester
configuration
afficher
page
d'administration
EasyPHP
l'adresse
suivante
http
//127.0.0.1/home/
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
14
Cours
initiation
PHP
3.3
Installation
support
cours
allons
maintenant
installer
site
mode
local
contenant
support
cours
partir
site
statique
entièrement
réalisé
HTML
allons
étudier
différentes
manières
rendre
dynamique
grâce
PHP
Etapes
d'installations
•
Créer
répertoire
``
coursphp
•
Télécharger
fichier
``
coursphp.zip
•
Décompresser
fichier
répertoire
``
coursphp
•
clic
droit
l'icône
EasyPHP
cliquez
administration
•
Cliquez
ajouter
alias
•
Indiquez
nom
site
exemple
coursphp
chemin
d'accés
exemple
\
coursphp
•
Valider
cliquant
OK
•
Redémarrer
EasyPHP
afin
changements
pris
compte
serveur
http
•
Maintenant
l'adresse
http
//localhost/coursphp/
permet
d'afficher
site
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
15
Cours
initiation
PHP
4
Langage
PHP
4.1
Quelques
règles
base
code
PHP
enregistré
comme
texte
brut
format
ASCII
bien
pouvez
écrire
page
PHP
l'aide
pratiquement
n'importe
quel
éditeur
texte
utiliserons
PHPEdit
cas
d'un
fichier
HTML
serveur
Web
transmet
simplement
contenu
fichier
navigateur
n'essaye
aucune
façon
comprendre
traiter
fichier
c'est
rôle
navigateur
fichiers
dotés
l'extension
.php
gérés
différemment
code
PHP
recherché
serveur
web
démarre
``
mode
HTML
Lorsqu'il
commence
examen
part
principe
fichier
contient
code
HTML
feuilles
styles
cascade
CSS
code
JavaScript
texte
brut
tout
autre
texte
transmis
navigateur
sans
besoin
d'interprétation
part
serveur
entre
``
mode
PHP
dès
qu'il
rencontre
balise
PHP
sert
``
sortir
mode
HTML
peut
utiliser
plusieurs
types
balises
PHP
différents
types
balises
PHP
style
XML
style
défaut
reconnu
tous
interpréteurs
celui
utiliserons
php
…
style
court
instruction
SGML
…
style
JavaScript
Instruction
appelle
JavaScript
VBScript
utiliser
éditeur
gère
instructions
traitement
SCRIPT
LANGUAGE='php
'
…
/SCRIPT
Caractères
échappement
ASP
condition
paramètre
configuration
asp_tags
fichier
configuration
PHP
php.in
valeur
…
instructions
PHP
doivent
obligatoirement
terminer
point-virgule
sauf
après
l'accolade
fermante
d'un
bloc
d'instructions
PHP
permet
générer
dynamiquement
pages
web
côté
client
suffit
cela
d'incorporer
code
côté
client
texte
généré
PHP
l'envoyer
navigateur
sortie
script
peut
être
générée
instructions
echo
print
commentaires
peuvent
être
insérés
script
grâce
signes
//
commentaires
seule
ligne
/
*
commentaires
plusieurs
lignes
*
/
Voici
deux
exemples
Exemple
1
php
echo
``
Texte
généré
PHP
navigateur
affiche
Texte
généré
PHP
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
16
Cours
initiation
PHP
Exemple
2
php
print
``
SCRIPT
LANGUAGE='JavaScript
'
alert
'Erreur
'
/SCRIPT
serveur
transmet
texte
SCRIPT
LANGUAGE='JavaScript
'
alert
'Erreur
'
/SCRIPT
navigateur
l'interprète
comme
code
JavaScript
affiche
boîte
alerte
Exercice
Voir
annexe
règles
base
Générer
aide
PHP
texte
suivant
Voici
premier
script
Bonjour
tous
monde
Puis
texte
aide
JavaScript
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
17
Cours
initiation
PHP
4.2
variable
PHP
PHP
langage
pauvrement
typé
n'est
tenu
déclarer
type
variables
constantes
l'on
va
utiliser
variables
peuvent
renfermer
successivement
n'importe
quel
type
contenu
C'est
PHP
détermine
type
variable
contexte
c'est-à-ire
valeur
attribuée
PHP
variables
représentées
signe
dollar
``
suivi
nom
variable
noms
variables
écrites
minuscules
différentes
variables
écrites
majuscules
ie
x
=
X
noms
variables
suivent
mêmes
règles
nommage
autres
entités
PHP
nom
variable
valide
doit
commencer
lettre
souligné
_
suivi
lettres
chiffres
soulignés
Exprimé
sous
forme
d'une
expression
régulière
cela
donne
'
a-zA-Z_\x7f-\xff
a-zA-Z0-9_\x7f-\xff
*
'
PHP
4
permet
aussi
d'assigner
valeurs
variables
référence
Cela
signifie
nouvelle
variable
fait
référencer
d'autres
terme
``
devient
alias
encore
``
pointe
variable
originale
modifications
nouvelle
variable
affecteront
l'ancienne
vice
versa
Cela
signifie
aussi
qu'aucune
copie
n'est
faite
l'assignation
beaucoup
plus
rapide
Cela
fera
notamment
sentir
boucles
lors
d'assignation
grands
objets
tableaux
assigner
référence
ajoutez
simplement
&
commercial
début
variable
assignée
variable
source
l'exemple
suivant
``
nom
Pierre
``
s'affichera
deux
fois
Exemple
php
foo
bar
bar
echo
echo
=
'Pierre
'
//
Assigne
valeur
'Pierre
'
foo
=
&
foo
//
Référence
foo
bar
=
``
nom
Pierre
//
Modifie
bar
foo
//
foo
aussi
modifiée
bar
Type
variables
Type
scalaire
Constantes
Booléen
Entier
nombre
virgule
flottante
chaîne
caractères
Type
composé
Tableau
Objet
constantes
façon
générale
pouvez
donner
nom
symbolique
importe
quelle
constante
scalaire
dire
type
booléen
integer
double
string
.Toutefois
usage
veut
constante
écrivent
lettre
capitales
créer
constante
utilise
fonction
define
forme
générale
Structure
définition
constante
define
nom
valeur
casse
nom
chaîne
caractères
représentant
nom
veut
donner
constante
valeur
valeur
attribuée
constante
casse
valeur
booléenne
indiquant
nom
donné
constante
sensible
FALSE
non
TRUE
casse
défaut
valeur
FALSE
signifie
nom
constante
sensible
casse
Comme
nom
suggère
valeur
peut
jamais
être
modifiée
durant
l'exécution
script
constantes
magiques
__FILE__
__LINE__
seules
exception
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
18
Cours
initiation
PHP
Exemple
php
define
``
PI
3.1415926535
r
=
20
circ
=2
*
PI
*
r
echo
``
circonférence
rayon
r
circ
br
echo
``
PI
vaut
``
.PI
Exercice
voir
annexe
constantes
Générer
aide
PHP
deux
lignes
suivantes
affectant
valeur
″Bonjour
tous
monde″
constante
″Voici
deuxième
script.″
constante
Puis
fichier
texte
aide
JavaScript
Variable
type
Booléens
C'est
type
plus
simple
booléen
exprime
valeurs
vrai
TRUE
faux
FALSE
pouvez
utiliser
constantes
'
TRUE
'
'
FALSE
'
spécifier
valeur
Type
booléen
constantes
insensibles
casse
Exemple
php
foo
=
True
//
assign
valeur
TRUE
to
foo
foo
=
False
//
assign
valeur
false
to
foo
foo
=
1
//
assign
valeur
1
to
foo
foo
=
0
//
assign
valeur
0
to
foo
foo
True
=
1
foo
False
=
foo
1
=
1
foo
0
=
0
Variable
type
entier
entier
nombre
l'ensemble
entiers
naturels
Z
Z
=
{
....
-2
-1
0
1
2
}
possible
spécifier
nombres
entiers
integers
toutes
manières
suivantes
décimale
base
10
hexadécimale
base
16
octale
base
8
éventuellement
précédé
signe
moins
-
Exemple
php
=
1234
echo
``
=
nombre
entier
base
10
1234
br
=
-123
echo
``
=
nombre
entier
négatif
-123
br
=
0123
echo
``
=
nombre
entier
base
8
octale
équivalent
83
base
10
83
br
=
0x1A
echo
``
=
nombre
entier
base
16
hexadécimale
équivalent
26
base
10
26
nombres
virgule
flottante
nombres
virgule
flottante
connus
aussi
sous
vocable
``
double
``
``
float
``
``
nombre
rééls
``
peuvent
être
spécifiés
utilisant
syntaxe
suivante
Exemple
php
=
1.234
echo
``
br
=
1.2e3
echo
•
variable
débute
valeur
numérique
valide
chaîne
évaluée
valeur
sinon
évaluée
comme
zéro
•
valeur
double
constitue
intégralité
chaîne
chaîne
évaluée
comme
valeur
double
autres
caractères
non
doubles
présents
chaîne
évaluée
comme
entier
Exemples
php
var
=
1
//
var
entier
var
=
1.2
//
var
double
var
=
``
abcd
//
var
chaîne
str
=
``
7
rue
Fbg
Montmartre
x
=
3
+
str
//
x
=
10
str
reste
inchangée
echo
``
x
str
//
affiche
10
7
rue
Fbg
Montmartre
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
19
Cours
initiation
PHP
str
=
``
code
275
x
=
3
+
str
//
x
=
3
echo
``
x
str
//
affiche
3
code
275
str
=
``
312.65
mètres
x
=
3
+
str
//
x
=
315
echo
``
x
str
//
affiche
315.65
312.65
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
20
Cours
initiation
PHP
variable
type
chaînes
caractères
chaînes
caractères
séquences
caractères
PHP
caractère
octet
256
possibles
PHP
'
encore
support
natif
d'Unicode
chaîne
peut
être
spécifiée
deux
manières
différentes
guillemets
simples
guillemets
doubles
Guillemets
simples
Syntax
a=
MaVariable
alors
vaut
MaVariable
Exemple
php
echo
'Ceci
chaîne
simple
'
echo
br
echo
'Vous
pouvez
inclure
nouvelles
lignes
chaîne
comme
ceci
'
echo
``
br
br
echo
'Arnold
coutume
dire
``
I\
'll
be
back
'
//
affiche
``
I
'll
be
back
echo
``
br
br
echo
'Etes
sûr
vouloir
effacer
dossier
\\
*
*
'
//
affiche
Etes
sûr
vouloir
effacer
dossier
\
*
*
echo
``
br
br
echo
'Etes
sûr
vouloir
effacer
dossier
\
*
*
'
//
affiche
Etes
sûr
vouloir
effacer
dossier
\
*
*
echo
``
br
br
echo
'Je
train
mettre
nouvelle
ligne
comme
ceci
\n
'
//
affiche
train
mettre
nouvelle
ligne
comme
ceci
\n
Guillemets
doubles
chaîne
entourés
guillemets
doubles
PHP
va
comprendre
certaines
séquences
caractères
séquences
caractères
comprises
PHP
\n
Nouvelle
ligne
linefeed
LF
0x0A
10
ASCII
\r
Retour
ligne
carriage
return
CR
0x0D
13
ASCII
\t
Tabulation
horizontale
HT
0x09
9
ASCII
\\
Antislash
\
Caractère
\
Guillemets
doubles
\
0-7
{
1,3
}
séquence
caractères
permet
rechercher
nombre
notation
octale
\x
0-9A-Fa-f
{
1,2
}
séquence
caractères
permet
rechercher
nombre
notation
hexadécimale
Exercice
Voir
annexe
variable
type
chaînes
caractères
créer
page
utilisant
côtes
puis
guillemets
affichant
texte
suivant
Voici
enfin
l'été
indien
rêvais
histoire
mienne
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
21
Cours
initiation
PHP
Traitement
variables
chaînes
Lorsqu'une
chaîne
spécifiée
guillemets
doubles
variables
qu'elle
contient
remplacées
valeur
deux
types
syntaxe
simple
complexe
syntaxe
simple
plus
courante
plus
pratique
fournit
moyen
d'utiliser
variables
chaînes
tableaux
membres
d'objets
syntaxe
complexe
introduite
PHP
4
peut
être
reconnue
grâce
accolades
entourant
expressions
Dès
qu'un
signe
dollar
rencontré
l'analyseur
PHP
va
lire
autant
caractère
qu'il
peut
former
nom
variable
valide
Entourez
nom
variable
accolades
indiquer
explicitement
nom
Utilisation
accolades
{
}
chaînes
Exemple
php
boisson
=
'vin
'
echo
``
boisson
pain
fromage
``
//
OK
car
``
n'est
autorisé
noms
variables
echo
``
goûté
plusieurs
boissons
//
OK
car
's
'
peut
entrer
nom
variable
PHP
recherche
boissons
echo
``
goûté
plusieurs
{
boisson
}
//
OK
Exercice
voir
annexe
chaînes
caractères
Exercice
1
Reprendre
exemple
présenté
paragraphe
‘
Guillemets
simples
remplacer
côtes
guillemets
Observer
passe
puis
corriger
Exercice
voir
annexe
chaînes
caractères
Exercice
2
Déclarer
variable
php
affecter
valeur
prénom
puis
générer
aide
PHP
texte
suivant
présente
prénom
``
variable
Puis
texte
aide
JavaScript
Exercice
voir
annexe
chaînes
caractères
Exercice
3
Reprendre
exercice
2
ajouter
variable
contiendra
nom
puis
Afficher
variable
nom
variable
prénom
Exercice
voir
annexe
chaînes
caractères
Exercice
4
aide
variable
super=fantastique
Créer
page
PHP
affichant
texte
suivant
utilisant
syntaxe
simple
puis
complexe
fantastique
soirées
fantastiques
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
22
Cours
initiation
PHP
variable
type
tableaux
tableaux
agrégats
valeurs
types
quelconques
éventuellement
mélangés
regroupés
sous
nom
unique
lesquels
repère
élément
isolé
indice
compté
partir
zéro
clé
enregistrée
temps
valeur
correspondante
lors
création
tableau
peut
aussi
créer
tableau
moyen
fonction
array
forme
générale
déclaration
Déclaration
tableau
tableau
=
valeur
tableau
=
array
valeur
valeur
valeur…
tableau
=
array
clé=
valeur
clé=
valeur
clé=
valeur…
Exemple
php
tableau
=
array
``
chien
``
salade
``
rocher
//ou
tableau
=
array
0=
chien
1=
salade
2=
rocher
reviendrons
plus
longuement
utilisation
tableaux
chapitres
Tableaux
variable
type
objet
objet
sorte
conteneur
pouvant
contenir
différents
éléments
général
classes
objet
type
object
initialiser
objet
devez
utiliser
commande
``
new
afin
créer
instance
l'objet
Exemple
php
class
foo
{
function
faire_foo
{
echo
``
Faisant
foo
``
}
}
bar
=
new
foo
bar-
faire_foo
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
23
Cours
initiation
PHP
transtypage
type
données
variable
peut
être
modifié
aide
``
transtypages
int
double
string
…
conversions
autorisées
int
integer
type
entier
bool
boolean
booléen
real
double
float
type
double
string
type
chaîne
array
type
tableau
object
type
objet
Exemple
php
foo
=
1
+
``
10.5
echo
``
\
foo
=
1
+
\
10.5\
alors
\
foo
type
float
11.5
br
foo
=
1
+
``
-1.3e3
echo
``
\
foo
=
1
+
\
-1.3e3\
alors
\
foo
type
float
-1299
br
foo
=
1
+
``
bob-1.3e3
echo
``
\
foo
=
1
+
\
bob-1.3e3\
alors
\
foo
type
integer
1
br
foo
echo
foo
echo
=
1
+
``
bob3
\
foo
=
1
+
\
bob3\
alors
\
foo
type
integer
11
br
=
1
+
``
10
Small
Pigs
\
foo
=
1
+
\
10
Small
Pigs\
alors
\
foo
type
integer
11
br
foo
echo
foo
echo
=
1
+
``
10
Little
Piggies
\
foo
=
1
+
\
10
Little
Piggies\
alors
\
foo
type
integer
11
br
=
``
10.0
pigs
``
+
1.0
\
foo
=
1
+
\
10.0
pigs
\
+
1.0
alors
\
foo
type
float
11
br
PHP
met
deux
fonctions
disposition
traiter
types
variables
fonctions
gettype
settype
fonction
gettype
détermine
type
données
variable
renvoie
valeurs
suivantes
•
``
integer
•
``
double
•
``
string
•
``
array
•
``
object
•
``
class
•
``
unknown
type
fonction
settype
définit
type
variable
façon
explicite
type
peut
être
défini
renvoie
valeur
false
Exemples
php
var
=
11.2
//
var
double
echo
``
\
var
=
var
type
\
var
``
echo
gettype
var
echo
``
br
//
affiche
var
=
11.2
type
var
double
var
=
int
var
//
var
maintenant
entier
valeur
11
echo
``
\
var
=
var
type
\
var
``
echo
gettype
var
echo
``
br
//
affiche
var
=
11
type
var
integer
var
=
double
var
//
var
nouveau
double
valeur
11.0
echo
``
\
var
=
var
type
\
var
``
echo
gettype
var
echo
``
br
//
affiche
var
=
11
type
var
double
var
=
string
var
//
var
chaîne
caractères
valeur
``
11.0
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
24
Cours
initiation
PHP
echo
``
\
var
=
var
type
\
var
``
echo
gettype
var
echo
``
br
//
affiche
var
=
11
type
var
string
Exercice
Voir
annexe
transtypage
Exercice
1
Déclarer
deux
variables
php
affecter
valeur
nom
prénom
puis
générer
l'aide
PHP
texte
suivant
présente
prénom
``
prénom
Déja
vu
l'exercice
3
chapitre
``
Traitement
variables
chaînes
Affichez
ensuite
type
chaque
variable
Exercice
Voir
annexe
transtypage
Exercice
2
variables
var1=1000
var2=6.55957
var3=
‘
1
var4=array
Créer
page
PHP
afin
afficher
variables
type
puis
convertisser
var1
type
``
double
var2
type
``
integer
var3
type
``
double
var4
type
``
integer
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
25
Cours
initiation
PHP
variables
super
global
variables
'superglobal
'
globale
automatique
Cela
signifie
qu'elles
simplement
disponible
tous
contextes
d'exécution
fonctions
méthodes
n'avez
besoin
déclarer
global
accéder
Toutes
informations
retrouvent
grace
fonction
phpinfo
vue
paragraphe
``
test
configuration
chapitre
``
Installation
GLOBALS
Contient
référence
chaque
variable
actuellement
disponible
l'environnement
d'exécution
global
clés
tableau
noms
variables
globales
_SERVER
variables
fournies
serveur
web
bien
directement
liées
l'environnement
d'exécution
script
courant
L'ancienne
version
HTTP_SERVER_VARS
contient
mêmes
informations
n'est
auto
globale
_GET
variables
fournies
protocole
HTTP
méthode
GET
L'ancienne
version
HTTP_GET_VARS
contient
mêmes
informations
n'est
auto
globale
_POST
variables
fournies
protocole
HTTP
méthode
POST
L'ancienne
version
HTTP_POST_VARS
contient
mêmes
informations
n'est
auto
globale
_COOKIE
variables
fournies
protocole
HTTP
cookies
L'ancienne
version
HTTP_COOKIE_VARS
contient
mêmes
informations
n'est
auto
globale
_FILES
variables
fournies
protocole
HTTP
suite
téléchargement
fichier
L'ancienne
version
HTTP_POST_FILES
contient
mêmes
informations
n'est
auto
globale
Voir
Téléchargement
méthode
POST
plus
d'informations
_ENV
variables
fournies
l'environnement
L'ancienne
version
HTTP_ENV_VARS
contient
mêmes
informations
n'est
auto
globale
_REQUEST
variables
fournies
script
n'importe
quel
mécanisme
d'entrée
doit
recevoir
confiance
limitée
tableau
associatif
constitué
contenu
variables
_GET
_POST
_COOKIE
_FILES
Note
lorsque
exécutez
script
ligne
commande
variable
va
inclure
variables
argv
argc
Elles
présentes
variable
_SERVER
présence
valeur
entrées
tableau
réglés
directive
variables_order
tableau
n'est
l'évolution
d'aucune
variable
d'avant
PHP
4.1.0
_SESSION
variables
actuellement
enregistrées
session
attachée
script
L'ancienne
version
HTTP_ENV_VARS
contient
mêmes
informations
n'est
auto
globale
Voir
chapitre
plus
d'informations
Précisons
variables
super
global
ci-dessus
fait
tableaux
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
26
Cours
initiation
PHP
4.3
opérateurs
opérateurs
servent
déterminer
valeur
effectuant
opération
plusieurs
variables
opérateurs
PHP
très
similaires
ceux
Perl
opérateurs
arithmétiques
rappelez_vous
opérations
élémentaires
apprises
l'écoles
Exemple
nom
résultat
+
b
Addition
Somme
b
-
b
Soustraction
Différence
b
*
b
Multiplication
Produit
b
/
b
Division
Quotient
b
b
Modulo
Reste
divisé
b
opérateur
affectation
opérateur
=
permet
affecter
valeur
variable
variable
située
gauche
signe
=
voit
affecter
valeur
située
droite
signe
=
ainsi
expression
b
=
+
5
signifie
valeur
variable
augmenté
cinq
puis
rangée
variable
b
PHP
permet
affectation
multiples
Ainsi
droit
écrire
=
b
=
=
2
variable
b
contiendront
toutes
trois
valeur
2
propriété
également
valable
tableaux
devez
confondre
opérateur
affectation
opérateur
comparaison
``
==
``
opérateur
concaténation
point
utilisé
PHP
comme
opérateur
concaténation
fusionner
plusieurs
chaînes
seule
Exemple
PHP
nom
=
``
Durand
prenom
=
``
Pierre
personne
=
prenom
``
nom
echo
echo
echo
echo
personne
``
br
Martine
``
nom
``
br
affiche
Pierre
Durand
br
affiche
Martine
Durand
Exercice
Voir
annexe
opérateur
concaténation
Déclarer
variable
affecter
valeur
prénom
autre
nom
puis
générer
aide
PHP
opérateur
concaténation
texte
suivant
présente
prénom
``
variable
prénom
variable
nom
Puis
texte
aide
JavaScript
opérateur
arobase
opérateur
peut
intervenir
devant
nom
fonction
interdit
alors
PHP
afficher
éventuel
message
erreur
cours
exécution
fonction
appartient
dés
lors
programmeur
prendre
disposition
nécessaires
exemple
testant
valeur
retour
fonction
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
27
Cours
initiation
PHP
opérateurs
comparaison
opérateurs
comparaison
comme
nom
l'indique
permettent
comparer
deux
valeurs
exemple
nom
résultat
==
b
Egal
Vrai
égal
b
===
b
Identique
Vrai
égal
b
qu'ils
type
PHP4
seulement
=
b
Différent
Vrai
différent
b
b
Plus
petit
Vrai
plus
petit
strictement
b
b
Plus
grand
Vrai
plus
grand
strictement
b
Inférieur
=
b
Vrai
plus
petit
égal
b
égal
Supérieur
=
b
Vrai
plus
grand
égal
b
égal
opérateurs
logiques
exemple
and
b
or
b
xor
b
&
&
b
||
b
nom
And
Or
XOR
Or
NON
Not
And
Or
résultat
Vrai
b
vrais
Vrai
b
vrai
Vrai
b
vrai
deux
temps
Vrai
faux
Vrai
b
vrais
Vrai
b
vrai
opérateurs
d'incrémentation
example
++
a++
name
Pre-increment
Post-increment
Pre-decrement
Post-decrement
effect
Incrémente
renvoi
Renvoi
incrémente
Décréments
renvoi
Renvoi
décrémente
Raccourcis
affectation
variables
possible
PHP
utiliser
raccourcis
opérateurs
lorsque
premier
opérande
variable
résultat
stocké
variable
Exemple
Ma_variable
+=
i
Ma_variable
-=
i
Ma_variable
*
=
i
Ma_variable
/=
i
Ma_variable
=
i
Ma_variable
.=
i
Ma_variable
++
Ma_variable
Daniel
HADJADJ
Daniel
Equivaut
Ma_variable
=
Ma_variable
+
i
Ma_variable
=
Ma_variable
-
i
Ma_variable
=
Ma_variable
*
i
Ma_variable
=
Ma_variable
/
i
Ma_variable
=
Ma_variable
i
Ma_variable
=
Ma_variable
+
i
Ma_variable
=
Ma_variable
+
1
Ma_variable
=
Ma_variable
-
1
©
dahadjadj
free.fr
-
2005
-
Page
28
Cours
initiation
PHP
4.4
Instructions
Instruction
conditionnelles
instructions
conditionnelles
indiquent
programme
décision
doit
être
prise
forme
générale
instruction
suivante
Structure
if
If
condition
{
bloc
instructions
…
}
Exemple
php
prix=10
if
prix
1000
{
remise
=
10
frais_de_port
=
0
}
possible
imbriquer
instruction
if
autre
Exemple
php
prix=110
if
prix
1000
{
if
prix
100
{
remise
=
10
frais_de_port
=
0
}
}
Exercice
Voir
annexe
Instruction
conditionnelles
Exercice
1
Initialiser
variable
civ
‘
Mme
dame
‘
Mlle
demoiselle
‘
homme
Créer
variables
prenom
nom
affectez
valeur
choix
Testez
variable
civ
afin
afficher
page
PHP
phrases
suivantes
correspondant
sexe
Bonjour
Madame
prénom
nom
Bonjour
Mademoiselle
prénom
nom
Bonjour
Monsieur
prénom
nom
Branchement
conditionnel
mots
clé
else
elseif
Structure
else
If
condition
{
condition
vérifiée
exécution
bloc
instructions
…
}
else
{
condition
vérifiée
exécution
bloc
instructions
…
}
else
permet
exécuter
second
bloc
instructions
lorsque
condition
testée
vérifiée
exploite
ainsi
deux
possibilités
logiques
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
29
Cours
initiation
PHP
Exemple
php
prix=10
if
prix
1000
{
remise
=
10
frais_de_port
=
0
}
else
{
remise
=
5
frais_de_port
=
50
}
Exercice
Voir
annexe
Instruction
conditionnelles
Exercice
2
Reprendre
exercice
précédent
ajouter
Else
affichant
‘
doutes
genre.
variable
civ
vérifié
elsif
permet
cascader
tests
règles
emploi
inspirées
celles
deux
précédentes
Structure
elseif
If
condition
{
condition
vérifiée
exécution
bloc
instructions
…
}
elseif
condition
{
condition
vérifiée
exécution
bloc
instructions
…
}
elseif
condition
{
condition
vérifiée
exécution
bloc
instructions
…
}
L'expression
elseif
exécutée
seulement
if
précédent
tout
autre
elseif
précédent
évalués
comme
faux
FALSE
elseif
évalué
vrai
TRUE
Exemple
php
prix=1020
if
prix
1000
{
remise
=
0
frais_de_port
=
50
}
elseif
prix
=
1000
{
remise
=
5
frais_de_port
=
10
}
elseif
prix
1000
{
remise
=
10
frais_de_port
=
50
}
Exercice
Voir
annexe
Instruction
conditionnelles
Exercice
3
centre
formation
dispense
10
cours
différents
stagiaires
entreprise
5
cours
principaux
5
facultatifs
Selon
réglementation
stagiaire
peut
inscrire
deux
cours
principaux
maximum
deux
cours
facultatifs
maximum
condition
suive
moins
cour
principal
secrétariat
centre
chargé
adresser
courrier
chaque
stagiaire
dispose
envoyer
courrier
trois
lettres
type
lettre
conseille
lettre
type
conseille
lettre
confirmation
lettre
type
confirmation
lettre
rappel
réglementation
demandant
stagiaire
restreindre
choix
lettre
type
interdit
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
30
Cours
initiation
PHP
courrier
personnaliser
envoyer
tous
stagiaires
conformément
réglementation
selon
cas
figure
suivant
stagiaire
inscrit
aucun
cour
principal
alors
adresse
lettre
conseille
stagiaire
inscrit
cours
principal
alors
adresse
lettre
conseille
stagiaire
inscrit
deux
cours
principaux
alors
adresse
lettre
confirmation
stagiaire
inscrit
plus
deux
cours
principaux
plus
deux
cours
facultatifs
alors
adresse
lettre
‘
interdiction
Ecrivez
programme
PHP
permettant
afficher
lettre
type
correspondant
situation
stagiaire
pris
soins
vérifier
préalable
civilité
stagiaire
disposons
quatre
variables
suivantes
aider
prenom
prend
valeur
choix
nom
prend
valeur
choix
civ
peut
prendre
l'une
valeurs
suivantes
``
0
Madame
``
1
Mademoiselle
``
2
Monsieur
ncours
nombre
cours
principaux
peut
prendre
valeurs
0
5
ncoursf
nombre
cours
facultatifs
peut
prendre
valeurs
0
5
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
31
Cours
initiation
PHP
Instruction
switch
instruction
permet
réaliser
aiguillage
multidirectionnel
Structure
Switch
Switch
variable
{
case
valeur
1
bloc
instructions
1
break
case
valeur
2
bloc
instructions
2
break
case
valeur
bloc
instructions
default
}
dernier
bloc
instructions
case
spécial
default
utilisé
lorsque
tous
case
échoués
doit
être
dernier
cas
listé
Exemple
php
//Dans
liste
déroulante
propose
gens
différents
choix
pays
//chaque
choix
liste
valeur
b
renvoie
page
//suivante
contenant
script
liste=array
switch
liste
{
case
``
echo
``
habitez
France
break
case
``
b
echo
``
habitez
Allemagne
break
case
``
echo
``
habitez
Espagne
break
default
echo
``
pays
n'est
connu
}
Exercice
Voir
annexe
Instruction
conditionnelles
Exercice
4
Reprendre
exercice
1
chapitre
afficher
page
utilisant
instruction
``
switch
boucles
boucles
while
do…while
boucle
while
exécute
bloc
instruction
tant
l'expression
boucle
while
vérifiée
évaluée
comme
TRUE
valeur
l'expression
vérifiée
chaque
début
boucle
valeur
change
durant
l'exécution
l'instruction
l'exécution
s'arrêtera
'
fin
l'itération
chaque
fois
PHP
exécute
l'instruction
appelle
cela
itération
l'expression
while
vérifiée
évaluée
comme
FALSE
avant
première
itération
l'instruction
jamais
exécutée
Structure
boucle
while
while
condition
{
bloc
instructions…
}
Exemple
php
num
=
1
while
num
=
5
{
echo
num
``
br
//
affiche
tous
chiffres
1
5
num++
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
32
Cours
initiation
PHP
}
Exercice
Voir
annexe
boucles
Exercice
1
tableau
mois
année
mois=array
'Janvier
'
'Février
'
'Mars
'
'Avril
'
'Mai
'
'Juin
'
'Juillet
'
'Aôut
'
'Septembre
'
'Octobre
'
'Novembre
'
'Décembre
'
Créer
page
PHP
affichant
douze
mois
année
aide
instruction
while
boucle
do
…
while
similaire
boucle
while
condition
vérifiée
fin
chaque
itération
non
début
exécute
toujours
moins
fois
Structure
boucle
do
while
do
{
bloc
instructions…
}
while
num
6
Exemple
php
num
=
1
do
{
echo
num
``
br
num++
}
while
num
6
//
affiche
tous
chiffres
1
5
Exercice
Voir
annexe
boucles
Exercice
2
Reprendre
exercice
précédent
créer
page
PHP
affichant
mois
juin
aide
instruction
do
while
Boucle
for
types
boucle
for
while
équivalentes
utilise
boucle
for
quand
nombre
répétitions
prédéfini
Structure
boucle
for
for
expression1
condition
expression2
{
bloc
instructions…
}
Exemple
php
for
i
=
1
i
=
5
i++
{
echo
i
``
br
//
affiche
tous
chiffres
1
5
}
Exercice
Voir
annexe
boucles
Exercice
3
Reprendre
exercice
1
chapitre
créer
page
PHP
affichant
douze
mois
année
aide
boucle
for
verrons
autres
boucles
foreach
list
Each
chapitre
concernant
tableaux
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
33
Cours
initiation
PHP
4.5.
Tableaux
déjà
abordé
brièvement
tableaux
maintenant
allons
voir
plus
loin
leurs
possibilités
tableaux
série
variables
toutes
nom
Chaque
constituant
tableau
appelé
élément
Chaque
élément
tableau
associé
manière
unique
entier
Grâce
entier
appelé
index
indice
clé
possible
d'accéder
élément
d'un
tableau
comme
s'il
s'agissait
d'une
variable
normale
accède
élément
tableau
utilisant
crochets
contiennent
index
entiers
indexent
tableau
'
obligation
suivre
l'index
manquant
PHP
utilise
comme
index
plus
grand
index
existant
incrémenté
1
somme
tenu
déclarer
quoi
avant
initialiser
tableau
car
tous
éléments
créent
volée
pouvez
affecter
valeurs
éléments
tableau
façon
autre
variable
pouvez
initialiser
tableaux
deux
manières
différentes
Structure
tableau
NomTableau
=
Valeur
NomTableau
=
array
indice
Valeur
indice
=
Valeur
…
Exemple
php
Auteur
=
``
Molière
Auteur
=
``
Franz
Kafka
Auteur
=
``
Albert
Camus
echo
Auteur
0
``
br
//Affiche
Molière
echo
Auteur
1
``
br
//Affiche
Franz
Kafka
echo
Auteur
2
``
br
//Affiche
Albert
Camus
aide
fonction
array
php
Auteur
=
array
``
Molière
Franz
Kafka
``
Albert
Camus
exemples
indice
renseigné
PHP
charge
ainsi
valeur
``
Molière
``
Franz
Kafka
``
Albert
Camus
prendrons
respectivement
valeur
0
1
2
peut
également
spécifier
indice
tableaux
php
Auteur
5
=
``
Molière
Auteur
7
=
``
Franz
Kafka
Auteur
12
=
``
Albert
Camus
echo
Auteur
5
``
br
//Affiche
Molière
echo
Auteur
7
``
br
//Affiche
Franz
Kafka
echo
Auteur
12
``
br
//Affiche
Albert
Camus
php
Auteur=array
5
=
``
Molière
7
=
``
Franz
Kafka
12
=
``
Albert
Camus
echo
Auteur
5
``
br
//Affiche
Molière
echo
Auteur
7
``
br
//Affiche
Franz
Kafka
echo
Auteur
12
``
br
//Affiche
Albert
Camus
exemples
indice
renseigné
ainsi
valeur
``
Molière
``
Franz
Kafka
``
Albert
Camus
prendrons
respectivement
valeur
5
7
12
Exercice
Voir
annexe
Tableaux
Exercice
1
tableau
mois
année
mois=array
'Janvier
'
'Février
'
'Mars
'
'Avril
'
'Mai
'
'Juin
'
'Juillet
'
'Aôu
'
'Septembre
'
'Octobre
'
'Novembre
'
'Décembre
'
Afficher
mois
juillet
partir
tableau
mois
année
sans
utiliser
boucle
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
34
Cours
initiation
PHP
Fonction
traitement
tableaux
Php
offre
nombreuses
fonction
manipuler
tableaux
reportez
documentation
liste
complète
fonction
tableaux
voici
quelques
Array
Count
tableau
Reset
tableau
End
tableau
Current
tableau
Next
tableau
Prev
tableau
Extract
tableau
crée
tableau
renvoi
nombre
éléments
tableau
retourne
premier
élément
tableau
positionne
dernière
élément
tableau
renvoi
élément
cour
tableau
positionne
élément
suivant
tableau
positionne
élément
précédent
tableau
importe
variables
table
symbole
partir
tableau
attention
traitement
collisions
in_array
tableau
Renvoi
TRUE
valeur
appartient
tableau
array_search
Recherche
élément
tableau
renvoi
clé
existe
array_keys
tableau
chaine
Renvoi
toutes
clé
tableau
array_diff
tableau1
tableau2
Crée
tableau
contenant
éléments
premier
tableau
second
Array_push
tableau
chaine
Ajoute
plusieurs
éléments
fin
d'un
tableau
Print_r
tableau
affiche
tableau
format
montre
clés
valeurs
Parcourir
tableaux
boucles
peut
passer
revue
tableau
boucles
for
List
each
foreach
utiliser
boucle
for
nombre
répétitions
doit
être
prédéfini
faire
utiliserons
fonction
count
renvoi
nombre
éléments
tableau
Exemple
php
tableau
=array
'bleu
'
'rouge
'
'vert
'
'violet
'
'jaune
'
for
i
=
0
i
Count
tableau
i++
{
echo
``
clé
=
``
i
valeur
=
``
tableau
i
``
br
}
List
each
List
Tout
comme
array
list
n'est
véritable
fonction
construction
syntaxique
permet
d'assigner
série
variables
seule
ligne
Each
each
retourne
paire
clé-valeur
courante
tableau
array
avance
pointeur
tableau
paire
retournée
tableau
4
éléments
clés
0
1
key
value
éléments
0
key
contiennent
nom
clé
1
value
contiennent
valeur
pointeur
interne
fichier
au-delà
fin
tableau
each
retourne
FALSE
reste
position
signifie
devrez
utiliser
reset
avant
réutiliser
tableau
Exemple
php
couleurs=array
'bleu
'
'rouge
'
'vert
'
'violet
'
'jaune
'
reset
couleurs
while
list
Cle
Valeur
=
each
couleurs
{
echo
``
Cle
=
Valeur
BR
}
Exercice
Voir
annexe
Tableaux
Exercice
2
page
PHP
créer
tableau
contenant
voyelles
afficher
aide
instruction
list
each
Exercice
Voir
annexe
Tableaux
Exercice
3
page
PHP
construiser
tableau
List_stagiaire
contenant
éléments
suivants
afficher
liste
aide
boucle
list
each
Madame
``
Durant
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
35
Cours
initiation
PHP
Mademoiselle
``
Dupré
Alain
Monsieur
``
Camus
ami
``
Jean-Marc
Foreach
PHP
4
fait
évoluer
boucle
for
boucle
″Foreach″
boucle
″Foreach″
permet
parcourir
tableau
contenant
nombre
inconnu
éléments
effectue
itérations
jusqu
fin
tableau
prend
deux
formes
première
Structure
boucle
foreach
Foreach
NomTableau
ElementTableau
{
Instructions
exécuter…
}
Exemple
php
couleurs=array
'bleu
'
'rouge
'
'vert
'
'violet
'
'jaune
'
Foreach
couleurs
ElementTableau
{
echo
ElementTableau
``
BR
}
seconde
Structure
boucle
foreach
Foreach
NomTableau
ValeurIndice
=
ElementTableau
{
Instructions
exécuter…
}
seconde
forme
identique
première
sauf
met
disposition
valeur
indice
tableau
Exemple
php
couleurs=array
'bleu
'
'rouge
'
'vert
'
'violet
'
'jaune
'
Foreach
couleurs
ValeurIndice
=
ElementTableau
{
echo
``
ValeurIndice
=
ElementTableau
BR
}
Lorsque
foreach
démarre
pointeur
interne
fichier
automatiquement
ramené
premier
élément
tableau
Cela
signifie
n'aurez
faire
appel
reset
avant
foreach
Exercice
Voir
annexe
Tableaux
Exercice
4
Créer
page
PHP
affichant
éléments
contenus
variable
global
_SERVER
utilisant
foreach
Exercice
Voir
annexe
Tableaux
Exercice
5
Reprendre
tableau
List_stagiaire
exercice
3
chapitre
``
tableaux
créer
aide
fonction
PHP
prédéfinie
page
PHP
permettant
afficher
liste
Rechercher
Madame
Durant
Monsieur
Dupont
font
parie
liste
indiquer
chacun
phrase
contactés
courrier
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
36
Cours
initiation
PHP
Tableaux
Multidimensionnels
tableau
multidimensionnel
tableau
composé
tableaux
pouvez
imbriquer
tableaux
tant
PHP
manque
mémoire
définition
tableau
multidimensionnel
forme
générale
présente
manière
suivante
Structure
tableau
multidimensionnel
NomTableau
=
array
indice
=
array
Contenu
tableau
indice
=
array
Contenu
tableau
…
Exemple
php
animaux=array
``
poisonns
=
array
``
sole
``
merlan
``
colin
sardine
serpents
=
array
``
orvet
couleuvre
oiseaux
=
array
``
merle
``
serin
``
pie
//ou
comme
ceci
poisonns
=
array
``
sole
``
merlan
``
colin
``
sardine
serpents
=
array
``
orvet
couleuvre
oiseaux
=
array
``
merle
``
serin
``
pie
animaux=array
``
poisonns
=
poisonns
serpents
=
serpents
oiseaux
=
oiseaux
echo
``
L'élément
\
animaux
'oiseaux
'
1
vaut
``
animaux
'oiseaux
'
1
Exercice
Voir
annexe
Tableaux
Multidimensionnels
Exercice
1
liste
stagiaires
ci-dessous
Madame
Durant
Mademoiselle
Dupré
Père
Alain
Monsieur
Camus
Jean-Marc
Leblanc
sachant
Madame
Durant
domiciliée
21
rue
Georges
Brassens
n°
téléphone
01
42
44
12
30
Mademoiselle
``
Dupré
domiciliée
54
rue
Jacques
Brel
n°
téléphone
01
14
42
32
40
Père
Alain
domicilié
13
rue
Saint
pères
n°
téléphone
01
52
64
72
80
Monsieur
Camus
domicilié
79
rue
scribe
n°
téléphone
01
62
73
82
90
Jean-Marc
Leblanc
domicilié
rue
blanc
manteaux
n°
téléphone
01
02
14
22
40
page
PHP
construiser
tableau
multidimensionnel
liste
stagiaires
adresse
N°
téléphone
annuaire_stagiaires
afficher
liste
chaque
stagiaire
accompagne
dessous
adresse
Exercice
Voir
annexe
Tableaux
Multidimensionnels
Exercice
2
liste
stagiaires
ci-dessous
Madame
Durant
Mademoiselle
Dupré
Père
Alain
Monsieur
Camus
Jean-Marc
Leblanc
sachant
Madame
Durant
domiciliée
21
rue
Georges
Brassens
94000
Créteil
Mademoiselle
``
Dupré
domiciliée
54
rue
Jacques
Brel
75000
Paris
Père
Alain
domicilié
13
rue
Saint
pères
93000
Saint-Denis
Monsieur
Camus
domicilié
79
rue
scribe
92160
Antony
Jean-Marc
Leblanc
domicilié
rue
blanc
manteaux
91000
Montfermeil
Construiser
tableau
multidimensionnel
liste
stagiaires
adresse
annuaire_stagiaires
puis
créer
page
PHP
affichant
liste
chaque
stagiaire
accompagne
dessous
adresse
affichant
ligne
code
postal
ville
Exercice
Voir
annexe
Tableaux
Multidimensionnels
Exercice
3
liste
stagiaires
ci-dessous
Madame
Durant
Mademoiselle
Dupré
Père
Alain
Monsieur
Camus
Jean-Marc
Leblanc
sachant
Madame
Durant
domiciliée
21
rue
Georges
Brassens
94000
Créteil
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
37
Cours
initiation
PHP
Mademoiselle
``
Dupré
domiciliée
54
rue
Jacques
Brel
75000
Paris
Père
Alain
domicilié
13
rue
Saint
pères
93000
Saint-Denis
Monsieur
Camus
domicilié
79
rue
scribe
92160
Antony
Jean-Marc
Leblanc
domicilié
rue
blanc
manteaux
91000
Montfermeil
liste
inscrits
cours
suivants
Inscrits
cours
Mathématiques
``
Madame
Durant
``
Monsieur
Camus
Inscrits
cours
Physique
``
Mademoiselle
Dupré
``
Père
Alain
Inscrits
cours
Français
``
Jean-Marc
Leblanc
``
Mademoiselle
Dupré
``
Monsieur
Camus
page
PHP
construiser
deux
tableaux
multidimensionnels
liste
stagiaires
adresse
annuaire_stagiaires
liste
cours
stagiaires
inscrits
cours_stagiaires
puis
afficher
liste
chaque
cours
chaque
stagiaire
inscrits
accompagne
dessous
adresse
affichant
ligne
code
postal
ville
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
38
Cours
initiation
PHP
Tri
tableaux
PHP
met
disposition
plusieurs
fonctions
tri
voici
quelques
unes
Sort
Asort
Rsort
arsort
Ksort
krsort
Trie
tableau
maintient
l'association
index
supprime
clés
existantes
réordonne
Trie
tableau
maintient
l'association
index
comportent
façon
sort
rsort
sauf
elles
renvoient
tableau
ordre
inversé
comportent
façon
sort
rsort
sauf
elles
renvoient
tableau
trie
ordre
alphabétique
indice
chaîne
Exemple
différent
tri
tableau
fruits
fruits
=
array
``
=
papaye
=
orange
b
=
banane
=
ananas
Avant
tri
papaye
orange
b
banane
ananas
Avant
tri
papaye
orange
b
banane
ananas
Après
tri
exemple
tri
sort
0
ananas
sort
fruits
tri
tableau
l'ordre
alphabétique
valeurs
1
banane
réordonne
indices
2
orange
3
papaye
Après
tri
exemple
tri
asort
ananas
asort
fruits
tri
tableau
l'ordre
alphabétique
valeurs
b
banane
maintient
l'association
index
orange
papaye
Avant
tri
papaye
orange
b
banane
ananas
Après
tri
exemple
tri
rsort
rsort
fruits
tri
tableau
l'ordre
alphabétique
inverse
valeurs
réordonne
indices
Avant
tri
papaye
orange
b
banane
ananas
Après
tri
exemple
tri
arsort
arsort
fruits
tri
tableau
l'ordre
alphabétique
inverse
valeurs
maintient
l'association
index
Avant
tri
papaye
orange
b
banane
ananas
papaye
orange
b
banane
ananas
Après
tri
exemple
tri
ksort
ksort
fruits
tri
tableau
l'ordre
alphabétique
indice
chaîne
maintient
l'association
indice
Avant
tri
papaye
orange
b
banane
ananas
0
papaye
1
orange
2
banane
3
ananas
orange
b
banane
ananas
papaye
Après
tri
exemple
tri
krsort
krsort
fruits
tri
tableau
l'ordre
alphabétique
inverse
indice
chaîne
maintient
l'association
indice
papaye
ananas
b
banane
orange
Attention
tri
lors
récupération
valeurs
liste
leurs
indices
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
39
Cours
initiation
PHP
Exercice
Voir
annexe
Tri
tableaux
tableau
mois
l'année
mois=array
'Janvier
'
'Février
'
'Mars
'
'Avril
'
'Mai
'
'Juin
'
'Juillet
'
'Aôut
'
'Septembre
'
'Octobre
'
'Novembre
'
'Décembre
'
Effectuer
tri
chacune
fonctions
tri
ci-dessus
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
40
Cours
initiation
PHP
4.6
Fonctions
fonction
section
code
défini
fois
être
réutilisé
autres
parties
programme
permet
écrire
applications
particulièrement
bien
modulaires
structurées
fonctions
peuvent
prendre
valeurs
entrée
appelées
arguments
effectuer
opérations
puis
renvoyer
valeur
transfert
toutes
valeurs
arguments
nouvelles
variables
appelées
paramètres
derniers
pouvant
être
ensuite
utilisés
intérieur
fonction
existe
deux
type
fonctions
fonctions
prédéfinis
PHP
dispose
nombreuses
fonctions
utilisateurs
utilisateur
crée
lui-même
fonction
prédéfinis
pouvons
donner
ici
échantillon
succinct
nombreuses
fonctions
PHP
choisi
celles
plus
fréquemment
employées
Isset
Empty
Strtoupper
Strtolower
Ucfirst
Exit
Die
Unset
renvoi
TRUE
variable
définit
sinon
FALSE
Renvoi
TRUE
variable
définit
vide
sinon
FALSE
Renvoie
chaîne
majuscules
Renvoie
chaîne
minuscules
Met
premier
caractère
majuscule
Termine
script
courant
Envoi
message
passé
argument
avant
terminer
script
Détruit
variable
fonctions
utilisateurs
fonction
peut
être
défini
importe
script
seul
fois
définir
fonction
devez
donné
nom
fonctions
déclarées
aide
instruction
function
selon
structure
suivante
Structure
définition
fonction
function
nom_fonction
arguments
{
corps
fonction
}
mot-clé
return
met
fin
fonction
voulez
fonction
renvoi
valeur
alors
placer
celle-ci
après
mot-clé
return
dernière
ligne
fonction
Exemple
php
function
charge
salaire
{
salaire
=
salaire
-
salaire/100
*
20
return
salaire
}
echo
charge
2000
//affiche
1600
pouvez
fournir
plusieurs
paramètres
séparés
virgule
Exemple
php
function
charge
salaire
TauxCharge
{
salaire
=
salaire
-
salaire/100
*
TauxCharge
return
salaire
}
salaire=2000
TauxCharge=20
echo
charge
salaire
TauxCharge
``
br
//affiche
1600
echo
salaire
//affiche
2000
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
41
Cours
initiation
PHP
Exercice
Voir
annexe
fonctions
Exercice
1
page
PHP
déclarer
deux
variable
php
affecter
valeur
prénom
nom
Créer
fonction
get_msg
chaine
couleur
renverra
chaîne
passé
paramètre
couleur
différente
passée
aussi
paramètre
sachant
rouge=
``
#
FF0000
bleu=
#
0000FF
vert=
#
00FF00
blanc=
FFFFFF
puis
générer
texte
suivant
présente
BR
m'appel
``
prénom
``
nom
nom
rouge
prénom
vert
Puis
texte
l'aide
JavaScript
Vérifier
appelant
fonction
existe
autre
méthode
passer
paramètres
fonction
implique
valeur
modifiée
intérieur
fonction
aussi
extérieur
Cela
appelle
passer
argument
référence
indiquer
PHP
voulons
utiliser
méthode
devons
ajouter
&
Commerciale
début
variable
passée
pouvez
aussi
appeler
fonctions
paramètres
passé
référence
toutefois
méthode
valable
directive
allow_call_time_pass_reference
fichier
configuration
PHP
égale
Exemple
php
function
charge
&
salaire
TauxCharge
{
salaire
=
salaire
-
salaire/100
*
TauxCharge
return
salaire
}
salaire=2000
TauxCharge=20
echo
salaire
``
br
//Salaire
avant
fonction
affiche
2000
echo
charge
salaire
TauxCharge
``
br
//affiche
1600
echo
salaire
//Salaire
aprés
fonction
affiche
1600
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
42
Cours
initiation
PHP
Portée
variables
Lorsqu
variable
crée
page
PHP
dit
durée
vie
identique
celle
page
web
lors
utilisation
variable
intérieur
fonction
durée
vie
égale
durée
vie
fonction
dire
cesse
exister
dès
fonction
termine
variables
déclarées
intérieur
fonction
dites
locales
elles
visibles
accessibles
dehors
fonction
existe
plusieurs
niveaux
définition
variable
niveau
global
permet
variable
d'être
visible
fonction
l'extérieur
fonction
niveau
static
permet
définir
variable
locale
fonction
persiste
durant
tout
temps
d'exécution
script
niveau
local
utilisé
défaut
permet
définir
variable
locale
classique
Fonction
imbriquer
pouvez
imbriquer
fonctions
unes
autres
toutefois
attention
définir
plusieurs
fois
fonction
Exemple
php
echo
``
voulons
calculer
montant
retraite
fois
charges
déduites
br
function
retraite
Total
TauxCharge
{
function
charge
salaire
TauxCharge
{
return
salaire
-
salaire/100
*
TauxCharge
}
ApresCharges
=
charge
Total
TauxCharge
return
charge
Total
TauxCharge
-
ApresCharges/100
*
3
}
Total=2000
TauxCharge=20
echo
``
Total
=
``
Total
``
BR
//affiche
Total
=
2000
echo
``
Retraite
=
``
.retraite
Total
TauxCharge
``
br
//affiche
retraite
=
1552
echo
``
ApresCharges
=
``
.charge
Total
TauxCharge
``
br
//affiche
après
charge
=
1600
//
echo
``
Retraite
=
``
.retraite
Total
TauxCharge
``
br
//affiche
erreure
voulez
accéder
variable
située
intérieur
fonction
devez
utiliser
instruction
global
cela
indique
PHP
nouvelle
variable
local
variable
global
pourra
être
utiliser
ailleurs
script
Exemple
php
function
charge
salaire
TauxCharge
{
global
salaire
salaire
=4000
salaire
-=
salaire/100
*
TauxCharge
return
salaire
}
salaire=2000
TauxCharge=20
echo
salaire
``
BR
//affiche
2000
echo
charge
salaire
TauxCharge
``
br
//affiche
3200
echo
salaire
``
BR
//affiche
3200
Exercice
Voir
annexe
fonctions
Exercice
2
Reprendre
tableau
stagiaires
annuaire_stagiaires
exercice
2
chapitre
tableaux
multidimensionnel
parcourrer
tableau
aide
boucle
puis
chaque
élément
tableau
appeler
fonction
ajoute_stagiaire
créé
Afficher
nombre
stagiaires
femmes
nombre
stagiaires
hommes
enfin
nombre
total
stagiaires
NB
Aidez-vous
fonction
eregi
occurrence
rechercher
chaine
retourne
true
occurrence
trouvée
chaîne
false
cas
contraire
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
43
Cours
initiation
PHP
Exercice
Voir
annexe
fonctions
Exercice
3
Reprendre
exercice
2
ajoutez
fonction
moyenne_parité
permette
afficher
parité
hommes/femmes
sous
forme
moyenne
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
44
Cours
initiation
PHP
inclusions
fonctions
include
require
PHP
permet
inclure
segments
code
texte
endroit
donné
page
web
pouvez
utiliser
fichiers
inclus
inclure
texte
code
HTML
scripts
PHP
façon
pourra
définir
éléments
partagés
toutes
pages
site
web
Ainsi
lorsque
voudra
modifier
entre
suffira
modifier
fichier
défini
modification
automatiquement
répercutée
tous
scripts
incluent
fichier
PHP
met
deux
instructions
disposition
inclure
fichiers
include
require
prennenet
forme
suivante
include
‘
monfichier
require
‘
monfichier
Exemple
php
include
``
test.txt
//ou
require
``
test.txt
Depuis
version
4.3
PHP
deux
instructions
identiques
hormis
gestion
erreurs
Include
produit
Alerte
warning
tandis
require
génère
erreur
fatale
d'autres
termes
n'hésitez
utiliser
require
voulez
qu'un
fichier
d'inclusion
manquant
interrompe
script
include
comporte
façon
script
continuera
exécution
existe
aussi
variante
instructions
include
require
agit
include_once
require_once
comportement
identique
hormis
exécute
fois
script
instructions
utilisée
préférence
lorsque
fichier
doit
être
inclus
évalué
plusieurs
fois
script
bien
lorsque
voulez
être
sûr
qu'il
inclus
qu'une
seule
fois
éviter
redéfinitions
fonction
Exercice
Voir
annexe
inclusions
Exercice
Créer
fichier
PHP
``
header.inc
permettra
afficher
grâce
instruction
inclusion
message
bienvenue
chaque
page
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
45
Cours
initiation
PHP
5
Formulaires
formulaire
page
contenant
texte
encapsulé
balises
HTML
peut
mettre
disposition
client
divers
éléments
tels
bouton
envoi
liste
déroulante
case
option
bouton
radio
etc…
Lorsque
client
envoi
page
HTML
serveur
celui-ci
transmet
informations
recueillis
PHP
traite
renvoi
cadre
réponse
http
navigateur
informations
regroupées
aide
deux
méthodes
méthode
``
GET
méthode
POST
balise
html
``
form
permet
créer
formulaire
possède
nombreux
attributs
occurrence
attribut
``
method
indique
PHP
méthode
utiliser
attribut
``
action
indique
serveur
page
rendre
fois
utilisateur
cliqué
bouton
envoi
Exemple
form
action=
form.php
method=
GET
directive
``
register_globals
fichier
configuration
égale
PHP
traite
informations
transmis
client
transformant
valeur
attribut
name
éléments
variable
affectant
valeur
attribut
``
value
Exemple
input
type=
text
value=
Mme
DURANT
name=
nom
/
variable
nom
créée
valeur
``
Mme
DURANT
affécté
méthode
GET
méthode
indique
navigateur
joindre
URL
valeurs
placées
utilisateur
formulaire
faire
navigateur
ajoute
point
interrogation
fin
adresse
URL
puis
paramètres
sous
forme
paires
nom=valeur
séparé
&
commerciale
Exemple
http
//localhost/coursphp/test.php
animal=chat
&
nom=minou
méthode
POST
S'il
inconvénient
l'on
peut
reprocher
méthode
``
GET
c'est
nature
publique
transmission
voulez
données
envoyées
apparaissent
l'URL
faudra
utiliser
méthode
``
POST
Celle-ci
fonctionne
presque
comme
méthode
``
GET
différence
informations
formulaire
envoyées
corps
requête
HTTP
lieu
faire
partie
l'URL
Cela
signifie
qu'elles
plus
visibles
yeux
tous
mesure
elles
plus
attachées
l'URL
méthode
``
POST
permet
également
transmission
d'un
plus
grand
nombre
données
notion
importance
car
limite
physique
quantité
données
pouvant
être
transmises
cadre
d'une
URL
Lorsque
l'utilisateur
envoi
formulaire
serveur
PHP
recueille
informations
variables
stock
tableau
sous
forme
Index/valeur
index
correspond
nom
paramètre
valeur
valeur
tableaux
``
_GET
``
HTTP_GET_VARS
stock
informations
recueillis
méthode
GET
tableaux
``
_POST
``
HTTP_POST_VARS
celles
recueillis
méthode
``
POST
Exemple
html
head
title
Exemple
formulaire
/title
link
rel=
stylesheet
href=
sga.css
type=
text/css
/
/head
body
form
action=
form_get_resultat.php
method=
GET
Merci
remplir
formulaire
br
Nom
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
input
type=
text
size=
30
maxlength=
50
name=
nom
/
br
Prénom
&
nbsp
&
nbsp
input
type=
text
size=
30
maxlength=
50
name=
prenom
/
br
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
46
Cours
initiation
PHP
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
&
nbsp
input
type=
submit
value=
Envoyer
/
/form
/body
/html
Exercice
Voir
annexe
Formulaires
Exercice
1
Créer
formulaire
comme
montre
figure
ci-dessous
aide
boucle
afficher
page
PHP
message
bienvenue
composé
éléments
saisis
utilisant
méthode
GET
puis
méthode
POST
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
47
Cours
initiation
PHP
Urlencode
Urldecode
Lorsqu
appelle
page
méthode
GET
chaîne
caractères
aboutée
URL
contenant
suite
couples
noms/valeurs
éléments
formulaire
séparés
caractères
&
suite
codée
façon
figure
aucun
espace
remplacés
+
outre
caractères
ponctuation
diacritiques
remplacés
code
ASCII
Exemple
php
prenom=Arthur-Jérémie
cours
=Anglais
transmis
l'URL
comme
ceci
prenom=Arthur-J
E9r£E9émie
&
cours
5B
5D=Anglais
Grâce
fonctions
urldecode
urlencode
peut
ainsi
transformé
chaîne
url
afin
devienne
lisible
urldecode
décode
toutes
séquences
#
#
remplace
valeur
chaîne
ainsi
décodée
retournée
urlencode
retourne
chaîne
caractères
non
alpha-numériques
hormis
-_
remplacés
séquences
commençant
caractère
pourcentage
suivi
deux
chiffres
hexadécimaux
espaces
remplacés
signes
plus
+
codage
celui
utilisé
poster
informations
formulaires
HTML
Exemple
commence
récupérer
chaîne
URL
trouve
variable
global
_SERVER
``
QUERY_STRING
applique
fonction
split
va
récupérer
occurrence
chaînes
séparées
&
tableau
puis
va
isoler
nom
valeur
façon
classique
aide
boucle
while
Exemple
php
=
split
'
&
'
_SERVER
``
QUERY_STRING
I
=
0
while
I
count
{
b
=
spilt
'=
'
i
echo
'La
valeur
paramètre
'
htmlspecialchars
urldecode
b
0
'
'
htmlspecialchars
urldecode
b
1
``
br
i++
}
Exercice
Voir
annexe
Formulaires
Exercice
2
Créer
formulaire
exemple
aide
fonction
urldecode
afficher
page
PHP
message
bienvenue
composé
éléments
saisis
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
48
Cours
initiation
PHP
Recupération
variables
allons
voir
maintenant
sous
forme
exemples
exercices
contrôles
HTML
plus
courants
manière
traiter
PHP
Comme
déjà
vu
lorsque
utilisateur
clique
bouton
``
Envoyer
transmet
serveur
http
formulaire
selon
méthode
mentionnée
attribut
``
Method
balise
``
Action
puis
PHP
interprète
code
redirige
action
page
mentionnée
attribut
``
Action
balise
``
FORM
Après
analyse
page
parser
renvoi
réponse
utilisateur
via
serveur
HTTP
Exercice
Voir
annexe
Formulaires
Exercice
3
Afin
illustrer
mécanismes
créer
formulaire
inscription
Voir
Figure
1
HTML
récupérer
autre
page
PHP
valeurs
saisies
utilisateur
utilisant
méthode
``
GET
puis
méthode
POST
créant
deux
pages
distinctes
obtient
séparation
code
HTML
constituant
éléments
interface
proposés
client
IHM
code
PHP
gèrent
règles
gestions
validations
calculs
contrôles
etc…
donne
meilleur
visibilité
facilite
maintenance
puisque
pourra
ainsi
intervenir
interface
sans
modifier
code
vis
versa
Formulaire
d'inscription
Nom
Prénom
Adresse
Courriel
Envoyer
Figure
1
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
49
Cours
initiation
PHP
contrôles
HTML
bouton
radio
bouton
radio
créent
balise
HTML
input
type=
radio
value=
checked=
checked
name=
récupérer
valeur
groupe
boutons
radio
faut
tous
boutons
radio
nom
ainsi
PHP
créera
seule
variable
pourra
avoir
seule
valeur
traitée
comme
importe
autre
variable
Exercice
Voir
annexe
Formulaires
Exercice
4
Créer
formulaire
identique
précédent
ajoutant
groupe
boutons
radio
permettant
utilisateur
choisir
civilité
comme
montre
figure
2
Formulaire
d'inscription
Madame
Mademoiselle
Monsieur
Nom
Prénom
Adresse
Courriel
Envoyer
Figure
2
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
50
Cours
initiation
PHP
case
cocher
listes
sélection
case
cocher
listes
sélection
permettent
effectuer
simultanément
plusieurs
choix
pratique
considérer
réponse
constitué
tableau
convient
attribut
``
name
éléments
``
Select
``
Input
suivis
crochets
Ainsi
PHP
transformera
variables
sous
forme
tableau
pourrons
appliquer
tous
traitements
vu
chapitre
tableaux
boucles
tris
etc
..
case
cocher
créent
balise
HTML
input
type=
checkbox
value=
Physique
name=
cours
liste
selection
créent
balise
HTML
select
name=
coursoption
MULTIPLE
option
élément
1
liste
/option
option
élément
2
liste
/option
/select
Exercice
Voir
annexe
Formulaires
Exercice
5
compléter
page
allons
ajouter
liste
case
cocher
faire
réaliser
formulaire
HTML
Voir
Figure
3
puis
récupérer
autre
page
PHP
valeurs
saisies
Formulaire
d'inscription
Madame
Mademoiselle
Monsieur
Nom
Prénom
Adresse
Courriel
Choix
cours
Principaux
Optionnels
Math
ématiques
Physique
Anglais
Espagnol
Art
plastique
Français
Envoyer
Figure
3
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
51
Cours
initiation
PHP
Exercice
Voir
annexe
Formulaires
Exercice
6
tableau
List_stagiaire=array
0=
Madame
Durant
1=
Mademoiselle
Dupré
,2=
Alain
3=
Monsieur
Camus
4=
ami
Jean-Marc
Afficher
stagiaires
issus
tableaux
liste
sélection
puis
aide
bouton
permetter
utilisateur
alimenter
seconde
liste
titulaire
comme
montre
figue
4
Liste
stagiaires
titulaires
Madame
Durant
Mademoiselle
Dupré
Alain
Monsieur
Camus
====
Figure
4
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
52
Cours
initiation
PHP
Validation
formulaires
formulaire
figure
3
permis
utilisateur
saisir
renseignements
souhaitait
puis
envoyer
lorsque
formulaire
incomplet
saisie
erronée
aucune
vérification
faîte
celui-ci
quand
envoyer
allons
demander
PHP
faire
vérifications
nécessaires
avant
afficher
page
HTML
Rappelons
peut
envoyer
serveur
aussi
bien
page
HTML
page
PHP
Exercice
Voir
annexe
Formulaires
Exercice
7
Reprendre
formulaire
figure
3
après
avoir
ajouter
champ
code
postal
champ
ville
autre
téléphone
ajoutez
fonction
page
PHP
permettra
vérifier
tous
champs
saisis
correctement
cas
fonction
renverra
TRUE
affichera
résultat
sinon
fonction
renverra
FALSE
réaffichera
page
HTML
accompagnée
message
indiquant
utilisateur
champs
incorrects
cas
réaffiche
page
HTML
correction
évitera
utilisateur
saisir
nouveau
Madame
Mademoiselle
Monsieur
Nom
Prénom
Adresse
Code
Postal
Ville
Courriel
Choix
cours
Optionnels
Principaux
Mathématiques
Physique
Anglais
Espagnol
Art
plastique
Français
Envoyer
Réinitialiser
Figure
5
informations
déjà
fournis.Formulaire
d'inscription
exemple
envoie
page
PHP
détecte
tout
abord
agit
premier
envoi
non
vérifiant
méthode
POST
GET
grâce
variable
_SERVER
'REQUEST_METHOD
'
cas
exécute
fonction
vérification
informe
toutes
saisies
correctes
non
Ainsi
selon
résultat
fonction
affichera
page
résultat
page
saisie
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
53
Cours
initiation
PHP
Htmlentites
htmlspecialchars
fonctions
jouent
rôle
important
traduction
certains
caractères
destinés
être
affichés
navigateur
première
convertit
plupart
diacritiques
autrement
dit
caractères
spéciaux
entités
caractères
équivalentes
disons
plupart
certains
caractères
tels
€
oe
traduits
seconde
convertit
caractères
sens
particulier
commandes
HTML
commercial
&
devient
&
amp
chevrons
balises
deviennent
respectivement
lt
gt
guillemet
``
devient
&
quot
second
argument
vaut
ENT_QUOTES
Exemple
php
new
=
htmlspecialchars
``
href='test
'
Test
/a
ENT_QUOTES
new
=
htmlentities
``
href='test
'
Test
/a
ENT_QUOTES
NB
utilisons
dernière
fonction
lorsque
récupère
éléments
saisis
formulaires
forte
chance
avoir
comportement
inattendu
Exercice
Voir
annexe
Formulaires
Exercice
8
Reprendre
formulaire
exercice
6
Figure
4
aide
fonction
htmlentities
htmlspecialchars
supprimez
problèmes
relatifs
saisies
balise
HTML
champs
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
54
Cours
initiation
PHP
en-têtes
HTTP
Lors
chaque
échange
protocole
HTTP
entre
navigateur
serveur
données
dîtes
d'entêtes
contenant
informations
données
envoyer
cas
d'une
requête
envoyées
cas
d'une
réponse
informations
question
généralement
page
web
image
suivent
en-têtes
en-têtes
HTTP
permettent
aussi
d'effectuer
actions
navigateur
comme
transfert
cookies
bien
redirection
vers
autre
page
en-têtes
premières
informations
envoyées
navigateur
réponse
serveur
cas
d'une
requête
elles
présentent
sous
forme
en-tête
valeur
syntaxe
doit
être
rigoureusement
respectée
c'est-à-dire
qu'aucun
espace
doit
figurer
entre
nom
l'en-tête
deux
points
espace
doit
contre
figurer
après
celui-ci
PHP
fournit
fonction
permettant
d'envoyer
très
simplement
en-têtes
HTTP
manuellement
serveur
navigateur
s'agit
alors
d'une
réponse
HTTP
syntaxe
fonction
suivante
booléen
header
chaîne
en-tête
HTTP
Etant
donnée
en-têtes
HTTP
premières
informations
envoyées
fonction
header
doit
être
utilisée
avant
tout
envoi
données
HTML
navigateur
script
contient
doit
être
placé
avant
balise
HTML
avant
toute
fonction
echo
print
printf
Voici
quelques
utilisations
possibles
fonction
header
Exemple
rediriger
navigateur
vers
nouvelle
page
PHP
header
``
location
http
//www.commentcamarche.net/
Exemple
envoyer
navigateur
image
créé
volée
faire
compteur
statistiques
bien
histogramme
dynamique
exemple
php
header
``
Content-Type
image/gif
//
code
générant
l'image
imagegif
image
//
envoi
l'image
navigateur
Récupérer
en-têtes
requête
Alors
fonction
header
permet
d'envoyer
en-têtes
HTTP
navigateur
PHP
fournit
seconde
fonction
permettant
récupérer
tableau
l'ensemble
en-têtes
HTTP
envoyées
navigateur
Voici
syntaxe
fonction
Tableau
getallheaders
tableau
retourné
fonction
contient
en-têtes
indexés
nom
Voici
script
permettant
exemple
récupérer
en-têtes
particuliers
Exemple
php
entetes
=
getallheaders
echo
entetes
``
location
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
55
Cours
initiation
PHP
6
Base
données
Pourquoi
utiliser
base
données
stocker
informations
plus
avantageux
utiliser
base
données
relationnelle
fichier
brut
effet
RBDMS
Relational
Database
Management
Systems
présentent
atouts
suivants
permettent
accéder
données
plus
rapidement
fichiers
bruts
pouvez
interroger
très
facilement
récupérer
ensembles
données
répondant
certains
critères
possèdent
mécanismes
intégrés
permettant
gérer
accès
simultanés
programmeur
besoin
occuper
permettent
accéder
aléatoirement
données
possèdent
systèmes
privilèges
intégrés
utilisation
base
données
relationnelle
permet
répondre
rapidement
simplement
questions
aideront
améliorer
site
Architecture
externe
base
données
web
étapes
suivantes
donnent
cheminement
transaction
base
données
Web
typique
navigateur
Web
utilisateur
envoie
requête
http
page
Web
particulière
serveur
reçoit
requête
récupère
fichier
.php
passe
moteur
PHP
afin
traité
moteur
PHP
commence
analyser
script
intérieur
script
trouve
commande
permettant
connecter
base
données
exécuter
requête
PHP
ouvre
connexion
vers
serveur
base
données
transmet
requête
appropriée
serveur
base
données
reçoit
requête
base
données
traite
puis
renvoie
résultats
moteur
PHP
moteur
PHP
termine
exécution
script
consiste
généralement
formatage
résultats
requête
HTML
envoie
ensuite
fichier
HTML
obtenu
serveur
Web
serveur
Web
transmet
page
HTML
navigateur
utilisateur
puisse
voir
résultat
6.1
Accès
bases
données
Support
PHP
connexion
bases
données
PHP
prend
charge
API
donnent
accès
grand
nombre
bases
données
comme
Oracle
Sybase
PostgreSQL
MySQL
etc
Toutefois
programmes
PHP
peuvent
toutes
utiliser
accéder
directement
données
ODBC
Open
DataBase
Connectivity
middle
ware
connexion
API
Application
Programming
Interface
standard
permettant
accéder
base
données
prise
charge
PHP
écrire
applications
bases
données
génériques
est-à-dire
code
application
fonctionne
toutes
bases
données
prenant
charge
norme
ODBC
Rudiments
langage
SQL
SQL
Strutured
Query
Language
langage
programmation
standard
permettant
accéder
manipuler
informations
base
données
relationnelle
norme
ANSI
ISO
acceptée
plupart
bases
données
relationnelles
Requêtes
définition
données
instructions
SQL
permettent
modifier
schéma
base
données
créant
modifiant
objets
dernière
CREATE
permet
créer
base
données
table
base
données
existante
DROP
permet
détruire
base
données
table
base
données
Instructions
manipulation
données
instructions
SQL
permettent
modifier
contenu
base
données
INSERT
permet
compléter
lignes
table
base
données
REPLACE
permet
remplacer
ancien
enregistrement
nouveau
instruction
spécifique
base
MySQL
UPDATE
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
56
Cours
initiation
PHP
permet
modifier
plusieurs
colonnes
enregistrement
DELETE
permet
supprimer
table
plusieurs
enregistrements
correspondant
condition
particulière
Instruction
recherche
SELECT
permet
effectuer
recherches
bases
données
MySQL
partir
applications
web
PhpMyadmin
EasyPHP
livré
outil
``
PhpMyadmin
permet
effectuer
toutes
opérations
base
donnée
Mysql
manière
graphique
gros
avantages
outil
i
met
disposition
syntax
SQL
modifiée
PHP
lors
opérations
effectué
allons
étudier
base
donnée
``
formation
gérant
stagiaires
centre
formation
selon
modèle
ci-dessous
Après
avoir
installer
base
données
``
formation
aide
PhpMyadmin
allons
voir
quelques
éléments
language
SQL
comment
servir
base
PHP
Installer
base
formation
deux
manières
installer
base
formation
aide
PhpMyadmin
via
PHP
PhpMyadmin
Lancer
PhpMyadmin
clique
droit
icône
EasyPHP
puis
configuration
enfin
PhpMyadmin
Importer
fichier
SQL
création
base
Stagiaires
formation.sql
cliquant
icône
``
sql
fenêtre
gauche
puis
``
importe
fichiers
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
57
Cours
initiation
PHP
PHP
fichier
create_base.php
contient
toutes
commandes
créer
base
Ainsi
pourra
créer
base
appelant
script
url
http
//127.0.0.1/coursphp/exercice/create_base.php
Exemple
étudirons
détails
instruction
chapitre
suivant
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
58
Cours
initiation
PHP
6.2
Base
données
MySQL
MySQL
serveur
bases
données
réduit
compact
convivial
disponible
platesformes
UNIX
Windows
NT
2000
Windows
95/98
inutile
déclarer
quoi
utiliser
Mysql
PHP4
puisque
PHP4
supporte
nativement
base
données
PHP5
SqlLite
pris
relais
faut
charger
module
Mysql
Chargement
module
MySql
PHP5
Modifier
fichier
configuration
``
php.ini
section
Extensions
ajouter
ligne
suivante
extension=php_mysql.dll
oubliez
redémarrer
serveur
http
modifications
prises
compte
Accès
base
données
MySQL
partir
Web
PHP
tous
scripts
utilisés
accéder
base
données
partir
Web
faut
respecter
étapes
suivantes
établir
connexion
vers
base
données
appropriée
envoyer
requête
vers
base
données
récupérer
traiter
résultat
présenter
utilisateur
fermer
connexion
Etablir
connexion
fonction
mysql_connect
permet
établir
connexion
int
mysql_connect
string
nom_serveur
string
nom_utilisateur
string
mot_passe
Tous
arguments
optionnels
précisés
fonction
servira
valeurs
défaut
localhost
hôte
nom
utilisateur
sous
lequel
PHP
exécuté
aucun
mot
passe
fonction
renvoie
identificateur
lien
vers
base
données
MySQL
réutilisé
suite
cas
succès
false
cas
échec
Exemple
php
db
=
mysql_connect
``
localhost
``
root
``
//
l'identificateur
lien
enregistré
db
manière
fonction
mysql_pconnect
permet
établir
connexion
renvoie
connexion
persistante
vers
base
données
alors
connexion
normale
fermée
lorsque
exécution
script
terminée
Exercice
Voir
annexe
Etablir
connexion
Exercice
1
Créer
fichier
PHP
permettant
ouvrir
unr
connection
MySql
comme
paramètres
Nom
utilisateur
``
stagiaire
Mot
passe
``
stagiaire
Choisir
base
données
existante
fonction
mysql_select_db
permet
sélectionner
base
données
existante
int
mysql_select_db
string
nom_base
int
identificateur_connexion
argument
identificateur_connexion
spécifiant
lien
vers
base
données
optionnel
défaut
dernier
lien
ouvert
utilisé
aucun
lien
ouvert
lien
défaut
ouvert
comme
appelé
mysql_connect
Exercice
Voir
Choisir
base
données
existante
Exercice
1
Créer
fichier
PHP
permettant
établir
connexion
base
formation.
comme
paramètres
Nom
utilisateur
``
stagiaire
Mot
passe
``
stagiaire
Exercice
Voir
Choisir
base
données
existante
Exercice
2
Créer
fichier
``
connect.inc
servira
autant
besoin
sous
forme
fichier
inclus
connecter
base
formation
paramètres
connections
identiques
exercices
précédents
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
59
Cours
initiation
PHP
Déconnexion
base
données
fonction
mysql_close
permet
déconnecter
base
données
boolean
mysql_close
mixed
identificateur_connexion
Attention
connexion
persistante
fonction
mysql_close
permet
fermer
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
60
Cours
initiation
PHP
Envoyer
requête
vers
base
données
fonction
mysql_query
permet
envoyer
requête
base
données
requête
voulez
exécuter
peut
être
configurée
avant
appel
fonction
fonction
Structure
requête
SQL
query
=
“
…
requête
SQL
…
”
resultat
=
mysql_query
query
identificateur_connexion
resultat
=
mysql_query
=
“
…
requête
SQL
…
”
identificateur_connexion
fonction
mysql_db_query
pouvez
aussi
appeler
fonction
mysql_db_query
permet
spécifier
base
données
souhaitez
interroger
mixed
mysql_db_query
string
nom_base
string
requete
mixed
identificateur_connexion
cas
succès
deux
fonctions
renvoient
•
cas
requête
interrogation
identificateur
résultat
permet
récupérer
résultats
requêtes
•
cas
autres
requêtes
1
cas
échec
elles
renvoient
false
identificateur
résultat
sert
clé
accéder
zéro
plusieurs
lignes
renvoyées
requête
Plusieurs
fonctions
permettent
récupérer
résultats
partir
identificateur
Exercice
Voir
annexe
Envoyer
requête
vers
base
données
exercice
1
Créer
page
PHP
aide
fichier
connect.inc
permettra
exécuter
requête
interrogeant
table
stagiaires
PHP
dispose
plusieurs
fonctions
permettant
récupérer
valeurs
table
fonctions
récupèrent
noms
champs
valeur
stocks
variable
tableau
passée
paramètre
Mysql_fetch_array
array
mysql_fetch_array
resource
result_identifier
int
result_type
Retourne
ligne
résultat
sous
forme
d'un
tableau
associatif
version
étendue
mysql_fetch_row
plus
d'enregistrer
données
sous
forme
d'un
tableau
indice
numérique
peut
aussi
enregistrer
tableau
associatif
utilisant
noms
champs
comme
indices
Autrement
dit
pouvez
récupérer
valeurs
indiquant
indice
numérique
nom
champ
table
Exemple
PHP
resultat
=
mysql_query
``
select
*
from
personne
conn
while
row
=
mysql_fetch_array
resultat
{
echo
``
br
row
``
num_personne
``
echo
row
``
nom
``
echo
row
``
prenom
br
}
mysql_fetch_row
array
mysql_fetch_row
resource
result_identifier
retourne
tableau
énuméré
correspond
ligne
demandée
FALSE
s'il
reste
plus
ligne
pouvez
récupérer
valeurs
indice
numérique
Exemple
PHP
resultat
=
mysql_query
``
select
*
from
personne
conn
while
row
=
mysql_fetch_array
resultat
{
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
61
Cours
initiation
PHP
echo
``
br
row
0
``
echo
row
1
``
echo
row
2
br
}
mysql_fetch_assoc
array
mysql_fetch_assoc
resource
result_identifier
retourne
tableau
associatif
contient
ligne
lue
bien
FALSE
reste
plus
lignes
besoin
d'indices
numériques
préférez
mysql_fetch_array
Autrement
dit
fait
indice
numériques
plusieurs
colonnes
portent
nom
dernière
priorité
autres
récupérées
Exemple
PHP
resultat
=
mysql_query
``
select
*
from
personne
conn
while
row
=
mysql_fetch_assoc
resultat
{
echo
``
br
row
``
num_personne
``
echo
row
``
nom
``
echo
row
``
prenom
br
}
Bien
trois
fonctions
valides
utiliserons
autant
faire
peut
fonction
mysql_fetch_array
apporte
confort
utilisation
sans
autant
être
moins
performante
autres
mysql_free_result
int
mysql_free_result
resource
result_identifier
mysql_free_result
efface
résultat
mémoire
fonction
n'est
appeler
peur
d'utiliser
trop
mémoire
durant
l'exécution
script
Toute
mémoire
associée
l'identifiant
résultat
automatiquement
libérée
sans
oublier
toutes
traitements
terminent
fin
script
Exercice
Voir
annexe
Envoyer
requête
vers
base
données
exercice
2
Créer
page
affichant
listes
stagiaires
adresse
dessous
interrogeant
table
stagiaire
base
formation
utilisant
fonction
mysql_fetch_array
mysql_fetch_row
puis
mysql_fetch_assoc
Exercice
Voir
annexe
Envoyer
requête
vers
base
données
exercice
3
Créer
page
affichant
listes
stagiaires
adresse
dessous
interrogeant
table
stagiaire
base
formation
utilisant
mysql_fetch_array
présenter
resultat
sous
forme
tableau
HTML
balise
table
etc…
comme
montre
figure
ci-dessous
Figure
6
Liste
stagiaires
N°
stagiaire
N°
Téléphone
Nom
prénom
Adresse
Code
Postal
1
Madame
DURANT
21
rue
Georges
Brassens
94000
Creteil
01
42
44
12
30
2
Mademoiselle
Dupré
54
rue
Jacques
Brel
75000
PARIS
01
14
42
32
40
3
Père
Alain
13
rue
Saint
pères
93000
Saint-Denis
01
52
64
72
80
4
Monsieur
Camus
Albert
79
rue
scribe
92160
Antony
5
Madame
Leblanc
Jea
n-
rue
blanc
Marc
manteaux
91000
Montfermeil
01
02
14
22
40
Ville
01
62
73
82
90
Figure
6
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
62
Cours
initiation
PHP
Exercice
Voir
annexe
Envoyer
requête
vers
base
données
exercice
4
Reprendre
formulaire
exercice
7
paragraphe
``
Formulaires
remplacer
contrôles
checkbox
cours
principaux
aide
informations
recueillis
table
cours
base
formation
puis
alimenter
liste
sélection
cours
optionnels
partir
table
Etapes
construction
Création
fichier
``
``
C'est
page
HTML
chargé
uniquement
d'afficher
champs
saisie
sous
forme
tableau
HTML
voire
figure
5
Création
fichier
``
``
Chargé
vérifie
méthode
POST
utiliser
oui
vérifie
validité
formulaire
affiche
resultat
Création
fichier
``
``
Effectue
contrôles
saisie
formulaire
inscription
PHP
Création
fichier
``
chk_stagiaires.inc
Création
contrôles
checkbox
partir
données
base
Création
fichier
``
lst_stagiaires.inc
Alimentation
liste
sélection
cours
optionnels
partir
données
base
Création
fichier
``
``
Construit
met
forme
page
résultat
selon
informations
issues
base
données
saisi
utilisateur
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
63
Cours
initiation
PHP
Rechercher
données
base
commande
SQL
``
SELECT
comporte
trois
clause
vont
servir
rechercher
ordonner
données
clause
``
WHERE
clause
``
ORER
BY
clause
``
LIMIT
clause
``
WHERE
Ajoute
condition
exprime
comparaison
entre
contenu
champ
constante
variable
condition
peut
être
associée
opérateur
AND
OR
peut
inverser
condition
opérateur
NOT
indiquer
différence
choix
entre
opérateur
habituel
``
=
opérateur
``
mot
clé
LIKE
recherche
correspondance
floue
chaîne
caractères
Complété
deux
caractère
``
_
``
autorise
différente
combinaisons
Exemple
php
Sql=
SELECT
*
from
livres
where
auteur
=
'Leon
'
//recherche
livres
nom
l'auteur
égal
``
Leon
//et
trouvera
tous
livres
écrits
l'auteur
Leon
Sql=
SELECT
*
from
livres
where
auteur
=
'
Leon
'
//recherche
livres
nom
l'auteur
commence
``
Leon
//et
trouvera
tous
livres
écrits
l'auteur
``
Dona
Leon
Sql=
SELECT
*
from
livres
where
auteur
=
'
'
//recherche
livres
nom
l'auteur
contient
``
Leon
//et
trouvera
tous
livres
écrits
auteurs
``
Dona
Leon
//
Edward
Marston
Sql=
SELECT
*
from
livres
where
auteur
=
'_o
'
//recherche
livres
titre
deuxième
lettre
//égal
``
o
//et
trouvera
tous
titres
``
Poésies
``
Noblesse
oblige
clause
``
ORER
BY
spécifie
nom
champ
lequel
portera
tri
résultat
mots
clés
``
ASC
``
DESC
précisent
respectivement
ordre
croissant
décroissant
défaut
tri
lieu
ordre
croissant
Exemple
php
Sql=
SELECT
*
from
livres
ORDER
BY
auteur
desc
//Affiche
tous
livres
l'ordre
décroissant
clause
``
LIMIT
clause
indique
limites
exprimées
numéros
ligne
enregistrements
traiter
figure
seule
valeur
cela
signifie
table
traitée
partir
valeur
indiquée
deux
limites
séparées
virgule
table
traitée
entre
valeurs
indiquées
bornes
comprises
Exemple
php
Sql=
SELECT
*
from
livres
LIMIT
3,7
vu
paragraphe
``
Envoyer
requête
vers
base
données
comment
interroger
base
données
vu
comment
commande
SQL
compose
allons
manipuler
chaînes
caractères
issues
éléments
saisies
l'utilisateur
construire
clauses
``
where
``
order
by
limit
après
avoir
ajoutés
suite
requête
SQL
l'enverrons
serveur
Exemple
PHP
Sql=
SELECT
*
from
livres
where
auteur
=
'Leon
'
ORDER
BY
auteur
DESC
LIMIT
3,7
//Recherche
5
premier
livres
nom
l'auteur
égal
//
Leon
affiche
l'audre
alphabétique
décroissant
auteurs
Exercice
Voir
annexe
Rechercher
données
base
exercice
1
Reproduire
formulaire
ci-dessous
Figure
7
construir
requête
SQL
afin
d'interroger
table
stagiaires
afficher
résultat
autre
page
Figure
8
Etapes
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
64
Cours
initiation
PHP
Création
fichier
``
Recherche.php
Chargé
vérifie
méthode
POST
utiliser
oui
vérifie
validité
formulaire
appelle
page
construit
requête
SQL
non
affiche
critères
recherche
Création
fichier
``
Recherche.htm
Voir
Figure
7
C'est
page
HTML
chargé
uniquement
d'afficher
critères
recherche
d'indiquer
formulaire
appeler
après
avoir
cliquer
``
lancer
recherche
Création
fichier
``
Construction_Where.inc
page
récupère
éléments
saisies
l'utilisateur
construit
requête
SQL
puis
elles
appel
page
resultat
Création
fichier
``
Resultat.inc
Interroge
base
données
construit
balise
données
necessaire
l'affichage
résultat
Création
fichier
``
Resultat.htm
Figure
8
Met
page
affiche
résultat
sous
forme
tableau
HTML
Ainsi
construit
pourra
modifier
clause
``
where
sans
avoir
besoin
modifier
page
résultat
vis
versa
Formulaire
recherche
recherche
s'effectue
3
critères
nom
prénom
code
postal
champ
``
nom
doit
obligatoirement
être
rempli
moins
partiellement
autres
champs
facultatifs
résultat
apparaît
sous
forme
d'une
liste
Nom
Contient
Prénom
Contient
Code
Postal
Figure
7
Résultat
recherche
N°
Nom
Prénom
1
DURANT
2
Dupré
3
Alain
4
Camus
Albert
5
Leblanc
Jean-Marc
Adresse
Téléphone
Mél
21
rue
Georges
Brassens
94000
Creteil
54
rue
Jacques
Brel
75000
PARIS
13
rue
Saint
p
93000
Saint-Denis
79
rue
scribe
92160
Antony
rue
blanc
manteaux
91000
Montfermeil
01
42
44
12
30
durant
free.fr
01
14
42
32
40
dupre
wanadoo.fr
01
52
64
72
80
alain
htomail.com
01
62
73
82
90
camus
noos.fr
01
02
14
22
40
jeanmarc.leblanc
free.fr
Figure
8
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
65
Cours
initiation
PHP
Naviguer
données
base
naviguer
données
base
servirons
clause
``
LIMIT
premier
paramètre
clause
permet
indiquer
ligne
débutera
recherche
second
nombre
enregistrements
afficher
chaque
page
Ainsi
première
page
affichera
5
premiers
enregistrements
rappellant
page
5
suivants
ainsi
suite
jusqu
'
fin
résultat
recherche
Exercice
Voir
annexe
Naviguer
données
base
exercice
Reproduire
formulaires
ci-dessous
Figure11
construir
requête
SQL
afin
d'interroger
table
stagiaires
afficher
résultat
autre
page
limitant
l'affichage
2
enregistrements
permetter
l'utilisateur
naviguer
résultat
page
résultat
utilisateur
pourra
cliquant
nom
stagiaire
double
cliquant
ligne
consulter
fiche
cours
suivis
stagiaire
Fiche
renseignements
formulaire
réaliser
utilisant
uniquement
méthode
POST
Etapes
Création
fichier
``
recherche_post.php
Chargé
vérifie
méthode
POST
utiliser
oui
vérifie
validité
formulaire
appelle
page
construit
requête
SQL
non
affiche
critères
recherche
Création
fichier
``
rech_validation.inc
Effectue
contrôles
saisie
formulaire
recherche
Création
fichier
``
recherche_post.htm
C'est
page
HTML
chargé
uniquement
d'afficher
champs
saisie
critères
recherche
sous
forme
tableau
HTML
voire
figure
11
Création
fichier
``
resultat_post.htm
C'est
page
HTML
chargé
uniquement
d'afficher
résultat
requête
sous
forme
tableau
HTML
voire
figure
12
Création
fichier
``
Construction_post_Where.inc
page
récupère
éléments
saisis
l'utilisateur
construit
requête
SQL
puis
elles
appel
page
Construction_post_Limit.inc
Création
fichier
``
Construction_post_Limit.inc
page
construit
clause
limit
appel
page
resultat_post.inc
Création
fichier
``
resultat_post.inc
page
interroge
base
données
l'aide
clauses
``
where
``
limit
créées
précédement
vérifie
formate
données
tableau
html
puis
appel
page
resultat_post_html
Création
fichier
``
navigation_post.inc
page
incluse
fichier
resultat_post_html
servira
afficher
barre
navigation
enfin
création
fichier
``
navigation.js
fichier
écrit
javascript
aidera
naviguer
table
incrémentant
n°
page
réalité
n'avons
besoin
créer
autant
fichiers
pourrions
bien
entendu
regrouper
type
afin
bien
comprendre
chaque
étapes
décomposé
fichier
Ainsi
construit
pourra
modifier
clause
``
where
``
limit
sans
avoir
besoin
modifier
page
résultat
vis
versa
Formulaire
recherche
recherche
s'effectue
3
critères
nom
prénom
code
postal
champ
``
nom
doit
obligatoirement
être
rempli
moins
partiellement
autres
champs
facultatifs
résultat
apparaît
sous
forme
d'une
liste
fiche
cours
suivis
stagiaire
recherchée
accessible
cliquant
nom
double
cliquant
ligne
correspondante
Nom
Contient
Prénom
Contient
Code
Postal
Figure
11
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
66
Cours
initiation
PHP
Résultat
recherche
N°
Nom
Prénom
1
DURANT
2
Dupré
3
Alain
4
Camus
Albert
5
Leblanc
Jean-Marc
Première
page
Adresse
Téléphone
Mél
21
rue
Georges
Brassens
94000
Creteil
54
rue
Jacques
Brel
75000
PARIS
13
rue
Saint
p
93000
Saint-Denis
79
rue
scribe
92160
Antony
rue
blanc
manteaux
91000
Montfermeil
01
42
44
12
30
durant
free.fr
01
14
42
32
40
dupre
wanadoo.fr
01
52
64
72
80
alain
htomail.com
01
62
73
82
90
camus
noos.fr
01
02
14
22
40
jeanmarc.leblanc
free.fr
Page
Précedente
Page
suivante
//3
Dernière
page
Figure
12
Fiche
renseignements
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
67
Cours
initiation
PHP
Insérer
données
base
INSERT
instruction
SQL
permet
ajouter
lignes
données
enregistrements
table
base
données
Exemple
php
Sql=
insert
into
livres
Num
auteur
date
value
'
1
'
'Dona
Leon
'
'2005
'
Exercice
Voir
annexe
Insérer
données
base
données
Reprendre
formulaire
d'inscription
Figure
5
lorsque
utilisateur
envoi
page
insérer
données
base
addslashes
stripslashes
Lors
opérations
insertion
modification
sélection
données
base
certains
caractères
doivent
faire
objet
traitement
particulier
afin
être
reconnu
correctement
fonction
addslashes
après
avoir
échappé
tous
caractères
doivent
l'être
retourne
chaîne
caractère
pouvant
être
utilisé
requête
base
données
caractères
guillemets
simples
'
guillemets
doubles
``
anti-slash
\
NUL
caractère
NULL
stripslashes
retourne
chaîne
anti-slash
supprimé
doubles
anti-slash
réduits
seul
anti-slash
stripslashes
fonction
inverse
addslashes
Exercice
Voir
annexe
Insérer
données
base
données
Exercice
2
Reprendre
formulaire
inscription
exercice
précédent
ajouter
fonctions
addslashes
stripslashes
puis
vérifier
insérant
adresse
comportant
apostrophe
Modifier
données
base
UPDATE
instruction
SQL
permet
modifier
plusieurs
colonnes
enregistrement
Exemple
php
Sql=
update
livres
SET
Num
=
1
auteur
=
'Dona
Leon
'
Exercice
6
Voir
annexe
Modifier
données
base
Reprendre
formulaire
d'inscription
ajouter
bouton
modifier
permettra
l'utilisateur
modifier
données
base
comme
montre
figue
ci-dessous
Etape
construction
formulaire
Création
fichier
``
db_modification.html
HTML
C'est
page
HTML
chargé
uniquement
d'afficher
champs
saisie
sous
forme
tableau
HTML
voire
figure
5
Création
fichier
``
validation1.inc
Effectue
contrôles
saisie
formulaire
inscription
serveur
PHP
Création
fichier
``
db_validation.js
Effectue
contrôles
saisie
formulaire
incription
client
JavaScript
Création
fichier
``
db_modification.php
Chargé
vérifie
méthode
POST
utiliser
oui
vérifie
validité
formulaire
appel
action
choisi
utilisateur
Création
fichier
``
Connection.inc
Ouvre
connection
base
données
Création
fichier
``
charge_stagiaire.inc
Interroge
base
récupère
données
Création
fichier
``
get_msg.inc
Fonction
mise
forme
messages
erreurs
personalisés
Création
fichier
``
verif_mail.inc
Fonction
contrôl
validité
adresse
mèl
Création
fichier
``
db_update_stagiaire.inc
Met
jour
base
données
éléments
saisis
utilisateur
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
68
Cours
initiation
PHP
Fiche
d'inscription
N°
Stagiaire
1
Madame
Nom
Mademoiselle
Monsieur
DURANT
Prénom
21
rue
Georges
Brassens
Adresse
Code
Postal
94000
Télépho
01
42
44
12
30
Courriel
durant
free.fr
Ville
Creteil
Choix
cours
Principaux
Optionnels
Mathém
atique
Physique
Anglais
Espagno
Art
plastique
Français
Ajouter
Modifier
Annuler
Figure
9
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
69
Cours
initiation
PHP
Supprimer
données
base
DELETE
instruction
SQL
permet
supprimer
d'une
table
plusieurs
enregistrements
correspondant
condition
particulière
php
Sql
=
``
DELETE
FROM
livres
WHERE
num=1
Attention
Lors
suppression
d'enregistrements
vérifier
précaution
condition
suppression
bien
prise
compte
sinon
risquez
d'effacer
tous
enregistrements
Exercice
Voir
annexe
Supprimer
données
base
Reprendre
formulaire
l'exemple
ci-dessous
permettez
l'utilisateur
supprimer
données
base
Fiche
d'inscription
N°
Stagiaire
1
Madame
Mademoiselle
Monsieur
DURANT
Nom
Prénom
21
rue
Georges
Brassens
Adresse
Code
Postal
94000
Téléphone
01
42
44
12
30
Courriel
durant
free.fr
Ville
Creteil
Choix
cours
Principaux
Optionnels
Mathématique
Physique
Anglais
Espagnol
Art
plastique
Français
Ajouter
Modifier
Supprimer
Annuler
Figure
10
dates
heures
PHP
dispose
fonctions
permettent
manipuler
date
l'heure
serveur
exécute
PHP
pouvez
utiliser
fonctions
formater
date
l'heure
nombreuses
façons
fonction
mktime
int
mktime
int
hour
int
minute
int
second
int
month
int
day
int
year
int
is_dst
mktime
retourne
timestamp
UNIX
correspondant
arguments
fournis
timestamp
entier
long
contenant
nombre
secondes
entre
début
l'époque
UNIX
1er
Janvier
1970
00:00:00
GMT
temps
spécifié
arguments
peuvent
être
omis
droite
gauche
tous
arguments
manquants
utilisés
valeur
courante
l'heure
jour
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
70
Cours
initiation
PHP
fonction
mktime
pratique
faire
calculs
dates
validations
car
va
automatiquement
corriger
valeurs
invalides
Exemple
php
jours
=
'29
'
mois
=
'12
'
annee=
'2005
'
echo
mktime
0,0,0
mois
jours
annee
//Affiche
1135810800
fonction
date
string
date
string
format
int
timestamp
fonction
date
prend
deux
paramètres
premier
paramètre
chaîne
spécifiant
code
format
second
optionnel
horodatage
Unix
absence
second
paramètre
fonction
date
traite
date
heure
courante
renvoie
chaîne
formatée
représentant
date
appropriée
Exemple
php
//Date
anglais
echo
date
``
jS
F
//affiche
22nd
May
2005
//Date
français
echo
date
'd/m/Y
'
//affiche
22/05/2005
//Date
fournie
mktime
français
jours
=
'29
'
mois=
'12
'
annee=
'2005
'
echo
date
'd/m/Y
'
mktime
0,0,0
mois
jours
annee
//Affiche
29/12/2005
tableau
suivant
donne
codes
format
reconnus
fonction
date
Code
B
F
g
G
h
H
Description
Matin
après-midi
représenté
sous
forme
deux
caractères
minuscules
respectivement
“
am
”
“
pm
”
Matin
après-midi
représenté
sous
forme
deux
caractères
majuscules
respectivement
“
AM
”
“
PM
”
Heure
Internet
Swtach
constitue
système
temps
universel
Jour
mois
sous
forme
nombre
deux
chiffres
éventuellement
préfixé
zéro
plage
autorisée
étend
“
01
”
“
31
”
Jour
semaine
anglais
format
textuel
abrégé
trois
lettres
exemple
“
Fri
”
Vendredi
Mois
année
anglais
format
textuel
version
longue
plage
autorisée
va
“
January
”
“
December
”
Heure
jour
exprimée
système
12
h
sans
zéro
initial
plage
autorisée
étend
“
1
”
“
12
”
Heure
jour
exprimée
système
24
h
sans
zéro
initial
plage
autorisée
étend
“
0
”
“
23
”
Heure
jour
exprimée
système
12
h
nécessaire
préfixe
zéro
plage
autorisée
étend
“
01
”
“
12
”
Heure
jour
exprimée
système
24
h
nécessaire
préfixe
zéro
plage
autorisée
étend
“
00
”
“
23
”
i
Minutes
nécessaire
préfixée
zéro
plage
autorisée
étend
“
00
”
“
59
”
I
‘
i
majuscule
Spécifie
système
horaire
courant
celui
heure
hiver
heure
sous
forme
valeur
booléenne
“
1
”
heure
hiver
activée
sinon
“
0
”
Jour
mois
format
numérique
sans
zéro
préfixe
page
autorisée
étend
“
1
”
“
31
”
Jour
semaine
anglais
format
textuel
version
longue
plage
autorisée
étend
“
Monday
”
“
Sunday
”
Indique
année
bissextile
valeur
booléenne
“
1
”
cas
année
bissextile
“
0
”
années
non
bissextiles
Mois
année
sous
forme
nombre
deux
chiffres
éventuellement
préfixé
zéro
plage
autorisée
étend
“
01
”
“
12
”
Mois
année
anglais
format
textuel
abrégé
trois
lettres
plage
autorisée
étend
“
Jan
”
“
Dec
”
‘
minuscule
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
71
Cours
initiation
PHP
Mois
année
sous
forme
nombre
sans
zéro
préfixe
plage
autorisée
étend
“
1
”
“
12
”
Secondes
nécessaire
zéro
préfixe
plage
autorisée
étend
“
00
”
“
59
”
Suffixe
ordinal
dates
anglais
deux
lettres
suffixe
peut
être
“
st
”
“
nd
”
“
rd
”
“
th
”
selon
nombre
précède
Nombre
total
jours
mois
donné
plage
autorisée
étend
“
28
”
“
31
”
Fuseau
horaire
serveur
sous
forme
trois
lettres
exemple
“
MET
”
Nombre
total
secondes
écoulées
depuis
1er
janvier
1970
jusqu'au
moment
considéré
Jour
semaine
sous
forme
seule
chiffre
plage
autorisée
étend
“
0
”
dimanche
“
6
”
samedi
U
w
Année
sous
format
2
chiffres
exemple
“
00
”
Année
sous
format
4
chiffres
exemple
“
2001
”
z
Jour
année
sous
forme
nombre
plage
autorisée
étend
“
0
”
“
365
”
Z
Décalage
horaire
secondes
plage
autorisée
étend
“
-43200
”
“
43200
”
fonction
getdate
array
getdate
int
timestamp
getdate
retourne
tableau
associatif
contenant
informations
date
d'heure
timestamp
timestamp
lorsqu'il
fourni
sinon
timestamp
date/heure
courante
champs
suivants
Tableau
1
Nom
clés
tableau
associatif
retourné
Clé
Description
seconds
Représentation
numérique
secondes
Exemple
valeur
retournée
0
59
minutes
Représentation
numérique
minutes
0
59
hours
Représentation
numérique
heures
0
23
mday
Représentation
numérique
jour
mois
courant
1
31
wday
Représentation
numérique
jour
semaine
courante
0
Dimanche
6
Samedi
Représentation
numérique
mois
1
12
year
Année
4
chiffres
Exemples
1999
2003
yday
Représentation
numérique
jour
l'année
0
365
weekday
Version
texte
jour
semaine
Sunday
Saturday
month
Version
texte
mois
comme
January
March
0
Nombre
secondes
depuis
l'époque
Unix
similaire
valeur
retournée
Dépend
système
typiquement
fonction
time
utilisée
date
2147483648
2147483647
January
December
Exemple
php
jours
=
'29
'
mois
=
'12
'
annee='2005
'
MaDate
=
getdate
mktime
0,0,0
mois
jours
annee
foreach
MaDate
key=
value
{
echo
``
key
value
br
}
echo
MaDate
'mday
'
/
MaDate
'mon
'
``
/
MaDate
'year
'
//Affiche
29/12/2005
fonction
checkdate
int
checkdate
int
month
int
day
int
year
checkdate
retourne
TRUE
date
représentée
jour
day
mois
month
l'année
year
valide
sinon
FALSE
Notez
bien
l'ordre
arguments
n'est
l'ordre
français
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
72
Cours
initiation
PHP
Conversion
entre
formats
date
PHP
formats
date
MySQL
MySQL
comme
autres
base
données
dispose
plusieurs
fonction
SQL
permettent
traiter
dates
voici
quelques
unes
curdate
renvoi
date
sous
forme
2001-05-25
SELECT
curdate
FROM
tablename
curtime
renvoi
heure
sous
forme
12
:10
:53
SELECT
curtime
FROM
tablename
now
renvoi
date
heure
sous
forme
2001-05-25
12
:10
:53
SELECT
now
FROM
tablename
MySQL
exige
dates
entrées
sous
forme
anné
mois
jour
Exemple
29
août
2000
doit
être
saisi
sous
forme
2000–08–29
00–08–29
conversions
format
nécessaires
lorsque
dates
doivent
être
échangées
entre
PHP
MySQL
Lorsque
dates
doivent
être
communiquées
PHP
vers
MySQL
fonction
date
permet
facilement
obtenir
format
approprié
faut
utiliser
formats
jour
mois
lesquels
zéros
placés
préfixe
manière
éviter
confusions
niveau
MySQL
MySQL
commande
SQL
DATE_FORMAT
permet
formater
dates
semblable
fonction
date
PHP
utilise
codes
format
différents
conversion
plus
courante
consiste
exprimer
date
sous
format
MM
–
JJ
–
AAAA
plutôt
sous
format
AAAA
–
MM
–
JJ
vigueur
MySQL
conversion
effectue
moyen
requête
suivante
SELECT
DATE_FORMAT
date_column
'
'
FROM
tablename
code
format
correspond
représentation
mois
sous
forme
nombre
deux
chiffres
représente
jour
sous
forme
nombre
deux
chiffres
représente
années
sous
forme
nombre
4
chiffres
codes
format
MySQL
plus
utiles
type
conversion
décrits
tableau
suivant
Code
Description
Mois
plein
texte
W
Nom
jour
semaine
plein
texte
Jour
mois
numérique
préfixe
textuel
Année
numérique
4
chiffres
Année
numérique
2
chiffres
Nom
jour
semaine
3
lettres
Jour
mois
numérique
zéro
préfixe
e
Jour
mois
numérique
zéro
préfixe
Mois
numérique
zéro
préfixe
Mois
numérique
zéro
préfixe
b
Mois
texte
3
lettres
Jour
année
numérique
H
Heure
système
24
heures
zéro
préfixe
k
Heure
système
24
heures
zéro
préfixe
h
I
i
majuscule
minuscule
Heure
système
12
heures
zéro
préfixe
Heure
système
12
heures
zéro
préfixe
i
Minutes
numérique
zéro
préfixe
r
Heure
système
12
heures
hh
mm
ss
AM|PM
Heure
système
24
heures
hh
mm
ss
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
73
Cours
initiation
PHP
Secondes
numérique
zéro
préfixe
p
AM
PM
w
Jour
semaine
numérique
0
dimanche
6
samedi
Exercice
Voir
annexe
dates
Reprendre
formulaire
inscription
ajouter
champ
date
inscription
voir
figure
14
Modifier
sorte
date
puisse
être
insérée
modifiée
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
74
Cours
initiation
PHP
6.3
Utiliser
ODBC
Odbc
solution
alternative
permettant
accéder
base
données
écrivant
code
générique
est-à-dire
code
application
fonctionne
toutes
bases
données
prenant
charge
norme
ODBC
Toutefois
solution
semble
séduisante
bien
moins
fournit
fonctionnalités
accès
base
travers
fonctions
base
dédiées
dire
directement
prisent
charge
PHP
uitliser
ODBC
nécessaire
installer
configurer
driver
base
Installation
driver
odbc
MySql
Télécharger
fichier
MyODBC-3.51.11-2-win.exe
répertoire
temporaire
lancer
programme
setup.exe
Configuration
source
donnée
menu
``
paramètres
``
panneau
configuration
double
cliquez
``
Sources
données
ODBC
``
Cliquez
add
ajouter
nouvelle
source
donnée
sélectionnez
Mysql
puis
Terminer
Editez
paramètres
suivant
Windows
DSN
name
Mysql
host
name
User
Passeword
Port
formation
localhost
stagiaire
stagiaire
3306
Puis
validez
cliquant
OK
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
75
Cours
initiation
PHP
Maintenant
pouvons
établir
connéction
base
utilisant
fonction
odbc_connect
resource
odbc_connect
string
dsn
string
user
string
password
int
cursor_type
Exemple
php
dsn=
``
formation
host=
localhost
//
Nom
serveur
adresse
IP
héberge
base
données
user=
stagiaire
//Nom
l'utilisateur
base
données
password=
stagiaire
//
Mot
passe
connexion
base
données
db=
formation
//Nom
base
données
l'on
interroge'
conn=odbc_connect
dsn
user
password
or
die
``
Impossible
connecter
interroger
base
utiliserons
odbc_exec
éxecuter
requête
place
Mysql_query
int
odbc_exec
resource
connection_id
string
query_string
odbc_fetch_array
lire
enregistrements
place
mysql_fetch_array
array
odbc_fetch_array
resource
result
int
rownumber
Voici
exemple
connéction
intérrogation
base
formation
PHP
//Code
servant
afficher
source
echo
``
link
rel=\
stylesheet\
type=\
text/css\
href=\
..
/css/sga.css\
echo
``
href=\
show_source.php
script=db_satgiaireOdbc.php\
Voir
source
/A
br
br
include
``
fonction.inc
//Code
l'exercice
include
``
connect_odbc.inc
//Si
table
nomme
stagiaires
requete=
``
select
*
from
stagiaires
limit
0,5
echo
``
B
Résultat
odbc_fetch_array
/B
BR
//On
éxecute
requête
resultat=
odbc_exec
conn
requete
//On
récupère
valeurs
grace
boucle
while
//dans
variable
tableau
annuaire_stagiaires
crée
mysql_fetch_array
//On
dispose
indices
numérique
noms
champs
comme
indice
echo
``
h2
Liste
stagiaires
/h2
echo
``
table
border=1
tr
align
=center
th
N°
stagiaire
/th
th
Nom
prénom
/th
th
Adresse
/th
th
Code
Postal
/th
th
Ville
/th
th
Courriel
/th
th
N°
Téléphone
/th
/tr
while
annuaire_stagiaires
=
odbc_fetch_array
resultat
{
echo
``
tr
td
align
center
annuaire_stagiaires
``
num_stagiaire
``
/td
``
echo
``
td
.civilite
annuaire_stagiaires
``
civ
``
annuaire_stagiaires
``
nom
``
annuaire_stagiaires
``
prenom
``
/td
echo
``
td
annuaire_stagiaires
``
adresse
``
&
nbsp
/td
echo
``
td
align=center
annuaire_stagiaires
``
cp
``
&
nbsp
/td
echo
``
td
annuaire_stagiaires
``
ville
``
&
nbsp
/td
echo
``
td
annuaire_stagiaires
``
courriel
``
&
nbsp
/td
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
76
Cours
initiation
PHP
echo
``
td
annuaire_stagiaires
``
telephone
``
&
nbsp
/td
/tr
}
echo
``
/table
//on
Libère
ressources
odbc_free_result
resultat
//on
ferme
connection
base
odbc_close
conn
Exercice
Voir
annexe
ODBC
Exercice
1
Afficher
liste
stagiaires
utilisant
connection
ODBC
base
mysql
comme
source
données
utilisateur=stagiaire
mot
passe
=stagiaire
base
=
formation
afin
d'obtenir
résultat
montré
l'exemple
ci-dessous
Liste
stagiaires
N°
stagiaire
Nom
prénom
Code
Postal
Adresse
1
Madame
DURANT
21
rue
Brassens
2
Mademoiselle
Dupré
3
Père
Alain
4
5
Georges
Ville
Courriel
N°
Téléphone
94000
Creteil
durant
free.fr
01
42
44
12
30
54
rue
Jacques
Brel
75000
PARIS
dupre
wanadoo.fr
01
14
42
32
40
13
rue
Saint
p
93000
Saint-Denis
alain
htomail.com
01
52
64
72
80
Monsieur
Camus
Albert
79
rue
scribe
92160
Antony
camus
noos.fr
01
62
73
82
90
Leblanc
Jean-Marc
91000
Montfermeil
jeanmarc.leblanc
free.fr
01
02
14
22
40
rue
blanc
manteaux
Exercice
Voir
annexe
ODBC
Exercice
2
Créer
source
données
ODBC
permettant
accéder
base
access
``
formation.mdb
Reprendre
exercice
précédent
adaptez
afin
pouvoir
obtenir
résultat
interrogeant
base
access
``
formation.mdb
trouve
répertoire
exercice
pouvez
aussi
télécharger
Comme
vu
possible
interroger
différentes
bases
données
fonctions
natives
ODBC
lorsque
souhaite
accéder
différentes
source
données
programme
cela
devient
vite
fastidieux
changer
connection
fonctions
éviter
manipulations
existe
moyen
passe
création
classe
regroupant
tous
modes
connection
besoin
classe
apporte
couche
abstraction
base
données
existe
plusieurs
PEAR
fournit
PHP
sql_layer
créer
PHP_Nuke
etc…
reviendrons
sujet
chapitre
classe
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
77
Cours
initiation
PHP
7
Sessions
Cookies
7.1
Cookies
est-ce
cookie
cookie
fichier
texte
sauvegardé
machine
côté
client
lequel
stockées
données
permet
site
web
stocker
récupérer
données
cas
applications
besoin
maintenir
état
persistance
données
entre
plusieurs
visites
utilisateur
cookies
permettent
éviter
forcer
utilisateur
reconnecter
émet
nouvelle
requête
favorisent
navigation
plus
personnalisée
fichier
contient
chaîne
texte
type
nom
=
valeur
URL
associée
permet
client
savoir
doit
renvoyer
cookie
serveur
contacté
Cookies
PHP
fonction
setcookie
permet
définir
manuellement
cookies
manière
suivante
int
setcookie
string
nom_cookie
string
valeur_cookie
int
date_exp
date
expiration
définie
durée
vie
cookie
celle
session
Exemple
PHP
setcookie
``
cookie
``
chocolat
time
+
90
*
86400
après
exécution
ligne
cookie
nom
moncookie
valeur
“
chocolat
”
stocké
possible
définir
cookies
valeurs
multiples
effet
cookies
restreints
20
serveur
traite
alors
cookie
comme
tableau
affecte
valeur
chaque
élément
tableau
Exemple
PHP
if
isset
cookie
0
{
setcookie
``
cookie
0
nomvisiteur
cookie
1
++
setcookie
``
cookie
1
cookie
1
echo
``
Bonjour
cookie
0
effectué
``
cookie
1
cookie
1
==
1
``
visite
``
visites
``
``
page
``
//affiche
Bonjour
nom
visiteur
effectué
nombre
visites
page
code
définit
cookie
doit
apparaître
tout
début
page
en-tête
avant
génération
sortie
envoie
navigateur
PHP
envoie
message
erreur
setcookie
appelée
après
réponse
HTTP
envoyée
client
Attention
simple
espace
caractère
saut
ligne
tout
autre
texte
HTML
généré
PHP
suffit
provoquer
erreur
mêmes
conditions
utilisation
fonction
setcookie
nouvelle
valeur
cookie
permet
changer
valeur
cookie
Accéder
cookie
Deux
méthodes
permettent
accéder
cookie
•
variable
globale
associée
cookie
nom_cookie
contient
valeur_cookie
•
variable
environnement
_COOKIE
nom_cookie
tableau
associatif
global
contient
variables
provenant
cookies
permet
avoir
information
fiable
origine
Exemple
php
if
isset
_COOKIE
'cookie
'
{
setcookie
``
cookie
``
chocolat
echo
``
cookie
\
cookie
=
chocolat
créé
br
echo
``
allez
pouvoir
avoir
accès
echo
``
br
href
=
\
cookie1.php\
accès
/a
}
else
{
echo
``
\
cookie
=
``
_COOKIE
'cookie
'
``
br
echo
``
pouvez
maintenant
utiliser
cookie
echo
``
br
href
=
\
cookie2.php\
utilisation
/a
}
Supprimer
cookie
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
78
Cours
initiation
PHP
cookie
peut
être
supprimé
aide
fonction
setcookie
dotée
unique
paramètre
int
setcookie
string
nom_cookie
Exemple
php
setcookie
``
cookie
if
isset
_COOKIE
'cookie
'
{
echo
``
\
cookie
détruit
echo
``
br
href
=
\
cookie.php\
recommencer
/a
}
else
{
echo
``
\
cookie
va
être
détruit
echo
``
br
href
=
\
cookie4.php\
destruction
/a
}
Exemples
utilisation
cookies
Script
cookie.php
php
if
isset
_COOKIE
'cookie
'
{
setcookie
``
cookie
``
chocolat
echo
``
cookie
\
cookie
=
chocolat
créé
br
echo
``
allez
pouvoir
avoir
accès
echo
``
br
href
=
\
cookie1.php\
accès
/a
}
else
{
echo
``
\
cookie
=
``
_COOKIE
'cookie
'
``
br
echo
``
pouvez
maintenant
utiliser
cookie
echo
``
br
href
=
\
cookie2.php\
utilisation
/a
}
Script
cookie1.php
php
cookie=
_COOKIE
'cookie
'
echo
``
\
cookie
toujours
cookie
br
echo
``
valeur
va
changer
br
echo
``
href
=
\
cookie3.php\
suite
/a
Script
cookie2.php
php
echo
``
\
cookie
toujours
``
_COOKIE
'cookie
'
``
br
echo
``
valeur
va
changer
br
echo
``
href
=
\
cookie3.php\
suite
/a
Script
cookie3.php
php
setcookie
``
cookie
café
if
_COOKIE
'cookie
'
==
``
chocolat
{
echo
``
changement
'
encore
lieu
echo
``
br
valeur
``
_COOKIE
'cookie
'
\
cookie
va
changer
echo
``
br
href
=
\
cookie3.php\
changement
/a
}
elseif
_COOKIE
'cookie
'
==
``
café
{
echo
``
changement
lieu
echo
``
br
nouvelle
valeur
\
cookie
``
_COOKIE
'cookie
'
``
``
echo
``
allons
maintenant
détruire
cookie
echo
``
br
href
=
\
cookie4.php\
destruction
/a
}
Script
cookie4.php
php
setcookie
``
cookie
if
isset
_COOKIE
'cookie
'
{
echo
``
\
cookie
détruit
echo
``
br
href
=
\
cookie.php\
recommencer
/a
}
else
{
echo
``
\
cookie
va
être
détruit
echo
``
br
href
=
\
cookie4.php\
destruction
/a
}
Exercice
Voir
annexe
cookies
Créer
4
pages
manipuler
cookies
chaque
page
permettez
l'utilisateur
l'aide
d'un
lien
hypertexte
passer
page
suivante
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
79
Cours
initiation
PHP
Indiquez
chaque
page
l'état
valeur
cookie
comme
indiqué
ci-dessous
première
Créer
fichier
cookie1.php
vérifiera
l'éxistance
variable
cookie
cookie
valeur
mange
poisson
n'existe
créée
l'utilisateur
informé
lien
permettra
rappeller
page
exite
message
informera
l'utilisateur
lien
permettra
passer
page
suivante
Exemple
cookie
cookie
=
``
mange
poisson
créé
allez
pouvoir
avoir
accès
accès
cookie
=
mange
poisson
pouvez
maintenant
utiliser
cookie
utilisation
seconde
Créer
fichier
cookie2.php
informera
l'utilisateur
valeur
cookie
précédement
créer
indiquer
qu'en
cliquant
lun
lien
changara
valeur
Exemple
cookie
=
mange
poisson
pouvez
maintenant
utiliser
cookie
utilisation
cookie
toujours
``
mange
poisson
valeur
va
changer
suite
troisième
Créer
fichier
cookie3.php
déterminera
valeur
cookie
changé
oui
l'utilisateur
averti
qu'en
cliquant
lien
valeur
va
changée
non
l'avertir
changement
lieu
qu'en
clien
lien
cookie
détruit
Exemple
changement
'
encore
lieu
valeur
``
mange
poisson
cookie
va
changer
changement
changement
lieu
nouvelle
valeur
cookie
``
préfere
viande
allons
maintenant
détruire
cookie
destruction
quatrième
Créer
fichier
cookie4.php
déterminera
cookie
détruit
oui
informe
l'utilisateur
insserre
lien
permettant
recommencer
non
l'informe
qu'en
cliquant
lien
cookie
détruit
Exemple
cookie
va
être
détruit
destruction
cookie
détruit
recommencer
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
80
Cours
initiation
PHP
7.2
sessions
session
débute
lors
lancement
navigateur
lorsqu
utilisateur
arrive
page
web
termine
départ
HTTP
protocole
sans
état
comprend
mécanisme
maintient
états
entre
deux
transactions
Autrement
dit
lorsqu
page
web
ferme
srcipts
terminent
tous
éléments
mémoire
détruits
perdus
recours
session
permet
gérer
contexte
ensemble
plusieurs
variables
contenu
doit
persister
plusieurs
pages
application
opération
peut
effectuer
plusieurs
manières
•
aide
cookie
•
passage
paramètres
chaque
lien
URL
longues
•
passage
variables
postées
via
champs
cachés
•
utilisation
sessions
PHP
PHP
chaque
session
caractérisée
numéro
identification
unique
ID
identifiant
session
nombre
aléatoire
stocké
machine
client
cookie
passé
via
URL
ID
session
joue
rôle
clé
permet
enregistrer
variables
particulières
tant
``
variables
session
seule
information
relative
session
visible
côté
client
variables
sessions
enregistrées
fichier
texte
type
nom
=
valeur
client
via
cookies
serveur
cookies
disponibles
sessions
cookies
Lors
mise
œuvre
sessions
PHP
fonctions
session
chargent
automatiquement
définition
cookies
condition
directive
session.use_cookies
égale
1
fonction
session_get_cookie_params
permet
visualiser
contenu
cookie
défini
session
renvoie
tableau
associatif
contenant
éléments
date
expiration
chemin
domaine
fonction
session_set_cookie_params
permet
définir
paramètres
cookie
session
void
session_set_cookie_params
int
date_exp
string
chemin
string
domaine
usage
cookies
peut
poser
problèmes
Certains
navigateurs
acceptent
certains
utilisateurs
désactivent
volontairement
navigateur
Web
fonctionnalité
relative
cookies
sessions
PHP
utilisent
défaut
cookies
possible
cookie
créé
stocker
ID
session
courante
cadre
application
gestion
application
repose
utilisation
session
préférable
éviter
utiliser
sessions
cookies
Passage
paramètres
URL
méthode
ID
session
tranmis
via
URL
celle-ci
automatiquement
adoptée
PHP
doit
être
compiler
option
enable-trans-sid
option
pouvez
aussi
passer
manuellement
ID
session
biais
hyper
lien
PHP
configuré
option
enable-track-vars
ID
session
stocké
constante
SID
devez
ajouter
fin
lien
manière
paramètre
GET
Exemple
HREF=
page_2.php
=SID
lien
/A
PHP
configuré
option
faut
placer
clé
session
URL
page
destination
constitue
écriture
plus
longue
Exemple
HREF=
page_2.php
session_name
=session_id
lien
/A
fonction
session_name
renvoi
nom
session
tel
définit
php.ini
string
session_name
string
name
fonction
session_id
renvoi
N°
session
définit
lors
début
session
déclarée
session_start
string
session_id
string
id
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
81
Cours
initiation
PHP
sessions
utilisant
fonctions
PHP
PHP
comprend
fonctions
natives
contrôle
session
plus
celles
contenues
bibliothèque
base
PHP
PHPlib
Configuration
php.ini
fichier
configuration
php.ini
comporte
section
dédiée
configuration
gestion
session
trouve
particulier
paramètres
suivants
session.save_handler
PHP4
seule
valeur
possible
file
signifie
valeurs
variables
session
stockées
fichier
disque
contenu
fichiers
ASCII
peut
reconnaître
nom
variables
ainsi
leurs
types
valeurs
PHP5
valeur
user
permet
stockage
mémoire
SGBD
session.save_path
paramètre
indique
chemin
fichiers
contenant
valeurs
variables
session
défaut
créés
/tmp
session.name
paramètre
spécifie
nom
session
nom
également
utilisé
tant
nom
cookie
session
doit
contenir
caractères
alpha
numériques
valeur
défaut
PHPSESSID
session.cookie_lifetime
paramètre
indique
durée
maximale
vie
cookie
envoyé
navigateur
client
paramètre
zéro
cookie
existera
jusqu
'
navigateur
arrêté
C'est
valeur
défaut
session.auto_start
paramètre
spécifie
sessions
créées
demande
systématiquement
défaut
zéro
sessions
doivent
être
créées
explicitement
session_start
session_register
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
82
Cours
initiation
PHP
Ouverture
session
fonction
session_start
initialise
données
nouvelle
session
rafraîchit
données
session
cours
boolean
session_start
Lors
accès
site
identificateur
session
peut
être
trouvé
appel
fonction
permet
créer
session
transmettre
identifiant
navigateur
fonction
doit
être
placée
tout
début
script
doit
être
placée
avant
envoie
headers
http
Enregistrement
variable
session
variable
session
variable
régulière
globale
quand
enregistrée
garde
valeur
toutes
pages
utilisent
session
enregistrer
variable
session
faut
assigner
valeur
variable
va
devenir
variable
session
Deux
méthode
possible
enregistrer
variable
session
selon
directive
register_global
fichier
configuration
php
php.ini
active
non
register_global=on
utilise
fonction
session_register
boolean
session_register
mixed
nom_variable
pouvez
enregistrer
plusieurs
variables
session
lors
appel
fonction
register_global=off
_SESSION
‘
Mavariable
=
valeur
HTTP_SESSION_VARS
‘
Mavariable
=
valeur
toutes
prochaines
pages
utilisant
sessions
appelant
fonction
session_start
variable
_SESSION
‘
nom_variable
valeur
assignée
quand
enregistrée
comme
variable
session
changements
valeur
variable
automatiquement
enregistrés
session
sauvegardés
prochaines
utilisations
Utilisation
variables
session
pouvez
accéder
variable
register_global=on
via
nom
nom_variable
register_global=off
biais
tableau
associatif
_SESSION
HTTP_SESSION_VARS
_SESSION
nom_variable
Déterminer
variable
variable
session
enregistrée
register_global=on
fonction
session_is_registered
permet
déterminer
variable
variable
session
enregistrée
boolean
session_is_registered
string
nom_variable
renvoie
valeur
true
variable
enregistrée
comme
variable
session
false
cas
contraire
register_global=off
pouvez
utiliser
tableau
_SESSION
HTTP_SESSION_VARS
vérifier
variable
enregistrées
comme
variable
session
If
isset
_SESSION
‘
Mavariable
Dés-enregistrement
variables
suppression
session
Dés-enregistrement
variable
session
pouvez
dés-enregistrer
variable
session
invoquant
fonction
register_global
=
session_unregister
boolean
session_unregister
string
nom_variable
fonction
dés-enregistre
variable
session
fois
register_global
=
off
Unset
void
unset
_SESSION
'Mavariable
'
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
83
Cours
initiation
PHP
Dés-enregistrement
toutes
variables
session
register_global
=
fonction
session_unset
permet
dés-enregistrer
toutes
variables
sessions
courantes
void
session_unset
register_global
=
off
_SESSION
=
array
Suppression
session
Lorsque
terminé
session
après
avoir
supprimer
toutes
variables
session
pouvez
invoquer
fonction
session_destroy
permet
supprimer
ID
session
boolean
session_destroy
Exercice
1
Voir
annexe
sessions
Créer
formulaire
html
ci-dessous
lors
envoi
formulaire
enregistrez
saisie
utilisateur
variables
session
puis
Afficher
informations
seconde
page
Exercice
2
Voir
annexe
sessions
Créer
formulaire
connection
figure
13
lors
envoi
formulaire
enregistrez
saisie
utilisateur
variables
session
puis
Afficher
informations
seconde
page
seconde
page
contiendra
lien
permettant
utilisateur
déconnecter
supprimer
variables
session
revenir
page
connection
Connection
nom
Mot
passe
Figure
13
Exercice
3
Voir
annexe
sessions
Reprendre
formulaire
connection
figure
13
lors
envoi
formulaire
avant
enregistrer
saisie
utilisateur
variables
session
Créer
fonction
vérifiera
comparant
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
84
Cours
initiation
PHP
base
donnée
utilisateur
existe
mot
passe
correct
puis
Afficher
informations
seconde
page
seconde
page
contiendra
lien
permettant
utilisateur
déconnecter
supprimer
variables
session
revenir
page
connection
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
85
Cours
initiation
PHP
8
Gestion
fichiers
PHP
permet
manipuler
importe
quel
fichier
serveur
Avant
effectuer
opération
fichier
intéressant
assurer
fichier
existe
fonction
file_exists
permet
faire
int
file_exists
string
nom_fichier
fonctions
permettent
gestion
fichiers
fonctions
renvoient
true
quand
opération
réussit
false
quand
échoue
sauf
précision
contraire
Ouvrir
fichiers
fonction
fopen
permet
ouvrir
fichier
serveur
local
via
HTTP
FTP
Internet
utilise
manière
suivante
int
fopen
string
nom_fichier
string
mode
argument
nom_fichier
désigne
nom
fichier
ouvrir
argument
mode
correspond
mode
ouverture
fichier
accepte
valeurs
suivantes
Valeur
a+
r
r+
w
w+
Description
ouverture
fichier
ajout
uniquement
données
écrites
fin
fichier
fichier
existe
PHP
tente
créer
ouverture
fichier
ajout
lecture
données
écrites
fin
fichier
fichier
existe
PHP
tente
créer
ouverture
fichier
lecture
seule
ouverture
fichier
lecture-écriture
données
écrites
début
fichier
ouverture
fichier
écriture
seule
données
remplacent
contenu
fichier
alors
perdu
fichier
existe
PHP
tente
créer
Ouverture
fichier
écriture-lecture
données
remplacent
contenu
fichier
alors
perdu
fichier
existe
PHP
tente
créer
plus
indicateur
b
indique
contenu
fichier
binaire
non
texte
image
exemple
fonction
fopen
réussit
renvoie
pointeur
fichier
entier
fait
référence
fichier
appels
fonction
ultérieurs
sinon
renvoie
false
Exemple
var
=
file_exists
``
fichier.php
if
var
{
echo
``
echec
fichier
demandé
n'existe
br
}
else
{
echo
``
fichier
demandé
existe
br
if
mavar
=
fopen
``
fichier.php
r
{
echo
``
echec
fichier
'
ouvert
br
}
else
{
echo
``
fichier
ouvert
br
echo
``
voici
contenu
br
br
br
fpassthru
mavar
}
}
//affiche
formulaire
page
fichier.php
ferme
fichier
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
86
Cours
initiation
PHP
Fermer
fichiers
Après
lecture
fichier
devez
refermer
fonction
utilisée
mixed
fclose
int
pointeur_fichier
Naviguer
fichiers
PHP
possède
fonctions
permettent
définir
précision
longueur
chaîne
lire
fichier
ainsi
déplacer
position
spécifique
fichier
fonction
rewind
int
rewind
int
pointeur_fichier
place
indicateur
position
début
fichier
fonction
fseek
int
fseek
int
pointeur_fichier
int
decalage
argument
décalage
nombre
octets
caractères
rapport
début
fichier
Attention
fonction
retourne
–1
cas
erreur
0
cas
réussite
fonction
ftell
int
ftell
int
pointeur_fichier
fonction
renseigne
position
indicateur
fichier
fonction
feof
int
feof
int
pointeur_fichier
Afficher
fichiers
opération
consiste
envoyer
contenu
fichier
vers
flux
sortie
fonction
utilisée
int
fpassthru
int
pointeur_fichier
effectue
lecture
position
courante
fin
fichier
puis
referme
fichier
paramètre
fonction
pointeur
fichier
renvoyé
fonction
fopen
Lire
fichiers
affichage
totalité
fichier
toujours
souhaitable
fonctions
PHP
lecture
fichier
permettent
lire
quelques
données
fonction
fread
string
fread
int
pointeur_fichier
int
longeur
paramètre
longueur
indique
nombre
caractères
depuis
début
lecture
termine
fonction
rencontre
fin
fichier
fonction
fgets
string
fgets
int
pointeur_fichier
int
longueur
paramètre
longueur
indique
nombre
caractères
plus
caractère
depuis
début
lecture
termine
fonction
rencontre
caractère
saut
ligne
fin
fichier
fonction
fgetss
string
fgetss
int
pointeur_fichier
int
longueur
fonction
effet
fonction
fgets
exclut
balises
HTML
PHP
lors
affichage
fonction
fgetc
string
fgetc
int
pointeur_fichier
fonction
permet
lire
premier
caractère
situé
position
courante
fonction
file
array
file
string
nom_fichier
fonction
lit
contenu
fichier
place
tableau
chaque
ligne
fichier
représentée
élément
tableau
première
ligne
correspond
élément
zéro
fonction
filesize
int
filesize
string
filename
Renvoi
taille
fichier
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
87
Cours
initiation
PHP
Exemple
php
if
fichier
=
fopen
``
texte.txt
r
{
echo
``
ouverture
fichier
impossible
}
else
{
text1
=
fread
fichier,17
echo
``
text1
br
//affiche
fichier
14
premiers
caractères
+
p
text2
=
fgets
fichier,50
echo
``
text2
br
//
affiche
destiné
apprendre
insérer
fichiers
s'arrête
saut
ligne
rewind
fichier
text4
=
fgetss
fichier,18
echo
``
text4
br
//
affiche
fichier
echo
``
br
rewind
fichier
//
replace
pointeur
début
fichier
while
feof
fichier
{
echo
fgetc
fichier
//
affiche
chaque
caractère
fichier
jusqu
'
fin
fichier
}
echo
``
br
rewind
fichier
arrText
=
file
``
texte.txt
//
place
contenu
fichier
tableau
for
i
=
0
i
count
arrText
i++
{
//
chaque
ligne
texte
insérée
balises
b
/b
//
mettre
texte
gras
echo
``
b
arrText
i
/b
br
}
//renvoi
taille
fichier
echo
filesize
``
texte.txt
Octets
br
fclose
fichier
}
Exercice
1
Voir
annexe
Gestion
fichiers
fichier
``
stagiaires_mdb.txt
contient
liste
stagiaires
Ouvrer
fichier
lecture
seule
Afficher
contenu
Ecrire
fichiers
écrire
chaîne
fichier
peut
utiliser
deux
fonctions
fputs
fwrite
elles
identique
tout
point
int
fputs
int
fichier_pointeur
string
str
int
longeur
int
fwrite
int
fichier_pointeur
string
str
int
longeur
dernier
paramètre
apparaît
chaîne
écrite
totalité
Exemple
php
if
fichier
=
fopen
``
texte2.txt
{
fputs
fichier
insérons
nouvelle
ligne
fin
fichier
}
Copier
supprimer
renommer
fichiers
fonction
copy
permet
copier
fichier
int
copy
string
source
string
destination
fonction
unlink
supprime
fichier
définitivement
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
88
Cours
initiation
PHP
int
unlink
string
nom_fichier
fonction
rename
permet
renommer
fichier
int
rename
string
ancien_name
string
nouveau_nom
Exemples
Copier
fichier
php
fichier
=
``
texte.txt
copy
fichier
..
/rep/
fichier
echo
``
fichier
copié
répertoire
rep
br
href=\
ex3p40.php\
suite
/a
Supprimer
fichier
php
fichier
=
``
texte.txt
unlink
``
..
/rep/
fichier
fichier
fichier
supprimé
br
ref=\
ex2p40.php\
retour
/a
echo
``
fichier
fichier
supprimé
Renommer
fichier
php
fichier
=
``
texte.txt
rename
fichier
``
nouveau_texte.txt
echo
``
fichier
fichier
renommé
nouveau_texte.txt
Exercice
2
Voir
annexe
Gestion
fichiers
Créer
quatre
fichiers
suivant
``
creer_fichier.php
``
copy_fichier.php
``
rename_fichier.php
supp_fichier.php
premier
``
creer_fichier.php
créera
fichier
stagiaires.txt
inserrera
deux
lignes
suivantes
Voici
l'insertion
première
ligne
fichier
br
Voici
l'insertion
deuxième
ligne
fichier
br
fichier
existe
déjà
contenu
supprimer
utilisateur
informé
message
résultat
opération
puis
contenu
fichier
affiché
second
``
copy_fichier.php
copiera
fichier
stagiaires.txt
stagiaires_sav.txt
informera
utilisateur
résultat
opération
troisième
``
rename_fichier.php
renomera
fichier
stagiaires_sav.txt
lst_stagiaires.txt
contenu
nouveau
fichier
affiché
informera
utilisateur
résultat
opération
quatrième
``
supp_fichier.php
supprimera
fichiers
stagiaires.txt
stagiaires_sav.txt
lst_stagiaires.txt
informera
utilisateur
résultat
opération
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
89
Cours
initiation
PHP
Chargements
tableaux
partir
fichiers
vu
fonction
file
place
contenu
fichier
tableau
chaque
ligne
fichier
représentée
élément
tableau
scalaire
pouvez
utiliser
fonctions
tableaux
scalaires
accéder
données
fichier
array
file
string
URL_fichier
Exemple
php
orders
=
file
``
orders.txt
//
contenu
fichier
placé
tableau
orders
num
=
count
orders
//
compte
nombre
d'éléments
tableau
if
num
==
0
{
echo
``
Rien
afficher
réessayer
plus
tard
}
else
{
for
i
=
0
i
num
i++
{
echo
``
orders
i
br
//
affiche
chaque
ligne
fichier
}
}
Exercice
Voir
annexe
Chargements
tableaux
partir
fichiers
fichier
texte
stagiaire_mdb.txt
issue
éxportation
base
access
contient
liste
stagiaires
coordonnées
plus
généré
lignes
délimitées
champ
délimités
``
guillemet
Afficher
page
chaque
stagiaire
adresse
téléphone
dessous
Exemple
Numéro
stagiaire
1
Madame
DURANT
21
rue
Georges
Brassens
94000
Creteil
Téléphone
01
42
44
12
30
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
90
Cours
initiation
PHP
Gérer
répertoires
fonction
chdir
permet
définir
répertoire
courant
mixed
chdir
string
repertoire
défaut
répertoire
page
PHP
affiche
répertoire
lequel
réside
plus
avantageux
basculer
autres
répertoires
répertoire
pouvoir
accéder
fichiers
plutôt
spécifier
chemin
accès
complet
chaque
fichier
fonction
opendir
permet
ouvrir
répertoire
mixed
opendir
string
chemin
fonction
retourne
pointeur
répertoire
valeur
entière
permet
référer
répertoire
ouvert
appels
fonction
ultérieurs
fonction
readdir
permet
lire
entrées
répertoire
ouvert
string
readdir
int
pointeur_repertoire
fonction
renvoie
false
lorsqu
échoué
quand
fin
répertoire
atteinte
Exemple
chdir
``
..
/exercice
rep
=
opendir
``
``
while
fichier
=
readdir
rep
{
echo
``
fichier
br
}
//affiche
tous
fichiers
répertoire
Exercice
fonction
rewinddir
permet
revenir
début
répertoire
void
rewinddir
int
pointeur_repertoire
fonction
closedir
permet
fermer
répertoire
libérer
ressources
void
rewinddir
int
pointeur_repertoire
fonction
mkdir
permet
définir
nouveau
répertoire
int
mkdir
string
chemin_repertoire
int
mode
second
paramètre
désigne
permissions
accès
répertoire
UNIX
Windows
tient
compte
paramètre
Exemple
if
mkdir
``
..
/rep/new
,0700
{
echo
``
répertoire
créé
``
}
else
{
echo
``
échec
répertoire
'
pu
être
créé
``
}
fonction
rmdir
permet
supprimer
répertoire
int
rmdir
string
nom_repertoire
fonction
basename
sépare
nom
fichier
nom
dossier
String
basename
string
path
string
suffix
Exercice
Voir
annexe
Gérer
répertoires
Créer
quatre
fichiers
suivant
``
creer_
rename_repertoire.php
``
supp_
repertoire.php
repertoire.php
copy_
repertoire.php
premier
``
creer_
repertoire.php
créera
repertoire1
repertoire2
puis
fichier
stagiaires.txt
repertoire1
inserrera
fichier
deux
lignes
suivantes
Voici
l'insertion
première
ligne
fichier
br
Voici
l'insertion
deuxième
ligne
fichier
br
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
91
Cours
initiation
PHP
fichier
existe
déjà
contenu
supprimer
utilisateur
informé
message
résultat
opération
puis
contenu
fichier
affiché
second
``
copy_repertoire.php
copiera
fichier
stagiaires.txt
stagiaires_sav.txt
repertoire2
informera
utilisateur
résultat
opération
troisième
``
rename_repertoire.php
renomera
fichier
stagiaires_sav.txt
lst_stagiaires.txt
repertoire1
contenu
nouveau
fichier
affiché
informera
utilisateur
résultat
opération
quatrième
``
supp_fichier.php
supprimera
deux
répertoires
contenus
informera
utilisateur
résultat
opération
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
92
Cours
initiation
PHP
Afficher
image
PHP
utilise
bibliothèque
GD
toutes
images
hormis
plus
simples
entre
elles
PHP
permet
aussi
créer
manipuler
images
grand
choix
formats
comme
gif
png
jpg
wbmp
xpm
PHP
peut
aussi
générer
directement
images
navigateur
librarie
GD
Utilisation
image
simple
utilise
balise
img
afficher
image
img
src=
Mon_image
width=
129
height=
76
PHP
permet
aussi
afficher
image
grace
balise
input
input
name='imageField
'
type='image
'
src='Mon_image
'
Lorsque
PHP
rencontre
balise
contente
interroger
serveur
afin
obtenir
image
puis
transmet
navigateur
fait
rien
autre
GetImageSize
fonction
GetImageSize
très
utile
puisqu
retourne
taille
d'une
image
tableau
4
éléments
L'index
0
contient
largeur
L'index
1
contient
longueur
L'index
2
contient
type
l'image
1
=
GIF
2
=
JPG
3
=
PNG
5
=
PSD
6
=
BMP
L'index
3
contient
chaîne
``
height=xxx
width=xxx
array
getimagesize
string
filename
array
imageinfo
Ainsi
pourrons
obtenir
toutes
informations
utiles
image
placer
balises
html
Exercice
Voir
annexe
Afficher
image
Exercice
1
aide
liste
séléction
SELECT
afficher
liste
images
contenu
répertoire
images
voir
figure
ci-dessous
Puis
permettez
utilisateur
afficher
image
sélectionnée
aide
balise
img
puis
input
Liste
images
disponibles
Affiche
librarie
GD
Afin
pouvoir
utiliser
librairie
GD
devez
préalable
charger
module
faire
ajouter
ligne
suivante
partie
extensions
fichier
configuration
php
php.ini
Exemple
Dynamic
Extensions
extension=php_gd2.dll
librarie
GD
PHP
disposent
nombreuses
fonctions
relatives
traitement
images
contenterons
quelques
unes
fonctions
utilisent
entête
fichier
autrement
dit
elles
doivent
être
utilisées
avant
tout
autre
commande
transmettant
flux
données
Imagecreatefromgif
Crée
nouvelle
image
gif
partir
d'un
fichier
d'une
URL
resource
imagecreatefromgif
string
filename
imagegif
Envoie
image
GIF
vers
navigateur
fichier
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
93
Cours
initiation
PHP
int
imagegif
resource
im
string
filename
ImagecreatefromJpeg
Crée
nouvelle
image
JPEG
partir
d'un
fichier
d'une
URL
resource
imagecreatefromjpeg
string
filename
imagejpeg
Envoie
image
JPEG
vers
navigateur
fichier
int
imagejpeg
resource
im
string
filename
int
quality
ImageCreateFromPNG
Crée
nouvelle
image
PNG
partir
d'un
fichier
d'une
URL
resource
imagecreatefrompng
string
filename
ImagePNG
Envoie
image
PNG
vers
navigateur
fichier
int
imagepng
resource
im
string
filename
ImageDestroy
Détruit
image
libère
toute
mémoire
associée
l'image
im
im
identifiant
d'image
valide
retourné
fonction
création
image
imagecreate
exemple
int
imagedestroy
resource
im
Exemple
création
image
php
//
définition
l'image
hauteur
=
200
largeur
=
200
image
=
ImageCreate
largeur
hauteur
//
identificateur
couleur
blanc
blanc
=
ImageColorAllocate
image
255
255
255
//
identificateur
couleur
noir
noir
=
ImageColorAllocate
image,0
0
0
//
dessin
l'image
ImageFill
image
0
0
noir
//
peint
fond
noir
ImageLine
image
0
0
largeur
hauteur
blanc
//
trace
trait
blanc
coin
supérieur
gauche
0
0
//
jusqu'au
coin
inférieur
droit
largeur
hauteur
ImageString
image
4
50
150
``
Ventes
blanc
//
ajoute
légende
``
Ventes
graphique
police
4
point
initial
50
150
//
génération
l'image
Header
``
Content-type
image/png
ImagePng
image
//
nettoyage
ImageDestroy
image
Exercice
Voir
annexe
Afficher
image
Exercice
2
aide
liste
séléction
SELECT
afficher
liste
images
contenu
répertoire
images
comme
exercice
précédent
Puis
permettez
utilisateur
afficher
image
sélectionnée
utilisant
fonctions
librairie
GD
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
94
Cours
initiation
PHP
9
Gestion
erreurs
Introduction
PHP
constitue
environnement
très
pratique
débogage
gestion
erreurs
permet
détecter
erreurs
réagir
tout
laissant
latitude
quant
façon
messages
erreurs
affichés
9.1
types
erreurs
PHP
Trois
grands
groupes
erreurs
programmation
peuvent
être
distingués
erreur
syntaxe
compilation
survenant
lorsque
syntaxe
code
erronée
erreur
sémantique
exécution
produit
lorsque
programme
exécute
code
syntaxe
correcte
erreur
logique
provoque
apparition
message
erreur
résultat
programme
effectue
autre
chose
souhaité
programmeur
aussi
erreurs
environnement
dues
faute
programmeur
ensemble
facteurs
environnement
lequel
programmeur
aucun
contrôle
Erreur
syntaxe
erreur
syntaxe
produit
lors
analyse
code
avant
exécution
analyseur
indique
numéro
ligne
produite
erreur
Exemple
1
php
2
var
=
``
test
d'erreur
3
echo
var
4
manque
``
fin
instruction
analyseur
détecte
erreur
ligne
3
car
doit
trouver
nouvelle
instruction
``
fin
instruction
absent
ligne
2
Erreur
sémantique
erreur
sémantique
détectée
analyseur
car
syntaxe
correcte
survient
lorsque
PHP
tente
exécuter
ligne
Exemple
php
fopen
``
fichier.txt
ligne
présente
erreur
syntaxe
fonction
fopen
nécessite
deux
paramètres
erreur
sémantique
toujours
facilement
identifiable
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
95
Cours
initiation
PHP
Erreur
logique
erreur
logique
délicate
identifier
car
correspond
code
parfait
syntaxe
sémantique
produit
message
erreur
plupart
cas
aboutit
résultat
celui
attendu
Erreur
environnement
cas
code
dépourvu
tout
bogue
garanti
exécutera
toujours
sans
erreur
effet
tout
programmeur
doit
parfois
appuyer
éléments
contrôle
comme
échec
ouverture
base
données
impossibilité
ouvrir
fichier
include
…
important
assurer
présence
gestion
erreur
adaptée
quelconque
erreur
environnement
messages
erreur
PHP
messages
erreurs
PHP
particulièrement
descriptifs
correspondent
tous
forme
suivante
Niveau_erreur
message_erreur
in
Nom_fichier
line
#
9.2
niveaux
erreur
PHP
erreur
analyse
``
Parse
error
erreur
syntaxe
détectée
analyseur
profondes
modifications
moteur
PHP
lors
passage
PHP3
PHP4
entraîne
effet
totalement
différent
erreur
analyse
PHP3
langage
interprété
moteur
interpète
ligne
code
exécute
passe
suivante
PHP4
précompile
PHP5
compile
script
avant
exécuter
script
changement
implique
erreurs
analyse
PHP3
détectait
avant
avoir
atteint
ligne
fautive
épinglées
PHP
avant
exécution
moindre
ligne
code
erreur
fatale
``
Fatal
error
erreur
sémantique
environnement
PHP
peut
surmonter
entraîne
interruption
immédiate
script
car
PHP
peut
continuer
sans
exécution
ligne
‘
produite
erreur
avertissement
``
Warning
renccontre
avertissement
PHP
tente
poursuivre
exécution
script
agit
général
erreur
suffisamment
grave
compromettre
bonne
exécution
programme
nombreuses
erreurs
environnement
entraînent
warning
aucune
gestion
erreurs
permet
réagir
erreurs
défaillance
initiale
provoque
souvent
autres
erreurs
alors
script
poursuit
exécution
remarque
remarques
notices
dues
erreurs
faible
importance
telle
variable
non
initialisée
défaut
PHP
configuré
afficher
remarques
elles
peuvent
être
activées
constituent
alors
bon
moyen
détecter
certaines
erreurs
Définition
niveau
rapport
erreur
différents
type
erreur
alerte
Valeur
Constante
Description
1
E_ERROR
Erreur
fatale
exécution
Note
2
E_WARNING
Alerte
exécution
erreur
non
fatale
4
E_PARSE
Erreur
compilation
8
E_NOTICE
Notes
exécution
moins
critique
alertes
16
E_CORE_ERROR
Erreurs
surviennent
lors
initialisation
PHP
PHP4
supérieur
32
E_CORE_WARNING
Alertes
surviennent
lors
initialisation
PHP
PHP4
supérieur
64
E_COMPILE_ERROR
Erreur
fatale
compilation
PHP4
supérieur
128
E_COMPILE_WARNING
Alerte
compilation
erreur
non
fatale
PHP4
supérieur
256
E_USER_ERROR
Erreur
générée
utilisateur
PHP4
supérieur
512
E_USER_WARNING
Alerte
générée
utilisateur
PHP4
supérieur
1024
E_USER_NOTICE
Note
générée
utilisateur
PHP4
supérieur
E_ALL
Toutes
erreurs
ci-dessus
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
96
Cours
initiation
PHP
valeurs
ci-dessus
numériques
symboliques
utilisées
construire
champ
bits
spécifie
quelles
erreurs
rapporter
opérateurs
bits
utilisables
combiner
valeurs
conserver
uniquement
celles
intéresantes
niveau
rapport
erreur
défini
fichier
php.ini
niveau
script
fonction
error_reporting
Définition
niveau
rapport
erreur
php.ini
définition
valeur
error_reporting
définit
niveau
rapport
erreur
défaut
niveau
rapport
erreur
défini
E_ALL
&
~E_NOTICE
valeur
7
PHP3.ini
Définition
niveau
rapport
erreur
script
fonction
error_reporting
accepte
argument
spécifie
niveaux
erreur
afficher
déterminer
valeur
argument
faut
ajouter
valeurs
niveaux
erreurs
afficher
désactiver
tout
rapport
erreur
faut
appeler
fonction
argument
0
paramètrage
défaut
équivalent
appel
fonction
valeur
7
1
+
2
+
4
affichage
toutes
erreurs
faut
appel
fonction
15
1
+
2
+
4
+
8
conseillé
remplacer
messages
erreur
standard
gestion
harmonieuse
erreurs
environnement
journaliser
sans
afficher
messages
standard
PHP
utilisateur
9.3
Gérer
erreurs
plupart
fonctions
PHP
retournent
0
cas
erreur
test
simple
gérer
erreur
Exemple
php
if
mysql_connect
db
utilisateur
password
{
//
code
d'accès
base
données
situe
ici'
}
Suppression
messages
erreur
exemple
précédent
cas
erreur
message
erreur
affiché
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
97
Cours
initiation
PHP
possible
supprimer
message
erreur
deux
façons
fonction
error_reporting
vue
précédemment
opérateur
contrôle
erreur
``
permet
ignorer
messages
erreur
générés
expression
préfixe
option
track_errors
``
php.ini
activée
messages
erreurs
sauvés
variable
globale
php_errormsg
écrasée
chaque
erreur
Exemple
php
if
mysql_connect
db
utilisateur
password
{
//
code
d'accès
base
données
situe
ici'
}
echo
``
message
d'erreur
br
b
u
php_errormsg
/u
/b
Message
erreur
personnalisé
message
erreur
personnalisé
utilisateur
mieux
perçu
message
erreur
standard
suffit
ajouer
test
clause
``
else
peut
contenir
message
erreur
éventuellement
instruction
terminer
exécution
script
fonction
die
entraîne
fin
exécution
script
affichage
chaîne
caractères
prend
argument
peut
également
exécuter
fonction
argument
fonction
exit
joue
rôle
sans
message
Exemple
php
if
mysql_connect
db
utilisateur
password
{
//
code
d'accès
base
données
situe
ici'
}
else
{
exit
``
h1
Désolé
/h1
p
Impossible
d'établir
connexion
moment.
br
Réessayer
plus
tard
/p
}
echo
``
partie
script
affichée
connexion
pu
faire
possible
également
rediriger
utilisateur
vers
page
erreur
aucn
contenu
encore
envoyé
navigateur
fonction
header
fonction
en-tête
Exemple
php
header
``
location
error.php
//
redirige
vers
page
error.php
également
possible
d'imprimer
élément
JavaScript
côté
client
navigateur
prend
charge
JavaScript
Exemple
php
if
isset
_REQUEST
'var
'
{
echo
``
form
action=\
test.php\
\n
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
98
Cours
initiation
PHP
nom
input
type=\
text\
name=\
var\
\n
br
input
type=\
submit\
value=\
envoyer\
\n
/form
}
else
{
if
empty
_REQUEST
'var
'
{
//
l'utilisateur
'
rempli
champ
var
echo
``
script
language=\
javascript\
alert
\
devez
remplir
champ\
/script
echo
``
form
action=\
test.php\
\n
nom
input
type=\
text\
name=\
var\
\n
br
input
type=\
submit\
value=\
envoyer\
\n
/form
}
else
{
//
utilisation
_REQUEST
'var
'
}
}
utilisateur
fait
erreur
remplir
formulaire
avant
envoyer
alors
message
javascript
affiche
Journalisation
erreurs
fonction
error_log
met
journal
toute
erreur
pouvant
subvenir
int
error_log
string
message
int
type_message
string
destination
string
extra_headers
paramètre
message
message
erreur
doit
être
mis
journal
paramètre
type_message
définit
type
cible
vers
laquelle
va
être
dirigé
message
erreur
0
journal
erreur
système
PHP
peut
être
défini
php.ini
directive
error_log
défaut
journal
serveur
web
error.log
Apache
…/apache/logs/error.log
1
adresse
électronique
transmise
comme
troisième
paramètre
2
port
débogage
débogage
activé
3
fichier
journal
spécifié
troisème
argument
paramètre
destination
adresse
électronique
type_message
1
emplacement
fichier
journal
type_message
3
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
99
Cours
initiation
PHP
10
Programmation
orienté
objet
10.1
Quelques
concepts
programmation
orientée
objet
programmation
orientée
objet
programmation
modulaire
permet
réutilisation
code
PHP
permet
modularité
via
programmation
librairies
classes
logiciel
orienté
objet
conçu
construit
sous
forme
ensemble
objets
indépendants
dotés
fois
attributs
opérations
interagissent
répondre
besoins
attributs
propriétés
variables
rapportent
objet
méthodes
actions
fonctions
objet
peut
accomplir
modifier
lui-même
produire
effet
externe
données
contenues
objet
essentiellement
accessibles
biais
méthodes
objet
forment
interface
objet
plupart
scripts
Web
restent
conçus
écrits
appliquant
méthodologie
orientée
fonctions
car
petite
taille
relativement
simples
nombre
projets
Web
évoluent
ensemble
pages
hyper
liées
vers
applications
complexes
requièrent
méthodologie
développement
mûrement
réfléchie
orientation
objet
peut
aider
gérer
complexité
projets
logiciels
augmenter
réutilisabilité
code
conséquent
réduire
coûts
maintenance
objet
collection
unique
identifiable
données
stockées
méthodes
agissent
données
objets
peuvent
être
regroupés
classes
classe
ensemble
objets
peuvent
être
différents
uns
autres
caractérisent
points
communs
contient
objets
présentent
tous
méthodes
comportant
manière
attributs
identiques
représentant
mêmes
choses
bien
valeurs
attributs
puissent
varier
objet
autre
sein
classe
Différentes
classes
doivent
pouvoir
présenter
comportements
différents
méthode
polymorphisme
caractérise
comportement
objets
plutôt
objets
eux-mêmes
PHP
fonctions
membres
classe
peuvent
être
polymorphiques
concept
héritage
permet
créer
relation
hiérarchique
entre
classes
moyen
sousclasses
sous-classe
hérite
attributs
méthodes
classe
parent
concept
permet
élaborer
enrichir
jeu
classes
existant
rendre
code
plus
réutilisable
constitue
atouts
indéniables
programmation
orientée
objets
méthodes
peuvent
ainsi
être
implémentées
seule
fois
classe
parent
lieu
être
nombreuses
fois
sous-classes
séparées
cadre
développement
Web
classes
peuvent
notamment
être
utilisées
représenter
pages
Web
composants
interface
utilisateur
cartes
achat
gestionnaires
erreur
catégories
produits
clients
PHP
5
tout
nouveau
model
objet
gestion
objets
PHP
complètement
réécrite
permettant
meilleurs
performances
ainsi
plus
fonctionnalités
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
100
Cours
initiation
PHP
11
classes
objets
PHP
4
classes
classe
collection
variables
fonctions
fonctionnent
variables
classes
forment
type
variable
Objet
11.1
Création
classe
création
classe
effectue
moyen
mot
clé
class
Structure
définition
classe
class
nom_classe
{
}
classe
doit
être
dotée
attributs
méthodes
Création
attributs
Lorsque
déclarez
variables
sein
définition
classe
variables
deviennent
attributs
classes
appellées
aussi
membres
classe
déclaration
attributs
fait
intermédiaire
mot
clé
var
Structure
définition
attribut
class
nom_classe
{
var
attribut1
var
attribut2
}
Création
méthodes
Lorsque
déclarez
fonctions
sein
définition
classe
elles
deviennent
méthodes
classe
Structure
définition
méthode
class
nom_classe
{
function
nom_fonction
parametres
{
corps
fonction
}
}
Constructeur
classe
existe
méthode
spéciale
constructeur
fonction
appelée
automatiquement
classe
lorsque
créez
nouvelle
instance
d'une
classe
fonction
constructeur
nom
classe
PHP
3
fonction
devient
constructeur
porte
nom
classe
PHP
4
fonction
devient
constructeur
porte
nom
classe
laquelle
définie
différence
subtile
cruciale
constructeur
très
utile
initialiser
données
membres
lors
instanciation
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
101
Cours
initiation
PHP
Structure
définition
constructeur
class
nom_classe
{
function
nom_classe
parametres
{
}
//
méthode
constructeur
corps
fonction
}
Attention
pouvez
attribuer
nom
plusieurs
fonctions
11.2
Instanciation
instanciation
correspond
création
objets
classes
forment
type
variable
créer
variable
type
désiré
devez
utiliser
l'opérateur
new
devez
spécifier
classe
objet
créé
instance
fournir
paramètres
éventuellement
requis
constructeur
classe
objet
=
new
nom_classe
parametres
Exemple
php
//
déclaration
classe
ma_classe
class
ma_classe
{
function
ma_classe
mavar
{
echo
``
constructeur
appelle
paramètre
b
mavar
/b
br
}
}
//Instanciaition
classe
ma_classe
=
new
ma_classe
``
nouveau
paramètre
création
l'objet
type
ma_classe
permet
d'afficher
constructeur
appelle
paramètre
nouveau
paramètre
11.3
Accès
attributs
méthodes
classe
sein
classe
pointeur
this
permet
faire
référence
attribut
this-
attribut
appeler
méthode
faut
spécifier
nom
suivi
paramètres
requis
placés
entre
parenthèses
préciser
objet
auquel
appartient
objet-
methode
parametres
Exemple
php
//
déclaration
classe
ma_classe
class
ma_classe
{
var
attribut
function
operation
mavar
{
this-
attribut
=
mavar
//
accès
l'attribut
sein
classe
echo
this-
attribut
attribut
}
}
=
new
ma_classe
a-
operation
``
nouvel
//affiche
nouvel
attribut
accesseurs
accesseurs
fonctions
classe
effectuer
tous
accès
attributs
classe
biais
seule
section
code
plutôt
directement
différents
niveaux
code
point
accès
unique
pouvez
décider
toute
sorte
modifications
quels
changements
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
102
Cours
initiation
PHP
apporter
suffira
modifier
fonctions
accesseur
autres
sections
code
trouvant
affectées
fonction
accesseur
peut
initialement
formuler
manière
suivante
php
class
accesseur
{
var
attribut
function
get_attribut
{
return
this-
attribut
}
function
set_attribut
newvalue
{
this-
attribute
=
newvalue
}
}
code
fournit
fonctions
permettent
accéder
attribut
attribute
fonction
get_attribute
renvoie
valeur
attribute
tandis
fonction
set_attribute
affecte
nouvelle
valeur
attribute
11.4
Héritage
classe
peut
être
déclarée
comme
sous-classe
autre
classe
aide
mot
clé
extends
Exemple
php
class
B
extends
{
var
attributB
function
operationB
{
corps
fonction
}
}
classe
B
sous-classe
classe
hérite
attributs
méthodes
classe
contre
classe
parent
classe
B
peut
aucun
cas
hériter
attributs
méthodes
B.
Exemple
php
class
parent
{
var
attribut1
function
operation1
{
this-
attribut1
echo
``
L'attribut
parent
b
this-
attribut1
/b
grace
operation1
br
br
}
//accesseur
attribut1
function
get_attribut1
{
return
this-
attribut1
}
function
set_attribut1
new_attribut
{
this-
attribut1
=
new_attribut
}
}
class
fils
extends
parent
{
var
attribut2
function
operation2
{
this-
attribut2
echo
``
L'attribut
fils
b
this-
attribut2
/b
grace
l'operation2
br
br
}
}
//Instanciation
classe
fils
l'Objet
b
b
=
new
fils
//Affectation
d'une
nouvelle
valeur
grace
l'accesseur
b-
set_attribut1
40
//Affichage
valeur
l'attribut1
grace
l'accesseur
echo
``
L'attribut
parent
b
b-
get_attribut1
/b
grace
get_attribut1
br
//Exécution
méthode
classe
fils
héritée
classe
parent
//Affichage
valeur
l'attribut1
grace
méthode
operation1
class
parent
b-
operation1
//
affiche
L'attribut
parent
40
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
103
Cours
initiation
PHP
//Affectation
d'une
nouvelle
valeur
sans
accesseur
b-
attribut2
=
10
//Affichage
valeur
l'attribut2
sans
accesseur
echo
``
L'attribut
parent
b
b-
attribut2
/b
grace
l'attribut2
br
//Exécution
méthode
classe
fils
//Affichage
valeur
l'attributé
grace
méthode
operation2
class
fils
b-
operation2
//
affiche
L'attribut
fils
10
//
tous
accès
attributs
opérations
possibles
objet
//classe
fils
//Instanciation
classe
parent
l'Objet
=
new
parent
//Affectation
d'une
nouvelle
valeur
grace
l'accesseur
a-
set_attribut1
40
//Affichage
valeur
l'attribut1
grace
l'accesseur
echo
``
L'attribut
parent
b
a-
get_attribut1
/b
grace
get_attribut1
br
//Exécution
méthode
classe
parent
//Affichage
valeur
l'attribut1
grace
méthode
operation1
class
parent
a-
operation1
//
//Affectation
d'une
nouvelle
valeur
sans
accesseur
a-
attribut2
=
10
//Affichage
valeur
l'attribut2
sans
accesseur
echo
``
L'attribut
parent
b
a-
attribut2
/b
grace
l'attribut2.
br
//Exécution
méthode
classe
fils
operation2
n'est
autorisée
//Puisque
classe
parent
n'hérite
classe
fils
//Affichage
valeur
l'attributé
grace
méthode
operation2
class
fils
//Affiche
Fatal
error
Call
to
undefined
function
operation2
in
//d
\coursphp\exercice\test.php
line
77
a-
operation2
//
affiche
L'attribut
fils
10
opérateur
contexte
classe
L'opérateur
permet
faire
référence
fonctions
variables
d'une
classe
base
bien
d'utiliser
méthodes
classes
n'ont
encore
d'objets
créés
Exemple
php
class
{
function
example
{
echo
fonction
originale
:example
br
/
\n
}
}
class
B
extends
{
function
example
{
echo
``
fonction
redéfinie
B
:example
br
/
\n
:example
}
}
//
'
d'objets
classe
//
L'affichage
//
fonction
originale
:example
br
/
:example
//
Création
d'un
objet
classe
B.
b
=
new
B
//
L'affichage
//
fonction
redéfinie
B
:example
br
/
//
fonction
originale
:example
br
/
b-
example
exemples
ci-dessus
appellent
fonction
example
classe
'
encore
d'objet
classe
alors
n'est
possible
d'écrire
a-
example
place
appelle
fonction
example
comme
fonction
classe
c'est-à-dire
nom
classe
elle-même
sans
objet
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
104
Cours
initiation
PHP
fonctions
classe
variables
classe
fait
'
aucun
objet
moment
l'appel
fonction
fonction
classe
peut
accéder
aucune
variable
peut
accéder
variables
locales
globales
faut
proscrire
l'utilisation
this
l'exemple
ci-dessus
classe
B
redéfinit
fonction
example
définition
originale
classe
remplacée
celle
B
n'est
plus
accessible
depuis
B
moins
n'appeliez
spécifiquement
fonction
example
classe
l'opérateur
Ecrivez
:example
cela
fait
faudrait
écrire
parent
:example
comme
expliqué
section
suivante
contexte
objet
courant
peut
avoir
d'autres
variables
objets
fait
lorsqu'il
utilisé
depuis
méthode
d'un
objet
pouvez
utiliser
this
11.5
Redéfinition
possible
sous-classe
re-déclarer
mêmes
attributs
ceux
classe
parent
donnant
valeur
défaut
différente
ainsi
mêmes
méthodes
donnant
fonctionnalité
différente
redéfinition
redéfinition
attributs
méthodes
sous-classe
affecte
classe
parent
Lorsqu
redéfinition
fournie
devient
prépondérante
remplace
définition
origine
PHP
permet
redéfinir
fonction
tout
gardant
possibilité
invoquer
version
définie
parent
Exemple
php
class
{
var
attribut
=
``
valeur
défaut
function
operation
{
echo
``
b
Définition
d'une
classe
/b
br
echo
``
valeur
\
attribut
this-
attribut
echo
``
br
br
}
}
class
B
extends
{
var
attribut
=
``
valeur
différente
function
operation
{
echo
``
b
Nouvelle
définition
/b
br
echo
``
valeur
\
attribut
this-
attribut
echo
``
br
br
}
}
//Instanciation
classe
l'Objet
=
new
/
*
affiche
Définition
d'une
classe
valeur
attribut
valeur
défaut
*
/
a-
operation
//Instanciation
classe
B
l'Objet
b
b
=
new
B
/
*
affiche
Nouvelle
définition
valeur
attribut
valeur
différente
*
/
b-
operation
Manipulation
classes
objets
origine
similaire
Exemple
php
class
vehicule
{
var
roues
var
passagers
var
classname
=
``
véhicule
var
nom
=
``
function
vehicule
val1
val2
{
this-
roues
=
val1
this-
passagers
=
val2
}
function
init_nom
nom_type
{
this-
nom
=
nom_type
}
function
jesuis
{
echo
``
véhicule
this-
roues
roues
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
105
Cours
initiation
PHP
echo
``
this-
passagers
passagers
``
echo
``
type
this-
classname
``
if
this-
nom
{
echo
``
m'appelle
this-
nom
``
echo
``
br
br
}
}
}
//
héritage
classe
véhicule
class
velo
extends
vehicule
{
var
classname
=
``
vélo
//
redéfinition
l'attribut
classname
//
``
construction
classe
vélo
function
velo
{
this-
vehicule
2
1
}
}
//
véhicule
motorisé
issu
classe
vehicule
class
mvehicule
extends
vehicule
{
var
classname
=
``
motorisé
//
redéfinition
l'attribut
classname
vareur
mot
function
init_moteur
cylindre
{
this-
moteur
=
cylindre
}
function
jesuis
{
//
surcharge
fonction
jesuis
classeehicule
v
echo
``
moteur
this-
moteur
cc.
br
vehicule
:jesuis
//appel
méthode
jesuis
classe
vehicule
}
}
//
classes
voiture
moto
héritent
classe
mvehicule
class
voiture
extends
mvehicule
{
var
classname
=
``
voiture
function
oiture
this-
vehicule
4,5
}
}
class
moto
extends
mvehicule
{
var
classname
=
``
moto
function
moto
{
this-
vehicule
2
2
}
}
//
création
objets
bmx
cb
twingo
bmx
=
new
elo
cb
=
new
moto
twingo
=
new
voiture
bmx-
init_nom
``
BMX
//initialisation
objets
twingo-
init_nom
``
TWINGO
twingo-
init_moteur
1600
cb-
init_nom
``
CB
500
cb-
init_moteur
500
//
appelle
fonction
jesuis
objets
savoir
bmx-
jesuis
twingo-
jesuis
cb-
jesuis
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
106
Cours
initiation
PHP
classes
objets
PHP
5
PHP
5
inclut
nouveau
modèle
objet
traitement
objets
PHP
complètement
réécrit
arriver
meilleures
performances
plus
fonctionnalités
versions
précédentes
PHP
objets
traités
comme
types
primitifs
exemple
entiers
chaînes
caractères
L'inconvénient
méthode
sémantiquement
l'objet
entier
copié
lorsqu'une
variable
assignée
passée
comme
paramètre
fonction
nouvelle
approche
objets
référencés
pointeur
non
valeur
peut
penser
pointeur
tant
qu'identifiant
d'objet
Beaucoup
développeurs
PHP
rendent
compte
caprices
lors
copie
l'ancien
modèle
objet
conséquent
majorité
applications
PHP
devrait
fonctionner
directement
très
peu
modifications
modifications
apportées
PHP
5
Zend
Engine
2
augmentent
considérablement
capacités
performances
PHP
attention
toute
particulière
apportée
nouvelle
version
plus
compatible
possible
scripts
antérieurs
Ainsi
migration
code
PHP
4
vers
PHP
5
devrait
être
aisée
plupart
scripts
PHP
4
devraient
être
prêts
fonctionner
sans
nécessiter
moindre
modification
existe
toutefois
quelques
différences
devriez
tester
codes
avant
changer
version
production
Quelques
exemples
changements
•
•
•
objet
sans
propriété
n'est
plus
considéré
comme
vide
empty
certains
cas
classes
doivent
être
déclarées
avant
d'être
utilisées
Cela
survient
uniquement
nouvelles
fonctionnalités
PHP
5
utilisées
Sinon
comportement
qu'avant
fonctions
get_class
get_parent_class
get_class_methods
retournent
désormais
nom
classe
comme
déclarée
sensible
casse
peut
causer
problèmes
anciens
scripts
utilisent
comportement
précédent
nom
classe
toujours
retourné
minuscules
solution
possible
rechercher
fonctions
tous
anciens
scripts
d'utiliser
fonction
strtolower
11.6
Création
classe
Chaque
définition
classe
commence
mot-clé
class
suivi
nom
classe
peut
être
quelconque
condition
mot
réservé
PHP
Suivent
paire
parenthèses
contenant
définition
membres
méthodes
pseudo-variable
this
disponible
lorsqu'une
méthode
appelée
depuis
contexte
objet
this
référence
l'objet
appelé
habituellement
l'objet
auquelle
méthode
appartient
peut
être
autre
objet
méthode
appelée
manière
statique
depuis
contexte
d'un
autre
objet
comportement
illustré
l'exemple
suivant
Exemple
19-1
variable
this
programmation
objet
Structure
définition
classe
class
nom_classe
{
}
Exemple
/
*
définition
simple
d'une
classe
*
/
php
class
SimpleClass
{
//
déclaration
d'un
membre
public
var
=
'une
valeur
défaut
'
//
déclaration
méthode
public
function
displayVar
{
echo
this-
var
}
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
107
Cours
initiation
PHP
}
Constructeurs
destructeurs
Constructeurs
PHP
5
permet
développeurs
déclarer
constructeurs
classes
classes
possèdent
méthode
constructeur
appellent
méthode
chaque
création
d'une
nouvelle
instance
l'objet
intéressant
toutes
initialisations
l'objet
besoin
avant
d'être
utilisé
void
__construct
mixed
args
Note
constructeurs
parents
appelés
implicitement
classe
enfant
définie
constructeur
voulez
utiliser
constructeur
parent
nécessaire
faire
appel
parent
:__construct
Exemple
php
class
BaseClass
{
function
__construct
{
print
``
In
BaseClass
constructor\n
}
}
class
SubClass
extends
BaseClass
{
function
__construct
{
parent
:__construct
print
``
In
SubClass
constructor\n
}
}
obj
=
new
BaseClass
obj
=
new
SubClass
raisons
compatibilité
ascendante
PHP
5
peut
trouver
fonction
__construct
classe
donnée
cherchera
fonction
constructeur
représentée
comme
l'ancien
style
PHP
5
nom
classe
Effectivement
cela
signifie
seul
cas
pourrait
avoir
problème
compatibilité
celui
classe
contiendrait
méthode
nommée
__construct
autre
usage
Destructeurs
void
__destruct
void
PHP
5
introduit
concept
destructeur
similaire
autres
langages
orientés
objet
comme
C++
méthode
destructeur
doit
être
appelée
aussitôt
toutes
références
objet
particulier
effacées
lorsque
l'objet
explicitement
détruit
Exemple
php
class
MyDestructableClass
{
function
__construct
{
print
``
In
constructor\n
this-
name
=
``
MyDestructableClass
}
function
__destruct
{
print
``
Destruction
``
this-
name
``
\n
}
}
obj
=
new
MyDestructableClass
Tout
comme
constructeur
destructeur
parent
n'est
appelé
implicitement
moteur
exécuter
destructeur
parent
devez
appeler
explicitement
fonction
parent
:__destruct
corps
destructeur
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
108
Cours
initiation
PHP
11.7
Création
d'une
instance
créer
instance
d'un
objet
nouvel
objet
doit
être
créé
assigné
variable
objet
doit
toujours
être
assigné
lors
création
d'un
nouvel
objet
moins
qu'un
l'objet
constructeur
défini
lance
exception
cas
d'erreur
Exemple
php
instance
=
new
SimpleClass
11.8
Assignation
d'un
objet
Lors
l'assignation
d'un
instance
déjà
créée
d'un
objet
variable
nouvelle
variable
accédera
instance
l'objet
assigné
comportement
lors
passage
d'une
instance
fonction
nouvelle
instance
d'un
objet
déjà
créé
peut
être
effectuée
clonage
Exemple
php
assigned
=
instance
reference
=
&
instance
instance-
var
=
'
assigned
valeur
'
instance
=
null
//
instance
reference
deviennent
null
var_dump
instance
var_dump
reference
var_dump
assigned
/
*
L'exemple
ci-dessus
va
afficher
NULL
NULL
object
SimpleClass
#
1
1
{
``
var
=
string
30
``
assigned
valeur
}
*
/
11.9
Héritage
classe
peut
hériter
méthodes
membres
d'une
autre
classe
utilisant
mot
clé
extends
déclaration
n'est
possible
d'étendre
multiples
classes
classe
peut
uniquement
hériter
d'une
seule
classe
base
méthodes
membres
hérités
peuvent
être
surchargés
moins
classe
parent
défini
méthode
comme
final
surcharger
suffit
redéclarer
méthode
nom
celui
défini
classe
parent
possible
d'accéder
méthode
membre
surchargé
l'opérateur
parent
Exemple
php
class
ExtendClass
extends
SimpleClass
{
//
Redéfinition
méthode
parent
function
displayVar
{
echo
``
Classe
étendue\n
parent
:displayVar
}
}
extended
=
new
ExtendClass
extended-
displayVar
L'exemple
ci-dessus
va
afficher
Classe
étendue
valeur
défaut
11.10
Visibilité
visibilité
d'une
propriété
d'une
méthode
peut
être
définie
préfixant
déclaration
mot-clé
public
protected
private
éléments
déclarés
publics
public
peuvent
être
utilisés
n'importe
quelle
partie
programme
L'accès
éléments
protégés
protected
limité
classes
héritées
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
109
Cours
initiation
PHP
classe
défini
l'élément
L'accès
éléments
privés
private
uniquement
réservé
classe
définis
Visibilité
membres
classes
membres
doivent
être
définies
comme
publiques
protégées
privées
Exemple
/
*
Déckaration
membres
*
/
php
/
*
*
*
Définition
MyClass
*
/
class
MyClass
{
public
public
=
'Public
'
protected
protected
=
'Protected
'
private
private
=
'Private
'
function
{
echo
echo
echo
}
printHello
this-
private
this-
protected
this-
private
}
obj
=
new
MyClass
echo
obj-
public
//
Fonctionne
echo
obj-
protected
//
Erreur
fatale
echo
obj-
private
//
Erreur
fatale
obj-
printHello
//
Affiche
Public
Protected
Private
/
*
*
*
Définition
MyClass2
*
/
class
MyClass2
extends
MyClass
{
//
peut
redéclarer
éléments
publics
protégés
privés
protected
protected
=
'Protected
'
function
printHello
{
echo
this-
public
echo
this-
protected
echo
this-
private
}
}
obj2
=
new
MyClass2
echo
obj-
public
//
Fonctionne
echo
obj2-
private
//
Indéfini
echo
obj2-
protected
//
Erreur
fatale
obj2-
printHello
//
Affiche
Public
Protected2
non
Private
Note
méthode
déclaration
variable
PHP
4
mot
clé
var
n'est
plus
valide
objets
PHP
5
raisons
compatibilité
variable
déclarée
ainsi
automatiquement
visibilité
publique
erreur
niveau
E_STRICT
générée
Visibilité
méthodes
méthodes
classes
doivent
être
définies
tant
publiques
privées
protégées
méthodes
sans
déclaration
automatiquement
définies
comme
publiques
Exemple
/
*
Déckaration
méthode
*
/
php
/
*
*
*
Définition
MyClass
*
/
class
MyClass
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
110
Cours
initiation
PHP
{
//
contructeurs
doivent
être
publics
public
function
__construct
{
}
//
Déclaration
d'une
méthode
publique
public
function
MyPublic
{
}
//
Déclaration
d'une
méthode
protégée
protected
function
MyProtected
{
}
//
Déclaration
d'une
méthode
privée
private
function
MyPrivate
{
}
//
Celle-ci
publique
function
Foo
{
this-
MyPublic
this-
MyProtected
this-
MyPrivate
}
}
myclass
=
new
MyClass
myclass-
MyPublic
//
Fonctionne
myclass-
MyProtected
//
Erreur
fatale
myclass-
MyPrivate
//
Erreur
fatale
myclass-
Foo
//
Public
Protected
Private
fonctionnent
/
*
*
*
Définition
MyClass2
*
/
class
MyClass2
extends
MyClass
{
//
Celle-ci
publique
function
Foo2
{
this-
MyPublic
this-
MyProtected
this-
MyPrivate
//
Erreur
fatale
}
}
myclass2
=
new
MyClass2
myclass2-
MyPublic
//
Fonctionne
myclass2-
Foo2
//
Public
Protected
fonctionnent
non
Private
L'opérateur
résolution
portée
L'opérateur
résolution
portée
termes
plus
simples
symbole
``
double
deux
points
fournit
moyen
d'accéder
membres
statiques
constants
ainsi
qu'aux
éléments
redéfinis
classe
Lorsque
référencez
éléments
dehors
définition
classe
utilisez
nom
classe
Exemple
/
*
dehors
définition
classe
/
*
php
class
MyClass
{
const
CONST_VALUE
=
'Une
valeur
constante
'
}
echo
MyClass
:CONST_VALUE
Deux
mots-clé
spéciaux
self
parent
utilisés
accéder
membres
méthodes
depuis
définition
classe
Exemple
/
*
depuis
définition
classe
*
/
php
class
OtherClass
extends
MyClass
{
public
static
my_static
=
'variable
statique
'
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
111
Cours
initiation
PHP
public
static
function
doubleColon
{
echo
parent
:CONST_VALUE
``
\n
echo
self
my_static
``
\n
}
}
OtherClass
:doubleColon
Lorsqu'une
classe
étendue
redéfinit
méthode
classe
parente
PHP
n'appelera
méthode
d'origine
appartient
méthode
dérivée
d'appeler
méthode
d'origine
cas
besoin
Cela
également
valable
définitions
constructeurs
destructeurs
surcharges
méthodes
magiques
Exemple
/
*
Appel
d'une
méthode
parent
*
/
php
class
MyClass
{
protected
function
myFunc
{
echo
``
MyClass
:myFunc
\n
}
}
class
OtherClass
extends
MyClass
{
//
Dépassement
définition
parent
public
function
myFunc
{
//
appel
fonction
parent
parent
:myFunc
echo
``
OtherClass
:myFunc
\n
}
}
class
=
new
OtherClass
class-
myFunc
11.11
Abstraction
d'objets
PHP
5
introduit
classes
méthodes
abstraites
n'est
autorisé
créer
instance
d'une
classe
définie
comme
abstraite
Toutes
classes
contenant
moins
méthode
abstraite
doivent
également
être
abstraites
définir
méthode
abstraite
faut
simplement
déclarer
signature
méthode
fournir
aucune
implémentation
classe
implémente
méthode
abstraite
doit
être
définie
visibillité
plus
faible
méthode
abstraite
définie
tant
protégée
fonction
l'implémentant
doit
être
définie
tant
protégée
publique
Exemple
/
*
Exemple
classe
abstraite
*
/
php
abstract
class
AbstractClass
{
//
Force
classe
étendue
définir
méthode
abstract
protected
function
getValue
//
méthode
commune
public
function
printOut
{
print
this-
getValue
}
}
class
ConcreteClass1
extends
AbstractClass
{
protected
function
getValue
{
return
``
ConcreteClass1
}
}
class
ConcreteClass2
extends
AbstractClass
{
protected
function
getValue
{
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
112
Cours
initiation
PHP
return
``
ConcreteClass2
}
}
class1
=
new
ConcreteClass1
class1-
printOut
class2
=
new
ConcreteClass2
class2-
printOut
code
ancien
n'ayant
aucune
classe
fonction
nommée
abstract
devrait
fonctionner
sans
modifications
11.12
Interfaces
interfaces
objet
permettent
créer
code
spécifie
quelles
méthodes
variables
classe
peut
implémenter
sans
avoir
définir
comment
méthodes
gérées
interfaces
définies
utilisant
mot
clé
interface
façon
qu'une
classe
standard
sans
aucun
contenu
méthode
classes
implémentent
interface
doivent
faire
utilisant
mot
clé
implements
doivent
contenir
définitions
toutes
méthodes
listées
l'interface
classes
implémentent
plus
d'une
interface
doivent
faire
listant
chaque
interface
séparées
d'une
virgule
Toutes
méthodes
déclarées
interface
doivent
être
publiques
classe
définissant
interface
n'implémente
toutes
méthodes
l'interface
erreur
fatale
indiquera
quelle
méthode
'
implémentée
Exemple
/
*
Exemple
d'interface
*
/
php
//
Declaration
l'interface
'iTemplate'
interface
iTemplate
{
public
function
setVariable
name
var
public
function
getHtml
template
}
//
Implémentation
l'interface
//
Ceci
va
fonctionner
class
Template
implements
iTemplate
{
private
vars
=
array
public
function
setVariable
name
var
{
this-
vars
name
=
var
}
public
function
getHtml
template
{
foreach
this-
vars
name
=
value
{
template
=
str_replace
'
{
'
name
'
}
'
value
template
}
return
template
}
}
//
Ceci
fonctionnera
//
Fatal
error
Class
BadTemplate
contains
1
abstract
methods
//
and
must
therefore
be
declared
abstract
iTemplate
:getHtml
class
BadTemplate
implements
iTemplate
{
private
vars
=
array
public
function
setVariable
name
var
{
this-
vars
name
=
var
}
}
Daniel
HADJADJ
Daniel
©
dahadjadj
free.fr
-
2005
-
Page
113
