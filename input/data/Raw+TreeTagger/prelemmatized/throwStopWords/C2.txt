PHP
Thierry
Lecroq
Université
Rouen
FRANCE
Thierry
Lecroq
Univ
Rouen
PHP
1
/
64
Plan
1
G´
en´
eralit´
PHP
2
bases
3
formulaires
4
fichiers
5
cookies
6
sessions
7
Perspectives
Thierry
Lecroq
Univ
Rouen
PHP
2
/
64
Pages
dynamiques
Exemple
Exemple
statique
html
head
title
Page
statique
/title
/head
body
2/10/2008
/body
/html
Problème
Afficher
page
différente
fonction
utilisateur
environnement
Solution
Utiliser
langage
programmation
évolué
exemple
PHP
Thierry
Lecroq
Univ
Rouen
PHP
3
/
64
Présentation
Langage
récent
crée
1994
Versions
utilisées
I
4.3
plus
répandue
I
5.0
couche
objet
Langage
script
Langage
interprété
Présence
interpréteur
côté
serveur
Intégré
code
HTML
Syntaxe
proche
Java
Interface
simple
beaucoup
SGBD
Thierry
Lecroq
Univ
Rouen
PHP
4
/
64
Modèle
exécution
1
client
demande
page
PHP
2
serveur
web
exécute
code
page
3
lancement
interpréteur
4
exécution
code
5
serveur
web
renvoie
résultat
exécution
6
client
affiche
résultat
client
impossible
voir
code
PHP
Seul
résultat
exécution
récupéré
client
Thierry
Lecroq
Univ
Rouen
PHP
5
/
64
Premier
exemple
Code
côté
serveur
html
head
title
Page
dynamique
/title
/head
body
php
echo
``
``
echo
date
``
j/m/Y
/body
/html
Thierry
Lecroq
Univ
Rouen
PHP
6
/
64
Premier
exemple
Résultat
côté
client
html
head
title
Page
statique
/title
/head
body
23/10/2008
/body
/html
Thierry
Lecroq
Univ
Rouen
PHP
7
/
64
Mélange
HTML/PHP
PHP
intègre
HTML
entre
php
instructions
finissent
commentaires
entre
/
*
*
/
après
//
#
Manuel
complet
français
http
//www.php.net/manual/fr
Thierry
Lecroq
Univ
Rouen
PHP
8
/
64
Plan
1
G´
en´
eralit´
PHP
2
bases
3
formulaires
4
fichiers
5
cookies
6
sessions
7
Perspectives
Thierry
Lecroq
Univ
Rouen
PHP
9
/
64
variables
variables
préfixées
nom
suit
règles
classiques
Exemple
my_var_03
noms
sensibles
casse
var
=
Var
déclaration
typage
implicite
Exemple
my_var_03
=
54
//
Maintenant
entier
my_var_03
=
``
pif
//
Maintenant
chaine
Attention
fautes
frappes
noms
variables
Thierry
Lecroq
Univ
Rouen
PHP
10
/
64
types
entiers
54
flottants
54.3
chaˆınes
”
54
”
54
booléens
false
true
tableaux
Fonctions
test
isset
var
renvoie
true
var
existe
unset
var
détruit
var
is_integer
var
is_string
var
renvoie
true
var
entier
chaˆıne
Thierry
Lecroq
Univ
Rouen
PHP
11
/
64
commentaires
constantes
commentaires
après
//
ligne
après
#
ligne
entre
/
*
*
/
plusieurs
lignes
Constantes
définit
aide
commande
define
Exemple
define
``
PI
3.14
utilise
directement
sans
echo
PI
Test
existence
defined
``
PI
renvoie
1
defined
``
Pi
renvoie
0
Thierry
Lecroq
Univ
Rouen
PHP
12
/
64
entrées/sorties
entrées
aide
formulaires
sorties
peut
afficher
commande
echo
sans
parenthèses
print
équivalente
echo
peut
faire
affichage
comme
printf
Thierry
Lecroq
Univ
Rouen
PHP
13
/
64
Opérateurs
Arithmétiques
+
-
*
/
++
Affectation
=
.=
+=
-=
*
=
/=
=
Comparaison
==
=
===
=
==
=
Logiques
and
&
&
or
||
xor
Conditionnel
Thierry
Lecroq
Univ
Rouen
PHP
14
/
64
Instructions
conditionnelles
if
if
cond
{
}
elseif
cond
{
}
else
{
}
Thierry
Lecroq
Univ
Rouen
PHP
15
/
64
Instructions
conditionnelles
switch
switch
expr
{
case
VALEUR1
break
case
VALEUR2
break
default
break
}
Thierry
Lecroq
Univ
Rouen
PHP
16
/
64
Instructions
itératives
for
for
init
cond
modif
{
}
while
while
cond
{
}
do
while
do
{
}
while
cond
Thierry
Lecroq
Univ
Rouen
PHP
17
/
64
tableaux
Chaque
élément
tableau
clé
valeur
déclaration
tableau
valeurs
éléments
forcément
toutes
type
Exemple
remplissage
volée
tab
0
=
54
tab
1
=
``
pif
tab
``
paf
=
false
Exemple
remplissage
direct
tab
=
array
54
``
pif
tab
=
array
``
paf
=
false
Thierry
Lecroq
Univ
Rouen
PHP
18
/
64
Parcours
tableaux
Parcours
classique
for
Parcours
spécifique
foreach
tab
value
{
}
foreach
tab
key
=
value
{
}
Thierry
Lecroq
Univ
Rouen
PHP
19
/
64
tableaux
Fonctions
prédéfinies
count
tab
compte
nombre
éléments
initialisés
current
tab
retourne
valeur
élément
cours
key
tab
retourne
indice
élément
cours
reset
tab
déplace
pointeur
vers
premier
élément
list
indice
valeur
each
tab
permettent
parcourir
couples
indice
valeur
indices
consécutifs
next
tab
déplace
pointeur
vers
élément
suivant
prev
tab
déplace
pointeur
vers
élément
précédent
Thierry
Lecroq
Univ
Rouen
PHP
20
/
64
tableaux
Fonctions
prédéfinies
sort
tab
trie
valeurs
réaffecte
indices
asort
tab
trie
valeurs
réaffecte
indices
rsort
tab
id
sort
ordre
inverse
arsort
tab
id
asort
ordre
inverse
ksort
tab
trie
indices
krsort
tab
id
ksort
ordre
inverse
usort
tab
critere
uasort
tab
critere
uksort
tab
critere
trie
selon
citère
Thierry
Lecroq
Univ
Rouen
PHP
21
/
64
chaˆınes
caractères
Délimitées
contenu
non
interprété
Délimitées
``
contenu
interprété
unes
peuvent
contenir
autres
Concaténation
Exemple
pif
=
``
toto
//
Contient
``
toto
paf
=
``
comme
pif
//
Contient
``
comme
toto
pouf
=
comme
pif
//
Contient
``
comme
pif
bim
=
pif.
paf
//
Contient
``
toto
comme
toto
Thierry
Lecroq
Univ
Rouen
PHP
22
/
64
chaˆınes
caractères
Accès
caractère
bim
0
strlen
str
longueur
str
Comparaison
==
===
strcmp
Thierry
Lecroq
Univ
Rouen
PHP
23
/
64
chaˆınes
caractères
str_repeat
ch
nb
répétition
strtolower
ch
minuscules
strtoupper
ch
majuscules
ucwords
ch
initiales
majuscules
ucfirst
ch
1re
lettre
majuscule
ltrim
ch
liste
suppression
caractères
début
rtrim
ch
liste
suppression
caractères
fin
trim
ch
liste
suppression
caractères
début
fin
Thierry
Lecroq
Univ
Rouen
PHP
24
/
64
chaˆınes
caractères
strstr
ch
ch2
recherche
sensible
casse
retourne
tous
caractères
ch
depuis
1re
occurence
ch
jusqu
finn
stristr
ch
ch2
recherche
insensible
casse
substr
ch
indice
extraction
chaˆıne
caractères
substr_count
ch
ssch
décompte
nombre
occurences
sous-chaˆıne
str_replace
oldssch
newssch
ch
remplacement
strpos
ch
ssch
position
Thierry
Lecroq
Univ
Rouen
PHP
25
/
64
fonctions
function
ma_fonc
param1
param2
{
return
}
type
paramètres
valeur
retour
nombre
fixé
paramètres
nom
commence
nom
insensible
casse
résultat
renvoyé
commande
return
seule
valeur
retour
passage
paramètres
valeur
défaut
passage
référence
&
param
Thierry
Lecroq
Univ
Rouen
PHP
26
/
64
fonctions
Example
function
double
{
*
=
2
return
}
x
=
12
echo
``
double
=
``
double
x
``
valeur
=
``
x
echo
``
double
=
``
double
&
x
``
valeur
=
``
x
Thierry
Lecroq
Univ
Rouen
PHP
27
/
64
fonctions
variables
utilisées
intérieur
fonctions
détruites
fin
sauf
définit
static
définit
global
Thierry
Lecroq
Univ
Rouen
PHP
28
/
64
fonctions
Exemple
function
ma_fonc
{
static
appels
=
0
appel
s++
echo
``
ete
appellee
appels
fois
}
function
ma_fonc2
{
global
var
var
=
54
}
var
=
0
ma_fonc2
echo
var
Thierry
Lecroq
Univ
Rouen
PHP
29
/
64
Inclusion
fichiers
require
``
fichier
``
include
``
fichier
``
require_once
``
fichier
``
include_once
``
fichier
``
variantes
include
provoquent
warnings
lieu
erreurs
cas
problème
variantes
_once
incluent
fichier
celui
déjà
inclu
Thierry
Lecroq
Univ
Rouen
PHP
30
/
64
Plan
1
G´
en´
eralit´
PHP
2
bases
3
formulaires
4
fichiers
5
cookies
6
sessions
7
Perspectives
Thierry
Lecroq
Univ
Rouen
PHP
31
/
64
formulaires
entrées
élément
form
form
/form
Thierry
Lecroq
Univ
Rouen
PHP
32
/
64
formulaires
attributs
élément
form
action
permet
préciser
comment
doivent
être
traitées
données
formulaire
côté
serveur
ex
form
action=
traitement.php
form
action=
http//www.site.com/script/traitement.php
form
action=
mailto
Thierry.Lecroq
univ-rouen.fr
traitement
fichier
lui-même
form
action=
=
_SERVER
PHP_SELF
method
méthode
envoi
données
vers
serveur
I
get
utilisée
défaut
données
transmises
visibles
utilisateur
ex
http//www.site.com/script/traitement.php
prenom=Thierry
&
nom=Lecroq
I
post
données
non
visibles
navigation
Précédent/Suivant
Thierry
Lecroq
Univ
Rouen
PHP
33
/
64
éléments
descendants
élément
form
fieldset
délimite
groupes
composants
actifs
contient
élément
legend
Bouton
envoi
input
type=
submit
value=
Envoyer
name=
soumission1
tabindex=
5
accesskey=
E
title=
Bouton
envoi
/
button
type=
submit
name=
soumission2
tabindex=
2
accesskey=
B
title=
Bouton
envoi
Envoyer
/button
Thierry
Lecroq
Univ
Rouen
PHP
34
/
64
éléments
descendants
élément
form
image
button
type=
submit
name=
soumission2
tabindex=
2
accesskey=
B
title=
Bouton
envoi
Envoyer
/button
Thierry
Lecroq
Univ
Rouen
PHP
35
/
64
éléments
descendants
élément
form
bouton
remise
zéro
input
type=
reset
value=
Effacer
name=
effacement
/
Thierry
Lecroq
Univ
Rouen
PHP
36
/
64
saisie
texte
saisie
texte
uniligne
label
nom
/label
input
type=
text
name=
nom
size=
10
maxlength=
25
value=
Lecroq
onclick=
this.value=
/
Autres
attributs
disabled=
disabled
readonly=
readonly
onfocus=
script
onchange=
script
Thierry
Lecroq
Univ
Rouen
PHP
37
/
64
Exemple.xhmtl
Exemple
form
method=
post
action=
exemple.php
fieldset
legend
Donn
&
eacute
personnelles
/legend
label
Nom
/label
input
type=
text
name=
nom
maxlength=
25
/
/br
/br
label
Pr
&
eacute
nom
/label
input
type=
text
name=
prenom
value=
pr
&
eacute
nom
maxlength=
25
onclick=
this.value=
/
/br
/br
label
Adresse
/label
input
type=
text
name=
adresse
maxlength=
60
/
label
Code
postal
/label
input
type=
text
name=
codePostal
size=
5
maxlength=
5
/
label
Ville
/label
input
type=
text
name=
ville
maxlength=
25
/
input
type=
submit
name=
envoi
value=
Envoyer
/
/fieldset
/form
Thierry
Lecroq
Univ
Rouen
PHP
38
/
64
Exemple.php
Exemple
table
php
foreach
_POST
cle
=
valeur
{
echo
``
tr
td
cle.
/td
td
valeur
``
/td
/tr
}
/table
Thierry
Lecroq
Univ
Rouen
PHP
39
/
64
Saisies
Saisie
mot
passe
type=
password
Saisie
texte
long
élément
textarea
attributs
cols=
largeur
zone
rows=
hauteur
visible
zone
Exemple
textarea
name=
commentaires
cols=
70
rows=
10
onclick=
this.value=
Tapez
commentaires
ici
/textarea
Thierry
Lecroq
Univ
Rouen
PHP
40
/
64
boutons
radio
cases
cocher
input
type=
radio
name=
nom1
value=
valeur1
checked=
checked
/
input
type=
radio
name=
nom2
value=
valeur2
/
input
type=
checkbox
name=
nom3
value=
valeur3
checked=
checked
/
input
type=
checkbox
name=
nom4
value=
valeur4
/
Thierry
Lecroq
Univ
Rouen
PHP
41
/
64
listes
sélection
select
name=
nom
option
value=
valeur1
Option
1
/option
option
value=
valeur2
Option
2
/option
option
value=
valeurN
Option
/option
/select
attributs
size=
nombre
lignes
visibles
lors
affichage
1
défaut
multiple=
multiple
plusieurs
choix
possibles
liste
maintenir
touche
Ctrl
enfoncée
Thierry
Lecroq
Univ
Rouen
PHP
42
/
64
Groupes
option
Exemple
select
name=
nom
optgroup
label=
Groupe
1
option
value=
valeur1
Valeur
1
/option
option
value=
valeur2
Valeur
2
/option
/optgroup
optgroup
label=
Groupe
2
option
value=
valeur3
Valeur
3
/option
option
value=
valeur4
Valeur
4
/option
option
value=
valeur5
Valeur
5
/option
/optgroup
/select
Thierry
Lecroq
Univ
Rouen
PHP
43
/
64
transfert
fichiers
form
action=
fichier.php
method=
post
enctype=
multipart/form-data
input
type=
file
name=
fichier
accept=
type
MIME
côté
serveur
php
_FILES
tableau
Thierry
Lecroq
Univ
Rouen
PHP
44
/
64
Récapitulatif
différents
types
balises
input
text
zone
texte
seule
ligne
password
idem
affichage
étoiles
file
permet
sélection
fichier
checkbox
case
cocher
button
bouton
simple
action
sans
javascript
hidden
champ
texte
caché
radio
bouton
option
reset
bouton
remise
zéro
submit
bouton
soumission
Thierry
Lecroq
Univ
Rouen
PHP
45
/
64
Plan
1
G´
en´
eralit´
PHP
2
bases
3
formulaires
4
fichiers
5
cookies
6
sessions
7
Perspectives
Thierry
Lecroq
Univ
Rouen
PHP
46
/
64
fichiers
Ouverture
fd=fopen
chemin
mode
mode
r
lecture
read
w
écriture
write
ajout
append
+
lecture/écriture
Lecture
caractère
caractère
car=fgetc
fd
Thierry
Lecroq
Univ
Rouen
PHP
47
/
64
fichiers
Lecture
lignes
ligne=fgets
fd
longueur
Lecture
octets
v=fread
fd
nboctets
taille
fichier
filesize
chemin
Thierry
Lecroq
Univ
Rouen
PHP
48
/
64
fichiers
Écriture
fwrite
fd
message
longueur-maximale
fputs
Fin
fichier
feof
fd
Fermeture
fclose
fd
Existence
fichier
file-exists
chemin
Thierry
Lecroq
Univ
Rouen
PHP
49
/
64
Plan
1
G´
en´
eralit´
PHP
2
bases
3
formulaires
4
fichiers
5
cookies
6
sessions
7
Perspectives
Thierry
Lecroq
Univ
Rouen
PHP
50
/
64
cookies
conçus
Netscape
fichiers
texte
courts
stockés
navigateur
côté
client
analogie
carte
identité
cookie
sans
durée
expiration
mémoire
vive
cookie
durée
expiration
mémoire
secondaire
Thierry
Lecroq
Univ
Rouen
PHP
51
/
64
Exemple
php
setcookie
truc
machin
html
head
title
Titre
/title
/head
body
p
cookie
&
eacute
&
eacute
envoy
&
eacute
/p
/body
/html
Thierry
Lecroq
Univ
Rouen
PHP
52
/
64
Exemple
html
head
title
Titre
/title
/head
body
php
if
isset
_COOKIE
truc
{
echo
p
cookie
&
eacute
&
eacute
envoy
&
eacute
/p
echo
p
contenu
echo
_COOKIE
truc
echo
/p
}
else
{
echo
``
p
Aucun
cookie
nom
truc
&
eacute
&
eacute
re
&
ccedil
u
/p
}
/body
/html
Thierry
Lecroq
Univ
Rouen
PHP
53
/
64
cookies
Suppression
cookie
setcookie
nom
Modification
valeur
cookie
setcookie
nom
nouvelle
valeur
Validité
date
expiration
setcookie
nom
valeur
timestamp
timestamp
nombre
secondes
depuis
1erjanvier
1970
mktime
heures
minutes
secondes
mois
jour
an
Thierry
Lecroq
Univ
Rouen
PHP
54
/
64
Plan
1
G´
en´
eralit´
PHP
2
bases
3
formulaires
4
fichiers
5
cookies
6
sessions
7
Perspectives
Thierry
Lecroq
Univ
Rouen
PHP
55
/
64
Persistence
données
veut
parfois
garder
information
entre
plusieurs
pages
Login
/
Password
Préférences
navigation
Sélection
produits
acheter
panier
utilise
sessions
PHP
cookies
permettent
stocker
informations
côté
client
sessions
permettent
stocker
informations
côté
serveur
Elles
identifiées
numéro
reste
valide
tant
visiteur
reste
connecté
numéro
transmis
serveur
URL
cookie
données
placent
récupèrent
_SESSION
comme
formulaires
Thierry
Lecroq
Univ
Rouen
PHP
56
/
64
Utilisation
sessions
session
existe
dès
crée
jusqu
détruite
Création
réouverture
session_start
Destruction
session_destroy
Note
sessions
autodétruisent
après
certain
temps
généralement
30
min
Thierry
Lecroq
Univ
Rouen
PHP
57
/
64
Thierry
Lecroq
Univ
Rouen
PHP
58
/
64
Exemple
utilisation
html
head
title
Connexion
site
/title
/head
body
form
method=
post
action=
verifLogin.php
label
Login
/label
input
type=
text
name=
login
br/
label
Mot
passe
/label
input
type=
password
name=
password
br/
input
type=
submit
name=
submit
value=
Login
/form
/body
/html
Thierry
Lecroq
Univ
Rouen
PHP
59
/
64
php
//
démarre
session
session_start
//
effectue
traitement
condition
//
informations
effectivement
postées
if
isset
_POST
&
&
empty
_POST
login
&
&
empty
_POST
password
{
extract
_POST
//
création
variables
login
mdp
submit
//
va
chercher
mot
passe
afférent
login
//
Établir
connexion
sélectionner
base
connexion=mysql_connect
``
localhost
mysql_select_db
``
nom_de_la_base
sql
=
``
SELECT
pseudo
age
sexe
ville
mdp
FROM
user
WHERE
login
=
login
req
=
mysql_query
sql
or
die
Erreur
SQL
br
/
sql
//
vérifie
utilisateur
existe
bien
if
mysql_num_rows
req
0
{
Thierry
Lecroq
Univ
Rouen
PHP
60
/
64
data
=
mysql_fetch_assoc
req
//
vérifie
mot
passe
correct
if
password
==
data
mdp
{
loginOK
=
true
}
else
{
loginOK
=
false
}
}
//
Fermeture
connexion
mysql_close
connexion
}
//
login
validé
met
données
sessions
if
loginOK
{
_SESSION
pseudo
=
data
pseudo
_SESSION
age
=
data
age
_SESSION
sexe
=
data
sexe
_SESSION
ville
=
data
ville
}
else
{
echo
erreur
survenue
veuillez
réessayer
}
Utilisation
php
//
appelle
session
session_start
//
affiche
phrase
résumant
infos
utilisateur
courant
echo
Pseudo
_SESSION
pseudo
br/
Age
_SESSION
age
br/
Sexe
_SESSION
sexe
br/
Ville
_SESSION
ville
br/
Thierry
Lecroq
Univ
Rouen
PHP
61
/
64
Déconnexion
Code
page
logout.php
php
//
appelle
session
session_start
//
écrase
tableau
session
_SESSION
=
array
//
détruit
session
session_destroy
Thierry
Lecroq
Univ
Rouen
PHP
62
/
64
Plan
1
G´
en´
eralit´
PHP
2
bases
3
formulaires
4
fichiers
5
cookies
6
sessions
7
Perspectives
Thierry
Lecroq
Univ
Rouen
PHP
63
/
64
XHTML
2.0
href
peut
être
attribut
tout
élément
acronym
b
i
small
big
tt
disparaissent
hr
remplacé
separator
attribut
role
permet
ajouter
informations
sémantiques
éléments
incorporation
RDF
Ressource
Description
Format
section
h
plutôt
hn
concurrence
X/HTML
5
Thierry
Lecroq
Univ
Rouen
PHP
64
/
64
Document
Outline
Généralités
PHP
bases
formulaires
fichiers
cookies
sessions
Perspectives
