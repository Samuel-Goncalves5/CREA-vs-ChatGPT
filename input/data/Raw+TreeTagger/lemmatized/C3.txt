cours|cour
PHP
verser
4.x
5.x
Sébastien
ROHAUT
tabler
matière
introduction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
définition
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
historique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilisation
pratique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
page
statique
vs
page
dynamique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
script
CGI
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
page
dynamique
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
pourquoi
préférer
PHP
de
autre
langage
comme
ASP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
devoir
déjà
connaître
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
nécessaire
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
nécessaire
client
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
respect
standard
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
base
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
syntaxe
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
intégration
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
séparateur
de
instruction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
bloc
de
instruction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
commentaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travailler
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
déclarer
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
portée
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variable
prédéfinie
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
dynamique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
type
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
booléen
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
entier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
virgule
flottant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
chaîne
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
constante
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
obtenir
type
de
un
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
définir
supprimer
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
précédence
opérateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
arithmétique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
de
assignation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
bit
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
comparaison
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
de
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
de
exécution
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
de
incrémentation
/
décrémentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
logique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
notion
de
expression
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
structure
contrôle
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
if
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
while
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
while
classique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
do
while
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
for
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
foreach
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
break
continu
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
switch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
return
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
require
include
_once
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
syntaxe
porter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
argument
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
valeur
retour
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
interne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
formulaire
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
GET
POST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
récupération
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
récupération
direct
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
utiliser
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
date
heure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
localisation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
récupérer
date
le
heure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
date
local
strftime
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
retour
tableau
getdate
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
heure
localtime
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
récupérer
ne
importer
quel
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
outil
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PhpMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
MysqlCC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
utilisateur
droit
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
modifier
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
type
numérique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
type
entier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
type
réel
flottant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
booléen
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
type
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
type
char
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
type
TEXT
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
type
ENUM
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
typer
set
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
type
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
format
supporter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
DATETIME
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
typer
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
TIMESTAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
TIME
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
YEAR
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
création
syntaxe
SQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
type
table
MyISAM
InnoDB
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
index
FULLTEXT
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
création
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
recherche
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
recherche
booléen
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
MySQL
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
connexion
baser
donner
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
connexion
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
choix
de
un
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fermeture
de
un
connexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
séquencer
complet
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
exécuter
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
nombre
ligner
affecter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
nombre
ligner
retourner
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
récupérer
résultat
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
insertion
auto-incrément
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
récupération
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
système
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travail
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ouverture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
lecture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
fgets
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
fread
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fscanf
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fgetc
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
fgetss
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fgetcsv
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
renvoyer
fichier
sortir
standard
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Ecriture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
déplacement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
fseek
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
ftell
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
rewind
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fin
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fermeture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travail
répertoire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
répertoire
actuel
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
déplacer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ouvrir
lister
fermer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
récupérer
tout
entrée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
travail
système
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
information
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
action
fichier
répertoire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Upload
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
travail
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
coder
HTML
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
gestion
caractère
verrouiller
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
balise
caractère
spécial
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
texte
général
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
découper
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
S
.
ROHAUT
courir
programmation
PHP
pager
/
rechercher
comparer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
session
cookies
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
cookies
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
création
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accès
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
suppression
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
identification
HTTP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
connexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
déconnexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
session
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilisation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
ouverture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
variable
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
expiration
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
changer
le
accès
défaut
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
image
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Pré-requis
important
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
créer
image
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
type
possible
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
création
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
nouveau
image
dynamique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
récupération
de
un
image
existant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
publication
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
chargement
via
autre
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travailler
image
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
récupérer
information
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
couleur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
dessin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
remplissage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
point
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
ligne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
rectangle
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
cercler
ellipse
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
polygone
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
texte
simple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
programmation
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
structure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
création
de
un
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accès
membre
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
opérateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variable
protection
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
4.x
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
5.x
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
protection
variable
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
attribut
méthode
statique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
constant
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
héritage
polymorphisme
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
mots-clé
parent
self
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
constructeur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
constructeur
classe
dériver
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
destructeur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
affectation
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
code
commun
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
comparaison
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
nouveauté
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
__autoload
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
classe
abstraire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
classe
méthode
variable
final
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
interface
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
gestion
dynamique
méthode
attribut
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
itération
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
type
hinting
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exception
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
try
catch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
déclenchement
throw
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
classe
exception
classe
personnaliser
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
erreur
exception
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exception
défaut
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
sauvegarder
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
cas
de
un
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
autre
cas
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
introduction
définition
PHP
langage
script
HTML
exécuter
côté
serveur
vouloir
dire
PHP
Hypertext
Preprocessor
syntaxe
largement
inspirer
langage
java
Perl
amélioration
spécifique
boire
langage
de
écrire
rapidement
page
HTML
dynamique
historique
le
origine
PHP
remonter
quand
Rasmus
Lerdorf
créer
PHP
/
fi
librairie
script
Perl
utiliser
publication
CV
site
personnel
fur
mesurer
évolution
librairie
porter
agrémenter
nouveau
fonctionnalité
créer
page
dynamique
simple
web
accéder
quelque
source
donner
PHP
/
fi
signifier
Personal
home
page
/
Forms
Interpreter
PHP
/
fi
sort
toujours
développer
seul
personne
ce
être
succès
site
nom
domaine
dire
la|le
utiliser
supporter
contributeur
affluent
PHP
sortir
juin
ce
être
premier
version
développer
conjointement
Rasmus
Lerdorf
Andi
Gutmans
Zeev
Suraski
entièrement
réécrire
version
précédent
trop
lent
application
commercial
outre
performance
PHP
modulaire
extensible
permettre
greffer
api
supplémentaire
'
manquer
support
nombreux
baser
donner
format
protocole
syntaxe
plus
cohérent
support
basique
le
objet
installer
parc
mondial
serveur
web
dizaine
millier
développeurs
centaine
millier
site
moteur
PHP
repenser
afin
de
en
améliorer
performance
application
complexe
de
augmenter
encore
modularité
nouveau
moteur
voir
jour
appeler
zend
Engine
contraction
Zeev
Andi
PHP
sortir
officiellement
mai
apporter
performance
accroître|accroire
support
plusieurs
serveur
web
session
sécurité
accroître|accroire
ce
être
actuellement
dernier
version
stable
compter
PHP
actuellement
version
beta
cycle
pouvoir
durer
plusieurs
mois|moi
boire
PHP
amélioration
performance
moteur
zend
zend
Engine
modèle
objet
étendre
très
proche
C++
compatibilité
accroître|accroire
nouveau
standard
ancien
RPC
XML
.NET
utilisation
pratique
–
forum
messagerie
–
commerce
électronique
–
banque
/
compte
ligner
–
publication
ligner
–
moteur
recherche
–
tout
vouloir
sauf
jeu
résumer
quelque
sigle
aller
utiliser
suite
•
HTML
Hypertext
Markup
Language
•
PHP
People
Hate
Perl
non
PHP
Hypertext
PreProcessor
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
SQL
Structured
Query
Language
•
MySQL
serveur
baser
donner
outil
accéder
•
LAMP
Linux
–
apache
–
MySQL
–
PHP
quatuor
gagner
serveur
web
apache
PHP
MySQL
Linux
page
statique
vs
page
dynamique
page
statique
pager
écrire
directement
HTML
pouvoir
éventuellement
incorporer
code
Javascript
donner
semblant
'
dynamisme
'
uniquement
côté
navigateur
donner
local
traitement
plus
lourd
nécessiter
le
accès
baser
donner
formatage
tableau
fonction
résultat
rechercher
pousser
graphisme
falloir
passer
page
dynamique
langage
exécuter
côté
serveur
ASP
serveur
Microsoft
/
IIS
Perl
PHP
script
CGI
PHP
pouvoir
être
utiliser
comme
langage
CGI
rappel
script
programme
CGI
programmer
comme
autre
sortie
dédier
navigateur
exemple
programmer
shell
Perl
sortir
HTML
PHP
langage
script
comme
autre
pouvoir
la|le
utiliser
cas
ne
être
forcément
mieux
page
dynamique
PHP
PHP
langage
Server
Side
côté
serveur
lors
chargement
de
un
page
PHP
ce
être
serveur
aller
lire
interpréter
exécuter
code
puis
renvoyer
résultat
généralement
sous
forme
coder
HTML
navigateur
ainsi
navigateur
le
utilisateur
voir
jamais
véritable
code
PHP
exécuter
plus
résultat
pager
web
classique
HTML
besoin
de
installer
client
composant
spécifique
java
'
notion
vitesse
de
exécution
côté
client
celui
serveur
prépondérant
pourquoi
préférer
PHP
de
autre
langage
comme
ASP
ASP
ne
être
entièrement
langage
puisque
ASP
vouloir
dire
actif
Server
pager
ASP
disposer
bien
entendre
propre
api
pouvoir
être
accessible
via
autre
langage
se
agir
de
utiliser
langage
quelconque
créer
page
dynamique
nativement
disponible
IIS
sous
Windows
la|le
être
défaut
autre
système
serveur
web
comme
apache
exister
cependant
module
compatibilité
ASP
apache
comme
apache
:
ASP
reprendre
api
ASP
étendre
programmation
PERL
sous
Windows
coder
ASP
faire
généralement
VBScript
Jscript
ce
être
aussi
possible
sous
Unix
/
Linux
apache
falloir
alors
tourner
vers
solution
commercial
Sun
One
ASP
instant
ASP
sous
S
.
ROHAUT
courir
programmation
PHP
pager
/
Windows
ASP
VBScript
utiliser
le
accès
ActiveX
composant
bien
pratique
véritable
gruyère
sécurité
ne
exister
jour
portager
ActiveX
de
autre
système
Windows
PHP
disponible
tout
plate-forme
permettre
faire
chose
sinon
plus
ASP
VBScript
ne
oublier
PHP
disposer
plus
api|apis
devoir
déjà
connaître
devoir
connaître
HTML
ainsi
que
un
langage
programmation
procédural
exemple
connaissance
basique
SQL
pouvoir
être
nécessaire
aborder
nécessaire
serveur
PHP
servir
seulement
faire
page
dynamique
ce
être
langage
interpréter
titre
Perl
python
TCL
capable
lancer
script
intéractif
non
pouvoir
utiliser
PHP
créer
interface
graphique
extension
GTK
minimum
nécessaire
vital
apprendre
PHP
le
interpréteur
PHP
lui
même
environnement
supporter
Unix
Windows
mac
parler
LAMP
voir
bien
référencer
système
Linux
serveur
Web
apache
serveur
baser
donner
MySQL
interpréteur
PHP
version
PHP
permettre
fonctionner
IIS
MySQL
exister
aussi
Windows
pouvoir
utiliser
architecture
WIMP
Windows
IIS
MySQL
PHP
WAMP
Windows
apache
MySQL
PHP
ajouter
PHP
IIS
ce
être
laisser
porter
ouvrir
tout
vent
préférer
second
solution
distribution
Linux
disposer
déjà
nécessaire
le
architecture
LAMP
paramétrage
assez
simple
plus
mode
user_mod
apache
permettre
chaque
utilisateur
créer
site
web
répertoire
spécifique
répertoire
personnel
sous
Windows
ce
être
déjà
peu
plus
complexer
mettre
œuvre
manuellement
employer
distribution
tout
faire
meilleur
nommer
EasyPHP
verser
meilleur
développer
pouvoir
ainsi
développer
site
sous
Windows
porter
tel
quel
serveur
Unix
nécessaire
client
développer
suffire
de
un
simple
éditeur
valoir
mieux
préférer
éditeur
plus
évoluer
supporter
coloration
syntaxique
quelque
fonction
évoluer
le
éditeur
HAPEdit
parfaire
développer
PHP
le
accès
base
MySQL
pouvoir
faire
depuis
navigateur
phpMyAdmin
depuis
interface
MySQLCC
encore
DBDesigner
conception
test
simple
navigateur
respecter
standard
web
respect
standard
W3C
le
organisme
international
faire
loi
monde
standard
web
définir
sérier
norme
HTML
XML
XHTML
CSS
etc
.
pourquoi
respecter
standard
ce
être
garantir
de
un
bon
fonctionnement
bon
affichage
maniérer
identique
page
S
.
ROHAUT
courir
programmation
PHP
pager
/
tout
navigateur
supporter
standard
bon
déclaration
entêter
HTML
navigateur
IE6
Mozilla
Opera
Galeon
Konqueror
etc
compatibles
standard
le
utilisation
baliser
propriétaire
navigateur
blink
exemple
vbscript
sous
IE
proscrire
dernier
norme
HTML
valider
HTML
strict
XHTML
terme
remplacer
définitivement
HTML
aussi
bien
supporter
dernier
norme
CSS
cependant
cas
préférer
CSS-1
car
seul
Opera
supporter
CSS-2
prendre
le
habitude
quand
ce
être
possible
tester
site
deux
trois
navigateur
IE6
car
ce
être
plus
répandre
Opera
car
extrêmement
respectueux
standard
Mozilla
car
ce
être
challenger
probablement
remplacer
terme
IE
ne
avoir
plus
de
évolution
version
avant
LongHorn
S
.
ROHAUT
courir
programmation
PHP
pager
/
base
présentation
PHP
langage
très
souple
prendre
source
divers
langage
comme
Perl
C++
possible
de
avoir
plusieurs
style
script
programmation
classique
dire
procédural
programmation
objet
programmation
bordélique
souplesse
permettre
très
grand
liberté
peu
comme
Perl
le
inconvénient
que
on
pouvoir
très
vite
obtenir
code
illisible
bordélique
cela
marche
très
bien
prendre
le
habitude
commenter
coder
la|le
indenter
placer
que
un
instruction
ligner
syntaxe
base
intégration
HTML
pager
php
porter
le
extension
.php
pager
PHP
pouvoir
être
entièrement
programmer
PHP
mélanger
coder
html
PHP
langage
Embedded
HTML
ce
être
dire
que
il
apparaître
ne
importer
quel
endroit
page
HTML
cela
place
baliser
particulier
php
pouvoir
aussi
utiliser
balise
script
language
=
php
/
script
premier
forme
préférable
plus
simplicité
compatibilité
XHTML
écrire
page
HTML
lequel
intégrer
code
PHP
html
head
title
titre
/
title
/
head
body
php
echo
`
`
hello
World
`
`
/
body
/
html
code
HTML
générer
suivant
html
head
title
titre
/
title
/
head
body
hello
World
/
body
/
html
le
utilisation
baliser
le
intégration
coder
page
web
très
souple
permettre
jongler
facilement
code
PHP
coder
HTML
php
if
expression
{
strong
ceci
vrai
.
/
strong
php
}
else
{
strong
ceci
faux
.
/
strong
php
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
séparateur
de
instruction
comme
instruction
terminer
point-virgule
noter
balise
fermant
impliquer
fin
de
un
instruction
php
echo
`
`
ceci
test
php
echo
`
`
ceci
test
bloc
de
instruction
bloc
de
instruction
place
entre
accolade
{
}
bloc
de
instruction
pouvoir
contenir
code
ne
importer
quel
longueur
considérer
rester
code
comme
instruction
unique
ce
être
expression
valeur
pouvoir
assigner
bloc
faire
calcul
commentaire
commentaire
se
utiliser
comme
C++
/
*
.
.
*
/
/
/
noter
que
un
balise
fermant
ferme
commentaire
cours|cour
php
/
*
echo
`
`
salut
*
/
/
/
commentaire
ligner
S
.
ROHAUT
courir
programmation
PHP
pager
/
travailler
variable
déclarer
variable
variable
commencer
dollar
suivre
de
un
nom
variable
variable
typer
moment
création
attention
PHP
sensible
casser
var
Var
même
variable
voici
régler
respecter
•
variable
pouvoir
commencer
lettre
•
variable
pouvoir
commencer
souligner
underscore
_
•
variable
devoir
commencer
chiffre
/
/
déclaration
règle
var
=
/
/
var
Var
=
/
/
Var
_toto
=
'
salut
'
/
/
Ok
3petitscochons
=
/
/
invalide
commencer
chiffre
type
dépendre
valeur
contexte
de
utilisation
pouvoir
forcer
cast
ponctuellement
variable
type
donné
se
appeler
transtypage
comme
type
variable
pouvoir
changer
fonction
utilisation
contexte
PHP
effectuer
automatiquement
transtypage
pouvoir
parfois
fournir
résultat
surprenant
affecter
valeur
variable
signe
égal
=
sans
espace
avant
après
/
/
déclaration
transtypage
var
=
'
'
/
/
chaîne
var+
=
/
/
var
maintenant
entier
var
=
var+0.3
/
/
var
maintenant
réel
type
double
var
=
+
`
`
petit
cochon
/
/
var
entier
valoir
défaut
variable
assigner
valeur
valeur
assigner
variable
recopier
variable
PHP
pouvoir
aussi
travailler
référence
variable
pouvoir
référencer
autre
variable
dire
alors
variable
devenir
alias
pointe
autre
variable
assigner
référence
utiliser
signe
&
devant
variable
assigner
var
=
ref
=
&
var
/
/
ref
devenir
référence
var
echo
ref
/
/
affiche
var
=
echo
ref
/
/
affiche
ref
=
echo
var
/
/
affiche
attention
valeur
constant
NULL
insensible
casser
affecter
valeur
NULL
variable
signifier
puis
affecter
valeur
portée
variable
porter
de
un
variable
dépendre
contexte
variable
déclarer
script
hors
de
un
fonction
global
défaut
porter
limiter
script
courir
ainsi
que
au
code
éventuellement
inclure
include
require
ne
être
accessible
fonction
de
autre
script
S
.
ROHAUT
courir
programmation
PHP
pager
/
avoir
=
/
/
global
défaut
function
foo
{
echo
/
/
ce
être
variable
local
fonction
ne
afficher
rien
}
accéder
variable
global
fonction
falloir
utiliser
mot-clé
global
avoir
=
/
/
global
défaut
b
=
/
/
idem
function
foo
{
global
b
/
/
récupérer
variable
global
b
=
a+
b
}
echo
b
/
/
affiche
PHP
accepter
variable
statique
comme
variable
statique
perdre
valeur
quand
sortir
de
un
fonction
function
test_static
{
static
avoir
=
echo
/
/
chaque
passage
fonction
a++
}
variable
prédéfinie
PHP
disposer
de
un
grand
nombre
variable
prédéfinie
variable
généralement
typer
scalaire
tableau
elle
souvent
typer
superglobal
ce
être
dire
accessible
depuis
ne
importer
sans
notion
porter
voici
quelque
tableau
prédéfinir
voir
point
tableau
comprendre
utilisation
•
_GLOBALS
tableau
variable
global
clé
nom
variable
•
_SERVER
variable
fourni
serveur
web
exemple
'
SERVER_NAME
'
•
_GET
variable
fournir
HTTP
méthode
GET
formulaire
•
_POST
idem
méthode
POST
•
_COOKIE
variable
fourni
cookie
•
_FILES
variable
téléchargement
de
un
fichier
upload
•
_ENV
accès
variable
de
environnement
serveur
•
_SESSION
variable
session
voir
cours|cour
session
noter
avant
version
PHP
variable
passer
méthode
GET
POST
formulaire
URL
ainsi
suite
automatiquement
créer
script
destination
http
/
/
dns-remplacer
/
dns-remplacer
action
=
enr
créer
automatiquement
variable
action
prendre
valeur
'
enr
'
input
type
=
hidden
name
=
cacher
valoir
=
toto
créer
page
cibler
action
form
variable
cacher
valeur
`
`
toto
ne
être
plus
automatique
depuis
PHP
falloir
passer
tableau
superglobal
ci-dessus
pouvoir
cependant
passer
outre
modifiant
valeur
register_globals
dns-remplacer
S
.
ROHAUT
courir
programmation
PHP
pager
/
variable
dynamique
variable
dynamique
utiliser
valeur
de
un
variable
comme
nom
de
un
autre
variable
utiliser
variable
dynamique
rajouter
devant
nom
premier
variable
avoir
=
var
avoir
=
/
/
avoir
=
equivaut
faire
var
=
echo
/
/
affiche
var
echo
/
/
affiche
echo
var
/
/
affiche
attention
tableau
éviter
tout
ambiguïté
préférable
placer
variable
entre
accolade
type
variable
booléen
booléen
pouvoir
prendre
deux
valeur
TRUE
FALSE
deux
constante
TRUE
FALSE
pouvoir
être
utiliser
sans
aucun
distinction
casser
différence
entre
majuscule
minuscule
var
=
FALSE
/
/
FALSE
False
false
var2
=
True
/
/
TRUE
True
true
tout
type
pouvoir
être
convertir
booléen
voici
cas
variable
retourner
FALSE
booléen
suivant
type
•
booléen
FALSE
•
entier
zéro
•
nombre
flotter
zéro
•
chaîner
chaîne
vide
`
`
`
`
zéro
•
tableau
tableau
vide
sans
aucun
élément
•
objet
objet
vide
sans
aucun
élément
•
constant
spécial
NULL
tout
autre
cas
valeur
retourner
TRUE
attention
considérer
comme
vrai
TRUE
comme
test
condition
structure
contrôle
effectuer
convertion
booléen
condition
if
var
=
=
true
echo
`
`
ok
if
var
echo
`
`
ok
/
/
identique
entier
entier
le
ensemble
nombrer
naturel
ce
être
dire
virgule
positif
négatif
entier
généralement
coder
bit
cela
dépendre
le
architecture
affecter
nombre
entier
dépasser
capacité
variable
celui
-ci
transformer
réel
float
enfin
'
notion
de
entier
non
signer
lors
conversion
de
un
booléen
entier
FALSE
devenir
TRUE
devenir
lors
conversion
de
un
nombre
virguler
flottant
nombre
arrondir
valeur
inférieur
se
il
S
.
ROHAUT
courir
programmation
PHP
pager
/
positif
supérieur
se
il
négatif
conversion
vers
zéro
conversion
depuis
chaîne
voir
type
virgule
flottant
partir
ici
nombre
réel
double
float
ce
être
dire
nombre
virgule
virguler
spécifier
point
puissance
se
exprimer
e
E
var
=
var2
=
1.1e4
/
/
*
10^4
chaîne
caractère
chaîne
séquencer
caractère
PHP
travailler
ASCII
caractère
supporter
encore
format
Unicode
prévu
version
'
limite
théorique
tailler
chaîne
distinguer
trois
syntaxe
utiliser
chaîne
•
guillemet
simple
'
'
apostrophe
comme
shell
tout
caractère
inclure
chaîner
sortir
tel
quel
sans
interprétation
devoir
afficher
guillemet
simple
falloir
la|le
échapper
\
'
•
guillemet
double
`
`
certain
séquence
caractère
interpréter
variable
substituer
remplacer
valeur
•
HereDoc
identique
HereScripts
Shell
texte
saisir
jusqu
'
délimiteur
spécifier
placer
variable
voici
tableau
issu
documentation
PHP
séquence
pouvoir
être
utiliser
guillemet
double
séquencer
valeur
\n
nouveau
ligner
linefeed
LF
0x0A
ASCII
\r
retour
ligner
carriage
return
CR
0x0D
ASCII
\t
tabulation
horizontal
HT
0x09
ASCII
\\
Antislash
\
caractère
\
guillemet
double
séquencer
caractère
permettre
rechercher
nombre
\
{
,
}
notation
octal
\x
0-9A-Fa-
séquencer
caractère
permettre
rechercher
nombre
f
{
,
}
notation
hexadécimal
echo
'
attention
l\'abus
d\'alcool
dangereux
'
var
=
echo
`
`
valeur
\
var
var\n
toto
=
fin
S
.
ROHAUT
courir
programmation
PHP
pager
/
salut
ami
comment
cela
aller
fin
echo
toto
ne
importer
quel
variable
pouvoir
être
afficher
chaîne
comme
ci-dessus
attention
deux
variable
nom
proche
falloir
alors
utiliser
accolade
{
}
comme
shell
enfin
pouvoir
accéder
ne
importer
quel
caractère
chaîne
indiquer
position
commencer
zéro
entre
deux
accolade
coller
juste
après
nom
variable
fic
=
'
dns-remplacer
'
fic
=
'
riri
fifi
loulou
'
echo
`
`
fic
{
fic
}
/
/
afficher
riri
fifi
loulou
dns-remplacer
echo
`
`
fic
{
}
/
/
affiche
o
pouvoir
facilement
concaténer
deux
chaîne
le
opérateur
point
pouvoir
ajouter
texte
chaîner
le
opérateur
point
égal
.
=
str
=
salut
ami
\n
str
.
=
comment
cela
aller
`
`
/
/
`
`
salut
ami
\nComment
cela
aller
str2
=
str
`
`
\n
/
/
`
`
salut
ami
\nComment
cela
aller
\n
devoir
utiliser
chaîne
caractère
comme
valeur
numérique
addition
exemple
attention
contenir
chaîner
type
double
réel
contenir
'
e
'
'
E
'
sinon
entier
valeur
numérique
ensuite
défini
début
chaîner
chaîne
commencer
valeur
numérique
utiliser
sinon
égaler
zéro
premier
expression
chaîner
type
variable
dépendre
second
expression
val
=
/
/
float
val
=
toto2
/
/
+
=
val
=
petit
cochon
/
/
+
=
premier
chaîne
tableau
tableau
PHP
association
ordonner
association
faire
correspondre
valeur
clé
tableau
très
souple
pouvoir
avoir
multiple
dimension
être
indexer
clé
numérique
texte
être
utiliser
comme
tabler
hachage
piler
queue
valeur
tableau
pouvoir
être
elle
même
tableau
créer
arbre
exemple
tableau
créer
fonction
array
prendre
comme
argument
pair
key
=
valoir
séparer
virgule
clé
pouvoir
être
entier
texte
attention
entier
chaîne
clé
absenter
alors
ce
être
dernier
clé
entier
plus
choisir
ce
être
premier
ce
être
zéro
accéder
élément
de
un
tableau
le
aide
crochet
place
entre
crochet
clé
entier
chaîner
var
=
array
,
,
,
,
echo
var
/
/
echo
var
/
/
tab
=
array
`
`
=
nom
=
toto
pipo
,
,
=
echo
tab
/
/
pipo
echo
tab
/
/
echo
tab
'
'
/
/
echo
tab
'
nom
'
/
/
toto
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
utilisation
fonction
array
ne
être
obligatoire
pouvoir
déclarer
tableau
voler
tab2
=
tab2
=
/
/
equivaut
tab2
=
tab2
'
test
'
=
'
mon
chaîne
'
pouvoir
aussi
créer
tableau
multidimensionnel
la|le
aider
deux
méthode
précédent
tab
=
array
`
`
=
array
`
`
riri
,
=
fifi
,
=
'
loulou
'
,
=
array
,
,
array
'
un
'
'
deux
'
'
trois
'
echo
tab
'
un
'
/
/
riri
echo
tab
/
/
echo
tab
/
/
trois
tab2
'
un
'
'
deux
'
=
'
test
'
/
/
créer
tableau
deux
dimension
exister
fonction
très
pratiquer
lister
contenir
de
un
tableau
modifier
élément
foreach
tab
=
array
=
'
un
'
,
=
'
deux
'
,
=
'
trois
'
foreach
tab
valeur
{
echo
`
`
valeur
\n
/
/
affiche
deux
trois
}
foreach
tab
cle
=
valeur
{
echo
`
`
cle
=
valeur\n
/
/
affiche
=
=
deux
=
trois
}
variable
objet
objet
créer
le
instruction
class
créer
instace
le
objet
falloir
utiliser
mot
clé
new
class
test
{
function
affiche_hello
{
echo
`
`
hello
`
`
}
}
obj
=
new
test
obj-
affiche_hello
constante
constant
nom
prendre
valeur
pouvoir
être
modifier
fois
fixer
constant
ne
être
accessible
que
en
lecture
seul
elle
sensible
casse
devoir
convention
être
écrire
majuscule
définir
constant
fonction
define
devoir
respecter
certain
règle
•
constant
commencer
•
constant
accessible
depuis
ne
importer
quel
endroit
coder
•
constant
pouvoir
être
redéfinir
•
constant
pouvoir
contenir
de
un
scalaire
entier
booléen
chaîne
double
define
constant
valeur
echo
constant
/
/
affiche
`
`
valeur
S
.
ROHAUT
courir
programmation
PHP
pager
/
obtenir
type
de
un
variable
obtenir
type
de
un
variable
utiliser
fonction
gettype
retourner
chaîne
texte
indiquer
type
attention
rien
garantir
résultat
de
un
version
PHP
autre
type
retourner
`
`
boolean
`
`
integer
`
`
double
raison
historique
`
`
doubler
retourner
lorsque
un
valeur
typer
float
fournir
lieu
chaîner
`
`
float
`
`
string
`
`
array
object
`
`
resource
depuis
PHP
`
`
NULL
depuis
PHP
`
`
unknown
type
souhaiter
réellement
tester
type
de
un
variable
préférable
de
utiliser
fonction
type
is_
*
is_array
is_bool
is_double
is_float
is_int
is_integer
is_long
is_null
is_numeric
is_object
is_real
is_resource
is_string
is_callable
être
ce
fonction
définir
supprimer
variable
souhaiter
savoir
variable
définir
ce
être
dire
affecter
utiliser
isset
enfin
souhaiter
supprimer
variable
falloir
utiliser
unset
S
.
ROHAUT
courir
programmation
PHP
pager
/
opérateur
précédence
opérateur
ce
être
le
ordre
lequel
valeur
devoir
être
analyser
ainsi
le
expression
+
*
ne
être
lire
gauche
droit|droite
retourner
voici
tableau
priorité
opérateur
ordre
croître
priorité
associativité
opérateur
gauche
gauche
or
gauche
xor
gauche
and
droit
print
gauche
=
+
=
-
=
*
=
/
=
.
=
=
&
=
|
=
^
=
~
=
=
=
gauche
gauche
|
gauche
&
&
gauche
|
gauche
^
gauche
&
non-associatif
=
=
=
=
=
=
=
=
non-associatif
=
=
gauche
gauche
+
-
gauche
*
/
droit|droite
~
++
int
double
string
array
object
droit
non-associatif
new
opérateur
arithmétique
opérateur
+
-
*
/
modulo
reste
division
opérateur
de
assignation
principal
=
aussi
comme
opérateur
combiner
+
=
-
=
*
=
/
=
=
.
=
opérateur
bit
opérateur
&
AND
|
or
^
XOR
~
NOT
~
b
décalage
b
bit
S
.
ROHAUT
courir
programmation
PHP
pager
/
gauche
b
décalage
b
bit
droit
décalage
bit
gauche
équivaloir
multiplication
deux
décalage
droit
division
deux
opérateur
comparaison
opérateur
=
=
avoir
=
=
b
valeur
=
=
=
avoir
=
=
=
b
valeur
type
=
différent
=
=
aussi
le
opérateur
ternaire
expr1
expr2
expr3
expr1
vrai
alors
expr2
sinon
expr3
opérateur
de
erreur
dispos
de
un
opérateur
spécial
appliquer
expression
empêcher
sortir
de
un
message
de
erreur
cas
problème
pouvoir
toujours
récupérer
message
de
erreur
éventuel
le
aide
variable
php_errormsg
uniquement
le
option
track_errors
dns-remplacer
retour
=
tab
'
toto
'
/
/
retourne
de
erreur
le
index
toto
ne
exister
opérateur
de
exécution
pouvoir
exécuter
commande
externe
PHP
comme
Shell
opérateur
guillemts
inverse
`
altgr+6
attention
le
option
safe_mode
devoir
être
dns-remplacer
pouvoir
aussi
utiliser
fonction
shell_exec
faire
exécuter
commander
shell
opérateur
de
incrémentation
/
décrémentation
dispos
comme
opérateur
++
utiliser
avant
après
nom
variable
a++
/
/
retourner
puis
la|le
incrémenter
++
/
/
incrémenter
puis
retourne
/
/
retourne
puis
décrémentir
/
/
décrémente
puis
retourner
attention
opérateur
réagir
type
variable
PHP
réagir
comme
PERL
ainsi
avoir
=
'
z
'
a++
echo
/
/
retourner
aa
a++
echo
/
/
retourner
ab
opérateur
logique
opérateur
logique
and
&
&
and
b
&
&
b
vrai
b
vrai
or
|
|
or
b
|
|
b
vrai
b
vrai
xor
xor
b
vrai
b
vrai
deux
temps
vrai
faux
attention
and
or
ne
avoir
priorité
priorité
plus
faible
&
&
|
|
S
.
ROHAUT
courir
programmation
PHP
pager
/
opérateur
chaîne
deux
opérateur
chaîne
concaténer
deux
chaîne
entre
elle
.
=
déjà
voir
le
opérateur
de
assignation
avoir
=
bonjour
b
=
ami
/
/
b
contenir
bonjour
ami
b
.
=
salut
`
`
/
/
b
contenir
bonjour
ami
salut
opérateur
tableau
pouvoir
additionner
deux
tableau
entre
+
tableau
droit
ajouter
tableau
gauche
S
.
ROHAUT
courir
programmation
PHP
pager
/
notion
de
expression
PHP
expression
pouvoir
être
résumer
tout
valeur
ceci
dire
remarque
vite
PHP
tout
presque
expression
variable
constant
voir
affecter
valeur
valeur
le
expression
variable
constant
pouvoir
résumer
dire
que
un
expression
représenter
tout
pouvoir
être
évaluer
pouvoir
évaluer
valeur
fonction
pouvoir
aussi
être
expression
retourner
valeur
dire
généralement
que
un
fonction
retourner
tel
valeur
comparaison
aussi
expression
retourner
valeur
booléen
calcul
aussi
expression
puisqu'une
valeur
retourner
affecter
calculer
PHP
orienter
expression
faire
tout
presque
PHP
expression
PHP
chercher
décomposer
tout
possible
expression
évaluer
optimiser
traitement
voici
quelque
exemple
avoir
=
distinguer
premier
coup
de
œil
deux
valeur
variable
valeur
variable
mise
jour
valeur
or
interner
troisième
valeur
rentrer
jeu
valeur
le
assignation
ici
elle
même
assigner
ligne
signifier
faire
avoir
=
expression
valoir
b
=
avoir
=
assignation
analyser
droit
gauche
ici
le
expression
avoir
=
valoir
b
valoir
aussi
ce
être
plus
rapide
écrire
exécuter
avoir
=
b
=
avoir
=
a+3
PHP
évaluer
de
abord
le
expression
a+3
valeur
incrémenter
assigner
nouveau
valeur
a+
=
résultat
plus
rapide
car
ne
être
évaluer
que
un
seul
fois
pouvoir
arriver
avoir
expression
surprenant
avoir
=
b
=
a+
=
variable
incrémenter
valoir
le
expression
a+
=
valoir
b
voir
assigner
valeur
le
expression
valoir
dernier
chose
b
le
expression
vrai
le
expression
b
évaluer
sinon
le
expression
évaluer
S
.
ROHAUT
courir
programmation
PHP
pager
/
avoir
=
TRUE
b
=
c
=
echo
b
/
/
affiche
S
.
ROHAUT
courir
programmation
PHP
pager
/
structure
contrôle
if
if
expression
commander
{
bloc
commande
}
else
commander
{
bloc
commande
}
aussi
elseif
combinaison
if
else
elseif
mot
pouvoir
aussi
se
écrire
deux
mot
résultat
pouvoir
écrire
elseif
chaîne
premier
le
expression
vrai
exécuter
If
expression
commander
{
bloc
commande
}
elsif
expression
commander
{
bloc
commande
}
elsif
expression
commander
{
bloc
commande
}
pouvoir
placer
HTML
comme
commander
bloc
commander
php
if
=
=
{
=
php
}
pouvoir
aussi
utiliser
syntaxe
alternatif
ouvrir|ouvrer
bloc
juste
après
if
else
elseif
deux
point
ferme
le
instruction
endif
php
if
=
=
print
`
`
=
print
`
`
elseif
=
=
print
`
`
=
print
`
`
`
`
else
print
`
`
valoir
endif
while
while
classique
ce
être
boucle
tant
simple
tant
condition
ne
être
vrai
continuer
boucle
le
expression
placer
début
boucler
le
expression
faux
avant
rentrer
boucle
boucle
ne
être
exécuter
While
expression
commander
{
bloc
commande
}
pouvoir
aussi
utiliser
syntaxe
alternatif
while
expression
commander
{
bloc
commander
}
endwhile
do
while
ce
être
second
possibilité
cas
commander
bloc
commander
exécuter
S
.
ROHAUT
courir
programmation
PHP
pager
/
moins
fois
car
le
expression
conditionnel
tester
fin
boucle
do
{
bloc
commande
}
while
expression
for
for
PHP
identique
for
C
.
for
expr1
expr2
expr3
commander
{
bloc
commande
}
expr1
exécuter
premier
entrée
boucler
expr2
exécuter
chaque
début
de
itération
jusqu
'
le
expression
faux
auquel
cas
sortir
boucle
expr3
exécuter
fin
le
itération
le
usage
habituel
de
un
tel
boucler
placer
le
état
initial
expr1
condition
sortir
expr2
calcul
expr3
peu
effectuer
tout
sorte
chose
/
/
for
i
=
i
=
print
i
i++
/
/
infini
for
/
/
for
i
=
i
=
print
i
i++
pouvoir
employer
syntaxe
alternatif
endfor
for
expr1
expr2
expr3
commander
{
bloc
commander
}
endfor
foreach
boucler
foreach
peut-être
le
un
plus
intéressant
manipulation
tableau
résultat
requête
SQL
permettre
lister
tableau
disposer
deux
syntaxe
foreach
array_expression
valoir
commande
foreach
array_expression
key
=
valoir
commande
premier
syntaxe
récupérer
élément
tableau
séquentiellement
valeur
le
élément
courir
tableau
placer
valoir
second
syntaxe
presque
identique
sauf
que
en
plus
clé
le
index
le
élément
actuel
placer
key
attention
modifier
valeur
valoir
key
modifier
tableau
car
boucle
travailler
copie
référencer
contre
second
cas
comme
dispos
clé
rien
ne
empêcher
de
assigner
quoi
le
élément
courir
remarque
appel
foreach
rembobiner
automatiquement
tableau
premier
élément
autre
boucle
falloir
alors
utiliser
reset
reset
arr
while
list
valoir
=
each
arr
{
echo
`
`
valeur
valoir
br
\n
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
foreach
arr
valoir
{
echo
`
`
valeur
valoir
br
\n
}
=
array
=
deux
=
trois
=
dix-sept
=
foreach
k
=
v
{
print
`
`
\
k
=
v.\n
}
break
continuer
le
instruction
break
permettre
sortir
de
un
for
while
foreach
switch
pouvoir
indiquer
combien
structure
souhaiter
sortir
elle
emboîter
le
instruction
continu
permettre
passer
le
itération
suivant
attention
PHP
conside
switch
comme
boucle
cas
réévaluer
switch
pouvoir
indiquer
continuer
combien
structure
emboîter
relancer
switch
switch
équivalent
série
if
permettre
comparer
grand
nombre
valeur
switch
i
{
caser
print
`
`
i
egale
break
caser
print
`
`
i
egale
break
caser
print
`
`
i
egale
break
default
print
`
`
i
inférieur
supérieur
}
switch
se
arrêter
premier
expression
caser
vrai
puis
exécuter
code
suivre
le
ordre
indiqué
jusqu
'
premier
instruction
break
se
il
'
break
tout
coder
jusqu
'
fin
switch
exécuter
le
exemple
suivant
i
valoir
tout
print
afficher
switch
i
{
caser
print
`
`
i
egale
case
print
`
`
i
egale
case
print
`
`
i
egale
}
noter
aussi
default
devoir
intervenir
dernier
sinon
'
aucun
intérêt
enfin
pouvoir
employer
syntaxe
alternatif
endswitch
S
.
ROHAUT
courir
programmation
PHP
pager
/
switch
i
case
print
`
`
i
egale
break
caser
print
`
`
i
egale
break
endswitch
return
contrairement
de
autre
langage
return
ne
être
fonction
instruction
fonction
return
servir
sortir
celui
-ci
retourner
valeur
script
sortir
celui
-ci
attention
cependant
script
inclure
voir
require
include
return
typer
code
considérer
que
il
sortir
fonction
require
include
sortir
script
fonction
lequel
coder
inclure
comme
return
élément
langage
fonction
besoin
de
utiliser
parenthèse
require
include
_once
require
include
inclure
le
endroit
actuel
exécuter
fichier
PHP
identique
fonctionnement
exception
traitement
erreur
include
produire
warning
coder
continu
principe
se
exécuter
tandis
que
un
require
produire
erreur
fatal
le
exécution
se
arrêter
comme
require
include
élément
langage
fonction
besoin
de
utiliser
parenthèse
require_once
include_once
ressembler
leur
homologue
cependant
différence
quoi
que
il
arriver
fichier
inclure
seul
fois
second
require_once
apparaître
fichier
le
instruction
exécuter
S
.
ROHAUT
courir
programmation
PHP
pager
/
fonction
syntaxe
porter
voici
syntaxe
de
un
fonction
function
fonc
arg1
arg2
arg3
argn
{
bloc
commander
return
valeur
}
fonction
'
besoin
de
être
déclarer
avant
de
être
utiliser
sauf
vouloir
rester
compatible
PHP3
moment
que
elle
apparaître
script
cependant
deux
exception
fonction
conditionnel
ce
être
dire
déclarer
if
fonction
déclarer
autre
fonction
premier
cas
inconnu
rester
code
tant
condition
if
ne
être
vrai
second
cas
connaître
quand
premier
fonction
exécuter
voici
exemple
tirer
manuel
premier
cas
makefoo
=
true
/
*
impossible
de
appeler
foo
ici
car
fonction
ne
exister
pouvoir
utiliser
bar
*
/
bar
if
makefoo
{
function
foo
{
echo
`
`
ne
exister
tant
programme
ne
être
passer
ici.\n
}
}
/
*
Maitenant
pouvoir
appeler
foo
car
makefoo
maintenant
vrai
*
/
if
makefoo
foo
function
bar
{
echo
`
`
je
exister
dès
début
programme.\n
}
second
cas
function
foo
{
function
bar
{
echo
`
`
ne
exister
tant
foo
ne
être
appelé.\n
}
}
/
*
impossible
de
appeler
bar
ici
car
ne
exister
*
/
foo
/
*
maintenant
pouvoir
appeler
bar
car
le
utilisation
foo
'
rendre
accessible
*
/
bar
argument
pouvoir
passer
autant
de
argument
souhaiter
fonction
PHP
tout
type
argument
S
.
ROHAUT
courir
programmation
PHP
pager
/
séparer
virgule
défaut
passer
copier
function
afficher
msg
{
echo
msg
}
possible
passer
argument
référence
pouvoir
changer
valeur
le
intérieur
fonction
cela
rajouter
&
devant
le
argument
pouvoir
passer
ponctuellement
variable
référence
placer
&
devant
nom
lors
le
appel
fonction
function
modif
&
msg
{
msg
=
coucou
}
msg
=
salut
modif
msg
echo
msg
/
/
coucou
pouvoir
aussi
définir
valeur
défaut
attention
lister
paramètre
valeur
défaut
devoir
être
dernier
function
afficher
nom
prenom
=
toto
{
echo
`
`
nom
prenom
}
enfin
pouvoir
utiliser
nombre
variable
de
argument
fonction
func_num_args
func_get_arg
func_get_args
function
foo
{
numargs
=
func_num_args
echo
`
`
nombre
de
argument
numargs\n
}
foo
/
/
affiche
'
nombre
de
argument
'
valeur
retour
retourner
valeur
le
instruction
return
pouvoir
retourner
tout
type
valeur
plusieurs
temps
cependant
rien
ne
empêcher
cas
retourner
tableau
fonction
pouvoir
aussi
retourner
référence
cas
devoir
être
déclarer
&
devant
nom
function
carrer
num
{
return
num
*
num
}
echo
carrer
/
/
affiche
'
'
fonction
interne
plus
fonction
définir
le
utilisateur
PHP
proposer
grand
nombre
fonction
interne
couvrir
multitude
domaine
accéder
fonction
falloir
simplement
appeler
nom
moduler
correspondre
compiler
PHP
voir
chapitre
suivant
comment
utiliser
certain
S
.
ROHAUT
courir
programmation
PHP
pager
/
gestion
formulaire
PHP
GET
POST
boire
récupérer
contenir
champ
de
un
formulaire
HTML
coder
PHP
pouvoir
traiter
lorsque
un
formulaire
envoyer
script
PHP
tout
variable
disponible
automatiquement
script
formulaire
pouvoir
être
type
GET
POST
rappel
formulaire
type
GET
information
passer
directement
le
URL
clair
pouvoir
poser
problème
limitation
suivant
serveur
octet
selon
cas
méthode
POST
'
genre
limitation
car
information
transmettre
conteneur
variable
global
la|le
entêter
plus
cacher
PHP
pouvoir
gérer
deux
méthode
manière
transparent
récupération
tableau
chaque
champ
formulaire
PHP
défini
nom
valeur
script
PHP
aller
récupérer
nom
valeur
tableau
spécial
dire
superglobal
accessible
depuis
partout
méthode
GET
tableau
_GET
méthode
POST
tableau
_POST
souhaiter
soucier
méthode
pouvoir
utiliser
tableau
_REQUEST
index
nom
champ
formulaire
variable
passer
URL
valeur
valeur
champ
exemple
form
action
=
dns-remplacer
method
=
post
Name
input
type
=
text
name
=
username
br
Email
input
typer
=
text
name
=
email
br
input
typer
=
submit
name
=
submit
valoir
=
Submit
`
`
/
form
page
PHP
dns-remplacé
php
echo
_POST
'
username
'
echo
_REQUEST
'
email
'
imaginer
le
appel
de
un
page
dns-remplacer
URL
comme
ceci
http
/
/
dns-remplacer
/
dns-remplacer
id
=
ici
transmettre
variable
via
URL
méthode
implicite
GET
récupérer
id
coder
PHP
pouvoir
faire
php
echo
_GET
'
id
'
echo
_REQUEST
'
id
'
_GET
contenir
variable
type
GET
_POST
contenir
variable
type
POST
_REQUEST
contenir
variable
type
POST
GET
aussi
variable
cookies
aussi
possible
procéder
autrement
récupérer
nom
champ
directement
tant
variable
sans
passer
tableau
cela
falloir
vérifier
fichier
dns-remplacer
valeur
register_globals
cas
nom
champ
formulaire
S
.
ROHAUT
courir
programmation
PHP
pager
/
nom
variable
php
echo
username
echo
email
récupération
direct
valeur
off
divers
raison
sécurité
droit
etc
souhaiter
/
pouvoir
modifier
exister
tout
méthode
fonction
import_request_variable
permettre
de
effectuer
explicitement
chose
fonction
prendre
deux
paramètre
second
optionnel
après
exécution
récupérer
variable
sans
passer
tableau
premier
paramètre
type
variable
que
on
souhaiter
récupérer
–
P
/
p
variable
type
POST
–
G
/
g
variable
type
GET
–
/
variable
type
cookie
pouvoir
cumuler
le
ensemble
attention
le
ordre
second
paramètre
préfix
que
on
souhaiter
donner
nom
variable
que
on
aller
récupérer
voici
deux
exemple
php
import_request_variable
`
`
p
echo
username
php
import_request_variable
`
`
P
Post_
echo
Post_username
pouvoir
aussi
passer
fonction
extract
permettre
de
exporter
tableau
variable
ainsi
tableau
_POST
php
extract
_POST
echo
username
utiliser
tableau
formulaire
permettre
de
utiliser
liste
choix
multiple
PHP
devoir
récupérer
le
ensemble
choix
le
utilisateur
cela
falloir
utiliser
tableau
form
action
=
php
echo
HTTP_SERVER_VARS
'
PHP_SELF
'
method
=
post
Name
input
type
=
text
name
=
personal
name
br
Email
input
type
=
text
name
=
personal
email
br
Beer
br
select
multiple
name
=
vin
option
valoir
=
bordeaux
bordeaux
/
option
option
valoir
=
beaujolais
beaujolais
/
option
option
valoir
=
loire
loire
/
option
/
select
br
S
.
ROHAUT
courir
programmation
PHP
pager
/
input
typer
=
hidden
name
=
action
valoir
=
submitted
input
typer
=
submit
name
=
submit
valoir
=
submit
`
`
/
form
le
exemple
précédent
exemple
sélectionner
plusieurs
vin
ex
bordeaux
beaujolais
vin
bordeaux
vin
beaujolais
S
.
ROHAUT
courir
programmation
PHP
pager
/
date
heure
localisation
format
date
de
heure
format
langue
dépendre
le
environnement
de
exécution
coder
PHP
généralement
plupart
serveur
web
incorporer
PHP
configurer
langue
anglais
gestion
information
localisation
anglais
pouvoir
être
préférable
passer
français
site
francophone
simplifier
largement
tâche
pouvoir
effectuer
cela
fonction
setlocal
voici
deux
exemple
sous
NT
/
autre
sous
Linux
if
substr
php_uname
=
`
`
Windows
{
setlocal
LC_TIME
fr_FR
euro
}
else
{
setlocal
LC_TIME
fr
}
exemple
vérifier
de
abord
quel
système
faire
fonction
php_uname
puis
fonction
résultat
passer
localisation
français
selon
deux
méthode
après
changement
appel
fonction
retourner
jour
semaine
mois|moi
faire
français
récupérer
date
le
heure
date
plus
simple
de
utiliser
fonction
date
retourner
le
heure
local
sous
forme
de
un
chaîne
caractère
préciser
premier
paramètre
second
paramètre
pouvoir
préciser
timestamp
souhaiter
le
heure
actuel
récupérer
date
jour
echo
date
`
`
d
/
m
/
y
/
/
/
/
voici
caractère
utilisable
documentation
PHP
•
-
`
`
am
matin
`
`
pm
après-midi
•
-
`
`
AM
matin
`
`
PM
après-midi
•
B
-
heure
Internet
Swatch
•
-
jour
mois|moi
deux
chiffre
éventuellement
zéro
`
`
`
`
•
-
jour
semaine
trois
lettre
anglais
exemple
`
`
Fri
vendredi
•
F
-
mois|moi
textuel
version
longue
anglais
i.e.
`
`
January
janvier
•
g
-
heure
format
12h
sans
zéro
initial
i.e.
`
`
`
`
•
G
-
heure
format
24h
sans
zéro
initial
i.e.
`
`
`
`
•
heure
-
heure
format
12h
`
`
`
`
•
heure
-
heure
format
24h
`
`
`
`
•
i
-
minute
`
`
`
`
•
I
i
majuscule
-
`
`
le
heure
de
été
activer
`
`
le
heure
de
hiver
•
-
jour
mois|moi
sans
zéro
initial
`
`
`
`
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
-
'
'
minuscule
-
jour
semaine
textuel
version
longue
anglais
i.e.
`
`
Friday
vendredi
•
-
booléen
savoir
le
année
bissextile
`
`
`
`
•
-
mois|moi
i.e.
`
`
`
`
•
-
mois|moi
trois
lettre
anglais
exemple
`
`
Apr
avril
•
-
mois|moi
sans
zéro
initial
i.e.
`
`
`
`
•
O
-
différence
de
heure
le
heure
Greenwich
exprimer
heure
i.e.
`
`
•
r
-
format
date
RFC
i.e.
`
`
Thu
Dec
:
:
ajouté
PHP
•
-
second
i.e.
`
`
`
`
•
-
suffixe
ordinal
de
un
nombre
anglais
deux
lettre
i.e.
`
`
th
`
`
nd
•
-
nombre
jour
mois|moi
donner
i.e.
`
`
`
`
•
-
fuseau
horaire
machiner
i.e.
`
`
mettre
•
U
-
seconde|second
depuis
époque
•
w
-
jour
semaine
numérique
i.e.
`
`
dimanche
to
`
`
samedi
•
W
-
numéro
semaine
le
année
ISO-8601
semaine
commencer
lundi
ajouter
PHP
•
-
année
chiffre
i.e.
`
`
•
-
année
chiffre
i.e.
`
`
•
z
-
jour
le
année
i.e.
`
`
`
`
•
z
-
décalage
horaire
second
i.e.
`
`
`
`
tout
autre
caractère
pouvoir
être
employer
interpréter
désirer
employer
le
un
caractère
falloir
verrouiller
antislash
attention
fonction
RESULTAT
anglais
pouvoir
récupérer
timestamp
actuel
fonction
time
commander
suivant
effet
précédent
echo
date
`
`
d
/
m
/
y
time
/
/
/
/
date
local
strftime
formater
résultat
local
tenir
compter
localisation
falloir
utiliser
fonction
strftime
tenir
compte
langue
résultat
français
premier
paramètre
chaîner
formatage
second
éventuel
timestamp
•
-
nom
abréger
jour
semaine
local
•
-
nom
complet
jour
semaine
local
•
b
-
nom
abréger
mois|moi
local
•
B
-
nom
complet
mois|moi
local
•
-
représentation
préféré
date
heure
local
•
-
numéro
siècle
le
année
diviser
arrondir
entre
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
-
jour
mois|moi
numérique
intervalle
•
-
identique
m
/
d
/
•
e
-
numéro
jour
mois|moi
chiffrer
précéder
de
un
espace
'
'
'
'
•
heure
-
identique
b
•
heure
-
heure
journée
numérique
24-heures
intervalle
•
I
-
heure
journée
numérique
heure
intervalle
•
-
jour
le
année
numérique
intervalle
•
-
mois|moi
numérique
intervalle
•
-
minute
numérique
•
-
newline
character
•
p
-
àm
'
oùpm
'
fonction
le
heure
absolu
fonction
valeur
enregistrer
local
•
r
-
le
heure
format
a.m.
p.m.
•
R
-
le
heure
format
24h
•
-
second
numérique
•
-
tabulation
•
-
le
heure
actuel
égal
heure
•
u
-
numéro
jour
semaine
représenter
lundi
•
U
-
numéro
semaine
le
année
considérer
premier
dimanche
le
année
comme
premier
jour
premier
semaine
•
V
-
numéro
semaine
comme
définir
le
ISO
:
sous
forme
décimal
semaine
premier
semaine
plus
jour
le
année
courant
lundi
premier
jour
•
W
-
numéro
semaine
le
année
considérer
premier
lundi
le
année
comme
premier
jour
premier
semaine
•
w
-
jour
semaine
numérique
dimanche
=
•
x
-
format
préférer
représentation
date
sans
le
heure
•
X
-
format
préférer
représentation
le
heure
sans
date
•
-
le
année
numérique
deux
chiffre
•
-
le
année
numérique
quatre
chiffre
•
z
-
fuseau
horaire
nom
abréviation
•
-
caractèrè
'
littéral
retour
tableau
getdate
fonction
getdate
permettre
aussi
récupérer
date
le
heure
actuel
éventuellement
timestamp
paramètre
sous
forme
tableau
indexer
selon
valeur
suivant
•
`
`
second
-
second
•
`
`
minute
-
minute
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
`
`
hours
-
heure
•
`
`
mday
-
jour
mois|moi
•
`
`
wday
-
jour
semaine
numérique
dimanche
jusqu
'
samedi
•
`
`
-
mois|moi
numérique
•
`
`
year
-
année
numérique
•
`
`
yday
-
jour
le
année
numérique
i.e.
`
`
•
`
`
weekday
-
jour
semaine
texte
complet
anglais
i.e.
`
`
Friday
•
`
`
month
-
mois|moi
texte
complet
anglais
i.e.
`
`
January
aujourdhui
=
getdate
mois|moi
=
aujourdhui
'
month
'
mjour
=
aujourdhui
'
mday
'
annee
=
aujourdhui
'
year
'
echo
`
`
mjour
/
mois|moi
/
annee
le
heure
localtime
le
heure
pouvoir
utiliser
fonction
localtime
pouvoir
aussi
prendre
paramètre
timestamp
retourner
tableau
indexer
selon
valeur
suivant
•
`
`
tm_sec
-
second
•
`
`
tm_min
-
minute
•
`
`
tm_hour
-
heure
•
`
`
tm_mday
-
jour
mois|moi
•
`
`
tm_mon
-
mois|moi
le
année
•
`
`
tm_year
-
année
incompatible
an
•
`
`
tm_wday
-
jour
semaine
•
`
`
tm_yday
-
jour
le
année
•
`
`
tm_isdst
-
Est
ce
le
heure
de
hiver
prendre
effet
récupérer
ne
importer
quel
date
pouvoir
récupérer
ne
importer
quel
dater
timestamp
chaîne
pouvoir
cela
utiliser
fonction
strtotime
prendre
comme
paramètre
chaîner
texte
anglais
que
elle
essayer
convertir
timestamp
voici
quelque
exemple
echo
strtotime
`
`
now
/
/
timestamp
actuel
echo
strtotime
`
`
day
/
/
hier
echo
strtotime
`
`
day
/
/
demain
echo
strtotime
`
`
september
/
/
septembre
echo
strtotime
`
`
year
weeks
days
/
/
an
semaine
jour
S
.
ROHAUT
courir
programmation
PHP
pager
/
MySQL
présentation
MySQL
SGBDR
système
gestion
baser
donner
relationnel
définir
lui-
comme
base
donner
open
source
plus
populaire
monde
rien
cela
ce
être
vrai
Edité
société
MySQL
ab
MySQL
produire
open
source
libre
de
utilisation
sous
licence
GPL
projet
libre
cependant
licence
commercial
nécessaire
autre
cas
notamment
souhaiter
redistribuer
MySQL
produire
non
libre
souhaiter
support
technique
version
production
actuel
MySQL
version
le
écriture
support
grand
majorité
serveur
hébergeur
encore
dernier
version
MySQL
futur
version
actuellement
développement
ne
être
surtout
utiliser
production
principal
qualité
MySQL
simplicité
rapidité
principal
défaut
manquer
fonctionnalité
dire
avancer
version
précédent
clé
étranger
procédure
stocker
trigger
selects
imbriquer
notamment
cela
devoir
occulter
puissance
le
ajout
fonctionnalité
avancer
comme
syntaxe
SQL
étendre
replacer
limit
delete
index
recherche
fulltext
permettre
créer
moteur
recherche
prochain
version
stable
combler
lacune
précédent
verser
support
complet
syntaxe
SQL
ANSI-99
outil
PhpMyAdmin
se
il
rester
bien
entendre
possible
de
utiliser
MySQL
ligner
commander
peu
comme
sqlplus
oracle
bien
plus
le
aise
environnement
plus
intuitif
ainsi
le
outil
phpMyAdmin
interface
web
MySQL
permettre
de
effectuer
plupart
tâcher
maintenance
de
utilisation
solution
fonctionner
depuis
ne
importer
quel
navigateur
indépendant
machine
accéder
phpMyAdmin
généralement
le
URL
http
/
/
server_name
/
mysql
S
.
ROHAUT
courir
programmation
PHP
pager
/
MysqlCC
MysqlCC
MySQL
Control
Center
front-end
graphique
officiel
MySQL
développer
société
baser
e
toolkit
Qt
disponible
sous
Windows
Unix
linux
bientôt
MacOS
permettre
le
administration
serveur
gestion
base
tabler
le
exécution
requête
SQL
interactif
coloration
syntaxique
créer
base
partir
le
écran
de
accueil
phpMyAdmin
saisir
nom
baser
créer
base
donner
falloir
préférence
choisir
nom
simple
intuitif
puis
cliquer
créer
après
création
nouveau
page
se
afficher
ce
être
page
principal
de
administration
baser
haut
toujours
présent
après
le
exécution
de
un
commande
résultat
celui
-ci
écran
permettre
notamment
le
exécution
commande
SQL
travail
table
utilisateur
droit
menu
gauche
choisir
-
tiret
correspondre
racine
administration
serveur
MySQL
lui
même
nouveau
page
choisir
utilisateur
privilège
page
suivant
permettre
de
ajouter
utilisateur
falloir
faire
attention
choser
serveur
effet
suivant
configuration
initial
Linux
exemple
droit
dépendre
façon
accéder
base
ainsi
localhost
ip-remplacée
>
identique
base
appeler
depuis
autre
IP
autre
nom
le
utilisateur
ne
avoir
tout
droit
cas
doute
suffire
choisir
tout
serveur
créer
administrateur
mieux
donner
tout
privilège
utilisateur
standard
requête
sélection
de
ajout
mettre
jour
suppression
de
enregistrement
choisir
privilège
select
insert
Update
Delete
S
.
ROHAUT
courir
programmation
PHP
pager
/
fois
le
utilisateur
créer
plusieurs
base
présent
pouvoir
affiner
droit
chacun
base
liste
utilisateur
leur
droit
baser
afficher
haut
choisir
modifier
pouvoir
affiner
sélection
notamment
passer
autre
privilège
droit
base
tabler
colonne
créer
modifier
table
retourner
menu
gauche
base
existant
le
écran
de
administration
saisir
bas
page
nom
tabler
nombre
champ
colonne
possible
après
coup
de
en
rajouter
de
en
supprimer
puis
choisir
créer
le
étape
suivant
consister
définir
table
Intéressons-nous
différent
type
champ
possible
type
numérique
ip-remplacée
>
type
entier
chaque
entier
pouvoir
ajouter
mot
clé
UNSIGNED
non
signé
attention
type
BIGINT
limitation
voir
documentation
MySQL
entre
parenthèse
valeur
UNSIGNED
possible
fournir
précision
de
affichage
nombre
chiffrer
exemple
taille
TINYINT
équivaloir
valeur
•
TINYINT
•
SMALLINT
•
MEDIUMINT
•
INT
INTEGER
•
BIGINT
ip-remplacée
>
type
réel
flottant
•
FLOAT
nombre
virguler
flottant
•
double
double
PRECISION
REAL
nombre
virguler
flottant
double-précision
•
DECIMAL
DEC
NUMERIC
spécial
valeur
unpacked
ce
être
chaîne
texte
ip-remplacée
>
type
booléen
•
bit
BOOL
BOOLEAN
depuis
bit
équivaloir
TINYINT
type
caractère
type
mériter
peu
plus
de
explication
S
.
ROHAUT
courir
programmation
PHP
pager
/
ip-remplacée
>
type
char
char
chaîner
caractère
taille
pouvoir
être
caractère
tailler
définir
création
tabler
table
champ
prendre
effectivement
nombre
caractère
indiqué
taille
réel
inférieur
VARCHAR
chaîner
caractère
taille
maximal
pouvoir
être
caractère
longueur
pouvoir
être
variable
MySQL
stocker
plus
octet
contenir
longueur
chaîner
ce
être
optimisation
chaîner
caractère
aller
prendre
octet
placer
table
pouvoir
rajouter
définition
BINARY
défaut
champ
char
VARCHAR
trier
sans
tenir
compte
casser
le
attribut
BINARY
permettre
trier
tenant
compter
casse
selon
machine
champ
espace
final
supprimer
ip-remplacée
>
type
TEXT
type
TEXT
BLOB
permettre
stocker
quantité
variable
texte
selon
leur
définition
ici
longueur
texte
•
TINY
BLOB
/
TEXT
L+1
octet
2^8
•
BLOB
/
TEXT
L+2
octet
2^16
•
medium
BLOB
/
TEXT
L+3
octet
2^24
•
long
BLOB
/
TEXT
L+4
octet
2^32
TEXT
BLOB
se
utiliser
manière
identique
falloir
respecter
rêgles
suivant
•
lors
tri
champ
BLOB
tenir
compte
casser
champ
TEXT
•
pouvoir
faire
recherche
FULLTEXT
champ
type
BLOB
falloir
utiliser
champ
TEXT
•
champ
type
TEXT
BLOB
prendre
valeur
défaut
•
espace
final
supprimer
ip-remplacée
>
typer
ENUM
champ
type
ENUM
pouvoir
contenir
que
un
chaîne
texte
plusieurs
prédéfinie
création
tabler
voici
exemple
CREATE
tabler
test
id
int
NOT
NULL
auto_increment
c_enum
enum
'
oui
'
'
non
'
PRIMARY
KEY
id
S
.
ROHAUT
courir
programmation
PHP
pager
/
champ
c_enum
pouvoir
prendre
deux
valeur
oui
non
tente
'
mettre
autre
chose
insert
into
text
c_enum
valoir
'
toto
'
cas
chaîne
vide
insérer
place
champ
déclarer
NOT
NULL
valeur
défaut
devenir
premier
liste
de
énumération
ip-remplacée
>
typer
set
typer
set
ressembler
peu
type
ENUM
sauf
champ
pouvoir
avoir
plusieurs
valeur
parmi
liste
prédéfinir
création
tabler
type
ENUM
seul
valeur
autoriser
champ
typer
set
plusieurs
valeur
séparer
espace
autoriser
CREATE
tabler
test
id
int
NOT
NULL
auto_increment
c_set
set
'
oui
'
'
non
'
PRIMARY
KEY
id
insert
into
test
c_set
valoir
'
oui
non
'
insert
into
test
c_set
valoir
'
non
oui
'
insert
into
test
c_set
valoir
'
oui
effectuer
recherche
de
un
élément
set
LIKE
fonction
FIND_IN_SET
select
*
from
test
where
c_set
LIKE
'
oui
'
select
*
from
test
where
FIND_IN_SET
'
oui
'
c_set
type
dater
attention
date
logique
MySQL
laisser
développeur
soin
contrôler
validité
leur
date
ainsi
MySQL
autoriser
le
enregistrement
de
un
date
typer
seul
test
effectuer
validité
mois|moi
entre
validité
jour
entre
zéro
autoriser
raison
pratique
stockage
le
année
le
année
/
mois|moi
seulement
exemple
voici
quelque
autre
information
•
MySQL
comparaison
notamment
essayer
de
interpréter
format
date
que
on
passer
ce
être
cas
comparaison
entre
champ
type
dater
champ
texte
plupart
cas
résultat
celui
attendu
attention
tout
formalisme
•
date
devoir
être
donner
préférence
format
année-mois-jour
le
année
devoir
toujours
apparaître
premier
cas
de
un
année-jour-mois
attention
MySQL
pouvoir
deviner
février
mai
•
dater
utiliser
calcul
numérique
convertir
nombre
timestamp
•
valeur
illégal
transmettre
ce
être
valeur
zéro
retenue
valeur
zéro
dépendre
type
champ
•
gestion
le
an
fait
ainsi
•
cas
de
année
chiffre
aucun
souci
valoir
mieux
toujours
utiliser
S
.
ROHAUT
courir
programmation
PHP
pager
/
année
chiffre
•
cas
de
un
année
deux
chiffe
converti
converti
ip-remplacée
>
format
supporter
•
AAAA-MM-JJ
HH
messieurs
SS
AA-MM-JJ
HH
messieurs
SS
séparateur
pouvoir
être
ne
importer
quoi
AAAA
/
messieurs
/
JJ
dns-remplacer
valable
•
AAAA-MM-JJ
AA-MM-JJ
remarquer
séparateur
•
AAAAMMJJHHMMSS
AAMMJJHHMMSS
chaîner
nombre
signification
tant
date
•
AAAAMMJJ
AAMMJJ
remarquer
ip-remplacée
>
type
DATETIME
type
DATETIME
permettre
stocker
date
le
heure
sous
format
AAAA-MM-JJ
HH
messieurs
SS
zéro
:
:
ip-remplacée
>
type
dater
type
seul
dater
stocker
format
AAAA-MM-JJ
zéro
ip-remplacée
>
type
TIMESTAMP
typer
TIMESTAMP
permettre
stocker
implicitement
automatiquement
timestamp
heure
courant
lors
de
un
enregistrement
donner
insert
UPDATE
tabler
dispos
de
un
champ
TIMESTAMP
lors
le
ajout
mettre
jour
de
un
celui
-ci
automatiquement
mettre
jour
ligner
de
enregistrement
colonne
'
besoin
de
être
explicitement
spécifier
spécifier
alors
pouvoir
mettre
ne
importer
quel
valeur
CREATE
tabler
test
id
int
NOT
NULL
auto_increment
c_ts
timestamp
NOT
NULL
c_txt
varchar
NOT
NULL
default
`
`
PRIMARY
KEY
id
insert
into
test
c_txt
valoir
'
toto
'
select
c_ts
from
test
update
test
set
c_txt
=
'
truc
'
select
c_ts
from
test
remarque
résultat
retourner
MySQL
colonne
TIMESTAMP
ne
être
valeur
timestamp
Unix
bien
tel
interne
valeur
formater
défaut
TIMESTAMP
S
.
ROHAUT
courir
programmation
PHP
pager
/
retourne
valeur
numérique
caractère
pouvoir
choisir
taille
création
table
•
TIMESTAMP
TIMESTAMP
AAAAMMJJHHMMSS
•
TIMESTAMP
AAMMJJHHMMSS
•
TIMESTAMP
AAMMJJHHMM
•
TIMESTAMP
AAAAMMJJ
•
TIMESTAMP
AAMMJJ
•
TIMESTAMP
AAMM
•
TIMESTAMP
aa
tout
format
spécifier
toujours
le
année
mois|moi
jour
timestamp
sinon
date
invalide
ip-remplacée
>
type
TIME
type
TIME
pouvoir
être
utiliser
stocker
information
horaire
format
HH
messieurs
SS
HHH
messieurs
SS
valeur
pouvoir
être
négatif
valeur
maximal
possible
aller
:
:
:
:
TIME
servir
'
stocker
heure
journée
intervalle
durer
expliquer
plage
horaire
accéder
comme
ceci
HH
messieurs
dns-remplacer
jour
fraction
ne
être
stocker
encore
HH
messieurs
SS
HH
messieurs
HH
messieurs
SS
HH
messieurs
HH
SS
HHMMSS
.SS
MMSS
ip-remplacée
>
type
YEAR
typer
YEAR
stocker
uniquement
le
année
plage
aller
le
interprétation
valeur
deux
chiffre
soumettre
le
interprétation
gestion
le
an
création
syntaxe
SQL
utiliser
commande
SQL
CREATE
CREATE
tabler
if
NOT
EXIST
nom_table
champ1
type
NOT
NULL
|
NULL
DEFAULT
valeur_defaut
AUTO_INCREMENT
PRIMARY
KEY
PRIMARY
KEY
nom_champ
KEY
nom
col1
col2
index
nom
col1
col2
unique
index
nom
col1
col2
FULTEXT
index
nom
col1
col2
type
=
type_table
noter
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
KEY
index
synonyme
•
PRIMARY
KEY
index
unique
tout
colonne
devoir
être
NOT
NULL
•
PRIMARY
KEY
pouvoir
contenir
plusieurs
colonne
cas
PRIMARY
KEY
devoir
apparaître
niveau
définition
de
un
colonne
syntaxe
PRIMARY
KEY
col
devoir
être
utiliser
•
pouvoir
avoir
que
un
seul
index
PRIMARY
KEY
plusieurs
index
unique
•
application
vouloir
obtenir
PRIMARY
KEY
de
un
table
que
il
ne
exister
alors
MySQL
retourner
premier
index
unique
trouver
•
donner
nom
index
celui
-ci
générer
automatiquement
prendre
nom
premier
colonne
le
index
suivre
de
un
suffixe
numérique
col_1
col_2
•
bien
cela
déconseiller
pouvoir
établir
index
colonne
TEXT
BLOB
cas
falloir
obligatoirement
spécifier
longueur
de
index
exemple
CREATE
tabler
f_message
id_message
int
unsigned
NOT
NULL
auto_increment
id_msg_initial
int
unsigned
NOT
NULL
default
'
'
id_msg_prec
int
unsigned
NOT
NULL
default
'
'
id_forum
int
NOT
NULL
default
'
'
login
varchar
NOT
NULL
default
`
`
date
datetime
NOT
NULL
default
'
:
:
'
sujet
varchar
NOT
NULL
default
`
`
texte
text
PRIMARY
KEY
id_message
KEY
precedent
id_msg_prec
KEY
login
login
KEY
forum
id_forum
KEY
initial
id_msg_initial
FULLTEXT
KEY
ft1
sujet
texte
type
=
MyISAM
type
table
MyISAM
InnoDB
typer
table
particulier
MySQL
typer
défaut
MyISAM
gestionnaire
table
originel
MySQL
simple
rapide
correspondre
majorité
besoin
second
type
principal
InnoDB
permettre
gestion
transaction
verrouillage
donner
commettre
rollback
restauration
après
crash
surtout
contraindre
de
intégrité
clé
étranger
possible
CREATE
tabler
parent
id
INT
NOT
NULL
PRIMARY
KEY
id
type
=
INNODB
CREATE
tabler
child
id
INT
parent_id
INT
index
par_ind
parent_id
FOREIGN
KEY
parent_id
REFERENCES
parent
id
DELETE
set
NULL
typer
=
INNODB
pouvoir
aussi
utiliser
clause
DELETE
cascader
DELETE
set
NULL
quelque
règle
respecter
le
utilisation
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
DELETE
cascader
ligne
table
parent
supprimer
ligne
correspondant
clé
étranger
automatiquement
supprimer
table
fille
le
exemple
suppression
de
un
enregistrement
table
parent
supprimer
tout
enregistrement
tabler
child
parent_id
égal
id
le
enregistrement
table
parent
supprimer
•
DELETE
set
NULL
enregistrement
fils|fil
supprimer
colonne
clé
étranger
ici
parent_id
prendre
valeur
NULL
•
index
devoir
exister
clé
parent
clé
fille
index
FULLTEXT
ip-remplacée
>
création
dernier
verser
supérieur
MySQL
permettre
le
indexation
rechercher
plusieurs
champ
type
TEXT
pouvoir
ainsi
créer
moteur
recherche
très
rapidement
cela
falloir
créer
index
FULLTEXT
texte
entier
chaque
mot
champ
texte
faire
indexer
index
FULLTEXT
fonctionner
qu'
avec
champ
type
TEXT
BLOB
VARCHAR
tabler
type
MyISAM
uniquement
voici
comment
créer
index
FULLTEXT
table
exister
déjà
CREATE
FULLTEXT
index
ft1
f_message
sujet
texte
création
table
rajouter
ligne
création
de
index
FULLTEXT
KEY
ft1
sujet
texte
pouvoir
préciser
plusieurs
colonne
genre
de
index
attention
lors
rechercher
créer
index
deux
colonne
pouvoir
rechercher
seul
deux
colonne
temps
cas
falloir
créer
plusieurs
index
FULLTEXT
ip-remplacée
>
recherche
effectuer
recherche
fonction
match
AGAINST
fonction
match
permettre
préciser
quel
colonne
effectuer
recherche
fonction
AGAINST
mot
rechercher
select
id_message
FROM
f_message
WHERE
match
sujet
texte
AGAINST
'
linux
nvidia
'
requête
aller
effectuer
recherche
mot
'
linux
'
'
nvidia
'
colonne
'
sujet
'
'
texte
'
aller
retourner
id
message
correspondant
plus
pertinent
premier
celui
correspondre
mieux
recherche
celer
devoir
faire
match
clause
WHERE
pertinence
déterminer
MySQL
selon
critère
peu
opaque
tout
comme
nombre
mot
ligner
nombre
mot
unique
ligner
longueur
ligner
ce
être
fonction
match
retourner
pertinence
sous
forme
de
un
flottant
supérieur
égal
S
.
ROHAUT
courir
programmation
PHP
pager
/
zéro
zéro
signifier
pertinence
nul
correspondance
plus
valeur
élever
plus
résultat
pertinent
select
id_message
match
sujet
texte
AGAINST
'
linux
nvidia
'
FROM
f_message
requête
récupérer
second
colonne
valeur
pertinence
celui
-ci
ne
être
classer
car
'
WHERE
ORDER
by
voici
dernier
méthode
permettre
récupérer
champ
pertinence
trier
ordre
pertinence
select
id_message
sujet
match
sujet
texte
AGAINST
'
linux
nvidia
'
FROM
f_message
WHERE
match
sujet
texte
AGAINST
'
linux
nvidia
'
ip-remplacée
>
rechercher
booléen
version
4.x
MySQL
introduire
notion
recherche
booléen
permettre
de
affiner
recherche
select
id_message
FROM
f_message
WHERE
match
sujet
texte
AGAINST
'
+linux
+nvidia
+ati
'
in
BOOLEAN
mode
voici
signification
caractère
supplémentaire
•
+
mot
devoir
obligatoirement
être
présent
chaque
enregistrement
retourner
•
-
mot
devoir
être
présent
enregistrement
retourner
•
valorisation
mot
toto
titi
valoriser
plus
toto
titi
rechercher
•
grouper
série
mot
•
~
négation
de
un
mot
contrairement
-
mot
tout
prendre
compter
pertinence
négatif
•
*
tronquage
de
un
mot
bon
*
=
bonjour
bonsoir
•
guillemet
`
`
chaîner
rechercher
tel
quel
MySQL
PHP
connexion
baser
donner
deux
étape
généralement
nécessaire
plus
simplicité
seconder
ne
être
obligatoire
bien
pratique
cas
travailler
seul
base
donner
tout
page
ip-remplacée
>
connexion
serveur
utiliser
fonction
mysql_connect
fonction
prendre
minimum
trois
paramètre
serveur
hostname
le
utilisateur
mot
passer
b_host
=
dns-remplacer
b_user
=
toto
b_pass
=
CreT1
S
.
ROHAUT
courir
programmation
PHP
pager
/
cnx
=
mysql_connect
b_host
b_user
b_pass
if
cnx
die
`
`
erreur
connexion
MySQL
ip-remplacée
>
choix
de
un
base
choisir
base
donner
défaut
fonction
mysql_select_db
prendre
minimum
paramètre
nom
base
second
paramètre
optionnel
ressourcer
retourner
mysql_connect
cas
connexion
plusieurs
serveur
MySQL
défaut
fonction
prendre
dernier
connexion
ouvert
celui
dernier
mysql_connect
exécuter
b_base
=
slyunix
db
=
msql_select_db
b_base
if
db
die
`
`
erreur
connexion
baser
b_base
ip-remplacée
>
fermeture
de
un
connexion
ferme
connexion
MySQL
fonction
mysql_close
cependant
cas
connexion
non
persistant
voir
point
fonction
ne
être
obligatoire
car
PHP
ferme
automatiquement
connexion
fin
de
un
script
mysql_close
cnx
ip-remplacée
>
séquencer
complet
base
b_host
=
dns-remplacer
b_user
=
toto
b_pass
=
CreT1
b_base
=
slyunix
mysql_connect
b_host
b_user
b_pass
or
die
`
`
erreur
connexion
MySQL
mysql_select_db
b_base
or
die
`
`
erreur
selection
b_base
mysql_clore
requête
ip-remplacée
>
exécuter
requête
exécuter
requête
SQL
fonction
mysql_query
fonction
prendre
moins
paramètre
requêter
SQL
sous
forme
chaîner
fonction
retourner
FALSE
cas
de
échec
colonne
tabler
invalide
droit
insuffisant
connexion
etc
attention
ne
être
parce
le
appel
mysql_query
'
retourner
de
erreur
fonction
retourner
ligne
résultat
cas
de
un
select
exemple
enfin
requêter
SQL
devoir
finir
point-virgule
requête
pouvoir
être
ne
importer
quel
typer
selection
mettre
jour
destruction
etc
cas
de
un
select
show
EXPLAIN
DESCRIBE
mysql_query
retourne
ressourcer
ensuite
utiliser
lire
résultat
result
=
mysql_query
`
`
select
id_message
sujet
from
f_message
S
.
ROHAUT
courir
programmation
PHP
pager
/
ip-remplacée
>
nombre
ligner
affecter
cas
de
un
DELETE
insert
replacer
UPDATE
pouvoir
connaître
nombre
ligner
affecter
modifier
requêter
le
aide
fonction
mysql_affected_rows
result
=
mysql_query
`
`
delete
from
f_message
where
login
=
'
toto
'
if
result
echo
mysql_affected_rows
enregistrement
supprimer
ip-remplacée
>
nombre
ligner
retourner
cas
de
un
select
nombre
de
enregistrement
ligner
retourner
obtenir
fonction
mysql_num_rows
result
=
mysql_query
`
`
select
*
from
f_message
where
id_message
if
result
echo
mysql_num_rows
'
enregistrement
retourner
'
ip-remplacée
>
récupérer
résultat
fonction
plus
sympathique
récupérer
enregistrement
après
le
exécution
de
un
sélection
mysql_fetch_array
prendre
minimum
paramètre
ressourcer
résultat
résultat
mysql_query
retourne
ligner
résultat
sous
forme
de
un
tableau
associatif
de
un
tableau
indexer
deux
défaut
tableau
retourner
fois
associatif
indexer
tableau
associatif
le
index
tableau
nom
champ
correspondre
colonne
tableau
indexer
colonne
numéroter
partir
zéro
noter
mysql_fetch_array
retourne
que
un
seul
ligne
résultat
passer
suivant
falloir
exécuter
fonction
nouveau
retourner
FALSE
quand
'
plus
ligner
lire
result
=
mysql_query
`
`
select
sujet
texte
from
f_message
where
login
=
'
toto
'
tab
=
mysql_fetch_array
result
/
/
premier
ligne
résultat
echo
tab
'
sujet
'
'
'
.
tab
'
texte
'
/
/
affiche
champ
sujet
texte
echo
tab
'
'
.
tab
/
/
idem
plusieurs
colonne
porter
nom
dernier
colonne
prioritaire
requête
afficher
nom
colonne
identique
mieux
renommer
select
dns-remplacer
col1
t2_nom
col2
FROM
t@card@
t@card@
second
paramètre
mysql_fetch_array
pouvoir
être
•
MYSQL_ASSOC
résultat
uniquement
tableau
associatif
index
=
nom
colonne
•
MYSQL_NUM
résultat
uniquement
tableau
indexer
numériquement
•
MYSQL_BOTH
défaut
deux
voici
comment
récupérer
tout
résultat
result
=
mysql_query
`
`
select
sujet
texte
from
f_message
where
login
=
'
toto
'
while
result
&
&
tab
=
mysql_fetch_array
result
{
echo
tab
'
sujet
'
'
'
.
tab
'
texte
'
/
/
affiche
champ
sujet
texte
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
noter
le
expression
while
rentrer
falloir
résultat
requêter
result
FALSE
requêter
fonctionner
que
il
rester
ligne
lire
autrement
dire
requêter
retourne
rien
rentrer
boucle
noter
enfin
que
il
exister
deux
autre
fonction
possible
•
mysql_fetch_row
équivaloir
mysql_fetch_array
var
MYSQL_NUM
•
mysql_fetch_assoc
équivaloir
mysql_fetch_array
var
MYSQL_ASSOC
ip-remplacée
>
insertion
auto-incrément
le
identifier
unique
de
un
table
souvent
entier
auto-incrémenter
le
avantage
que
il
'
besoin
gérer
identifier
ce
être
MySQL
déterminer
tout
seul
certain
cas
pouvoir
être
nécessaire
récupérer
valeur
champ
auto-incrémenter
après
insertion
exemple
mettre
jour
autre
enregistrement
lister
chaîner
jointure
etc
utiliser
cela
fonction
mysql_insert_id
result
=
mysql_query
`
`
insert
into
f_message
sujet
texte
valoir
'
test
'
'
test
'
id
=
mysql_insert_id
result
=
mysql_query
`
`
select
sujet
texte
from
f_message
where
id_message
=
id
tab
=
mysql_fetch_array
result
echo
tab
'
sujet
'
'
'
.
tab
'
texte
'
/
/
test
test
récupération
erreur
cas
de
erreur
lors
de
un
manipulation
MySQL
pouvoir
récupérer
numéro
le
erreur
MySQL
fonction
mysql_errno
pouvoir
récupérer
message
de
erreur
fonction
mysql_error
pouvoir
trouver
liste
code
de
erreur
ici
http
/
/
dns-remplacer
/
doc
/
en
/
dns-remplacer
S
.
ROHAUT
courir
programmation
PHP
pager
/
système
fichier
travail
fichier
ouverture
fonction
fopen
permettre
de
ouvrir
créer
fichier
selon
divers
mode
prendre
premier
pramètre
nom
fichier
chemin
nom
fichier
pouvoir
être
URL
falloir
cela
directif
allow_url_fopen
activer
dns-remplacer
second
paramètre
mode
de
ouverture
–
r
lecture
seul
début
fichier
–
r+
lecture
/
écriture
début
fichier
–
w
écriture
seul
tailler
fichier
ancien
contenu
effacer
créer
si
il
ne
exister
–
w+
lecture
/
écriture
tailler
fichier
créer
se
il
ne
exister
–
écriture
seul
fin
fichier
créer
si
il
ne
exister
–
a+
lecture
/
écriture
fin
fichier
créer
si
il
ne
exister
pouvoir
sous
Windows
rajouter
lettre
'
b
'
type
binaire
inutile
sous
Unix
enfin
fopen
admettre
troisième
paramètre
cas
fichier
ouvrir
rechercher
include_path
voir
dns-remplacer
valeur
retourner
ressourcer
fichier
identifier
fichier
valeur
FALSE
cas
de
échec
filer
=
fopen
'
dns-remplacer
'
'
a+
'
,
lecture
ip-remplacée
>
fgets
fonction
fgets
permettre
lire
ligne
de
un
fichier
mode
texte
fonction
se
arrêter
lorsque
elle
arriver
fin
fichier
retour
chariot
pouvoir
préciser
second
paramètre
longueur
texte
octet
défaut
paramètre
obligatoire
avant
version
premier
paramètre
la|le
identifier
fichier
FALSE
retourner
cas
de
erreur
attention
fgets
retourner
FALSE
fin
fichier
ligner
=
fgets
filer
ip-remplacée
>
fread
fonction
fread
permettre
lire
fichier
mode
binaire
second
paramètre
longueur
souhaiter
sous
Windows
falloir
penser
placer
'
b
'
fopen
lecture
se
arrêter
lorsque
octet
longueur
lire
fin
fichier
atteindre
que
un
erreur
survenir
S
.
ROHAUT
courir
programmation
PHP
pager
/
file
=
fopen
'
dns-remplacer
'
'
rb
'
img
=
fread
file
filesize
'
dns-remplacer
'
fclose
filer
ip-remplacée
>
fscanf
fonction
fscanf
lire
ligne
de
un
fichier
fonction
de
un
formatage
particulier
filer
=
fopen
'
dns-remplacer
'
'
r
'
while
ligne
=
fscanf
file
s\t
s\t
s\n
{
echo
ligner
}
ip-remplacée
>
fgetc
fonction
fgetc
lire
seul
caractère
fichier
contrairement
fgets
retourne
FALSE
fin
fichier
premier
paramètre
la|le
identifier
fichier
ip-remplacée
>
fgetss
fonction
fgetss
fonction
identique
fgets
ligner
retourner
débarrasser
éventuel
balise
PHP
HTML
pouvoir
préciser
troisième
paramètre
liste
baliser
autoriser
ip-remplacée
>
fgetcsv
fonction
fgetcsv
fonction
très
puissant
car
permettre
lire
fichier
type
CSV
ce
être
dire
champ
délimiter
récupérer
champ
tableau
Lesond
paramètre
longueur
maximal
de
un
ligne
fichier
troisième
paramètre
séparateur
virguler
défaut
voici
exemple
permettre
lire
fichier
CSV
de
en
afficher
résultat
sous
forme
de
un
tableau
HTML
filename
=
`
`
dns-remplacé
id
=
fopen
filename
`
`
r
while
dater
=
fgetcsv
id
filesize
filename
table
=
dater
fclore
id
echo
`
`
table
\n
foreach
tabler
row
{
echo
`
`
tr
foreach
row
dater
echo
`
`
td
dater
/
td
echo
`
`
/
tr
\n
}
echo
`
`
/
table
\n
ip-remplacée
>
renvoyer
fichier
sortir
standard
fonction
readfile
prendre
comme
paramètre
nom
fichier
renvoyer
contenir
sortir
standard
fonction
readgzfile
effectuer
chose
fichier
format
compresser
gzip
zlib
S
.
ROHAUT
courir
programmation
PHP
pager
/
Ecriture
deux
fonction
fwrite
fputs
identique
car
fputs
alias
fwrite
elle
écrire
chaîne
fichier
pouvoir
limiter
longueur
chaîner
troisième
paramètre
défaut
tout
chaîne
écrire
valeur
retourner
nombre
de
octet
écrire
FALSE
cas
de
erreur
filer
=
fopen
'
dns-remplacer
'
'
ret
=
fwrite
file
'
un
ligne
fichier
'
fclose
filer
cas
travail
fichier
binaire
falloir
oublier
sous
Windows
rajouter
le
option
'
b
'
déplacement
ip-remplacée
>
fseek
fonction
fseek
permettre
déplacer
fichier
second
paramètre
offset
nombre
de
octet
déplacement
pouvoir
être
négatif
défaut
déplacement
calculer
partir
début
fichier
troisième
paramètre
pouvoir
modifier
état
valeur
retourner
zéro
cas
réussite
sinon
positionnement
après
fin
fichier
ne
être
erreur
–
SEEK_SET
calcul
partir
début
fichier
position
final
Début+offset
–
SEEK_CUR
calcul
partir
le
emplacement
actuel
position
final
Actuelle+offset
–
SEEK_END
calcul
partir
fin
fichier
position
final
Fin+Offset
ret
=
fseek
file
,
SEEK_END
/
/
fin
fichier
ip-remplacée
>
ftell
fonction
fseek
renvoyer
position
actuel
pointeur
fichier
pos
=
ftell
filer
ip-remplacée
>
rewind
fonction
rewind
permettre
retourner
début
fichier
retourner
TRUE
cas
réussite
FALSE
sinon
fin
fichier
fonction
feof
indique
fin
fichier
non
retourner
TRUE
fin
fichier
atteindre
FALSE
sinon
fd
=
fopen
`
`
/
tmp
/
dns-remplacer
`
`
r
while
feof
fd
{
buffer
=
fgets
fd
echo
buffer
}
fclore
fd
S
.
ROHAUT
courir
programmation
PHP
pager
/
fermeture
ferme
fichier
fonction
fclose
.Elle
retourner
TRUE
cas
réussite
FALSE
sinon
travail
répertoire
répertoire
actuel
fonction
getcwd
retourner
nom
dossier
travail
courir
ce
être
dire
là
attention
sous
Windows
fonction
faire
distinction
entre
majuscule
minuscule
chemin
=
getcwd
echo
chemin
/
srv
/
www
/
site
déplacer
déplacer
fonction
chdir
le
argument
pouvoir
être
absoudre
relatif
cas
de
erreur
FALSE
retourner
if
chdir
'
.
/
rep
'
getcwd
else
die
'
impossible
déplacer
'
ouvrir
lister
fermer
ouvrir|ouvrer
répertoire
lecture
fonction
opendir
prendre
comme
unique
paramètre
nom
chemin
répertoire
cas
de
échec
fonction
retourner
FALSE
sinon
identifier
handler
répertoire
lire
entrer
fonction
readdir
prendre
comme
paramètre
la|le
identifier
répertoire
quand
'
plus
rien
lire
fonction
retourner
FALSE
sinon
retourner
nom
le
entrée
actuellement
lire
attention
entrer
.
.
lire
comme
autre
ferme
répertoire
cours|cour
lecture
fonction
closedir
prendre
comme
paramètre
la|le
identifier
répertoire
handle
=
opendir
'
'
while
file
=
readdir
handle
{
if
filer
=
`
`
&
&
file
=
`
`
.
.
{
echo
`
`
file\n
}
}
closedir
handle
pouvoir
retourner
début
répertoire
fonction
rewinddir
prendre
comme
paramètre
identifier
répertoire
prochain
lecture
premier
répertoire
récupérer
tout
entrée
se
il
possible
récupérer
le
ensemble
entrer
de
un
répertoire
fonction
S
.
ROHAUT
courir
programmation
PHP
pager
/
précédent
boucle
fonction
scandir
proposer
chose
ligne
placer
tout
nom
fichier
chemin
indiquer
tableau
premier
paramètre
chemin
répertoire
second
optionnel
définir
le
ordre
tri
alphabétique
défaut
indique
tri
alphabétique
décroître
file
=
scandir
'
.
/
rep
'
print_r
file
travail
système
fichier
information
fichier
pouvoir
obtenir
divers
information
fichier
le
aide
commander
type
is_x
–
is_dir
TRUE
nom
fichier
répertoire
–
is_file
TRUE
nom
fichier
véritable
fichier
normal
–
is_executable
TRUE
fichier
exécutable
sous
Windows
falloir
PHP
5.x
–
is_readable
TRUE
sir
fichier
lisible
–
is_writeable
is_writable
TRUE
fichier
accessible
écriture
–
is_link
TRUE
fichier
lien
pouvoir
obtenir
détail
fichier
fonction
filexxx
–
file_exists
TRUE
fichier
exister
–
fileatime
retourne
sous
forme
TIMESTAMP
dernier
date
de
accès
sous
Windows
dernier
dater
modification
–
filectime
retourne
dater
création
–
filemtime
retourne
dater
modification
–
filegroup
retourner
GID
fichier
récupérer
nom
réel
groupe
fonction
posix_getgrgid
–
fileowner
retourner
UID
fichier
récupérer
nom
réel
le
utilisateur
fonction
posix_getpwuid
–
fileinode
retourner
le
inode
fichier
–
fileperm
retourne
permettre
fichier
attention
résultat
base
falloir
convertir
base
fonction
base_convert
–
filesize
retourner
taille
fichier
octet
S
.
ROHAUT
courir
programmation
PHP
pager
/
–
filetype
retourner
type
fichier
attention
se
agir
type
fichier
disquer
contenir
image
etc
fifo
char
dir
block
link
filer
unknown
fichier
déjà
ouvrir
pouvoir
obtenir
information
fonction
fstat
prendre
comme
paramètre
identifier
fichier
retourner
fopen
retourne
tableau
indexer
numériquement
associatif
fonction
stat
retourner
chose
précis
chemin
nom
fichier
fonction
lstat
quasi-identique
sauf
cadre
lien
information
lien
lui
même
fichier
pointer
retourner
@ord@
volume
encore
dev
@ord@
inode
encore
ino
@ord@
droit
de
accès
fichier
mode
protection
inode
convertir
octal
voir
aussi
fileperm
encore
mode
@ord@
nombre
lien
encore
nlink
@ord@
id
le
utilisateur
propriétaire
encore
uid
@ord@
id
groupe
propriétaire
encore
gid
@ord@
type
volume
le
inode
*
encore
rdev
@ord@
taille
octet
encore
size
@ord@
date
dernier
accès
encore
atime
@ord@
date
dernier
modification
encore
mtime
10.date
dernier
changement
encore
ctime
11.taille
bloc
système
entrer
/
sortir
*
encore
blksize
12.nombre
bloc
allouer
encore
block
action
fichier
répertoire
retrouver
ici
fonction
porter
souvent
nom
leur
équivalent
sous
shell
Unix
–
dirname
basemane
isoler
chemin
nom
de
un
fichier
–
chown
chgrp
changer
propriétaire
groupe
de
un
fichier
premier
paramètre
fichier
second
groupe
propriétaire
UID
GID
tout
lettre
–
chmod
modifier
droit
premier
paramètre
nom
fichier
second
droit
octal
attention
sous
Windows
résultat
pouvoir
surprendre
S
.
ROHAUT
courir
programmation
PHP
pager
/
–
copy
copier
de
un
fichier
source
destination
–
link
créer
lien
hard
link
cibler
nom
lien
–
symlink
créer
lien
symbolique
cibler
nom
lien
–
mkdir
créer
répertoire
second
paramètre
mode
droit
défaut
avant
application
masquer
–
rename
renommer
et
/
ou
déplacer
fichier
orgine
destination
–
rmdir
supprimer
répertoire
devoir
être
vide
–
unlink
supprimer
fichier
–
umask
modifier
umask
défaut
Upload
fichier
le
upload
fichier
permettre
de
envoyer
depuis
poste
client
fichier
serveur
opération
nécessiter
navigateur
savoir
prendre
charge
baliser
spécial
le
appel
de
un
script
PHP
côté
page
HTML
falloir
modifier
définition
de
un
formulaire
placer
champ
formulaire
type
filer
indiquer
taille
maximal
fichier
télécharger
nom
HIDDEN
bom
MAX_FILE_SIZE
tailler
préciser
octet
champ
devoir
être
placer
avant
le
apparition
champ
type
filer
formulaire
devoir
être
type
POST
bien
GET
possible
voir
documentation
PHP
type
de
encodage
ENCTYPE
`
`
/
multipart
/
form-data
devoir
être
préciser
form
ENCTYPE
=
multipart
/
form-data
action
=
/
dns-remplacé
method
=
post
input
typer
=
hidden
name
=
MAX_FILE_SIZE
valoir
=
input
NAME
=
avatar
type
=
filer
SIZE
=
input
typer
=
submit
valoir
=
enregistrer
/
/
form
noter
certain
navigateur
ficher
totalement
poid
taille
fichier
envoyé
réagir
variable
MAX_FILE_SIZE
cas
vérification
devoir
être
faire
côté
serveur
pire
pouvoir
limiter
côté
serveur
tailler
maximal
le
aide
paramètre
upload_max_filesize
dns-remplacer
choisir
fichier
via
boite
dialoguer
gestionnaire
fichier
quand
cliquer
bouton
parcourir
fois
formulaire
valider
donner
formulaire
fichier
envoyer
page
PHP
côté
PHP
récupérer
information
fichier
uploadé
via
tableau
_FILE
index
suivant
_FILE
nom
propiete
nom
nom
champ
formulaire
filer
propriété
–
_FILES
'
userfile
'
'
name
'
nom
original
fichier
tel
machine
client
web
S
.
ROHAUT
courir
programmation
PHP
pager
/
–
_FILES
'
userfile
'
'
type
'
type
mimer
fichier
navigateur
fournir
information
exemple
cela
pouvoir
être
`
`
image
/
gif
–
_FILES
'
userfile
'
'
size
'
taille
octet
fichier
télécharger
–
_FILES
'
userfile
'
'
tmp_name
'
nom
temporaire
fichier
charger
machiner
serveur
–
_FILES
'
userfile
'
'
error
'
code
de
erreur
associer
téléchargement
fichier
PHP
défaut
fichier
télécharger
attenter
déplacement
placer
répertoire
temporaire
système
variable
système
TEMP
TMPDIR
répertoire
préciser
paramètre
configuration
upload_tmp_dir
fichier
dns-remplacer
conseiller
de
initialiser
de
utiliser
paramètre
chemin
fichier
temporaire
uploadé
tmp_file
=
ini_get
`
`
upload_tmp_dir
'
/
'
.
_FILE
'
userfile
'
'
tmp_name
'
savoir
fichier
correctement
uploadé
méthode
POST
pouvoir
utiliser
fonction
is_uploaded_file
prendre
comme
paramètre
nom
fichier
uploadé
if
is_uploaded_file
_FILE
'
userfile
'
'
name
'
{
/
/
tmp_name
echo
_FILES
'
userfile
'
'
size
'
}
savoir
position
fichier
temporaire
uploadé
se
il
correctement
uploadé
pouvoir
utiliser
fonction
copy
mieux
de
utiliser
fonction
move_uploaded_file
tester
réussite
le
upload
déplacer
fichier
premier
paramètre
nom
fichier
uploadé
pouvoir
être
nom
champ
filer
nom
réel
fichier
nom
fichier
temporaire
if
move_uploaded_file
_FILES
'
avatar
'
'
tmp_name
'
_SERVER
'
DOCUMENT_ROOT
'
`
`
/
forum
/
avatar
/
login
_FILES
'
avatar
'
'
name
'
{
avatar
=
login
.
_FILES
'
avatar
'
'
name
'
chmod
_SERVER
'
DOCUMENT_ROOT
'
`
`
/
forum
/
avatar
/
avatar
,
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
travail
chaîne
fonction
coder
HTML
MySQL
gestion
caractère
verrouiller
fonction
addslashes
rajouter
slashes
backslashes
\
devant
tout
caractère
devoir
être
verrouiller
caractère
`
`
'
\
caractère
nul
NULL
ainsi
chaîne
résultant
pouvoir
être
utiliser
être
placer
base
donner
via
commande
SQL
fonction
stripslashes
effectuer
le
opération
inverse
supprimer
anti-slash
sauf
cas
double
anti-slash
\\
ne
en
supprimer
que
un
chaine
=
le
oreille
cassé
c1
=
addslashes
chainer
echo
c1
/
/
L\'oreille
cassé
echo
stripslashes
c1
/
/
le
oreille
casser
balise
caractère
spécial
HTML
fonction
strip_tags
permettre
filtrer
chaîne
contenir
balise
tags
HTML
autoriser
certain
interdire
de
autre
premier
paramètre
chaîner
HTML
second
liste
tags
autoriser
attention
fonction
modifier
contenir
balise
autoriser
laisser
ainsi
attribut
class
styler
appel
JavaScript
chainer
=
u
i
b
bonjour
ami
/
b
/
i
/
u
echo
strip_tags
chainer
'
u
i
b
'
/
/
bonjour
ami
echo
strip_tags
chaine
'
b
'
/
/
b
bonjour
ami
/
b
gras
fonction
htmlspecialchars
convertir
certain
caractère
spécial
entité
HTML
caractère
–
&
&
amp
–
`
`
&
quot
ENT_NOQUOTES
utiliser
–
'
&
#
ENT_QUOTES
utiliser
–
&
lt
–
&
gt
second
paramètre
ENT_xxx
définir
fonctionnement
rapport
quotes
fonction
htmlentities
aller
plus
loin
remplacer
tout
caractère
équivalent
HTML
décoder
tel
chaîne
falloir
alors
utiliser
fonction
html_entity_decode
fonction
nl2br
remplacer
tout
retour-chariot
de
un
chaîne
retour
ligner
HTML
br
/
fonction
urlencode
formater
chaîne
utilisation
URL
espace
S
.
ROHAUT
courir
programmation
PHP
pager
/
remplacer
+
tout
caractère
non-alphanumérique
sauf
-
_
remplacer
équivalent
hexadécimal
XX
tel
chaîner
décoder
fonction
urldecode
fonction
texte
général
découper
chaîne
fonction
explode
permettre
découper
chaîne
selon
séparateur
retourne
tableau
contenir
divers
élément
découper
premier
paramètre
séparateur
second
chaîne
troisième
paramètre
permettre
limiter
nombre
valeur
retourner
chainer
=
'
login
pwd
uid
gid
'
tab
=
explode
'
'
chaine
foreach
tab
valoir
echo
valoir
/
/
login
pwd
uid
gid
fonction
inverse
nommer
implode
.Le
premier
paramètre
coller
caractère
séparation
placer
entre
divers
élément
chaîner
reconstituer
second
paramètre
tableau
/
/
suite
le
exemple
précédent
newchaine
=
implode
'
'
tab
echo
chaine
/
/
login
pwd
uid
gid
fonction
join
alias
implode
pouvoir
aussi
effectuer
découpage
tout
caractère
fonction
chunk_split
découpe
premier
paramètre
morceau
longueur
second
paramètre
défaut
caractère
comme
séparateur
troisième
paramètre
\n\r
défaut
chainer
=
'
FF5EB649C4
'
n_chaine
=
chunk_split
chaine
,
'
'
echo
n_chaine
/
/
FF
:
5E
B6
:
C@card@
fonction
wordwrap
effectuer
césure
de
un
chaîne
chaîner
résultant
texte
découper
tenir
compter
mot
défaut
longueur
second
paramètre
caractère
pouvoir
préciser
chaîne
coupure
ligner
troisième
paramètre
dernier
paramètre
se
il
force
coupure
milieu
de
un
mot
affichage
HTML
falloir
encapsuler
résultat
nl2br
chainer
=
bonjour
ami
bienvenir
merveilleux
monde
langage
PHP
`
`
echo
nl2br
wordwrap
chaine
,
retourne
bonjour
ami
bienvenir
merveilleux
monde
langage
PHP
fonction
str_split
découpe
chaîner
caractère
tableau
défaut
longueur
pouvoir
choisir
second
paramètre
S
.
ROHAUT
courir
programmation
PHP
pager
/
pouvoir
découper
partie
chaîner
fonction
substr
premier
paramètre
chaîner
second
début
depuis
dernier
longueur
début
chaîne
pouvoir
être
valeur
négatif
cas
compte
partir
fin
chaîne
chainer
=
'
abcdef
'
echo
substr
chaine
,
/
/
abcdef
echo
substr
chaine
,
,
/
/
cde
echo
substr
chainer
/
/
f
echo
substr
chainer
,
/
/
fonction
trim
rtrim
ltrim
supprimer
caractère
invisible
droit
trim
rtrim
gauche
trim
ltrim
chaîne
rechercher
comparer
fonction
strcmp
effectuer
comparaison
deux
chaîne
retourner
chaine1
inférieur
chaine2
égaler
sinon
fonction
strncmp
effetmais
longueur
donner
troisième
paramètre
fonction
strcasecmp
strncasecmp
verser
insensible
casse
fonction
strstr
rechercher
premier
occurrence
second
paramètre
premier
retourne
chaîne
depuis
position
jusqu
'
fin
fonction
strchr
alias
strstr
fonction
stristr
insensible
casser
fonction
strrchr
effectuer
quasiment
chose
sauf
que
elle
retourner
fin
chaîne
depuis
dernier
caractère
trouver
fonction
strpos
rechercher
chaîne
premier
paramètre
chaîner
second
paramètre
retourner
position
pouvoir
placer
troisième
paramètre
position
départir
recherche
S
.
ROHAUT
courir
programmation
PHP
pager
/
session
cookies
cookies
création
cookie
se
envoyer
fonction
setcookie
argument
suivant
•
nom
•
valeur
•
date
de
expiration
timestamp
unix
•
chemin
validité
cookie
suivant
chemin
le
url
•
domaine
parer
défaut
vôtre
•
secure
flag
sécurité
cookie
ne
être
accessible
via
connexion
sécuriser
seul
premier
argument
obligatoire
spécifier
valeur
suffire
rien
mettre
attention
quelque
limitation
•
cookie
envoyer
entêter
HTTP
pouvoir
être
envoyer
sortie
déjà
lieu
html
texte
•
cookie
ne
être
disponible
page
'
créer
falloir
recharger
page
pointer
autre
•
cookie
pouvoir
être
supprimer
que
avec
même
paramètre
servir
création
ce
être
navigateur
supprimer
cookie
setcookie
`
`
testcookie
session_id
time
if
isset
_COOKIE
'
testcookie
'
echo
_COOKIE
'
testcookie
'
le
exemple
précédent
premier
chargement
rien
afficher
car
contenir
cookie
ne
être
encore
accessible
deuxième
chargement
valeur
réellement
afficher
attention
décalage
entre
mise
jour
le
accès
if
isset
_COOKIE
'
testcookie
'
{
setcookie
`
`
testcookie
'
toto
'
time
header
`
`
location
http
/
/
_SERVER
'
HTTP_HOST
'
_SERVER
'
REQUEST_URI
'
}
exemple
regarder
cookie
exister
sinon
créer
rappeler
page
accès
accéder
cookie
grâce
variable
global
_COOKIE
tableau
le
index
tableau
nom
cookie
S
.
ROHAUT
courir
programmation
PHP
pager
/
valeur
=
_COOKIE
'
testcookie
'
echo
valeur
/
/
rapport
le
exemple
précédent
toto
noter
pouvoir
placer
tableau
cookies
suffire
nommer
cookie
notation
crochet
setcookie
`
`
testcookie
'
toto
'
time
setcookie
`
`
testcookie
'
titi
'
time
setcookie
`
`
testcookie
'
tata
'
time
page
suivant
foreach
_COOKIE
tab
{
if
is_array
tab
foreach
tab
key
=
valoir
echo
`
`
key
=
valoir
}
suppression
supprimer
cookie
suffire
donner
date
antérieur
date
actuel
celui
-ci
if
isset
_COOKIE
'
testcookie
'
{
setcookie
`
`
testcookie
'
toto
'
time
}
else
{
setcookie
`
`
testcookie
time
}
if
isset
_COOKIE
'
testcookie
'
echo
`
`
OK
else
echo
`
`
cookie
le
exemple
précédent
appel
script
aller
provoquer
successivement
le
affichage
cookie
OK
identification
HTTP
connexion
possibilité
ne
être
disponible
PHP
utiliser
comme
module
apache
tant
script
CGI
le
identification
HTTP
permettre
via
le
envoi
de
un
HEADER
HTTP
demander
identification
client
cas
navigateur
aller
ouvrir
fenêtre
connexion
demandant
saisir
login
mot
passer
PHP
récupérer
bien
entendre
valeur
voici
le
exemple
issu
documentation
PHP
if
isset
_SERVER
'
PHP_AUTH_USER
'
{
header
'
WWW-Authenticate
basic
realm
=
Slyunix
'
header
'
HTTP
/
Unauthorized
'
echo
'
texte
utiliser
visiteur
utiliser
bouton
d\'annulation
'
exit
}
else
{
echo
`
`
p
bonjour
{
_SERVER
'
PHP_AUTH_USER
'
}
/
p
echo
`
`
p
mot
passer
{
_SERVER
'
PHP_AUTH_PW
'
}
/
p
}
exemple
passer
entêter
demande
de
authentification
cas
de
échec
bouton
annuler
message
de
annulation
afficher
sinon
pouvoir
récupérer
valeur
via
variable
•
_SERVER
'
PHP_AUTH_USER
'
login
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
_SERVER
'
PHP_AUTH_PW
'
mot
passer
déconnexion
déconnexion
ne
être
évident
cela
car
fois
connecter
identifiants
placer
session
méthode
plus
simple
consister
fermer
navigateur
relancer
session
PHP
principe
session
permettre
préserver
donner
lors
visite
de
un
site
chaque
personne
voir
attribuer
identifier
unique
appelé
identifier
session
SID
SID
stocker
cookie
passer
URL
pouvoir
ainsi
définir
nombre
infini
variable
accessible
durant
tout
durée
session
noter
fermer
relancer
navigateur
changer
de
identifier
précédent
session
perdu
nommé
pouvoir
connaître
SID
grâce
constant
nom
fonction
session_id
utilisation
ip-remplacée
>
ouverture
dns-remplacer
valeur
dns-remplacer
_start
activer
session
démarrer
manière
automatique
lors
le
accès
pager
sinon
falloir
utiliser
explicitement
fonction
session_start
appel
créer
session
restaurer
session
précédemment
stocker
serveur
attention
le
ouverture
de
un
session
devoir
obligatoirement
apparaître
avant
tout
sortie
/
affichage
script
PHP
balise
HTML
ligner
vide
pouvoir
créer
récupérer
session
nommé
préciser
session_name
prendre
comme
paramètre
nom
session
devoir
être
créer
premier
appel
accéder
appel
suivant
session
défaut
nommer
PHPSESSID
ce
être
celui
là
charger
session_name
ne
être
appeler
falloir
appeler
session_name
avant
session_start
accéder
session
nommer
session
pouvoir
aussi
être
indirectement
créer
ouvrir
le
utilisation
fonction
session_register
ip-remplacée
>
variable
session
deux
moyen
créer
variable
session
accessible
depuis
ne
importer
quel
pager
visiter
partir
moment
session_start
appeler
premier
moyen
fonctionner
fonctionner
register_globals
off
dns-remplacer
méthode
déconseiller
S
.
ROHAUT
courir
programmation
PHP
pager
/
fonction
session_register
prendre
comme
paramètre
nom
variable
définir
comme
variable
session
variable
pouvoir
ensuite
être
accéder
nom
txt
=
'
bonjour
ami
'
session_register
'
txt
'
/
/
txt
devenir
variable
session
savoir
variable
enregistrer
session
courant
utiliser
session_is_registered
if
session_is_registered
'
txt
'
echo
txt
supprimer
variable
session
falloir
utiliser
session_unregister
contre
falloir
oublier
de
utiliser
unset
supprimer
variable
global
car
précédent
fonction
supprimer
empêcher
seulement
sauvegarder
fin
script
if
session_is_registered
'
txt
'
{
session_unregister
'
txt
'
unset
txt
}
méthode
meilleur
utiliser
utiliser
tout
simplement
tableau
global
_SESSION
ainsi
_SESSION
'
txt
'
=
bonjour
ami
créer
variable
session
txt
echo
_SESSION
'
txt
'
le
affiche
unset
_SESSION
'
txt
'
la|le
effacer
effacer
tout
variable
session
suffire
faire
_SESSION
=
array
expiration
session
durer
vie
de
un
session
PHP
dépendre
trois
paramètre
configuration
fichier
dns-remplacé
dns-remplacer
_maxlifetime
dns-remplacé
_lifetime
dns-remplacer
_expire
premier
concerner
durer
vie
donner
serveur
nombre
second
défaut
seconde|second
minute
delà
donner
supprimer
elle
recharger
via
cookie
session
lors
prochain
appel
second
durée
vie
cookie
session
exprimer
second
défaut
valeur
zéro
signifier
jusqu
'
navigateur
éteind
troisième
durée
vie
donner
session
minute
valeur
défaut
minute
trois
heure
vouloir
dire
session
pouvoir
rester
trois
heure
pager
valeur
perdre
delà
falloir
rouvrir
nouveau
session
S
.
ROHAUT
courir
programmation
PHP
pager
/
restaurer
nouveau
valeur
chaque
chargement
pager
ouverture
session
recommencer
décompte
pouvoir
modifier
délai
de
expiration
session
grâce
fonction
session_cache_expire
prendre
comme
valeur
nouveau
durer
minute
sans
paramètre
retourner
valeur
actuel
changer
le
accès
défaut
PHP
savoir
très
bien
débrouiller
tout
seul
pouvoir
remplacer
prendre
charge
défaut
session
propre
fonction
boire
gérer
le
ouverture
fermeture
encore
sauvegarder
donner
session
fichier
baser
donner
autre
utilisation
pouvoir
être
traçage
via
PHP
tout
ouverture
/
fermeture
session
cela
utiliser
fonction
session_set_save_handler
étude
dépasser
cadre
cours|cour
voici
exemple
tirer
documentation
PHP
if
mysql_table_exists
`
`
session
DB
{
query
=
'
CREATE
tabler
session
SessionID
char
not
null
LastUpdated
datetime
not
null
DataValue
text
PRIMARY
KEY
SessionID
index
LastUpdated
'
mysql_query
query
}
function
sessao_open
aSavaPath
aSessionName
{
global
aTime
sessao_gc
aTime
return
True
}
function
sessao_close
{
return
True
}
function
sessao_read
aKey
{
query
=
`
`
select
DataValue
FROM
session
WHERE
SessionID
=
'
aKey
'
busca
=
mysql_query
query
if
mysql_num_rows
busca
=
=
{
r
=
mysql_fetch_array
busca
return
r
'
DataValue
'
}
ELSE
{
query
=
`
`
insert
INTO
session
SessionID
LastUpdated
DataValue
valoir
'
aKey
'
NOW
`
`
mysql_query
query
return
`
`
}
}
function
sessao_write
aKey
aVal
{
aval
=
addslashes
aVal
query
=
`
`
UPDATE
session
set
DataValue
=
'
aVal
'
LastUpdated
=
NOW
WHERE
SessionID
=
'
aKey
'
mysql_query
query
return
True
S
.
ROHAUT
courir
programmation
PHP
pager
/
}
function
sessao_destroy
aKey
{
query
=
`
`
DELETE
FROM
session
WHERE
SessionID
=
'
aKey
'
mysql_query
query
return
True
}
function
sessao_gc
aMaxLifeTime
{
query
=
`
`
DELETE
FROM
session
WHERE
UNIX_TIMESTAMP
NOW
-
UNIX_TIMESTAMP
LastUpdated
aMaxLifeTime
mysql_query
query
return
True
}
session_set_save_handler
`
`
sessao_open
`
`
sessao_close
`
`
sessao_read
sessao_write
`
`
sessao_destroy
`
`
sessao_gc
image
Pré-requis
important
ceci
concerner
version
PHP
avant
EasyPHP
certain
fonction
comme
gd_info
encore
imagecreatetruetype
toujours
disponible
car
PHP
faire
appel
bibliothèque
externe
appeler
GD2
version
au-delà
trouver
patches
le
adresse
http
/
/
dns-remplacer
/
gd
/
avant
version
version
GD
linkée
PHP
ceci
concerner
utilisateur
PHP
+
EasyPHP
Windows
configuration
défaut
EasyPHP
ne
inclure
support
image
cela
falloir
modifier
fichier
dns-remplacé
retirer
commentaire
extension
=
php_
dns-remplacer
créer
image
type
possible
falloir
tout
de
abord
choisir
type
le
image
souhaiter
créer
cela
pouvoir
tester
quel
type
PHP
pouvoir
générer
fonction
imagetype
constant
associer
•
IMG_PNG
format
PNG
•
IMG_JPG
format
JPEG
•
IMG_GIF
format
GIF
•
IMG_WBMP
format
Windows
Bitmap
BMP
if
imagetyper
&
IMG_PNG
{
echo
`
`
type
PNG
supporter
puis
début
script
envoyer
header
spécifier
type
de
image
S
.
ROHAUT
courir
programmation
PHP
pager
/
header
`
`
Content-type
image
/
png
/
/
image
/
gif
image
/
jpeg
création
ip-remplacée
>
nouveau
image
dynamique
enfin
créer
image
fonction
imagecreate
baser
table
couleur
indexer
imagecreatetruecolor
truecolor
comme
paramètre
largeur
hauteur
seconder
conseiller
documentation
PHP
fonction
retourner
ressource
identifier
le
image
défaut
le
image
noir
img
=
createimage
,
or
die
`
`
PHP
supporter
image
ip-remplacée
>
récupération
de
un
image
existant
PHP
pouvoir
charger
image
existant
lieu
créer
tout
pièce
cas
le
image
charger
depuis
fichier
pouvoir
ensuite
retravailler
comme
souhaiter
pouvoir
utiliser
fonction
•
imagecreatefromgif
charge
image
GIF
•
imagecreatefromjpeg
charger
image
JPEG
•
imagecreatefrompng
charger
image
PNG
•
imagecreatefromstring
charger
image
depuis
chaîne
texte
exemple
champ
publication
enfin
publier
le
image
fonction
imagexxx
fonction
utiliser
sans
paramètre
le
image
créer
rediriger
vers
sortie
standard
pouvoir
toutefois
préciser
comme
paramètre
nom
fichier
cas
le
image
sauver
disquer
format
spécifier
•
imagepng
créer
imager
format
PNG
•
imagegif
créer
image
format
GIF
•
imagejpeg
créer
imager
format
JPEG
fois
le
image
créer
pouvoir
supprimer
imagedestroy
décharger
mémoire
voici
coder
de
un
page
PHP
dns-remplacé
retourner
image
header
`
`
Content-type
image
/
png
img
=
imagecreatetruecolor
or
die
`
`
impossible
créer
flux
de
image
GD
/
*
ici
placer
commande
dessin
manipulation
*
/
imagepng
img
imagedestroy
img
S
.
ROHAUT
courir
programmation
PHP
pager
/
chargement
via
autre
pager
appeler
image
dynamique
depuis
page
HTML
PHP
suffire
placer
balise
IMG
img
src
=
dns-remplacer
travailler
image
récupérer
information
fonction
getimagesize
permettre
récupérer
information
image
passer
nom
fichier
ressourcer
image
retourner
tableau
indexer
list
width
height
typer
attr
=
getimagesize
`
`
dns-remplacer
•
width
largeur
x
•
height
hauteur
•
typer
=
GIF
=
JPG
=
PNG
=
PSD
=
BMP
=
TIFF
ordre
octet
Intel
=
TIFF
ordre
octet
Motorola
=
JPC
=
JP2
=
JPX
=
JB2
=
SWC
=
IFF
•
attr
chainer
width
/
height
HTML
travailler
image
que
on
créer
nous
même
•
imagesx
largeur
x
le
image
•
imagesy
hauteur
le
image
couleur
ne
être
possible
voir
tout
fonction
cependant
choser
retenir
notion
paletter
indexer
createimage
notion
truetype
premier
cas
couleur
indexer
via
numéro
second
cas
couleur
composant
RVB
fonction
imagecolorallocate
permettre
définir
couleur
utiliser
image
premier
paramètre
ressourcer
le
image
trois
autre
niveau
rouge
vert
bleu
couleur
attention
imager
créer
createimage
paletter
indexer
premier
index
couleur
fondre
premier
appel
imagecolorallocate
cas
modifier
couleur
fondre
white
=
imagecolorallocate
img
,
,
,
fonction
imagecolorat
retourner
valeur
exact
le
index
paletter
entier
RVB
point
coordonné
x
/
y
la|le
imager
S
.
ROHAUT
courir
programmation
PHP
pager
/
color
=
imagecolorextact
img
,
,
fonction
imagecolortransparent
permettre
définir
couleur
transparence
de
un
image
paletter
indexer
premier
paramètre
ressourcer
le
image
obligatoirement
créer
imagecreate
second
valeur
retourner
imagecolorallocate
fonction
imagecolorstotal
retourner
nombre
total
couleur
utiliser
le
image
donner
dessin
ip-remplacée
>
remplissage
utiliser
fonction
imagefill
background
=
imagecolorallocate
img
,
,
,
ImageFill
img
,
,
background
fonction
imagefilltoborder
permettre
remplissage
de
un
zone
délimiter
couleur
donner
cas
deux
dernier
paramètre
couleur
bordurer
couleur
remplissage
ip-remplacée
>
point
utiliser
imagesetpixel
green
=
imagecolorallocate
img
,
,
,
Imagesetpixel
img
,
,
green
ip-remplacée
>
ligne
utiliser
imageline
imageline
img
,
,
,
blue
ip-remplacée
>
rectangle
utiliser
imagerectangle
rectangle
simple
imagefilledrectangle
rectangle
remplir
blue
=
ImageColorAllocate
img
,
,
,
imagerectangle
img
,
,
,
blue
imagefilledrectangle
img
,
,
,
,
green
ip-remplacée
>
cercler
ellipse
utiliser
imageellipse
imagefilledellipse
attention
deux
premier
paramètre
coordonner
centrer
le
ellipse
deux
autre
largeur
hauteur
le
ellipse
imageellipse
img
,
red
pouvoir
aussi
faire
arc
cercle
fonction
imagearc
imagefilledarc
juste
S
.
ROHAUT
courir
programmation
PHP
pager
/
avant
couleur
précis
début
fin
le
arc
degré
ip-remplacée
>
polygone
utiliser
fonction
imagepolygone
imagefilledpolygone
sommet
polygone
définir
tableau
tab
=
x0
tab
=
y0
tab
=
x1
tab
=
y1
devoir
aussi
préciser
nombre
sommet
imagepolygon
img
array
,
,
blue
ip-remplacée
>
texte
simple
utiliser
imagestring
imagestring
img
`
`
simple
chaîne
texte
text_color
second
paramètre
numéro
policer
défaut
pager
actuel
navigateur
programmation
objet
structure
classer
collection
variable
attribut
fonction
méthode
fonctionner
variable
le
ensemble
former
membre
propriété
le
objet
classer
définir
utiliser
mot-clé
class
class
panier
{
/
/
Eléments
panier
var
contenir
/
/
ajout
qte
article
type
coder
panier
function
ajout_article
code
qte
{
if
isset
this-
contenir
coder
this-
contenir
coder
+
=
qte
else
this-
contenir
coder
=
qte
}
/
/
suppression
num
article
typer
artnr
panier
function
suppr_article
code
qte
{
if
this-
contenir
code
qte
{
this-
contenir
code
-
=
qte
return
TRUE
}
else
{
return
FALSE
}
}
}
création
de
un
objet
utiliser
mot-clé
new
mon_caddie
=
new
panier
constructeur
exister
voir
plus
loin
pouvoir
bien
entendre
passer
valeur
création
S
.
ROHAUT
courir
programmation
PHP
pager
/
o@card@
=
new
Obj
`
`
riri
accès
membre
PHP
utiliser
caractère
-
accéder
membre
syntaxe
suivant
noter
que
on
utiliser
devant
nom
de
attribut
mon_caddie-
contenir
=
array
'
ref01
'
=
'
ref02
'
=
sein
de
un
objet
accéder
attribut
classe
préciser
variable
this
précis
utiliser
faire
variable
localz
méthode
this-
contenir
'
ref01
'
+
=
PHP
PHP
étendre
possibilité
de
accès
membre
variable
fonction
via
variable
dynamique
ex
class
panier
{
/
/
Eléments
panier
public
etat
=
false
/
/
false
vide
}
function
bidon
{
return
'
etat
'
}
mon_caddie
=
new
panier
pipo
=
'
etat
'
echo
mon_caddie-
pipo
/
/
affiche
this-
etat
fonction
=
'
affiche_panier
'
mon_caddie-
fonction
echo
nom_caddie-
{
bidon
}
le
opérateur
le
opérateur
permettre
faire
référence
membre
de
un
classe
baser
voir
héritage
de
utiliser
méthode
alors
classe
'
instanciée
class
{
function
example
{
echo
`
`
fonction
original
.
br
\n
}
}
/
/
'
de
objet
classe
/
/
le
affichage
fonction
original
:
example
cas
de
un
appel
méthode
de
un
classe
non
instanciée
de
objet
méthode
devoir
appeler
de
attribut
classer
puisqu'ils
ne
exister
raison
falloir
employer
variable
this
méthode
appeler
S
.
ROHAUT
courir
programmation
PHP
pager
/
variable
protection
PHP
4.x
déclarer
attribut
mot-clé
var
attribut
considérer
comme
tout
public
PHP
posséder
aucun
mécanisme
protection
variable
ainsi
attribut
accessible
depuis
tout
classe
dériver
depuis
le
extérieur
classer
var
mavariable
interdire
de
initialiser
variable
lors
déclaration
var
toto
=
salut
`
`
/
/
marche
PHP
5.x
ip-remplacée
>
protection
variable
fonction
PHP
rajouter
notion
protection
donner
manquer
PHP
appeler
cela
trois
P
public
protected
private
mots-clés
correspondant
voici
tableau
récapitulatif
effet
accès
public
Protected
Private
classer
elle
même
ü
ü
ü
depuis
classe
dériver
ü
ü
û
depuis
le
extérieur
ü
û
û
noter
mots-clés
public
private
protected
pouvoir
bien
entendre
être
utiliser
méthode
fonction
auquel
cas
protection
se
étendre
manière
mot-clé
var
toujours
utilisable
PHP
cas
attribut
considérer
comme
public
possible
de
initialiser
variable
création
ne
importer
quel
valeur
class
panier
{
/
/
Eléments
panier
privé
private
contenir
=
array
}
ip-remplacée
>
attribut
méthode
statique
pouvoir
aussi
définir
attribut
méthode
statique
accessible
dehors
classe
le
objet
ne
être
forcément
déclarer
rajouter
mot-clé
static
après
définition
visibilité
le
attribut
static
ne
avoir
porter
définir
considérer
comme
public
exemple
voici
compteur
permettre
savoir
combien
fois
classer
instanciée
noter
le
utilisation
self
placer
this
this
pouvoir
être
utiliser
ici
faire
référence
objet
attribut
statique
faire
référence
classer
elle
même
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
{
public
static
compteur
=
function
{
self
compteur++
/
/
incrémenter
}
function
afficher
{
echo
self
compteur
`
`
br
/
/
/
self
}
}
o@card@
=
new
o1-
affiche
/
/
o@card@
=
new
o2-
affiche
/
/
o@card@
=
new
o3-
affiche
/
/
echo
compteur
/
/
ip-remplacée
>
constant
classe
pouvoir
créer
constant
classe
le
aide
mot-clé
const
déclaration
de
un
constant
devoir
être
précéder
de
un
indicateur
visibilité
constant
toujours
publique
pouvoir
non
plus
assigner
constant
valeur
elle
même
dynamique
comme
retour
de
un
fonction
comme
variable
statique
utiliser
self
accéder
valeur
class
{
const
classname
=
function
__construct
{
echo
self
:
classname
}
}
o@card@
=
new
/
/
affiche
héritage
polymorphisme
le
héritage
permettre
définir
classe
générique
réutilisable
pouvoir
alors
faire
extension
classer
faire
dériver
classe
de
un
autre
classe
dériver
hériter
tout
méthode
variable
classer
base
pouvoir
redéfinir
propre
fonction
variable
classe
pouvoir
hériter
de
un
seul
autre
classer
le
héritage
multiple
ne
être
supporter
PHP
PHP
contre
rien
ne
empêcher
faire
héritage
cascader
polymorphisme
permettre
redéfinir
méthode
nom
classer
dériver
de
autre
paramètre
éventuel
noter
polymorphisme
ne
être
surcharge
surcharge
consister
définir
plusieurs
méthode
nom
prototype
différent
PHP
supporter
forme
surcharger
polymorphisme
remplacer
méthode
autre
classer
dériver
créer
héritage
utiliser
mot-clé
extends
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
Panier_nomme
extends
panier
{
var
proprietaire
function
nom_proprietaire
nom
{
this-
proprietaire
=
nom
}
}
créer
classe
Panier_nomme
hériter
panier
posséder
même
propriété
classer
panier
lequel
rajouter
nouveau
attribut
nouveau
méthode
ncart
=
new
Panier_nommer
ncart-
nom_proprietaire
`
`
Slyce
print
ncart-
proprietaire
ncart-
ajout_article
`
`
ref03
polymorphisme
pouvoir
redéfinir
classe
dériver
méthode
classer
hériter
class
{
function
afficher
{
echo
`
`
classe
br
/
}
}
class
B
extends
{
function
afficher
{
echo
`
`
classe
B
br
/
}
}
test
=
new
B
test-
affiche
/
/
affiche
classe
B
mots-clé
parent
self
mot-clé
parent
représenter
classe
baser
celui
présent
après
extends
permettre
faire
référence
variable
fonction
de
un
classe
baser
class
{
function
example
{
echo
`
`
:
example
fonctionnalité
base
.
br
\n
}
}
class
B
extends
{
function
example
{
echo
`
`
B
:
example
fonctionnalité
supplémentaire
.
br
\n
parent
:
example
}
}
b
=
new
B
/
/
appeler
B
:
example
tour
appeler
:
example
b-
example
mot-clé
self
représenter
classe
elle
même
pouvoir
être
utiliser
préciser
le
accès
membrer
précis
comme
attribut
statique
S
.
ROHAUT
courir
programmation
PHP
pager
/
constructeur
PHP
constructeur
méthode
automatiquement
appeler
lors
création
de
un
objet
new
méthode
devenir
constructeur
porter
nom
classe
lequel
définir
class
auto_panier
extends
Panier_nomme
{
function
auto_panier
{
this-
proprietaire
=
session_id
}
}
classe
hériter
Panier_nomme
constructeur
initialiser
nom
propriétaire
comme
la|le
identifier
session
constructeur
pouvoir
prendre
comme
ne
importer
quel
méthode
paramètre
optionnel
class
auto_panier
extends
Panier_nommer
{
function
auto_panier
nom
=
anonyme
{
this-
proprietaire
=
nom
}
}
panier
=
new
auto_panier
/
/
constructeur
appeler
valeur
défaut
panier2
=
new
auto_panier
session_id
/
/
valeur
passer
PHP
outre
nom
classer
elle
même
PHP
proposer
méthode
générique
appeler
__construct
deux
underscore
_
début
lieu
placer
premier
méthode
voir
ci-dessus
ainsi
function
__construct
{
this-
proprietaire
=
session_id
}
revenir
exactement
constructeur
classe
dériver
PHP
classe
B
suivant
class
{
function
{
echo
`
`
classe
br
/
}
}
class
B
extends
{
function
B
{
echo
`
`
classe
B
br
/
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
création
de
un
nouveau
objet
type
B
b
=
new
B
afficher
classe
B
classe
'
constructeur
ce
être
constructeur
classe
baser
appeler
class
{
function
{
echo
`
`
classe
br
/
}
}
class
B
extends
{
var
var
}
b
=
new
B
/
/
classe
remarque
constructeur
appeler
cascade
ainsi
cas
classe
B
constructeur
classe
ne
être
appeler
logique
car
PHP
pouvoir
savoir
défaut
comment
appeler
constructeur
quel
paramètre
devoir
la|le
appeler
explicitement
le
aide
mot-clé
parent
class
{
function
{
echo
`
`
classe
br
/
}
}
class
B
extends
{
var
var
function
B
{
echo
`
`
classe
B
br
/
parent
:
avoir
}
}
b
=
new
B
/
/
affiche
classe
B
classer
PHP
PHP
réagir
manière
presque
identique
PHP
sauf
que
il
possible
de
appeler
constructeur
cascade
toujours
mot-clé
parent
sans
connaître
nom
constructeur
classer
base
utiliser
__construct
class
{
function
{
echo
`
`
classe
br
/
}
}
class
B
extends
{
var
var
function
__construct
S
.
ROHAUT
courir
programmation
PHP
pager
/
{
echo
`
`
classe
B
br
/
parent
:
__construct
/
/
appeler
constructeur
}
}
b
=
new
B
/
/
affiche
classe
B
classer
destructeur
PHP
'
destructeur
PHP
faire
confiance
cas
gestion
mémoire
ramasse-miettes
PHP
appeler
méthode
particulier
classer
fin
script
charger
faire
ménage
pouvoir
être
important
exemple
lorsque
on
allouer
ressourcer
image
dynamique
détruire
objet
suffire
réaffecter
variable
détruire
unset
le
objet
détruire
tout
façon
implicitement
fin
le
exécution
script
PHP
destructeur
présent
PHP
nommer
__destruct
automatiquement
appeler
lors
destruction
le
objet
tout
comme
constructeur
ne
être
appeler
cascade
devoir
être
appeler
explicitement
lors
de
un
héritage
class
{
function
__destruct
{
echo
`
`
revoir
classe
br
/
}
}
class
B
extends
{
function
__destruct
{
echo
`
`
revoir
classe
B
br
/
parent
:
__destruct
}
}
b
=
new
B
unset
b
/
/
destruction
le
objet
afficher
revoir
classe
B
affectation
de
objet
code
commun
fonctionnement
affectation
objet
PHP
PHP
ne
être
effet
PHP
le
affectation
faire
copier
référence
PHP
pouvoir
induire
grand
différence
fonctionnement
lorsque
coder
objet
PHP
utiliser
PHP
aller
voir
exemple
le
aide
de
un
classe
très
simple
class
{
var
function
{
this-
avoir
=
salut
S
.
ROHAUT
courir
programmation
PHP
pager
/
}
function
afficher
{
echo
`
`
this-
br
/
}
}
function
modif
objet
{
objet-
avoir
=
'
coucou
'
}
PHP
PHP
objet
affecter
copier
nouveau
objet
créer
reprendre
tout
propriété
premier
totalement
indépendant
ainsi
voici
résultat
coder
suivant
obj1
=
new
obj2
=
obj1
/
/
affectation
copier
obj1-
affiche
/
/
affiche
salut
obj2-
affiche
/
/
affiche
salut
obj1-
avoir
=
bonjour
obj1-
affiche
/
/
affiche
bonjour
obj2-
affiche
/
/
affiche
salut
modif
obj1
/
/
copie
obj1-
affiche
/
/
affiche
bonjour
obj2-
affiche
/
/
affiche
salut
créer
fonction
devoir
modifier
objet
comme
passer
défaut
copie
modifier
faire
copie
local
le
objet
cas
passer
référence
function
modif
&
objet
{
objet-
avoir
=
'
coucou
'
}
obj2
=
&
obj1
/
/
référence
modif
obj1
/
/
référence
obj1-
affiche
/
/
affiche
coucou
car
modifier
référence
obj2-
affiche
/
/
affiche
coucou
souhaiter
créer
code
objet
PHP
peu
compatible
objet
PHP5
alors
devoir
effectuer
copie
référencer
passer
objet
fonction
référence
coder
modifier
ci-dessus
marche
deux
cas
PHP
PHP
objet
affecter
référencer
défaut
manière
implicite
ainsi
obj1
=
new
obj2
=
obj1
/
/
affectation
référence
obj1-
affiche
/
/
affiche
salut
obj2-
affiche
/
/
affiche
salut
obj1-
avoir
=
bonjour
obj1-
affiche
/
/
affiche
bonjour
S
.
ROHAUT
courir
programmation
PHP
pager
/
obj2-
affiche
/
/
affiche
bonjour
modif
obj1
/
/
référence
obj1-
affiche
/
/
affiche
coucou
obj2-
affiche
/
/
affiche
coucou
simplifier
énormément
tâcher
développeur
cependant
pouvoir
explicitement
demander
copie
de
un
objet
le
aide
de
un
méthode
spécial
__clone
le
instruction
cloner
clonage
consister
recopier
tout
attribut
de
un
classe
autre
clonage
pouvoir
être
implicite
copie
direct
mécanisme
interne
PHP
explicite
via
méthode
__clone
obj3
=
cloner
obj1
/
/
copier
implicitement
obj1
obj3
obj1-
avoir
=
'
bonjour
'
obj3-
avoir
=
'
au
revoir
'
obj1-
affiche
/
/
affiche
bonjour
obj3-
affiche
/
/
afficher
revoir
méthode
fonctionner
bien
tant
que
on
ne
utiliser
information
complexe
comme
ressource
descripteur
fichier
exemple
obj1
ouvrir
connexion
baser
donner
copier
ressource
baser
donner
inutilisable
car
ouvert
falloir
rouvrir
__clone
class
base
{
private
db
function
__construct
{
this-
db
=
mysql_connect
'
localhost
'
}
function
__clone
{
this-
db
=
mysql_connect
'
localhost
'
}
}
obj1
=
new
base
obj2
=
clone
obj1
/
/
copie
__clone
rouvre
connexion
copie
noter
méthode
__clone
appeler
implicitement
mot-clé
cloner
utiliser
pouvoir
appeler
explicitement
méthode
comparaison
de
objet
PHP
pouvoir
effectuer
comparaison
de
objet
PHP4
deux
instance
de
objet
égal
seulement
•
elle
provenir
classe
•
elle
même
attribut
•
attribut
valeur
pouvoir
employer
indifféremment
comparaison
=
=
=
=
=
function
bool2str
bool
{
if
bool
=
=
=
false
{
return
'
FALSE
'
}
else
{
S
.
ROHAUT
courir
programmation
PHP
pager
/
return
'
TRUE
'
}
}
function
compareObjects
&
o1
&
o2
{
echo
'
o1
=
=
o2
'
.bool2str
o@card@
=
=
o@card@
`
`
\n
echo
'
o1
=
o2
'
.bool2str
o@card@
=
o@card@
`
`
\n
echo
'
o1
=
=
=
o2
'
.bool2str
o@card@
=
=
=
o@card@
`
`
\n
echo
'
o1
=
=
o2
'
.bool2str
o@card@
=
=
o@card@
`
`
\n
}
class
flag
{
var
flag
function
flag
flag
=
true
{
this-
flag
=
flag
}
}
class
SwitchableFlag
extends
flag
{
function
turnOn
{
this-
flag
=
true
}
function
turnOff
{
this-
flag
=
false
}
}
o
=
new
flag
p
=
new
flag
false
q
=
new
flag
r
=
new
SwitchableFlag
echo
`
`
comparer
instance
créer
même
paramètres\n
compareObjects
o
q
echo
`
`
\nCompare
instance
créer
différent
paramètres\n
compareObjects
o
p
echo
`
`
\nCompare
instance
de
un
parent
celui
de
un
sous-classe\n
compareObjects
o
r
exemple
aller
afficher
comparer
instance
créer
même
paramètre
o@card@
=
=
o@card@
TRUE
o@card@
=
o@card@
FALSE
o@card@
=
=
=
o@card@
TRUE
o@card@
=
=
o@card@
FALSE
comparer
instance
créer
différent
paramètre
o@card@
=
=
o@card@
FALSE
o@card@
=
o@card@
TRUE
o@card@
=
=
=
o@card@
FALSE
o@card@
=
=
o@card@
TRUE
comparer
instance
de
un
parent
celui
de
un
sous-classe
o@card@
=
=
o@card@
FALSE
o@card@
=
o@card@
TRUE
o@card@
=
=
=
o@card@
FALSE
o@card@
=
=
o@card@
TRUE
S
.
ROHAUT
courir
programmation
PHP
pager
/
PHP
PHP
faire
différence
entre
comparaison
simple
=
=
compléter
=
=
=
=
=
PHP
retourner
vrai
deux
objet
même
attribut
valeur
se
il
instance
classer
comme
PHP
=
=
=
PHP
retourner
vrai
deux
objet
faire
référence
objet
classer
o1
=
new
o2
=
o1
/
/
référence
o3
=
new
if
o@card@
=
=
o@card@
echo
`
`
o@card@
=
=
o2
br
/
else
echo
`
`
o@card@
=
=
o@card@
br
/
if
o@card@
=
=
=
o@card@
echo
`
`
o@card@
=
=
=
o2
br
/
else
echo
`
`
o@card@
=
=
=
o@card@
br
/
if
o@card@
=
=
o@card@
echo
`
`
o@card@
=
=
o3
br
/
else
echo
`
`
o@card@
=
=
o@card@
br
/
if
o@card@
=
=
=
o@card@
echo
`
`
o@card@
=
=
=
o3
br
/
else
echo
`
`
o@card@
=
=
=
o3
br
/
aller
afficher
o1
=
=
o2
/
/
o1
o2
identique
classe
même
attribut
props
o@card@
=
=
=
o2
/
/
o1
o2
référence
objet
o@card@
=
=
o3
/
/
o1
o3
identique
classe
même
attribut
props
o@card@
=
=
=
o3
/
/
o1
o3
référence
objet
S
.
ROHAUT
courir
programmation
PHP
pager
/
nouveauté
PHP
objet
fonction
__autoload
fonction
__autoload
indique
PHP
comment
réagir
quand
tenter
créer
objet
depuis
classe
'
définir
ce
être
faciliter
offrir
substituer
forcément
require
include
pouvoir
être
utile
exemple
éviter
de
inclure
le
ensemble
classer
utiliser
projet
préférer
inclure
définition
classer
moment
création
instance
fonction
__autoload
prendre
que
un
paramètre
nom
classer
programmer
ensuite
inclure
code
nécessaire
function
__autoload
class
{
require_once
`
`
/
inc
/
{
class
}
.php
}
classe
abstrait
classe
abstraire
nouveauté
PHP
classe
abstraire
classe
sans
implémentation
pouvoir
être
instanciée
représenter
moins
fonction
abstraire
virtuel
pur
sans
code
le
implémentation
effectuer
classe
dériver
classe
abstraire
servir
essentiellement
définir
classe
baser
normaliser
structure
pouvoir
être
reprendre
développement
de
autre
classe
effectif
tout
classe
contenir
moins
méthode
abstraire
devoir
être
définir
comme
abstrait
classe
dériver
redéfinir
méthode
abstraire
classer
parent
base
devoir
être
déclarer
abstraire
tour
pouvoir
être
instanciée
classe
implémente
méthode
abstraire
devoir
être
définir
visibilité
plus
faible
méthode
abstraire
définir
tant
protéger
fonction
le
implémentant
devoir
être
définir
tant
protéger
publique
le
instruction
définir
classe
méthode
abstract
/
/
classe
abstrait
contenir
méthode
abstrait
abstract
class
AbstractClass
{
/
/
méthode
abstrait
devoir
être
redéfinir
classer
dériver
abstract
protected
function
getValue
public
function
prt
{
print
this-
getValue
}
}
class
ConcreteClass1
extends
AbstractClass
{
/
/
redéfinition
méthode
abstraire
classer
base
protected
function
getValue
{
return
`
`
ConcreteClass1
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
ConcreteClass2
extends
AbstractClass
{
/
/
redéfinition
méthode
abstraire
classer
base
protected
function
getValue
{
return
`
`
ConcreteClass2
}
}
class1
=
new
ConcreteClass1
class1-
prt
/
/
affiche
ConcreteClass1
class2
=
new
ConcreteClass2
class2-
prt
/
/
affiche
ConcreteClass2
classe
méthode
variable
final
PHP
inclure
nouveau
mécanisme
protection
interdire
classe
dériver
réimplémenter
méthode
variable
classe
de
être
elle
même
dérivée
mot-clé
final
indique
classe
méthode
variable
définitif
que
elle
pouvoir
plus
être
implémenter
voici
cas
de
erreur
class
{
protected
val
function
__construct
{
this-
val
=
}
final
function
afficher
{
print
this-
val
}
}
class
B
extends
{
function
__construct
{
parent
:
_construct
}
function
afficher
{
/
/
erreur
pouvoir
REDEFINIR
print
this-
val
}
}
o@card@
=
new
B
o1-
afficher
classe
B
tenter
récrire
méthode
afficher
déclarer
final
PHP
retourner
erreur
interface
objet
interface
permettre
créer
code
spécifier
quel
méthode
attribut
classe
pouvoir
implémenter
sans
avoir
définir
comment
elle
gérer
tout
méthode
spécifier
le
interface
devoir
être
implémenter
classe
définir
le
interface
moyen
définir
pré-requis
obligatoire
construction
de
un
modèle
classe
donner
liste
prototyper
créer
interface
mot-clé
interface
exemple
aller
définir
tout
classe
implémentir
interface
devoir
obligatoirement
définir
fonction
affiche
incrémenter
S
.
ROHAUT
courir
programmation
PHP
pager
/
interface
Template
{
public
function
afficher
public
function
incremente
cpt
}
attention
déclaration
méthode
notamment
paramètre
devoir
être
rigoureusement
identique
classe
celui
le
interface
indique
que
un
classe
implémente
interface
mot-clé
implements
class
implements
Template
{
protected
val
function
__construct
{
this-
val
=
}
function
afficher
{
print
this-
val
}
function
incremente
cpt
{
this-
val+
=
cpt
}
}
o@card@
=
new
o1-
incremente
o1-
afficher
classe
pouvoir
implémenter
plusieurs
interface
temps
cas
lister
interface
devoir
être
préciser
après
mot-clé
implements
chaque
interface
séparer
virgule
interface
Template
{
public
function
afficher
public
function
incremente
cpt
}
interface
Template2
{
public
function
decremente
cpt
}
class
implements
Template
Template2
{
protected
val
function
__construct
{
this-
val
=
}
function
afficher
{
print
this-
val
}
function
incremente
cpt
{
this-
val+
=
cpt
}
function
decremente
cpt
{
this-
val-
=
cpt
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
gestion
dynamique
méthode
attribut
pouvoir
toujours
surcharger
directement
méthode
attribut
opérateur
PHP
comme
C++
cependant
nouveau
fonction
permettre
de
intercepter
appel
méthode
attribut
non
prévoir
noter
méthode
pouvoir
uniquement
être
déclencher
lorsque
objet
hériter
non
contenir
le
attribut
méthode
tenter
de
accéder
cas
contraire
méthode
le
attribut
utiliser
méthode
utiliser
méthode
__call
prendre
deux
paramètre
premier
nom
méthode
second
tableau
paramètre
passer
méthode
imaginer
souhaiter
appeler
méthode
test
objet
ne
avoir
prévoir
cas
suffire
gérer
cas
méthode
__call
class
{
function
__call
{
/
/
gérer
appel
méthode
non
défini
if
m
=
=
test
{
echo
`
`
fonction
test
appelé
valeur
return
}
}
}
o@card@
=
new
=
o1-
test
`
`
true
/
/
test
ne
exister
pourtant
print_r
/
/
cela
marcher
cela
retourne
paramètre
test
attribut
utiliser
méthode
__get
__set
méthode
__get
appeler
implicitement
lorsque
tenter
de
accéder
valeur
de
un
variable
ne
être
définir
classe
prendre
comme
unique
paramètre
nom
le
attribut
auquel
tenter
de
accéder
méthode
__set
appeler
lorsque
tenter
de
affecter
valeur
attribut
ne
être
définir
prendre
deux
paramètre
nom
variable
valeur
affecter
class
{
private
tab
=
array
function
__get
v
{
if
isset
this-
tab
v
return
false
else
return
this-
tab
v
}
function
__set
v
{
this-
tab
v
=
}
}
o@card@
=
new
o1-
var
=
/
/
membre
var
ne
exister
pourtant
echo
o1-
var
/
/
cela
marcher
cela
affiche
itération
de
objet
PHP
indexer
attribut
objet
possible
de
accéder
liste
attribut
visibilité
permettre
le
aide
simple
boucle
itératif
comme
foreach
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
{
public
v1
=
salut
public
v2
=
public
v3
=
ami
`
`
private
v4
=
priver
}
o@card@
=
new
foreach
o1
cle
=
valeur
{
echo
`
`
cle
=
valeur
br
/
\n
}
coder
affiche
v1
=
salut
v2
=
v3
=
ami
attribut
visible
afficher
exister
interface
prédéfinie
permettre
créer
propre
classe
de
itération
classe
Iterator
implémente
cinq
méthode
suivant
•
current
•
next
•
key
•
valid
•
rewind
pouvoir
créer
classe
implémentir
interface
exemple
naviguer
résultat
de
un
requête
baser
donner
tableau
type
hinting
PHP
permettre
contrôler
type
valeur
passé
paramètre
fonction
prendre
code
suivant
retourne
infos
de
un
utilisateur
classe
utilisateur
function
detail
user
{
return
user-
infos
}
fonction
attendre
objet
particulier
classe
utilisateur
tout
fonctionner
merveille
coder
blinder
cependant
passer
entier
cela
marcher
ce
être
seulement
lors
return
user-
infos
PHP
générer
erreur
typer
hinting
indique
PHP
que
attendre
exactement
fonction
function
detail
utilisateur
user
{
return
user-
infos
}
fois
PHP
retourner
erreur
dès
le
appel
fonction
recevoir
objet
classer
utilisateur
S
.
ROHAUT
courir
programmation
PHP
pager
/
exception
try
catch
PHP
inclure
enfin
support
excepter
bloc
try
catch
ainsi
pouvoir
placer
code
risquer
code
exceptionnel
pouvoir
produire
erreur
bloc
try
gérer
le
erreur
selon
type
bloc
catch
pouvoir
utiliser
plusieurs
bloc
catch
suivant
type
de
erreur
générer
attention
quand
ce
être
possible
gérer
erreur
coder
normal
try
{
/
/
code
risquer
de
erreur
}
catch
exception
e
{
/
/
code
régler
situation
exceptionnel
}
sein
bloc
try
le
exécution
de
un
instruction
erroné
aller
déclencher
le
émission
de
un
signal
exception
signal
interrompre
le
exécution
rester
tout
bloc
fonction
signal
PHP
exécuter
bloc
catch
approprié
remarquer
bloc
catch
PHP
gérer
exception
le
aide
de
un
classe
spécial
appeler
exception
exception
faire
définir
objet
classe
de
un
classe
dérivé
pouvoir
créer
propre
gestionnaire
de
exception
comme
pouvoir
écrire
plusieurs
bloc
catch
gérer
exception
suivant
type
de
objet
déclenchement
throw
pouvoir
déclencher
manuellement
exception
le
aide
le
instruction
throw
voici
code
provoquer
toujours
exception
try
{
erreur
=
message
de
erreur
throw
new
exception
erreur
echo
'
jamais
exécuter
'
}
catch
exception
e
{
echo
'
exception
'
.
e-
getMessage
'
ligne
'
.
e-
getLine
`
`
\n
}
le
aide
le
instruction
throw
provoquer
le
émission
de
un
exception
gérer
classer
exception
cas
PHP
aller
rechercher
bloc
catch
correspondre
type
de
objet
créer
gérer
le
exception
ici
catch
exception
e
classe
exception
classe
personnaliser
classer
exception
imposer
PHP
comme
classe
base
parent
tout
classe
utilisable
catch
classer
base
disposer
méthode
suivant
•
__construct
erreur
coder
constructeur
message
de
erreur
coder
•
getMessage
retourner
message
de
erreur
générer
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
getCode
coder
erreur
le
exception
•
getLine
numéro
ligner
script
provoquer
le
exception
•
getFile
nom
script
PHP
provoquer
le
exception
•
getTrace
getTraceAstring
gestion
piler
de
appel
peu
comme
java
•
__toString
chaîner
formater
afficher
méthode
getXXXX
final
pouvoir
étendre
constructeur
méthode
__toString
pouvoir
être
étendre
pouvoir
créer
propre
classe
dériver
class
MonException
extends
exception
{
public
function
__construct
message
=
erreur
défaut
coder
=
{
parent
:
__construct
message
coder
}
}
avoir
=
try
{
switch
{
caser
throw
new
MonException
`
`
ouille
`
`
break
caser
throw
new
exception
`
`
`
`
break
}
}
catch
MonException
e
{
echo
e-
getMessage
}
catch
exception
e
{
echo
'
exception
'
.
e-
getMessage
'
ligne
'
.
e-
getLine
`
`
\n
}
valoir
MonException
envoyer
valoir
exception
PHP
erreur
exception
pouvoir
certain
cas
PHP
déclencher
naturellement
exception
suivre
le
exécution
de
un
fonction
cas
indiquer
documentation
PHP
voir
site
PHP
ligner
plupart
cas
ce
être
le
ancien
système
gestion
erreur
utiliser
ainsi
code
suivant
try
{
avoir
=
fopen
'
toto
'
'
r
'
}
catch
exception
e
{
echo
'
exception
'
.
e-
getMessage
}
donner
tout
résultat
escompter
le
exécution
fopen
provoquer
le
émission
de
un
exception
erreur
PHP
typer
warning
warning
fopen
toto
dns-remplacer
failed
to
open
stream
No
such
file
or
S
.
ROHAUT
courir
programmation
PHP
pager
/
directory
in
\apachefriends\xampp\htdocs\objet\
dns-remplacer
line
PHP
gérer
plusieurs
niveau
de
erreur
warning
notice
etc
.
exemple
problème
de
ouverture
fichier
émettre
erreur
typer
warning
erreur
syntaxe
parse
le
utilisation
de
un
variable
non
déclarer
notice
pouvoir
régler
modifier
niveau
de
erreur
dns-remplacer
aussi
dynamiquement
via
fonction
parmi
fonction
deux
pouvoir
intéresser
set_error_handler
permettre
modifier
comportement
défaut
PHP
lorsque
il
rencontrer
erreur
script
lieu
de
exécuter
propre
gestionnaire
exécuter
attention
gestionnaire
pouvoir
gérer
certain
type
de
erreur
syntaxe
etc
voir
http
/
/
dns-remplacer
/
manual
/
en
/
dns-remplacer
-
dns-remplacer
cas
de
un
simple
warning
notice
'
problème
passer
paramètre
nom
propre
fonction
devoir
gérer
le
erreur
paramètre
assez
parlant
fonction
aller
déclencher
exception
réception
ne
importer
quel
erreur
function
gest_erreur
errno
errstr
errfile
errline
{
throw
new
exception
`
`
errstr
line
errline
errno
}
set_error_handler
`
`
gest_erreur
le
exécution
bloc
try
catch
fois
exception
fopen
toto
dns-remplacer
failed
to
open
stream
No
such
file
or
directory
line
vouloir
bien
déclencher
exception
exception
défaut
certain
instruction
PHP
générer
exception
instruction
sein
de
un
bloc
try
catch
PHP
générer
exception
défaut
propre
gestionnaire
de
exception
pouvoir
modifier
état
fonction
set_exception_handler
function
exception_handler
exception
{
echo
`
`
exception
imprévu
`
`
exception-
getMessage
`
`
\n
}
set_exception_handler
'
exception_handler
'
S
.
ROHAUT
courir
programmation
PHP
pager
/
sauvegarder
objet
cas
de
un
session
information
indiquer
ici
fonctionner
aussi
bien
PHP
que
en
PHP
falloir
distinguer
cas
session
falloir
passer
objet
de
un
page
le
autre
cas
de
un
sauvegarde
de
un
objet
disquer
premier
cas
session
utiliser
objet
pouvoir
être
passer
directement
de
un
page
autre
respecter
quelque
règle
•
session
devoir
être
ouvrir
chaque
page
fonction
session_start
avant
le
utilisation
le
objet
•
classe
devoir
être
définir
avant
le
ouverture
session
session_start
le
appel
le
objet
impliquer
répéter
déclaration
chaque
page
placer
fichier
inclure
require
require_once
début
script
•
le
objet
devoir
être
variable
session
stocker
fonction
session_register
le
aide
tableau
global
_SESSION
voici
exemple
dns-remplacer
class
panier
{
/
/
Eléments
panier
var
contenir
/
/
ajout
qte
article
type
coder
panier
function
ajout_article
code
qte
{
if
isset
this-
contenir
coder
this-
contenir
coder
+
=
qte
else
this-
contenir
coder
=
qte
}
/
/
suppression
num
article
typer
artnr
panier
function
suppr_article
code
qte
{
if
this-
contenir
code
qte
{
this-
contenir
code
-
=
qte
return
TRUE
}
else
{
return
FALSE
}
}
function
liste_article
{
foreach
this-
contenir
ref
=
qte
echo
`
`
ref
=
qte
br
/
}
}
class
Panier_nomme
extends
panier
{
var
proprietaire
function
nom_proprietaire
nom
{
this-
proprietaire
=
nom
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
dns-remplacé
php
require_once
`
`
dns-remplacé
session_start
html
head
title
page
/
title
/
head
body
_SESSION
'
objet
'
=
new
Panier_nomme
_SESSION
'
objet
'
-
nom_proprietaire
`
`
seb
_SESSION
'
objet
'
-
ajout_article
`
`
ref01
,
_SESSION
'
objet
'
-
suppr_article
`
`
ref01
,
_SESSION
'
objet
'
-
ajout_article
`
`
ref02
,
echo
`
`
{
_SESSION
'
objet
'
-
proprietaire
}
br
/
href
=
dns-remplacer
page
/
avoir
/
body
/
html
dns-remplacer
php
require_once
`
`
dns-remplacé
session_start
html
head
title
page
/
title
/
head
body
echo
_SESSION
'
objet
'
-
proprietaire
`
`
br
/
_SESSION
'
objet
'
-
liste_article
/
body
/
html
autre
cas
rien
ne
empêcher
conserver
objet
récupérer
plus
tard
après
avoir
fermer
session
cela
pouvoir
stocker
fichier
baser
donner
récupérer
format
correct
donner
stockage
falloir
utiliser
fonction
serialize
unserialize
premier
fonction
retourner
chaîne
texte
représenter
variable
forcément
objet
passer
paramètre
format
donner
pouvoir
ainsi
être
stocker
manière
convenir|convier
second
fonction
prendre
comme
paramètre
chaîner
texte
issu
serialize
retourner
variable
type
originel
cas
objet
dns-remplacer
php
class
{
var
one
=
function
show_one
{
echo
this-
one
S
.
ROHAUT
courir
programmation
PHP
pager
/
}
}
dns-remplacé
php
include
`
`
dns-remplacer
=
new
=
serialize
/
/
enregistrer
dns-remplacé
pouvoir
trouver
fp
=
fopen
`
`
store
`
`
w
fputs
fp
fclose
fp
dns-remplacer
php
/
/
ceci
nécessaire
unserialize
fonctionner
correctement
include
`
`
dns-remplacer
=
implode
`
`
file
`
`
store
unserialize
/
/
maintenant
utiliser
méthode
show_one
le
objet
a-
show_one
S
.
ROHAUT
courir
programmation
PHP
pager
/
document
Outline
1Introduction
1.1Définition
1.2Historique
1.3Utilisation
pratique
1.4Pages
statique
vs
page
dynamique
1.5Scripts
CGI
1.6Pages
dynamique
PHP
1.7Pourquoi
préférer
PHP
de
autre
langage
comme
ASP
1.8Ce
devoir
déjà
connaître
1.9Le
nécessaire
serveur
1.10Le
nécessaire
client
1.11Le
respect
standard
2Bases
présentation
2.0.1Syntaxe
base
2.1Intégration
HTML
2.2Séparateur
de
instruction
2.3Bloc
de
instruction
2.4Commentaires
3Travailler
variable
3.1Déclarer
variable
3.2Portée
variable
3.3Variables
prédéfinie
3.4Variables
dynamique
3.5Types
variable
3.5.1booléen
3.5.2Entiers
3.5.3Virgule
flottant
3.5.4Chaînes
caractère
3.5.5Les
tableau
3.5.6La
variable
objet
3.6Les
constant
3.7Obtenir
type
de
un
variable
3.8Définir
supprimer
variable
4Les
opérateur
4.1La
précédence
opérateur
4.2Opérateurs
arithmétique
4.3Opérateurs
de
assignation
4.4Opérateurs
bit
4.5Opérateurs
comparaison
4.6Opérateur
de
erreur
4.7Opérateur
de
exécution
4.8Opérateurs
de
incrémentation
/
décrémentation
4.9Opérateurs
logique
4.10Opérateurs
chaîne
4.11Opérateur
tableau
5La
notion
de
expression
6Les
structure
contrôle
6.1if
6.2while
6.2.1while
classique
6.2.2do
while
6.3for
6.4foreach
6.5break
continuer
6.6switch
6.7return
6.8require
include
_once
7Les
fonction
7.1Syntaxe
porter
7.2Arguments
7.3Valeur
retour
7.4Fonctions
interne
8Gestion
formulaire
PHP
8.1GET
POST
8.2Récupération
tableau
8.3Récupération
direct
8.4Utiliser
tableau
9Date
heure
9.1Localisation
9.2Récupérer
dater
le
heure
9.2.1date
9.2.2date
local
strftime
9.2.3Retour
tableau
getdate
9.2.4L'heure
localtime
9.3Récupérer
ne
importer
quel
dater
10MySQL
10.1Présentation
10.2Outils
10.2.1PhpMyAdmin
10.2.2MysqlCC
10.3Créer
baser
10.4Utilisateurs
droit
10.5Créer
modifier
table
10.5.1Types
numérique
ip-remplacée
>
type
entier
ip-remplacée
>
type
réel
flottant
ip-remplacée
>
type
booléen
10.5.2Types
caractère
ip-remplacée
>
type
char
ip-remplacée
>
type
TEXT
ip-remplacée
>
typer
ENUM
ip-remplacée
>
typer
set
10.5.3Types
dater
ip-remplacer
>
format
supporter
ip-remplacée
>
type
DATETIME
ip-remplacée
>
type
dater
ip-remplacée
>
type
TIMESTAMP
ip-remplacée
>
type
TIME
ip-remplacée
>
type
YEAR
10.5.4Création
syntaxe
SQL
10.5.5Types
table
MyISAM
InnoDB
10.5.6Index
FULLTEXT
ip-remplacée
>
création
ip-remplacée
>
rechercher
ip-remplacer
>
recherche
booléen
10.6MySQL
PHP
10.6.1Connexion
baser
donner
ip-remplacée
>
connexion
serveur
ip-remplacée
>
choix
de
un
base
ip-remplacer
>
fermeture
de
un
connexion
ip-remplacée
>
séquencer
complet
base
10.6.2Les
requête
ip-remplacée
>
exécuter
requête
ip-remplacée
>
nombre
ligner
affecter
ip-remplacée
>
nombre
ligner
retourner
ip-remplacée
>
récupérer
résultat
ip-remplacée
>
insertion
auto-incrément
10.6.3Récupération
erreur
11Le
système
fichier
11.1Travail
fichier
11.1.1Ouverture
11.1.2Lecture
ip-remplacée
>
fgets
ip-remplacée
>
fread
ip-remplacée
>
fscanf
ip-remplacée
>
fgetc
ip-remplacée
>
fgetss
ip-remplacée
>
fgetcsv
ip-remplacée
>
renvoyer
fichier
sortir
standard
11.1.3Ecriture
11.1.4Déplacement
ip-remplacée
>
fseek
ip-remplacée
>
ftell
ip-remplacée
>
rewind
11.1.5Fin
fichier
11.1.6Fermeture
11.2Travail
répertoire
11.2.1Répertoire
actuel
11.2.2Se
déplacer
11.2.3Ouvrir
lister
fermer
11.2.4Récupérer
tout
entrée
11.3Travail
système
fichier
11.3.1Informater
fichier
11.3.2Actions
fichier
répertoire
11.4Upload
fichier
12Travail
chaîne
12.1Fonctions
coder
HTML
MySQL
12.1.1Gestion
caractère
verrouiller
12.1.2balises
caractère
spécial
HTML
12.2Fonctions
texte
général
12.2.1Découper
chaîner
12.2.2Rechercher
comparer
13Sessions
cookies
13.1Les
cookies
13.1.1Création
13.1.2Accès
13.1.3Suppression
13.2Identification
HTTP
13.2.1Connexion
13.2.2Déconnexion
13.3Sessions
PHP
13.3.1Principe
13.3.2Utilisation
ip-remplacée
>
ouverture
ip-remplacée
>
variable
session
13.3.3Expiration
session
13.3.4Changer
le
accès
défaut
14Image
14.1Pré-requis
important
14.2Créer
image
14.2.1Types
possible
14.2.2Création
ip-remplacée
>
nouveau
image
dynamique
ip-remplacée
>
récupération
de
un
image
existant
14.2.3Publication
14.2.4Chargement
via
autre
page
14.3Travailler
image
14.3.1Récupérer
information
14.3.2Les
couleur
14.3.3Dessin
ip-remplacée
>
remplissage
ip-remplacée
>
point
ip-remplacée
>
ligner
ip-remplacée
>
rectangle
ip-remplacée
>
cercler
ellipse
ip-remplacée
>
polygone
ip-remplacée
>
texte
simple
15La
programmation
objet
15.1Structure
15.2Création
de
un
objet
15.3Accès
membre
15.3.1PHP
15.3.2PHP
15.4L'opérateur
15.5Les
variable
protection
15.5.1PHP
4.x
15.5.2PHP
5.x
ip-remplacée
>
protection
variable
fonction
ip-remplacée
>
attribut
méthode
statique
ip-remplacée
>
constant
classe
15.6Héritage
polymorphisme
15.7Les
mots-clés
parent
self
15.8Constructeurs
15.8.1PHP
15.8.2PHP
15.9Constructeurs
classe
dériver
15.9.1PHP
15.9.2PHP
15.10Destructeur
15.10.1PHP
15.10.2PHP
15.11Affectation
de
objet
15.11.1Code
commun
15.11.2PHP
15.11.3PHP
15.12Comparaison
de
objet
15.12.1PHP
15.12.2PHP
16Nouveautés
PHP
16.1Les
objet
16.1.1La
fonction
__autoload
16.1.2Les
classe
abstraire
16.1.3Clas
méthode
variable
final
16.1.4Les
interface
objet
16.1.5Gestion
dynamique
méthode
attribut
16.1.6Les
itération
de
objet
16.1.7Type
hinting
16.2Les
excepter
16.2.1try
catch
16.2.2Déclenchement
throw
16.2.3classe
exception
classer
personnaliser
16.2.4PHP
erreur
exception
16.2.5Exception
défaut
17Sauvegarder
objet
17.1Cas
de
un
session
17.2Autres
cas
