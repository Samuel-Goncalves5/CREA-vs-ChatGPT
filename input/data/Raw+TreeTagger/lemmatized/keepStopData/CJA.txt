langage
java
petit
mémento
syntaxe
élément
programmation
site
reference
site
officiel
java
java
sun
com
pouvoir
notamment
consulter
intérêt
tutoriel
java
sun
com
doc
books
tutorial
grand
collection
petit
exemple
programmer
java
sun
com
developer
codesample
examplets
recommandation
styler
java
sun
com
doc
codeconv
html
codeconvtoc
doc
html
descriptif
tout
paquetage
classe
méthode
standard
java
sun
com
javase
doc
api
mode
emploi
générateur
documentation
javadoc
java
sun
com
javadoc
index
jsp
préparation
certification
programmeur
java
java
sun
com
doc
books
tutorial
extra
certification
sommaire
langage
programmation
orienter
objet
programmer
java
styler
programmation
identificateurs
commentaire
commentaire
documentation
commentaire
implémentation
fichier
java
nom
contenir
fichier
java
compilation
exécution
génération
documentation
paquetage
paquetage
standard
affectation
classer
paquetage
importation
classer
paquetage
classe
interface
classe
standard
classe
abstraire
sous
classe
classe
abstraire
sous
classe
interface
interface
classe
implanter
interface
enumération
classe
imbriquer
nested
classe
contrôler
accès
modificateur
instance
classer
type
donnees
type
primitif
type
objet
type
référencer
classe
enveloppe
chaîner
caractère
non
modifiable
string
chaîner
caractère
modifiable
stringbuffer
tableau
collection
transtypage
operateurs
expression
opérateur
expression
arithmétique
opérateur
expression
booléen
opérateur
relationnel
methodes
définition
appel
méthode
ordinaire
constructeur
méthode
main
instruction
instruction
affectation
instruction
contrôler
instruction
sélection
instruction
boucler
instruction
entrer
sortir
notion
flux
entrée
sortir
terminal
entrée
sortir
fichier
lecture
chaîner
caractère
formater
heritage
notion
héritage
hériter
sous
classe
redéfinir
méthode
type
statique
dynamique
liaison
statique
dynamique
type
statique
dynamique
transtypage
liaison
statique
dynamique
polymorphisme
classe
méthode
particulier
interface
exception
excepter
contrôler
non
contrôler
classe
exception
standard
hiérarchie
error
hiérarchie
exception
hiérarchie
runtimeexception
lancement
exception
capturer
exception
clause
throws
instruction
try
catch
iii
définir
nouveau
classe
exception
annexe
programmation
graphique
swing
conteneur
composant
gestion
mettre
pager
gestion
événement
notion
événement
réaliser
gestionnaire
événement
affichage
fermeture
fenêtrer
graphique
architecture
composant
swing
applets
annexer
threads
créer
thread
extension
classer
thread
créer
thread
implémentation
interface
runnable
synchronisation
communication
entre
threads
section
critique
synchronisation
communication
entre
threads
annexe
conception
developpement
java
conseil
général
bon
conception
classe
architecturer
application
interactif
modèle
mvc
test
unitaire
définition
junit
java
beans
design
pattern
exemple
modeler
singleton
exemple
modeler
decorator
annexe
machiner
virtuel
java
jvm
annexe
communication
entre
java
jni
appel
procédure
déclaration
appel
java
prototyper
implémentation
echanger
donner
entre
java
déclaration
appel
java
prototyper
implémentation
annexe
plat
forme
java
annexe
glossaire
langage
programmation
orienter
objet
java
langage
programmation
orienter
objet
objet
représentation
simplifier
entité
monde
réel
entité
concret
ex
voiturer
non
ex
date
aujourd
hui
objet
caractériser
état
comportement
objet
stocker
état
variable
appeler
champ
attribut
présent
comportement
travers
fonctionnalité
appeler
méthode
exemple
objet
mavoiture
valeur
attribut
fiat
griser
kilomètre
méthode
démarrer
arrêter
accélérer
typiquement
état
encapsuler
cœur
objet
accessible
depuis
extérieur
objet
consultation
modification
via
méthode
offrir
objet
exemple
objet
mavoiture
getcouleur
setcouleur
démarrer
arrêter
accélérer
fiat
gris
interagir
objet
envoyer
message
demander
activation
méthode
exemple
envoi
message
objet
mavoiturer
accélérer
méthode
particulier
appeler
constructeur
permettre
initialiser
état
objet
création
classe
servir
regrouper
sous
catégorie
nom
générique
objet
partager
type
état
comportement
classer
type
objet
dire
réciproquement
objet
instance
classer
exemple
classer
automobile
attribut
marquer
couleur
consommation
méthode
démarrer
arrêter
accélérer
classe
pouvoir
être
organiser
hiérarchie
chaque
classe
hériter
alors
attribut
méthode
classer
situer
ligne
hiérarchique
ascendant
réaliser
programme
langage
orienter
objet
modéliser
classe
objet
manipuler
écrire
classe
langage
programmation
orienter
objet
créer
objet
instance
classer
communiquer
objet
invoquer
leur
méthode
java
naître
entreprise
californien
sun
microsystem
concevoir
james
gosling
al
programmer
java
styler
programmation
largement
admettre
respect
syntaxe
programme
fonctionner
critère
qualité
suffisant
programmer
expérience
programmation
ainsi
conduire
établir
recommandation
styler
respecter
techniquement
obligatoire
contribuer
améliorer
lisibilité
programmer
convention
viser
faire
finalité
économique
contribuer
produire
programme
plus
facilement
maintenable
pendant
tout
durée
vie
chapitre
suivant
exemple
respecter
convention
styler
préconiser
java
sun
com
identificateurs
quelque
règle
recommandation
nommer
identificateurs
caractère
minuscule
majuscule
caractère
discriminer
règle
langage
java
identificateurs
objet
champ
méthode
commencer
toujours
minuscule
convention
identificateurs
classer
interface
commencer
toujours
majuscule
convention
identificateurs
constant
tout
majuscule
convention
identificateurs
méthode
commencer
verbe
recommandation
commentaire
commentaire
documentation
commentaire
documentation
viser
décrire
spécification
coder
sans
considération
implémentation
destiner
développeur
utilisateur
nécessairement
code
source
sous
main
commentaire
pouvoir
être
automatiquement
extraire
utilitaire
javadoc
constituer
fichier
documentation
html
documentation
classe
devoir
inclure
minima
nom
classer
fonctionnalité
grand
caractéristique
auteur
version
documentation
chaque
constructeur
chaque
méthode
documentation
méthode
devoir
inclure
minima
nom
méthode
fonctionnalité
description
chaque
paramètre
valeur
retourner
exception
susceptible
être
lancer
méthode
syntaxe
commentaire
commentaire
principal
balise
commentaire
prédéfinies
author
version
param
return
see
throws
commentaire
implémentation
commentaire
implémentation
viser
expliciter
sans
paraphraser
code
choix
implémentation
choix
identificateurs
clarté
programmation
devoir
permettre
minimiser
nombre
tel
commentaire
syntaxe
commentaire
commentaire
commentaire
fichier
java
nom
contenir
fichier
java
chaque
fichier
source
java
contenir
seul
classe
publique
organisation
recommander
suivant
commentaire
début
commentaire
documentation
comprendre
typiquement
intituler
classe
descriptif
sommaire
fonction
auteur
version
instruction
paquetage
instruction
import
déclaration
classe
fichier
devoir
contenir
moins
ligne
ligne
moins
caractère
voire
commentaire
documentation
recommandation
fichier
java
porter
nom
classe
publique
contenir
fichier
source
java
suffixer
java
fichier
java
compiler
suffixer
class
convention
suffixer
java
class
imposé
outil
compilation
exécution
génération
documentation
depuis
ligne
commander
compilation
javac
filename
java
exécution
java
filename
fichier
main
génération
documentation
javadoc
java
avoir
documentation
programmeur
compléter
comprendre
membre
priver
tout
classe
interaction
falloir
lancer
commander
option
private
paquetage
paquetage
package
anglais
bibliothèque
classer
organiser
façon
hiérarchique
nom
paquetage
nécessairement
nom
répertoire
nom
paquetage
toujours
lettre
minuscule
convention
différent
paquetage
pouvoir
être
rassembler
compacter
fichier
archiver
zip
jar
paquetage
standard
variable
environnement
classpath
indique
machiner
virtuel
java
trouver
classe
bibliothèque
classe
besoin
hiérarchie
partiel
paquetage
standard
java
applet
awt
io
lang
util
event
paquetage
plus
immédiatement
utile
paquetage
contenir
java
io
classe
relatif
entrer
sorti
java
lang
classe
fondamental
type
basique
classe
envelopper
string
stringbuffer
classe
math
java
util
classe
utilitaire
divers
collection
arraylist
vector
classer
random
gestion
date
heure
affectation
classer
paquetage
classe
appartenir
paquetage
falloir
déclarer
paquetage
appartenance
tête
fichier
source
syntaxe
package
packagename
importation
classer
paquetage
utiliser
classe
défini
paquetage
autre
celui
classe
utilisation
classe
devoir
être
importer
tête
fichier
source
syntaxe
import
packagename
ctassname
import
packagename
former
déconseiller
car
peu
informatif
exemple
import
java
util
arraylist
import
java
util
lterator
import
java
io
former
déconseiller
car
peu
informatif
paquetage
java
lang
importer
automatiquement
classe
interface
classe
standard
syntaxe
public
class
classname
fields
constructors
methods
accessor
methods
mutator
methods
exemple
class
rationalnumber
represents
rational
number
num
den
author
am
version
public
class
rationalnumber
fields
private
int
numerator
private
int
denominator
private
boolean
reduced
constructors
construct
rational
number
initialized
to
public
rationalnumber
numerator
denominator
reduced
true
methods
accessors
get
the
numerator
of
this
rational
number
public
int
getnumerator
return
numerator
get
the
denominator
of
this
rational
number
public
int
getdenominator
return
denominator
return
true
iff
the
numerator
denominator
form
is
irreducible
public
boolean
isreduced
return
reduced
methods
mutators
set
this
rational
number
to
numerator
denominator
public
void
setnumber
int
numerator
int
denominator
numerator
numerator
denominator
denominator
reduced
false
set
this
rational
number
to
irreducible
numerator
denominator
form
public
void
reduce
int
divisor
greatestcommondivisor
numerator
denominator
numerator
numerator
divisor
denominator
denominator
divisor
reduced
true
methods
utilities
return
the
greatest
common
divisor
of
the
two
integers
x
and
private
int
greatestcommondivisor
int
x
int
int
divisor
implémenter
return
divisor
end
class
rationalnumber
classe
abstraire
sous
classe
classe
posséder
moins
méthode
abstraire
i
e
sans
corps
abstraire
devoir
être
déclarer
modificateur
abstract
classe
abstraire
pouvoir
être
instanciées
pouvoir
créer
objet
falloir
créer
sous
classe
lequel
tout
méthode
abstrait
définir
sous
classe
non
abstrait
pouvoir
alors
être
instanciée
classe
abstrait
syntaxe
public
abstract
class
classname
fields
constructors
methods
exemple
abstract
class
progression
represents
real
linear
progression
of
order
with
constant
coefficient
author
am
version
public
abstract
class
progression
fields
private
double
u
the
first
term
of
the
progression
constructors
define
progression
the
first
term
of
which
is
u
public
progression
double
u
this
u
u
methods
get
the
first
term
of
this
progression
public
doubler
getu
return
u
given
current
term
u
return
the
next
term
u
public
abstract
double
nextterm
double
return
the
term
of
rank
public
double
termofrank
int
double
u
u
u
double
v
u
for
int
i
i
i
v
nextterm
u
u
v
return
u
end
class
progression
sous
classe
syntaxe
public
class
subclassname
extends
superclassname
fields
constructors
methods
exemple
class
arithgeomprogression
represents
real
arithmetic
geometric
progression
with
constant
coefficient
u
u
b
author
am
version
public
class
arithgeomprogression
extends
progression
fields
private
double
multiplying
coefficient
private
double
b
additif
coefficient
constructors
define
an
arithmetic
geometric
progression
param
u
o
first
term
of
the
progression
param
multiplying
coefficient
param
b
additif
coefficient
public
arithgeomprogression
double
u
double
double
b
super
u
this
this
b
b
methods
given
current
term
u
return
the
next
term
u
public
double
nextterm
double
u
return
u
b
end
class
arithgeomprogression
interface
remarquer
liminaire
terme
interface
sémantique
multiple
cadre
programmation
java
pouvoir
prendre
selon
contexte
trois
sens
distinct
conceptuellement
apparenté
sens
informatique
commun
interface
jonction
entre
deux
élément
matériel
logiciel
permettre
échanger
information
exemple
interface
homme
machiner
sens
programmation
objet
interface
classer
partie
visible
publique
classe
définir
typiquement
liste
membre
attribut
constructeur
méthode
non
priver
associer
leur
commentaire
documentation
sentir
spécifique
langage
java
interface
sorte
classer
abstraire
posséder
caractéristique
particulier
définir
protocole
comportement
sentir
définir
section
contexte
utilisation
donner
sens
mot
interface
interface
sentir
langage
java
sorte
classe
abstraire
sans
aucun
détail
implémentation
posséder
degré
abstraction
supérieur
celui
classe
abstraire
interface
méthode
tout
implicitement
abstraire
elle
corps
noter
recommander
ajouter
modificateur
abstract
puisqu
implicite
posséder
champ
exception
éventuel
constant
classe
implicitement
static
final
assigner
membre
implicitement
public
interface
publique
interface
spécifier
signature
minimal
classer
implémente
interface
contrat
respecter
quand
classe
implémente
interface
engager
conformer
interface
classe
pouvoir
implémenter
plusieurs
interface
classe
définir
type
implémentation
interface
définir
type
sans
implémentation
interface
syntaxe
public
interface
interfacename
constantattributer
abstractmethods
exemple
public
interface
measurable
double
size
return
if
this
is
or
than
x
int
islargerthan
measurable
x
classe
implanter
interface
syntaxe
public
class
classname
implements
interfacenamel
interfacename
exemple
public
class
square
implements
measurable
private
double
width
public
square
double
width
width
width
public
double
size
return
width
width
public
int
islargerthan
measurable
x
if
this
size
x
size
return
if
this
size
x
size
return
return
enumération
classer
enum
permettre
représenter
ensemble
constant
nommer
type
classer
classe
contribuer
accroître
lisibilité
programmer
syntaxe
public
enum
enumname
list
of
named
constant
possibility
of
other
fields
and
methods
exemple
public
enum
direction
north
south
east
west
public
class
test
private
direction
dir
public
setdir
direction
dir
public
boolean
isnorthsouth
return
dir
direction
north
dir
direction
south
sous
forme
plus
simple
classe
enum
souvent
utiliser
sous
forme
classe
interner
inner
class
exemple
public
class
myclass
private
direction
dir
private
enum
direction
north
south
east
west
public
void
setnorth
dir
direction
north
possible
associer
chaque
constant
énumérer
valeur
type
quelconque
possible
utiliser
type
énumérer
instruction
switch
classe
imbriquer
nested
classe
concept
vital
débuter
classe
pouvoir
être
définir
intérieur
autre
classe
parler
alors
classe
imbriquer
distinguer
quatre
catégorie
classe
membre
déclarer
static
static
nested
classe
membre
statique
classer
englobant
classe
interne
inner
classe
membre
non
statique
classe
englobant
classe
local
local
classe
classe
définir
intérieur
méthode
classe
anonyme
anonymous
classe
classe
local
sans
nom
exemple
public
class
outerclass
public
static
class
staticnestedclass
private
class
innerclass
exemple
référencer
classe
staticnestedclass
outerclass
staticnestedclass
quel
intérêt
pouvoir
avoir
déclarer
classe
imbriquer
potentiellement
regroupement
logique
encapsulation
accroître
coder
plus
lisible
plus
facilement
maintenable
pratique
plupart
classer
imbriquer
classe
interne
quant
classe
anonyme
elle
pouvoir
rendre
code
difficile
lire
devoir
être
limiter
classe
très
petit
deux
méthode
voir
exemple
typique
section
contrôler
accès
modificateur
contrôle
accès
membrer
classe
pouvoir
être
préciser
déclaration
mot
clé
appeler
modificateur
modificateur
permettre
spécifier
visibilité
champ
méthode
private
protected
public
lieu
stockage
classe
modificateur
static
objet
défaut
caractère
modifiable
défaut
non
modificateur
final
modificateur
commentaire
exemple
private
membrer
déclarer
private
accessible
intérieur
classe
définition
modificateur
accès
recommander
champ
protected
membrer
déclarer
protected
accessible
depuis
classe
déclaration
sous
classe
classer
paquetage
modificateur
accès
recommander
méthode
super
classe
public
membrer
déclarer
public
accessible
depuis
importer
quel
classer
modificateur
accès
recommander
méthode
static
champ
déclarer
static
variable
classer
dupliquer
différent
instance
champ
non
static
variable
instance
dupliquer
chaque
instance
méthode
déclarer
static
méthode
classer
invoquer
sans
référence
objet
particulier
faire
référence
classer
méthode
non
static
méthode
instance
invoquer
objet
particulier
voir
également
chapitre
final
variable
déclarer
final
pouvoir
plus
être
modifier
après
initialiser
cela
permettre
particulier
déclarer
champ
constant
exemple
final
int
size
méthode
déclarer
final
pouvoir
être
redéfinir
sous
classe
classer
déclarer
final
pouvoir
être
sous
classer
noter
défaut
modificateur
private
protected
public
visibilité
dit
package
access
membrer
classe
visible
depuis
tout
classe
paquetage
exemple
public
static
final
double
gravity
instance
classe
avant
pouvoir
être
utiliser
objet
instance
classe
devoir
être
déclarer
classname
objectname
créer
puis
initialiser
objectname
new
constructorcall
exemple
gregoriancalendar
cal
cal
gregoriancalendar
timer
mytimer
new
timer
déclaration
objet
créer
objet
uniquement
variable
pointeur
destiner
mémoriser
adresse
futur
objet
création
objet
i
e
instance
proprement
dire
réaliser
opérateur
new
appel
constructeur
suivre
opérateur
new
rôle
initialiser
proprement
objet
ainsi
créer
in
fin
adresse
objet
ainsi
créer
initialiser
adresse
renvoyer
opérateur
new
stocker
grâce
opérateur
affectation
variable
préalablement
déclarer
quelque
précision
important
déclaration
déclaration
classname
objectname
créer
variable
nom
objectname
typer
référence
i
e
pointeur
initialiser
automatiquement
null
null
constant
littéral
prédéfinie
java
pouvoir
être
assigner
tout
variable
type
référence
identifier
pointeur
nul
variable
valeur
null
poindre
vers
aucun
objet
tout
tentative
référer
objet
partir
pointeur
null
engendrer
erreur
compilation
exécution
selon
contexte
gestion
dynamique
mémoire
opérateur
new
créer
instance
classe
zoner
mémoire
général
appeler
tas
contenir
tout
donnée
allouer
exécution
porter
local
objet
ainsi
créer
conserver
porter
global
reste
vivre
tant
dispos
référence
i
e
pointeur
permettre
accéder
quand
objet
plus
référencer
devenir
définitivement
inaccessible
mourir
espace
mémoire
automatiquement
désalloué
récupération
automatique
espace
mémoire
réaliser
processus
appeler
ramasser
miette
garbage
collector
façon
détruire
objet
assigner
valeur
null
variable
faire
référence
directement
indirectement
type
donnees
java
connaître
deux
type
donner
type
primitif
donné
type
primitif
stocker
directement
variable
sémantique
valeur
i
e
valeur
copier
quand
variable
affecté
autre
variable
type
objet
type
référencer
donner
type
objet
stocker
sous
forme
référencer
objet
non
tant
objet
quand
variable
type
objet
affecter
autre
variable
seul
référencer
copier
objet
java
utiliser
système
unicode
interner
coder
caractère
chaîne
caractère
identificateurs
chaque
caractère
unicode
coder
bit
permettre
représenter
nombreux
alphabet
grec
cyrillique
hébreu
arabe
ainsi
symbole
mathématique
technique
bien
unicode
utiliser
certain
système
exploitation
windows
nt
vista
exemple
plupart
système
exploitation
utiliser
système
codage
bit
sorte
transcodage
nécessaire
problème
incompatibilité
pouvoir
survenir
affichage
type
primitif
typer
description
exemple
littéral
nombre
entier
type
signer
byte
octet
entier
bit
short
entier
courir
bit
int
entier
bit
long
entier
long
bit
nombrer
réel
type
signé
float
réel
simple
précision
f
e
f
double
réel
double
précision
e
autre
type
type
non
signé
char
caractère
seul
bit
u
f
boolean
valeur
booléen
false
true
nombre
sans
point
décimal
interpréter
comme
entier
type
int
immédiatement
convertir
byte
short
long
lors
affection
pouvoir
déclarer
littéral
type
long
affecter
suffixe
nombre
point
décimal
interpréter
comme
réel
type
double
pouvoir
déclarer
littéral
type
float
affecter
suffixe
f
caractère
littéral
pouvoir
être
écrire
sous
forme
unique
caractère
unicode
entre
apostrophe
valeur
unicode
précéder
u
deux
littéral
booléen
true
false
variable
type
primitif
référer
objet
elle
méthode
associer
type
objet
type
référencer
tout
type
autre
type
primitif
type
objet
inclure
classe
non
abstrait
bibliothèque
standard
java
tel
type
string
exemple
ainsi
classe
définir
utilisateur
variable
type
objet
contenir
référence
pointeur
objet
affectation
passage
paramètre
sémantique
référence
i
e
référencer
copier
non
objet
après
affectation
variable
autre
deux
variable
référer
objet
agir
copie
surfacer
opposition
copier
profond
dupliquer
objet
deux
variable
alors
dire
alias
objet
classe
envelopper
classe
enveloppe
permettre
transformer
type
simple
objet
opération
appeler
anglais
boxing
classe
envelopper
type
primitif
boolean
boolean
byte
byte
character
char
double
double
float
float
integer
int
long
long
short
short
exemple
convert
primitif
type
wrapper
type
integer
k
new
integer
convert
wrapper
typer
primitif
type
double
x
k
doublevalue
classe
enveloppe
utile
quand
méthode
accepter
type
simple
requérir
objet
toutefois
depuis
plat
former
voir
chapitre
valeur
typer
primitif
cas
besoin
implicitement
converti
objet
classe
envelopper
correspondant
autoboxing
réciproquement
unboxing
auparavant
conversion
devoir
être
explicite
objet
tel
classe
immuable
immutable
dire
non
modifiable
fois
créer
conséquence
méthode
pouvoir
avoir
paramètre
sortir
tel
type
classer
enveloppe
présenter
surtout
intérêt
offrir
méthode
conversion
typer
primitif
string
ainsi
utilitaire
donnée
typer
primitif
exemple
convert
string
typer
primitif
type
double
x
double
parsedouble
chaîne
caractère
non
modifiable
string
bien
chaîne
caractère
typer
string
objet
nécessaire
avoir
recours
opérateur
new
créer
caractère
chaîner
caractère
chainer
indicer
chaine
length
chaîner
caractère
littéral
noter
entre
apostrophe
opérateur
opérateur
concaténation
chaîne
produire
nouveau
chaîne
sans
élément
physiquement
partagé
opérande
comparaison
deux
chaîne
caractère
caractère
nécessiter
faire
appel
fonction
equals
opérateur
donner
résultat
intuitivement
attendre
cas
particulier
objet
typer
string
immuable
immutable
dire
non
modifiable
fois
créer
conséquence
méthode
pouvoir
avoir
paramètre
sortir
typer
string
classer
string
appartenir
paquetage
java
lang
exemple
string
chainer
exemple
chainer
littéral
system
out
println
longueur
chainer
chaine
length
chaîner
caractère
modifiable
stringbuffer
chaîne
caractère
contrairement
chaîne
typer
string
pouvoir
être
modifier
opérateur
new
indispensable
créer
chaîne
typer
stringbuffer
classe
stringbuffer
appartenir
paquetage
java
lang
exemple
stringbuffer
chaine
chainer
new
stringbuffer
meeting
at
pm
chainer
setcharat
meeting
at
and
not
system
out
println
chaine
tableau
tableau
collection
tailler
fixe
élément
typer
chaque
élément
repérer
indice
permettre
accès
direct
élément
tout
tableau
automatiquement
associer
classer
dériver
object
partager
tout
tableau
typer
élément
attribut
instance
length
champ
public
non
méthode
contenir
nombre
élément
tableau
élément
tableau
array
indicer
array
length
quand
tenter
accéder
élément
indice
hors
plage
permettre
exception
typer
indexoutofboundsexception
lever
noter
tableau
caractère
objet
typer
siring
réciproquement
syntaxe
cas
tableau
mono
dimensionnel
declaring
an
array
variable
typeofelements
arrayvariable
creating
an
array
object
arrayvariable
new
typeofelements
numberofelements
referring
to
an
element
arrayvariable
integerindex
exemple
declaring
an
array
variable
private
double
mark
creating
an
array
object
static
final
int
nb
of
students
mark
new
double
nb
of
students
using
an
array
object
for
int
mark
length
i
mark
i
math
random
system
out
println
mark
mark
i
exemple
static
final
int
nrow
static
final
int
ncol
string
matrix
new
string
nrow
ncol
possible
créer
initialiser
tableau
déclaration
exemple
int
system
out
println
string
mr
mrs
ms
row
smith
jones
row
system
out
print
ms
jones
classer
java
util
arrays
offrir
divers
méthode
utilitaire
applicable
tableau
comparaison
tri
depuis
plat
former
voir
chapitre
java
offrir
boucle
for
simplifier
parcourir
élément
tableau
exemple
for
each
element
of
my
array
of
double
print
this
element
for
double
e
myarrayofdouble
system
out
println
e
collection
collection
objet
représenter
groupe
objet
collection
agrégat
regrouper
élément
multiple
seul
entité
aucun
hypothèse
faire
priori
type
élément
ordre
élément
possibilité
élément
dupliquer
plus
formellement
java
collection
élément
type
e
classe
implémente
interface
collection
e
paquetage
standard
java
util
offrir
variété
collecter
collection
framework
répondre
besoin
plus
fréquent
exemple
arraylist
e
vector
e
linkedlist
e
stack
e
hashtable
k
v
généricité
notion
exister
java
depuis
plat
former
voir
chapitre
version
introduire
révision
majeur
rapport
précédent
notamment
matière
gestion
collecter
apparition
type
générique
probablement
évolution
plus
marquant
généricité
permettre
communiquer
compilateur
typer
élément
collection
moment
création
objet
non
fixer
priori
définition
classer
exemple
classer
générique
defining
generic
collection
the
formal
parameter
is
the
generic
type
of
the
elements
public
class
mycollection
implements
list
can
be
used
here
any
type
creating
collection
of
integers
mycollection
integer
collectionofintegers
collectionofintegers
new
mycollection
integer
creating
collection
of
string
mycollection
string
collectionofstring
collectionofstring
new
mycollection
string
tout
comme
déclaration
type
pouvoir
être
générique
déclaration
méthode
pouvoir
être
aussi
générique
dire
paramétrisées
plusieurs
paramètre
exemple
méthode
générique
defining
public
static
void
fromarraytocollection
collection
for
o
add
o
using
it
string
datal
dater
dater
dater
dater
collection
object
new
arraylist
string
fromarraytocollection
noter
signaler
tableau
générique
faire
encore
bon
ménage
exemple
vector
integer
sheets
new
vector
integer
nbofsheets
produire
erreur
classique
generic
array
creation
exemple
solution
pouvoir
consister
passer
classe
intermédiaire
simplement
définir
class
vectorofintegers
extends
vector
integer
typer
appeler
type
joker
wildcard
type
permettre
représenter
tout
type
exemple
public
void
printall
collection
for
object
o
system
out
println
o
possible
borner
type
joker
caractère
joker
borner
supérieur
spécifier
extends
type
représenter
tout
sous
type
typer
caractère
joker
borner
inférieur
spécifier
super
type
représenter
tout
type
super
type
typer
exemple
collection
arraylist
objet
typer
arraylist
e
collection
tailler
variable
élément
type
e
chaque
élément
repérer
indice
permettre
accès
direct
élément
lister
tableau
supporter
principal
fonctionnalité
suivant
ajout
élément
fin
tableau
méthode
add
e
accès
élément
indicer
donner
méthode
get
int
add
int
e
suppression
élément
indicer
donner
méthode
remove
int
consultation
nombre
élément
méthode
size
élément
objet
collection
typer
arraylist
e
indicer
collection
size
classer
arraylist
e
devoir
être
importer
paquetage
java
util
import
java
util
arraylist
exemple
arraylist
integer
mycollectionofintegers
mycollectionofintegers
new
arraylist
integer
for
int
i
listofintegers
add
i
parcours
collection
itérateur
parcourir
collection
opération
consister
explorer
collection
élément
élément
deux
façon
faire
parcourir
collection
utiliser
itérateur
itérateur
objet
typer
iterator
e
trois
fonctionnalité
plus
utile
créer
gérer
itérateur
méthode
iterator
classer
collection
hasnext
next
classe
iterator
noter
suppression
élément
collection
cours
parcours
relever
méthode
remove
itérateur
non
celui
collection
classer
iterator
e
devoir
être
importer
paquetage
java
util
import
java
util
iterator
itérateurs
façon
faire
historique
parcourir
collection
depuis
version
générique
utiliser
boucle
for
généraliser
tel
boucle
permettre
affranchir
itérateurs
parcourir
très
simplement
collection
quelconque
offrir
depuis
version
exemple
parcourir
itérateur
iterator
integer
it
mycollectionofintegers
iterator
while
it
hasnext
call
it
next
to
get
the
next
object
of
the
collection
and
do
something
with
that
object
exemple
parcourir
sans
itérateur
for
each
element
of
my
collection
of
integers
print
it
for
integer
v
mycollectionofintegers
system
out
println
v
transtypage
transtypage
anglais
cast
casting
opération
consister
convertir
type
expression
conversion
type
réaliser
faire
précéder
expression
typer
cible
entre
parenthèse
proposition
appliquer
certain
type
primitif
type
objet
lier
relation
héritage
conversion
incorrect
provoquer
erreur
compilation
exécution
noter
transtypage
changer
type
variable
concerner
type
variable
défini
fois
tout
dès
création
opération
transtypage
simplement
changement
point
voir
demander
compilateur
syntaxe
newtype
expression
exemple
int
char
char
certain
classe
offrir
méthode
spécifique
plus
adéquat
notamment
conversion
réel
entier
méthode
math
round
realvalue
permettre
convertir
réel
entier
plus
proche
méthode
math
floor
realvalue
associer
conversion
entier
fournir
plus
grand
entier
inférieur
égal
argument
exemple
int
math
floor
valoir
méthode
math
ceil
realvalue
associer
conversion
entier
fournir
plus
petit
entier
supérieur
égal
argument
exemple
int
math
cei
valoir
conversion
partir
string
méthode
tostring
hériter
tout
objet
permettre
convertir
objet
string
méthode
valueof
primitivetypeexpression
classer
string
renvoyer
représentation
string
valeur
argument
méthode
valueof
string
disposer
tout
classe
enveloppe
renvoyer
instance
classer
enveloppe
contenir
valeur
représenter
argument
typer
string
exemple
convert
string
typer
primitif
type
double
x
double
parsedoubler
convert
string
typer
wrapped
type
double
pi
double
valueof
convert
wrapped
type
primitif
type
int
k
integer
valueof
intvalue
convert
primitif
typer
string
typer
string
pistr
string
valueof
convert
primitif
type
string
typer
double
pi
new
double
string
pi
tostring
autoboxing
unboxing
depuis
plat
former
voir
chapitre
valeur
typer
primitif
cas
besoin
implicitement
converti
objet
classe
envelopper
correspondant
autoboxing
réciproquement
unboxing
auparavant
conversion
devoir
être
expliciter
operateurs
expression
java
posséder
nombre
considérable
opérateur
arithmétique
logique
expression
constituer
opérande
opérateur
opérande
pouvoir
être
différent
nature
variable
constant
appel
fonction
expression
tout
opérateur
devoir
être
explicite
quand
plus
opérateur
apparaître
seul
expression
alors
règle
précédence
utiliser
déterminer
ordre
application
nécessaire
altérer
ordre
normal
évaluation
parenthèse
pouvoir
être
utiliser
précédences
égal
expression
évaluer
gauche
droit
recommandation
styler
utiliser
parenthèse
isoler
sous
expression
afin
éviter
problème
précédence
opérateur
rendre
code
plus
lisible
tout
programmeur
insérer
espace
avant
après
chaque
opérateur
autre
point
opérateur
expression
arithmétique
quelque
opérateur
arithmétique
binaire
opérateur
fonction
champ
application
division
réel
réel
division
entier
entier
modulo
reste
division
entier
entier
noter
java
comme
plupart
langage
programmation
b
toujours
signer
alors
mathématique
rester
division
euclidien
toujours
positif
quotient
calculer
conséquence
java
b
sgn
sgn
b
b
b
b
b
java
math
noter
java
opérateur
modulo
pouvoir
aussi
être
appliquer
réel
résultat
alors
rester
obtenir
après
soustraction
opérande
droit
opérande
gauche
nombre
entier
fois
toutefois
causer
arrondir
calcul
résultat
toujours
celui
attendre
exemple
donner
non
grand
prudence
opérateur
appliquer
réel
quelque
opérateur
arithmétique
unaire
opérateur
fonction
champ
application
incrémentation
entier
réel
décrémentation
entier
réel
opérateur
expression
booléen
quelque
opérateur
booléen
binaire
opérateur
fonction
logique
conditionnel
logique
conditionnel
logique
exclusif
opérateur
évaluation
expression
logique
arrêter
dès
possible
inférer
valeur
final
expression
tout
opérande
nécessairement
évaluer
opérateur
booléen
unaire
opérateur
fonction
négation
logique
opérateur
relationnel
quelque
opérateur
relationnel
comparaison
opérateur
fonction
égal
non
égal
inférieur
inférieur
égal
supérieur
supérieur
égal
methodes
définition
appel
méthode
ordinaire
définition
procédure
définition
fonction
public
void
procname
formalparams
public
fctlype
fctname
formalparams
declaration
declaration
statements
statements
return
expression
appel
procédure
appel
fonction
appel
interne
classer
définition
appel
interne
classer
définition
procname
actualparams
variable
fctname
actualparams
appel
externe
classer
définition
appel
externe
classer
définition
méthode
instance
méthode
instance
objectname
procname
actualparams
variable
objectname
fctname
actualparams
méthode
classer
méthode
classe
classname
procname
actualparams
variable
classname
fctname
actualparams
déclaration
paramètre
formel
spécification
paramètre
effectif
formal
parameter
actual
parameter
paramètre
entrer
typer
primitif
objet
paramètre
entrer
typer
primitif
objet
parametertype
parametername
expression
paramètre
sortir
typer
primitif
paramètre
sorti
type
primitif
impossible
utiliser
fonction
passer
impossible
paramètre
typer
objet
paramètre
sortir
typer
objet
paramètre
sortir
typer
objet
parametertype
parametername
objectname
paramètre
spécifier
définition
méthode
appeler
paramètre
formel
devoir
être
précéder
type
paramètre
apparaître
former
appel
appeler
paramètre
effectif
plusieurs
paramètre
séparer
virguler
tout
paramètre
type
primitif
passer
valeur
copier
argument
transmettre
méthode
disposer
original
tout
paramètre
typer
objet
passer
référencer
référence
i
e
pointeur
transmettre
méthode
objet
défaut
méthode
méthode
instance
elle
invoquer
instance
classe
exister
aussi
méthode
classe
pouvoir
être
invoquer
sans
instance
spécifier
méthode
classe
déclarer
static
signature
méthode
constituer
nom
lister
type
paramètre
classer
deux
méthode
pouvoir
avoir
signature
elle
pouvoir
toutefois
porter
nom
cela
appeler
surcharger
tout
méthode
instance
constructeur
pouvoir
référer
objet
courir
i
e
objet
méthode
constructeur
cours
appel
mot
clé
this
pouvoir
ainsi
référer
tout
membre
champ
méthode
objet
courir
identifier
former
this
membre
constructeur
constructeur
méthode
particulier
invocation
explicitement
associer
création
instance
classer
finalité
initialiser
proprement
état
objet
lors
création
définition
constructeur
suivre
règle
syntaxique
spécifique
nom
constructeur
obligatoirement
nom
classer
appartenance
tête
définition
spécifier
type
syntaxe
définition
constructeur
classer
nom
classname
public
classname
formalparameters
fields
initializations
constructeur
typiquement
utiliser
association
opérateur
new
exemple
syntaxe
utilisation
constructeur
classer
nom
classname
classname
object
new
classname
actualparameters
classe
pouvoir
comporter
plusieurs
constructeur
sous
condition
même
paramètre
cas
éviter
duplication
code
constructeur
pouvoir
appeler
autre
syntaxe
this
actualparameters
exemple
public
class
point
private
int
x
public
pointe
int
x
int
first
constructor
this
x
x
this
public
point
second
constructor
this
noter
définition
adopter
java
prendre
considération
typer
méthode
sentir
signature
correspondre
parfois
appeler
ailleurs
profil
méthode
méthode
main
méthode
main
comme
point
entrer
application
lancement
exécution
syntaxe
public
static
void
main
string
args
argument
args
capter
éventuel
argument
ligne
commander
premier
argument
ligne
commander
stocker
args
non
args
comme
exemple
considérer
application
classer
principal
celui
contenir
méthode
main
appeler
game
supposer
application
dépendre
deux
paramètre
valeur
devoir
être
fournir
lancement
supposer
également
fichier
source
game
java
compiler
fichier
exécutable
game
class
lancement
application
commander
java
game
daniel
attribuer
args
tableau
daniel
instruction
plan
syntaxique
instruction
statements
pouvoir
être
regrouper
grand
catégorie
instruction
simple
instruction
affectation
instruction
entrer
sortir
instruction
appel
procédure
instruction
simple
terminer
toujours
point
virguler
point
virgule
seul
définir
instruction
vide
instruction
contrôler
instruction
sélection
instruction
boucler
instruction
rupture
séquencer
bloc
instruction
bloc
instruction
aussi
appeler
instruction
composer
séquencer
instruction
enserrer
entre
accolade
bloc
définir
instruction
vide
instruction
affectation
syntaxe
variable
expression
symbole
opérateur
affectation
valeur
expression
situer
partie
droit
affecter
variable
spécifier
partie
gauche
typer
expression
devoir
apparier
type
variable
impact
physique
différent
selon
expression
typer
primitif
objet
voir
chapitre
instruction
contrôler
instruction
sélection
if
else
premier
forme
deuxième
forme
if
expression
if
expression
statements
statements
else
statements
exemple
if
field
size
system
out
println
the
field
is
empty
exemple
if
number
reporterror
else
processnumber
number
exemple
if
handlenegative
else
if
handlezero
else
handlepositif
switch
premier
forme
deuxième
forme
switch
expression
switch
expression
caser
valoir
caser
valoir
statements
falls
through
break
caser
valoir
caser
valoir
falls
through
statements
caser
valoir
break
statements
default
break
statements
caser
valoir
break
falls
through
caser
valoir
statements
break
default
statements
break
instruction
switch
pouvoir
avoir
nombre
quelconque
label
caser
instruction
break
mettre
fin
instruction
switch
défaut
instruction
break
exécution
poursuivre
instruction
label
suivant
deuxième
forme
ci
dessus
exploiter
comportement
chacun
trois
premier
valeur
conduire
exécution
partie
statements
associer
valoir
chacun
deux
valeur
suivant
conduire
exécution
partie
statements
associer
valoir
clause
default
optionnel
recommander
défaut
pouvoir
aucun
cas
conduire
exécution
exemple
switch
day
caser
daystring
monday
break
caser
daystring
tuesday
break
caser
daystring
wednesday
break
caser
daystring
thursday
break
caser
daystring
friday
break
caser
daystring
saturday
break
caser
daystring
sunday
break
default
error
break
exemple
switch
wintermonth
caser
numberofdays
break
caser
falls
through
caser
numberofdays
break
caser
if
isleapyear
numberofdays
else
numberofdays
break
default
error
break
instruction
boucler
while
boucle
while
exécuter
bloc
instruction
aussi
longtemps
valeur
expression
donner
true
expression
tester
avant
chaque
exécution
corps
boucler
bien
corps
boucle
pouvoir
être
exécuter
fois
syntaxe
while
expression
statements
exemple
int
i
while
text
size
system
out
printl
text
get
i
exemple
while
iter
hasnext
processobject
iter
next
do
while
boucler
do
while
exécuter
bloc
instruction
aussi
longtemps
valeur
expression
donner
true
expression
tester
après
chaque
exécution
corps
boucler
bien
corps
boucler
toujours
exécuter
moins
fois
syntaxe
do
statements
while
expression
exemple
do
input
readinput
if
input
null
system
out
printl
try
again
while
input
null
for
boucler
for
exécuter
aussi
longtemps
condition
évaluer
true
avant
boucle
démarrer
instruction
initialisation
exécuter
exactement
fois
condition
évaluer
avant
chaque
exécution
corps
boucle
comme
boucle
while
instruction
mettre
jour
variable
exécuter
après
chaque
exécution
corps
boucler
syntaxe
for
initialization
condition
update
statements
exemple
for
int
text
size
i
system
out
println
text
get
foreach
depuis
plat
former
voir
chapitre
java
offrir
boucle
for
améliorer
parcourir
élément
tableau
collection
reporter
section
respectif
syntaxe
for
each
element
of
the
collection
process
element
for
typeofelements
element
collectionofelements
process
element
instruction
entrer
sorti
java
offrir
nombre
considérable
fonction
procédure
entrée
sortir
tant
mode
texte
graphique
limiter
section
principal
instruction
entrer
sortir
mode
texte
entrer
sorti
mode
graphique
voir
chapitre
méthode
entrer
sortie
primaire
appartenir
classe
paquetage
java
io
depuis
plat
former
voir
chapitre
classer
scanner
paquetage
java
uti
offrir
fonctionnalité
baser
lire
facilement
donner
depuis
tout
flux
entrée
sortir
formater
comme
complément
classer
java
util
formatter
permettre
spécifier
format
entrer
sortir
notion
flux
flux
flot
stream
anglais
généraliser
notion
périphérique
entrée
sortir
flux
pouvoir
être
voir
comme
interface
intelligent
unidirectionnel
relier
machine
java
périphérique
permettre
lecture
aussi
bien
écriture
affranchir
spécificité
périphérique
concerner
réaliser
entrée
sortir
consister
ainsi
créer
flux
typer
approprier
sauf
exister
déjà
prédéfini
system
in
system
out
system
err
lire
écrire
selon
cas
flux
souvent
cas
lecture
convertir
donner
lire
type
cibler
souhaiter
premier
approche
limiter
flux
accès
séquentiel
entrée
sortir
terminal
solution
suivant
affranchir
erreur
saisir
gérer
type
erreur
reporter
chapitre
excepter
chapitre
affichage
écran
syntaxe
affichage
écran
mode
texte
system
out
print
string
system
out
println
string
system
out
print
primitivetypeexpression
system
out
println
primitivetypeexpresstion
affichage
formater
depuis
plat
forme
java
offrir
également
méthode
printf
permettre
sortie
formater
comme
voir
classe
java
util
formatter
spécification
format
exemple
system
out
println
count
count
system
out
printf
user
total
fonctionnement
printf
code
formatage
printf
réclamer
chaîne
caractère
premier
paramètre
chaîne
pouvoir
être
suivre
variable
chaîne
pouvoir
contenir
code
formatage
imprimer
coder
formatage
commencer
caractère
chaque
fois
coder
formatage
rencontrer
printf
imprimer
variable
suivant
liste
paramètre
principal
code
formatage
commander
affichage
valeur
typer
caractère
entier
e
réel
notation
exposer
f
réel
chaîne
caractère
coder
formatage
pouvoir
inclure
spécification
format
champ
affichage
exemple
code
formatage
champ
affichage
spécifier
paramètre
typer
considérer
champ
caractère
champ
caractère
justification
gauche
f
champ
caractère
droit
virguler
lecture
clavier
exemple
scanner
input
new
scanner
system
in
string
input
next
read
string
word
string
input
nextline
read
the
rest
of
the
line
int
input
nextint
read
an
integer
doubler
r
input
nextdouble
read
double
input
clore
entrée
sortir
fichier
opérer
fichier
consister
créer
flux
approprié
opération
souhaiter
lire
écrire
fichier
fermer
fichier
solution
suivant
affranchir
erreur
entrer
sortir
gérer
type
erreur
reporter
chapitre
excepter
chapitre
ecriture
fichier
depuis
plat
forme
java
offrir
également
méthode
printf
permettre
sortie
formater
comme
voir
classe
java
util
formatter
spécification
format
exemple
écriture
fichier
texte
printwriter
out
new
printwriter
outputfilename
for
int
i
i
i
out
printf
i
out
clore
lecture
fichier
exemple
lecture
fichier
texte
mot
mot
scanner
in
new
scanner
new
filer
inputfilename
string
while
in
hasnext
in
next
read
string
word
system
out
println
in
clore
contexte
particulier
cas
ouverture
lecture
fichier
texte
stocker
fichier
jar
exécuter
import
java
io
inputstream
import
java
util
scanner
classloader
cl
classloader
getsystemclassloader
inputstream
is
cl
getresourceasstream
inputfilename
scanner
in
new
scanner
is
cas
ouverture
lecture
fichier
texte
distant
identifier
url
import
java
net
url
import
java
util
scanner
url
url
new
url
http
www
esiee
fr
inputfilename
scanner
in
new
scanner
url
openstream
noter
solution
non
applicable
depuis
applet
outre
bien
assurer
tout
condition
accessibilité
fichier
lever
interdiction
parer
feu
local
notamment
cas
ouverture
nouveau
page
html
depuis
applet
répertoire
import
java
net
url
import
javax
swing
japplet
url
url
new
url
getdocumentbase
myfile
html
getappletcontext
showdocument
url
blank
repaint
lecture
chaîner
caractère
formater
fréquent
avoir
lire
chaîne
caractère
connaître
format
quel
flux
entrer
terminal
fichier
depuis
plat
forme
classer
scanner
paquetage
java
util
offrir
fonctionnalité
très
pratique
exemple
lecture
chaîner
caractère
formater
string
str
xxx
xxx
yellow
xxx
blue
xxx
scanner
in
new
scanner
str
usedelimiter
xxx
system
out
println
in
nextint
system
out
println
in
nextint
system
out
println
in
next
system
out
println
in
next
in
clore
will
display
yellow
blue
heritage
notion
héritage
héritage
technique
offrir
nombreux
avantage
éviter
duplication
code
permettre
réutilisation
coder
autre
contexte
faciliter
maintenance
programme
faciliter
extension
application
existant
héritage
inheritance
relation
non
permettre
définir
classe
comme
extension
autre
exemple
classer
astre
classer
etoile
classe
planète
étoiler
astre
planeter
astre
classe
etoile
étendre
classe
astre
classe
etoile
hériter
classe
astre
super
classe
classer
étendre
autre
classe
sous
classe
classe
étendre
hériter
autre
classe
hériter
état
comportement
tout
ancêtre
pouvoir
aussi
redéfinir
classe
lier
relation
héritage
former
hiérarchie
héritage
exemple
hiérarchie
héritage
astre
etoile
planeter
exoplanète
planeter
solaire
pégaside
chtonien
tellurique
habitable
constructeur
sous
classe
devoir
toujours
invoquer
constructeur
super
classe
premier
instruction
défaut
java
essayer
insérer
appel
automatique
former
appel
suivant
super
actualparameters
tout
classe
sans
super
classe
explicite
object
comme
super
classe
comme
hiérarchie
classe
type
former
hiérarchie
type
typer
définir
définition
sous
classe
sous
type
typer
définir
super
classe
exemple
etoile
sous
type
typer
astre
variable
pouvoir
contenir
objet
typer
déclarer
variable
objet
tout
sous
type
typer
déclarer
exemple
astre
al
new
astre
correct
astre
new
etoile
correct
transtypage
ascendre
astre
new
planete
correct
transtypage
ascendre
etoile
el
new
astre
erreur
etoile
e
etoile
correct
transtypage
descendre
devoir
être
explicite
objet
sous
type
pouvoir
être
utiliser
partout
objet
super
typer
attendre
ceci
appeler
substitution
java
permettre
héritage
multiple
sous
classe
pouvoir
hériter
directement
seul
super
classe
hériter
sous
classe
sous
classe
hériter
tout
membre
super
classe
accessible
sauf
membre
attribut
méthode
redéfinir
sous
classe
sous
classe
hériter
super
classe
membre
déclarer
public
protected
membre
déclarer
sans
modificateur
accès
sous
classe
paquetage
super
classe
sous
classe
hériter
super
classe
membre
redéfinir
sous
classe
constructeur
attention
choix
identificateurs
sous
classe
choix
pouvoir
involontairement
masquer
membre
super
classer
particulièrement
cas
attribut
attribut
nom
attribut
super
classe
masquer
attribut
super
classer
type
différent
redéfinir
méthode
redéfinir
méthode
sous
classe
falloir
signature
typer
retour
méthode
super
classer
méthode
redéfinir
pouvoir
autoriser
accès
plus
large
moins
ex
méthode
déclarer
protected
super
classe
pouvoir
être
redéfinir
public
sous
classe
private
exemple
typique
méthode
tostring
classe
object
appliquer
objet
produire
chaîne
caractère
former
nom
classe
coder
hachage
méthode
pouvoir
être
redéfinir
tout
classe
méthode
redéfinir
sous
classe
simplement
besoin
ajouter
quelque
fonctionnalité
complémentaire
celui
méthode
super
classer
besoin
réécrire
complètement
car
pouvoir
appeler
méthode
super
classe
super
superclassmethodname
actualparameters
quelque
règle
méthode
instance
pouvoir
redéfinir
méthode
classer
réciproquement
méthode
instance
sous
classe
même
signature
typer
méthode
instance
super
classe
redéfinir
méthode
super
classer
version
méthode
invoquer
instance
sous
classe
type
dynamique
car
liaison
dynamique
méthode
instance
celui
sous
classe
méthode
classe
sous
classe
même
signature
typer
méthode
classer
super
classe
masquer
méthode
super
classer
version
méthode
invoquer
dépendre
appeler
super
classe
sous
classe
car
liaison
statique
méthode
classe
sous
classe
pouvoir
redéfinir
méthode
déclarer
final
super
classe
sous
classe
devoir
redéfinir
méthode
déclarer
abstract
super
classer
moins
sous
classe
déclarer
abstract
depuis
plat
former
voir
chapitrer
conseiller
utiliser
annotation
méta
donner
override
marquer
tout
méthode
supposer
redéfinir
méthode
hériter
classe
parent
cela
permettre
compilateur
signaler
immédiatement
erreur
jamais
redéfinition
avérer
causer
exemple
faute
frapper
nom
méthode
outre
signaler
méthode
redéfinir
annotation
override
permettre
accroître
lisibilité
coder
covariance
type
retour
autoriser
méthode
sous
classe
pouvoir
retourner
objet
type
sous
classe
typer
retourner
méthode
signature
super
classe
caractéristique
supprimer
besoin
test
converser
type
excessif
exemple
override
public
string
tostring
exemple
classer
point
posséder
deux
attribut
x
classe
coloredpoint
hériter
point
possédant
attribut
spécifique
color
comment
écrire
méthode
equals
sans
duplication
coder
in
the
class
point
override
public
boolean
equals
object
o
if
o
null
return
false
caser
null
if
this
o
return
true
reflexivity
if
this
getclass
o
getclass
return
false
symmetry
now
this
and
o
having
the
same
class
comparer
the
fields
point
p
point
o
return
this
x
p
x
this
p
in
the
class
coloredpoint
extending
point
override
public
boolean
equals
object
o
verify
if
this
and
o
haver
the
same
class
and
if
their
super
fields
are
equal
if
super
equals
o
return
false
now
comparer
the
specific
fields
coloredpoint
cp
coloredpoint
o
return
this
color
equals
cp
color
exemple
public
class
motherclass
public
void
normal
system
out
println
the
normal
method
in
motherclass
public
static
void
hide
system
out
println
the
hide
method
in
motherclass
public
void
override
system
out
println
the
override
method
in
motherclass
end
motherclass
public
class
daughterclass
extends
motherclass
override
public
static
void
hide
system
out
println
the
hide
method
in
daughterclass
override
public
void
override
system
out
println
the
override
method
in
daughterclass
public
static
void
main
string
args
daughterclass
o
new
daughterclass
motherclass
o
o
o
normal
call
super
normal
o
normal
call
super
normal
o
hide
call
this
hide
o
hide
call
super
hide
liaison
statique
o
override
call
this
override
o
override
call
this
override
tiaison
dynamique
end
daughterclass
méthode
main
afficher
the
normal
method
in
motherclass
the
normal
method
in
motherclass
the
hide
method
in
daugterclass
the
hide
method
in
motherclass
the
override
method
in
daugterclass
the
override
method
in
daugterclass
type
statique
dynamique
liaison
statique
dynamique
section
reprendre
formaliser
quelque
un
important
concept
introduire
section
précédent
type
statique
dynamique
transtypage
typer
statique
objet
typer
spécifier
déclaration
typer
déclarer
type
compilation
typer
dynamique
objet
type
i
e
classe
appartenance
objet
instancié
typer
constater
type
effectif
exécution
typer
dynamique
objet
toujours
type
statique
sous
type
type
statique
sauf
exception
devoir
transtypages
exemple
classer
classe
b
sous
classe
considérer
code
suivant
if
myclass
booleanrandom
new
else
new
b
transtypage
ascendre
implicite
type
statique
type
dynamique
b
pouvoir
être
constater
après
condition
évaluer
transtypage
casting
appliquer
référencer
possibilité
avoir
voir
spécifique
objet
pointer
changer
rien
type
objet
sous
jacent
garde
bien
évidemment
tout
long
vie
type
lequel
créer
opération
transtypage
purement
syntaxique
faire
indiquer
compilateur
point
voir
depuis
lequel
devoir
voir
objet
transtypage
vers
type
dire
ascendant
transtypage
ascendre
implicite
transtypage
vers
sous
type
dire
descendant
transtypage
descendre
devoir
être
explicite
permettre
forcer
compilation
garantir
nécessairement
absence
erreur
exécution
transtypage
garantir
correct
respecter
règle
suivant
deux
type
définir
o
objet
type
dynamique
considérer
déclaration
obj
o
transtypage
garantir
possible
tant
compilation
exécution
seulement
sous
type
sous
type
opérateur
instanceof
permettre
tester
objet
type
dynamique
donner
tout
sous
type
type
donner
pouvoir
permettre
vérifier
compatibilité
type
avant
opérer
transtypage
exemple
supposer
définir
public
class
shape
public
class
circle
extends
shape
public
class
triangle
extends
shape
public
class
date
déclaration
suivant
génèreraient
erreur
incompatibilité
type
shape
shape
new
dater
erreur
compilation
circle
new
shape
erreur
compilation
circle
circle
new
shape
erreur
exécution
triangle
new
triangle
circle
circle
erreur
exécution
déclaration
suivant
sain
shape
new
circle
circle
circle
shape
if
obj
instanceof
shape
shaped
obj
liaison
statique
dynamique
considérer
invocation
o
o
objet
typer
statique
type
dynamique
message
attribut
méthode
envoyer
o
message
exécuter
celui
code
accessible
depuis
classe
alors
liaison
objet
message
dire
statique
liaison
compilation
sinon
dire
dynamique
liaison
exécution
java
liaison
objet
variable
instance
statique
liaison
objet
méthode
dynamique
sauf
méthode
static
final
exemple
public
class
public
boolean
return
true
public
boolean
return
true
public
class
b
extends
public
boolean
return
false
public
boolean
return
false
public
static
void
main
string
args
new
b
system
out
prinln
system
out
prinln
system
out
prinln
problème
méthode
main
afficher
false
true
pourquoi
typer
statique
type
dynamique
b
b
exécuter
quant
méthode
défini
b
super
classer
b
hériter
normalement
exécuter
dernier
instruction
system
out
prinln
provoquer
erreur
compilation
pourquoi
parce
compilateur
connaître
type
statique
i
e
typer
déclarer
méthode
définir
classer
super
classe
compilateur
trouver
définition
bien
b
générer
erreur
solution
transtypage
descendre
préalable
system
out
prinln
b
transtypage
correct
car
posséder
déjà
création
tout
attribut
instance
b
polymorphisme
appel
méthode
pouvoir
invoquer
méthode
différent
car
liaison
réaliser
dynamiquement
i
e
exécution
non
compilation
identification
typer
objet
associer
appel
dynamique
exemple
polymorphisme
héritage
public
class
shape
public
void
draw
system
out
println
this
draw
public
class
circle
extends
shape
override
public
string
tostring
return
circle
public
class
square
extends
shape
override
public
string
tostring
return
square
public
class
picture
public
static
void
main
string
args
vector
shape
v
new
vector
shape
v
add
new
circle
v
add
new
square
for
shape
v
system
out
prinln
draw
polymorphism
méthode
main
afficher
circle
draw
square
draw
classe
méthode
particulier
classer
déclarer
final
pouvoir
être
sous
classer
méthode
déclarer
final
pouvoir
être
redéfinir
sous
classe
classer
déclarer
abstract
représenter
concept
abstrait
pouvoir
être
instanciée
pouvoir
être
sous
classer
méthode
déclarer
abstract
méthode
corps
spécifier
classe
abstraire
pouvoir
contenir
méthode
non
abstraire
tout
classe
contenir
méthode
abstraire
devoir
être
déclarer
abstract
sous
classe
implémente
tout
méthode
abstraire
super
classe
devoir
être
déclarer
abstract
interface
interface
sentir
langage
java
cf
section
protocole
comportement
pouvoir
être
implanter
tout
classe
interface
dehors
hiérarchie
classe
interface
différencier
principalement
classe
abstraire
caractéristique
aucun
méthode
concret
opposition
abstraire
pouvoir
être
définir
interface
classe
pouvoir
implémenter
plusieurs
interface
tout
comme
pouvoir
construire
hiérarchie
classe
pouvoir
construire
hiérarchie
interface
alors
classe
pouvoir
étendre
directement
seul
super
classe
héritage
multiple
interface
pouvoir
étendre
directement
plusieurs
super
interface
héritage
multiple
possible
exemple
public
interface
list
e
extends
collection
e
exemple
public
interface
predator
boolean
chaseprey
prey
p
public
interface
prey
boolean
ischasedby
predator
p
public
interface
venomous
public
interface
venomouspredator
extends
predator
venomous
public
class
pet
public
class
cat
extends
pet
implements
predator
public
class
frog
implements
predator
prey
excepter
exception
objet
fournir
information
relatif
défaillance
programmer
exception
générer
chacun
situation
suivant
condition
exécution
anormal
comme
exemple
tentative
division
zéro
mémoire
insuffisant
exécution
instruction
throw
paquetage
java
lang
définir
nombre
classe
exception
couvrir
cas
plus
courant
exception
contrôler
non
contrôler
tout
exception
instance
classe
throwable
sous
classe
object
throwable
error
exception
mycheckedexception
runtimeexception
myuncheckedexception
java
diviser
classe
exception
deux
catégorie
excepter
non
contrôler
unchecked
exception
concerner
cas
imprévu
dire
situation
devoir
avoir
défaillance
fonctionnement
normal
elle
concerner
situation
pouvoir
être
raisonnablement
éviter
exemple
indicer
tableau
hors
limite
exception
indiquer
généralement
erreur
programmer
elle
normalement
vocation
conduire
arrêt
immédiat
définitif
programme
excepter
contrôler
checked
exception
concerner
cas
prévoir
dire
situation
programmeur
devoir
attendre
opération
pouvoir
échouer
elle
concerner
situation
défaillance
delà
contrôler
programmeur
exemple
disquer
devenir
plein
rendre
impossible
écriture
fichier
excepter
normalement
vocation
être
récupérer
permettre
programme
poursuivre
normalement
gestion
exception
contrôler
imposer
utilisation
clause
throws
instruction
contrôler
try
catch
excepter
non
contrôler
classe
runtimeexception
error
leur
sous
classe
tout
autre
classe
sous
classe
excepter
contrôler
classe
exception
standard
hiérarchie
error
classe
error
super
classe
hiérarchie
erreur
grave
non
contrôler
hiérarchie
habituellement
réservé
erreur
exécution
système
exemple
sous
classe
prédéfinies
nosuchmethoderror
stackoverflowerror
outofmemoryerror
illegalaccesserror
hiérarchie
exception
classer
exception
super
classer
hiérarchie
excepter
exclusion
faire
sous
hiérarchie
runtimeexception
contrôler
exemple
sous
classe
excepter
contrôler
prédéfinie
dataformatexception
ioexception
eofexception
filenotfoundexception
hiérarchie
runtimeexception
classer
runtimeexception
super
classer
hiérarchie
excepter
non
contrôler
exemple
sous
classe
prédéfinies
arithmeticexception
illegalargumentexception
numberformatexception
illegalstateexception
indexoutofboundsexception
nullpointerexception
lancement
exception
instruction
throw
permettre
lancer
exception
recommander
appliquer
exception
non
contrôler
syntaxe
throw
new
classofexception
diagnostic
message
to
print
exemple
if
key
null
throw
new
nullpointerexception
null
key
found
in
method
x
exemple
if
key
throw
new
illegalargumentexception
empty
key
received
exemple
constructeur
if
this
name
length
throw
new
illegalstateexception
name
must
be
provided
object
creation
aborted
exemple
opération
remove
interface
iterator
spécifier
optionnel
dire
implémentation
pouvoir
être
cas
public
void
remove
throw
new
unsupportedoperationexception
capturer
exception
capturer
exception
obligatoire
exception
vouloir
contrôler
cas
excepter
contrôler
compilateur
renforcer
contrôle
fois
méthode
lancer
tel
exception
appeler
méthode
clause
throws
clause
throws
déclaration
ajouter
tête
méthode
susceptible
lever
exception
contrôler
déclarer
excepter
contrôler
prendre
compter
cadre
méthode
ceci
nécessaire
compilateur
pouvoir
savoir
quel
excepter
contrôler
convention
excepter
non
contrôler
devoir
être
inclus
clause
throws
syntaxe
throws
exceptionclass
exceptionclass
exemple
public
void
savetofile
string
filename
throws
ioexception
instruction
try
catch
instruction
try
catch
permettre
capturer
exception
générer
appel
méthode
quand
exception
générer
contrôle
transférer
coder
générer
exception
clause
catch
capturer
exception
clause
catch
devoir
avoir
seul
paramètre
formel
typer
paramètre
devoir
être
classe
throwable
sous
classe
instruction
try
pouvoir
contenir
plusieurs
bloc
catch
cas
exception
plus
général
devoir
être
traiter
dernier
syntaxe
try
protect
one
or
more
statement
here
catch
exceptionclass
e
report
and
recover
from
the
exception
here
finally
in
fin
in
any
caser
always
execute
these
statements
bloc
finally
optionnel
permettre
souvent
éviter
duplication
coder
exemple
partir
plat
former
read
double
from
the
standard
input
stream
scanner
input
new
scanner
system
in
double
x
try
x
input
nextdouble
catch
inputmismatchexception
e
system
err
println
error
doubler
waited
e
input
clore
exemple
partir
plat
forme
create
copy
of
text
filer
scanner
in
null
printwriter
out
null
try
in
new
scanner
new
filer
inputfilename
out
new
printwriter
outputfilename
while
in
hasnext
out
println
in
nextline
catch
exception
e
system
err
println
error
in
reading
writing
file
e
finally
if
in
null
in
clore
if
out
null
out
clore
exemple
partir
plat
former
read
and
print
text
file
of
double
scanner
in
null
try
in
new
scanner
new
filer
inputfilename
while
in
hasnext
system
out
println
double
parsedouble
in
next
catch
filenotfoundexception
e
system
err
println
unable
to
open
the
input
file
e
catch
numberformatexception
e
system
err
println
token
is
not
double
e
catch
exception
e
system
err
println
problem
in
reading
the
filer
e
finally
if
in
null
try
in
clore
catch
exception
e
system
err
println
error
in
closing
the
file
e
définir
nouveau
classe
exception
principal
raison
conduire
définition
nouveau
classer
exception
besoin
inclure
information
complémentaire
objet
exception
afin
permettre
diagnostic
récupération
erreur
tout
nouveau
classe
exception
définir
comme
sous
classe
classer
exception
existant
hiérarchie
exception
exemple
public
class
wrongvalueexception
extends
exception
private
string
key
public
wrongvalueexception
string
key
this
key
key
public
string
getkey
return
key
public
string
tostring
return
wrong
valoir
key
found
annexe
programmation
graphique
référence
baser
swing
exemple
programmation
interface
graphique
java
sun
com
doc
books
tutorial
uiswing
mini
index
html
gestion
événement
exemple
programmation
java
sun
com
doc
books
tutorial
uiswing
event
api
html
swing
architecturer
overview
java
sun
com
products
jfc
isc
article
architecturer
chapitre
introduire
programmation
graphique
bibliothèque
javax
swing
swing
exister
deux
grand
paquetage
utilitaire
java
réaliser
interface
graphique
awt
abstract
window
toolkit
paquetage
primitif
composant
paquetage
importer
import
java
awt
swing
plus
récent
plus
évoluer
construire
awt
paquetage
recommander
composant
paquetage
importer
import
javax
swing
deux
paquetage
swing
plus
communément
utiliser
javax
swing
javax
swing
event
classe
javax
swing
plus
courant
jframe
jpanel
jlabel
jtextfield
jbutton
joptionpane
exemple
saisir
affichage
boîte
dialoguer
import
javax
swing
joptionpane
user
method
showinputdialog
to
prompt
for
some
input
string
inputvalue
joptionpane
showinputdialog
valoir
user
method
showmessagedialog
to
display
message
joptionpane
showmessagedialog
null
message
conteneur
composant
tout
objet
graphique
composer
différent
objet
conteneur
container
composant
atomique
différent
constituant
organiser
hiérarchie
inclusion
principal
catégorie
conteneur
composant
conteneur
plus
haut
niveau
objet
graphique
pouvoir
être
afficher
écran
hiérarchie
constituant
devoir
nécessairement
avoir
racine
trois
conteneur
suivant
frame
classe
jframe
conteneur
plus
général
fournir
fenêtre
principal
lequel
autre
composant
swing
pouvoir
dessiner
dialog
classer
jdialog
plus
limiter
frame
fournir
fenêtre
dialoguer
classe
ptionpane
permettre
créer
fenêtre
dialogue
simple
standard
classe
jdialog
permettre
créer
fenêtre
dialoguer
personnaliser
applet
classe
japplet
spécialiser
interface
web
fournir
fenêtrer
afficher
navigateur
web
conteneur
intermédiaire
notamment
panel
classe
jpanel
simplifier
positionnement
objet
graphique
atomique
tout
conteneur
haut
niveau
contenir
conteneur
intermédiaire
spécial
appeler
contentpane
conteneur
intermédiaire
principal
contenir
typiquement
plusieurs
panel
composant
atomique
exemple
button
classer
jbutton
label
classe
jlabel
text
field
classe
jtextfield
sauf
conteneur
plus
haut
niveau
tout
composant
conteneur
intermédiaire
composer
atomique
commencer
hériter
classe
jcomponent
ajouter
objet
conteneur
utiliser
méthode
add
méthode
prendre
général
deuxième
argument
spécifier
mettre
page
exemple
import
javax
swing
frame
new
jframe
paner
new
jpanel
button
new
jbutton
label
new
jlabel
paner
add
button
paner
add
abel
frame
getcontentpane
add
paner
borderlayout
center
frame
pack
sizes
at
or
above
preferred
sizes
frame
setvisible
true
objet
frame
ainsi
créer
hiérarchie
jframe
contentpane
jpanel
jbutton
jlabel
exemple
import
javax
swing
japplet
public
class
appletexample
extends
japplet
public
void
init
jpanel
paner
new
jpanel
paner
add
new
jlabel
hello
world
this
setcontentpane
paner
gestion
mettre
pager
mettre
page
layout
consister
fixer
taille
position
composant
tout
conteneur
posséder
gestionnaire
mise
pager
défaut
convenir
pouvoir
remplacer
composant
pouvoir
solliciter
taille
alignement
donner
in
fine
gestionnaire
mettre
page
conteneur
conserver
décision
final
exister
gestionnaire
mise
pager
borderlayout
gestionnaire
mettre
page
défaut
tout
contentpane
définir
zone
placement
north
south
east
west
center
flowlayout
gestionnaire
mettre
page
défaut
tout
jpanel
positionner
simplement
composant
gauche
droit
passer
nouveau
ligne
nécessaire
boxlayout
gestionnaire
mettre
page
très
flexible
positionner
composant
seul
ligner
colonne
respecter
attente
composant
matière
tailler
maximal
alignement
gridlayout
gestionnaire
mettre
page
très
simple
créer
ensemble
composant
taille
afficher
nombre
ligner
colonne
spécifier
gridbaglayout
gestionnaire
mettre
page
plus
sophistiquer
plus
flexible
aligner
composant
placer
grille
cellule
permettre
certain
étendre
plusieurs
cellule
largeur
ranger
hauteur
colonne
respectivement
pouvoir
être
différent
cardlayout
gestionnaire
mettre
page
usage
spécial
permettre
implémenter
zone
contenir
différent
composant
différent
moment
utiliser
combinaison
autre
gestionnaire
mise
pager
exemple
changement
gestionnaire
mettre
page
défaut
jpanel
paner
new
jpanel
paner
setlayout
new
borderlayout
tailler
alignement
composer
pouvoir
être
spécifier
méthode
suivant
setminimumsize
setpreferredsize
setmaximumsize
setalignmentx
setalignmenty
gestion
événement
notion
événement
chaque
fois
utilisateur
agir
clavier
sourire
événement
survenir
objet
événement
générer
objet
événement
objet
contenir
information
source
nature
événement
survenir
swing
offrir
interface
sentir
java
appeler
écouteur
événement
event
listeners
permettre
capter
événement
façon
sélectif
afin
pouvoir
traiter
event
source
event
object
event
listener
event
listener
event
listener
exemple
événement
typer
listener
clic
bouton
graphique
enfoncement
toucher
return
actionlistener
lors
saisir
champ
texte
fermeture
fenêtrer
windowlistener
graphique
frame
clic
sourire
lors
passage
curseur
composer
mouselistener
graphique
afin
faciliter
travail
programmeur
swing
associer
généralement
chaque
interface
listener
classe
adaptateur
adapter
adaptateur
exister
travailler
exemple
interface
listener
classe
adapter
associer
actionlistener
none
windowlistener
windowadapter
mouselistener
mouseadapter
keylistener
keyadapter
réaliser
gestionnaire
événement
réaliser
gestionnaire
événement
event
handler
requérir
trois
élément
coder
déclarer
classe
gestionnaire
événement
classe
devoir
implémenter
interface
listener
étendre
classe
adapter
exemple
import
java
awt
event
public
class
myclass
implements
actionlistener
définir
classe
gestionnaire
événement
méthode
interface
listener
exemple
public
void
actionperformed
actionevent
e
définir
instance
classer
gestionnaire
événement
enregistrer
composant
concerner
exemple
somecomponent
addactionlistener
instanceofmyclass
typer
actionlistener
permettre
définir
gestionnaire
événement
plus
simple
plus
commun
lorsqu
événement
typer
générer
clic
bouton
graphique
enfoncement
toucher
return
lors
saisir
champ
texte
message
actionperformed
envoyer
tout
écouteur
événement
enregistrer
composer
concerner
classe
gestionnaire
événement
généralement
implanter
sous
forme
classe
interner
inner
class
sein
classer
graphique
exemple
ecriture
mouselistener
public
class
myclass
extends
jpanel
someobject
addmouselistener
new
myadapter
class
myadapter
extends
mouseadapter
public
void
mouseclicked
mouseevent
e
typiquement
classe
gestionnaire
événement
implanter
sous
forme
classe
interne
anonyme
exemple
solution
équivalent
celui
exemple
précédent
ecriture
mouselistener
public
class
myclass
extends
jpanel
someobject
addmouselistener
new
mouseadapter
public
void
mouseclicked
mouseevent
e
affichage
fermeture
fenêtrer
graphique
affichage
masquage
fenêtrer
graphique
type
jframe
commander
méthode
setvisible
quand
utilisateur
ferme
fenêtrer
graphique
type
jframe
fenêtrer
faire
défaut
masquer
quoiqu
invisible
objet
graphique
exister
toujours
programme
pouvoir
nouveau
rendre
visible
désirer
comportement
différent
nécessaire
enregistrer
objet
graphique
gestionnaire
événement
typer
windowlistener
capter
message
windowclosing
spécifier
comportement
défaut
utiliser
méthode
setdefaultcloseoperation
comportement
indiqué
argument
constant
défini
interface
windowconstant
exemple
argument
disposer
clore
architecture
composant
swing
objectif
application
facilement
adaptable
architecture
composant
swing
baser
adaptation
très
renommé
architecture
mvc
modèle
vue
contrôleur
voir
section
communauté
swing
appeler
architecturer
modèle
séparable
parti
modèle
composer
swing
partie
représenter
donner
application
traiter
comme
élément
séparer
tout
comme
préconiser
conception
mvc
swing
fusionner
partir
vue
prendre
charge
représentation
visuel
donner
contrôleur
traite
entrer
utilisateur
chaque
composant
seul
objet
interface
utilisateur
user
interface
object
général
considérer
comme
bon
pratiquer
centrer
architecture
application
autour
donner
plutôt
autour
interface
utilisateur
supporter
paradigme
swing
définir
interface
modeler
séparer
chaque
composant
séparation
fournir
programme
application
possibilité
connecter
facilement
composant
swing
implémentation
modeler
propre
table
suivant
montrer
interface
modèle
offrir
composant
swing
component
model
interface
model
typer
jbutton
buttonmodel
gui
jtogglebutton
buttonmodel
gui
dater
jcheckbox
buttonmodel
gui
dater
jradiobutton
buttonmodel
gui
dater
jmenu
buttonmodel
gui
jmenuitem
buttonmodel
gui
jcheckboxmenuitem
buttonmodel
gui
dater
jradiobuttonmenuitem
buttonmodel
gui
dater
jcombobox
comboboxmodel
dater
jprogressbar
boundedrangemodel
gui
dater
jscrollbar
boundedrangemodel
gui
dater
slider
boundedrangemodel
gui
dater
component
model
interface
model
type
jtabbedpane
singleselectionmodel
gui
jlist
listmodel
dater
jlist
listselectionmodel
gui
jtable
tablemodel
dater
jtable
tablecolumnmodel
gui
jtree
treemodel
dater
jtree
treeselectionmodel
gui
jeditorpane
document
dater
jtextpane
document
dater
jtextarea
document
dater
jtextfield
document
dater
jpasswordfield
document
dater
interface
modeler
fournir
swing
relever
deux
grand
catégorie
type
etat
interface
graphique
gui
définir
statut
visuel
commande
interface
graphique
type
donner
application
dater
représenter
donner
quantifiable
sens
application
certain
modèle
relever
type
partager
gui
dater
recommander
utiliser
catégorie
donner
application
dater
modèle
swing
car
renforcer
grandement
adaptabilité
modularité
application
long
terme
paradigme
vision
monde
reposer
modèle
applets
java
permettre
créer
deux
type
programmer
application
exécuter
directement
sous
contrôle
machiner
virtuel
java
appliquettes
applettes
anglais
applet
destiner
être
exécuter
navigateur
web
réaliser
applette
minimum
consister
créer
sous
classe
classer
japplet
voir
section
créer
méthode
init
lancer
navigateur
référencer
classe
baliser
applet
coder
fichier
html
syntaxe
import
javax
swing
japplet
public
class
appletclassname
extends
japplet
fields
public
void
init
syntaxe
applet
code
appletclassname
class
width
anint
height
anint
applet
annexe
threads
référence
programmation
concurrent
processus
threads
java
sun
com
doc
books
tutorial
essential
concurrency
procthread
html
threads
permettre
programmer
tâche
intérieur
programme
exécuter
concurremment
processus
léger
tâcher
exécuter
thread
devoir
être
implémenter
méthode
run
exister
deux
façon
fournir
méthode
run
définir
sous
classe
classer
thread
redéfinir
méthode
run
définir
classe
implémente
interface
runnable
définir
méthode
run
créer
thread
extension
classer
thread
exemple
example
of
defining
thread
extending
thread
public
class
simplethread
extends
thread
public
simplethread
string
threadname
super
threadname
the
task
of
this
thread
is
to
print
times
its
name
at
random
rater
public
void
run
for
int
i
i
i
system
out
println
i
getname
try
sleep
long
math
random
catch
interruptedexception
e
system
out
println
done
getname
end
class
simplethread
example
of
running
two
threads
concurrently
jamaica
and
fiji
will
be
printed
randomly
times
public
static
void
main
string
args
new
simplethread
jamaica
start
new
simplethread
fiji
start
créer
thread
implémentation
interface
runnable
façon
faire
imposer
lorsque
classer
créer
devoir
sous
classer
classe
quelconque
cas
typique
applet
parce
java
supporter
héritage
multiple
exemple
example
of
defining
thread
implementing
runnable
public
class
simplethread
implements
runnable
string
threadname
public
simplethread
string
threadname
this
threadname
threadname
the
task
of
this
thread
is
to
print
times
its
name
at
random
rater
public
void
run
for
int
i
i
i
system
out
println
i
threadname
try
thread
sleep
long
math
random
catch
interruptedexception
e
system
out
println
done
threadname
end
class
simplethread
example
of
running
two
threads
concurrently
jamaica
and
fiji
will
be
printed
randomly
times
public
static
void
main
string
args
new
thread
new
simplethread
jamaica
start
new
thread
new
simplethread
fiji
start
synchronisation
communication
entre
threads
section
critique
synchronisation
programmer
segment
code
accéder
donner
depuis
threads
concurrent
appeler
section
critique
lorsque
deux
threads
concurrent
invoquer
méthode
opérer
donner
partager
méthode
critique
nécessaire
java
pouvoir
synchroniser
méthode
afin
garantir
accès
sûr
information
fin
chacun
méthode
devoir
être
déclarer
modificateur
synchronized
exécution
accès
donner
partager
ainsi
automatiquement
verrouiller
tant
utiliser
méthode
critique
exemple
get
pouvoir
supposer
deux
méthode
critique
objet
partager
public
synchronized
int
get
public
synchronized
void
pouvoir
int
valoir
communication
entre
threads
deux
threads
processus
indépendant
dérouler
façon
asynchrone
pouvoir
communiquer
donnée
nécessaire
savoir
synchroniser
autour
sas
communication
thread
émetteur
donner
appeler
producteur
thread
destinataire
donner
appeler
consommateur
thread
producteur
donner
devoir
être
capable
attendre
espace
stockage
sas
communication
libre
puis
déposer
nouveau
donner
puis
informer
threads
consommateur
mettre
disposition
donner
façon
symétrique
thread
consommateur
donner
devoir
être
capable
attendre
donner
mettre
disposition
espace
stockage
sas
communication
puis
lire
donner
puis
informer
threads
producteur
disponibilité
sas
communication
accuser
réception
sas
communication
confier
charge
synchronisation
mettre
attente
réaliser
méthode
wait
notification
autre
threads
méthode
notify
notifyall
méthode
tout
deux
défini
classe
object
exemple
classe
définir
sas
communication
seul
élément
typer
entier
attribut
content
noter
particulier
sécurisation
apporter
usage
while
non
if
afin
prévenir
faux
réveil
éventuel
public
class
cubbyhole
private
int
content
private
boolean
available
false
public
synchronized
int
get
called
by
consumer
while
available
false
try
wait
wait
for
producer
to
pouvoir
valoir
catch
interruptedexception
e
available
false
notifyall
return
content
public
synchronized
void
pouvoir
int
x
called
by
producer
while
available
true
try
wait
wait
for
consumer
to
get
valoir
catch
interruptedexception
e
content
x
available
true
notifyall
annexe
conception
developpement
java
référence
architecturer
modèle
voir
contrôleur
java
sun
com
blueprints
guidelines
designing
enterpriser
application
e
app
arch
app
arch
html
développement
test
unitaire
cadre
application
junit
junit
sourceforge
net
doc
cookbook
cookbook
htm
javabeans
java
sun
com
products
javabeans
java
sun
com
doc
books
tutorial
javabeans
index
html
design
pattern
section
aller
delà
langage
java
aborder
quelque
aspect
conception
développement
programmer
java
conseil
général
bon
conception
classer
rechercher
couplage
faible
couplage
décrire
interconnectivité
entre
classe
couplage
faible
quand
chaque
classe
largement
indépendant
autre
communiquer
elle
via
interface
petit
bien
défini
interface
classer
partie
visible
publique
classe
définir
typiquement
liste
membre
attribut
constructeur
méthode
non
priver
associer
leur
commentaire
documentation
rechercher
cohesion
fort
cohésion
décrire
adéquation
entre
unité
coder
entité
tâcher
logique
cohésion
fort
quand
chaque
unité
coder
méthode
classe
moduler
responsable
entité
tâcher
très
bien
définir
utiliser
maximum
encapsulation
encapsulation
technique
baser
réduire
couplage
contribuer
séparer
quoi
comment
voir
implémentation
définition
utilisation
principe
baser
rendre
attribut
priver
utiliser
méthode
accès
decoupler
entrees
traitement
sortir
voir
particulier
section
adopter
conception
dirigee
responsabilité
attribution
bon
responsabilité
bon
classe
problème
plus
délicat
conception
orienter
objet
programmation
diriger
responsabilité
processus
conception
classe
attribution
responsabilité
bien
définir
chaque
classe
approche
pouvoir
être
utiliser
déterminer
quel
classer
devoir
implémenter
tel
fonctionnalité
conception
diriger
responsabilité
contribuer
réduire
couplage
eviter
duplication
coder
eviter
segment
code
retrouver
plus
fois
application
utiliser
heritage
bon
escient
héritage
relation
relation
hiérarchie
héritage
objet
devoir
avoir
relation
classer
base
afin
héritage
tout
attribut
propriété
méthode
classer
base
garder
sens
sous
classe
spécialiser
complet
objet
relever
strictement
relation
devoir
traduire
classe
interface
sans
relation
héritage
entre
elle
limiter
taille
complexite
mettre
trop
chose
méthode
méthode
trop
longue
fait
plus
tâcher
logique
tout
mettre
seul
classe
classer
trop
complexe
représenter
plus
entité
logique
chercher
faciliter
changement
localiser
réaliser
changement
classe
devoir
avoir
minimum
impact
autre
classe
localisation
changement
but
rechercher
bon
conception
classer
produire
couplage
faible
cohésion
fort
architecturer
application
interactif
modèle
mvc
architecturer
modèle
vue
contrôleur
model
view
controller
mvc
modèle
architecturer
logicielle
recommander
largement
utiliser
conception
application
interactif
modèle
viser
minimiser
degré
couplage
entre
objet
application
découpler
structurellement
entrer
traitement
sortir
point
essentiel
consister
séparer
objet
relever
interface
utilisateur
objet
métier
afin
pouvoir
faire
évoluer
indépendamment
réutiliser
mvc
organiser
application
interactif
trois
grand
composant
modèle
vue
contrôleur
découpler
leur
responsabilité
respectif
modele
encapsuler
fonctionnalité
donner
cœur
application
indépendant
représentation
sortir
spécifique
comportement
entrer
charger
représentation
interner
donner
application
logique
gestion
donner
notifier
composant
vue
changement
donner
permettre
interroger
état
fournir
contrôleur
possibilité
accéder
certain
fonctionnalité
applicatives
encapsuler
modèle
voir
afficher
information
utilisateur
récupérer
modèle
donner
présenter
utilisateur
spécifier
présentation
externe
mettre
jour
information
afficher
relayer
aussi
contrôleur
entrée
utilisateur
autoriser
sélectionner
voir
séparation
modèle
partir
vue
contrôleur
autre
part
permettre
voir
multiple
modèle
quand
plusieurs
vue
modeler
chaque
vue
alors
contrôleur
associé
controleur
gérer
entrer
utilisateur
recevoir
entrer
généralement
sous
forme
événement
encoder
mouvement
sourire
activation
bouton
entrer
clavier
bien
agir
application
web
requêter
http
get
post
événement
traduire
requête
service
modeler
voir
application
typiquement
contrôleur
chaque
ensemble
fonctionnalité
apparenter
application
pouvoir
avoir
contrôleur
séparer
type
client
interaction
utilisateur
varier
selon
type
client
utilisateur
interagir
système
uniquement
travers
contrôleur
ensemble
vue
contrôleur
composer
interface
utilisateur
modèle
interrogation
état
notification
changement
changement
état
voir
requêter
utilisateur
sélection
voir
contrôleur
invocation
méthode
evènements
pratique
schéma
principe
laisser
place
grand
variété
implémentations
possible
difficulté
implémentation
idéal
java
résider
notamment
faire
composant
graphique
swing
fusionner
partir
vue
contrôleur
cf
section
petit
programmer
tout
particulièrement
voir
contrôleur
souvent
combiner
tout
cas
modèle
devoir
être
séparer
exemple
implémentation
architecturer
mvc
import
java
util
observable
import
java
util
observer
import
javax
swing
japplet
import
javax
swing
jpanel
import
java
awt
event
actionlistener
import
java
awt
event
actionevent
public
class
controller
extends
japplet
implements
actionlistener
private
view
view
private
model
model
public
void
init
model
new
mode
view
new
view
model
this
model
addobserver
view
this
setcontentpane
view
public
void
actionperformed
actionevent
e
process
the
event
public
class
view
extends
jpanel
implements
observer
private
model
model
declare
here
the
jpanel
components
public
view
model
actionlistener
listener
model
makecontentpane
listener
public
void
update
observable
o
object
arg
automatically
called
when
observer
is
notified
update
the
view
public
void
makecontentpane
actionlistener
listener
create
and
initialize
the
jpanel
components
and
when
need
be
attach
them
the
event
listener
define
the
layout
public
class
model
extends
observable
wherever
the
valoir
of
an
attribute
interesting
the
view
is
changed
insert
these
two
statements
setchanged
notifyobservers
or
notifyobservers
arg
chercher
découpler
traitement
entrer
sortir
classique
programmation
esprit
pouvoir
noter
particulier
modèle
mvc
certain
similitude
classique
architecturer
trois
tiers
three
tiers
système
distribuer
architecturer
trois
tiers
architecturer
logicielle
client
serveur
lequel
interface
utilisateur
logique
traitement
donner
trois
module
indépendant
interface
utilisateur
stocker
client
gros
logique
application
stocker
serveur
application
donner
stocker
serveur
baser
donner
exemple
application
web
professionnel
reposer
solution
java
ee
voir
chapitre
modeler
assurer
ejb
javabeans
contrôleur
assurer
servlets
voir
jsp
glossaire
chapitrer
test
unitaire
définition
test
activité
consister
déterminer
segment
coder
méthode
classe
programmer
produire
bien
résultat
attendre
définir
classiquement
trois
niveau
test
mettre
œuvrer
successivement
test
unitaire
unir
testing
agir
tester
chaque
composante
individuel
méthode
classer
application
test
intégration
integration
testing
agir
tester
groupe
classe
interrelation
puis
tout
application
ensemble
test
appliquer
suivre
généralement
plan
test
i
e
approche
systématique
méthodique
test
système
system
testing
agir
tester
application
intégrer
environnement
utilisation
complet
test
entrer
catégorie
test
boîte
noir
tant
tel
devoir
nécessiter
connaissance
conception
interne
coder
logique
considération
suivant
limiter
essentiellement
test
unitaire
cas
test
ensemble
condition
variable
partir
duquel
testeur
déterminer
exigence
requérir
complètement
partiellement
satisfaire
cas
test
caractériser
entrée
connaître
pré
condition
sorti
attendre
post
condition
nombreux
cas
test
pouvoir
être
nécessaire
vérifier
exigence
donner
distinguer
généralement
deux
type
cas
test
cas
test
positif
consister
tester
cas
censé
faire
réussir
fonctionnalité
test
devoir
convaincre
élément
coder
tester
fonctionner
bien
comme
espérer
cas
test
négatif
consister
tester
cas
censé
mettre
échec
fonctionnalité
tout
situation
valeur
hors
limite
erreur
exemple
entrer
valeur
hors
plage
lire
ensemble
vide
tel
cas
devoir
attendre
programme
traiter
erreur
façon
contrôler
approprier
simple
correction
erreur
détecter
test
devoir
systématiquement
améliorer
qualité
programmer
malheureusement
expérience
montrer
tout
changement
programme
pouvoir
introduire
façon
inattendu
autre
erreur
particulier
erreur
régression
regression
bugs
erreur
régression
survenir
quand
fonctionnalité
fonctionner
précédemment
fonctionner
plus
suite
modification
programmer
méthode
courant
test
non
régression
non
regression
testing
consister
réexécuter
test
réaliser
antérieurement
voir
défaut
apparaître
voire
réapparaître
test
devant
être
appliquer
non
seul
fois
chaque
modification
logiciel
souhaitable
disposer
batterie
test
programmer
afin
permettre
automatisation
test
agir
programmer
cas
test
chaque
méthode
non
trivial
veiller
chaque
cas
test
bien
séparer
autre
junit
junit
développer
communauté
open
source
offrir
cadre
application
framework
programmation
test
régression
utiliser
implémenter
test
unitaire
java
classer
testcase
permettre
définir
cas
test
classe
assert
fournir
ensemble
méthode
faciliter
gestion
erreur
détecter
classe
testsuite
permettre
exécuter
suite
test
classer
testrunner
outil
exploitation
permettre
définir
suite
test
exécuter
afficher
résultat
exemple
cas
test
test
caser
for
the
class
myclass
import
junit
framework
public
class
testmyclass
extends
testcase
the
test
need
to
run
against
the
background
of
known
set
of
objects
this
set
of
objects
is
called
test
fixture
define
here
an
instance
variable
for
each
part
of
the
fixture
private
myclass
myobject
public
testmyclass
string
name
super
name
set
up
the
test
fixture
setup
is
called
before
every
test
caser
method
initialize
the
instance
variable
protected
void
setup
myobject
new
myclass
tears
down
the
test
fixture
teardown
is
called
after
every
test
caser
method
releases
any
permanent
resource
allocated
in
setup
example
clore
file
protected
void
teardown
once
the
fixture
is
in
place
many
test
case
necessary
can
be
written
test
the
method
methodx
public
void
testmethodx
argumenttype
argument
responsetype
expectedresponse
string
errormessage
asserttrue
errormessage
expectedresponse
equals
methodx
argument
end
class
testmyclass
junit
déterminer
succès
échec
test
via
instruction
assertion
assertion
simplement
procédure
comparaison
entre
valeur
espéré
valeur
effectif
générer
échec
cas
différence
procédure
assertion
disponible
définir
classe
junit
framework
assert
exemple
instruction
assertion
asserttrue
errormessage
booleancondition
assertfalse
errormessage
booleancondition
assertequals
errormessage
expectedvalue
actualvaloir
assertequals
errormessage
doubleexpected
doubleactual
doubledelta
exécuter
test
créer
instance
classer
paramètre
nom
méthode
test
exemple
new
testmyclass
testmethodx
junit
intégrer
certain
outil
développement
tel
outil
offrir
alors
fonctionnalité
permettre
créer
facilement
test
java
beans
java
bean
grain
java
définir
sun
comme
composer
réutilisable
java
destiner
être
manipuler
outil
développement
graphique
visuel
java
beans
composant
java
i
e
classe
respecter
certain
critère
afin
pouvoir
être
facilement
développer
assembler
réutiliser
créer
application
sophistiquer
exemple
technologie
java
beans
architecture
composant
plat
former
java
obligation
devoir
respecter
java
bean
nombreux
enjeu
importance
disposer
composant
write
one
run
anywhere
wora
réutilisable
java
beans
classe
publique
concret
caractéristique
commun
supporter
propriété
propriété
attribut
discret
nommé
java
bean
pouvoir
affecter
apparence
comportement
propriété
java
beans
équivaloir
champ
objet
exemple
bouton
graphique
pouvoir
avoir
propriété
nommer
label
représenter
texte
afficher
bouton
méthode
accès
propriété
devoir
respecter
convention
nommage
particulier
exemple
propriété
simple
exister
autre
lier
contraindre
indexer
propertytype
getpropertyname
simple
getter
void
setpropertyname
propertytype
simple
setter
propriété
booléen
utiliser
typiquement
is
lieu
get
communiquer
entre
événement
pratique
utiliser
technique
swing
listeners
voir
section
supporter
introspection
exécution
environnement
développement
devoir
être
capable
déterminer
analyser
propriété
événement
méthode
supporter
java
bean
noter
propriété
introspection
déjà
présent
objet
java
puisqu
objet
pouvoir
être
analyser
grâce
classe
class
method
field
supporter
personnalisation
customization
outil
développement
devoir
permettre
modifier
apparence
comportement
java
bean
phase
conception
supporter
persistance
persistance
objet
capacité
sauvegarder
support
stockage
restaurer
identique
afin
programme
pouvoir
terminer
sans
objet
perdre
exemple
persistance
objet
pouvoir
prétendre
être
document
excel
intérieur
document
word
mécanisme
rendre
possible
persistance
appeler
sérialisation
serialization
fin
java
bean
devoir
implémenter
interface
serializable
externalizable
exemple
java
bean
package
sunw
demo
simple
import
java
awt
import
java
io
serializable
simplebean
wi
be
displayed
with
green
centered
rectangle
but
its
color
may
be
changed
ater
public
class
simplebean
extends
canvas
implements
serializable
private
color
color
color
green
property
getter
method
public
color
getcolor
return
color
property
setter
method
set
new
simplebean
color
and
repaints
public
void
setcolor
color
newcolor
color
newcolor
repaint
public
void
paint
graphics
g
g
setcolor
color
g
fillrect
constructor
set
inherited
properties
public
simplebean
setsize
setbackground
color
red
end
class
simplebean
être
reconnaître
outil
développement
java
bean
devoir
être
conditionnné
fichier
archiver
format
jar
bien
obligatoire
souhaitable
java
beans
paquetage
éviter
notamment
conflit
cas
homonymie
beans
design
pattern
section
tout
premier
introduction
modèle
conception
design
pattern
développement
orienter
objet
application
professionnel
conduire
généralement
rencontrer
problème
conception
type
familier
communauté
développeur
confirmer
lequel
solution
éprouver
exister
agir
ici
solution
théorique
algorithme
solution
orienter
objet
empirique
solidité
efficacité
faire
preuve
pratique
solution
appeler
modèle
conception
design
pattern
développeur
expérimenter
devoir
connaître
disposer
panier
modèle
conception
appliquer
aussi
systématiquement
possible
modèle
conception
stratégie
résolution
grand
type
problème
conception
orienter
objet
décrire
forme
générique
organisation
classe
indépendant
langage
programmation
objet
mettre
œuvrer
titre
illustratif
architecturer
mvc
décrire
section
exemple
modeler
conception
architecture
logicielle
architectural
design
pattern
plus
connu
modèle
conception
baser
modèle
fondamental
décrire
quatre
auteur
appeler
collectivement
the
gang
of
four
bander
quatre
tout
simplement
gof
distinguer
habituellement
grand
famille
modèle
conception
expression
design
pattern
souvent
traduire
aussi
patron
conception
modèle
construction
boire
organiser
création
objet
façon
gagner
abstraction
exemple
présenter
ci
après
modèle
singleton
modèle
structuration
faciliter
organisation
hiérarchie
classer
leur
relation
exemple
présenter
ci
après
modèle
decorator
modèle
comportement
proposer
solution
organiser
interaction
répartir
traitement
entre
objet
tenter
répartir
responsabilité
entre
chaque
classe
exemple
modèle
chain
of
responsibility
permettre
créer
chaîne
objet
tel
pouvoir
répondre
requête
pouvoir
transmettre
successeur
jusqu
entre
répondre
exemple
modeler
singleton
modeler
conception
singleton
permettre
assurer
classe
posséder
instance
plus
offrir
méthode
unique
retourner
instance
exemple
implémentation
cas
tout
information
nécessaire
création
singleton
disponible
moment
chargement
classer
mémoire
public
final
class
mysingleton
creating
at
the
class
loading
private
static
mysingleton
singleinstance
new
mysingleton
private
constructor
can
be
used
outside
this
class
private
mysingleton
get
singleton
of
this
class
public
static
mysingleton
getinstance
return
singleinstance
creation
of
singleton
mysingleton
singleton
mysingleton
getinstance
exemple
modeler
decorator
modeler
conception
decorator
permettre
ajouter
dynamiquement
fonctionnalité
objet
ceci
réaliser
créer
nouveau
classe
decorator
envelopper
classe
original
modèle
conception
decorator
alternatif
approcher
création
sous
classe
classe
original
imposer
notamment
approcher
extension
classer
original
cas
suivant
classe
original
pouvoir
être
étendre
héritage
nombre
sous
classe
permettre
définir
tout
combinaison
possible
fonctionnalité
trop
important
ajout
fonctionnalité
pouvoir
être
statique
i
e
réaliser
compilation
devoir
être
dynamique
e
réaliser
exécution
exemple
wikipedia
considérer
fenêtre
affichage
instance
classer
window
supposer
classe
offrir
possibilité
ajouter
barre
défilement
créer
décorateur
pouvoir
ajouter
dynamiquement
fonctionnalité
objet
window
existant
an
interface
common
to
the
decorator
and
the
decorated
public
interface
window
public
void
draw
the
original
class
the
instance
of
which
can
be
decorated
public
class
simplewindow
implements
window
public
void
draw
the
abstract
decorator
public
abstract
class
windowdecorator
implements
window
protected
window
decoratedwindow
public
windowdecorator
window
decoratedwindow
this
decoratedwindow
decoratedwindow
first
concrete
decorator
public
class
verticalscrollbardecorator
extends
windowdecorator
public
verticalscrollbardecorator
window
decoratedwindow
super
decoratedwindow
public
void
draw
drawverticalscrollbar
decoratedwindow
draw
public
void
drawverticalscrollbar
second
concrete
decorator
public
class
horizontalscrollbardecorator
extends
windowdecorator
public
horizontalscrollbardecorator
window
decoratedwindow
super
decoratedwindow
public
void
draw
drawhorizontalscrollbar
decoratedwindow
draw
public
void
drawhorizontalscrollbar
example
creation
of
fully
decorated
window
instance
window
decoratedwindow
new
horizontalscrollbardecorator
new
verticalscrollbardecorator
new
simplewindow
annexe
machiner
virtuel
java
jvm
objectif
premier
chapitrer
comprendre
comment
opérer
chargement
dynamique
classe
mémoire
lors
exécution
programmer
java
comprendre
traitement
champ
bloc
static
chargement
classe
machiner
virtuel
java
jvm
interpréteur
coder
java
compiler
bytecode
permettre
exécuter
programme
java
machiner
cible
espace
mémoire
jvm
comporter
plusieurs
zone
notamment
zoner
méthode
contenir
code
méthode
constructeur
ainsi
information
structurer
chaque
classe
notamment
tabler
symbole
piler
espace
propre
chaque
thread
mémoriser
dynamiquement
contexte
exécution
variable
local
notamment
méthode
cours
exécution
tas
contenir
objet
créer
new
instance
classer
tableau
cf
chapitre
demander
exécution
programmer
java
lancer
machine
virtuel
java
jvm
réaliser
alors
grand
étape
suivant
chargement
classe
principal
spécifier
main
class
classe
dépendre
immédiatement
premier
rang
duquel
tout
classe
o
création
champ
static
création
tabler
méthode
o
traitement
champ
initialisation
bloc
exécution
static
exécution
méthode
main
classe
principal
durant
exécution
coder
java
classe
bytecode
charger
jvm
fur
mesurer
besoin
hiérarchie
héritage
chargement
classer
opérer
ordre
hiérarchique
descendre
i
e
super
classe
racine
vers
classe
courant
exemple
public
class
classer
static
system
out
println
start
loading
classer
public
static
final
int
private
static
int
static
static
system
out
println
system
out
println
public
classer
system
out
println
start
classer
system
out
println
end
classer
public
int
getn
return
static
system
out
println
end
loading
classer
end
classer
public
class
classb
extends
classer
static
system
out
println
start
loading
classb
private
int
x
public
classb
system
out
println
start
classb
x
x
getn
system
out
println
x
system
out
println
end
classb
static
system
out
println
end
loading
classb
end
classb
public
class
class
static
system
out
println
start
loading
class
private
static
int
inity
private
static
int
inity
system
out
println
init
return
public
static
void
main
string
args
system
out
println
start
main
class
classb
b
new
classb
system
out
println
end
main
class
static
system
out
println
end
loading
class
end
class
après
compilation
trois
classe
exécution
commander
java
class
afficher
commentaire
ajouter
marger
start
loading
class
init
end
loading
class
start
main
class
start
loading
classer
classe
classb
abord
end
loading
classer
start
loading
classb
puis
enfin
classb
end
loading
classb
start
classer
car
super
abord
end
classer
start
classb
classer
classb
end
classb
end
main
class
annexe
communication
entre
java
jni
référence
the
java
natif
interface
programmer
guide
and
specification
java
sun
com
doc
books
jni
tutoriel
java
sun
com
doc
books
jni
html
jnitoc
html
java
natif
interface
specification
v
java
sun
com
doc
guider
jni
spec
jnitoc
html
javah
header
and
stub
filer
generator
java
sun
com
javase
doc
technoter
tools
windows
javah
html
poser
problème
appeler
sous
programme
depuis
méthode
java
environnement
unix
solution
mettre
œuvre
interface
programmation
jni
java
natif
interface
offrir
plat
former
java
jni
ensemble
fonctionnalité
permettre
programme
java
fonctionner
machine
virtuel
java
jvm
appeler
être
appeler
programme
écrire
autre
langage
typiquement
assembleur
permettre
interfaçage
application
bibliothèque
natif
mettre
œuvre
jni
accroître
interopérabilité
application
java
évidemment
détriment
portabilité
bon
architecturer
application
devoir
minimiser
nombre
classe
faire
référence
méthode
natif
suite
supposer
fichier
java
appeler
sous
programme
nommer
myclass
java
fichier
implémentir
sous
programme
nommer
myroutines
développement
application
complet
comporter
étape
ecrire
programmer
java
compiler
javac
myclass
java
produire
fichier
tête
myclass
heure
programme
javah
myclass
ecrire
sous
programme
compiler
gcc
o
myroutine
myroutines
pedantic
w
wal
idir
dir
répertoire
installation
jdk
fichier
include
jni
exemple
fichier
répartir
deux
répertoire
gcc
o
myroutine
myroutines
pedantic
w
wall
i
usr
lib
jdk
v
include
i
usr
lib
jdk
v
include
linux
application
bibliothèque
sous
programme
dit
code
natif
dépendant
environnement
hôte
système
exploitation
jeu
instruction
processeur
particulier
exemple
programmer
compiler
système
exploitation
donner
coder
natif
car
fonctionner
autre
système
exploitation
produire
bibliothèque
partagé
lib
so
chargeable
programme
java
gcc
wall
shared
o
libmyroutines
so
myroutines
o
avant
tout
premier
exécution
spécifier
machine
virtuel
java
chemin
accès
bibliothèque
setenv
ld
library
path
path
path
désigner
chemin
accès
supposer
celui
ci
répertoire
courant
commander
setenv
ld
library
path
exécuter
programme
java
java
myclass
façon
écrire
programme
java
implémenter
sous
programme
associer
illustrer
ci
après
appel
procédure
considèrera
bout
bouillir
exemple
déclaration
appel
java
exemple
classer
java
public
class
myclass
declaration
of
an
extern
class
procedure
natif
public
static
void
procedure
declaration
of
an
extern
instance
procedure
natif
public
void
procedure
test
procedure
public
static
void
main
string
argv
myclass
procedure
myclass
o
new
myclasse
o
procedure
load
the
library
libmyroutines
static
system
loadlibrary
myroutines
commentaire
modificateur
natif
indique
agir
procédure
externe
non
écrire
java
nom
procédure
arbitraire
méthode
loadlibrary
aller
charger
bibliothèque
libmyroutines
so
mot
clé
static
encapsuler
bloc
instruction
lequel
appel
réaliser
permettre
exécuter
bloc
dès
chargement
classer
myclass
sans
avoir
besoin
passer
appel
méthode
intermédiaire
prototyper
fichier
myclass
heure
produit
javah
cf
étape
précédent
spécifier
prototype
devoir
respecter
sous
programme
écrire
contenir
expurger
fichier
myclass
heure
produit
javah
do
not
edit
this
file
it
is
machine
generated
header
for
class
myclass
jniexport
void
jnicall
java
myclass
procedure
jnienv
jclass
jniexport
void
jnicall
java
myclass
procedure
jnienv
jobject
commentaire
jniexport
jnicall
deux
macros
prédéfinies
jni
faire
communiquer
java
void
spécifier
agir
procédure
java
myclass
procedure
nom
imposé
devoir
porter
procédure
correspondre
méthode
nom
procedure
déclarer
programme
java
idem
procedure
deux
paramètre
systématiquement
introduire
tête
lister
paramètre
o
premier
type
jnienv
pointeur
vers
environnement
jnienv
pointeur
vers
structure
contenir
fonction
interface
machiner
virtuel
java
jvm
o
second
type
jclass
agir
méthode
classe
jobject
agir
méthode
instance
pointeur
vers
descripteur
classer
objet
sorte
this
appel
implémentation
exemple
fichier
myroutines
include
stdio
heure
include
myclass
heure
jniexport
void
jnicall
java
myclass
procedure
jinienv
penv
jclass
cla
printf
routine
procedure
jniexport
void
jnicall
java
myclass
procedure
jinienv
penv
jobject
obj
printf
routiner
procedure
echanger
donner
entre
java
échanger
donner
entre
application
java
sous
programme
paramètre
résultat
fonction
supposer
compatibilité
type
correspondant
or
correspondance
systématique
naturel
entre
type
langage
java
type
langage
caractère
exemple
coder
bit
java
bit
jni
définir
ensemble
type
nom
correspondre
type
java
jni
traiter
type
primitif
type
objet
différemment
correspondance
type
primitif
direct
voir
tableau
ci
après
car
reposer
représentation
machiner
donner
identique
cas
type
objet
transmission
chaîner
caractère
tableau
fortiori
instance
quelconque
classe
direct
nécessiter
conversion
typer
paramètre
java
typer
objet
ainsi
transmettre
sous
programme
sous
forme
pointeur
structurer
donner
interne
machine
virtuel
java
organisation
interne
structurer
masquer
programmeur
celui
ci
pouvoir
néanmoins
accéder
composant
sous
jacent
via
fonction
utilitaire
offrir
jni
environnement
jnienv
type
primitif
java
typer
primitif
côté
description
boolean
jboolean
unsigned
bit
byte
jbyte
signed
bit
char
jchar
unsigned
bit
short
jshort
signed
bit
int
jint
signed
bit
long
jlong
signed
bit
float
jfloat
bit
double
jdouble
bit
suite
considèrera
bout
bouillir
exemple
déclaration
appel
java
exemple
classer
java
public
class
myclass
declaration
of
an
extern
instance
function
natif
public
string
getmessage
int
id
string
prompt
test
procedure
public
static
void
main
string
argv
myclass
o
new
myclasse
system
out
println
o
getmessage
name
load
the
library
libmyroutines
static
system
loadlibrary
libmyroutines
prototyper
contenir
expurger
fichier
myclass
heure
produit
javah
do
not
edit
this
file
it
is
machine
generated
header
for
class
myclass
jniexport
jstring
jnicall
java
myclass
getmessage
inienv
jobject
jint
jstring
implémentation
exemple
fichier
myroutines
include
stdio
heure
include
myclass
heure
jniexport
jstring
jnicall
java
myclass
getmessage
jinienv
penv
jobject
obj
jint
jid
jstring
jprompt
const
char
str
char
buf
get
the
string
from
the
java
string
str
penv
getstringutfchar
penv
jprompt
null
printf
jid
str
don
forget
this
line
penv
releasestringutfchar
penv
jprompt
str
assumer
the
user
doesn
type
more
than
char
scanf
buf
return
penv
newstringutf
penv
buf
commentaire
représentation
physique
chaîne
typer
jstring
typer
char
identique
conversion
devoir
être
réaliser
rôle
fonction
getstringutfchar
newstringutf
noter
tout
cas
conversion
caractère
non
codables
ascii
bit
lettre
accentué
poser
problème
fonction
getstringutfchars
réaliser
allocation
mémoire
dynamique
désallocation
devoir
être
obligatoirement
réaliser
avant
fin
sous
programme
rôle
fonction
releasestringutfchar
annexe
plat
forme
java
référencer
java
platform
standard
edition
api
specification
java
sun
com
javase
doc
api
new
features
and
enhancements
java
sun
com
doc
relnotes
features
html
java
platform
standard
edition
java
sun
com
javase
java
platform
enterpriser
edition
java
sun
com
javaee
java
platform
micro
edition
java
sun
com
javame
jdk
tools
and
utilities
java
sun
com
javase
doc
technotes
tools
sun
microsystem
fournir
trois
plat
forme
java
permettre
développement
exécution
programmer
java
java
standard
base
java
ee
java
noter
nom
celui
employé
verser
sortir
depuis
antérieurement
plat
forme
nommer
respectivement
ee
java
platform
standard
edition
java
plat
former
framework
java
base
permettre
développer
exécuter
programme
java
dernier
version
nommer
version
porter
nom
souligner
version
apporter
mettre
jour
majeur
rapport
précédent
version
actuel
plus
récent
date
décembre
version
porter
nom
java
version
java
annoncer
comme
nouveau
mettre
jour
majeur
mi
toujours
attendre
plat
former
java
délivrer
deux
produit
logiciel
principal
java
runtime
environment
plus
communément
jre
fournir
librairie
machiner
java
virtuel
autre
composante
nécessaire
exécuter
programme
java
java
development
kit
plus
communément
jdk
inclure
jre
plus
outil
développement
tel
compilateur
débogueur
nécessaire
utile
développer
programme
java
noter
terme
jdk
bien
très
populaire
devenir
imprécis
car
autre
plat
forme
java
java
ee
exemple
comporter
elle
aussi
propre
kit
développement
java
platform
enterpriser
edition
java
ee
plat
former
framework
java
plus
particulièrement
destiner
application
entreprendre
offrir
cadre
standard
développer
application
distribuer
java
platform
micro
edition
java
plat
former
framework
java
spécialiser
application
mobile
plat
forme
java
compatibles
embarquer
nombreux
téléphone
mobile
pda
façon
plus
spécifique
pouvoir
aussi
citer
plateformes
java
card
fournir
environnement
développement
application
carter
puce
javafx
créer
rich
internet
application
annexe
glossaire
trouver
facilement
web
excellent
définition
anglais
terme
sigler
produire
référence
informatique
parmi
source
possible
citer
exemple
parmi
encyclopédie
www
wikipedia
org
version
anglais
plus
complet
parmi
moteur
spécialiser
rechercher
encyclopédie
dictionnaire
glossaire
www
answers
com
voici
glossaire
quelque
terme
sigle
général
courant
sigler
terme
définition
commentaire
api
application
programming
bibliothèque
fonctionnalité
commun
interface
courant
bas
niveau
constituer
interface
entre
couche
bas
couche
applicatives
plus
haut
niveau
exemple
java
sun
com
javase
doc
api
spécifier
api
standard
java
fournir
jdk
framework
cadrer
application
ensemble
cohérent
classe
généralement
abstrait
interface
permettre
développement
rapide
application
fournir
suffisamment
brique
logicielles
pouvoir
produire
application
aboutir
typiquement
spécialiser
type
application
gui
graphical
user
interface
interface
homme
machiner
graphique
opposition
interface
ligner
commande
ide
integrated
development
programme
regrouper
ensemble
utilitaire
environment
logiciel
développement
programmer
éditeur
texte
compilateur
débogueur
gestionnaire
version
aider
production
interface
généralement
dédier
seul
langage
programmation
jdk
java
development
kit
voir
chapitre
jfc
java
foundation
classe
cadrer
application
graphique
ensemble
classe
java
permettre
construire
interface
utilisateur
graphique
portable
contenir
notamment
composant
swing
jre
java
runtime
environment
voir
chapitre
ee
java
platform
enterpriser
voir
chapitre
edition
java
java
platform
enterpriser
java
platform
micro
voir
chapitre
edition
java
java
platform
micro
edition
java
platform
standard
voir
chapitre
edition
java
java
platform
standard
edition
plus
spécifiquement
cadre
application
professionnel
java
distribuer
sigler
terme
définition
commentaire
ejb
enterpriser
javabeans
technologie
java
offert
plateforme
java
ee
permettre
créer
composant
distribuer
héberger
serveur
application
architecturer
mvc
utiliser
réaliser
modèle
java
sun
com
products
ejb
jsp
java
server
page
technologie
java
offert
plateforme
java
ee
permettre
créer
page
web
dynamique
architecturer
mvc
utiliser
réaliser
voir
java
sun
com
products
jsp
servlet
technologie
java
offert
plateforme
java
ee
permettre
étendre
fonctionnalité
serveur
web
accès
baser
donner
transaction
e
commerce
architecturer
mvc
utiliser
réaliser
contrôleur
java
sun
com
products
servlet
