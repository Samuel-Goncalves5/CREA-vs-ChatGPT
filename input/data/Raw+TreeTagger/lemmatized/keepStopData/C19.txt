PHP
:
INTRO
–
HTML
–
WAMP
–
premier
programme
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
introduction-a-php
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
http
:
/
/
dns-remplacer
/
php
/
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
INTRO-HTML-WAMP-Premiers
programme
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
introduction
au
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
et
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
objectif
du
cours|cour
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
site
dynamique
et
site
statique
–
rôle
de
l
’
utilisateur
et
de
l
’
administrateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
historique
du
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
architecture
client
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
principe
du
PHP
:
écrire
du
code
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
rappel
HTML
-
CSS
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
HTML
de
base
:
h1-h6
,
p
,
br
,
img
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
squelette
html
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
CSS
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
charger
tout
le
exemple
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
un
page
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
un
page
de
base
avec
un
lien
vers
un
formulaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
un
page
de
base
avec
un
lien
vers
un
formulaire
dans
un
tableau
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
le
outil
de
développement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
outil
pour
le
fonctionnement
d
’
un
site
WEB
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
outil
de
développement
PHP-MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
de
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
premier
usage
de
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
démarrer
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
installer
l
’
icône
WAMP
directement
dans
le
barre
d
’
icône
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
passer
Wamp
en
français
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
consulter
le
serveur
dans
le
gestionnaire
du
tâche
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
tester
WAMP
:
afficher
le
page
WampServer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
aller
dans
le
dossier
du
projet
:
C
:
\wamp64\www
,
créer
un
dossier
«
home
»
...
...
...
...
...
...
...
...
...
...
.
:
afficher
le
contenu
de
«
home
»
dans
le
page
WampServer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
accéder
au
dossier
«
home
»
dans
le
page
WampServer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
premier
programme
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
premier
programme
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
fichier
dns-remplacé
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
deuxième
programme
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
consulter
le
contenu
du
dossier
d
’
un
site
en
ligne
!
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
WAMP
-
version
détailler
(
on
pouvoir
passer
!
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
reprise
détailler
du
paragraphe
précédent
:
premier
usage
-
résumer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
tester
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
travailler
avec
du
fichier
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
Paramétrage
divers
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
PHPMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
Paramétrage
du
installation
:
display_errors
et
display_startup_errors
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
MAMP
–
version
détailler
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
lancer
MAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
problème
d
’
installation
–
problème
de
port
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
accès
au
projet
web
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
PHPMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
fichier
dns-remplacé
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
trois
exemple
de
l
’
instruction
echo
(
ou
print
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
charger
et
installer
le
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
code
HTML
minimum
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
code
HTML
minimum
avec
un
echo
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
page
HTML
standard
avec
un
echo
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
echo
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
principe
général
du
code
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
du
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
affichage
du
erreur
-
rappel
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
principal
message
d
’
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
TP
:
gestion
du
erreur
-
variable
display_errors
et
display_startup_errors
à
on
...
...
...
...
...
...
...
...
...
...
...
.
inclusion
de
fichier
PHP
–
factorisation
du
code
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
rappel
sur
le
balise
structurant
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
problème
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
solution
PHP
:
l
’
inclusion
de
fichier
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
solution
HTML
:
l
’
inclusion
de
fichier
en
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
:
Includes
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
documentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
d
’
usage
:
dns-remplacer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Edition
:
février
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
INTRO-HTML-WAMP-PREMIERS
programme
.
introduction
au
PHP
exemple
et
exercice
le
exemple
du
cours|cour
être
dans
un
fichier
zip
fournir
avec
l
’
article
du
cours|cour
:
dns-remplacé
.
le
exemple
être
présenter
dans
un
chapitre
en
vert
.
charger
ce
fichier
et
mettez-le
dans
le
dossier
Partie_2
du
répertoire
web
«
www
»
du
serveur
WAMP
.
le
exercice
à
faire
être
présenter
dans
un
chapitre
en
jaune
.
objectif
du
cours|cour
du
page
web
:
HTML
et
aussi
...
•
formulaire
de
contact
•
espace
membre
avec
login
et
pseudo
,
forum
,
actualité
,
newsletter
,
etc
.
•
Back
office
•
faire
circuler
le
information
de
page
en
page
•
faire
attention
au
faille
de
sécurité
,
•
enregistrer
le
infos
dans
un
BD
,
•
structurer
son
site
avec
le
POO
et
l
’
architecturer
MVC
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
site
dynamique
et
site
statique
–
rôle
de
l
’
utilisateur
et
de
l
’
administrateur
site
statique
(
web
)
L
’
utilisateur
consulter
le
contenu
du
site
sans
fournir
d
’
information
(
message
,
login
,
etc
.
)
.
L
’
administrateur
ajouter
de
nouveau
élément
dans
le
site
(
de
nouveau
information
,
de
nouveau
article
,
de
nouveau
page
)
en
revenir
dans
le
code
,
donc
en
programmer
.
le
site
statique
être
faire
uniquement
en
HTML
,
CSS
et
JavaScript
:
ce
être
du
langage
client
universel
.
site
dynamique
(
web
)
L
’
utilisateur
fournir
du
information
au
site
:
message
,
login
,
etc
.
ce
partie
du
site
être
publique
(
même
s
’
il
falloir
un
mot
de
passe
pour
se
connecter
)
:
c
’
être
le
front-office
.
L
’
administrateur
gérer
le
contenu
du
site
(
ajout
,
modification
,
suppression
d
’
information
,
d
’
article
,
de
message
,
d
’
utilisateur
,
modération
de
message
,
etc
.
)
par
un
partie
de
site
dédier
à
l
’
administration
:
c
’
être
le
back-office
.
le
site
dynamique
être
faire
avec
:
•
le
langage
client
:
HTML
,
CSS
et
JavaScript
•
un
langage
serveur
:
PHP
ou
java
ou
C
#
ou
Ruby
ou
python
ou
JavaScript
(
Node
)
,
etc
.
•
ce
langage
serveur
utiliser
en
général
un
base
de
donnée
:
MySQL
,
MariaDB
,
oracle
,
SQL-Server
,
PostgreSQL
,
SQLite
,
etc
.
souvent
,
on
associer
un
BD
à
un
langage
serveur
:
•
PHP-MySQL
,
•
Java-Oracle
,
•
C
#
-SQL-Server
.
on
utiliser
aussi
souvent
un
framework
qui
faciliter
et
accélérer
le
travail
:
•
Symfony
,
Laravel
,
zend
(
PHP
)
,
•
JEE
(
java
)
,
•
.Net
(
c
#
)
,
•
RubyOnRails
(
Ruby
)
,
•
Django
(
python
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
historique
du
PHP
PHP-MySQL
:
début
du
WEB
grand
public
.
PHP
:
langage
simple
,
un
peu
«
sale
»
(
versus
java
,
langage
propre
)
.
Aujourd
’
hui
:
PHP
objet
,
langage
propre
.
le
PHP
avoir
intégrer
le
aspect
sécurité
.
S
’
utiliser
souvent
avec
du
frameworks
(
Laravel
,
Symfony
,
zend
,
etc
.
)
.
https
:
/
/
dns-remplacer
/
wiki
/
PHP
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
architecture
client
serveur
langage
côté
client
HTML
,
CSS
,
JavaScript
application
côté
client
navigateur
:
Firefox
,
Internet
explorer
,
safari
,
Opera
,
etc
.
langage
côté
serveur
SQL
,
PHP
,
C
#
,
java
,
python
,
Ruby
,
etc
.
,
application
côté
serveur
serveur
HTTP
(
ou
serveur
web
)
:
apache
(
PHP
)
,
Tomcat
(
java
,
JEE
)
,
IIS
(
C
#
,
.Net
)
serveur
SGBD
:
MySQL
,
oracle
,
SQL-Server
,
PostgreSQL
,
MariaDB
,
SQLite
remarque
:
un
serveur
c
’
être
un
machine
qui
faire
fonctionner
un
programme
qu
’
on
appeler
aussi
un
serveur
(
le
machine
être
un
serveur
parce
qu
’
elle
contenir
un
programme
serveur
)
.
un
programme
serveur
être
un
programme
qui
tourner
24H
sur
et
qui
avoir
comme
caractéristique
de
ne
pas
avoir
d
’
interface
utilisateur
.
seul
d
’
autre
programme
pouvoir
communiquer
avec
lui
.
un
programme
serveur
s
’
appeler
serveur
ou
deamon
.
le
serveur
mysql
sur
PC
s
’
appeler
mysqld
,
«
d
»
pour
deamon
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
affichage
d
’
un
page
HTML
dans
un
navigateur
:
cas
possible
:
•
local
,
•
langage
serveur
,
•
ajax
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
comment
on
accéder
à
un
page
Web
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
principe
du
PHP
:
écrire
du
code
HTML
Ecrire
du
code
HTML
en
PHP
le
PHP
servir
à
écrire
du
code
HTML
dynamique
,
en
aller
par
exemple
chercher
le
information
dans
le
BD
.
traduction
du
PHP
en
HTML
le
navigateur
ne
comprendre
que
le
langage
HTML
.
un
serveur
web
permettre
de
traduire
du
code
PHP
en
page
HTML
.
principe
de
traduction
)
le
client
demander
un
fichier
HTML
ou
PHP
:
un
page
web
,
HTML
ou
PHP
.
)
le
serveur
web
récupérer
ce
page
HTML
ou
PHP
puis
la
traduire
en
HTML
(
il
n
’
avoir
rien
à
faire
s
’
il
n
’
y
avoir
que
du
HTML
.
)
le
traduction
pouvoir
consister
à
inclure
d
’
autre
fichier
fichier
PHP
et
aussi
à
récupérer
du
information
dans
un
base
de
donnée
ou
dans
du
fichier
.
)
le
fin
de
le
traduction
produire
un
page
entièrement
HTML
qui
être
renvoyer
au
client
(
au
navigateur
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
de
traduction
quand
on
trouver
du
instruction
PHP
,
le
serveur
apache
transformer
ce
instruction
en
code
HTML
exemple
de
traduction
<
p
>
<
?
php
echo
`
`
vous
être
le
visiteur
n
°
'
'
.
$
numVisiteur
;
?
>
<
/
p
>
le
balise
<
p
>
être
laisser
tel
quel
.
le
balise
<
?
php
être
traduire
.
le
résultat
de
le
traduction
donner
,
si
le
variable
$
numVisiteur
valoir
:
<
p
>
vous
être
le
visiteur
n
°
<
/
p
>
il
pouvoir
aussi
y
avoir
du
instruction
php
qui
interroger
le
base
de
donnée
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
de
traduction
<
p
>
<
?
php
$
reponse
=
$
bdd-
>
query
(
'
select
prenom
FROM
utilisateur
WHERE
id
=
'
)
;
echo
`
`
bonjour
`
`
.
$
reponse
;
?
>
<
/
p
>
donner
,
si
le
select
revoir
Bertrand
:
<
p
>
bonjour
Bertrand
<
/
p
>
pour
fonctionner
,
ce
exemple
nécessiter
qu
’
on
se
connecter
d
’
abord
à
le
BD
.
ce
page
HTML
pouvoir
être
envoyer
au
navigateur
du
client
qui
pouvoir
désormais
la|le
interpréter
et
la|le
afficher
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
rappel
HTML
-
CSS
HTML
de
base
:
h1-h6
,
p
,
br
,
img
<
h@card@
>
titre
<
/
h@card@
>
h2-h6
<
p
>
,
<
br
>
,
<
img
src
=
«
dns-remplacé
»
>
<
avoir
href
=
«
URL
»
...
dans
chaque
balise
,
on
pouvoir
mettre
du
couple
:
attribut
=
«
valeur
»
squelette
html
<
!
DOCTYPE
html
>
<
html
lang
=
'
'
fr
'
'
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
link
rel
=
'
'
stylesheet
'
'
href
=
'
'
dns-remplacer
'
'
/
>
<
title
>
mon
page
<
/
title
>
<
/
head
>
<
body
>
contenir
HTML
<
/
body
>
<
/
html
>
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
CSS
de
base
principe
selecteur
{
p1
:
v1
;
p2
:
v2
;
...
;
pn
:
vn
}
un
selecteur
qui
définir
le
ou
le
balise
concerner
.
un
couple
propriété
:
valeur
.
exemple
de
sélecteur
*
(
tout
le
balise
)
,
p
,
h1
,
h2
,
etc
,
#
idCeci
:
le
balise
avec
un
id
=
«
idCeci
»
.classeCela
:
le
balise
avec
un
class
=
«
classeCela
»
p.classeCela
:
le
balise
p
avec
un
class
=
«
classeCela
»
[
att
]
:
le
balise
avoir
un
attribut
nommer
«
att
»
[
att
=
petit
]
:
le
balise
avec
un
attribut
att
=
«
petit
»
pseudo
classer
un
pseudo-classe
être
un
mot-clé
qui
pouvoir
être
ajouter
à
un
sélecteur
afin
de
indiquer
le
état
spécifique
dans
lequel
le
élément
devoir
être
pour
être
cibler
par
le
déclaration
.
il
se
placer
après
un
selecteur
simple
et
être
introduire
par
«
:
»
elt
:
first-child
:
premier
enfant
d
’
un
balise
avoir
:
link
:
la|le
avoir
non
visiter
avoir
:
visited
:
la|le
avoir
visiter
elt
:
hover
:
le
élément
survoler
elt
:
focus
:
le
élément
qui
avoir
le
focus
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
charger
tout
le
exemple
HTML
http
:
/
/
dns-remplacer
/
IMG
/
zip
/
dns-remplacer
exemple
:
un
page
de
base
coder
un
page
avec
titre
,
un
paragraphe
de
texte
,
un
sous
titre
,
un
texte
,
un
image
.
changer
le
typo
du
texte
=
>
font-family
:
Comic
;
font-style
:
italic
;
color
:
blue
;
encadrer
le
titre
=
>
border
:
solid
black
1px
;
centrer
l
’
image
=
>
text-align
:
center
;
pour
mettre
du
faux
texte
:
chercher
«
Lorem
ipsum
dolor
»
sur
google
.
un
site
proposer
du
faux
texte
.
pour
le
couleur
nommer
,
voir
par
exemple
:
http
:
/
/
dns-remplacer
/
dns-remplacer
.
exemple
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
un
page
de
base
avec
un
lien
vers
un
formulaire
rappel
théorique
sur
le
formulaire
le
balise
d
’
un
formulaire
<
form
action
=
«
dns-remplacer
»
method
=
GET
>
:
pour
regrouper
le
input
.
L
’
action
définir
le
page
appeler
quand
on
valider
de
formulaire
.
le
méthode
être
un
notion
PHP
.
<
fieldset
>
:
pour
mettre
un
cadre
autour
du
input
.
<
legend
>
:
pour
mettre
un
texte
sur
le
cadre
<
input
type
=
«
text
»
name
=
«
nom
»
>
type
=
text
pour
avoir
un
champ
de
saisie
.
le
«
name
»
permettre
d
’
accéder
en
PHP
à
le
«
value
»
saisir
.
<
input
type
=
'
'
submit
'
'
name
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
type
:
submit
pour
avoir
un
bouton
de
validation
.
le
value
c
’
être
le
texte
afficher
.
quand
on
cliquer
sur
le
bouton
,
le
page
faire
appel
à
l
’
action
de
le
balise
<
form
>
<
input
type
=
'
'
reset
'
'
name
=
'
'
reset
'
'
value
=
'
'
annuler
'
'
>
type
:
reset
pour
annuler
le
saisie
en
cours|cour
.
<
input
type
=
'
'
hidden
'
'
name
=
'
'
saisir
'
'
value
=
'
'
saisir
'
'
>
type
:
hydden
faire
circuler
un
name
et
un
value
sans
que
cela
concerner
l
’
utilisateur
(
c
’
être
cacher
)
.
C
’
être
très
utile
en
programmation
PHP
.
<
select
>
et
<
option
>
pour
créer
un
menu
dérouler
.
<
textarea
>
pour
avoir
un
zone
de
saisie
.
autre
type
de
le
balise
<
input
>
en
préciser
e
type
de
le
balise
input
,
on
obtenir
un
comportement
différent
(
par
exemple
,
avec
un
type
tel
,
si
on
ne
saisir
pas
un
numéro
de
téléphone
,
le
champ
de
saisie
passer
en
rouge
)
.
type
=
password
:
caractère
cacher
,
email
,
url
,
tel
,
number
(
+min
,
max
,
step
)
,
range
(
+min
,
max
,
step
avec
curseur
)
,
color
(
firefox
proposer
un
palette
colorer
)
,
date
,
search
,
chechobox
(
+checked
)
:
bouton
à
cocher
,
radio
:
radio
bouton
(
seul
parmi
plusieurs
)
.
autre
attribut
de
le
balise
<
input
>
attribut
maxlength
(
input
)
:
taille
maximum
de
le
saisie
.
attribut
autofocus
(
input
)
:
dans
un
input
placer
le
curseur
directement
dans
le
champ
.
attribut
required
(
input
)
:
obliger
le
saisie
avant
d
’
envoyer
le
formulaire
(
pas
dans
safari
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
le
code
proposer
le
page
de
l
’
exercice
avec
un
lien
vers
un
formulaire
.
le
formulaire
renvoyer
vers
le
page
de
l
’
exercice
quand
on
le
valider
.
on
avoir
cas
possible
pour
l
’
âge
:
<
,
,
>
)
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
un
page
de
base
avec
un
lien
vers
un
formulaire
dans
un
tableau
rappel
théorique
sur
le
tableau
balise
de
structure
:
<
table
>
et
<
tr
>
pas
de
texte
directement
dedans
.
•
<
table
>
:
le
tableau
•
<
tr
>
:
le
ligne
balise
de
donnée
:
<
th
>
et
<
td
>
dans
chaque
ligne
,
on
mettre
le
cellule
.
•
<
th
>
:
pour
le
nom
de
le
colonne
(
le
1er|1ère
ligne
)
.
•
<
td
>
:
pour
tout
le
autre
cellule
.
encadrement
minimum
:
<
tabler
border
>
•
<
tabler
border
>
encadrer
comme
suivre
:
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
on
pouvoir
mettre
le
formulaire
dans
un
tableau
:
on
avoir
le
même
résultat
que
précédemment
,
sauf
que
le
zone
de
saisie
être
aligner
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
le
outil
de
développement
outil
pour
le
fonctionnement
d
’
un
site
WEB
présentation
pour
faire
fonctionner
un
site
WEB
,
il
falloir
du
outil
,
côté
client
et
côté
serveur
.
coter
client
:
le
navigateur
le
navigateur
qui
interagir
avec
l
’
utilisateur
.
il
comprendre
le
HTML
,
le
CSS
et
le
JavaScript
,
mais
il
ne
comprendre
pas
le
PHP
.
côté
serveur
:
le
serveur
web
et
le
serveur
de
BD
le
serveur
web
(
ou
serveur
http
)
interagir
avec
le
navigateur
et
le
serveur
de
BD
.
le
serveur
web
traduire
le
code
PHP
en
HTML
.
il
comprendre
donc
le
PHP
.
le
serveur
de
BD
interagir
avec
le
serveur
web
et
un
disque
dur
pour
sauvegarder
et
récupérer
du
donnée
.
il
comprendre
le
SQL
pour
le
différence
entre
serveur
web
et
serveur
d
’
application
:
https
:
/
/
dns-remplacer
/
article
/
single
/
1156-difference-serveur-web
.
le
pdf
correspondant
si
le
lien
ne
marcher
pas
:
http
:
/
/
dns-remplacer
/
IMG
/
pdf
/
dns-remplacer
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
outil
de
développement
PHP-MySQL
présentation
pour
développer
un
site
WEB
,
il
falloir
du
outil
qui
permettre
d
’
écrire
le
code
et
de
faire
de
son
machine
un
serveur
pour
le
navigateur
.
coter
client
–
partie
statique
•
HTML
,
CSS
:
Editeur
de
texte
(
VSCode
,
SublimeText
,
bracket
,
etc
.
)
•
affichage
de
le
page
:
navigateur
•
hébergement
du
site
:
logiciel
FTP
côté
serveur
-
partie
dynamique
•
PHP
:
Editeur
de
texte
•
SQL
:
Editeur
de
texte
•
serveur
HTTP
:
apache
•
serveur
SGBD
:
MySQL
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
solution
il
exister
du
solution
tout
en
un
qui
fournir
le
serveur
HTTP
et
SGBD
ainsi
qu
’
un
interface
utilisateur
pour
utiliser
ce
serveur
et
pour
tester
notre
code
HTML
et
PHP
sur
notre
machine
de
développement
qui
jouer
le
rôle
du
serveur
pour
elle
même
en
tant
que
client
.
par
exemple
:
WAMP
(
Windows
,
apache
,
MySQL
,
PHP
)
,
MAMP
sur
mac
,
LAMPP
sous
Linux
(
un
P
en
plus
pour
Perl
)
,
XAMPP
.
EasyPHP
,
etc
.
aucun
solution
n
’
être
parfaire
ni
radicalement
supérieur
à
un
autre
.
C
’
être
un
question
d
’
habitude
.
on
choisir
WAMP
.
on
pouvoir
aussi
utiliser
XAMPP
.
ou
MAMP
si
on
être
sur
mac
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
installation
de
WAMP
http
:
/
/
dns-remplacer
/
dns-remplacer
?
id_article
=
aller
dans
l
’
option
:
WAMP
vous
aller
télécharger
un
fichier
d
’
installation
:
wampserver3.1.4_
dns-remplacé
(
selon
le
version
)
.
pendant
l
’
installation
:
choisir
le
navigateur
par
défaut
(
chrome
ou
Firefox
de
préférence
,
surtout
pas
Internet
explorer
)
,
choisir
un
éditeur
par
défaut
(
VSCode
de
préférence
ou
sublime
Text
)
.
autoriser
le
déblocage
du
pare-feu
.
détail
sur
l
’
installation
de
WAMP
:
dans
l
’
article
:
http
:
/
/
dns-remplacer
/
dns-remplacer
?
id_article
=
,
le
poly
:
http
:
/
/
dns-remplacer
/
IMG
/
pdf
/
01_Installation_de_
dns-remplacer
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
premier
usage
de
WAMP
:
démarrer
WAMP
il
falloir
autoriser
le
pare-feu
pour
que
le
serveur
pouvoir
démarrer
.
double
clic
sur
le
raccourci
sur
le
bureau
:
Ca
marche
!
on
obtenir
un
icône
vert
.
si
on
avoir
un
icône
rouge
,
c
’
être
qu
’
aucun
serveur
n
’
être
démarrer
.
si
on
avoir
un
icône
orange
,
c
’
être
qu
’
un
seul
serveur
être
démarrer
.
on
pouvoir
démarrer
,
arrêter
,
redémarrer
le
service
(
service
=
serveur
)
.
:
installer
l
’
icône
WAMP
directement
dans
le
barre
d
’
icône
déplacer
l
’
icône
pour
qu
’
elle
être
directement
dans
le
barre
du
icône
:
:
passer
Wamp
en
français
icône
Wamp
–
bouton
gauche
-
choix
langage
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
consulter
le
serveur
dans
le
gestionnaire
du
tâche
•
on
pouvoir
regarder
le
processus
qui
tourner
sur
Windows
:
CTRL-ALT-SUP
ou
CTRL-SHIFTESC
.
•
il
falloir
afficher
le
détail
.
•
apache
HTTP
Server
:
c
’
être
le
serveur
web
.
il
pouvoir
y
en
avoir
deux
,
mais
c
’
être
le
même
!
•
mysqld
:
c
’
être
le
serveur
de
le
BD
MySQL
.
il
pouvoir
y
en
avoir
deux
,
mais
c
’
être
le
même
!
il
pouvoir
même
y
en
avoir
:
un
de
plus
pour
MariaDB
!
•
dans
tout
le
cas
,
si
on
arrêter
le
serveur
,
il
ne
devoir
en
rester
aucun
.
si
il
en
rester
il
falloir
la|le
arrêter
!
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
tester
WAMP
:
afficher
le
page
WampServer
dans
le
navigateur
:
localhost
ou
bien
icône
Wamp
–
bouton
droit
-
choix
localhost
(
icône
Wamp
:
icône
vert
dans
dans
le
zone
de
notification
:
en
bas
à
droit|droite
)
.
le
page
WampServer
apparaître
.
:
aller
dans
le
dossier
du
projet
:
C
:
\wamp64\www
,
créer
un
dossier
«
home
»
icône
Wamp
–
bouton
droit
-
choix
répertoire
www
mettre
un
dossier
:
«
home
»
dans
le
répertoire
www
:
afficher
le
contenu
de
«
home
»
dans
le
page
WampServer
icône
Wamp
–
bouton
droit
-
choix
localhost
le
dossier
home
apparaître
dans
le
zone
«
votre
projet
»
:
il
n
’
être
pas
cliquable
.
:
accéder
au
dossier
«
home
»
dans
le
page
WampServer
icône
Wamp
–
bouton
droit
-
choix
localhost
dans
l
’
url
,
on
trouver
:
localhost
ajouter
/
home
:
l
’
url
être
donc
:
localhost
/
home
on
arriver
sur
le
page
web
du
répertoire
home
:
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
premier
programme
en
PHP
:
premier
programme
php
coder
dans
le
dossier
«
home
»
,
ajouter
un
fichier
test_1.php
avec
le
code
suivant
<
?
php
echo
«
<
h@card@
>
hello
World
<
/
h1
>
»
;
?
>
test
ce
fichier
apparaître
dans
le
page
WampServer
,
dans
le
page
de
l
’
url
http
:
/
/
localhost
/
home
/
en
cliquer
dessus
,
on
apparaître
le
page
HTML
correspondre
au
code
.
on
pouvoir
visualiser
le
code
HTML
avec
un
MAJ-CTRL-i
(
pour
Firefox
)
.
on
voir
uniquement
le
code
HTML
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
fichier
dns-remplacer
si
un
répertoire
contenir
un
fichier
dns-remplacé
ou
dns-remplacé
,
il
être
automatiquement
exécuter
quand
on
rentrer
dans
le
dossier
.
dupliquer
test_1.php
en
le
nommer
dns-remplacer
ajouter
:
echo
«
<
h@card@
>
hello
World
avec
index
<
/
h1
>
»
;
vérifier
ce
propriété
.
ensuite
,
renommer
dns-remplacer
en
dns-remplacé
.
vérifier
qu
’
il
n
’
y
avoir
plus
d
’
exécution
automatique
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
deuxième
programme
php
coder
dans
le
dossier
«
home
»
,
ajouter
un
fichier
test_2.php
avec
le
code
suivant
<
?
php
/
/
en
utiliser
le
url
:
/
/
localhost
/
home
/
dns-remplacer
?
name
=
Bertrand
$
name
=
$
_GET
[
'
name
'
]
;
/
/
le
header
préciser
le
type
de
le
page
header
(
'
Content-Type
:
text
/
html
'
)
;
echo
'
<
html
>
'
;
echo
'
<
body
>
bonjour
'
.
$
name
.
'
<
/
body
>
'
;
echo
'
<
/
html
>
'
?
>
test
ce
fichier
apparaître
dans
le
page
WampServer
,
dans
le
page
de
l
’
url
http
:
/
/
localhost
/
home
/
en
cliquer
dessus
,
on
apparaître
le
page
HTML
correspondre
au
code
:
mais
il
y
avoir
un
bug
!
il
falloir
ajouter
dans
l
’
url
:
?
name
=
Bertrand
pour
que
cela
marche
:
http
:
/
/
localhost
/
home
/
test_2.php
?
name
=
Bertrand
on
pouvoir
visualiser
le
code
HTML
avec
un
MAJ-CTRL-i
(
pour
Firefox
)
.
on
voir
uniquement
le
code
HTML
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
consulter
le
contenu
du
dossier
d
’
un
site
en
ligne
!
exemple
:
http
:
/
/
dns-remplacer
/
spip
/
IMG
/
jpg
/
sur
ce
site
,
on
constater
qu
’
on
pouvoir
accéder
au
contenu
du
dossier
!
on
pouvoir
remonter
le
dossier
:
http
:
/
/
dns-remplacer
/
spip
/
IMG
Jusqu
’
à
le
racine
du
site
:
http
:
/
/
dns-remplacer
le
racine
contenir
un
fichier
dns-remplacer
:
c
’
être
le
page
d
’
accueil
du
site
qui
s
’
affiche
.
pour
éviter
le
problème
,
on
pouvoir
par
exemple
mettre
un
fichier
dns-remplacer
dans
tout
le
répertoire
qui
renvoyer
par
exemple
sur
le
page
d
’
accueil
(
fonction
header
en
PHP
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
WAMP
-
version
détailler
(
on
pouvoir
passer
!
)
:
reprise
détailler
du
paragraphe
précédent
:
premier
usage
-
résumer
ce
chapitre
détailler
ce
qu
’
on
avoir
faire
au
paragraphe
précédent
:
tester
WAMP
démarrer
WAMP
il
falloir
autoriser
le
pare-feu
pour
que
le
serveur
pouvoir
démarrer
.
double
clic
sur
le
raccourci
sur
le
bureau
:
Ca
marche
!
on
obtenir
un
icône
vert
.
passer
Wamp
en
français
icône
Wamp
–
bouton
gauche
-
choix
langage
tester
WAMP
:
afficher
le
page
WampServer
dans
le
navigateur
:
localhost
ou
bien
icône
Wamp
–
bouton
droit
-
choix
localhost
(
icône
Wamp
:
icône
vert
dans
dans
le
zone
de
notification
:
en
bas
à
droit|droite
)
.
le
page
WampServer
apparaître
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
le
zone
«
votre
projet
»
être
vide
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
travailler
avec
du
fichier
PHP
aller
dans
le
dossier
du
projet
:
C
:
\wamp64\www
aller
dans
C
:
\wamp64\www
.
C
’
être
dans
ce
dossier
qu
’
on
mettre
tout
le
dossier
de
travail
.
créer
un
dossier
«
mon-site
»
,
par
exemple
.
le
zone
«
votre
projet
»
contenir
le
nom
du
dossier
qu
’
on
venir
de
créer
.
accéder
au
projet
:
localhost
/
mon-site
en
entrer
localhost
/
mon-site
dans
un
navigateur
,
on
accéder
au
projet
:
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
accès
direct
au
projet
si
on
cliquer
directement
sur
le
nom
du
projet
,
on
obtenir
un
erreur
et
on
n
’
accéder
pas
au
projet
.
solution
:
pour
remédier
à
cela
:
sur
l
’
icône
vert
Wamp
:
bouton
droit
/
paramètre
Wamp
/
ajouter
localhost
dans
l
’
URL
.
Ca
ajouter
un
warning
dans
le
zone
«
votre
projet
»
.
mais
on
pouvoir
désormais
accéder
au
projet
en
cliquer
sur
leur
nom
.
solution
:
dans
le
dossier
votre
projet
(
C
:
/
wampp64
/
www
)
ouvrir|ouvrer
le
fichier
dns-remplacé
.
vers
le
ligne
,
après
le
ligne
:
$
suppress_localhost
=
(
$
wampConf
[
'
urlAddLocalhost
'
]
=
=
'
off
'
?
true
:
false
)
;
ajouter
:
$
suppress_localhost
=
false
;
ce
solution
donner
le
même
résultat
que
le
précédent
,
en
plus
compliquer
!
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
solution
:
«
à
le
main
»
dans
le
navigateur
:
localhost
/
mon-site
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
création
d
’
un
premier
fichier
PHP
ouvrir
le
dossier
«
mon-site
»
avec
VSCode
ou
SublimeText
:
sur
le
nom
du
dossier
,
ouvrir
un
fichier
:
new
file
.
puis
save
:
on
l
’
appeler
dns-remplacer
,
il
se
trouver
dans
le
répertoire
mon-site
.
dans
le
fichier
dns-remplacé
:
exécuter
le
fichier
PHP
il
suffire
de
cliquer
sur
le
dossier
«
mon-site
»
.
par
défaut
,
le
fichier
«
dns-remplacer
»
être
envoyer
au
serveur
apache
qui
le
retourne
au
navigateur
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
Paramétrage
divers
bouton
droit
sur
l
’
icône
vert
Wamp
langue
bouton
droit
/
language
/
français
paramètre
de
Wamp
«
ajouter
localhost
dans
l
’
URL
»
:
pour
l
’
accès
direct
au
dossier
de
travail
,
par
exemple
.
outil
pour
tester
le
port
,
par
exemple
clic
sur
l
’
icône
vert
Wamp
•
démarrer
ou
arrêter
le
serveur
(
service
)
:
apache
et
mysql
•
accès
direct
à
le
page
localhost
•
accéder
à
phpmyadmin
,
l
’
utilitaire
pour
gérer
le
BD
.
•
Paramétrer
apache
,
MySQL
,
PHP
(
AMP
)
.
:
PHPMyAdmin
on
accéder
à
PHPMyAdmin
ainsi
:
http
:
/
/
localhost
/
phpmyadmin
/
ou
icône
Wamp
/
PHPMyAdmin
:
Paramétrage
du
installation
:
display_errors
et
display_startup_errors
fichier
dns-remplacé
il
exister
un
fichier
dns-remplacé
qui
paramètre
l
’
usage
de
WAMP
pour
le
php
.
on
le
trouver
dans
clic
/
PHP
sous
MAMP
,
il
falloir
trouver
le
bon
!
quand
on
aller
dans
phpInfo
,
on
trouver
le
configuration
filer
:
/
application
/
MAMP
/
bin
/
php
/
php7.0.0
/
conf
C
’
être
ce
fichier
qu
’
il
falloir
modifier
.
variable
display_errors
=
on
et
display_startup_errors
=
on
le
variable
display_errors
et
display_startup_errors
permettre
d
’
afficher
du
message
d
’
erreur
plus
explicite
.
elle
devoir
être
à
on
pour
que
le
message
d
’
erreur
s
’
afficher
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
il
falloir
redémarrer
le
serveur
apache
pour
que
le
prise
en
compte
être
faire
.
on
pouvoir
la|le
voir
dans
le
phpInfo
de
MAMP
.
alternative
pour
un
site
en
production
attention
,
ce
message
d
’
erreur
ne
devoir
pas
être
voir
par
le
utilisateur
.
pour
un
site
déjà
en
production
,
il
falloir
passer
par
le
fichier
de
log
.
regarder
dans
le
fichier
de
conf
pour
plus
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
d
’
information
.
MAMP
–
version
détailler
:
principe
on
suivre
le
même
logique
que
pour
tester
WAMP
.
il
falloir
donc
suivre
le
chapitre
précédent
pour
faire
le
partie
pratique
et
revenir
dans
ce
chapitre
pour
voir
le
spécificité
de
MAMP
.
:
lancer
MAMP
•
il
falloir
autoriser
le
parefeu
pour
que
le
serveur
pouvoir
démarrer
.
•
pour
démarrer
MAMP
:
application
/
MAMP
/
dns-remplacer
le
programme
proposer
d
’
utiliser
MAMP
pro
:
on
éviter
!
•
préférence
:
pour
gérer
le
port
du
serveur
et
le
démarrage
automatique
du
serveur
•
démarrer
/
arrêter
le
serveur
:
problème
d
’
installation
–
problème
de
port
onglet
préférence
,
menu
port
:
apache
être
sur
par
défaut
:
accès
au
projet
web
localhost
:
dans
un
navigateur
,
taper
:
«
localhost
:
»
.
http
:
/
/
localhost
:
/
un
page
index
of
/
apparaître
.
elle
être
vide
,
elle
contenir
notre
projet
.
ce
page
correspondre
au
répertoire
:
/
application
/
mamp
/
htdocs
ce
répertoire
être
paramétrable
dans
préférence
/
serveur
web
ouvrir
le
page
web
start
/
mon
site
web
on
accéder
à
le
page
localhost
:
ainsi
ouvrir
le
page
web
start
/
mon
site
web
:
PHPMyAdmin
on
accéder
à
PHPMyAdmin
ainsi
:
http
:
/
/
localhost
:
/
phpMyAdmin
ou
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
ouvrir
le
page
web
start
/
Tools
/
PHPMyAdmin
:
fichier
dns-remplacé
il
exister
un
fichier
dns-remplacé
qui
paramètre
l
’
usage
de
WAMP
pour
le
php
.
on
le
trouver
dans
clic
/
PHP
sous
MAMP
,
il
falloir
trouver
le
bon
!
quand
on
aller
dans
phpInfo
,
on
trouver
le
configuration
filer
:
/
application
/
MAMP
/
bin
/
php
/
php7.0.0
/
conf
C
’
être
ce
fichier
qu
’
il
falloir
modifier
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
trois
exemple
de
l
’
instruction
echo
(
ou
print
)
charger
et
installer
le
exemple
commencer
par
charger
le
dossier
zipper
:
dns-remplacé
et
installez-le
dans
le
répertoire
du
serveur
WAMP
(
www
)
.
exemple
:
code
HTML
minimum
objectif
simple
affichage
de
texte
sans
php
.
comparaison
entre
un
fichier
.html
et
.php
code
dans
php
fichier
Exemple_01_
dns-remplacé
bonjour
sans
balise
dans
un
fichier
.php
<
h@card@
>
bonjour
avec
balise
dans
un
fichier
.php
<
/
h@card@
>
résultat
:
bonjour
sans
balise
dans
un
fichier
.php
bonjour
avec
balise
dans
un
fichier
.php
fichier
Exemple_01_
dns-remplacé
bonjour
sans
balise
dans
un
fichier
.php
<
h@card@
>
bonjour
avec
balise
dans
un
fichier
.php
<
/
h@card@
>
résultat
:
bonjour
sans
balise
dans
un
fichier
.php
bonjour
avec
balise
dans
un
fichier
.php
explication
le
résultat
être
le
même
dans
le
deux
cas
.
le
fichier
.html
être
fournir
directement
au
navigateur
.
le
texte
s
’
affiche
.
le
fichier
.php
être
traiter
par
le
serveur
apache
.
il
ne
contenir
pas
de
balise
php
:
le
serveur
web
n
’
effectuer
aucun
transformation
.
le
résultat
être
transmettre
au
navigateur
.
le
texte
s
’
affiche
.
on
éviter
d
’
utiliser
du
fichier
html
dans
programme
côté
serveur
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
code
HTML
minimum
avec
un
echo
php
objectif
simple
affichage
de
texte
avec
du
php
comparaison
entre
un
fichier
.html
et
.php
fichier
php
:
<
?
php
echo
`
`
bonjour
avec
balise
php
'
'
;
?
>
<
?
php
echo
`
`
<
h@card@
>
bonjour
avec
balise
HTML
et
php
<
/
h3
>
'
'
;
?
>
résultat
dans
le
navigateur
:
bonjour
sans
balise
php
bonjour
avec
balise
HTML
et
php
page
HTML
générer
:
bonjour
sans
balise
php
<
h@card@
>
bonjour
avec
balise
HTML
et
php
<
/
h@card@
>
explication
•
le
fichier
.php
être
traiter
par
le
serveur
apache
.
•
le
ligne
de
PHP
se
trouver
entre
:
<
?
php
et
?
>
•
Echo
être
un
instruction
.
chaque
instruction
être
terminer
par
un
;
•
le
serveur
apache
traiter
le
instruction
situer
entre
<
?
php
et
?
>
.
echo
être
un
instruction
qui
permettre
d
’
écrire
ce
qui
se
trouver
entre
le
guillemet
.
•
le
résultat
être
un
fichier
HTML
qui
être
transmettre
au
navigateur
.
le
texte
s
’
affiche
.
remarquer
faire
un
echo
en
PHP
plutôt
que
d
’
afficher
directement
le
texte
en
HTML
,
cela
ne
servir
à
rien
.
mais
le
PHP
être
un
langage
de
programmation
qui
permettre
de
récupérer
le
information
du
formulaire
HTML
,
de
faire
du
calcul
complexe
,
d
’
enregistrer
du
information
dans
le
BD
ou
dans
un
fichier
,
de
récupérer
du
information
dans
le
BD
ou
dans
un
fichier
,
de
remplir
du
tableau
avec
du
donnée
de
le
BD
,
etc
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
page
HTML
standard
avec
un
echo
php
objectif
pager
HTML
classique
avec
un
simple
affichage
de
texte
php
.
comparaison
entre
un
fichier
.html
et
.php
fichier
php
:
<
!
DOCTYPE
html
>
<
html
lang
=
'
'
fr
'
'
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
exemple
:
echo
<
/
title
>
<
/
head
>
<
body
>
<
?
php
echo
`
`
<
h@card@
>
affichage
de
texte
HTML
et
PHP
<
/
h1
>
'
'
?
>
<
?
php
echo
`
`
<
p
>
PHP
:
'
'
;
echo
`
`
<
span
style
=
\
'
'
color
:
red
;
\
'
'
>
ligner
écrire
avec
un
\
'
'
echo\
'
'
<
strong
>
PHP
<
/
strong
>
<
/
span
>
<
/
p
>
'
'
;
?
>
<
/
body
>
<
/
html
>
résultat
dans
le
navigateur
:
affichage
de
texte
HTML
et
PHP
PHP
:
ligner
écrire
avec
un
`
`
echo
'
'
PHP
.
page
HTML
générer
:
<
!
DOCTYPE
html
>
<
html
lang
=
'
'
fr
'
'
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
exemple
:
echo
<
/
title
>
<
/
head
>
<
body
>
<
h@card@
>
affichage
de
texte
HTML
et
PHP
<
/
h@card@
>
<
p
>
PHP
:
<
span
style
=
'
'
color
:
red
;
'
'
>
ligner
écrire
avec
un
`
`
echo
'
'
<
strong
>
PHP
<
/
strong
>
<
/
span
>
<
/
p
>
<
/
body
>
<
/
html
>
explication
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
le
h1
être
mettre
dans
un
echo
et
dans
un
<
?
php
séparer
(
cela
ne
servir
à
rien
,
c
’
être
pour
le
test
!
)
.
le
<
?
php
suivant
fait
:
un
echo
qui
ouvrir|ouvrer
un
<
p
>
puis
un
autre
qui
ouvrir|ouvrer
un
<
span
>
avec
du
style
et
un
strong
qui
fermer
le
<
/
span
>
mais
aussi
le
<
/
p
>
ouvrir
dans
le
précédent
echo
.
pour
mettre
un
guillemet
dans
le
texte
d
’
un
echo
(
donc
pour
afficher
un
guillemet
dans
le
code
HTML
)
,
on
mettre
\
'
'
exercice
echo
coder
tout
le
page
précédent
avec
du
écho
.
combien
faut-il
en
mettre
au
minimum
?
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
principe
général
du
code
PHP
règle
•
le
code
PHP
commencer
par
<
?
php
(
sans
espace
)
et
finir
par
?
>
.
on
aller
parler
de
«
balise
PHP
»
.
•
on
pouvoir
placer
un
balise
PHP
n
’
importer
où
dans
le
code
HTML
(
pas
dans
du
code
CSS
!
)
•
dans
un
balise
PHP
on
pouvoir
mettre
autant
d
’
instruction
et
de
ligne
PHP
qu
’
on
vouloir
.
•
on
devoir
mettre
un
;
à
le
fin
de
chaque
instruction
PHP
.
•
on
pouvoir
mettre
du
commentaire
entre
/
*
et
*
/
dans
le
code
PHP
.
ce
commentaire
pouvoir
s
’
étaler
sur
plusieurs
ligne
.
ce
commentaire
disparaître
dans
le
code
HTML
.
•
on
pouvoir
mettre
du
commentaire
de
fin
de
ligne
avec
/
/
erreur
courant
•
parse
error
:
quand
on
oublier
le
;
à
le
fin
d
’
un
instruction
(
le
;
être
facultatif
sur
le
dernier
instruction
•
un
fichier
.htlm
à
le
place
d
’
un
fichier
.php
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
gestion
du
erreur
affichage
du
erreur
-
rappel
variable
display_errors
=
on
et
display_startup_errors
=
on
le
variable
display_errors
et
display_startup_errors
permettre
d
’
afficher
du
message
d
’
erreur
plus
explicite
.
par
défaut
,
le
erreur
s
’
afficher
sur
PC
.
pour
voir
ce
variable
,
ouvrir|ouvrer
le
fichier
dns-remplacé
:
WAMP
/
PHP
/
dns-remplacer
chercher
le
variable
display_errors
et
display_startup_errors
vous
trouver
le
ligne
:
(
sans
;
au
début
,
sinon
c
’
être
un
commentaire
)
display_startup_errors
=
on
display_errors
=
on
il
falloir
redémarrer
le
serveur
apache
pour
que
le
prise
en
compte
être
faire
.
le
erreur
s
’
afficher
on
pouvoir
voir
le
variable
dans
le
phpInfo
de
Mamp
.
alternative
pour
un
site
en
production
attention
,
ce
message
d
’
erreur
ne
devoir
pas
être
voir
par
le
utilisateur
.
pour
un
site
déjà
en
production
,
il
falloir
passer
par
le
fichier
de
log
.
regarder
dans
le
fichier
de
conf
pour
plus
d
’
information
.
principal
message
d
’
erreur
parse
error
Est
indiquer
le
fichier
,
le
ligne
,
souvent
le
cause
.
L
’
erreur
pouvoir
être
sur
le
ligne
ou
sur
le
ligne
précédent
.
cela
pouvoir
correspondre
à
:
•
oubli
de
;
•
apostrophe
ou
guillemet
non
fermer
•
concaténation
à
problème
Undefined
function
le
fonction
n
’
être
pas
reconnaître
quand
on
s
’
en
sert
:
il
falloir
probablement
un
include
.
Wrong
parameter
count
un
fonction
n
’
avoir
pas
le
bon
nombre
de
paramètre
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
erreur
autour
de
le
BD
le
erreur
SQL
être
plus
ou
moins
explicite
.
il
falloir
vérifier
que
le
code
SQL
fonctionner
.
headers
already
sentir
by
...
si
on
avoir
du
code
HTML
avant
un
header
ou
un
session
maximum
execution
time
exceeded
boucle
sans
fin
TP
:
gestion
du
erreur
-
variable
display_errors
et
display_startup_errors
à
on
charger
le
zip
«
dns-remplacé
»
essayer
le
programme
TP_gestion_
dns-remplacer
et
corriger
le
erreur
.
affichage
du
erreur
sur
mac
par
défaut
,
le
erreur
ne
s
’
afficher
pas
sur
mac
.
il
falloir
modifier
le
variable
display_errors
et
display_startup_errors
dans
le
fichier
dns-remplacer
pour
cela
:
démarrer
MAMP
:
ouvrir
le
page
web
start
/
phpinfo
chercher
dns-remplacer
vous
trouver
pour
le
configuration
filer
(
dns-remplacer
)
Path
le
valeur
:
/
application
/
MAMP
/
bin
/
php
/
php7.0.0
/
conf
aller
dans
ce
répertoire
et
ouvrir|ouvrer
le
fichier
dns-remplacé
passer
le
deux
variable
à
on
:
display_startup_errors
=
on
display_errors
=
on
relancer
le
serveur
:
MAMP
/
arrêter
le
serveur
–
MAMP
/
démarrer
le
serveur
affichage
du
erreur
sur
PC
par
défaut
,
le
erreur
s
’
afficher
sur
PC
.
pour
voir
ce
variable
,
ouvrir|ouvrer
le
fichier
dns-remplacé
:
WAMP
/
PHP
/
dns-remplacer
chercher
le
variable
display_errors
et
display_startup_errors
vous
trouver
le
ligne
:
(
sans
;
au
début
,
sinon
c
’
être
un
commentaire
)
display_startup_errors
=
on
display_errors
=
on
le
erreur
s
’
afficher
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
inclusion
de
fichier
PHP
–
factorisation
du
code
HTML
rappel
sur
le
balise
structurant
HTML
HTML
proposer
du
balise
de
structuration
du
page
:
•
header
,
nav
,
footer
comme
baliser
plutôt
unique
dans
le
page
qui
correspondre
à
du
élément
qu
’
on
retrouver
sur
tout
le
page
du
site
•
section
,
article
,
aside
comme
balise
éventuellement
multiple
dans
le
page
et
différent
selon
le
page
•
div
comme
balise
de
structuration
personnel
.
le
problème
header
,
nav
et
footer
aller
en
général
se
retrouver
sur
tout
le
page
.
comment
éviter
de
répéter
le
même
code
sur
tout
le
page
et
donc
de
devoir
faire
du
mise
à
jour
sur
tout
le
page
?
solution
PHP
:
l
’
inclusion
de
fichier
en
PHP
tout
le
code
de
le
balise
header
pouvoir
être
mettre
dans
un
fichier
dns-remplacer
ensuite
,
l
’
instruction
«
include
»
permettre
de
faire
appel
à
ce
fichier
et
de
l
’
inclure
dans
le
fichier
appelant
.
include
(
«
dns-remplacé
»
)
avec
l
’
instruction
suivant
:
<
?
php
include
(
«
dns-remplacé
»
)
;
?
>
le
code
de
le
page
être
limiter
à
ce
qu
’
elle
contenir
de
spécifique
.
si
on
modifier
le
header
,
on
le
modifier
pour
tout
le
page
.
on
pouvoir
faire
le
même
chose
avec
le
footer
et
le
nav
.
si
le
nav
être
dans
le
header
,
on
pouvoir
mettre
l
’
inclusion
dans
le
fichier
dns-remplacé
syntaxe
include
être
un
fonction
avec
du
parenthèse
à
lequel
on
fournir
le
nom
du
fichier
qu
’
on
vouloir
charger
,
entre
guillemet
,
à
le
différence
de
echo
qui
ne
prendre
pas
de
parenthèse
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
body
avec
include
du
header
et
du
footer
<
body
>
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
?
>
<
section
>
<
/
section
>
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
?
>
<
/
body
>
header
qui
inclure
le
nav
<
header
>
<
h@card@
>
mon
super
site
<
/
h1
>
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
?
>
<
/
header
>
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
solution
HTML
:
l
’
inclusion
de
fichier
en
HTML
L
’
ancien
solution
:
inclusion
de
fichier
en
HTML
:
balise
frame
(
obsolète
)
le
site
qui
n
’
utiliser
pas
de
langage
serveur
utiliser
le
balise
<
frame
>
pour
factoriser
le
page
.
ce
balise
n
’
être
plus
supporter
par
le
HTML
.
elle
être
remplacer
par
le
balise
<
iframe
>
http
:
/
/
dns-remplacer
/
tags
/
tag_
dns-remplacer
le
balise
frame
ne
se
fermer
pas
.
elle
s
’
utiliser
à
l
’
intérieur
d
’
un
balise
<
frameset
>
le
balise
<
iframe
>
:
inclusion
de
fichier
en
HTML
(
déprécier
)
ce
balise
servir
surtout
à
inclure
du
morceau
qu
’
un
autre
site
permettre
de
partager
.
à
ce
adresse
,
le
site
fournir
un
iframe
dans
le
bouton
exporter
:
https
:
/
/
dns-remplacer
/
emettre
/
les-series-musicales-dete
/
les-series-musicales-detelundi-24-juillet-2017
ce
usage
être
toutefois
déprécier
.
<
!
DOCTYPE
html
>
<
html
>
<
body
>
<
iframe
src
=
'
'
https
:
/
/
dns-remplacer
/
player
/
exportreecouter
?
content
=
9c19db61-0761-4b50-b4ae-907f0dbf3259
'
'
width
=
'
'
'
'
frameborder
=
'
'
'
'
scrolling
=
'
'
no
'
'
height
=
'
'
'
'
>
<
p
>
Your
browser
does
not
support
iframes
.
<
/
p
>
<
/
iframe
>
<
/
body
>
<
/
html
>
Widget
le
widgets
tendre
à
remplacer
le
iframe
.
ce
être
de
simple
div
à
copier
dans
son
site
.
un
widget
de
météo
ici
:
http
:
/
/
dns-remplacer
/
Widgets-Meteo
/
/
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
TP
:
Includes
charger
le
zip
<
dns-remplacé
»
il
contenir
un
dossier
avec
un
page
HTML
.
)
réécrire
la
en
sortir
le
header
et
le
footer
dans
du
fichier
séparer
et
en
utiliser
du
include
.
tester
le
résultat
.
)
ensuite
,
mettre
le
fichier
header
et
footer
dans
un
dossier
«
include
»
et
le
fichier
css
dans
in
dossier
«
css
»
.
le
but
être
de
n
’
avoir
que
le
fichier
dns-remplacer
à
le
racine
.
)
ajouter
un
page
qui
contenir
l
’
en-tête
et
le
footer
et
un
section
qui
contenir
uniquement
un
lien
permettre
de
revenir
à
l
’
index
de
le
page
principal
(
dns-remplacer
)
.
dans
dns-remplacé
,
un
du
menu
permettre
d
’
accéder
à
ce
nouveau
page
qu
’
on
appeler
dns-remplacer
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
documentation
principe
le
référence
il
exister
plusieurs
site
de
référence
pour
avoir
de
le
documentation
:
dns-remplacer
:
http
:
/
/
dns-remplacer
/
dns-remplacer
w3school
:
http
:
/
/
dns-remplacer
/
php
/
et
du
cours|cour
:
coder
academy
:
https
:
/
/
dns-remplacer
/
learn
/
php
OpenClassRoom
:
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-etmysql
et
https
:
/
/
dns-remplacer
/
paths
/
developpeur-php-symfony
et
bien
sûr
:
google
!
le
bon
usage
il
falloir
toujours
essayer
de
passer
par
un
documentation
«
officiel
»
pour
comprendre
le
mieux
possible
sans
se
contenter
d
’
un
exemple
qui
marche
.
il
falloir
donc
apprendre
à
se
servir
de
le
documentation
exemple
d
’
usage
:
dns-remplacer
page
d
’
accueil
en
français
http
:
/
/
dns-remplacer
/
manual
/
fr
/
:
on
y
trouver
le
sommaire
liste
du
fonction
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
noter
:
extension
sur
le
mathématique
:
contenir
math
:
fonction
mathématique
traitement
de
texte
:
contenir
chaîne
de
caractère
:
fonction
de
traitement
de
chaine
.
accès
direct
à
un
fonction
:
dns-remplacer
/
nomFonction
dns-remplacer
/
date
:
j
’
arriver
directement
sur
le
fonction
date
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
si
je
remonter
le
menu
de
droit|droite
,
je
revenir
au
niveau
de
le
liste
du
fonction
.
liste
du
thématique
de
fonction
•
audio
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
•
identification
•
ligner
de
commande
•
archivage
et
compression
•
carte
de
crédit
•
cryptographier
•
base
de
donnée
•
date
et
au
heure
•
système
de
fichier
•
langage
humain
et
encodage
de
caractère
•
génération
et
traitement
du
image
•
emails
•
mathématique
•
donnée
non-textuel
•
contrôle
du
processus
•
moteur
de
recherche
•
serveur
•
session
•
traitement
du
texte
•
variable
et
au
type
•
service
Web
•
Windows
•
XML
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
le
base
du
langage
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
http
:
/
/
dns-remplacer
/
php
/
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
base
du
langage
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
du
fichier
de
test
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
définition
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
type
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
vérifier
le
type
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
signification
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
que
pouvoir
on
faire
avec
un
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
on
pouvoir
utiliser
un
variable
dans
un
calcul
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
constante
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
test
:
exemple
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
if
,
else
,
elseif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
de
comparaison
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
logique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
switch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
de
comparaison
ternaire
:
?
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
HTML
dans
le
PHP
ou
séparer
du
PHP
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
HTML
dans
le
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
HTML
séparer
du
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
HTML
dans
le
PHP
avec
balise
heredoc
:
<
<
<
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
boucle
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
While
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
for
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exercice
:
premier
entier
,
carré
et
racine
dans
un
tableau
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
débranchement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
break
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
continu
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
goto
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
bibliothèque
de
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
de
calcul
mathématique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
de
traitement
de
chaine
de
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
de
traitement
de
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
envoi
de
mail
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
générer
du
PDF
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
générer
du
image
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
traiter
du
expression
régulier
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
tableau
numéroter
et
tableau
associatif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
tableau
numéroter
–
exemple
,
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
exercice
–
tableau
de
prénom
et
liste
à
puce
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
tableau
associatif
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
–
tableau-users-Etape-0
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
–
tableau
périodique
du
élément
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
tableau
numéroter
de
tableau
associatif
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
de
manipulation
de
tableau
–
exemple
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
–
tableau-users-Etape-1
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Ecrire
son
propre
fonction
–
exemple
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
d
’
affichage
,
qui
ne
renvoyer
rien
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
qui
renvoyer
un
résultat
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
avec
un
paramètre
en
sortie
:
qui
être
modifier
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
visibilité
du
variable
–
exemple
–
global
,
GLOBALS
,
static
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exercice
–
tableau-users-Etape-2
:
codage
avec
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
filtrer
un
tableau
:
fonction
array_filter
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
–
tableau-users-Etape
:
tri
du
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Edition
:
mars
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
base
du
langage
PHP
installation
du
fichier
de
test
le
exemple
du
cours|cour
être
dans
un
fichier
zip
fournir
avec
l
’
article
du
cours|cour
:
dns-remplacé
.
le
exemple
être
présenter
dans
un
chapitre
en
vert
.
charger
ce
fichier
et
mettez-le
dans
le
dossier
Partie_2
du
répertoire
web
«
www
»
du
serveur
WAMP
.
le
exercice
à
faire
être
présenter
dans
un
chapitre
en
jaune
.
remarque
:
tout
le
fichier
d
’
exemple
commencer
par
ce
trois
ligne
:
echo
'
<
h@card@
>
code
PHP
<
/
h1
>
'
;
highlight_file
(
'
dns-remplacer
'
)
;
echo
'
<
h@card@
>
RESULTATS
<
/
h1
>
'
;
ce
code
afficher
deux
balise
h1
avec
code
PHP
puis
RESULTATS
le
fonction
«
highlight_file
»
permettre
d
’
afficher
le
contenu
du
fichier
proposer
.
quand
on
tester
le
code
,
on
commencer
par
affiche
le
code
.
Ca
permettre
de
voir
le
code
en
même
temps
que
le
résultat
.
pour
généraliser
le
code
,
on
écrire
:
highlight_file
(
basename
(
__FILE__
)
)
;
basename
(
__FILE__
)
permettre
de
récupérer
le
nom
du
fichier
en
cours|cour
de
traitement
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
le
variable
définition
un
variable
être
un
moyen
pour
stocker
en
mémoire
un
information
le
temps
de
le
génération
de
le
page
PHP
un
variable
avoir
un
nom
,
un
valeur
,
un
type
et
un
signification
.
en
PHP
,
le
nom
d
’
un
variable
commencer
par
un
$
par
exemple
:
$
username
être
un
variable
de
type
string
dont
le
signification
être
de
contenir
un
information
qui
être
un
nom
de
l
’
utilisateur
.
le
type
présentation
le
variable
pouvoir
enregistrer
du
information
de
différent
type
:
entier
,
décimal
(
nombre
à
virgule
)
,
texte
et
booléen
(
vrai
ou
faux
)
être
le
principal
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
le
type
entier
:
int
,
,
,
,
etc
et
le
entier
négatif
:
,
,
etc
.
le
type
décimal
:
float
ce
être
le
nombre
à
virgule
:
on
écrire
le
virgule
avec
un
point
.
tant
qu
’
on
n
’
avoir
pas
besoin
d
’
un
précision
extrême
,
il
convenir
très
bien
à
tout
le
calcul
.
le
type
texte
(
ou
chaine
de
caractère
)
:
string
le
chaine
de
caractère
être
écrire
entre
guillemet
ou
apostrophe
.
on
parler
aussi
de
quotter
ou
simple
quotter
ou
simple
guillemet
pour
le
apostrophe
,
de
double
quotter
pour
le
guillemet
.
le
type
booléen
:
bool
pouvoir
prendre
le
valeur
true
ou
false
.
le
valeur
NULL
on
pouvoir
donner
le
valeur
NULL
à
tout
le
variable
,
quel
que
être
leur
type
.
cela
vouloir
dire
que
le
variable
ne
contenir
rien
.
type
tableau
,
objet
,
ressourcer
il
exister
aussi
un
type
pour
le
tableau
(
suite
du
cours|cour
)
,
pour
le
objet
(
cours|cour
POO
)
et
pour
le
ressource
(
un
ressource
être
un
référence
à
un
ressource
externe
:
voir
le
doc
PHP
)
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
vérifier
le
type
quand
on
utiliser
un
variable
,
on
n
’
avoir
pas
besoin
de
lui
préciser
son
type
.
selon
le
valeur
qu
’
on
donner
à
le
variable
,
le
type
être
définir
automatiquement
.
du
fonction
permettre
de
savoir
de
quel
type
être
quel
variable
.
par
exemple
:
is_bool
(
$
maVariable
)
retourne
vrai
(
)
si
$
maVariable
être
un
booléen
,
faux
(
)
sinon
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
is_bool
,
is_float
,
is_numeric
,
etc
.
le
signification
un
variable
servir
à
quelque
chose
,
par
exemple
à
enregistrer
le
nom
de
l
’
utilisateur
.
C
’
être
son
signification
.
on
lui
donner
un
nom
en
rapport
avec
son
signification
.
ce
n
’
être
pas
obligé
,
mais
c
’
être
préférable
.
que
pouvoir
on
faire
avec
un
variable
on
pouvoir
donner
un
valeur
à
un
variable
$
username
=
`
`
Barack
'
'
;
on
parler
d
’
affectation
ou
d
’
assignation
on
pouvoir
afficher
le
contenu
d
’
un
variable
echo
$
username
;
ici
pas
de
guillemet
comme
quand
on
afficher
un
texte
.
on
pouvoir
concaténer
un
variable
à
un
chaine
de
caractère
avec
du
texte
entre
apostrophe
ou
entre
guillemet
,
on
pouvoir
concaténer
un
variable
avec
l
’
opérateur
«
.
»
Echo
'
bonjour
'
.
$
username
.
'
.
comment
aller
vous
?
'
mieux
valoir
utiliser
le
apostrophe
«
‘
»
dans
le
PHP
et
le
guillemet
«
“
»
dans
le
HTML
.
on
pouvoir
afficher
le
contenu
d
’
un
variable
dans
un
chaine
de
caractère
avec
du
texte
entre
guillemet
,
on
pouvoir
mettre
le
variable
directement
dans
le
texte
entre
guillemet
.
Echo
`
`
bonjour
$
username
.
comment
aller
vous
?
'
'
on
éviter
ce
usage
.
on
utiliser
le
précédent
,
avec
le
concaténation
concaténation
:
opérateur
«
.
»
le
«
.
»
permettre
de
concaténer
deux
texte
,
un
variable
et
du
texte
,
deux
variable
.
opérateur
arithmétique
on
utiliser
le
opérateur
classique
:
+
,
-
,
/
,
*
,
%
opérateur
d
’
incrémentation
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
$
i++
équivaloir
à
$
i
=
$
i@card@
attention
,
c
’
être
un
post-incrémentation
:
si
on
faire
«
echo
$
i++
;
c
’
être
le
$
i
avant
l
’
incrémentation
qui
être
afficher
.
exemple
:
on
pouvoir
utiliser
un
variable
dans
un
calcul
<
?
php
$
prix_unitaire
=
;
$
quantite
=
;
$
produire
=
'
'
clé
USB
go
'
'
;
$
prix_total
=
$
quantite
*
$
prix_unitaire
;
echo
'
bonjour
<
br
>
'
;
echo
$
quantite
.
'
'
.
$
produit
.
'
:
'
.
$
prix_total
;
?
>
on
pouvoir
utiliser
le
symbole
classique
de
calcul
:
+
,
-
,
x
,
/
,
%
(
modulo
)
,
et
tout
le
fonction
classique
(
sin
(
)
,
cos
(
)
,
sqrt
(
)
,
pow
(
)
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
à
noter
que
à
gauche
du
signe
=
,
on
modifier
le
valeur
de
le
variable
.
ce
qu
’
il
y
avoir
dans
le
variable
avant
le
modification
être
perdre
.
avoir
droit
du
signe
=
,
on
utiliser
le
valeur
de
le
variable
pour
faire
le
calcul
.
à
noter
aussi
qu
’
on
ne
mettre
pas
de
point
autour
de
le
variable
dans
l
’
echo
,
au
début
de
l
’
echo
,
au
début
de
le
variable
,
à
le
fin
de
le
variable
à
le
fin
de
l
’
echo
.
constant
un
constant
être
un
sorte
de
variable
qui
ne
pouvoir
pas
être
modifier
.
son
nom
être
donner
en
majuscule
par
convention
.
son
valeur
être
donner
par
le
fonction
«
define
»
.
on
y
accéder
sans
utiliser
le
«
$
»
.
<
?
php
define
(
`
`
constant
'
'
,
`
`
bonjour
le
monde
.
`
`
)
;
echo
constant
;
/
/
affiche
`
`
bonjour
le
monde
.
'
'
define
(
'
ANIMALS
'
,
array
(
'
chien
'
,
'
chat
'
,
'
oiseau
'
)
)
;
echo
ANIMALS
[
]
;
/
/
affiche
`
`
chat
'
'
?
>
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
test
:
exemple
et
if
,
else
,
elseif
if
(
$
maVariable
=
=
)
{
instruction
;
}
elseif
(
$
maVariable
>
{
instruction
;
}
else
{
/
*
$
maVariable
<
*
/
instruction
;
}
if
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
else
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
elseif
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
opérateur
de
comparaison
=
=
,
!
=
,
<
,
<
=
,
>
,
>
=
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
#
dns-remplacer
=
=
=
:
vrai
si
le
valeur
être
identique
et
de
même
type
,
!
=
=
opérateur
logique
binaire
:
AND
,
&
&
,
or
,
|
|
(
$
avoir
>
and
$
avoir
<
)
unaire
:
!
(
!
is_int
(
$
avoir
)
)
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
switch
switch
(
$
maVariable
)
{
case
(
)
:
instruction
;
break
;
case
(
)
:
instruction
;
break
;
default
:
instruction
;
}
switch
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
opérateur
de
comparaison
ternaire
:
?
:
$
monResultat
=
(
$
maVarialble
=
=
)
?
true
:
false
;
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
#
dns-remplacer
rnary
HTML
dans
le
PHP
ou
séparer
du
PHP
:
exemple
HTML
dans
le
PHP
<
?
php
if
(
$
variable
<
)
{
echo
<
strong
>
variable
'
.
$
variable
.
'
<
/
strong
>
:
c\'est
négatif
!
'
;
}
?
>
on
pouvoir
mettre
du
variable
dans
l
’
echo
.
il
falloir
utiliser
du
\
’
.
HTML
séparer
du
PHP
<
?
php
if
(
$
variable
<
)
{
?
>
<
strong
>
variable
<
/
strong
>
être
négatif
!
<
?
php
}
?
>
ce
solution
séparer
le
code
HTML
du
code
PHP
.
si
on
avoir
beaucoup
de
code
HTML
,
sans
variable
,
c
’
être
plus
pratique
.
on
éviter
le
\
’
si
on
devoir
ajouter
du
variable
,
c
’
être
inadapté
HTML
dans
le
PHP
avec
balise
heredoc
:
<
<
<
L
’
opérateur
<
<
<
,
qu
’
on
pouvoir
appeler
balise
heredoc
,
permettre
d
’
ouvrir
un
deux
balise
_BALISE
.
tout
le
texte
contenir
dans
le
balise
être
un
chaîne
de
caractère
.
le
apostrophe
et
guillemet
pouvoir
être
traiter
tel
quel
,
sans
\
’
on
pouvoir
y
mettre
directement
du
variable
$
variable
le
balise
fermant
_BALISE
devoir
être
coller
à
le
marge
gauche
et
être
seul
avec
le
;
if
(
$
variable
<
)
{
echo
<
<
<
_BALISE
<
strong
>
variable
$
variable
<
/
strong
>
:
ce
être
négatif
!
<
br
>
_BALISE
;
on
pouvoir
facilement
utiliser
du
variable
et
on
éviter
le
\
’
C
’
être
peu
utiliser
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
boucle
:
exemple
While
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
présentation
while
(
$
cpt
<
)
{
instruction
;
}
tant
que
maVariable
<
,
on
répéter
le
instruction
.
il
falloir
bien
sûr
que
maVariable
soit
modifier
dans
le
instruction
pur
qu
’
on
pouvoir
sortir
de
le
boucle
.
boucler
fois
pour
boucler
fois
on
pouvoir
écrire
$
cpt
=
while
(
$
cpt
<
=
)
{
instruction
;
$
cpt
++
;
}
le
++
permettre
d
’
incrémenter
$
cpt
.
$
cpt
++
;
être
équivalent
à
$
cpt
=
$
cpt
;
for
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
le
boucle
for
être
l
’
équivaloir
de
le
boucle
while
pour
boucler
fois
(
ou
autant
de
fois
qu
’
on
vouloir
)
:
for
(
$
cpt
=
;
$
cpt
<
;
$
cpt++
)
{
instruction
;
}
il
y
avoir
trois
partie
dans
le
for
:
•
L
’
initialisation
de
maVariable
être
dans
le
for
,
en
premier
.
•
le
condition
de
sortie
être
au
milieu
.
•
L
’
incrémentation
de
maVariable
être
en
troisième
position
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
exercice
:
premier
entier
,
carré
et
racine
dans
un
tableau
HTML
Ecrire
un
script
qui
afficher
le
premier
entier
,
le
carré
et
leur
racine
carrer
dans
un
tableau
.
chercher
le
fonction
raciner
carrer
.
résultat
attendre
:
etc
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
débranchement
présentation
instruction
permettre
de
quitter
le
fonctionnement
standard
du
boucle
:
break
qui
faire
quitter
le
boucle
et
continu
qui
permettre
de
passer
au
suivant
.
break
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
while
(
$
maVariable
<
)
{
if
(
$
casParticulierQuiFaitSortir
=
=
true
)
{
ce
qu
’
il
y
avoir
à
faire
break
;
/
/
}
cas
général
}
continuer
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
while
(
$
maVariable
<
)
{
if
(
$
casParticulierQuiFaitPasserAuSuivant
=
=
true
)
{
ce
qu
’
il
y
avoir
à
faire
continu
;
/
/
(
on
passer
au
suivant
)
}
cas
général
}
goto
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
le
goto
permettre
d
’
aller
de
n
’
importer
où
vers
n
’
importer
où
!
C
’
être
à
éviter
!
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
bibliothèque
de
fonction
présentation
il
exister
du
millier
de
fonction
qu
’
on
pouvoir
utiliser
en
PHP
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
fonction
de
calcul
mathématique
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
sqrt
:
raciner
carrer
,
pow
:
puissance
,
round
:
arrondir
,
rand
:
aléatoire
,
min
,
max
,
cos
,
sin
,
etc
.
fonction
de
traitement
de
chaine
de
caractère
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
length
,
substr
,
strpos
,
str_replace
:
longueur
,
extraction
,
position
,
remplacement
.
trim
,
ltrim
:
pour
supprimer
le
espace
au
début
ou
à
le
fin
d
’
un
chaîne
.
chr
,
ord
:
passer
d
’
un
caractère
à
un
nombre
printf
,
fprintf
:
print
formater
(
f
de
fin
)
,
print
formater
dans
un
fichier
(
f
de
début
)
sscanf
:
scan
formater
(
f
de
fin
)
dans
un
string
(
s
de
début
)
fonction
de
traitement
de
date
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
envoi
de
mail
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
générer
du
PDF
en
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
générer
du
image
en
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
creer-desimages-en-php
traiter
du
expression
régulier
en
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
lesexpressions-regulieres-partie-1-2
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
lesexpressions-regulieres-partie-2-2-2
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
mementodes-expressions-regulieres
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
tableau
numéroter
et
tableau
associatif
tableau
numéroter
–
exemple
,
et
présentation
tableau
«
classique
»
:
permettre
de
mettre
plusieurs
valeur
d
’
un
même
type
dans
un
même
variable
.
fonction
array
:
créer
le
tableau
$
prenom
=
array
(
‘
Aurélien
’
,
‘
Isabelle
’
,
‘
Ahmed
’
,
‘
Olivier
’
,
‘
Nour
’
,
‘
Chang
’
)
;
/
/
créer
$
prenom
[
]
,
$
prenom
[
]
jusqu
’
à
$
prenom
[
]
créer
le
tableau
par
le
indice
$
lesPrenom
[
]
=
’
Aurélien
’
;
$
lesPrenom
[
]
=
’
Isabelle
’
;
$
lesPrenom
[
]
=
’
Ahmed
’
;
noter
que
le
premier
élément
du
tableau
être
à
l
’
indice
.
L
’
indice
être
aussi
appeler
clé
.
créer
le
tableau
par
le
indice
automatique
$
lesPrenom
[
]
=
’
Aurélien
’
;
/
/
créer
$
prenom
[
]
$
lesPrenom
[
]
=
’
Isabelle
’
;
/
/
créer
$
prenom
[
]
$
lesPrenom
[
]
=
’
Ahmed
’
;
/
/
créer
$
prenom
[
]
quand
on
utiliser
le
crochet
vide
,
le
nouveau
élément
être
placer
automatiquement
à
le
suite
du
précédent
.
instruction
echo
:
afficher
un
élément
du
tableau
echo
$
prenom
[
]
;
boucle
for
:
afficher
tout
le
tableau
<
?
php
$
lesPrenom
[
]
=
'
Aurélien
'
;
$
lesPrenom
[
]
=
'
Olivier
'
;
$
lesPrenom
[
]
=
'
Ahmed
'
;
for
(
$
indice
=
;
$
indicer
<
count
(
$
lesPrenom
)
;
$
indice++
)
{
echo
'
lesPrenom
[
'
.
$
indice
.
'
]
=
'
.
$
lesPrenom
[
$
indice
]
.
'
<
br
/
>
'
;
}
?
>
noter
le
présence
de
le
fonction
count
pour
avoir
le
nombre
d
’
élément
du
tableau
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
fonction
print-r
(
)
:
affichage
basique
du
tableau
sans
mise
en
forme
affichage
sur
un
seul
ligne
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
print_r
(
$
lesPrenom
)
;
?
>
affichage
ligner
par
ligne
:
avec
le
balise
<
pre
>
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
echo
$
lesPrenom
;
echo
'
<
pre
>
'
;
print_r
(
$
lesPrenom
)
;
echo
'
<
/
pre
>
'
;
?
>
fonction
var_dump
(
)
:
affichage
basique
du
information
d
’
un
variable
affichage
sur
un
seul
ligne
avec
le
type
en
plus
:
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
var_dump
(
$
lesPrenom
)
;
$
i
=
;
var_dump
(
$
i
)
;
?
>
attention
:
il
ne
devoir
pas
y
avoir
de
trou
dans
le
tableau
<
?
php
$
lesPrenom
[
]
=
'
Aurélien
'
;
$
lesPrenom
[
]
=
'
Olivier
'
;
$
lesPrenom
[
]
=
'
Ahmed
'
;
$
lesPrenom
[
]
=
'
Hang
'
;
/
/
cela
affiche
le
prénom
print_r
(
$
lesPrenom
)
;
/
/
le
for
n
’
afficher
rien
pour
$
lesPrenom
[
]
/
/
et
n
’
afficher
pas
$
lesPrenom
[
]
for
(
$
indice
=
;
$
indicer
<
count
(
$
lesPrenom
)
;
$
indice++
)
{
echo
'
lesPrenom
[
'
.
$
indice
.
'
]
=
'
.
$
lesPrenom
[
$
indice
]
.
'
<
br
/
>
'
;
}
?
>
boucler
foreach
:
afficher
tout
le
tableau
,
quel
que
soit
l
’
indice
pour
passer
en
revue
tout
le
élément
du
tableau
,
quel
que
être
leur
numéro
dans
le
tableau
,
on
utiliser
le
foreach
.
dans
le
boucle
foreach
on
mettre
le
tableau
et
le
nom
de
le
variable
qu
’
on
récupérer
dans
le
tableau
.
le
deux
élément
être
séparer
par
un
as
.
le
boucle
foreach
gérer
automatiquement
le
fait
de
démarrer
au
premier
élément
du
tableau
et
d
’
aller
jusqu
’
au
dernier
.
<
?
php
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
foreach
(
$
lesPrenom
avoir
$
unPrenom
)
{
echo
$
unPrenom
.
'
<
br
/
>
'
;
}
?
>
boucler
foreach
$
key
=
>
$
valoir
chaque
élément
d
’
un
tableau
correspondre
à
un
couple
(
key
,
valoir
)
:
le
clé
être
le
numéro
de
l
’
élément
dans
le
tableau
,
le
value
son
valeur
.
on
pouvoir
ajouter
le
$
key
dans
le
boucle
foreach
:
cela
permettre
d
’
accéder
à
le
clé
directement
.
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
echo
'
<
h@card@
>
affichage
foreach
$
key
=
>
$
value
<
/
h2
>
'
;
foreach
(
$
lesPrenom
avoir
$
key
=
>
$
value
)
{
echo
'
$
key
:
'
.
$
key
.
'
<
br
/
>
'
;
echo
'
$
value
:
'
.
$
valoir
.
'
<
br
/
>
'
;
}
?
>
chainer
vers
tableau
:
implode
et
explode
explode
pour
convertir
un
chaine
avec
un
liste
de
valeur
en
tableau
numéroter
implode
pour
convertir
un
tableau
numéroter
en
un
chaine
contenir
le
liste
du
valeur
du
tableau
.
on
préciser
au
fonction
le
séparateur
qu
’
on
trouver
entre
le
valeur
dans
le
chaine
.
$
chainer
=
implode
(
$
sep
,
$
tableau
)
;
$
chainer
=
implode
(
«
<
br
>
»
,
$
tableau
)
;
$
tab
=
explode
(
$
sep
,
$
chaine
)
;
$
tab
=
explode
(
«
,
»
,
$
chaine
)
;
exercice
–
tableau
de
prénom
et
liste
à
puce
Ecrire
un
script
qui
afficher
le
contenu
d
’
un
tableau
de
prénom
dans
un
liste
à
puce
.
le
prénom
être
écrire
en
minuscule
avec
un
majuscule
en
premier
.
résultat
attendre
:
faire
un
version
qui
n
’
affiche
que
le
prénom
dont
le
premier
lettre
venir
après
le
heure
.
chercher
du
information
sur
le
fonction
strcmp
(
)
dans
le
documentation
PHP
.
on
utiliser
un
«
continu
»
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
tableau
associatif
–
exemple
présentation
un
tableau
associatif
être
un
tableau
particulier
qui
permettre
de
mettre
plusieurs
valeur
de
type
différent
dans
un
même
variable
.
C
’
être
l
’
équivaloir
d
’
un
structure
(
struct
)
ou
d
’
un
objet
dans
d
’
autre
langage
.
à
chaque
valeur
on
associer
un
nom
qu
’
on
appeler
clé
ou
attribut
.
ce
nom
être
donc
«
associé
»
à
le
valeur
.
PHP
parler
de
tableau
associatif
.
fonction
array
:
créer
le
tableau
:
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
aurelien1995
'
)
;
créer
le
tableau
par
le
indice
$
utilisateur
[
'
nom
'
]
=
'
toto
'
;
$
utilisateur
[
'
prenom
'
]
=
'
Aurélien
'
;
$
utilisateur
[
'
dateNaissance
'
]
=
;
$
utilisateur
[
'
nomDUtilisateur
'
]
=
'
aurelien1995
'
;
instruction
echo
:
afficher
un
élément
du
tableau
echo
$
utilisateur
[
‘
nomUtilisateur
’
]
;
fonction
print-r
(
)
:
affichage
basique
du
tableau
associatif
sans
mise
en
forme
affichage
sur
un
seul
ligne
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
print_r
(
$
utilisateur
)
;
?
>
affichage
ligner
par
ligne
:
avec
le
balise
<
pre
>
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
echo
'
<
pre
>
'
;
print_r
(
$
utilisateur
)
;
echo
'
<
/
pre
>
'
;
?
>
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
afficher
tout
le
tableau
associatif
:
boucle
foreach
dans
le
boucle
foreach
on
mettre
le
tableau
et
le
nom
de
le
variable
qu
’
on
récupérer
dans
le
tableau
.
le
deux
élément
être
séparer
par
un
as
.
le
boucle
foreach
gérer
automatiquement
le
fait
de
démarrer
au
premier
élément
du
tableau
et
d
’
aller
jusqu
’
au
dernier
.
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
foreach
(
$
utilisateur
avoir
$
element
)
{
echo
$
element
.
'
<
br
/
>
'
;
}
?
>
boucler
foreach
$
key
=
>
$
valoir
chaque
élément
d
’
un
tableau
associatif
,
comme
pour
un
tableau
numéroter
,
correspondre
à
un
couple
(
key
,
valoir
)
.
le
key
correspondre
à
un
attribut
,
le
value
à
son
valeur
.
on
pouvoir
ajouter
le
$
key
dans
le
boucle
foreach
:
cela
permettre
d
’
accéder
à
l
’
attribut
.
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
echo
'
<
h@card@
>
affichage
foreach
avoir
$
key
=
>
$
value
<
/
h2
>
'
;
foreach
(
$
utilisateur
avoir
$
key
=
>
$
value
)
{
echo
'
$
key
:
'
.
$
key
.
'
<
br
/
>
'
;
echo
'
$
value
:
'
.
$
valoir
.
'
<
br
/
>
'
;
}
?
>
exercice
–
tableau-users-Etape-0
on
vouloir
gérer
du
utilisateur
avec
le
caractéristique
suivant
:
prénom
et
nom
(
dans
un
seul
champ
)
,
mail
,
motDePasse
,
age
créer
un
utilisateur
(
vous
!
)
avec
ce
information
dans
un
tableau
associatif
.
afficher
ce
tableau
associatif
avec
un
print_r
avec
un
ligne
par
information
.
afficher
ce
tableau
associatif
dans
un
tableau
HTML
.
exercice
–
tableau
périodique
du
élément
en
chimie
,
le
tableau
périodique
du
élément
associer
un
symbole
à
un
nom
d
’
élément
chimique
.
heure
pour
hydrogène
,
He
pour
Helium
,
etc
.
faire
un
programme
qui
afficher
au
moins
le
premier
élément
dans
un
tableau
HTML
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
vous
pouvoir
trouver
le
autre
sur
Internet
.
résultat
attendre
:
vous
devoir
mettre
le
résultat
dans
un
page
HTML
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
tableau
numéroter
de
tableau
associatif
–
exemple
présentation
on
utiliser
souvent
du
tableau
numéroter
qui
contenir
du
tableau
associatif
.
par
exemple
,
un
tableau
d
’
élève
.
on
utiliser
un
foreach
et
un
foreach
$
key
=
>
$
valoir
.
$
utilisateur
[
]
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
aurelien1995
'
)
;
$
utilisateur
[
]
=
array
(
'
nom
'
=
>
'
tata
'
,
'
prenom
'
=
>
'
Bertrand
'
,
'
dateNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
bertrand1990
'
)
;
$
utilisateur
[
]
=
[
'
Toto3
'
,
'
Olivier
'
,
,
'
olivier1992
'
]
;
$
utilisateur
[
]
=
[
'
Titi4
'
,
'
Ahmed
'
,
,
'
ahmed1990
'
]
;
echo
'
<
h@card@
>
affichage
foreach
<
/
h2
>
'
;
foreach
(
$
utilisateur
avoir
$
user
)
{
echo
'
<
pre
>
'
;
print_r
(
$
user
)
;
echo
'
<
/
pre
>
'
;
}
echo
'
<
h@card@
>
affichage
foreach
skey
=
>
$
value
<
/
h2
>
'
;
foreach
(
$
utilisateur
avoir
$
index
=
>
$
user
)
{
echo
'
<
p
>
<
b
>
$
index
:
'
.
$
index
.
'
<
/
b
>
<
/
p
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
user
)
;
echo
'
<
/
pre
>
'
;
foreach
(
$
user
avoir
$
key
=
>
$
value
)
{
echo
'
<
p
>
$
key
:
'
.
$
key
.
'
<
br
>
'
;
echo
'
$
value
:
'
.
$
valoir
.
'
<
/
p
>
'
;
}
}
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
fonction
de
manipulation
de
tableau
–
exemple
et
il
exister
beaucoup
de
fonction
de
manipulation
de
tableau
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
citer
particulièrement
:
array
pour
créer
un
tableau
count
-
sizeof
count
(
$
monTableau
)
ou
sizeof
(
$
monTableau
)
pour
récupérer
le
nombre
d
’
élément
du
tableau
.
sort
–
exemple
sort
(
$
monTableau
)
pour
trier
un
tableau
numéroter
rsort
(
)
pour
trier
en
sens|sen
inverse
.
exemple
.
tout
le
fonction
de
tri
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
ksort
ksort
(
$
monTableau
)
pour
trier
un
tableau
associatif
selon
le
«
key
»
.
krsort
(
)
pour
trier
en
sens|sen
inverse
.
asort
asort
(
$
monTableau
)
pour
trier
un
tableau
associatif
selon
le
«
value
»
.
arsort
(
)
pour
trier
en
sens|sen
inverse
.
in_array
in_array
(
‘
valeur
’
,
$
monTableau
)
être
vrai
si
‘
valeur
’
être
dans
$
monTableau
.
array_key_exists
–
exemple
array_key_exists
(
$
cle
,
$
monTableauAssociatif
)
être
vrai
si
$
cle
être
un
clé
du
tableau
associatif
$
monTableauAssociatif
.
array-search
array_search
(
‘
Nour
’
,
$
lesPrenom
)
renvoyer
l
’
indice
de
le
valeur
‘
Nour
’
dans
le
tableau
$
lesPrenom
,
soit
dans
notre
exemple
(
cf
.
plus
haut
)
.
shuffle
–
exemple
shuffle
(
$
monTableau
)
pour
mélanger
un
tableau
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
exercice
–
tableau-users-Etape-1
)
on
vouloir
gérer
du
utilisateur
avec
le
caractéristique
suivant
:
prénom
et
nom
(
dans
un
seul
champ
)
,
mail
,
motDePasse
,
age
créer
un
utilisateur
(
vous
!
)
avec
ce
information
dans
un
tableau
associatif
.
afficher
ce
tableau
associatif
avec
un
print_r
avec
un
ligne
par
information
.
)
on
vouloir
créer
non
plus
un
seul
utilisateur
mais
un
tableau
d
’
utilisateur
.
créer
ce
tableau
avec
utilisateur
.
on
créer
le
premier
utilisateur
avec
le
syntaxe
suivant
:
$
lesUtilisateurs
[
]
[
'
nom
'
]
=
'
toto
toto
'
;
etc
.
et
le
autre
avec
ce
syntaxe
:
$
lesUtilisateurs
[
]
=
array
(
'
nom
'
=
>
'
toto
toto
'
,
etc
.
)
)
)
)
afficher
le
utilisateur
créer
avec
un
print_r
afficher
le
utilisateur
avec
un
for
afficher
le
utilisateur
avec
un
foreach
afficher
le
tableau
du
utilisateur
en
HTML
dans
un
tableau
HTML
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
Ecrire
son
propre
fonction
–
exemple
et
fonction
d
’
affichage
,
qui
ne
renvoyer
rien
–
exemple
on
vouloir
afficher
«
Olivier
avoir
an
»
à
partir
du
prénom
et
de
l
’
année
de
naissance
<
?
php
function
afficherAge
(
$
prenom
,
$
anneeNaissance
)
{
$
today
=
getdate
(
)
;
$
age
=
$
today
[
'
year
'
]
-
$
anneeNaissance
;
echo
(
$
prenom
.
'
avoir
'
.
$
age
.
'
an
'
)
;
}
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
anneeNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
aurelien1995
'
)
;
afficherAge
(
$
utilisateur
[
'
prenom
'
]
,
$
utilisateur
[
'
anneeNaissance
'
]
)
;
?
>
le
fonction
avoir
deux
paramètre
en
entrée
:
le
prénom
et
l
’
année
de
naissance
.
elle
calcul
l
’
âge
en
fonction
de
l
’
année
de
naissance
et
de
l
’
année
de
le
date
du
jour
.
le
fonction
getdate
permettre
de
récupérer
l
’
information
.
ensuite
on
utiliser
ce
fonction
à
partir
,
dans
l
’
exemple
,
d
’
un
tableau
associatif
déjà
voir
.
fonction
qui
renvoyer
un
résultat
–
exemple
on
aller
écrire
un
fonction
qui
renvoyer
l
’
âge
à
partir
de
l
’
année
de
naissance
<
?
php
function
calculerAge
(
$
anneeNaissance
)
{
$
today
=
getdate
(
)
;
$
year
=
$
today
[
'
year
'
]
;
$
age
=
$
year-
$
anneeNaissance
;
return
$
age
;
}
$
anneeNaissance
=
;
$
age
=
calculerAge
(
$
anneeNaissance
)
;
echo
(
'
naître
en
'
.
$
anneeNaissance
.
'
:
'
.
$
age
.
'
an
.
'
)
;
?
>
le
fonction
avoir
un
paramètre
en
entrée
:
l
’
année
de
naissance
.
elle
calcul
l
’
âge
en
fonction
de
l
’
année
de
naissance
et
de
l
’
année
de
le
date
du
jour
.
elle
renvoyer
le
résultat
avec
le
return
.
le
fonction
pouvoir
alors
être
utiliser
pour
donner
un
valeur
à
un
variable
,
par
exemple
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
fonction
avec
un
paramètre
en
sortie
:
qui
être
modifier
–
exemple
on
aller
écrire
un
fonction
qui
augmenter
un
employé
.
L
’
employé
être
un
tableau
associatif
avec
son
nom
et
son
salaire
.
le
fonction
recevoir
en
paramètre
l
’
employé
et
l
’
augmentation
.
<
?
php
echo
'
<
h@card@
>
code
PHP
<
/
h1
>
'
;
highlight_file
(
basename
(
__FILE__
)
)
;
echo
'
<
h@card@
>
RESULTATS
<
/
h1
>
'
;
function
augmenter
(
&
$
employe
,
$
augmentation
)
{
$
employe
[
'
salaire
'
]
=
$
employe
[
'
salaire
'
]
+
$
augmentation
;
}
$
emp
=
array
(
'
nom
'
=
>
'
toto
'
,
'
salaire
'
=
>
)
;
print_r
(
$
emp
)
;
echo
'
<
br
>
'
;
augmenter
(
$
emp
,
)
;
print_r
(
$
emp
)
;
?
>
dans
le
fonction
,
on
mettre
un
«
&
»
devant
$
employe
:
c
’
être
ce
qui
faire
qu
’
il
ressortir
modifier
.
le
test
faire
passer
de
à
.
sans
le
«
&
»
,
on
rester
à
.
visibilité
du
variable
–
exemple
–
global
,
GLOBALS
,
static
niveau
de
visibilité
pour
le
variable
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
•
le
variable
de
le
page
ou
variable
global
:
elle
être
visible
dans
le
page
après
leur
premier
apparition
,
sauf
dans
le
fonction
de
le
page
,
sauf
si
elle
être
redéclarer
«
global
»
dans
le
fonction
.
elle
ne
être
pas
visible
dans
le
autre
page
.
à
noter
que
le
variable
de
page
être
appeler
en
général
variable
global
(
global
à
le
page
)
.
à
noter
aussi
qu
’
on
pouvoir
utiliser
le
tableau
associatif
$
GLOBALS
qui
contenir
le
couple
keyvalue
correspondre
au
couple
nomDeVariable-valeurDeVariable
.
•
le
variable
local
:
elle
ne
être
visible
que
dans
le
fonction
où
elle
être
définir
.
•
le
variable
«
static
»
ou
encore
«
locales-global
»
:
elle
ne
être
visible
que
dans
le
fonction
ou
elle
être
définir
mais
elle
garder
leur
valeur
quand
on
revenir
dans
le
fonction
.
circulation
de
l
’
information
entre
fonction
et
entre
page
et
fonction
pour
passer
de
l
’
information
à
un
fonction
,
on
la
passer
en
paramètre
de
le
fonction
.
si
un
variable
vouloir
accéder
à
un
variable
de
le
page
,
elle
devoir
le
déclarer
«
global
»
dans
le
fonction
.
<
?
php
function
test1
(
)
{
$
varGlobale
=
'
test1
'
;
}
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
function
test2
(
)
{
global
$
varGlobale
;
$
varGlobale
=
'
test2
'
;
}
$
varGlobale
=
'
global
'
;
test1
(
)
;
echo
$
varGlobale
.
'
<
br
>
'
;
/
/
affiche
:
global
test2
(
)
;
echo
$
varGlobale
.
'
<
br
>
'
;
/
/
affiche
:
test2
?
>
entre
page
pour
faire
circuler
de
l
’
information
entre
page
,
on
utiliser
le
variable
$
_GET
et
$
_POST
et
aussi
le
variable
$
_SESSION
.
Cf
.
chapitre
suivre
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
exercice
–
tableau-users-Etape-2
:
codage
avec
fonction
on
prendre
le
fichier
de
correction
de
Exercice-tableau-users-Etape-1
.
on
le
dupliquer
et
on
l
’
appeler
dns-remplacer
)
dans
un
nouveau
fichier
appeler
«
dns-remplacer
»
on
aller
créer
un
fonction
permettre
de
créer
un
utilisateur
.
on
l
’
appeler
«
newUser
»
.
Ecriver
ce
fonction
.
mettre
à
jour
le
copie
du
fichier
de
l
’
étape1
pour
qu
’
elle
utiliser
ce
fonction
.
/
/
creation
d
’
un
utilisateur
newUser
(
parametres
à
déterminer
)
;
)
dans
le
fichier
«
dns-remplacé
»
,
ajouter
un
fonction
qui
permettre
d
’
afficher
un
utilisateur
avec
un
print_r
.
mettre
à
jour
le
copie
du
fichier
de
l
’
étape1
pour
qu
’
elle
utiliser
ce
fonction
.
/
/
affichage
du
tableau
avec
un
print_r
print_rUnUser
(
parametres
à
déterminer
)
;
)
dans
le
fichier
«
dns-remplacé
»
,
ajouter
un
fonction
qui
permettre
d
’
afficher
un
utilisateur
champ
par
champ
.
mettre
à
jour
le
copie
du
fichier
de
l
’
étape1
pour
qu
’
elle
utiliser
ce
fonction
.
/
/
affichage
du
tableau
avec
un
print_r
printUnUser
(
parametres
à
déterminer
)
;
)
dans
un
nouveau
fichier
appeler
«
dns-remplacé
»
,
ajouter
un
fonction
qui
permettre
de
créer
un
tableau
d
’
utilisateur
.
le
utilisateur
être
fournir
dans
le
fonction
.
on
appeler
ce
fonction
initTab
.
mettre
à
jour
le
copie
du
fichier
de
l
’
étape1
pour
qu
’
elle
utiliser
ce
fonction
.
/
/
initialisation
de
un
tableau
de
utilisateur
initLesUsers
(
parametres
à
déterminer
)
;
)
ensuite
on
se
doter
d
’
un
fonction
qui
afficher
le
utilisateur
avec
un
print_r
.
ajouter
l
’
appel
à
ce
fonction
dans
le
copie
du
fichier
de
l
’
étape1
.
/
/
affichage
du
tableau
avec
un
print_r
print_rLesUsers
(
$
lesUtilisateurs
)
;
)
ensuite
on
se
doter
d
’
un
fonction
qui
afficher
avec
un
for
.
mettre
à
jour
le
copie
du
fichier
de
l
’
étape1
pour
qu
’
elle
utiliser
ce
fonction
.
/
/
affichage
du
tableau
de
façon
basique
avec
un
for
print_rLesUsersFor
(
$
lesUtilisateurs
)
;
)
ensuite
on
se
doter
d
’
un
fonction
qui
afficher
avec
un
foreach
.
mettre
à
jour
le
copie
du
fichier
de
l
’
étape1
pour
qu
’
elle
utiliser
ce
fonction
.
/
/
affichage
du
tableau
de
façon
basique
avec
un
foreach
print_rLesUsersForeach
(
$
lesUtilisateurs
)
;
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
)
à
le
place
du
âge
,
on
entrer
l
’
année
de
naissance
.
adapter
le
programme
pour
qu
’
on
continuer
à
afficher
le
âge
.
on
se
doter
d
’
un
fonction
calculerAge
(
$
anneeNaissance
)
et
et
mettre
à
jour
le
fonction
printUnUser
(
)
,
le
tout
dans
le
fichier
dns-remplacé
.
)
créer
un
fonction
d
’
affichage
qui
soit
styler
:
par
exemple
on
afficher
dans
un
tableau
HTML
et
on
gérer
un
peu
de
CSS
pour
le
tableau
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
filtrer
un
tableau
:
fonction
array_filter
–
exemple
le
fonction
«
array_filter
»
permettre
de
filtrer
un
tableau
:
<
?
php
$
tab
=
array
(
,
,
,
,
,
,
,
,
,
)
;
echo
'
<
h@card@
>
affichage
tableau
complet
<
/
h2
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
tab
)
;
echo
'
<
/
pre
>
'
;
function
filtreLesPairs
(
$
element
)
{
if
(
$
element
%
=
=
)
return
true
;
else
return
false
;
}
$
tab_filtre
=
array_filter
(
$
tab
,
`
`
filtreLesPairs
'
'
)
;
echo
'
<
h@card@
>
affichage
du
pair
<
/
h2
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
tab_filtre
)
;
echo
'
<
/
pre
>
'
;
?
>
explication
:
on
passer
un
tableau
et
le
nom
d
’
un
fonction
en
paramètre
à
le
fonction
«
array_filter
»
.
ici
,
le
fonction
s
’
appeler
«
filtreLesPairs
»
.
on
définir
ce
fonction
.
elle
avoir
un
paramètre
qui
correspondre
à
un
élément
du
tableau
passer
en
paramètre
à
array_filter
.
on
pouvoir
appeler
ce
paramètre
$
element
.
on
aller
choisir
quel
«
$
element
on
conserver
.
si
on
retourner
true
,
on
conserver
le
$
element
dans
le
tableau
,
sinon
,
on
ne
le
garder
pas
.
ici
,
on
tester
si
l
’
entier
être
divisible
par
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
exercice
–
tableau-users-Etape
:
tri
du
donnée
)
on
vouloir
trier
le
utilisateur
par
nom
.
on
utiliser
le
fonction
«
array_multisort
»
.
son
principe
être
de
créer
un
tableau
avec
uniquement
le
nom
,
puis
de
faire
appel
à
le
fonction
«
array_multisort
»
en
passer
en
paramètre
le
tableau
avec
le
nom
,
un
constant
(
SORT_ASC
pour
dire
que
c
’
être
un
tri
croître
)
et
enfin
le
tableau
du
utilisateur
.
function
triParNomDesc
(
&
$
lesUsers
)
{
/
/
tri
du
tableau
par
nom
/
/
on
commencer
par
fabriquer
le
tableau
du
nom
foreach
(
$
lesUsers
avoir
$
indice
=
>
$
unUser
)
{
$
lesNoms
[
$
indice
]
=
$
unUser
[
'
nom
'
]
;
}
/
/
appel
à
array_multisort
:
le
tableau
à
trier
être
en
dernier
array_multisort
(
$
lesNoms
,
SORT_DESC
,
$
lesUsers
)
;
}
enregistrer
ce
fonction
dans
un
fichier
«
dns-remplacer
»
et
tester
ce
fonction
à
partir
du
résultat
de
l
’
Etape
.
)
avec
le
même
méthode
,
trier
par
âge
décroître
)
avec
le
même
méthode
,
trier
par
âge
et
nom
décroître
)
ensuite
on
aller
généraliser
le
fonction
de
tri
pour
qu
’
elle
pouvoir
trier
selon
n
’
importer
quel
champ
.
)
enfin
on
écrire
un
fonction
qui
tri
selon
champ
,
de
façon
général
.
base
du
PHP
–
environnement
de
développement
–
page
/
-
open
class
Room
ECHANGE
D
’
information
PHP
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Echange
d
’
information
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
.
.
introduction
:
passer
du
variable
dans
l
’
URL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
recherche
dans
google
de
:
«
php
variable
$
_GET
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
installation
du
fichier
de
test
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
méthode
Get
-
URL
-
le
tableau
$
_GET
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
problématique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Exemple-1
:
<
avoir
href
=
'
'
URL
'
'
>
et
tableau
$
_GET
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
toujours
vérifier
le
information
fournir
par
l
’
utilisateur
–
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Exemple-2
:
href-GET-sans-verification
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Exemple-3
:
href-GET-avec-verification
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
de
gestion
du
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
méthode
POST
-
formulaire
-
le
tableau
$
_POST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
rappel
sur
le
formulaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
:
formulaire-POST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
formuaire-GET
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
toujours
vérifier
le
information
fournir
par
l
’
utilisateur
–
:
faille
XSS
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Never
trust
user
input
!
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
solution
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
de
traitement
de
chaîne
de
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
se
protéger
contre
le
faille
:
aide
en
ligne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
:
exercice
password
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
premier
version
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
remarque
:
crypter
le
mot
de
passe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Deuxième
version
:
monofichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
saisir
d
’
un
utilisateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
structure
du
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
conclusion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
$
_SESSION
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
utilisation
du
tableau
associatif
$
_SESSION
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
terminer
un
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
TP
:
synthèse
:
site
user
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
objectif
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Etape
:
affichage
du
utilisateur
avec
un
Header
et
un
Nav
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Etape
:
ajout
du
formulaire
admin-mot
de
passe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Etape
:
page
d
’
administration
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Etape
:
vérifier
le
login
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
base
du
PHP
–
environnement
de
développement
–
page
/
Etape
:
enregistrer
le
nouveau
user
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Etape
:
création
d
’
un
fichier
dns-remplacer
–
fonction
header
(
URL
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
variable
superglobale
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ce
être
du
tableau
associatif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
S_GET
-
$
_POST
-
$
_SESSION
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
$
_COOKIE
et
$
_REQUEST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
S_FILE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
$
_SERVER
et
$
_
ENV
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
afficher
le
superglobale
:
print_r
(
)
ou
var_dump
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
$
_FILE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
objectif
:
upload
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
technique
:
un
formulaire
spécial
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
$
_FILE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
autoriser
l
’
écriture
de
fichier
sur
le
serveur
:
CHMOD
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
syntaxe
général
de
le
manipulation
du
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
algorithmique
du
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
–
tableau-users-Etape-4
:
codage
avec
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
$
_COOKIES
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
principe
de
codage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
modifier
et
supprimer
un
cookie
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
précision
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
bilan
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
construction
d
’
un
site
et
variable
de
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Echange
entre
le
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
appel
d
’
un
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
<
avoir
href
=
«
url
»
>
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
<
form
action
=
«
url
»
method
=
«
»
>
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
header
(
‘
location
:
url
’
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.HTACCESS
et
.HTPASSWD
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.htaccess
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.htpasswd
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Edition
:
mars
base
du
PHP
–
environnement
de
développement
–
page
/
ECHANGES
D
’
information
en
PHP
Manuel
de
référence
du
PHP
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
introduction
:
passer
du
variable
dans
l
’
URL
recherche
dans
google
de
:
«
php
variable
$
_GET
»
résultat
L
’
URL
du
résultat
être
le
suivant
:
https
:
/
/
dns-remplacer
/
#
safe
=
activer
&
q
=
php+variable+
%
24_get
derrière
https
:
/
/
dns-remplacer
/
on
trouver
plusieurs
élément
séparer
par
du
«
&
»
.
on
aller
trouver
:
«
q
=
php+variable+
%
24_GET
»
.
le
variable
q
contenir
le
information
«
php
»
+
«
variable
»
+
«
%
24_get
»
le
%
venir
remplacer
le
$
.
modification
de
l
’
URL
on
pouvoir
modifier
directement
l
’
URL
.
on
mettre
par
exemple
POST
à
le
place
de
GET
.
on
obtenir
le
page
de
recherche
de
«
php
variable
$
_POST
»
simplification
on
pouvoir
écrire
directement
dans
l
’
URL
:
https
:
/
/
dns-remplacer
/
search
?
q
=
php+variable+
%
24_POST
conclusion
C
’
être
à
l
’
adresse
de
l
’
URL
qui
donner
le
page
à
afficher
,
avec
du
paramètre
en
plus
.
exercice
Google
chercher
«
java
»
directement
dans
l
’
URL
de
google
.
page
du
cours|cour
regarder
l
’
URL
de
le
page
du
cours|cour
:
ici
.
quel
être
le
question
poser
dans
l
’
URL
?
modifier
le
valeur
de
l
’
article
,
par
exemple
.
que
constater
vous
?
base
du
PHP
–
environnement
de
développement
–
page
/
installation
du
fichier
de
test
le
exemple
du
cours|cour
être
dans
un
fichier
zip
fournir
avec
l
’
article
du
cours|cour
:
01exemples_GET_
dns-remplacer
charger
ce
fichier
et
mettez-le
dans
le
dossier
Partie_2
du
répertoire
web
«
www
»
du
serveur
WAMP
.
le
exemple
être
présenter
dans
un
chapitre
en
vert
.
le
exercice
à
faire
être
présenter
dans
un
chapitre
en
jaune
.
remarque
:
tout
le
fichier
d
’
exemple
commencer
souvent
par
ce
trois
ligne
:
echo
'
<
h@card@
>
code
PHP
<
/
h1
>
'
;
highlight_file
(
'
dns-remplacer
'
)
;
echo
'
<
h@card@
>
RESULTATS
<
/
h1
>
'
;
ce
code
afficher
deux
balise
h1
avec
code
PHP
puis
RESULTATS
le
fonction
«
highlight_file
»
permettre
d
’
afficher
le
contenu
du
fichier
proposer
.
quand
on
tester
le
code
,
on
commencer
par
affiche
le
code
.
Ca
permettre
de
voir
le
code
en
même
temps
que
le
résultat
.
pour
généraliser
le
code
,
on
écrire
:
highlight_file
(
basename
(
__FILE__
)
)
;
basename
(
__FILE__
)
permettre
de
récupérer
le
nom
du
fichier
en
cours|cour
de
traitement
.
méthode
Get
-
URL
-
le
tableau
$
_GET
problématique
comment
faire
passer
du
information
d
’
un
page
web
à
un
autre
?
passer
d
’
un
page
à
un
autre
pouvoir
se
faire
avec
du
<
avoir
href
=
'
'
URL
'
'
>
.
on
venir
de
voir
qu
’
on
pouvoir
passer
du
information
sur
l
’
URL
.
on
aller
donc
pouvoir
passer
du
information
d
’
un
page
à
un
autre
de
ce
manière
.
Exemple-1
:
<
avoir
href
=
'
'
URL
'
'
>
et
tableau
$
_GET
objectif
L
’
objectif
être
,
à
partir
d
’
un
premier
page
(
le
page
d
’
appel
)
de
faire
appel
à
un
deuxième
page
(
le
page
appelé
)
en
passer
du
information
qui
circuler
à
travers
l
’
URL
.
principe
:
un
passage
de
paramètre
•
on
utiliser
un
<
avoir
href
=
'
'
URL
'
'
>
link
text
<
/
avoir
>
•
dans
l
’
URL
,
on
aller
mettre
le
paramètre
.
•
dans
le
page
appelé
,
le
paramètre
se
retrouver
dans
un
tableau
associatif
de
paramètre
:
$
_GET
base
du
PHP
–
environnement
de
développement
–
page
/
page
appelant
:
avoir
href
fichier
:
index_appel_
dns-remplacer
C
’
être
un
page
HTML
ou
PHP
(
il
falloir
l
’
exécuter
via
le
serveur
web
)
avec
un
<
avoir
href
>
:
<
DOCTYPE
html
>
<
html
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
$
_GET-Appelant
<
/
title
>
<
/
head
>
<
body
>
<
h@card@
>
test
de
$
_GET
<
/
h@card@
>
<
p
>
rendre
vous
sur
<
avoir
href
=
'
'
dns-remplacé
?
prenom
=
Bertrand
&
amp
;
nom
=
Liaudet
'
'
>
un
bonjour
personnaliser
avec
$
_GET
<
/
avoir
>
<
!
--
syntaxe
:
?
nom
de
variable
=
valeur
&
nom
de
variable
=
etc
.
--
>
<
/
p
>
<
/
body
>
<
/
html
>
href
=
'
'
dns-remplacer
?
prenom
=
Bertrand
&
amp
;
nom
=
Liaudet
'
'
>
•
le
nom
du
fichier
:
dns-remplacer
•
un
?
•
nom
de
variable
=
information
(
prenom
=
Bertrand
)
le
information
envoyé
aller
remplir
le
tableau
associatif
$
_GET
•
le
variable
être
séparer
par
du
«
&
»
.
on
écrire
«
&
amp
;
»
car
le
«
&
»
tout
seul
créer
un
confusion
en
HTML
.
•
on
avoir
un
deuxième
variable
avec
son
valeur
:
nom
=
Liaudet
pager
appeler
:
$
_GET
fichier
:
dns-remplacer
<
?
php
echo
'
<
h@card@
>
code
PHP
:
<
/
h1
>
'
;
highlight_file
(
basename
(
__FILE__
)
)
;
echo
'
<
h@card@
>
RESULTATS
:
<
/
h1
>
'
;
echo
'
<
h@card@
>
tableau
$
_GET
:
<
/
h3
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
_GET
)
;
echo
'
<
/
pre
>
'
;
?
>
<
DOCTYPE
html
>
<
html
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
$
_GET-Appelé
<
/
title
>
<
/
head
>
<
body
>
<
h@card@
>
page
appeléeee
par
un
&
lt
;
avoir
href
=
'
'
URL
'
'
&
gt
;
<
/
h1
>
base
du
PHP
–
environnement
de
développement
–
page
/
<
h@card@
>
du
paramètre
être
passer
le
URL
dans
le
tableau
$
_GET
:
<
/
h@card@
>
<
p
>
bonjour
<
?
php
echo
$
_GET
[
'
prenom
'
]
.
'
'
.
$
_GET
[
'
nom
'
]
;
?
>
<
/
p
>
<
/
body
>
<
/
html
>
explication
dans
le
page
appelé
,
on
avoir
un
tableau
associatif
$
_GET
qui
contenir
le
clé
et
le
valeur
fournir
dans
le
page
appelant
:
array
(
[
prenom
]
=
>
Bertrand
[
nom
]
=
>
Liaudet
)
on
pouvoir
donc
exploiter
ce
tableau
associatif
comme
on
vouloir
dans
le
page
appelé
.
&
alt
;
avoir
permettre
d
’
avoir
un
<
&
gt
;
permettre
d
’
avoir
un
>
code
spécial
HTML
:
ici
.
précision
Ø
URL
:
on
voir
le
paramètre
...
dns-remplacer
?
prenom
=
Bertrand
&
nom
=
Liaudet
(
dans
l
’
adresser
le
espace
être
traduire
par
%
)
Ø
sécurité
–
confidentialité
L
’
information
qui
circuler
être
visible
sur
le
lien
URL
.
il
falloir
donc
faire
attention
à
le
limiter
à
un
information
non
confidentiel
.
Ø
limite
en
général
,
le
navigateur
n
’
accepter
pas
du
url
de
plus
de
caractère
.
il
falloir
donc
éviter
de
passer
trop
d
’
information
par
ce
moyen
.
base
du
PHP
–
environnement
de
développement
–
page
/
toujours
vérifier
le
information
fournir
par
l
’
utilisateur
–
présentation
on
avoir
voir
qu
’
on
pouvoir
voir
dans
l
’
URL
le
information
fournir
par
l
’
utilisateur
.
on
pouvoir
aussi
modifier
ce
information
ou
la|le
supprimer
directement
dans
l
’
URL
.
Ca
pouvoir
être
gênant
pour
le
fonctionnement
du
site
.
il
falloir
donc
faire
du
vérification
.
Exemple-2
:
href-GET-sans-verification
code
sans
vérification
on
pouvoir
tester
le
résultat
si
on
donner
de
mauvais
valeur
en
changer
l
’
URL
.
on
pouvoir
ralentir
le
serveur
ou
générer
un
erreur
.
Exemple-3
:
href-GET-avec-verification
code
avec
vérification
on
vérifier
tout
le
cas
à
problème
possible
:
<
?
php
echo
'
<
h@card@
>
on
attendre
un
nombre
du
programme
appeler
<
/
h2
>
'
;
if
(
!
isset
(
$
_GET
[
'
nombre
'
]
)
)
{
echo
'
<
p
>
pas
de
nombre
recevoir
!
<
/
p
>
'
;
}
else
{
/
/
cast
:
si
$
_GET
ne
être
pas
un
entier
,
on
obtenir
$
nombre
=
(
int
)
$
_GET
[
'
nombre
'
]
;
if
(
$
_GET
[
'
nombre
'
]
>
or
$
_GET
[
'
nombre
'
]
<
=
)
{
echo
'
<
p
>
le
nombre
recevoir
n\'est
pas
valide
!
<
/
p
>
'
;
}
else
{
echo
'
<
p
>
nous
aller
compter
jusqu\
'
à
'
.
$
nombre
.
'
<
/
p
>
'
;
for
(
$
i
=
;
$
i
<
=
$
_GET
[
'
nombre
'
]
;
$
i++
)
{
echo
(
'
<
p
>
'
.
$
i
.
'
<
/
p
>
'
)
;
}
}
}
?
>
vérifier
que
le
information
attendre
exister
:
isset
(
$
var
)
isset
(
)
être
vrai
s
’
il
y
avoir
quelque
chose
dans
le
variable
,
faux
sinon
.
on
pouvoir
aussi
utiliser
le
fonction
empy
(
)
Transtypage
(
cast
)
:
forcer
le
type
d
’
un
variable
:
(
int
)
$
_GET
[
‘
nombre
’
]
être
forcément
un
chaine
de
caractère
.
on
pouvoir
tester
si
elle
contenir
du
chiffre
avec
le
fonction
ctype_digit
(
)
.
on
peu
aussi
«
caster
»
directement
$
_GET
[
‘
nombre
’
]
avec
un
(
int
)
.
si
$
_GET
[
‘
nombre
’
]
n
’
être
pas
un
entier
,
le
cast
renvoyer
.
base
du
PHP
–
environnement
de
développement
–
page
/
fonction
de
gestion
du
variable
il
exister
de
nombreux
fonction
qui
permettre
de
faire
ce
vérification
.
ce
être
particulièrement
le
fonction
de
gestion
du
variable
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
base
du
PHP
–
environnement
de
développement
–
page
/
méthode
POST
-
formulaire
-
le
tableau
$
_POST
rappel
sur
le
formulaire
principe
le
formulaire
être
l
’
outil
de
base
pour
échanger
du
information
avec
le
visiteur
.
http
:
/
/
dns-remplacer
/
html
/
html_
dns-remplacé
http
:
/
/
dns-remplacer
/
tags
/
att_form_
dns-remplacé
http
:
/
/
dns-remplacer
/
IMG
/
pdf
/
HTML_4_Fonctionnalites_
dns-remplacer
chapitre
:
le
formulaire
,
page
à
:
<
form
>
et
<
input
>
syntaxe
de
base
•
exemple
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
<
p
>
<
label
for
=
'
'
nom
'
'
>
nom
<
/
label
>
<
input
type
=
'
'
text
'
'
name
=
'
'
nom
'
'
id
=
'
'
nom
'
'
maxlength
=
'
'
'
'
placeholder
=
'
'
votre
nom
'
'
>
<
/
p
>
<
p
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
<
/
p
>
<
/
form
>
•
le
balise
form
contenir
attribut
principal
:
method
et
action
.
•
le
balise
form
contenir
du
balise
inclure
qui
permettre
de
:
@ord@
caractériser
le
type
de
formulaire
(
champ
de
saisie
,
bouton
,
menu
dérouler
,
etc
.
)
@ord@
fournir
du
variable
à
passer
à
le
page
appeler
via
le
tableau
associatif
$
_GET
ou
$
_POST
.
principe
C
’
être
un
passage
de
paramètre
(
comme
dans
un
appel
de
fonction
)
de
page
à
page
.
le
paramètre
se
retrouver
dans
un
tableau
associatif
de
paramètre
:
$
_GET
ou
$
_POST
le
code
HTML
de
le
page
appelant
remplir
le
$
_GET
ou
le
$
_POST
dans
le
page
appelé
,
on
accéder
au
élément
du
tableau
associatif
$
_GET
ou
$
_POST
le
attribut
de
le
méthode
form
•
L
’
attribut
method
permettre
de
choisir
le
technique
de
transfert
d
’
information
.
il
y
en
avoir
:
GET
ou
POST
.
le
méthode
GET
être
celui
déjà
voir
qui
faire
transiter
l
’
information
dans
l
’
URL
.
on
limiter
l
’
information
à
caractère
.
le
méthode
POST
permettre
d
’
envoyer
du
gros
contenu
d
’
information
et
de
cacher
le
transit
au
utilisateur
.
on
utiliser
préférentiellement
le
méthode
POST
dans
le
formulaire
.
•
L
’
attribut
action
dire
quel
autre
page
être
appeler
avec
ce
balise
form
,
quand
on
valider
sur
un
bouton
par
exemple
,
et
donc
à
quel
page
on
envoyer
du
information
.
ce
être
un
page
php
(
ou
n
’
importer
quel
autre
page
d
’
un
langage
serveur
)
qui
être
capable
de
traiter
le
information
transmettre
.
on
pouvoir
aussi
faire
appel
à
le
même
page
.
base
du
PHP
–
environnement
de
développement
–
page
/
le
balise
inclure
dans
le
balise
form
•
le
balise
input
:
c
’
être
le
principal
balise
de
saisie
.
elle
fournir
en
général
un
champ
de
saisie
.
mais
aussi
du
saisie
«
typé
»
:
téléphone
,
mail
,
couleur
,
etc
.
elle
fournir
aussi
le
bouton
de
validation
.
•
le
balise
textarea
:
fournir
un
zone
de
texte
à
saisir
•
le
balise
select
:
fournir
un
menu
dérouler
•
le
balise
fieldset
:
permettre
de
regrouper
dans
un
cadre
plusieurs
élément
de
saisie
.
le
balise
legend
joue
le
rôle
d
’
un
label
pour
ce
cadre
.
•
le
balise
label
:
elle
permettre
de
mettre
un
texte
associer
à
le
zone
de
saisie
.
http
:
/
/
dns-remplacer
/
html
/
html_form_input_
dns-remplacer
attribut
fondamental
du
balise
inclure
:
name
et
value
,
pour
remplir
$
_GET
ou
$
_POST
pour
chaque
élément
d
’
un
formulaire
(
un
champ
de
saisie
,
un
bouton
,
un
menu
dérouler
,
etc
.
)
,
on
pouvoir
définir
un
«
name
»
qui
être
le
nom
de
le
variable
qu
’
on
retrouver
dans
$
_
$
GET
ou
$
_POST
et
qui
être
accessible
dans
le
page
appelé
.
ce
«
name
»
être
donc
un
variable
passée
en
paramètre
pour
le
page
appelé
.
on
pouvoir
définir
aussi
un
«
value
»
qui
être
le
valeur
de
le
variable
définir
par
le
«
name
»
.
le
«
value
»
pouvoir
être
fournir
à
travers
un
variable
avec
le
php
ou
n
’
importer
quel
langage
serveur
.
à
noter
que
le
«
value
»
pouvoir
aussi
être
un
valeur
qui
s
’
affiche
dans
le
formulaire
(
par
exemple
le
texte
du
bouton
de
validation
)
.
exemple
:
formulaire-POST
page
appelant
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
code
du
formulaire
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
<
p
>
<
label
for
=
'
'
prenom
'
'
>
prenom
<
/
label
>
<
input
type
=
'
'
text
'
'
name
=
'
'
prenom
'
'
id
=
'
'
prenom
'
'
placeholder
=
'
'
votre
prenom
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
nom
'
'
>
nom
<
/
label
>
<
input
type
=
'
'
text
'
'
name
=
'
'
nom
'
'
id
=
'
'
nom
'
'
placeholder
=
'
'
votre
nom
'
'
>
<
/
p
>
<
p
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
<
/
p
>
<
/
form
>
dans
l
’
input
:
•
le
type
définir
le
type
de
saisie
:
ici
du
texte
•
le
name
être
un
clé
du
tableau
associatif
$
_POST
ou
$
_GET
,
ici
$
_POST
•
L
’
id
servir
pour
le
CSS
•
si
le
for
du
<
label
>
être
égal
à
l
’
id
,
un
clic
sur
le
label
conduire
dans
l
’
input
pour
éviter
le
confusion
.
•
placeholder
:
un
info
pour
le
saisie
,
en
grisé
page
appelé
:
$
_POST
<
p
>
bonjour
<
?
php
echo
$
_POST
[
'
prenom
'
]
.
'
'
.
$
_POST
[
'
nom
'
]
;
?
>
<
/
p
>
base
du
PHP
–
environnement
de
développement
–
page
/
le
tableau
$
_POST
fonctionner
comme
le
tableau
$
_GET
:
c
’
être
un
tableau
associatif
.
le
name
être
du
clé
(
key
)
du
tableau
$
_POST
:
ce
être
le
cas
pour
tout
le
autre
formulaire
.
quand
on
tester
,
on
constater
qu
’
il
n
’
y
avoir
pas
d
’
information
dans
l
’
URL
.
exemple
:
formuaire-GET
page
appelant
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
GET
'
'
>
code
du
formulaire
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
GET
'
'
>
pager
appeler
:
$
_GET
<
p
>
bonjour
<
?
php
echo
$
_GET
[
'
prenom
'
]
.
'
'
.
$
_GET
[
'
nom
'
]
;
?
>
<
/
p
>
dans
ce
cas
,
le
variable
transiter
via
l
’
URL
.
on
pouvoir
la|le
voir
dans
l
’
URL
.
base
du
PHP
–
environnement
de
développement
–
page
/
toujours
vérifier
le
information
fournir
par
l
’
utilisateur
–
:
faille
XSS
Never
trust
user
input
!
principe
:
envoyer
du
code
avec
le
méthode
POST
,
l
’
information
envoyer
être
cacher
.
mais
on
pouvoir
envoyer
n
’
importer
quoi
et
particulièrement
du
code
HTML
ou
JavaScript
qui
nuire
à
l
’
utilisation
normal
du
site
,
en
afficher
par
exemple
du
contenu
inadapté
.
L
’
envoi
de
code
à
le
place
d
’
un
texte
,
c
’
être
ce
qu
’
on
appeler
le
faille
XSS
exemple
et
le
exemple
précédent
ne
être
pas
protéger
.
on
pouvoir
saisir
un
simple
balise
HTML
,
ou
du
code
JavaScript
,
ou
du
balise
HTML
complexe
(
un
formulaire
!
)
Ø
saisir
de
balise
dans
le
test
précédent
,
à
le
place
de
saisir
un
simple
nom
:
«
Bertrand
»
,
on
pouvoir
saisir
«
<
h@card@
>
Bertrand
<
/
h1
>
dans
ce
cas
,
le
balise
<
h@card@
>
être
interpréter
et
le
texte
apparaître
en
très
gros
.
Ø
saisir
de
code
javascript
on
pouvoir
aussi
ajouter
un
code
JavaScript
:
<
script
type
=
'
'
text
/
javascript
'
'
>
alert
(
'
un
virus
avoir
être
détecter
!
Veuillez
vous
rendre
sur
dns-remplacé
'
)
<
/
script
>
!
le
exemple
précédent
ne
être
pas
très
grave
,
mais
avec
du
code
JavaScript
,
un
pirate
pouvoir
récupérer
le
information
privé
d
’
un
utilisateur
.
Ø
rôle
du
navigateur
safari
(
apple
)
protéger
automatiquement
contre
le
intrusion
XSS
(
et
pas
firefox
)
.
Firefox
,
laisser
passer
le
Javascript
solution
:
exemple
principe
PHP
fournir
deux
fonction
qui
permettre
de
traiter
le
code
interprétable
comme
un
simple
chaîne
de
caractère
.
fonction
htmlspecialchar
le
fonction
htmlspecialchars
permettre
que
le
code
insérer
soit
traiter
comme
du
texte
normal
.
htmlspecialchar
(
$
_POST
[
'
nom
'
]
)
ainsi
si
on
saisir
:
<
h@card@
>
Bertrand
<
/
h1
>
,
le
site
afficher
:
bonjour
<
h@card@
>
Bertrand
<
/
h1
>
:
le
balise
h1
n
’
avoir
pas
être
prise
en
compte
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
transformation
du
caractère
spécial
«
<
»
en
caractère
normal
«
&
lt
;
»
quand
on
regarder
le
code
source
d
’
un
page
avec
un
htmlspecialchar
,
on
voir
que
le
«
<
»
qui
être
interpréter
par
le
navigateur
comme
le
début
d
’
un
balise
être
remplacer
par
«
&
lt
;
»
qui
permettre
au
navigateur
d
’
afficher
un
<
base
du
PHP
–
environnement
de
développement
–
page
/
C
’
être
le
cas
dans
safari
,
mais
pas
dans
Firefox
ni
chrome
.
fonction
htmlentities
le
fonction
htmlentities
être
équivalent
à
le
fonction
htmlspecialchars
en
encore
plus
restrictif
:
tout
le
caractère
qui
avoir
du
équivalent
HTML
être
traduire
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
fonction
de
traitement
de
chaîne
de
caractère
Htmlspecialchars
et
htmlentities
être
du
fonction
de
traitement
de
chaîne
de
caractère
.
tout
le
fonction
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
on
y
trouver
par
exemple
:
ltrim
(
suppression
du
espace
en
trop
)
,
ucfirst
(
upper
case
pour
le
premier
lettre
)
,
etc
.
mais
aussi
:
printf
et
sprintf
le
fonction
printf
permettre
d
’
écrire
un
chaine
avec
du
variable
«
formater
(
comme
un
«
echo
»
mais
formater
)
.
le
fonction
sprintf
permettre
de
retourner
lef
résultat
dans
un
chaine
.
exemple
printf
(
«
le
prix
être
%
.2f
euro
»
,
$
prix
)
;
le
résultat
afficher
pour
le
prix
le
être
avec
chiffre
après
le
virgule
.
%
s
:
string
%
f
:
float
avec
plusieurs
chiffre
après
le
virgule
.
%
d
:
entier
%
c
:
caractère
etc
.
tout
le
documentation
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
tester
du
code
:
http
:
/
/
dns-remplacer
se
protéger
contre
le
faille
:
aide
en
ligne
https
:
/
/
dns-remplacer
/
course
/
protegez-vous-efficacement-contre-les-failles-web
base
du
PHP
–
environnement
de
développement
–
page
/
TP
:
exercice
password
premier
version
objectif
donner
l
’
accès
à
un
page
qui
contenir
du
information
cacher
pour
celui
qui
avoir
le
mot
de
passe
.
si
on
n
’
avoir
pas
le
bon
mot
de
passe
,
on
revenir
sur
le
page
d
’
accueil
.
méthode
D
’
abord
réfléchir
sur
papier
!
quel
être
le
page
en
jeu
?
un
,
plusieurs
?
comment
le
page
communiquer
elle
entre
elle
?
premier
analyse
•
un
page
d
’
accueil
:
un
formulaire
de
saisie
d
’
un
mot
de
passe
.
en
HTML
.
•
le
mot
de
passe
saisir
dans
le
formulaire
être
envoyer
dans
le
tableau
$
_POST
à
le
page
action
,
en
PHP
,
qui
vérifier
que
le
mot
de
passe
être
bon
avant
d
’
afficher
le
information
cacher
.
•
si
le
mot
de
passe
être
faux
,
il
falloir
afficher
un
message
d
’
erreur
•
dans
tout
le
cas
,
le
page
appeler
permettre
de
revenir
sur
le
page
appelant
.
Elément
de
solution
dans
le
page
action
on
trouver
ce
code
:
if
(
isset
(
$
_POST
[
'
password
'
]
)
AND
htmlspecialchar
(
$
_POST
[
'
password
'
]
)
=
=
'
password
'
)
{
remarque
:
crypter
le
mot
de
passe
circulation
sur
le
réseau
:
https
le
mot
de
passe
apparaître
donc
dans
le
page
action
.
toutefois
,
il
être
dans
le
code
php
(
dans
un
if
)
,
il
ne
être
donc
jamais
visible
sur
navigateur
du
poste
client
.
C
’
être
donc
correctement
sécuriser
si
le
serveur
être
lui
aussi
sécuriser
!
mais
:
si
on
faire
circuler
le
mot
de
passe
sur
le
réseau
,
il
y
avoir
un
risque
.
C
’
être
le
https
qui
permettre
de
sécuriser
le
circulation
.
enregistrement
dans
le
BD
en
pratique
,
le
mot
de
passe
être
récupérer
dans
le
BD
:
mais
:
le
mot
de
passe
devoir
être
enregistrer
crypté
dans
le
BD
.
pour
crypter
,
on
utiliser
le
fonction
crypt
:
$
hashed_password
=
crypt
(
$
password
)
pour
décrytpter
,
on
écrire
le
code
suivre
,
password
être
le
mot
de
passe
saisi
,
hashed_password
le
mot
de
passe
récupérer
dans
le
BD
.
if
(
crypt
(
$
password
,
$
hashed_password
)
=
=
$
hashed_password
)
{
base
du
PHP
–
environnement
de
développement
–
page
/
echo
`
`
mot
de
passe
correct
!
`
`
;
}
else
{
echo
`
`
mot
de
passe
incorrect
!
`
`
;
}
Deuxième
version
:
monofichier
on
souhaiter
tout
coder
dans
un
seul
fichier
.
le
page
action
être
le
page
d
’
accueil
elle
même
.
il
aller
falloir
tester
le
différent
cas
au
début
de
le
page
d
’
accueil
:
•
Est
on
dans
le
cas
où
il
falloir
afficher
le
formulaire
?
$
_POST
[
'
password
'
]
n
’
être
pas
setté
•
Est
on
dans
le
cas
où
le
mot
de
passe
être
le
bon
?
$
_POST
[
'
password
'
]
=
«
password
»
•
Est
on
dans
le
cas
où
le
mot
de
passe
être
mauvais
?
$
_POST
[
'
password
'
]
!
=
«
password
»
base
du
PHP
–
environnement
de
développement
–
page
/
exemple
:
saisir
d
’
un
utilisateur
structure
du
code
on
vouloir
obtenir
le
page
suivant
:
utilisation
de
fonction
on
aller
utiliser
le
fonction
«
printLesUsersHTML
(
)
»
qu
’
on
avoir
définir
dans
le
exercice
sur
le
tableau
d
’
utilisateur
.
base
du
PHP
–
environnement
de
développement
–
page
/
en
cas
d
’
erreur
:
si
on
ne
saisir
pas
tout
le
champ
,
on
afficher
le
message
qu
’
on
voir
en
jaune
base
du
PHP
–
environnement
de
développement
–
page
/
structure
de
le
page
HTML
le
page
HTML
aller
utiliser
variable
PHP
:
$
lesUsers
et
$
msgErr
.
on
avoir
donc
un
page
HTML
classique
,
avec
un
tout
petit
peu
de
PHP
,
en
gris
:
<
!
DOCTYPE
html
>
<
html
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
link
rel
=
'
'
stylesheet
'
'
href
=
'
'
dns-remplacer
'
'
/
>
<
title
>
tableau
<
/
title
>
<
/
head
>
<
body
>
<
?
php
echo
'
<
h@card@
>
affichage
du
utilisateur
<
/
h2
>
'
;
printLesUsersHTML
(
$
lesUsers
)
;
?
>
<
h@card@
>
entrer
le
information
dun
utilisateur
<
/
h@card@
>
<
p
>
tout
le
champ
être
obligatoire
<
/
h@card@
>
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
<
fieldset
>
<
legend
>
entrer
le
bon
mot
de
passe
pour
accéder
au
code
secret
<
/
legend
>
<
p
>
<
label
for
=
'
'
nom
'
'
>
nom
et
prénom
<
/
label
>
<
input
type
=
'
'
nom
'
'
name
=
'
'
nom
'
'
id
=
'
'
password
'
'
placeholder
=
'
'
nom
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
mail
'
'
>
mail
<
/
label
>
<
input
type
=
'
'
mail
'
'
name
=
'
'
mail
'
'
id
=
'
'
mail
'
'
placeholder
=
'
'
mail
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
mail
'
'
>
mot
de
passe
<
/
label
>
<
input
type
=
'
'
password
'
'
name
=
'
'
password
'
'
id
=
'
'
password
'
'
placeholder
=
'
'
password
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
annee
'
'
>
année
naissance
<
/
label
>
<
input
type
=
'
'
annee
'
'
name
=
'
'
annee
'
'
id
=
'
'
password
'
'
placeholder
=
'
'
annee
'
'
>
<
/
p
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
lesUsers
'
'
value
=
'
<
?
php
echo
serialize
(
$
lesUsers
)
?
>
'
>
<
p
>
<
input
type
=
'
'
submit
'
'
name
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
<
/
p
>
<
/
fieldset
>
<
/
form
>
<
?
php
if
(
isset
(
$
msgErr
)
)
{
echo
$
msgErr
;
}
?
>
<
/
body
>
<
/
html
>
base
du
PHP
–
environnement
de
développement
–
page
/
code
PHP
le
code
PHP
être
placer
tout
du
début
.
il
y
avoir
étape
:
)
le
debug
:
on
afficher
$
_POST
)
on
inclure
le
fonction
)
on
initialiser
le
variable
:
ici
$
lesUsers
)
on
traiter
le
cas
où
on
avoir
valider
le
saisie
.
<
?
php
/
/
:
debut
echo
'
$
_POST
:
'
;
print_r
(
$
_POST
)
;
echo
'
<
br
>
'
;
/
/
:
inclusion
du
fonction
include_once
(
`
`
dns-remplacer
'
'
)
;
include_once
(
`
`
dns-remplacer
'
'
)
;
/
/
:
on
initialiser
le
tableau
du
user
$
lesUsers
=
initLesUsers
(
)
;
/
/
:
si
on
on
avoir
valider
le
formulaire
if
(
isset
(
$
_POST
[
'
submit
'
]
)
)
{
/
/
on
charger
le
bon
$
lesUsers
$
lesUsers
=
unserialize
(
$
_POST
[
'
lesUsers
'
]
)
;
/
/
si
le
saisie
ne
être
pas
complet
if
(
!
isset
(
$
_POST
[
'
nom
'
]
)
or
ltrim
(
$
_POST
[
'
nom
'
]
)
=
=
'
'
or
!
isset
(
$
_POST
[
'
mail
'
]
)
or
ltrim
(
$
_POST
[
'
mail
'
]
)
=
=
'
'
or
!
isset
(
$
_POST
[
'
annee
'
]
)
or
ltrim
(
$
_POST
[
'
annee
'
]
)
=
=
'
'
or
!
isset
(
$
_POST
[
'
password
'
]
)
or
ltrim
(
$
_POST
[
'
password
'
]
)
=
=
'
'
)
{
$
msgErr
=
'
<
h@card@
style
=
'
'
background-color
:
yellow
'
'
>
tout
le
champ
être
obligatoire
<
/
h2
>
'
;
}
/
/
si
le
saisie
être
complet
,
on
récupérer
le
$
lesUsers
et
on
ajouter
le
saisi
else
{
$
lesUsers
[
]
=
newUser
(
$
_POST
[
'
nom
'
]
,
$
_POST
[
'
mail
'
]
,
$
_POST
[
'
passwo
rd
'
]
,
$
_POST
[
'
annee
'
]
)
;
}
}
?
>
base
du
PHP
–
environnement
de
développement
–
page
/
conclusion
avec
ce
organisation
,
on
avoir
séparer
le
PHP
du
HTML
.
C
’
être
un
premier
étape
vers
le
MVC
.
le
page
HTML-PHP
aller
souvent
ressembler
à
<
?
php
/
/
partie
PHP
session_start
(
)
;
/
/
si
on
ouvrir|ouvrer
un
session
,
c
’
être
faire
en
1er
etc
.
?
>
<
DOCTYPE
html
>
<
!
--
partie
HTML
--
>
<
/
html
>
base
du
PHP
–
environnement
de
développement
–
page
/
$
_SESSION
présentation
•
un
«
session
»
c
’
être
un
instance
de
fonctionnement
d
’
un
programme
.
•
elle
avoir
un
début
et
un
fin
.
•
pour
un
site
web
,
un
session
,
c
’
être
un
fonctionnement
du
site
pour
un
client
,
c
’
est-à-dire
un
navigateur
.
•
chaque
session
contenir
du
information
qui
pouvoir
être
accessible
à
tout
le
page
.
ce
information
être
ranger
dans
le
tableau
associatif
$
_SESSION
précision
technique
comment
faire
le
serveur
pour
savoir
qu
’
il
s
’
agir
de
tel
ou
tel
utilisateur
?
C
’
être
le
cookie
de
session
qui
permettre
de
garantir
cela
.
ce
cookie
n
’
avoir
de
sens|sen
que
pour
le
serveur
web
et
ne
donner
aucun
information
sur
l
’
utilisateur
.
on
y
revenir
dans
le
chapitre
sur
le
cookies
.
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
session-cookies
utilisation
du
tableau
associatif
$
_SESSION
le
démarrage
d
’
un
session
devoir
se
faire
avant
tout
code
HTML
.
session_start
(
)
pour
pouvoir
utiliser
le
variable
$
_SESSION
il
falloir
appeler
le
fonction
session_start
(
)
.
tout
le
page
qui
vouloir
utiliser
$
_SESSION
devoir
appeler
session_start
(
)
<
?
php
session_start
(
)
;
?
>
<
DOCTYPE
html
>
L
’
appel
de
le
fonction
devoir
se
faire
au
tout
début
de
le
page
,
avant
le
<
DOCTYPE
html
>
$
_SESSION
$
_SESSION
s
’
utiliser
comme
un
tableau
associatif
.
pour
enregistrer
un
donnée
dans
$
_SESSION
on
écrire
:
$
_SESSION
[
'
administrateur
'
]
=
'
Bertrand
'
;
un
fois
le
clé
«
administrateur
»
créer
,
on
pouvoir
tester
si
elle
exister
:
If
(
isset
(
$
_SESSION
[
'
administrateur
'
]
)
{
echo
'
bonjour
'
.
$
_SESSION
[
'
administrateur
'
]
;
echo
'
vous
être
connecter
et
pouvoir
accéder
au
back-office
'
;
}
terminer
un
session
plusieurs
technique
pouvoir
terminer
un
session
.
:
unset
(
$
_SESSION
[
'
administrateur
'
]
)
base
du
PHP
–
environnement
de
développement
–
page
/
un
«
unset
»
ne
finir
pas
vraiment
le
session
,
mais
supprimer
un
clé
dans
$
_SESSION
.
un
test
avec
«
isset
»
donner
donc
un
réponse
faux
.
:
$
_SESSION
=
array
(
)
ce
instruction
supprimer
tout
le
variable
de
sssion
.
:
patienter
!
timeout
on
bouillir
d
’
un
certain
temps
sans
activité
,
le
«
timeout
»
,
le
variable
de
session
être
supprimer
.
:
se
déconnecter
:
fermer
le
client
,
donc
le
navigateur
.
•
si
on
quitter
le
navigateur
,
le
variable
de
session
être
supprimer
.
•
à
noter
que
fermer
le
page
sans
fermer
le
navigateur
ne
supprimer
pas
le
variable
de
session
.
•
à
noter
aussi
que
certain
site
conserver
le
variable
de
session
(
le
connexion
typiquement
)
même
quand
on
avoir
fermer
le
navigateur
.
dans
ce
cas
,
il
utiliser
le
cookies
.
on
y
revenir
.
:
session_destroy
(
)
;
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
le
fonction
bloquer
l
’
effet
du
session_start
(
)
sans
supprimer
le
donnée
.
un
nouveau
session_start
(
)
permettre
d
’
y
réaccéder
.
base
du
PHP
–
environnement
de
développement
–
page
/
TP
:
synthèse
:
site
user
objectif
:
consulter
le
utilisateur
se
connecter
comme
admin
pour
pouvoir
ajouter
un
utilisateur
.
coder
en
séparer
le
PHP
du
HTML
.
on
reprendre
la|le
corriger
du
exercice
tableau
user
étape
2-fonction
et
étape
3-tri
.
Etape
:
affichage
du
utilisateur
avec
un
Header
et
un
Nav
L
’
objectif
être
d
’
obtenir
le
page
suivant
:
dns-remplacer
CSS
pour
obtenir
ce
résultat
,
le
CSS
être
fournir
.
header
-
nav
pour
qu
’
il
fonctionner
,
on
gérer
un
header
HTML
qui
contenir
un
nav
avec
le
lien
«
le
user
»
.
le
nav
avoir
un
id
=
nav
.
base
du
PHP
–
environnement
de
développement
–
page
/
le
mieux
être
de
mettre
le
header
dans
un
fichier
séparer
:
dns-remplacer
,
le
tout
dans
un
dossier
«
include
»
.
initLesUsers
(
)
,
printLesUsers
(
)
le
tableau
du
utilisateur
être
obtenir
en
utiliser
le
fonction
initLesUsers
(
)
et
printLesUsersHTML
qui
être
fournir
dans
le
fichier
dns-remplacé
qu
’
il
falloir
donc
inclure
.
triParNomDesc
(
)
,
triParNomAsc
(
)
on
ajouter
deux
bouton
:
«
tri
par
nom
desc
»
et
«
tri
par
nom
asc
»
.
on
aller
utiliser
le
fonction
triParNomDesc
(
)
et
triParNomAsc
(
)
qui
être
définir
dans
le
fichier
dns-remplacé
.
après
avoir
utiliser
le
fonction
initLesUsers
(
)
,
on
devoir
donc
vérifier
s
’
il
y
avoir
un
tri
à
faire
.
affichage
débug
au
debut
du
fichier
,
on
écrire
:
echo'POST
:
'
;
print_r
(
$
_POST
)
;
echo
'
<
br
/
>
'
;
echo'GET
:
'
;
print_r
(
$
_GET
)
;
echo
'
<
br
/
>
'
;
echo'URL
:
'
;
print_r
(
$
_SERVER
[
'
PHP_SELF
'
]
)
;
echo
'
<
br
/
>
'
;
structure
du
code
:
très
impotant
!
!
!
dossier
:
on
se
doter
d
’
un
dossier
css
et
d
’
un
dossier
include
.
on
ne
laisser
à
le
racine
que
dns-remplacer
.
dans
le
fichier
dns-remplacé
,
on
commencer
par
du
code
php
:
le
debug
L
’
initialisation
du
tableau
le
tri
du
tableau
ensuite
,
on
mettre
le
code
HTML
:
<
!
DOCTYPE
html
>
etc
.
base
du
PHP
–
environnement
de
développement
–
page
/
Etape
:
ajout
du
formulaire
admin-mot
de
passe
objectif
:
on
ajouter
le
formulaire
de
connexion
à
le
page
d
’
administration
qui
permettre
de
saisir
un
nouveau
utilisateur
.
le
formulaire
pour
obtenir
ce
résultat
avec
notre
CSS
,
on
ajouter
dans
le
nav
le
formulaire
«
admin
,
password
,
ok
»
.
le
formulaire
un
id
=
admin
.
le
bouton
ok
amener
sur
le
page
dns-remplacer
,
qu
’
on
aller
écrire
à
le
page
suivant
.
le
variable
du
formulaire
s
’
appeler
«
admin
»
et
«
password
»
.
base
du
PHP
–
environnement
de
développement
–
page
/
Etape
:
page
d
’
administration
L
’
objectif
être
d
’
obtenir
le
page
suivant
:
dns-remplacer
Ø
header
on
de
doter
d
’
un
nouveau
header
:
dns-remplacer
(
on
dupliquer
dns-remplacer
)
.
on
faire
le
mise
à
jour
en
ajouter
un
lien
:
«
Admin
le
user
»
et
en
modifier
le
formulaire
de
saisie
.
pour
gérer
l
’
utilisateur
connecter
,
on
avoir
enregistrer
le
valeur
admin
et
mot
de
passe
dans
$
_SESSION
.
Ø
fichier
dns-remplacé
on
dupliquer
le
fichier
dns-remplacer
et
on
supprimer
ce
qui
concerner
le
tri
.
Ø
formulaire
de
saisi
base
du
PHP
–
environnement
de
développement
–
page
/
pour
afficher
le
formulaire
de
saisie
d
’
un
nouveau
utilisateur
,
on
utiliser
l
’
exercice
de
l
’
étape
:
03exercice-tableau-users-formulaire
Ø
gérer
tout
le
entrée
dans
le
deux
page
dans
un
premier
temps
,
on
ne
gérer
aucun
conséquence
du
bouton
autre
que
l
’
accès
à
le
page
:
on
ne
vérifier
pas
le
mot
de
passe
,
on
n
’
enregistrer
pas
le
nouveau
user
.
base
du
PHP
–
environnement
de
développement
–
page
/
Etape
:
vérifier
le
login
objectif
:
on
vérifier
de
mot
de
passe
.
en
cas
d
’
erreur
,
on
afficher
un
page
d
’
erreur
.
en
cas
de
réussite
,
on
faire
en
sorte
que
l
’
utilisateur
rester
connecter
même
s
’
il
cliquer
sur
le
menu
«
le
user
»
.
on
gérer
le
déconnexion
.
page
d
’
erreur
pour
obtenir
le
page
d
’
erreur
,
on
créer
un
nouveau
page
:
dns-remplacer
C
’
être
un
page
HTML
qui
inclure
le
dns-remplacé
et
affiche
le
message
d
’
erreur
.
on
pouvoir
tester
directement
ce
page
.
vérification
du
login
–
mot-de-passe
dans
le
page
d
’
admin
,
on
vérifier
au
début
si
on
avoir
bien
recevoir
le
bon
login
–
motDePasse
.
on
vérifier
que
le
deux
champ
être
settés
et
qu
’
il
contenir
,
par
exemple
«
admin
»
et
«
admin
»
.
si
c
’
être
le
cas
,
on
enregistrer
le
valeur
de
$
_SESSION
[
‘
admin
’
]
.
on
commencer
donc
par
faire
un
session_start
(
)
en
début
de
page
.
ensuite
on
tester
si
$
_SESSION
[
‘
admin
’
]
être
setté
.
si
ce
n
’
être
pas
le
cas
,
on
include
dns-remplacer
et
on
quitter
le
page
.
on
ajouter
un
echo'SESSION
:
'
;
print_r
(
$
_SESSION
)
;
echo
'
<
br
/
>
'
;
pour
le
debug
.
gestion
de
le
déconnexion
dans
le
page
user
,
on
tester
si
$
_POST
[
'
deconnexion
'
]
être
setté
(
on
venir
du
bouton
déconnexion
)
.
si
c
’
être
le
cas
,
on
unset
$
_SESSION
[
'
admin
'
]
dans
le
page
d
’
admin
,
si
on
cliquer
sur
le
user
,
on
revenir
à
le
page
user
.
il
falloir
rester
sur
admin
.
pour
cela
,
quand
on
afficher
le
page
admin
,
il
falloir
selectionner
le
header
ou
le
headerAdmin
selon
que
le
$
_SESSION
[
‘
admin
’
]
être
setté
ou
pas
.
base
du
PHP
–
environnement
de
développement
–
page
/
Etape
:
enregistrer
le
nouveau
user
objectif
:
on
reprendre
l
’
exercice
de
l
’
étape
:
03-exercice-tableau-users-formulaire
ce
exercice
permettre
d
’
ajouter
un
utilisateur
dans
le
tableau
en
gérer
un
champ
hidden
et
le
fonction
serialize
(
)
.
solution
:
dans
ce
exercice
,
il
falloir
faire
circuler
le
tableau
du
utilisateur
entre
tout
le
page
,
dans
tout
le
cas
.
le
plus
simple
être
de
le
mettre
dans
$
_SESSION
.
on
avoir
donc
un
instruction
:
$
_SESSION
[
'
lesUsers
'
]
=
serialize
(
$
lesUsers
)
;
dans
le
page
dns-remplacer
avant
d
’
initialiser
le
tableau
$
lesUsers
,
on
tester
si
$
_SESSION
[
'
lesUsers
'
]
être
setté
.
si
c
’
être
le
cas
,
$
lesUsers
valoir
le
contenu
de
$
_SESSION
[
'
lesUsers
'
]
.
$
lesUsers
=
unserialize
(
$
_SESSION
[
'
lesUsers
'
]
)
;
dans
le
page
dns-remplacer
pour
initialiser
le
tableau
$
lesUsers
,
on
le
récupérer
dans
$
_SESSION
:
$
lesUsers
=
unserialize
(
$
_SESSION
[
'
lesUsers
'
]
)
;
ensuite
on
faire
l
’
insertion
du
nouveau
user
,
s
’
il
y
avoir
lieu
ensuite
mettre
à
jour
le
$
_SESSION
:
$
_SESSION
[
'
lesUsers
'
]
=
serialize
(
$
lesUsers
)
;
insertion
du
nouveau
user
on
pouvoir
reprendre
l
’
exercice
de
l
’
étape
:
03-exercice-tableau-users-formulaire
en
l
’
adapter
un
peu
.
base
du
PHP
–
environnement
de
développement
–
page
/
Etape
:
création
d
’
un
fichier
dns-remplacer
–
fonction
header
(
URL
)
objectif
on
vouloir
que
le
projet
démarrer
tout
seul
quand
on
arriver
dans
le
dossier
.
idée
on
pouvoir
choisir
de
renommer
le
page
dns-remplacer
en
dns-remplacé
et
de
mettre
à
jour
tout
le
appel
à
ce
page
dans
le
code
.
ce
être
long
et
à
refaire
si
on
changer
de
page
d
’
accueil
!
solution
:
le
fonction
header
(
URL
)
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Header
permettre
de
demander
un
URL
,
un
peu
comme
un
href
.
on
pouvoir
donc
passer
du
paramètre
,
comme
pour
tout
URL
.
ce
être
utile
quand
on
passer
au
MVC
.
elle
devoir
impérativement
être
utiliser
avant
tout
code
HTML
.
Ø
exemple
de
fichier
avec
header
<
?
php
header
(
'
location
:
dns-remplacer
'
)
;
?
>
base
du
PHP
–
environnement
de
développement
–
page
/
le
variable
SUPERGLOBALES
présentation
ce
être
du
tableau
associatif
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
le
variable
superglobale
être
du
tableau
associatif
.
elle
être
accessible
à
tout
moment
dans
le
page
,
quel
que
être
le
contexte
(
particulièrement
dans
le
fonction
)
.
S_GET
-
$
_POST
-
$
_SESSION
on
avoir
déjà
aborder
variable
superglobale
.
$
_COOKIE
et
$
_REQUEST
$
_COOKIE
être
un
variable
utiliser
pour
conserver
du
information
sur
avoir
machine
client
via
du
cookies
.
Cf
.
chapitre
suivre
.
$
_REQUEST
contenir
par
défaut
$
_COOKIE
,
$
_GET
et
$
_POST
.
S_FILE
$
_FILES
:
être
un
variable
utiliser
pour
le
téléchargement
de
fichier
via
HTTP
par
le
méthode
POST
.
Cf
.
chapitre
suivre
.
$
_SERVER
et
$
_
ENV
$
_SERVER
:
variable
concerner
le
serveur
et
le
programme
.
on
y
trouver
par
exemple
:
$
_SERVER
[
‘
REMOTE_ADDR
’
]
qui
être
l
’
adresse
IP
du
client
qui
demander
le
page
courant
.
$
_ENV
:
variable
concerner
le
variable
d
’
environnement
du
serveur
.
ce
superglobale
être
rarement
utiliser
.
afficher
le
superglobale
:
print_r
(
)
ou
var_dump
(
)
le
fonction
print_r
et
var_dump
afficher
le
tableau
associatif
en
ligne
.
avec
le
balise
<
PRE
>
<
/
PRE
>
,
on
pouvoir
avoir
un
affichage
avec
un
ligne
par
couple
key-value
.
base
du
PHP
–
environnement
de
développement
–
page
/
$
_FILE
objectif
:
upload
transmettre
un
fichier
à
un
script
PHP
.
Ø
gestion
du
chargement
de
fichier
•
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Ø
chargement
de
fichier
par
méthode
POST
•
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
Ø
$
_FILES
•
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
•
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
transmettredes-donnees-avec-les-formulaire
technique
:
un
formulaire
spécial
•
un
balise
FORM
avec
un
attribut
method
=
'
'
POST
'
'
et
un
attriubt
enctype
=
'
'
multipart
/
formdata
'
'
•
un
balise
input
avec
un
attribut
typer
=
'
'
file
'
'
et
un
attribut
name
=
'
'
le
clé
du
nom
du
fichier
dans
$
_FILES
'
'
exemple
:
$
_FILE
le
fichier
de
le
balise
<
FORM
>
il
contenir
le
formulaire
suivre
:
<
form
method
=
'
'
post
'
'
action
=
'
'
dns-remplacer
'
'
enctype
=
'
'
multipart
/
form-data
'
'
>
sélectionner
un
fichier
:
<
input
type
=
'
'
file
'
'
name
=
'
'
userfile
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
>
<
/
form
>
L
’
attribut
name
donner
le
nom
de
le
clé
dans
le
tableau
associatif
$
_FILES
qui
avoir
comme
valeur
le
fichier
qu
’
on
avoir
uploadé
.
le
input
typer
=
«
file
»
générer
un
interface
de
sélection
de
fichier
sur
l
’
ordinateur
client
.
le
fichier
d
’
action
Ø
résultat
-
$
_FILE
dans
le
page
dns-remplacé
,
le
variable
$
_FILE
[
‘
userfile
’
]
être
définir
,
avec
le
champ
suivant
:
name
,
type
,
size
,
tmp_name
,
error
.
Array
(
[
userfile
]
=
>
Array
(
[
name
]
=
>
dns-remplacé
base
du
PHP
–
environnement
de
développement
–
page
/
[
type
]
=
>
text
/
php
[
tmp_name
]
=
>
/
application
/
MAMP
/
tmp
/
php
/
phpYpRqlW
[
error
]
=
>
[
size
]
=
>
)
)
Ø
move_uploaded_file
dans
le
page
action
,
on
aller
mettre
le
fichier
charger
dans
le
répertoire
qu
’
on
vouloir
.
le
fichier
être
charger
dans
un
répertoire
temporaire
:
$
_FILE
[
‘
userfile
’
]
[
‘
tmp_name
]
.
pour
le
mettre
où
on
vouloir
,
on
utiliser
le
fonction
:
move_uploaded_file
(
$
nomDuFichierTmpSurLeServeur
,
$
nomDuFichierSurLeSite
)
$
nomFile
=
$
_FILES
[
'
userfile
'
]
[
'
name
'
]
;
echo
'
fichier
charger
:
'
.
$
nomFile
.
'
<
br
>
'
;
$
tmpDir
=
$
_FILES
[
'
userfile
'
]
[
'
tmp_name
'
]
;
echo
'
fichier
stocker
temporairement
ici
:
'
.
$
tmpDir
.
'
<
br
>
'
;
/
/
on
uploade
le
fichier
temporaire
$
tmpDir
:
le
nouveau
fichier
/
/
s
’
appeler
$
nomFile
,
il
se
trouver
dans
le
repertoire
courant
,
/
/
le
repertoire
du
fichier
php
qui
s
’
exécuter
$
res
=
move_uploaded_file
(
$
tmpDir
,
$
uploadDir
.
$
nomFile
)
;
if
(
$
res
)
echo
'
Upload
réussi
<
br
>
'
;
else
echo
'
L\'upload
avoir
échouer
<
br
>
'
;
test
on
tester
avec
un
upload
d
’
un
fichier
qui
pouvoir
se
trouver
n
’
importer
ou
sur
le
machine
du
navigateur
.
on
pouvoir
uploader
n
’
importer
quel
fichier
.
le
programme
de
test
afficher
le
contenu
du
fichier
texte
,
du
fichier
php
et
sql
,
du
image
.
base
du
PHP
–
environnement
de
développement
–
page
/
le
fichier
présentation
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
lire-et-ecrire-dansun-fichier-5
le
fichier
permettre
d
’
enregistrer
du
information
sur
le
serveur
pour
la|le
consulter
ou
la|le
modifier
ultérieurement
.
le
fonctionnement
général
être
celui
du
langage
C
.
autoriser
l
’
écriture
de
fichier
sur
le
serveur
:
CHMOD
CHMOD
être
un
commande
linux
pour
donner
du
droit
en
lecture
,
écriture
et
exécution
sur
le
fichier
et
le
dossier
.
pour
écrire
dans
un
fichier
sur
le
serveur
,
il
falloir
que
le
dossier
qui
contenir
le
fichier
donner
le
droit
au
utilisateur
de
lire
et
d
’
écrire
(
et
éventuellement
d
’
exécuter
)
.
C
’
être
le
valeur
.
le
manipulation
se
faire
directement
sur
le
serveur
,
à
travers
à
logiciel
FTP
par
exemple
.
syntaxe
général
de
le
manipulation
du
fichier
il
y
avoir
étape
dans
le
manipulation
du
fichier
:
:
créer
et
ouvrir
un
fichier
•
fopen
(
)
:
le
traitement
Ø
Ø
Ø
Ecrire
dans
le
fichier
:
•
fputs
(
)
pour
écrire
un
ligne
,
•
fputc
(
)
pour
écrire
un
caractère
,
•
fprintf
(
)
pour
écrire
un
chaîne
formater
,
•
etc
.
lire
dans
le
fichier
:
•
fgets
(
)
pour
lire
un
ligne
,
•
fgetc
(
)
pour
lire
un
caractère
,
fseek
pour
se
déplacer
dans
le
fichier
,
•
fscanf
(
)
pour
lire
un
chaîne
formater
,
•
etc
.
se
déplacer
dans
le
fichier
,
•
fseek
(
)
:
fermer
un
fichier
•
fclose
(
)
base
du
PHP
–
environnement
de
développement
–
page
/
algorithmique
du
fichier
le
type
fichier
ce
type
être
essentiellement
un
pointeur
qui
donner
le
adresse
de
un
élément
du
fichier
(
de
abord
le
adresse
du
premier
élément
du
fichier
.
mais
il
aller
aussi
contenir
de
autre
information
:
ce
être
en
faire
un
structure
dont
le
un
du
champ
contenir
le
adresse
de
le
élément
courir
du
fichier
.
il
falloir
bien
comprendre
que
dans
le
programme
,
il
y
avoir
un
variable
habituel
(
un
structure
comme
ne
importer
quel
structure
)
qui
contenir
le
adresse
de
un
élément
de
un
fichier
.
ptfich
fichier
ad
programmer
se
ROM
ouvrir
un
fichier
et
le
créer
si
nécessaire
:
fopen
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
$
ptfich
=
fopen
(
`
`
nomDuFichierSurLeDisque
'
'
,
`
`
mode
d
’
ouverture
'
'
)
;
le
nom
du
fichier
sur
le
disque
pouvoir
être
absoudre
ou
relatif
.
il
y
avoir
plusieurs
mode
d
’
ouverture
du
fichier
:
r
,
r+
,
w
,
w+
,
a+
,
etc
.
«
r
»
permettre
le
lecture
seul
,
«
r+
»
le
lecture
et
l
’
écriture
,
«
w
»
l
’
écriture
seul
avec
création
si
le
fichier
n
’
exister
pas
,
«
w+
»
,
le
lecture
et
l
’
écriture
avec
création
si
le
fichier
n
’
exister
pas
,
etc
.
voir
le
documentation
de
référence
pour
le
détail
.
fermer
un
fichier
:
fclore
il
falloir
fermer
le
fichier
qu
’
on
utiliser
pour
permettre
à
d
’
autre
de
la|le
utiliser
.
$
booléen
fclose
(
$
ptFich
)
;
lire
dans
un
fichier
$
string
fgets
(
$
ptFich
)
;
fgets
permettre
de
lire
le
ligne
courant
.
il
y
avoir
d
’
autre
fonction
fgetc
,
fscanf
,
fread
,
etc
.
voir
par
exemple
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
et
son
chapitre
voir
aussi
.
écrire
dans
un
fichier
$
int
fwrite
(
$
ptFich
,
$
string
)
;
fwrite
écrire
le
$
string
passer
en
paramètre
.
fputs
être
un
alias
de
fwrite
.
le
fonction
retourner
le
nombre
d
’
octet
écrire
.
=
false
,
si
octet
écrire
.
le
fonction
fprintf
être
un
autre
fonction
permettre
d
’
écrire
dans
un
fichier
avec
un
système
de
formatage
.
base
du
PHP
–
environnement
de
développement
–
page
/
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
se
déplacer
dans
un
fichier
on
pouvoir
se
déplacer
dans
un
fichier
d
’
un
nombre
d
’
octet
préciser
.
si
le
nombre
être
négatif
,
on
partir
de
le
fin
du
fichier
.
fseek
(
$
ptFich
,
nombreDOctets
)
;
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
repérer
le
fin
du
fichier
on
pouvoir
vérifier
à
tout
moment
si
le
$
ptfich
être
arriver
à
le
fin
du
ficher
.
$
booléen
feof
(
$
ptFich
)
;
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
exemple
–
tableau-users-Etape-4
:
codage
avec
fichier
on
reprendre
l
’
étape
ou
l
’
étape
et
on
aller
rajouter
du
fonction
de
traitement
de
fichier
.
on
se
doter
d
’
un
fonction
d
’
écriture
du
tableau
$
lesUsers
dans
un
fichier
:
function
ecrireLesUsersDansFichier
(
$
nomFichier
,
$
lesUsers
)
et
d
’
un
fonction
de
lecture
d
’
un
tableau
$
lesUsers
à
partir
d
’
un
fichier
:
function
lireLesUsersDansFichier
(
$
nomFichier
,
&
$
lesUsers
)
fonction
ecrireLesUsersDansFichier
function
ecrireLesUsersDansFichier
(
$
nomFichier
,
$
lesUsers
)
{
$
ptfich
=
fopen
(
$
nomFichier
,
`
`
w
'
'
)
;
foreach
(
$
lesUsers
avoir
$
unUser
)
{
foreach
(
$
unUser
avoir
$
element
)
{
echo
$
element
.
'
--
'
;
fprintf
(
$
ptfich
,
`
`
%
s
--
`
`
,
$
element
)
;
}
echo
'
<
br
/
>
'
;
fprintf
(
$
ptfich
,
`
`
\n
'
'
)
;
/
/
\n
tout
seul
pour
le
saut
de
ligne
}
fclose
(
$
ptfich
)
;
}
le
fonction
commencer
par
un
fopen
qui
retourner
un
$
ptfich
:
chercher
l
’
usage
de
fopen
.
pour
écrire
dans
un
fichier
,
on
passer
«
w
»
au
fopen
.
ensuite
on
écrire
dans
le
fichier
avec
un
fprintf
:
chercher
l
’
usage
de
fprintf
.
pour
passer
à
le
ligne
,
on
écrire
:
fprintf
(
$
ptfich
,
`
`
\n
'
'
)
;
enfin
,
un
fclose
ferme
le
fichier
.
fonction
lireLesUsersDansFichier
function
lireLesUsersDansFichier
(
$
nomFichier
,
&
$
lesUsers
)
{
$
ptfich
=
fopen
(
$
nomFichier
,
`
`
r
'
'
)
;
while
(
!
feof
(
$
ptfich
)
)
{
/
/
on
lire
param
car
prénom
et
nom
être
chaîne
séparer
/
/
on
mettre
la|le
--
car
il
être
dans
le
fichier
base
du
PHP
–
environnement
de
développement
–
page
/
/
/
on
considérer
que
le
champ
ne
contenir
pas
de
espace
$
lectureOK
=
fscanf
(
$
ptfich
,
`
`
%
s
%
s
--
%
s
--
%
s
--
%
s
--
`
`
,
$
prenom
,
$
nom
,
$
mail
,
$
motDePasse
,
$
anneeNaissance
)
;
if
(
!
$
lectureOK
)
{
/
/
si
on
avoir
un
pb
.
de
lecture
,
on
sortir
return
;
/
/
on
pouvoir
gérer
cela
plus
finement
!
}
$
unUser
=
newUser
(
$
prenom
.
'
'
.
$
nom
,
$
mail
,
$
motDePasse
,
$
anneeNaissance
)
;
printUnUser
(
$
unUser
)
;
$
lesUsers
[
]
=
$
unUser
;
}
fclose
(
$
ptfich
)
;
return
;
}
le
fonction
commencer
par
un
fopen
en
mode
«
r
»
.
on
lire
dans
le
fichier
avec
un
fscanf
:
on
récupérer
ainsi
tout
le
champ
d
’
un
utilisateur
.
on
créer
l
’
utilisateur
et
on
le
mettre
dans
$
lesUtilisateurs
.
enfin
,
un
fclose
ferme
le
fichier
.
base
du
PHP
–
environnement
de
développement
–
page
/
$
_COOKIES
:
exemple
présentation
le
cookies
être
du
petit
fichier
(
<
4ko
)
stocker
par
le
navigateur
sur
le
poste
client
pour
conserver
du
information
pour
un
prochain
fois
.
il
pouvoir
ainsi
garder
un
trace
de
le
visite
d
’
un
site
pour
le
visite
suivant
.
on
la|le
appeler
aussi
témoin
de
connexion
.
seul
le
domaine
qui
avoir
créer
le
cookie
pouvoir
le
relire
.
le
utilisateur
du
navigateur
pouvoir
désactiver
le
cookies
pour
un
domaine
particulier
.
selon
le
législation
en
vigueur
,
l
’
utilisateur
devoir
ou
pas
donner
son
accord
pour
recevoir
du
cookies
(
c
’
être
le
cas
en
France
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
session-cookies
principe
de
codage
on
pouvoir
enregistrer
le
cookies
:
fonction
setcookie
.
on
pouvoir
lire
le
cookies
:
dans
le
variable
$
_COOKIE
.
enregistrer
un
cookie
sur
le
machine
client
:
setcookie
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
setcookie
permettre
d
’
enregistrer
un
cookie
sur
le
machine
client
.
un
setcookie
devoir
être
écrire
avant
le
code
HTML
:
avant
le
DOCTYPE
.
par
exemple
,
si
on
arriver
dans
un
page
suite
à
le
validation
d
’
un
formulaire
POST
avec
un
variable
nom
et
un
variable
prenom
dans
$
_POST
,
on
pouvoir
enregistrer
cookies
:
le
nom
et
le
prénom
de
l
’
utilisateur
:
<
?
php
if
(
isset
(
$
_POST
[
'
nom
'
]
setcookie
(
'
nom
'
,
$
_POST
[
'
nom
'
]
,
time
(
)
*
*
)
;
if
(
isset
(
$
_POST
[
'
prenom
'
]
setcookie
(
'
prenom
'
,
$
_POST
[
'
prenom
'
]
,
time
(
)
*
*
)
;
?
>
<
!
DOCTYPE
html
>
...
le
cookie
en
général
au
minimum
caractéristique
:
•
un
nom
•
un
valeur
•
un
date
d
’
expiration
:
aujourd
’
hui
(
time
)
+
du
seconde|second
:
ici
un
semaine
.
accéder
au
cookie
dans
le
code
:
$
_COOKIE
si
on
vouloir
maintenant
afficher
un
«
bonjour
nom
prenom
»
quand
l
’
utilisateur
arriver
sur
notre
site
et
qu
’
il
être
déjà
venir
et
qu
’
on
avoir
enregistrer
le
cookies
de
son
nom
et
de
son
prenom
,
on
utiliser
le
tableau
associatif
$
_COOKIE
.
base
du
PHP
–
environnement
de
développement
–
page
/
dans
le
header
,
par
exemple
,
on
pouvoir
récupérer
le
nom
et
le
prenom
pour
afficher
un
bonjour
ou
autre
chose
:
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
nom
=
COOKIE
[
'
nom
'
]
;
}
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
prenom
=
COOKIE
[
'
nom
'
]
;
}
/
/
on
pouvoir
ensuite
faire
ce
qu
’
on
vouloir
de
$
nom
et
$
prenom
Ø
sécuriser
le
cookies
attention
:
le
cookies
être
modifiable
par
le
client
!
il
falloir
donc
la|le
considérer
comme
du
information
non
sûr
!
il
falloir
donc
utiliser
le
fonction
htmlspecialchars
pour
protéger
le
contenu
du
cookie
:
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
nom
=
htmlspecialchar
(
COOKIE
[
'
nom
'
]
)
;
}
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
prenom
=
htmlspecialchar
(
COOKIE
[
'
nom
'
]
)
;
}
/
/
on
pouvoir
ensuite
faire
ce
qu
’
on
vouloir
de
$
nom
et
$
prenom
modifier
et
supprimer
un
cookie
pour
modifier
et
supprimer
un
cookie
,
on
reprendre
le
fonction
setcookie
.
pour
le
modification
,
on
garder
le
même
nom
et
on
pouvoir
changer
le
valeur
et
/
ou
le
date
d
’
expiration
.
pour
le
suppression
,
on
garder
le
même
nom
et
on
passer
un
date
d
’
expiration
avant
le
date
et
heure
actuel
:
dont
on
passer
un
«
time
(
)
–
»
par
exemple
.
précision
consulter
le
cookies
sur
le
navigateur
sur
le
navigateur
,
en
afficher
le
outil
de
développement
ou
le
ressource
de
le
page
on
pouvoir
accéder
au
ressource
ou
au
stockage
et
visualiser
le
cookies
.
on
aller
voir
notre
cookie
.
on
voir
aussi
le
cookie
PHPSESSID
:
PHP
SESS
ID
:
c
’
être
un
cookie
créer
automatiquement
par
PHP
avec
comme
valeur
un
ID
de
session
qui
permettre
de
retrouver
l
’
utilisateur
.
autre
paramètre
du
setcookie
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
il
y
aussi
autre
paramètre
à
le
fonction
setcookie
qui
permettre
de
sécuriser
le
cookies
.
le
dernier
,
httponly
,
s
’
il
être
à
true
pouvoir
limiter
le
risque
de
faille
XSS
en
interdire
que
le
Javascript
pouvoir
accéder
au
cookie
.
setcookie
(
'
nom
'
,
'
Bertrand
Liaudet
'
,
time
(
)
*
*
,
null
,
null
,
false
,
true
)
;
base
du
PHP
–
environnement
de
développement
–
page
/
bilan
construction
d
’
un
site
et
variable
de
page
•
un
site
être
constituer
de
«
page
»
qui
correspondre
chacun
à
un
«
main
»
.
•
chaque
page
gérer
son
variable
de
page
,
local
ou
global
.
•
le
variable
d
’
un
page
ne
être
pas
visible
dans
un
autre
page
.
•
le
page
pouvoir
échanger
du
information
par
le
variable
superglobale
,
par
le
fichier
et
par
le
BD
.
Echange
entre
le
page
•
quand
un
page
appeler
un
autre
page
,
elle
pouvoir
fournir
de
l
’
information
dans
le
tableau
$
_GET
ou
$
_POST
.
•
le
page
pouvoir
lire
et
écrire
dans
le
tableau
$
_SESSION
qu
’
elle
aller
donc
partager
.
•
le
page
pouvoir
écrire
du
cookies
et
lire
ce
cookies
dans
le
tableau
$
_COOKIES
.
•
le
page
pouvoir
lire
et
écrire
dans
du
fichier
qu
’
elle
pouvoir
partager
.
•
le
page
pouvoir
lire
et
écrire
dans
un
base
de
donnée
qu
’
elle
pouvoir
partager
.
•
le
page
pouvoir
lire
du
information
concerner
le
serveur
et
le
client
dans
le
tableau
$
_ENV
et
$
_SERVER
base
du
PHP
–
environnement
de
développement
–
page
/
appel
d
’
un
page
on
pouvoir
appeler
un
page
de
façon
:
<
avoir
href
=
«
url
»
>
dans
ce
cas
,
l
’
information
circuler
forcément
par
un
$
_GET
et
directement
sur
l
’
url
.
https
:
/
/
dns-remplacer
/
tags
/
tag_a.asp
<
form
action
=
«
url
»
method
=
«
»
>
dans
ce
cas
,
l
’
information
circuler
par
$
_GET
ou
$
_POST
selon
le
valeur
de
l
’
attribut
method
dans
le
balise
form
(
GET
ou
POST
)
.
http
:
/
/
dns-remplacer
/
tags
/
att_form_
dns-remplacé
header
(
‘
location
:
url
’
)
dans
ce
cas
l
’
information
circuler
forcément
par
un
$
_GET
et
directement
sur
l
’
url
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
base
du
PHP
–
environnement
de
développement
–
page
/
.HTACCESS
et
.HTPASSWD
présentation
le
fichier
.htaccess
et
.htpasswd
permettre
de
protéger
du
dossier
et
du
fichier
sur
un
site
web
.
le
«
.
»
au
début
du
nom
faire
que
ce
fichier
être
cacher
sur
le
os
Linux
.
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
proteger-undossier-avec-un-htaccess
http
:
/
/
dns-remplacer
/
dns-remplacer
http
:
/
/
dns-remplacer
/
dns-remplacer
sur
le
sécurité
du
site
web
par
exemple
:
https
:
/
/
dns-remplacer
/
dns-remplacer
.htaccess
le
fichier
.htaccess
permettre
d
’
interdire
l
’
accès
à
un
dossier
.
on
mettre
le
fichier
.htaccess
dans
le
dossier
concerner
.
on
pouvoir
préciser
beaucoup
de
chose
dans
ce
fichier
.
au
minimum
,
pour
bloquer
l
’
affichage
du
contenu
:
option
-
indexer
.htpasswd
le
fichier
.htpasswd
permettre
de
protéger
un
dossier
par
un
mot
de
passe
.
il
être
associer
à
un
fichier
.htaccess
particulier
contenu
du
fichier
.htaccess
AuthName
`
`
page
de
administration
protéger
'
'
AuthType
basic
AuthUserFile
`
`
/
C
:
/
wamp
/
www
/
admin
/
.htpasswd
'
'
Require
valid-user
•
AuthName
être
le
texte
qui
répondre
à
un
tentative
d
’
accès
.
•
AuthUserFile
être
le
chemin
vers
le
fichier
.htpasswd
.
ce
chemin
pouvoir
être
absoudre
ou
relatif
selon
le
hébergeur
!
en
local
:
absolu
.
en
général
:
absolu
.
pour
connaître
le
chemin
absolu
d
’
un
fichier
:
<
?
php
echo
realpath
(
'
dns-remplacer
'
)
;
?
>
contenir
du
fichier
.htpasswd
user1
:
password1
base
du
PHP
–
environnement
de
développement
–
page
/
user2
:
password2
sous
WAMP
le
mot
de
passe
être
spécifé
en
clair
:
bertrand
:
motDePasseBertrand
admin
:
motDePasseAdmin
sur
un
serveur
en
ligne
le
mot
de
passe
devoir
être
crypté
:
bertrand
:
$
$
MEqT
/
/
cb
$
dns-remplacer
/
wDlIfQ81
admin
:
$
$
/
lgP8dYa
$
sQNXcCP47KhP1sneRIZoO0
Ø
Crypter
le
mot
de
passe
<
?
php
echo
crypt
(
'
monpasswd
'
)
;
?
>
base
du
PHP
–
environnement
de
développement
–
page
/
PHP
–
MYSQL
-
MVC
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
presentation-desbases-de-donnees-2
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
-
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
installation
du
fichier
de
test
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
exemple
être
présenter
dans
un
chapitre
en
vert
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
exercice
à
faire
être
présenter
dans
un
chapitre
en
jaune
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilisation
de
PHPMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Oouvrir
phpMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
un
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
un
table
et
le
tuples
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
mettre
à
jour
le
colonne
du
BD
à
gauche
:
onglet
flèche
circulaire
vert
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
afficher
le
contenu
de
le
table
utilisateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exécuter
un
select
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exporter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
importer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
connexion
à
le
BD
et
print_r
du
contenu
d
’
un
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
utilisation
de
le
base
de
donnée
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
connexion
à
le
BD
:
new
PDO
(
exemple
–
connexion
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
explication
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
afficher
le
contenu
d
’
un
table
:
query
(
)
,
fetch
(
)
,
print_r
(
exemple
–
select
)
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
explication
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
résultat
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
charger
le
exemple
et
et
tester
la|le
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
vocabulaire
de
programmation
orienter
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
méthode
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exception
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
guides
de
style
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
du
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
technique
de
programmation
–
PDO
et
PDOStatement
-
$
bdd
,
$
requete
,
$
reqSQL
...
...
...
...
...
...
...
...
...
...
.
terminologie
:
$
bdd
-
$
reqSQL
-
$
requete
-
$
ligne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
$
bdd
(
PDO
)
–
query
-
prepare
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
$
requete
(
PDOStatement
)
-
execute
-
fetch
-
closeCurseur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
synthèse
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
accès
au
champ
,
gestion
erreur
,
order
by
,
like
,
limit
(
exemple
–
select
Where
)
...
...
...
...
...
...
...
...
charger
le
BD
pour
pouvoir
tester
le
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accéder
au
champ
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
select
attribut1
,
attribut2
,
Where
,
Order
by
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
select
...
like
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
select
...
Order
by
,
limit
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
requête
variable
:
where
realisateur
=
?
(
exemple
–
select
variable
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
–
MySQL
–
MVC
-
page
/
solution
basique
à
éviter
:
risque
XSS
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
solution
avec
requête
préparer
:
where
?
,
prepare
et
execute
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
remplacer
la|le
?
par
du
:
alias
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Déboguer
:
or
die
bdd-
>
errorInfo
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
créer
le
$
bdd
avec
le
gestion
du
erreur
(
déjà
voir
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Aternatif
:
exécuter
le
requête
(
query
ou
execute
)
«
or
die
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ajouter
,
modifier
,
supprimer
du
donnée
dans
un
table
(
exemple
–
insert-update-delete
)
...
...
...
.
.
via
phpMyAdmin
–
afficher
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
via
phpMyAdmin
–
SQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
via
php
-
insert
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
via
php
–
DELETE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
via
php
–
UPDATE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
bon
usage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
TP
–
insert
Update
Delete
et
consultation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
site
artiste
–
non
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
:
Etape
:
uniquement
le
œuvre
–
TP
:
installer
,
tester
et
regarder
bien
le
code
...
...
...
.
.
contenu
du
dossier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
tester
le
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
TP3
:
Etape
:
œuvre
,
exposition
et
œuvre
exposer
–
gestion
basique
dans
le
HTML
...
...
...
...
...
...
...
.
.
)
quand
on
choisir
«
œuvre
»
,
on
obtenir
ceci
qui
être
le
page
d
’
accueil
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
)
quand
on
choisir
«
exposition
»
on
obtenir
ceci
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
)
quand
on
cliquer
sur
un
exposition
,
on
obtenir
le
liste
du
œuvre
exposer
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
:
Etape
–
comme
l
’
étape
mais
avec
séparation
du
PHP
et
du
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
problématique
d
’
organisation
de
base
:
quel
fichier
pour
mon
projet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
question
à
se
poser
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
schéma
de
synthèse
à
réaliser
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
problématique
:
quel
fichier
,
quel
dossier
pour
mon
projet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
organisation
non-MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
principe
d
’
organisation
non-MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
défaut
de
l
’
organisation
non-MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
du
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
MVC
:
modèle
-
vue
-
contrôleur
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
modèle
(
SQL
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
vue
(
HTML
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
contrôleur
(
PHP
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonctionnement
global
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
MVC
:
design
pattern
tête
le
premier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
organisation
du
répertoire
et
du
fichier
dans
le
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
organisation
de
répertoire
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
fichier
«
modèle
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
fichier
«
contrôleur
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
fichier
«
vue
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
faire
contrôleur
=
contrôleur
global
=
routeur
=
indexSwitch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
problème
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
solution
:
un
«
front
contrôleur
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
fichier
dns-remplacé
:
le
routeur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
empty
(
)
ou
isset
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Include
entêter
et
pied
de
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
déconnexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Debug
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variante
sans
switch
:
beaucoup
plus
court
!
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
–
MySQL
–
MVC
-
page
/
le
fichier
dns-remplacé
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
MVC
–
exemple
:
le
site
artiste
V1-MVC
-
affichage
du
œuvre
-
tester
l
’
exemple
...
...
...
...
...
...
...
...
...
.
.
organisation
du
dossier
et
du
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
TP
site
artiste
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
TP-MVC-V2
:
site
artiste
V2
–
MVC
:
affichage
de
tout
le
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP-MVC-V3
:
site
artiste
V3
–
MVC
:
administration
du
œuvre
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
page
d
’
administration
du
œuvre
pouvoir
ressembler
à
ceci
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
connexion
comme
administrateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
vérifier
le
login
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP-MVC-V4
:
site
artiste
V4
–
MVC
:
administration
du
du
exposition
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Edition
:
mars
PHP
–
MySQL
–
MVC
-
page
/
PHP
-
MYSQL
PHP-MySQL
:
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
presentation-desbases-de-donnees-2
Manuel
de
référence
du
PHP
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Manuel
de
référence
du
SQL
:
http
:
/
/
dns-remplacer
/
sql
/
installation
du
fichier
de
test
le
exemple
du
cours|cour
être
dans
un
fichier
zip
fournir
avec
l
’
article
du
cours|cour
:
00-Exemples-PHP-
dns-remplacer
charger
ce
fichier
et
mettez-le
dans
le
dossier
Partie_4
du
répertoire
web
«
www
»
du
serveur
WAMP
.
le
exemple
être
présenter
dans
un
chapitre
en
vert
.
le
exercice
à
faire
être
présenter
dans
un
chapitre
en
jaune
.
utilisation
de
PHPMyAdmin
Oouvrir
phpMyAdmin
icône
Wamp
/
bouton
droit
/
phpMyAdmin
créer
un
base
de
donné
onglet
base
de
donnée
dans
le
champ
«
nom
de
base
de
donnée
»
saisir
:
«
BD_Utilisateur
»
on
venir
de
créer
le
BD_Utilisateur
.
elle
apparaître
dans
le
navigateur
à
gauche
.
créer
un
table
et
le
tuples
aller
dans
l
’
onget
SQL
.
on
aller
créer
le
table
suivant
avec
le
tuples
associer
(
fichier
BD_
dns-remplacer
de
l
’
exercice
.
CREATE
tabler
utilisateur
(
id
int
(
)
primary
key
AUTO_INCREMENT
,
prenomNom
varchar
(
)
NOT
NULL
,
adMail
varchar
(
)
NOT
NULL
,
motDePasse
varchar
(
)
NOT
NULL
,
PHP
–
MySQL
–
MVC
-
page
/
annee
int
(
)
NOT
NULL
)
ENGINE
=
InnoDB
;
insert
into
utilisateur
valoir
(
NULL
,
'
Sia
PEI
'
,
'
ji
@
dns-remplacer
'
,
'
jipei
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Yawei
CAI
'
,
'
jawei
@
dns-remplacer
'
,
'
yaweicai
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Zikeng
PENG
'
,
'
zikeng
@
dns-remplacer
'
,
'
zikeng
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Jiawen
LI
'
,
'
jiawen
@
dns-remplacer
'
,
'
jiawen
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Xiaoyu
LIU
'
,
'
xiowyu
@
dns-remplacer
'
,
'
liu
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Olivier
TRAN
'
,
'
tran
@
gmailcom
'
,
'
olivier
'
,
)
;
coller
le
code
dans
le
zone
de
saisie
SQL
et
exécuter
.
le
table
être
créer
avec
le
tuples
.
mettre
à
jour
le
colonne
du
BD
à
gauche
:
onglet
flèche
circulaire
vert
cliquer
sur
le
flèche
circulaire
vert
pour
mettre
à
jour
le
colonne
du
BD
.
vous
pouvoir
ouvrir
le
BD
«
BD_Utilisateur
»
.
vous
voir
apparaître
le
table
«
utilisateur
»
.
afficher
le
contenu
de
le
table
utilisateur
en
cliquer
sur
le
table
dans
le
colonne
du
BD
,
on
voir
apparaître
le
liste
du
tuples
.
exécuter
un
select
en
aller
dans
l
’
onglet
SQL
,
on
pouvoir
saisir
un
requête
.
par
exemple
:
select
*
FROM
`
utilisateur
`
WHERE
id
=
exporter
on
pouvoir
exporter
le
BD
dans
différent
format
:
SQL
:
Ca
générer
un
script
SQL
qui
permettre
de
reconstituer
le
BD
à
l
’
identique
,
donc
un
sauvegarde
.
exporter
le
BD
générer
et
regarder
le
script
.
CSV
:
Ca
générer
un
fichier
texte
qu
’
on
pouvoir
importer
sur
Excel
.
exporter
le
BD
en
format
CSV
et
importer
le
fichier
CSV
dans
Excel
.
importer
on
commencer
par
créer
un
BD
.
ensuite
,
on
pouvoir
importer
le
contenu
de
le
BD
dans
différent
format
:
SQL
:
on
choisir
le
fichier
à
importer
.
C
’
être
un
fichier
avec
du
code
SQL
(
du
DDL
et
du
DML
:
du
CREATE
table
et
du
insert
INTO
)
.
par
exemple
,
c
’
être
un
fichier
exporter
de
sauvegarde
.
PHP
–
MySQL
–
MVC
-
page
/
CSV
:
on
pouvoir
importer
un
fichier
Excel
qui
avoir
être
enregistrer
au
format
CSV
.
il
falloir
préciser
le
séparateur
de
colonne
(
plutôt
un
«
;
»
en
CSV
)
et
préciser
si
le
colonne
avoir
un
premier
ligne
avec
le
nom
de
colonne
.
on
pouvoir
dire
de
ne
pas
s
’
arrêter
en
cas
d
’
erreur
d
’
insert
.
il
falloir
ensuite
ajouter
du
contrainte
d
’
intégrité
dans
le
table
.
particulièrement
mettre
le
clé
primaire
et
étranger
et
donner
un
nom
à
le
table
.
PHP
–
MySQL
–
MVC
-
page
/
connexion
à
le
BD
et
print_r
du
contenu
d
’
un
table
utilisation
de
le
base
de
donnée
en
PHP
jeu
de
fonction
(
api
)
permettre
de
se
connecter
à
le
BD
et
de
l
’
utiliser
:
mysql
,
mysqli
et
PDO
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
le
jeu
mysql
être
le
plus
ancien
:
mieux
valoir
l
’
éviter
.
on
pouvoir
utiliser
mysqli
ou
PDO
(
PHP
dater
Object
)
,
et
particulièrement
PDO_MYSQL
.
L
’
intérêt
du
PDO
être
que
c
’
être
un
interface
d
’
abstraction
permettre
l
’
utilisation
de
n
’
importer
quel
BD
.
de
plus
elle
être
«
orienter
objet
»
.
on
utiliser
plutôt
PDO_MYSQL
http
:
/
/
dns-remplacer
/
manual
/
en
/
dns-remplacer
connexion
à
le
BD
:
new
PDO
(
exemple
–
connexion
)
code
<
?
php
function
connexionBD
(
$
dbname
)
{
/
/
paramètre
de
le
base
de
donnée
$
sgbdname
=
'
mysql
'
;
$
host
=
'
localhost
'
;
$
charset
=
'
utf8
'
;
/
/
dsn
:
dater
source
name
$
dsn
=
$
sgbdname
.
'
:
host
=
'
.
$
host
.
'
;
dbname
=
'
.
$
dbname
.
'
;
charset
=
'
.
$
charset
;
/
/
utilisateur
connecter
à
le
base
de
donnée
$
username
=
'
root
'
;
$
password
=
'
root
'
;
/
/
pour
avoir
du
erreur
SQL
plus
clair
$
erreur
=
array
(
PDO
:
:
ATTR_ERRMODE
=
>
PDO
:
:
ERRMODE_EXCEPTION
)
;
try
{
/
/
connexion
à
le
BD
:
new
PDO
$
bdd
=
new
PDO
(
$
dsn
,
$
username
,
$
password
,
$
erreur
)
;
echo
'
<
p
>
connexion
réussir
<
/
p
>
'
;
return
$
bdd
;
}
catch
(
PDOException
$
e
)
{
echo
'
connexion
échouer
:
'
.
$
e-
>
getMessage
(
)
;
return
NULL
;
/
/
die
(
'
connexion
échouer
:
'
.
$
e-
>
getMessage
(
)
)
;
}
}
?
>
explication
Ø
on
faire
un
new
PDO
avec
paramètre
PDO
être
un
classe
.
on
créer
un
nouveau
objet
de
le
classe
qu
’
on
appeler
$
bdd
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
le
new
PDO
à
paramètre
:
PHP
–
MySQL
–
MVC
-
page
/
•
$
dsn
(
dater
source
name
)
:
contenir
du
infos
sur
le
SGBD
(
mysql
)
,
le
serveur
(
host
,
ici
:
localhost
)
,
le
nom
de
le
BD
,
le
jeu
de
caractère
utiliser
(
UTF8
pour
que
ce
être
le
plus
générique
)
.
•
$
username
:
nom
de
l
’
utilisateur
qui
se
connecter
à
le
BD
.
•
$
password
:
password
de
l
’
utilisateur
qui
se
connecter
à
le
BD
.
•
$
erreur
:
pour
gérer
le
message
d
’
erreur
.
Ø
on
utiliser
du
variable
pour
rendre
le
code
générique
on
utiliser
du
variable
pour
rendre
le
code
plus
générique
:
•
$
host
:
le
machine
du
serveur
de
SGBD
,
•
$
sgbdname
:
le
type
de
SGBD
,
•
$
username
:
le
nom
de
l
’
utilisateur
qui
se
connecter
sur
le
BD
,
•
$
password
:
le
mot
de
passe
de
ce
utilisateur
,
•
$
dbname
:
le
nom
de
le
BD
à
lequel
on
accéder
sur
le
SGBD
.
Ø
$
erreur
:
gestion
du
erreur
$
erreur
=
array
(
PDO
:
:
ATTR_ERRMODE
=
>
PDO
:
:
ERRMODE_EXCEPTION
)
;
en
ajouter
le
paramètre
$
erreur
tel
qu
’
il
être
là
dans
le
new
PDO
,
on
avoir
du
message
d
’
erreur
du
SGBD
,
par
exemple
si
le
select
être
mal
écrire
.
syntaxe
:
PDO
:
:
ATTR_ERRMODE
et
PDO
:
:
ERRMODE_EXCEPTION
être
du
constante
de
classe
définir
dans
le
classe
PDO
.
on
avoir
le
syntaxe
:
array
(
clé
=
>
valeur
)
qui
permettre
de
définir
un
couple
clé-valeur
dans
le
tableau
.
PDO
:
:
ATTR_ERRMODE
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
PDO
:
:
ERRMODE_EXCEPTION
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Ø
gestion
du
erreur
avec
try
catch
le
structure
«
try
»
«
catch
»
être
un
structure
de
programmation
objet
pour
gérer
le
erreur
.
le
die
permettre
d
’
arrêter
proprement
l
’
exécution
de
le
page
en
cas
d
’
erreur
.
afficher
le
contenu
d
’
un
table
:
query
(
)
,
fetch
(
)
,
print_r
(
exemple
–
select
)
exemple
/
/
on
écrire
le
requête
$
reqSQL
=
'
select
*
FROM
utilisateur
'
;
/
/
on
récupérer
le
résultat
$
requete
=
$
bdd-
>
query
(
$
reqSQL
)
;
echo
'
<
pre
>
'
;
print_r
(
$
requete
)
;
echo
'
<
/
pre
>
'
;
/
/
on
afficher
le
résultat
ligner
par
ligne
while
(
$
ligne
=
$
requete-
>
fetch
(
)
)
{
echo
'
<
pre
>
'
;
print_r
(
$
ligne
)
;
echo
'
<
/
pre
>
'
;
echo
'
<
p
>
nombre
d
’
élément
de
$
ligne
:
'
.sizeof
(
$
ligne
)
.
'
<
/
p
>
'
;
}
/
/
on
libérer
le
table
de
le
requête
$
requete-
>
closeCursor
(
)
;
/
/
pour
finir
le
traitement
PHP
–
MySQL
–
MVC
-
page
/
explication
•
on
écrire
le
select
dans
$
reqSQL
•
on
utiliser
le
méthode
(
fonction
)
query
de
$
bdd
(
-
>
)
en
passer
le
$
reqSQL
en
paramètre
.
•
le
résultat
être
dans
$
requete
:
c
’
être
un
objet
complexe
sur
lequel
on
pouvoir
appliquer
du
méthode
(
du
fonction
)
qui
contenir
le
tableau
de
donnée
du
select
.
•
on
afficher
ce
qu
’
on
pouvoir
de
le
réponse
:
en
l
’
occurrence
seul
le
requête
s
’
affiche
.
•
on
passer
le
ligne
de
le
réponse
en
revue
avec
le
méthode
fetch
(
)
.
•
chaque
$
ligner
retourner
par
le
fetch
être
un
tableau
associatif
:
on
pouvoir
faire
un
print_r
de
$
ligne
.
•
on
constater
alors
qu
’
on
avoir
deux
accès
possible
à
chaque
donnée
:
par
le
nom
du
champ
(
id
par
exemple
)
ou
par
un
numéro
(
pour
id
)
:
il
y
avoir
donc
fois
plus
d
’
élément
que
prévoir
dans
chaque
ligne
•
quand
on
avoir
finir
de
travailler
,
on
faire
un
closeCursor
,
pour
libérer
le
table
de
le
requête
résultat
connexion
réussir
DEBUT
<
pre
>
print_r
(
$
requete
)
;
<
/
pre
>
PDOStatement
Object
(
[
queryString
]
=
>
select
*
FROM
utilisateur
)
while
(
$
ligne
=
$
requete-
>
fetch
(
)
)
{
Array
(
[
id
]
=
>
[
]
=
>
[
prenomNom
]
=
>
Sia
PEI
[
]
=
>
Sia
PEI
[
adMail
]
=
>
ji
@
dns-remplacer
[
]
=
>
ji
@
dns-remplacer
[
motDePasse
]
=
>
jipei
[
]
=
>
jipei
[
annee
]
=
>
[
]
=
>
)
nombre
d
’
élément
de
$
ligne
:
Array
(
[
id
]
=
>
[
]
=
>
[
prenomNom
]
=
>
Yawei
CAI
[
]
=
>
Yawei
CAI
[
adMail
]
=
>
jawei
@
dns-remplacer
[
]
=
>
jawei
@
dns-remplacer
[
motDePasse
]
=
>
yaweicai
[
]
=
>
yaweicai
[
annee
]
=
>
[
]
=
>
)
nombre
d
’
élément
de
$
ligne
:
PHP
–
MySQL
–
MVC
-
page
/
charger
le
exemple
et
et
tester
la|le
.
vocabulaire
de
programmation
orienter
objet
classer
un
classe
,
c
’
être
un
type
,
comme
un
entier
,
un
réel
,
un
caractère
,
un
string
ou
un
booléen
.
en
général
,
un
classe
correspondre
à
l
’
équivaloir
d
’
un
tableau
associatif
:
elle
contenir
plus
couple
de
clé-valeur
.
le
différent
clé
être
appeler
«
attribut
»
.
en
plus
,
on
associer
du
fonction
à
un
classe
:
on
la|le
appeler
alors
«
méthode
»
.
objet
un
objet
c
’
être
un
variable
de
type
classe
.
quand
on
créer
un
objet
avec
du
valeur
pour
le
couple
clé-valeur
(
pour
le
attribut
)
,
on
dire
qu
’
on
instancie
un
objet
.
Ca
passer
par
le
commande
«
new
»
.
méthode
le
méthode
être
du
fonction
qui
être
attacher
à
un
classe
.
elle
ne
se
être
utilisable
que
par
le
objet
de
le
classe
.
on
écrire
:
objet-
>
methode
(
)
pour
appeler
le
méthode
pour
l
’
objet
en
question
:
c
’
être
comme
si
on
avoir
passer
l
’
objet
en
paramètre
de
le
méthode
.
exception
en
cas
d
’
erreur
,
en
programmation
objet
on
passer
par
du
objet
de
classe
exception
.
Ca
se
faire
avec
un
«
try
»
«
catch
»
try
:
on
essayer
d
’
exécuter
un
suite
d
’
instruction
catch
:
si
le
suite
d
’
instruction
exécuter
à
générer
un
erreur
sous
le
forme
d
’
un
exception
,
on
passer
dans
le
bloc
catch
le
catch
préciser
le
nom
de
l
’
objet
exception
qu
’
on
aller
traiter
.
on
pouvoir
alors
accéder
à
du
information
par
le
méthode
getMessage
(
)
par
exemple
.
guides
de
style
https
:
/
/
dns-remplacer
/
wiki
/
CamelCase
https
:
/
/
dns-remplacer
/
php-the-right-way
/
#
code_style_guide
PHP
–
MySQL
–
MVC
-
page
/
gestion
du
requête
technique
de
programmation
–
PDO
et
PDOStatement
-
$
bdd
,
$
requete
,
$
reqSQL
pour
manipuler
le
BD
,
on
utiliser
principalement
deux
classe
:
PDO
et
PDOStatemenet
terminologie
:
$
bdd
-
$
reqSQL
-
$
requete
-
$
ligner
•
$
bdd
:
un
objet
de
le
classe
PDO
être
appeler
$
bdd
.
C
’
être
en
quelque
sorte
l
’
objet
qui
permettre
l
’
accès
concret
à
le
base
de
donnée
,
pour
un
utilisateur
et
un
base
de
donnée
.
•
$
reqSQL
:
le
texte
de
le
requête
être
mettre
dans
un
$
reqSQL
.
C
’
être
un
simple
chaine
de
caractère
.
il
ne
devoir
pas
être
confondre
avec
le
résultat
de
le
requête
:
$
requete
.
•
$
requete
:
un
objet
de
le
classe
PSOStatement
être
appeler
$
requete
(
statement
pouvoir
vouloir
dire
«
requête
»
.
ce
$
requete
être
un
objet
complexe
qui
contenir
à
le
fois
le
$
reqSQL
et
le
résultat
de
le
requête
un
fois
celui
-ci
exécuter
.
•
$
ligne
:
le
résultat
d
’
un
fetch
(
)
être
un
ligne
:
$
ligne
=
$
requete-
>
fetch
(
)
.
C
’
être
un
tuple
de
le
table
résulter
de
le
requête
SQL
.
$
bdd
(
PDO
)
–
query
-
prepare
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
PDO
ne
contenir
que
du
méthode
(
il
ne
contenir
pas
d
’
attribut
)
.
noter
particulièrement
:
•
query
:
renvoyer
un
$
requete
auquel
être
associer
le
$
reqSQL
passer
en
paramètre
et
le
résultat
de
le
requête
(
le
résultat
du
select
)
prêt
à
être
fetché
(
prêt
à
être
parcourir
)
.
•
prepare
:
renvoyer
un
$
requete
auquel
être
associer
le
$
reqSQL
passer
en
paramètre
.
le
requête
n
’
avoir
pas
être
exécuter
.
elle
pouvoir
contenir
du
variable
.
PDO
contenir
aussi
du
méthode
propre
à
un
BD
comme
le
gestion
du
transaction
:
commettre
,
rollback
,
etc
.
,
et
d
’
autre
chose
.
$
requete
(
PDOStatement
)
-
execute
-
fetch
-
closeCurseur
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
PDOStatement
contenir
un
attribut
:
le
valeur
du
$
resSQL
fournir
en
paramètre
quand
il
avoir
être
créer
.
il
contenir
aussi
du
méthode
.
noter
particulièrement
:
•
execute
:
permettre
d
’
exécuter
un
un
requête
avec
du
variable
.
il
falloir
fournir
en
paramètre
un
tableau
de
valeur
pour
le
variable
.
•
fetch
:
permettre
de
récupérer
le
ligne
du
résultat
de
le
requête
,
un
par
un
.
•
fetchAll
:
permettre
de
récupérer
le
ligne
du
résultat
de
le
requête
,
tout
dans
un
tableau
.
•
closeCurseur
:
permettre
de
refaire
un
execute
.
synthèse
$
bdd
:
PDO
$
requete
:
PDOStatement
-
>
query
(
$
reqSQL
)
:
PDOStatement
-
>
fetch
(
)
:
ligne
-
>
prepare
(
$
reqSQL
)
:
PDOStatement
-
>
exectute
(
)
:
bool
-
>
closeCursor
(
)
:
bool
-
>
fetchAll
(
)
:
tout
le
ligne
PHP
–
MySQL
–
MVC
-
page
/
accès
au
champ
,
gestion
erreur
,
order
by
,
like
,
limit
(
exemple
–
select
Where
)
charger
le
BD
pour
pouvoir
tester
le
code
pour
tester
le
code
,
il
falloir
charger
le
BD
en
plus
d
’
installer
le
code
dans
le
répertoire
du
serveur
WEB
.
accéder
au
champ
$
ligne
être
un
tableau
associatif
.
on
pouvoir
donc
écrire
:
echo
'
<
p
>
<
strong
>
prenom
nom
<
/
strong
>
<
/
p
>
'
;
while
(
$
ligne
=
$
requete-
>
fetch
(
)
)
{
echo
'
<
p
>
'
.
$
ligne
[
prenom
]
.
'
'
.
$
ligne
[
nom
]
.
'
<
/
p
>
'
;
}
select
attribut1
,
attribut2
,
Where
,
Order
by
$
reqSQL
=
'
select
realistateur
,
titre
,
annee
from
film
where
realisateur
=
'
\King
Vidor\
'
order
by
annee
'
;
/
/
on
precise
champ
:
realisateur
,
titre
et
annee
/
/
attention
au
\
'
/
/
on
trier
par
annee
select
...
like
$
reqSQL
=
'
select
*
FROM
film
WHERE
realisateur
like
\
'
%
manki
%
\
'
order
by
realisateur
,
annee
'
;
/
/
like
%
manki
%
:
n
’
importer
quoi
autour
de
manki
/
/
order
by
realisateur
,
annee
:
plusieurs
realisateurs
possible
/
/
dans
le
resultat
:
j
’
ordonner
le
résultat
select
...
Order
by
,
limit
$
reqSQL
=
'
select
realistateur
,
titre
,
annee
from
film
where
annee
=
order
by
annee
limit
,
'
)
;
/
/
on
prendre
le
premier
(
de
à
)
/
/
limit
,
pour
le
suivant
/
/
limite
,
pour
le
suivant
,
etc
.
PHP
–
MySQL
–
MVC
-
page
/
requête
variable
:
where
realisateur
=
?
(
exemple
–
select
variable
)
objectif
:
mettre
un
variable
dans
un
requête
(
par
exemple
,
un
information
saisir
par
l
’
utilisateur
)
solution
basique
à
éviter
:
risque
XSS
on
pouvoir
mettre
un
$
_GET
dans
le
$
reqSQL
:
$
reqSQL
=
'
select
...
where
auteur
=
\
'
'
.
$
_GET
[
'
realisateur
'
]
.
'
\
'
'
)
;
à
éviter
!
!
!
si
le
$
_GET
contenir
‘
toto
\
'
or
\
'
a\
'
=
\
'
avoir
,
le
select
renvoyer
tout
le
table
!
solution
avec
requête
préparer
:
where
?
,
prepare
et
execute
$
reqSQL
=
'
select
...
where
realisateur
=
?
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
$
requete-
>
execute
(
array
(
$
_GET
[
'
realisateur
'
]
)
)
;
on
séparer
le
argument
par
du
«
,
»
dans
le
array
remplacer
la|le
?
par
du
:
alias
ce
solution
être
le
plus
lisible
et
celui
qu
’
on
aller
privilégier
.
$
reqSQL
=
'
select
...
where
realisateur
=
:
realisateur
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
$
requete-
>
execute
(
array
(
'
realisateur
'
=
>
$
_GET
[
'
realisateur
'
]
)
)
;
PHP
–
MySQL
–
MVC
-
page
/
Déboguer
:
or
die
bdd-
>
errorInfo
(
)
créer
le
$
bdd
avec
le
gestion
du
erreur
(
déjà
voir
)
pour
afficher
le
détail
d
’
un
erreur
,
on
créer
un
$
bdd
avec
le
gestion
du
erreur
:
$
erreur
=
array
(
PDO
:
:
ATTR_ERRMODE
=
>
PDO
:
:
ERRMODE_EXCEPTION
)
;
$
bdd
=
new
PDO
(
$
dsn
,
$
username
,
$
password
,
$
erreur
)
;
C
’
être
suffisant
pour
obtenir
du
message
d
’
erreur
propre
.
Aternatif
:
exécuter
le
requête
(
query
ou
execute
)
«
or
die
»
si
on
n
’
utiliser
pas
un
$
erreur
dans
le
new
PDO
,
on
pouvoir
ajouter
un
«
or
die
»
au
query
ou
au
execute
pour
afficher
le
détail
d
’
un
erreur
.
mais
c
$
requete
=
$
bdd-
>
query
(
$
reqSQL
)
or
die
(
print-r
(
$
bdd
>
errorInfo
(
)
)
)
;
ou
$
requete-
>
execute
(
array
(
...
)
)
or
die
(
print-r
(
$
bdd
>
errorInfo
(
)
)
)
;
le
«
or
die
»
être
inutile
avec
un
connexion
PDO
en
ERRMODE
.
le
«
or
die
»
s
’
utiliser
quand
on
travailler
avec
le
jeu
«
mysql
»
de
fonction
et
le
fonction
mysql_connect
(
...
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Ø
le
limite
du
«
or
die
»
:
confidentialité
et
user
friendly
le
«
or
die
»
pouvoir
être
pratique
en
phase
de
développement
.
en
production
,
il
mettre
au
jour
du
information
qui
pouvoir
être
confidentiel
et
n
’
être
pas
userfriendly
.
http
:
/
/
dns-remplacer
/
tuto
/
lire
/
dns-remplacé
PHP
–
MySQL
–
MVC
-
page
/
ajouter
,
modifier
,
supprimer
du
donnée
dans
un
table
(
exemple
–
insert-update-delete
)
via
phpMyAdmin
–
afficher
interface
graphique
via
phpMyAdmin
–
SQL
on
pouvoir
entrer
le
commande
SQL
:
insert
,
UPDATE
et
DELETE
.
le
système
proposer
un
pré-remplissage
du
commande
.
via
php
-
insert
on
pouvoir
entrer
le
commande
SQL
:
insert
,
UPDATE
et
DELETE
.
$
reqSQL
=
'
insert
INTO
film
(
titre
,
realisateur
,
annee
)
valoir
(
:
titre
,
:
realisateur
,
:
annee
)
'
;
/
/
exemple
(
'
L\'homme
irrationnel
'
,
'
Woody
Allen
'
,
'
'
)
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
$
resultat
=
$
req-
>
execute
(
array
(
'
titre
'
=
>
$
_GET
[
'
titre
'
]
,
'
realisateur
'
=
>
$
_GET
[
'
realisateur
'
]
,
'
annee
'
=
>
$
_GET
[
'
annee
'
]
)
)
;
/
/
or
die
(
print-r
(
$
bdd-
>
errorInfo
(
)
)
)
;
/
*
le
or
die
être
inutile
avec
le
connexion
en
ERRMODE
*
/
/
*
$
resultat
pour
traiter
le
erreur
proprement
,
sans
ERRMODE
*
/
via
php
–
DELETE
$
reqSQL
=
'
DELETE
FROM
film
WHERE
titre
=
:
titre
AND
realisateur
=
:
realisateur
'
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
;
$
resultat
=
$
requete-
>
execute
(
array
(
'
titre
'
=
>
$
_GET
[
'
titre
'
]
,
'
realisateur
'
=
>
$
_GET
[
'
realisateur
'
]
)
)
;
/
*
pour
tester
le
résultat
:
si
pas
de
DELETE
*
/
if
(
$
requete-
>
rowCount
(
)
)
{
/
/
rowCount
compter
le
nombre
de
delete
echo
'
<
br
/
>
DELETE
effectuer
'
.
$
requete-
>
rowCount
(
)
.
'
fois
'
;
}
else
{
echo
'
<
br
/
>
le
DELETE
avoir
échouer
'
;
}
rowCount
permettre
de
savoir
combien
de
delete
on
être
effectuer
.
http
:
/
/
dns-remplacer
/
page
/
mysql-pdo
PHP
–
MySQL
–
MVC
-
page
/
Ø
attention
au
DELETE
!
!
attention
au
delete
:
quand
un
donnée
être
supprimer
,
on
ne
pouvoir
pas
le
récupérer
si
on
être
en
mode
validation
(
autocommettre
)
ce
qui
être
le
plus
fréquent
!
il
falloir
donc
faire
du
vérification
,
par
exemple
:
if
(
!
isset
(
$
_GET
[
'
realisateur
'
]
)
or
!
isset
(
$
_GET
[
'
titre
'
]
)
or
$
_GET
[
'
realisateur
'
]
=
=
'
'
or
$
_GET
[
'
titre
'
]
=
=
'
'
)
{
echo
'
<
br
/
>
vous
n\'avez
pas
saisir
tout
le
paramètre
'
;
}
via
php
–
UPDATE
$
reqSQL
=
'
UPDATE
film
set
duree
=
:
duree
WHERE
titre
=
:
titre
AND
realisateur
=
:
realisateur
'
;
Ø
attention
à
l
’
UPDATE
!
!
attention
à
l
’
UPDATE
:
quand
un
donnée
être
modifier
,
on
ne
pouvoir
pas
le
récupérer
si
on
être
en
mode
validation
(
autocommettre
)
ce
qui
être
le
plus
fréquent
!
bon
usage
à
le
place
de
:
'
titre
'
=
>
$
_GET
[
'
titre
'
]
on
avoir
'
titre
'
=
>
$
titre
le
variable
$
titre
,
$
realisateur
,
etc
.
être
récupérer
via
un
$
_POST
ou
un
$
_GET
.
TP
–
insert
Update
Delete
et
consultation
on
travailler
avec
le
base
CINEMA
.
.
changer
volontairement
le
paramètre
de
connexion
un
par
un
pour
voir
le
message
d
’
erreur
correspondre
.
.
ajouter
un
film
.
vérifier
qu
’
il
être
bien
présent
dans
le
BD
en
utiliser
un
script
de
consultation
.
.
supprimer
le
film
que
vous
venir
d
’
ajouter
.
vérifier
qu
’
il
être
bien
absent
dans
le
BD
en
utiliser
un
script
de
consultation
.
.
rajouter
un
film
.
vérifier
qu
’
il
être
bien
présent
dans
le
BD
en
utiliser
un
script
de
consultation
.
.
modifier
l
’
année
du
film
que
vous
venir
de
rajouter
.
vérifier
que
le
modification
avoir
être
faire
dans
le
BD
en
utiliser
un
script
de
consultation
.
PHP
–
MySQL
–
MVC
-
page
/
TP
site
artiste
–
non
MVC
exemple
:
Etape
:
uniquement
le
œuvre
–
TP
:
installer
,
tester
et
regarder
bien
le
code
contenir
du
dossier
le
dossier
de
l
’
exemple
contenir
:
le
code
de
le
BD
:
BD_
dns-remplacer
et
un
dossier
d
’
image
.
le
fichier
de
connexion
à
le
BD
.
un
page
pour
l
’
affichage
du
œuvre
.
installation
installer
le
BD
sur
WAMP
.
parcourir
le
contenu
de
le
BD
pour
bien
la
comprendre
.
regarder
le
page
d
’
affichage
du
œuvre
:
dns-remplacer
tester
le
code
on
obtenir
l
’
affichage
suivre
:
PHP
–
MySQL
–
MVC
-
page
/
TP3
:
Etape
:
œuvre
,
exposition
et
œuvre
exposer
–
gestion
basique
dans
le
HTML
ensuite
on
vouloir
pouvoir
afficher
aussi
le
exposition
et
le
œuvre
exposer
.
on
considérer
que
«
site
artiste
»
et
le
«
nav
»
être
dans
un
header
HTML
.
)
quand
on
choisir
«
œuvre
»
,
on
obtenir
ceci
qui
être
le
page
d
’
accueil
:
)
quand
on
choisir
«
exposition
»
on
obtenir
ceci
:
PHP
–
MySQL
–
MVC
-
page
/
)
quand
on
cliquer
sur
un
exposition
,
on
obtenir
le
liste
du
œuvre
exposer
:
PHP
–
MySQL
–
MVC
-
page
/
TP
:
Etape
–
comme
l
’
étape
mais
avec
séparation
du
PHP
et
du
HTML
on
aller
maintenant
organiser
le
code
en
séparer
au
maximum
le
code
PHP
et
le
code
HTML
.
pour
cela
,
on
aller
utiliser
le
fonction
fetchAll
(
)
:
$
lesOeuvres
=
$
requete-
>
fetchAll
(
)
;
ainsi
,
on
récupérer
le
tableau
complet
du
œuvre
issu
du
select
.
on
pouvoir
ensuite
parcourir
ce
tableau
dans
le
PHP
avec
un
classique
«
foreach
»
:
foreach
(
$
lesOeuvres
avoir
$
ligne
)
{
echo
'
<
h@card@
>
[
'
.
$
ligne
[
'
id
'
]
.
'
]
:
'
.
$
ligne
[
'
titre
'
]
.
'
-
'
.
$
ligne
[
'
annee
'
]
.
'
-
'
.
$
ligne
[
'
prix
'
]
.
'
euro
<
/
h3
>
'
;
etc
.
}
PHP
–
MySQL
–
MVC
-
page
/
problématique
d
’
organisation
de
base
:
quel
fichier
pour
mon
projet
le
but
être
d
’
afficher
le
œuvre
,
le
exposition
et
le
œuvre
exposer
.
question
à
se
poser
:
quel
fichier
devoir
je
créer
?
il
y
avoir
fichier
par
page
.
comment
circule-t
on
de
page
en
page
?
y
a-t-il
du
élément
commun
côté
HTML
?
côté
HTML
,
le
header
être
partager
.
y
a-t-il
de
élément
commun
côté
PHP
?
côté
PHP
,
le
connexion
à
le
BD
être
partager
.
schéma
de
synthèse
à
réaliser
PHP
–
MySQL
–
MVC
-
page
/
MVC
https
:
/
/
dns-remplacer
/
course
/
votre-site-php-presque-complet-architecture-mvc-et-bonnespratique
/
avant-propos-comment-fonctionne-ce-tutoriel
https
:
/
/
dns-remplacer
/
course
/
adopter-un-style-de-programmation-clair-avec-le-modele-mvc
problématique
:
quel
fichier
,
quel
dossier
pour
mon
projet
le
MVC
s
’
intéresser
à
le
problématique
d
’
organisation
du
fichier
et
du
répertoire
.
à
noter
particulièrement
le
problème
suivant
:
•
•
•
•
•
quel
dossier
devoir
je
créer
?
comment
devoir
je
organiser
mon
fichier
?
comment
passe-t
on
d
’
un
fichier
à
un
autre
?
quel
être
le
inclusion
à
envisager
?
y
a-t-il
besoin
de
un
dossier
admin
?
organisation
non-MVC
principe
d
’
organisation
non-MVC
on
aller
avoir
un
page
php
par
page
de
site
.
un
page
c
’
être
comme
un
«
main
»
qui
recevoir
du
paramètre
(
$
_GET
,
$
_POST
)
.
le
liste
du
paramètre
être
variable
selon
l
’
entrée
(
un
href
,
un
autre
href
,
un
formulaire
de
saisie
,
un
autre
,
un
header
)
.
il
y
avoir
aussi
du
variable
global
partager
par
tout
le
page
dans
$
_SESSION
.
le
page
réagir
différemment
en
fonction
du
paramètre
qu
’
elle
recevoir
.
selon
le
cas
,
elle
faire
en
totalité
ou
en
partie
:
•
récupérer
le
contenu
de
$
_GET
,
$
_POST
,
$
_SESSION
•
mettre
à
jour
$
_SESSION
•
inclure
du
fichier
:
header
,
footer
,
connexion
à
le
BD
,
etc
.
•
gérer
le
donnée
de
le
BD
:
insert
,
UPDATE
,
DELETE
et
du
select
associé
si
nécessaire
.
•
le
construction
de
le
page
HTML
à
afficher
(
et
le
select
associé
si
nécessaire
)
défaut
de
l
’
organisation
non-MVC
•
tout
être
mélanger
:
le
SQL
,
le
PHP
et
le
HTML
,
surtout
si
on
ne
séparer
pas
PHP
et
HTML
.
•
le
page
pouvoir
devenir
très
gros
.
•
le
maintenance
n
’
être
pas
facile
.
•
travail
à
plusieurs
être
rendre
difficile
.
PHP
–
MySQL
–
MVC
-
page
/
présentation
du
MVC
MVC
:
modèle
-
vue
-
contrôleur
.
L
’
architecture
MVC
séparer
le
logique
du
code
en
trois
partie
,
trois
ensemble
de
fichier
:
•
le
modèle
(
qui
correspondre
au
SQL
)
•
le
vue
(
qui
correspondre
au
HTML
)
•
le
contrôleur
(
qui
correspondre
au
PHP
faire
le
lien
entre
le
deux
précédent
)
.
cela
rendre
le
code
plus
facile
à
mettre
à
jour
et
permettre
d
’
organiser
le
travail
en
partie
et
donc
de
travailler
en
parallèle
.
L
’
architecture
MVC
être
un
bon
pratique
de
programmation
.
le
connaissance
de
l
’
architecturer
MVC
rendre
capable
de
créer
un
site
web
de
qualité
et
facile
à
maintenir
.
en
pratique
,
le
architecture
MVC
mettre
en
œuvre
s
’
appuyer
sur
le
théorie
mais
l
’
adapter
de
façon
pragmatique
.
il
y
avoir
donc
plusieurs
façon
de
mettre
en
œuvrer
le
MVC
.
le
principal
framework
être
développer
en
MVC
:
CodeIgniter
,
CakePHP
,
Symfony
,
Jelix
,
zend
Framework
,
etc
.
le
modèle
(
SQL
)
le
modèle
gérer
le
donnée
du
site
.
essentiellement
le
accès
à
le
BD
.
mais
aussi
le
gestion
de
fichier
.
il
proposer
du
fonction
pour
faire
du
insert
,
du
Update
,
du
Delete
,
du
select
.
ce
fonction
pouvoir
renvoyer
du
tableau
de
donnée
.
le
résultat
être
exploiter
par
le
contrôleur
mais
aussi
par
le
HTML
.
C
’
être
un
page
pur
PHP
.
L
’
idée
général
être
que
dans
un
application
,
le
base
de
donnée
être
central
.
si
le
BD
être
bien
concevoir
,
l
’
application
être
facile
à
maintenir
et
à
faire
évoluer
.
si
le
BD
être
mal
concevoir
,
l
’
application
être
complexe
à
maintenir
.
le
vue
(
HTML
)
le
vue
afficher
le
page
HTML
.
elle
récupérer
du
variable
du
contrôleur
et
/
ou
du
modèle
pour
savoir
ce
qu
’
elle
devoir
afficher
.
C
’
être
un
page
HTML
avec
quelque
boucle
et
condition
PHP
très
simple
,
pour
afficher
le
tableau
de
donnée
issu
du
modèle
.
le
vue
contenir
le
DOCTYPE
.
mais
elle
ne
pouvoir
fonctionner
qu
’
avec
le
contexte
du
contrôleur
.
PHP
–
MySQL
–
MVC
-
page
/
le
contrôleur
(
PHP
)
le
contrôleur
être
le
page
appelé
(
le
véritable
index
,
autrement
dire
,
le
«
main
»
)
.
il
fonctionner
en
trois
étape
:
.
il
utiliser
le
fonction
du
modèle
(
include
et
appel
au
fonction
)
.
.
il
analyser
et
traiter
le
donnée
issu
du
modèle
mais
aussi
celui
passée
en
paramètre
à
l
’
appel
de
le
page
(
$
_GET
,
$
_POST
,
$
_SESSION
)
.
il
déterminer
par
exemple
si
le
visiteur
avoir
le
droit
de
voir
le
page
ou
non
.
.
en
fonction
de
son
calcul
,
il
appeler
le
vue
correspondant
par
un
include
.
C
’
être
un
page
pur
PHP
.
le
contrôleur
être
le
«
chef
d
’
orchestre
»
:
il
récupérer
le
demande
de
l
’
utilisateur
à
travers
le
vue
(
le
page
HTML
)
par
un
href
,
un
formulaire
ou
un
header
.
il
échanger
du
donnée
avec
le
modèle
,
faire
le
calcul
(
qui
pouvoir
être
complexe
)
puis
choisir
un
vue
à
afficher
en
lui
fournir
le
variable
.
le
rôle
du
contrôleur
pouvoir
se
limiter
à
faire
le
lien
entre
le
modèle
et
le
vue
:
de
le
colle
!
fonctionnement
global
un
utilisateur
,
à
travers
un
vue
,
faire
appel
à
un
page
:
un
contrôleur
(
par
un
href
ou
un
formulaire
)
.
le
contrôleur
«
include
»
un
modèle
et
utiliser
un
du
fonction
du
modèle
.
il
faire
ensuite
du
calcul
.
selon
le
résultat
,
il
include
un
vue
ou
un
autre
à
afficher
à
l
’
utilisateur
.
et
ainsi
de
suite
.
PHP
–
MySQL
–
MVC
-
page
/
MVC
:
design
pattern
tête
le
premier
car
si
l
’
modèle
-
être
essentiel
et
si
le
vue
-
être
magnifique
J
’
être|suivre
p
’
têt
feindre
-
oui
mais
c
’
être
fou
ce
ligne
de
code
-
qui
être
d
’
le
colle
et
c
’
coder
n
’
faire
rien
-
d
’
vraiment
magique
il
n
’
faire
qu
’
transmettre
-
que
du
valeur
le
colle
,
c
’
être
le
contrôleur
.
on
dire
que
le
MCV
être
un
design
pattern
(
DP
)
.
C
’
être
en
réalité
un
assemblage
de
DP
élémentaire
(
un
par
lettre
)
:
le
DP
«
stratégie
»
,
«
composite
»
et
«
observateur
»
(
le
DP
avoir
du
nom
)
.
si
on
coder
réellement
ce
DP
,
alors
on
avoir
un
mise
à
jour
automatique
du
notification
(
DP
observateur
)
.
PHP
–
MySQL
–
MVC
-
page
/
organisation
du
répertoire
et
du
fichier
dans
le
MVC
organisation
de
répertoire
MVC
à
le
racine
du
site
,
on
créer
répertoire
:
•
modele
•
vue
•
controleur
dans
chacun
de
ce
répertoire
,
on
créer
un
sous-répertoire
par
«
module
»
du
site
(
par
exemple
:
forum
,
blog
,
chat
,
admin
,
etc
.
)
.
le
fichier
«
modèle
»
chaque
modèle
être
un
fichier
PHP
contenir
un
appel
à
le
BD
et
qui
renvoyer
par
exemple
le
tableau
du
résultat
(
fetchAll
(
)
plutôt
que
fetch
(
)
un
par
un
)
.
le
fichier
PHP
n
’
avoir
pas
de
balise
fermant
(
?
>
)
:
cela
éviter
du
problème
!
L
’
objet
bdd
être
déclarer
en
global
pour
ne
pas
avoir
à
refaire
le
connexion
à
chaque
opération
.
dans
l
’
idéal
,
il
falloir
utiliser
un
DP
singleton
qui
permettre
de
ne
recréer
un
objet
que
s
’
il
n
’
avoir
pas
déjà
être
créer
.
dans
chaque
sous-repertoire
de
module
,
on
créer
un
fichier
par
fonction
qui
avoir
le
nom
de
le
fonction
.
ainsi
on
faire
un
include
du
fichier
et
un
appel
à
le
fonction
.
le
fichier
«
contrôleur
»
chaque
contrôleur
être
aussi
un
fichier
PHP
.
il
inclure
le
modèle
au
début
(
include_once
pour
éviter
de
l
’
inclure
plusieurs
fois
)
.
à
le
fin
il
inclure
le
vue
.
autrement
dire
,
en
réalité
il
contenir
tout
le
code
,
mais
on
séparer
le
code
en
partie
(
modèle
,
contrôle
,
vue
)
et
chaque
partie
être
dans
son
propre
fichier
.
le
contrôleur
faire
le
calcul
avant
l
’
appel
de
le
vue
.
quand
on
demander
un
fichier
dans
le
barre
de
adresse
,
c
’
être
un
contrôleur
qu
’
on
appeler
.
le
fichier
«
vue
»
chaque
vue
être
un
fichier
HTML
qui
faire
un
simple
affichage
du
jeu
de
donnée
fournir
par
le
contrôleur
.
il
pouvoir
y
avoir
un
boucle
PHP
pour
parcourir
le
tableau
et
du
test
pour
choisir
ce
qu
’
on
vouloir
afficher
.
il
y
avoir
un
fichier
voir
par
page
utilisateur
.
PHP
–
MySQL
–
MVC
-
page
/
le
faire
contrôleur
=
contrôleur
global
=
routeur
=
indexSwitch
le
problème
avec
l
’
organisation
précédent
,
on
avoir
un
«
main
»
par
page
(
par
contrôleur
)
.
un
problème
majeur
aller
être
de
faire
le
lien
entre
le
page
:
en
effet
,
un
href
partir
d
’
un
page
(
un
contrôleur
)
pour
aller
à
un
autre
page
(
un
autre
contrôleur
)
.
le
problème
être
que
cela
obliger
à
parcourir
l
’
arborescence
du
fichier
avec
du
href
du
type
:
Href
=
«
.
.
/
admin
/
dns-remplacer
»
si
on
avoir
du
href
dans
un
fichier
«
includé
»
,
il
en
être
de
même
.
avec
un
tel
organisation
,
on
risquer
souvent
d
’
avoir
du
problème
de
«
routage
»
(
trouver
le
route
pour
un
page
à
ouvrir
)
très
complexe
.
si
on
changer
un
peu
le
structure
du
fichier
ou
du
répertoire
,
ou
simplement
si
on
changer
le
nom
d
’
un
répertoire
,
il
falloir
retrouver
tout
le
href
qui
être
référence
à
ce
répertoire
pour
la|le
mettre
à
jour
:
c
’
être
long
et
pénible
!
le
solution
:
un
«
front
contrôleur
»
on
se
doter
d
’
un
contrôleur
global
qui
permettre
l
’
entrée
dans
le
site
et
qui
permettre
de
choisir
le
contrôleur
à
appeler
donc
le
page
à
afficher
.
C
’
être
le
«
front
contrôleur
»
ou
«
routeur
»
.
on
retrouver
le
terme
de
«
routeur
»
dans
le
frameworks
.
le
autre
contrôleur
être
parfois
appeler
backContoller
.
le
rôle
du
«
front
contrôleur
»
être
de
déterminer
quel
contrôleur
appeler
et
de
faire
du
initialisation
général
(
connexion
à
le
BD
,
affichage
d
’
en-tête
ou
de
pied
de
page
,
etc
.
)
.
le
fichier
dns-remplacé
appeler
le
routeur
avec
un
route
particulier
,
c
’
est-à-dire
un
contrôleur
particulier
,
donc
un
page
particulier
à
afficher
.
ainsi
,
on
aller
centraliser
le
problème
du
«
routage
»
:
si
on
changer
un
nom
de
répertoire
,
il
ne
falloir
faire
du
modification
que
dans
le
«
front-contrôleur
»
.
le
fichier
dns-remplacé
:
le
routeur
principe
IndexSwitch
être
le
front
contrôleur
qui
choisir
le
contrôleur
à
exécuter
.
ce
front
controleur
,
c
’
être
ce
qu
’
on
appeler
le
«
routeur
»
dans
le
framework
php
.
on
regarder
quel
index
être
setté
pour
savoir
quel
contrôleur
appeler
.
on
tester
sur
$
_GET
et
$
_POST
car
on
pouvoir
venir
d
’
un
header
,
d
’
un
href
ou
d
’
un
formulaire
.
exemple
<
?
php
session_start
(
)
;
/
/
on
démarrer
le
session
include
(
'
modele
/
connexion_
dns-remplacé
'
)
;
/
/
connexion
à
le
BD
include
'
voir
/
dns-remplacer
'
;
/
/
HTML
de
l
’
entêter
du
site
/
/
grand
SWITCH
de
accès
au
page
/
/
du
elseif
if
(
isset
(
$
_GET
[
'
indexOeuvres
'
]
)
or
isset
(
$
_POST
[
'
indexOeuvres
'
]
)
)
{
PHP
–
MySQL
–
MVC
-
page
/
include
(
'
controleur
/
public
/
'
indexOeuvres'.php
'
)
;
}
elseif
(
isset
(
$
_GET
[
'
indexExposition
'
]
)
or
isset
(
$
_POST
[
'
indexExposition
'
]
)
)
{
include
(
'
controleur
/
public
/
'
indexExpositions'.php
'
)
;
}
/
/
etc
.
empty
(
)
ou
isset
(
)
C
’
être
presque
le
même
chose
.
empty
(
)
être
vrai
pour
non
définir
,
=
ou
=
null
.
isset
(
)
être
faux
uniquement
pour
non
définir
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Include
entêter
et
pied
de
page
on
pouvoir
faire
du
include
d
’
entêter
et
de
pied
de
page
dans
le
front
contrôleur
si
ce
être
toujours
le
même
pour
tout
le
page
déconnexion
pour
libérer
proprement
le
BD
.
en
PDO
,
le
déconnexion
n
’
être
pas
utile
si
on
avoir
faire
du
clore
cursor
include
(
'
modele
/
deconnexion_
dns-remplacé
'
)
;
/
/
deconnexion
à
le
BD
Debug
on
afficher
$
_
session
,
POST
et
GET
pour
suivre
ce
qui
se
passer
pour
chaque
page
.
on
n
’
avoir
plus
besoin
du
nom
du
fichier
puisque
c
’
être
toujours
le
même
:
celui
du
front
controleur
!
on
pouvoir
mettre
cela
dans
un
test
:
ainsi
,
il
suffire
de
passer
debut
à
pour
arrêter
l
’
affichage
du
superglogabes
.
$
debug
=
;
if
(
$
debug
=
=
)
{
print_r
(
$
_SESSION
)
;
echo
'
<
br
/
>
'
;
echo'POST
:
'
;
print_r
(
$
_POST
)
;
echo
'
<
br
/
>
'
;
echo'GET
:
'
;
print_r
(
$
_GET
)
;
echo
'
<
br
/
>
'
;
}
variante
sans
switch
:
beaucoup
plus
court
!
le
$
_GET
ou
le
$
_POST
qui
arriver
dans
le
front
controleur
pouvoir
contenir
le
nom
du
contrôleur
qu
’
on
vouloir
appeler
(
avec
son
chemin
)
.Par
exemple
:
«
public
/
œ
dns-remplacé
»
.
ou
encore
«
admin
/
œ
dns-remplacé
»
.
à
partir
de
là
,
le
front
controleur
vérifier
que
$
_GET
ou
$
_POST
être
setté
et
que
le
fichier
correspondre
au
controleur
qu
’
on
vouloir
appeler
exister
(
is_file
(
)
)
.
si
c
’
être
le
cas
,
on
pouvoir
faire
un
include
du
controleur
back
.
sinon
,
on
revenir
à
le
page
d
’
accueil
.
ainsi
on
n
’
avoir
plus
besoin
de
swich
!
...
/
/
on
inclure
le
contrôleur
se
il
exister
et
se
il
être
spécifier
if
(
!
empty
(
$
_GET
[
'
page
'
]
)
&
&
is_file
(
'
controleurs
/
'
.
$
_GET
[
'
page
'
]
.
'
.php
'
)
)
PHP
–
MySQL
–
MVC
-
page
/
include
'
controleurs
/
'
.
$
_GET
[
'
page
'
]
.
'
.php
'
;
else
include
'
controleurs
/
dns-remplacer
'
;
/
/
controleur
accueil
...
le
fichier
dns-remplacer
le
fichier
dns-remplacé
appeler
avec
un
fonction
header
(
)
le
front
contrôleur
:
ici
le
fichier
indexSwitch
.
on
passer
un
paramètre
à
l
’
URL
:
par
exemple
,
indexOeuvres
:
se
être
le
page
d
’
accueil
du
site
.
on
donner
n
’
importer
quel
valeur
au
paramètre
.
on
ne
faire
que
tester
s
’
il
être
setté
.
<
?
php
/
/
on
appeler
indexSwith
en
settant
indexArticle
avec
ne
importer
quel
valeur
header
(
'
location
:
dns-remplacer
?
indexOeuvre
=
set
'
)
;
?
>
PHP
–
MySQL
–
MVC
-
page
/
MVC
–
exemple
:
le
site
artiste
V1-MVC
-
affichage
du
œuvre
-
tester
l
’
exemple
organisation
du
dossier
et
du
fichier
L
’
organisation
MVC
être
le
suivant
:
PHP
–
MySQL
–
MVC
-
page
/
TP
site
artiste
MVC
TP-MVC-V2
:
site
artiste
V2
–
MVC
:
affichage
de
tout
le
table
à
partir
du
SiteArtisteV1-MVC-base
,
faire
un
V2
qui
prendre
en
compter
le
gestion
du
exposition
et
celui
du
œuvre
exposer
.
L
’
étape
MVC
suivre
le
même
logique
que
l
’
étape
non-MVC
.
TP-MVC-V3
:
site
artiste
V3
–
MVC
:
administration
du
œuvre
ajouter
le
possibilité
de
se
connecter
comme
administrateur
:
entrée
dans
le
back-office
.
L
’
administrateur
pouvoir
se
déconnecter
pour
retourner
au
site
public
.
L
’
entrée
dans
l
’
administration
se
faire
sur
le
page
d
’
administration
du
œuvre
.
elle
afficher
le
liste
du
œuvre
dans
un
tableau
et
permettre
pour
chaque
œuvre
de
le
consulter
en
détail
,
de
la
modifier
ou
de
la
supprimer
.
le
page
d
’
administration
du
œuvre
pouvoir
ressembler
à
ceci
:
pour
charger
du
image
,
il
falloir
utiliser
le
superglobal
$
_FILE
.
PHP
–
MySQL
–
MVC
-
page
/
connexion
comme
administrateur
pour
se
connecter
comme
administrateur
,
il
falloir
créer
un
formulaire
par
exemple
comme
ceci
(
dans
chaque
page
de
le
partie
publique
)
:
vérifier
le
login
Ø
objectif
dans
un
premier
temps
on
vérifier
de
mot
de
passe
.
en
cas
d
’
erreur
,
on
afficher
un
page
d
’
erreur
.
en
cas
de
réussite
,
on
afficher
le
page
d
’
administration
du
œuvre
.
on
gérer
le
déconnexion
.
Ø
objectif
dans
un
second
temps
on
prendre
aussi
en
compter
le
possibilité
de
modifier
,
consulter
,
supprimer
le
œuvre
.
Ø
vérification
du
login
–
mot-de-passe
if
(
isset
(
$
_POST
[
'
admin
'
]
)
AND
htmlspecialchar
(
$
_POST
[
'
admin
'
]
)
=
=
'
admin
'
AND
isset
(
$
_POST
[
'
password
'
]
)
AND
htmlspecialchar
(
$
_POST
[
'
password
'
]
)
=
=
'
admin
'
)
{
$
_SESSION
[
'
admin
'
]
=
$
_POST
[
'
admin
'
]
;
}
dans
le
contrôleur
d
’
administration
,
on
vérifier
au
début
si
on
avoir
bien
recevoir
le
bon
login
–
motDePasse
.
on
vérifier
que
le
deux
champ
être
settés
et
qu
’
il
contenir
,
par
exemple
«
admin
»
et
«
admin
»
.
PHP
–
MySQL
–
MVC
-
page
/
si
c
’
être
le
cas
,
on
enregistrer
le
valeur
de
$
_SESSION
[
‘
admin
’
]
.
on
commencer
donc
par
faire
un
session_start
(
)
en
début
de
page
.
Ø
affichage
de
le
bon
vue
selon
que
le
$
_SESSION
[
'
admin
'
]
)
être
setté
ou
pas
,
on
choisir
le
vue
à
afficher
.
/
/
si
on
n
'
avoir
pas
le
droit
de
administration
if
(
!
isset
(
$
_SESSION
[
'
admin
'
]
)
)
{
include
(
'
vue
/
admin
/
dns-remplacer
'
)
;
}
else
{
include
(
'
vue
/
admin
/
dns-remplacer
'
)
;
}
Ø
gestion
de
le
déconnexion
quand
on
se
déconnecter
,
on
passer
un
$
_POST
[
'
deconnexion
'
]
à
le
page
de
retour
:
en
l
’
occurrence
celui
du
œuvre
.
de
là
,
dans
le
page
du
œuvre
,
on
tester
si
$
_POST
[
'
deconnexion
'
]
être
setté
(
on
venir
du
bouton
déconnexion
)
.
si
c
’
être
le
cas
,
on
unset
$
_SESSION
[
'
admin
'
]
Ø
page
d
’
erreur
on
créer
un
nouveau
vue
pour
gérer
l
’
erreur
si
l
’
admin
n
’
avoir
pas
le
mot
de
passe
.
le
vue
garder
le
header
du
utilisateur
public
:
on
pouvoir
retourner
sur
le
œuvre
et
le
exposition
.
PHP
–
MySQL
–
MVC
-
page
/
TP-MVC-V4
:
site
artiste
V4
–
MVC
:
administration
du
du
exposition
un
fois
connecter
en
tant
qu
’
administrateur
,
on
pouvoir
aussi
administrer
le
exposition
:
ajouter
,
supprimer
ou
modifier
.
quand
on
ajouter
un
exposition
,
il
falloir
pouvoir
préciser
le
liste
du
œuvre
exposer
.
quand
on
supprimer
un
exposition
,
il
falloir
supprimer
aussi
tout
le
œuvre
exposer
.
quand
on
modifier
un
exposition
,
il
falloir
pouvoir
ajouter
ou
supprimer
du
œuvre
et
aussi
modifier
le
prix
du
œuvre
dans
l
’
exposition
.
quand
l
’
utilisateur
être
connecter
comme
administrateur
,
on
faire
en
sorte
qu
’
il
rester
connecter
où
qu
’
il
ailler
,
sauf
s
’
il
se
déconnecter
.
PHP
–
MySQL
–
MVC
-
page
/
