cours|cour
PHP
verser
4.x
et
5.x
Sébastien
ROHAUT
tabler
du
matière
introduction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
définition
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
historique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilisation
pratique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
page
statique
vs
page
dynamique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
script
CGI
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
page
dynamique
et
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
pourquoi
préférer
PHP
à
de
autre
langage
comme
ASP
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ce
que
vous
devoir
déjà
connaître
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
nécessaire
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
nécessaire
client
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
respect
du
standard
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
base
:
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
syntaxe
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
intégration
à
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
séparateur
de
instruction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
bloc
de
instruction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
commentaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travailler
avec
du
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
déclarer
un
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
porter
du
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variable
prédéfinie
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
dynamique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
type
de
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
booléen
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
entier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
virgule
flottant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
chaîne
de
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
variable
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
constant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
obtenir
le
type
de
un
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
définir
et
supprimer
un
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
opérateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
précédence
du
opérateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
arithmétique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
de
assignation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
sur
le
bit
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
de
comparaison
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
de
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
de
exécution
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
de
incrémentation
/
décrémentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
logique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
opérateur
de
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
de
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
notion
de
expression
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
structure
de
contrôle
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
if
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
while
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
while
classique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
do
...
while
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
for
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
foreach
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
break
et
continu
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
switch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
return
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
require
et
include
(
_once
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
syntaxe
et
porter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
argument
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
valeur
de
retour
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
interne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
du
formulaire
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
GET
et
POST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
récupération
par
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
récupération
direct
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
utiliser
du
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
date
et
heure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
localisation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
récupérer
le
date
et
le
heure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
date
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
date
local
strftime
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
retour
par
tableau
getdate
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
heure
localtime
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
récupérer
ne
importer
quel
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
outil
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PhpMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
MysqlCC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
un
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
utilisateur
et
droit
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
et
modifier
du
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
type
numérique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
type
entier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
type
réel
(
flottant
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
booléen
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
type
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
type
char
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
type
TEXT
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
type
ENUM
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
typer
set
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
type
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
format
supporter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
DATETIME
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
typer
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
TIMESTAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
TIME
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
type
YEAR
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
création
:
syntaxe
SQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
type
de
table
(
MyISAM
et
InnoDB
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
index
FULLTEXT
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
création
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
recherche
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
recherche
booléen
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
MySQL
et
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
connexion
à
un
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
connexion
au
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
choix
de
un
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fermeture
de
un
connexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
séquence
complet
pour
un
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
exécuter
un
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
nombre
de
ligne
affecter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
nombre
de
ligne
retourner
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
récupérer
le
résultat
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
insertion
avec
auto-incrément
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
récupération
du
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
système
de
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travail
sur
le
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ouverture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
lecture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
fgets
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
fread
(
)
;
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fscanf
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fgetc
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
fgetss
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
fgetcsv
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
renvoyer
un
fichier
par
le
sortie
standard
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Ecriture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
déplacement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
fseek
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
ftell
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
rewind
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fin
de
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fermeture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travail
sur
le
répertoire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
répertoire
actuel
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
se
déplacer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ouvrir
,
lister
,
fermer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
récupérer
tout
le
entrée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
travail
sur
le
système
de
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
information
sur
le
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
action
sur
le
fichier
et
répertoire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Upload
de
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
travail
sur
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
pour
code
HTML
et
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
gestion
du
caractère
verrouiller
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
balise
et
caractère
spécial
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
texte
général
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
découper
un
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
S
.
ROHAUT
courir
programmation
PHP
pager
/
rechercher
et
comparer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
session
et
cookies
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
cookies
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
création
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accès
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
suppression
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
identification
HTTP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
connexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
déconnexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
session
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilisation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
ouverture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
variable
de
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
expiration
de
le
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
changer
le
accès
par
défaut
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
image
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Pré-requis
important
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
créer
un
image
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
type
possible
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
création
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
nouveau
image
dynamique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
récupération
de
un
image
existant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
publication
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
chargement
via
un
autre
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
travailler
sur
le
image
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
récupérer
du
information
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
couleur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
dessin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
remplissage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
point
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
ligne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
rectangle
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
cercle
,
ellipse
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
polygone
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ip-remplacée
>
texte
simple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
programmation
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
structure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
création
de
un
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accès
au
membre
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
opérateur
:
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
variable
,
protection
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
4.x
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
5.x
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
protection
du
variable
et
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ip-remplacée
>
attribut
et
méthode
statique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
ip-remplacée
>
constant
de
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
héritage
et
polymorphisme
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
mots-clé
parent
et
self
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
constructeur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
constructeur
et
classe
dériver
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
et
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
destructeur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
affectation
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
code
commun
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
comparaison
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
nouveauté
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
fonction
__autoload
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
le
classe
abstrait
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
classe
,
méthode
et
variable
finale
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
le
interface
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
gestion
dynamique
du
méthode
et
attribut
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
itération
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
type
hinting
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
le
exception
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
try
...
catch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
déclenchement
avec
throw
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
classe
exception
et
classe
personnaliser
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
:
erreur
ou
exception
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exception
par
défaut
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
sauvegarder
son
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
cas
de
un
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
autre
cas
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
introduction
définition
PHP
être
un
langage
de
script
HTML
exécuter
du
côté
du
serveur
.
il
vouloir
dire
«
PHP
:
Hypertext
Preprocessor
»
.
son
syntaxe
être
largement
inspirer
du
langage
C
,
de
java
et
de
Perl
,
avec
du
amélioration
spécifique
.
le
but
du
langage
être
de
écrire
rapidement
du
page
HTML
dynamique
.
historique
le
origine
de
PHP
remonter
à
quand
Rasmus
Lerdorf
avoir
créer
PHP
/
fi
,
un
librairie
de
script
Perl
utiliser
pour
le
publication
de
son
CV
sur
son
site
personnel
.
au
fur
et
à
mesure
du
évolution
,
le
librairie
avoir
être
porter
en
C
et
agrémenter
de
nouveau
fonctionnalité
pour
créer
du
page
dynamique
simple
pour
le
web
et
accéder
à
quelque
source
de
donnée
.
PHP
/
fi
signifier
Personal
home
page
/
Forms
Interpreter
.
PHP
/
fi
sortir
en
,
toujours
développer
par
un
seul
personne
.
ce
être
le
succès
:
site
(
%
du
nom
de
domaine
)
dire
la|le
utiliser
ou
le
supporter
.
le
contributeur
affluent
.
PHP
sort
en
juin
,
ce
être
le
premier
version
développer
conjointement
par
Rasmus
Lerdorf
,
Andi
Gutmans
et
Zeev
Suraski
et
entièrement
réécrire
(
le
version
précédent
être
trop
lent
pour
un
application
commercial
)
.
outre
le
performance
,
PHP
être
modulaire
et
extensible
,
permettre
de
lui
greffer
du
api
supplémentaire
,
ce
qui
n
'
avoir
pas
manquer
avec
le
support
de
nombreux
base
de
donnée
,
de
format
et
de
protocole
,
un
syntaxe
plus
cohérent
et
un
support
basique
de
le
objet
.
il
avoir
être
installer
sur
%
du
parc
mondial
du
serveur
web
avec
du
dizaine
de
millier
de
développeur
et
du
centaine
de
millier
de
site
.
le
moteur
de
PHP
avoir
être
repenser
afin
de
en
améliorer
le
performance
pour
du
application
complexe
et
de
augmenter
encore
le
modularité
.
un
nouveau
moteur
avoir
voir
le
jour
,
appeler
zend
Engine
(
contraction
de
Zeev
et
Andi
)
.
PHP
sortir
officiellement
en
mai
et
apporter
du
performance
accroître|accroire
,
le
support
de
plusieurs
serveur
web
,
le
session
,
un
sécurité
accroître|accroire
.
ce
être
actuellement
le
dernier
version
stable
(
nous
ne
compter
pas
le
,
et
)
.
et
PHP
?
actuellement
en
version
beta
,
un
cycle
qui
pouvoir
durer
plusieurs
mois|moi
,
le
but
de
PHP
être
un
amélioration
du
performance
du
moteur
zend
(
zend
Engine
)
,
un
modèle
objet
étendre
et
très
proche
du
C++
,
un
compatibilité
accroître|accroire
avec
de
nouveau
standard
et
le
ancien
(
RPC
,
XML
,
.NET
,
...
)
utilisation
pratique
–
forum
et
messagerie
–
commerce
électronique
–
banque
/
compte
en
ligne
–
publication
en
ligne
–
moteur
de
recherche
–
tout
ce
que
vous
vouloir
,
(
sauf
le
jeu
)
résumer
quelque
sigle
que
nous
aller
utiliser
par
le
suite
.
•
HTML
:
Hypertext
Markup
Language
•
PHP
:
People
Hate
Perl
...
non
:
PHP
,
Hypertext
PreProcessor
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
SQL
:
Structured
Query
Language
•
MySQL
:
serveur
de
base
de
donnée
et
le
outil
pour
y
accéder
•
LAMP
:
Linux
–
apache
–
MySQL
–
PHP
,
le
quatuor
gagner
du
serveur
web
.
apache
PHP
MySQL
Linux
page
statique
vs
page
dynamique
un
page
statique
et
un
page
écrire
directement
en
HTML
.
elle
pouvoir
éventuellement
incorporer
du
code
Javascript
lui
donner
un
semblant
de
'
dynamisme
'
mais
uniquement
du
côté
du
navigateur
et
du
donnée
local
.
pour
du
traitement
plus
lourd
nécessiter
le
accès
à
un
base
de
donnée
,
un
formatage
de
tableau
en
fonction
de
résultat
,
un
recherche
poussé
,
du
graphisme
,
il
falloir
passer
par
du
page
dynamique
et
par
un
langage
qui
être
exécuter
du
côté
du
serveur
:
ASP
sur
le
serveur
Microsoft
/
IIS
,
Perl
,
PHP
...
script
CGI
PHP
pouvoir
être
utiliser
comme
langage
CGI
.
pour
rappel
,
un
script
ou
programme
CGI
être
un
programme
comme
un
autre
mais
dont
le
sortie
être
dédier
à
un
navigateur
,
par
exemple
un
programme
shell
,
C
ou
Perl
qui
sortir
du
HTML
.
PHP
être
un
langage
script
comme
un
autre
on
pouvoir
la|le
utiliser
dans
ce
cas
,
mais
ce
ne
être
pas
forcément
le
mieux
.
page
dynamique
et
PHP
PHP
être
un
langage
Server
Side
ou
côté
serveur
.
lors
du
chargement
de
un
page
PHP
,
ce
être
le
serveur
qui
aller
lire
,
interpréter
et
exécuter
le
code
.
puis
il
renvoyer
le
résultat
,
généralement
sous
le
forme
de
code
HTML
au
navigateur
.
ainsi
le
navigateur
et
le
utilisateur
ne
voir
jamais
le
véritable
code
PHP
exécuter
.
de
plus
le
résultat
être
un
page
web
classique
en
HTML
,
pas
besoin
de
installer
sur
le
client
du
composant
spécifique
(
java
,
...
)
.
il
n
'
y
avoir
donc
pas
de
notion
de
vitesse
de
exécution
du
côté
du
client
,
mais
celui
du
serveur
être
prépondérant
.
pourquoi
préférer
PHP
à
de
autre
langage
comme
ASP
?
ASP
ne
être
pas
entièrement
un
langage
puisque
ASP
vouloir
dire
actif
Server
page
.
ASP
disposer
bien
entendre
de
son
propre
api
mais
qui
pouvoir
être
accessible
via
un
autre
langage
.
il
se
agir
de
utiliser
un
langage
(
quelconque
)
pour
créer
du
page
dynamique
.
nativement
disponible
avec
IIS
sous
Windows
,
il
ne
la|le
être
pas
par
défaut
avec
le
autre
système
ou
serveur
web
comme
apache
.
il
exister
cependant
du
module
de
compatibilité
ASP
pour
apache
comme
apache
:
:
ASP
qui
reprendre
le
api
ASP
en
le
étendre
et
en
programmation
PERL
.
sous
Windows
,
le
code
ASP
se
faire
généralement
en
VBScript
ou
en
Jscript
.
ce
être
aussi
possible
sous
Unix
/
Linux
et
apache
,
mais
il
falloir
alors
se
tourner
vers
du
solution
commercial
(
Sun
One
ASP
,
instant
ASP
,
...
)
.
sous
S
.
ROHAUT
courir
programmation
PHP
pager
/
Windows
ASP
et
VBScript
être
utiliser
pour
le
accès
au
ActiveX
,
composant
bien
pratique
mais
véritable
gruyère
pour
le
sécurité
.
il
ne
exister
pas
à
ce
jour
de
portage
de
ActiveX
sur
de
autre
système
que
Windows
.
PHP
être
disponible
pour
tout
le
plate-forme
et
permettre
de
faire
le
même
chose
,
sinon
plus
,
que
ASP
et
VBScript
.
ne
oublier
pas
que
PHP
disposer
de
plus
de
api|apis
!
ce
que
vous
devoir
déjà
connaître
vous
devoir
connaître
HTML
ainsi
que
un
langage
de
programmation
procédural
(
C
par
exemple
)
.
un
connaissance
basique
du
SQL
pouvoir
être
nécessaire
mais
être
aborder
.
le
nécessaire
serveur
PHP
ne
servir
pas
seulement
à
faire
du
page
dynamique
.
ce
être
un
langage
interpréter
qui
au
même
titre
que
Perl
,
python
ou
TCL
être
capable
de
lancer
du
script
intéractif
ou
non
.
on
pouvoir
même
utiliser
PHP
pour
créer
du
interface
graphique
(
extension
GTK
)
.
le
minimum
nécessaire
et
vital
pour
apprendre
PHP
être
donc
le
interpréteur
PHP
lui
même
sur
un
environnement
supporter
(
Unix
,
Windows
,
mac
,
...
)
.
si
on
parler
de
LAMP
,
on
voir
bien
le
référence
.
un
système
Linux
,
un
serveur
Web
apache
,
un
serveur
de
base
de
donnée
MySQL
et
un
interpréteur
PHP
.
le
version
de
PHP
permettre
de
fonctionner
avec
IIS
,
et
MySQL
exister
aussi
pour
Windows
.
on
pouvoir
donc
utiliser
un
architecture
WIMP
(
Windows
,
IIS
,
MySQL
,
PHP
)
ou
WAMP
(
Windows
,
apache
,
MySQL
,
PHP
)
.
ajouter
PHP
à
IIS
,
ce
être
laisser
le
porte
ouvert
à
tout
le
vent
,
on
préférer
donc
le
second
solution
.
le
distribution
Linux
disposer
déjà
du
nécessaire
pour
le
architecture
LAMP
et
le
paramétrage
être
assez
simple
.
de
plus
le
mode
«
user_mod
»
de
apache
permettre
à
chaque
utilisateur
de
créer
son
site
web
dans
un
répertoire
spécifique
de
son
répertoire
personnel
.
sous
Windows
,
ce
être
déjà
un
peu
plus
complexe
à
mettre
en
œuvre
manuellement
.
on
employer
donc
du
distribution
tout
faire
,
le
meilleur
se
nommer
EasyPHP
.
le
version
et
être
le
meilleur
pour
développer
.
on
pouvoir
ainsi
développer
son
site
sous
Windows
et
le
porter
tel
quel
sur
un
serveur
Unix
.
le
nécessaire
client
pour
développer
il
suffire
de
un
simple
éditeur
mais
il
valoir
mieux
préférer
un
éditeur
plus
évoluer
supporter
le
coloration
syntaxique
et
quelque
fonction
évoluer
.
le
éditeur
HAPEdit
être
parfaire
pour
développer
en
PHP
.
le
accès
au
base
MySQL
pouvoir
se
faire
soit
depuis
un
navigateur
(
phpMyAdmin
)
soit
depuis
un
interface
MySQLCC
ou
encore
DBDesigner
pour
le
conception
.
pour
le
test
:
un
simple
navigateur
respecter
le
standard
du
web
.
le
respect
du
standard
le
W3C
être
le
organisme
international
faire
loi
dans
le
monde
du
standard
du
web
.
il
avoir
définir
un
série
de
norme
dont
le
HTML
,
le
XML
,
le
XHTML
,
le
CSS
,
etc
.
pourquoi
respecter
un
standard
?
ce
être
le
garantie
de
un
bon
fonctionnement
et
du
bon
affichage
de
manière
identique
de
votre
page
sur
S
.
ROHAUT
courir
programmation
PHP
pager
/
tout
le
navigateur
supporter
ce
standard
.
avec
un
bon
déclaration
(
entêter
HTML
)
le
navigateur
IE6
,
Mozilla
,
Opera
,
Galeon
,
Konqueror
,
etc
,
être
compatibles
avec
ce
standard
.
le
utilisation
de
balise
propriétaire
à
un
navigateur
(
blink
par
exemple
)
ou
de
vbscript
(
sous
IE
)
être
à
proscrire
.
le
dernier
norme
HTML
valide
être
HTML
strict
.
XHTML
qui
à
terme
remplacer
définitivement
HTML
être
aussi
bien
supporter
.
le
dernier
norme
CSS
et
le
.
cependant
dans
ce
cas
préférer
CSS-1
car
seul
Opera
supporter
CSS-2
.
prendre
le
habitude
quand
ce
être
possible
de
tester
votre
site
sur
deux
ou
trois
navigateur
:
IE6
car
ce
être
le
plus
répandre
,
Opera
car
il
être
extrêmement
respectueux
du
standard
et
Mozilla
car
ce
être
le
challenger
et
probablement
remplacer
à
terme
de
IE
(
qui
ne
avoir
plus
de
évolution
de
version
avant
LongHorn
)
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
base
:
présentation
PHP
être
langage
très
souple
prendre
son
source
dans
divers
langage
comme
le
C
,
le
Perl
,
le
C++
.
il
être
donc
possible
de
avoir
plusieurs
style
de
script
(
programmation
classique
dire
procédural
ou
programmation
objet
,
ou
programmation
bordélique
)
.
ce
souplesse
permettre
un
très
grand
liberté
,
un
peu
comme
en
Perl
.
le
inconvénient
être
que
on
pouvoir
très
vite
obtenir
du
code
illisible
(
bordélique
)
,
même
si
cela
marche
très
bien
.
prendre
donc
le
habitude
de
commenter
votre
code
,
de
le
indenter
et
de
ne
placer
que
un
instruction
par
ligne
.
syntaxe
de
base
intégration
à
HTML
un
page
php
porter
le
extension
«
.php
»
.
un
page
PHP
pouvoir
être
entièrement
programmer
en
PHP
ou
mélanger
avec
du
code
html
.
PHP
être
un
langage
«
Embedded
HTML
»
,
ce
être
à
dire
que
il
apparaître
à
ne
importer
quel
endroit
de
le
page
HTML
.
pour
cela
on
le
placer
dans
du
balise
particulier
:
<
?
php
et
?
>
.
on
pouvoir
aussi
utiliser
le
balise
<
script
language
=
'
'
php
'
'
>
et
<
/
script
>
.
le
premier
forme
être
préférable
pour
plus
de
simplicité
et
un
compatibilité
XHTML
.
on
écrire
donc
un
page
HTML
dans
lequel
on
intégrer
du
code
PHP
.
<
html
>
<
head
>
<
title
>
titre
<
/
title
>
<
/
head
>
<
body
>
<
?
php
echo
`
`
hello
World
!
`
`
;
?
>
<
/
body
>
<
/
html
>
le
code
HTML
générer
être
le
suivre
<
html
>
<
head
>
<
title
>
titre
<
/
title
>
<
/
head
>
<
body
>
hello
World
!
<
/
body
>
<
/
html
>
le
utilisation
de
balise
pour
le
intégration
de
code
dans
un
page
web
être
très
souple
et
permettre
de
jongler
facilement
avec
du
code
PHP
et
du
code
HTML
:
<
?
php
if
(
expression
)
{
?
>
<
strong
>
ceci
être
vrai
.
<
/
strong
>
<
?
php
}
else
{
?
>
<
strong
>
ceci
être
faux
.
<
/
strong
>
<
?
php
}
?
>
S
.
ROHAUT
courir
programmation
PHP
pager
/
séparateur
de
instruction
comme
en
C
un
instruction
se
terminer
par
un
point-virgule
«
;
»
.
noter
que
le
balise
fermant
?
>
impliquer
le
fin
de
un
instruction
.
<
?
php
echo
`
`
ceci
être
un
test
'
'
;
?
>
<
?
php
echo
`
`
ceci
être
un
test
'
'
?
>
bloc
de
instruction
un
bloc
de
instruction
se
placer
entre
accolade
{
et
}
.
un
bloc
de
instruction
pouvoir
contenir
du
code
de
ne
importer
quel
longueur
et
être
considérer
dans
le
reste
du
code
comme
un
instruction
unique
.
si
ce
être
un
expression
(
qui
avoir
un
valeur
)
on
pouvoir
donc
assigner
le
bloc
,
faire
du
calcul
,
...
commentaire
le
commentaire
se
utiliser
comme
en
C
et
en
C++
avec
/
*
.
.
*
/
et
/
/
.
noter
que
un
balise
fermant
ferme
le
commentaire
en
cours|cour
.
<
?
php
/
*
echo
`
`
salut
!
'
'
*
/
/
/
commentaire
sur
ce
ligne
?
>
S
.
ROHAUT
courir
programmation
PHP
pager
/
travailler
avec
du
variable
déclarer
un
variable
un
variable
commencer
par
un
dollar
«
$
»
suivre
de
un
nom
de
variable
.
le
variable
ne
être
pas
typer
au
moment
de
leur
création
.
attention
PHP
être
sensible
à
le
casse
:
var
et
Var
ne
être
pas
le
même
variable
!
voici
le
règle
à
respecter
:
•
un
variable
pouvoir
commencer
par
un
lettre
•
un
variable
pouvoir
commencer
par
un
souligner
(
underscore
)
«
_
»
•
un
variable
ne
devoir
pas
commencer
par
un
chiffre
.
/
/
déclaration
et
règle
$
var
=
;
/
/
$
var
être
à
$
Var
=
;
/
/
$
Var
être
à
$
_toto
=
'
salut
'
;
/
/
Ok
$
3petitscochons
=
;
/
/
invalide
:
commencer
par
un
chiffre
leur
type
dépendre
de
leur
valeur
et
de
leur
contexte
de
utilisation
.
mais
on
pouvoir
forcer
(
cast
)
ponctuellement
un
variable
à
un
type
de
donnée
,
ce
qui
se
appeler
le
transtypage
.
de
même
comme
le
type
de
variable
pouvoir
changer
en
fonction
de
son
utilisation
ou
du
contexte
,
PHP
effectuer
automatiquement
un
transtypage
,
ce
qui
pouvoir
parfois
fournir
du
résultat
surprenant
.
on
affecter
un
valeur
à
un
variable
avec
le
signe
égal
«
=
»
avec
ou
sans
espace
avant
ou
après
.
/
/
déclaration
et
transtypage
$
var
=
'
'
;
/
/
un
chaîne
$
var+
=
;
/
/
$
var
être
maintenant
un
entier
$
var
=
$
var+0.3
;
/
/
$
var
être
maintenant
un
réel
de
type
double
$
var
=
+
`
`
petit
cochon
'
'
;
/
/
$
var
être
un
entier
qui
valoir
par
défaut
le
variable
être
assigner
par
valeur
:
le
valeur
assigner
à
le
variable
être
recopier
dans
le
variable
.
PHP
pouvoir
aussi
travailler
par
référence
.
un
variable
pouvoir
donc
référencer
un
autre
variable
.
on
dire
alors
que
le
variable
devenir
un
alias
,
ou
pointe
sur
un
autre
variable
.
on
assigner
par
référence
en
utiliser
le
signe
«
&
»
devant
le
variable
assigner
$
var
=
;
$
ref
=
&
$
var
;
/
/
$
ref
devenir
un
référence
de
$
var
echo
$
ref
;
/
/
affiche
$
var
=
;
echo
$
ref
;
/
/
affiche
$
ref
=
;
echo
$
var
;
/
/
affiche
attention
à
le
valeur
constant
NULL
insensible
à
le
casse
.
affecter
un
valeur
NULL
à
un
variable
signifier
ne
pas
puis
affecter
de
valeur
.
portée
du
variable
le
portée
de
un
variable
dépendre
du
contexte
.
un
variable
déclarer
dans
un
script
et
hors
de
un
fonction
être
global
mais
par
défaut
son
portée
être
limiter
au
script
courir
,
ainsi
que
au
code
éventuellement
inclure
(
include
,
require
)
et
ne
être
pas
accessible
dans
le
fonction
ou
de
autre
script
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
avoir
=
;
/
/
global
par
défaut
function
foo
(
)
{
echo
$
avoir
;
/
/
ce
être
un
variable
local
à
le
fonction
:
ne
afficher
rien
}
pour
accéder
à
un
variable
global
dans
un
fonction
,
il
falloir
utiliser
le
mot-clé
global
.
$
avoir
=
;
/
/
global
par
défaut
$
b
=
;
/
/
idem
function
foo
(
)
{
global
$
avoir
,
$
b
;
/
/
on
récupérer
le
variable
global
$
b
=
$
a+
$
b
;
}
echo
$
b
;
/
/
affiche
PHP
accepter
le
variable
statique
.
comme
en
C
un
variable
statique
ne
perdre
pas
son
valeur
quand
on
sortir
de
un
fonction
.
function
test_static
(
)
{
static
$
avoir
=
;
echo
$
avoir
;
/
/
à
chaque
passage
dans
le
fonction
$
a++
;
}
variable
prédéfinie
PHP
disposer
de
un
grand
nombre
de
variable
prédéfinie
.
ce
variable
être
généralement
de
type
scalaire
ou
du
tableau
.
elle
être
souvent
de
type
superglobal
,
ce
être
à
dire
accessible
depuis
ne
importer
où
sans
notion
de
portée
.
voici
quelque
tableau
prédéfini
(
voir
au
point
tableau
pour
comprendre
leur
utilisation
)
.
•
$
_GLOBALS
:
tableau
du
variable
global
.
le
clé
être
le
nom
de
le
variable
.
•
$
_SERVER
:
variable
fournir
par
le
serveur
web
,
par
exemple
'
SERVER_NAME
'
•
$
_GET
:
variable
fournir
par
HTTP
par
le
méthode
GET
(
formulaire
)
•
$
_POST
:
idem
mais
pour
le
méthode
POST
•
$
_COOKIE
:
le
variable
fournir
par
un
cookie
•
$
_FILES
:
variable
sur
le
téléchargement
de
un
fichier
(
upload
)
•
$
_ENV
:
accès
au
variable
de
environnement
du
serveur
•
$
_SESSION
:
le
variable
de
session
(
voir
cours|cour
sur
le
session
)
noter
:
avant
le
version
de
PHP
,
le
variable
passée
par
le
méthode
GET
,
POST
(
formulaire
et
URL
)
et
ainsi
de
suite
être
automatiquement
créer
dans
le
script
de
destination
.
http
:
/
/
dns-remplacer
/
dns-remplacer
?
action
=
enr
créer
automatiquement
le
variable
$
action
qui
prendre
le
valeur
'
enr
'
.
<
input
type
=
'
'
hidden
'
'
name
=
'
'
cache
'
'
value
=
'
'
toto
'
'
>
créer
dans
le
page
cible
(
action
du
form
)
un
variable
$
cache
de
valeur
`
`
toto
'
'
.
ce
ne
être
plus
automatique
depuis
PHP
.
il
falloir
passer
par
le
tableau
superglobal
ci-dessus
.
on
pouvoir
cependant
passer
outre
en
modifier
le
valeur
register_globals
dans
le
dns-remplacé
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
variable
dynamique
un
variable
dynamique
utiliser
le
valeur
de
un
variable
comme
nom
de
un
autre
variable
.
on
utiliser
le
variable
dynamique
en
rajouter
un
«
$
»
devant
le
nom
de
le
premier
variable
.
$
avoir
=
'
'
var
'
'
;
$
$
avoir
=
;
/
/
$
$
avoir
=
equivaut
en
fait
à
$
var
=
echo
$
avoir
;
/
/
affiche
var
echo
$
$
avoir
;
/
/
affiche
echo
$
var
;
/
/
affiche
attention
avec
le
tableau
!
pour
éviter
tout
ambiguïté
,
il
être
préférable
de
placer
le
variable
entre
accolade
.
type
de
variable
booléen
un
booléen
pouvoir
prendre
deux
valeur
TRUE
ou
FALSE
.
le
deux
constante
TRUE
et
FALSE
pouvoir
être
utiliser
sans
aucun
distinction
de
casse
(
pas
de
différence
entre
le
majuscule
et
le
minuscule
)
.
$
var
=
FALSE
;
/
/
FALSE
,
False
,
false
,
...
$
var2
=
True
;
/
/
TRUE
,
True
,
true
,
...
tout
le
type
pouvoir
être
convertir
en
booléen
.
voici
le
cas
où
un
variable
retourner
FALSE
en
booléen
suivre
le
type
:
•
booléen
:
FALSE
•
entier
:
(
zéro
)
•
nombre
flotter
:
(
zéro
)
•
chaîne
:
chaîne
vide
`
`
'
'
ou
`
`
'
'
(
zéro
)
•
tableau
:
tableau
vide
sans
aucun
élément
•
objet
:
objet
vide
sans
aucun
élément
•
constant
spécial
NULL
dans
tout
le
autre
cas
,
le
valeur
retourner
être
TRUE
.
attention
:
être
considérer
comme
vrai
donc
TRUE
.
comme
en
C
,
le
test
de
condition
dans
le
structure
de
contrôle
effectuer
un
convertion
booléen
du
le
condition
.
if
(
$
var
=
=
true
)
echo
`
`
ok
'
'
;
if
(
$
var
)
echo
`
`
ok
'
'
;
/
/
identique
entier
un
entier
être
le
ensemble
du
nombre
naturel
,
ce
être
à
dire
dans
virgule
,
positif
ou
négatif
.
le
entier
être
généralement
coder
sur
bit
mais
cela
dépendre
de
le
architecture
.
si
on
affecter
un
nombre
entier
qui
dépasser
le
capacité
de
le
variable
,
celui
-ci
être
transformer
en
réel
(
float
)
.
enfin
il
n
'
y
avoir
pas
de
notion
de
entier
non
signer
.
lors
de
le
conversion
de
un
booléen
en
entier
,
FALSE
devenir
et
TRUE
devenir
.
lors
de
le
conversion
de
un
nombre
à
virgule
flottant
,
le
nombre
être
arrondir
à
le
valeur
inférieur
se
il
être
S
.
ROHAUT
courir
programmation
PHP
pager
/
positif
,
ou
supérieur
se
il
être
négatif
(
conversion
vers
zéro
)
.
pour
le
conversion
depuis
le
chaîne
,
voir
à
ce
type
.
virgule
flottant
on
partir
ici
du
nombre
réel
,
double
ou
float
,
ce
être
à
dire
le
nombre
à
virgule
.
le
virgule
être
spécifier
par
le
point
«
.
»
.
le
puissance
de
se
exprimer
avec
le
«
e
»
ou
le
«
E
»
.
$
var
=
;
$
var2
=
1.1e4
;
/
/
*
10^4
:
chaîne
de
caractère
un
chaîne
être
un
séquence
de
caractère
.
PHP
travailler
en
ASCII
soit
caractère
,
mais
ne
supporter
pas
encore
le
format
Unicode
,
prévoir
dans
le
version
.
il
n
'
y
avoir
pas
de
limite
théorique
pour
le
taille
de
le
chaîne
.
on
distinguer
trois
syntaxe
pour
utiliser
un
chaîne
•
le
guillemet
simple
'
...
'
(
apostrophe
)
:
comme
en
shell
,
tout
le
caractère
inclure
dans
le
chaîne
être
sortir
tel
quel
sans
interprétation
.
si
vous
devoir
afficher
un
guillemet
simple
,
il
falloir
la|le
échapper
:
\
'
•
le
guillemet
double
`
`
...
'
'
:
certain
séquence
de
caractère
être
interpréter
et
le
variable
être
substituer
(
remplacer
par
leur
valeur
)
.
•
HereDoc
:
identique
au
HereScripts
en
Shell
.
le
texte
saisi
jusqu
'
à
un
délimiteur
spécifier
être
placer
dans
le
variable
.
voici
le
tableau
issu
de
le
documentation
PHP
du
séquence
pouvoir
être
utiliser
avec
le
guillemet
double
.
séquence
valeur
\n
nouveau
ligne
(
linefeed
,
LF
ou
0x0A
(
)
en
ASCII
)
\r
retour
à
le
ligne
(
carriage
return
,
CR
ou
0x0D
(
)
en
ASCII
)
\t
tabulation
horizontal
(
HT
ou
0x09
(
)
en
ASCII
)
\\
Antislash
\
$
caractère
$
\
'
'
guillemet
double
un
séquence
de
caractère
qui
permettre
de
rechercher
un
nombre
en
\
[
]
{
,
}
notation
octal
.
\x
[
0-9A-Fa-
un
séquence
de
caractère
qui
permettre
de
rechercher
un
nombre
en
f
]
{
,
}
notation
hexadécimal
.
echo
'
attention
l\'abus
d\'alcool
être
dangereux
'
;
$
var
=
;
echo
`
`
le
valeur
de
\
$
var
être
$
var\n
'
'
;
$
toto
=
<
<
<
fin
S
.
ROHAUT
courir
programmation
PHP
pager
/
salut
le
ami
comment
cela
aller
?
fin
;
echo
$
toto
;
ne
importer
quel
variable
pouvoir
être
afficher
dans
un
chaîne
comme
ci-dessus
mais
attention
si
deux
variable
avoir
un
nom
proche
!
il
falloir
alors
utiliser
le
accolade
{
}
comme
en
shell
.
enfin
on
pouvoir
accéder
à
ne
importer
quel
caractère
dans
un
chaîne
en
indiquer
son
position
(
qui
commencer
à
zéro
)
entre
deux
accolade
coller
juste
après
le
nom
de
le
variable
.
$
fic
=
'
dns-remplacer
'
;
$
fic
=
'
riri
fifi
loulou
'
;
echo
`
`
$
fic
$
{
fic
}
s
'
'
;
/
/
afficher
riri
fifi
loulou
dns-remplacer
echo
`
`
$
fic
{
}
'
'
;
/
/
affiche
o
on
pouvoir
facilement
concaténer
deux
chaîne
avec
le
opérateur
point
«
.
»
.
on
pouvoir
ajouter
du
texte
à
un
chaîne
avec
le
opérateur
point
égal
«
.
=
»
.
$
str
=
'
'
salut
le
ami
!
\n
'
'
;
$
str
.
=
'
'
comment
cela
aller
?
`
`
;
/
/
`
`
salut
le
ami
!
\nComment
cela
aller
?
$
str2
=
$
str
.
`
`
\n
'
'
;
/
/
`
`
salut
le
ami
!
\nComment
cela
aller
?
\n
si
vous
devoir
utiliser
un
chaîne
de
caractère
comme
valeur
numérique
(
dans
un
addition
par
exemple
,
attention
à
son
contenu
.
le
chaîne
être
de
type
double
(
réel
)
si
elle
contenir
un
'
e
'
ou
un
'
E
'
.
sinon
ce
être
un
entier
.
le
valeur
numérique
être
ensuite
définir
par
le
début
de
le
chaîne
.
si
le
chaîne
commencer
par
un
valeur
numérique
,
elle
être
utiliser
,
sinon
elle
être
égal
à
zéro
.
si
le
premier
expression
être
un
chaîne
,
le
type
de
variable
dépendre
de
le
second
expression
.
$
val
=
'
'
'
'
;
/
/
float
,
$
val
=
'
'
toto2
'
'
;
/
/
+
=
$
val
=
'
'
petit
cochon
'
'
;
/
/
+
=
(
le
être
en
premier
dans
le
chaîne
)
le
tableau
un
tableau
PHP
être
un
association
ordonner
.
un
association
faire
correspondre
du
valeur
à
du
clé
.
le
tableau
être
très
souple
,
il
pouvoir
avoir
de
multiple
dimension
,
être
indexer
par
un
clé
numérique
ou
texte
,
être
utiliser
comme
table
de
hachage
,
un
pile
,
un
queue
,
...
un
valeur
de
tableau
pouvoir
être
elle
même
un
tableau
,
pour
créer
du
arbre
par
exemple
.
un
tableau
être
créer
avec
le
fonction
array
(
)
qui
prendre
comme
argument
du
pair
«
key
=
>
value
»
séparer
par
du
virgule
.
le
clé
pouvoir
être
soit
un
entier
soit
du
texte
.
attention
,
être
un
entier
,
un
chaîne
!
si
le
clé
être
absent
alors
ce
être
le
dernier
clé
entier
plus
qui
être
choisir
.
si
ce
être
le
premier
,
ce
être
zéro
.
on
accéder
au
élément
de
un
tableau
à
le
aide
du
crochet
«
[
et
]
»
.
on
placer
entre
ce
crochet
le
clé
entier
ou
le
chaîne
.
$
var
=
array
(
,
,
,
,
)
;
echo
$
var
[
]
;
/
/
echo
$
var
[
]
;
/
/
$
tab
=
array
(
`
`
avoir
'
'
=
>
,
'
'
nom
'
'
=
>
'
'
toto
'
'
,
'
'
pipo
'
'
,
,
=
>
)
;
echo
$
tab
[
]
;
/
/
pipo
echo
$
tab
[
]
;
/
/
echo
$
tab
[
'
avoir
'
]
;
/
/
echo
$
tab
[
'
nom
'
]
;
/
/
toto
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
utilisation
de
le
fonction
array
ne
être
pas
obligatoire
et
on
pouvoir
déclarer
un
tableau
à
le
volée
.
$
tab2
[
]
=
;
$
tab2
[
]
=
;
/
/
equivaut
$
tab2
[
]
=
$
tab2
[
'
test
'
]
=
'
mon
chaîne
'
;
on
pouvoir
aussi
créer
du
tableau
multidimensionnel
à
le
aide
du
deux
méthode
précédent
.
$
tab
=
array
(
`
`
un
'
'
=
>
array
(
`
`
riri
'
'
,
=
>
'
'
fifi
'
'
,
=
>
'
loulou
'
)
,
=
>
array
(
,
,
)
,
array
(
'
un
'
,
'
deux
'
,
'
trois
'
)
)
;
echo
$
tab
[
'
un
'
]
[
]
;
/
/
riri
echo
$
tab
[
]
[
]
;
/
/
echo
$
tab
[
]
[
]
;
/
/
trois
$
tab2
[
'
un
'
]
[
'
deux
'
]
=
'
test
'
;
/
/
créer
un
tableau
à
deux
dimension
il
exister
un
fonction
très
pratique
pour
lister
le
contenu
de
un
tableau
,
ou
pour
modifier
le
élément
:
foreach
(
)
.
$
tab
=
array
(
=
>
'
un
'
,
=
>
'
deux
'
,
=
>
'
trois
'
)
;
foreach
(
$
tab
avoir
$
valeur
)
{
echo
`
`
$
valeur
\n
'
'
;
/
/
afficher
un
deux
trois
}
foreach
(
$
tab
avoir
$
cle
=
>
$
valeur
)
{
echo
`
`
$
cle
=
>
$
valeur\n
'
'
;
/
/
affiche
=
>
un
,
=
>
deux
,
=
>
trois
}
le
variable
objet
le
objet
se
créer
avec
le
instruction
class
.
pour
créer
un
instace
de
le
objet
il
falloir
utiliser
le
mot
clé
new
.
class
test
{
function
affiche_hello
(
)
{
echo
`
`
hello
!
`
`
;
}
}
$
obj
=
new
test
;
$
obj-
>
affiche_hello
(
)
;
le
constant
le
constant
être
un
nom
qui
prendre
un
valeur
ne
pouvoir
pas
être
modifier
un
fois
fixé
.
un
constante
ne
être
accessible
que
en
lecture
seul
.
elle
être
sensible
à
le
casse
et
devoir
par
convention
être
écrire
en
majuscule
.
on
définir
un
constante
avec
le
fonction
define
(
)
et
devoir
respecter
certain
règle
:
•
un
constante
ne
commencer
pas
par
un
$
•
un
constant
être
accessible
depuis
ne
importer
quel
endroit
du
code
•
un
constante
ne
pouvoir
pas
être
redéfinir
•
un
constante
ne
pouvoir
contenir
de
un
scalaire
(
entier
,
booléen
,
chaîne
,
double
)
.
define
(
constant
,
'
'
valeur
'
'
)
;
echo
constant
;
/
/
affiche
`
`
valeur
'
'
S
.
ROHAUT
courir
programmation
PHP
pager
/
obtenir
le
type
de
un
variable
pour
obtenir
le
type
de
un
variable
,
on
utiliser
le
fonction
«
gettype
»
qui
retourner
un
chaîne
de
texte
indiquer
le
type
.
mais
attention
rien
ne
garantir
que
le
résultat
soit
le
même
de
un
version
PHP
à
un
autre
.
le
type
retourner
être
`
`
boolean
'
'
,
`
`
integer
'
'
,
`
`
double
'
'
(
pour
du
raison
historique
,
`
`
double
'
'
être
retourner
lorsque
un
valeur
de
type
float
être
fournir
,
au
lieu
de
le
chaîne
`
`
float
'
'
)
,
`
`
string
'
'
,
`
`
array
'
'
,
'
'
object
'
'
,
`
`
resource
'
'
(
depuis
PHP
)
,
`
`
NULL
'
'
(
depuis
PHP
)
,
`
`
unknown
type
'
'
si
vous
souhaiter
réellement
tester
le
type
de
un
variable
,
il
être
préférable
de
utiliser
le
fonction
de
type
«
is_
*
»
:
is_array
,
is_bool
,
is_double
,
is_float
,
is_int
,
is_integer
,
is_long
,
is_null
,
is_numeric
,
is_object
,
is_real
,
is_resource
,
is_string
,
is_callable
(
être
ce
un
fonction
)
.
définir
et
supprimer
un
variable
si
vous
souhaiter
savoir
si
un
variable
être
définir
,
ce
être
à
dire
si
elle
être
affecter
,
on
utiliser
«
isset
»
.
enfin
si
vous
souhaiter
supprimer
un
variable
,
il
falloir
utiliser
«
unset
»
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
opérateur
le
précédence
du
opérateur
ce
être
le
ordre
dans
lequel
le
valeur
devoir
être
analyser
.
ainsi
le
expression
+
*
ne
être
pas
lire
de
gauche
à
droit|droite
et
ne
retourner
pas
mais
.
voici
le
tableau
du
priorité
du
opérateur
par
ordre
croître
de
priorité
:
associativité
opérateur
gauche
,
gauche
or
gauche
xor
gauche
and
droit
print
gauche
=
+
=
-
=
*
=
/
=
.
=
%
=
&
=
|
=
^
=
~
=
<
<
=
>
>
=
gauche
?
:
gauche
|
gauche
&
&
gauche
|
gauche
^
gauche
&
non-associatif
=
=
!
=
=
=
=
!
=
=
non-associatif
<
<
=
>
>
=
gauche
<
<
>
>
gauche
+
-
.
gauche
*
/
%
droit
!
~
++
--
(
int
)
(
double
)
(
string
)
(
array
)
(
object
)
@
droit
[
non-associatif
new
opérateur
arithmétique
le
opérateur
+
,
-
,
*
,
/
et
%
.
le
«
%
»
être
le
modulo
:
le
reste
de
le
division
.
opérateur
de
assignation
le
principal
être
le
=
mais
on
avoir
aussi
comme
en
C
du
opérateur
combiner
+
=
,
-
=
,
*
=
,
/
=
,
%
=
,
.
=
...
opérateur
sur
le
bit
le
opérateur
être
le
&
(
AND
)
,
|
(
or
)
,
^
(
XOR
)
,
~
(
NOT
,
~
$
avoir
)
,
>
>
(
$
avoir
>
>
$
b
décalage
de
$
b
bit
S
.
ROHAUT
courir
programmation
PHP
pager
/
sur
le
gauche
)
et
<
<
(
$
avoir
<
<
$
b
décalage
de
$
b
bit
sur
le
droit|droite
)
.
un
décalage
de
bit
sur
le
gauche
équivaloir
à
un
multiplication
par
deux
,
un
décalage
sur
le
droit|droite
à
un
division
par
deux
.
opérateur
de
comparaison
le
opérateur
être
=
=
(
$
avoir
=
=
$
b
,
même
valeur
)
,
=
=
=
(
$
avoir
=
=
=
$
b
,
même
valeur
et
même
type
)
,
!
=
ou
<
>
(
différent
)
,
<
,
>
,
<
=
,
>
=
.
il
y
avoir
aussi
le
opérateur
ternaire
«
?
:
»
expr1
?
expr2
:
expr3
si
expr1
être
vrai
alors
expr2
sinon
expr3
.
opérateur
de
erreur
on
disposer
de
un
opérateur
spécial
@
qui
appliquer
à
un
expression
empêcher
le
sortie
de
un
message
de
erreur
en
cas
de
problème
.
on
pouvoir
toujours
récupérer
le
message
de
erreur
éventuel
à
le
aide
de
le
variable
$
php_errormsg
mais
uniquement
si
le
option
«
track_errors
»
être
à
«
on
»
dans
le
dns-remplacé
.
$
retour
=
@
$
tab
[
'
toto
'
]
;
/
/
ne
retourner
pas
de
erreur
si
le
index
toto
ne
exister
pas
opérateur
de
exécution
on
pouvoir
exécuter
du
commande
externe
au
PHP
comme
en
Shell
avec
le
opérateur
«
guillemts
inverse
«
`
»
(
altgr+6
)
.
attention
le
option
«
safe_mode
»
devoir
être
à
«
on
»
dans
le
dns-remplacé
.
on
pouvoir
aussi
utiliser
le
fonction
«
shell_exec
»
qui
faire
exécuter
un
commande
par
le
shell
.
opérateur
de
incrémentation
/
décrémentation
on
disposer
comme
en
C
du
opérateur
++
et
--
,
à
utiliser
avant
ou
après
le
nom
de
variable
.
$
a++
;
/
/
retourne
$
avoir
puis
la|le
incrémenter
de
++
$
avoir
;
/
/
incrémenter
$
avoir
de
puis
retourne
$
avoir
$
avoir
--
;
/
/
retourne
$
avoir
puis
décrémente
de
--
$
avoir
;
/
/
décrémente
$
avoir
de
puis
retourne
$
avoir
attention
!
le
opérateur
réagir
au
type
de
variable
.
le
PHP
réagir
comme
en
PERL
.
ainsi
:
$
avoir
=
'
z
'
;
$
a++
;
echo
$
avoir
;
/
/
retourner
aa
$
a++
;
echo
$
avoir
;
/
/
retourner
ab
opérateur
logique
le
opérateur
logique
être
:
«
and
»
ou
«
&
&
»
(
$
avoir
and
$
b
,
$
avoir
&
&
$
b
)
vrai
si
$
avoir
et
$
b
être
vrai
«
or
»
ou
«
|
|
»
(
$
avoir
or
$
b
,
$
avoir
|
|
$
b
)
vrai
si
$
avoir
ou
$
b
être
vrai
«
xor
»
(
$
avoir
xor
$
b
)
vrai
si
$
avoir
ou
$
b
être
vrai
mais
pas
le
deux
en
même
temps
«
!
»
(
!
$
avoir
)
vrai
si
$
avoir
être
faux
.
attention
,
and
et
or
ne
avoir
pas
le
même
priorité
(
priorité
plus
faible
)
que
&
&
et
|
|
!
S
.
ROHAUT
courir
programmation
PHP
pager
/
opérateur
de
chaîne
il
y
avoir
deux
opérateur
de
chaîne
:
le
«
.
»
qui
concaténer
deux
chaîne
entre
elle
et
le
«
.
=
»
déjà
voir
qui
être
le
opérateur
de
assignation
.
$
avoir
=
'
'
bonjour
'
'
;
$
b
=
$
avoir
.
'
'
le
ami
'
'
;
/
/
$
b
contenir
bonjour
le
ami
$
b
.
=
'
'
!
salut
.
`
`
;
/
/
$
b
contenir
bonjour
le
ami
!
salut
.
opérateur
de
tableau
on
pouvoir
«
additionner
»
deux
tableau
entre
eux
avec
le
«
+
»
:
le
tableau
de
droit|droite
être
ajouter
au
tableau
de
gauche
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
notion
de
expression
en
PHP
,
un
expression
pouvoir
être
résumer
en
«
tout
ce
qui
avoir
un
valeur
»
.
ceci
dire
,
on
remarquer
vite
que
en
PHP
tout
ou
presque
être
un
expression
.
un
variable
ou
un
constante
se
voir
affecter
du
valeur
.
ce
valeur
être
donc
le
expression
de
le
variable
ou
de
le
constant
.
nous
pouvoir
résumer
en
dire
que
un
expression
représenter
tout
ce
qui
pouvoir
être
évaluer
.
on
ne
pouvoir
évaluer
que
le
valeur
...
un
fonction
pouvoir
aussi
être
un
expression
si
elle
retourner
un
valeur
.
on
dire
généralement
que
un
fonction
avoir
retourner
tel
valeur
.
un
comparaison
être
aussi
un
expression
:
elle
retourner
un
valeur
booléen
.
un
calcul
être
aussi
un
expression
,
puisqu'une
valeur
être
retourner
,
affecter
,
calculer
.
PHP
être
orienter
expression
ce
qui
faire
que
tout
ou
presque
en
PHP
être
un
expression
.
PHP
chercher
donc
à
décomposer
tout
ce
qui
être
possible
en
expression
à
évaluer
,
pour
optimiser
son
traitement
.
voici
quelque
exemple
.
$
avoir
=
;
on
distinguer
au
premier
coup
de
œil
deux
valeur
:
le
variable
$
avoir
et
le
valeur
,
le
variable
$
avoir
être
mettre
à
jour
avec
le
valeur
.
or
en
interne
il
y
avoir
un
troisième
valeur
qui
rentrer
en
jeu
:
le
valeur
de
le
assignation
,
ici
elle
même
assigner
à
.
ce
ligne
signifier
en
fait
:
«
$
avoir
=
être
un
expression
qui
valoir
»
.
$
b
=
$
avoir
=
;
le
assignation
être
analyser
de
droit
à
gauche
.
ici
nous
avoir
le
expression
$
avoir
=
qui
valoir
donc
.
$
b
valoir
donc
aussi
.
ce
être
plus
rapide
à
écrire
et
à
exécuter
que
$
avoir
=
;
$
b
=
;
$
avoir
=
$
a+3
;
PHP
évaluer
de
abord
le
expression
$
a+3
soit
le
valeur
de
$
avoir
incrémenter
de
,
et
assigner
le
nouveau
valeur
à
$
avoir
.
$
a+
=
;
le
résultat
être
le
même
,
mais
il
être
plus
rapide
car
$
avoir
ne
être
évaluer
que
un
seul
fois
.
on
pouvoir
en
arriver
à
avoir
du
expression
surprenant
:
$
avoir
=
;
$
b
=
$
a+
=
;
le
variable
$
avoir
être
incrémenter
de
et
valoir
donc
.
le
expression
$
a+
=
valoir
.
$
b
se
voir
assigner
le
valeur
.
le
expression
valoir
donc
.
dernier
chose
:
$
avoir
?
$
b
:
$
c
si
le
expression
$
avoir
être
vrai
,
le
expression
$
b
être
évaluer
,
sinon
le
expression
$
c
être
évaluer
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
avoir
=
TRUE
;
$
b
=
;
$
c
=
;
echo
$
avoir
?
$
b
:
$
c
;
/
/
affiche
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
structure
de
contrôle
if
if
(
expression
)
commander
ou
{
bloc
de
commande
}
else
commander
ou
{
bloc
de
commande
}
il
y
avoir
aussi
le
«
elseif
»
,
combinaison
du
if
et
du
else
.
le
elseif
en
un
mot
pouvoir
aussi
se
écrire
en
deux
mot
:
le
résultat
être
le
même
.
on
pouvoir
écrire
du
elseif
en
chaîne
.
le
premier
dont
le
expression
être
vrai
être
exécuter
.
If
(
expression
)
commander
ou
{
bloc
de
commande
}
elsif
(
expression
)
commander
ou
{
bloc
de
commande
}
elsif
(
expression
)
commander
ou
{
bloc
de
commande
}
...
on
pouvoir
placer
du
HTML
comme
commander
ou
dans
le
bloc
de
commande
.
<
?
php
if
(
$
avoir
=
=
)
{
?
>
à
=
<
?
php
}
?
>
on
pouvoir
aussi
utiliser
un
syntaxe
alternatif
:
on
ouvrir|ouvrer
le
bloc
(
juste
après
le
if
,
le
else
ou
le
elseif
)
avec
le
«
:
»
deux
point
,
et
on
fermer
le
instruction
avec
«
endif
»
.
<
?
php
if
(
$
avoir
=
=
)
:
print
`
`
avoir
=
'
'
;
print
`
`
...
'
'
;
elseif
(
$
avoir
=
=
)
:
print
`
`
avoir
=
'
'
;
print
`
`
!
!
!
`
`
;
else
:
print
`
`
avoir
ne
valoir
ni
ni
'
'
;
endif
;
?
>
while
while
classique
ce
être
le
boucle
«
tant
que
»
simple
:
tant
que
le
condition
ne
être
pas
vrai
,
on
continuer
le
boucle
.
le
expression
être
placer
en
début
de
boucle
:
si
le
expression
être
faux
avant
de
rentrer
dans
le
boucle
,
le
boucle
ne
être
pas
exécuter
.
While
(
expression
)
commander
ou
{
bloc
de
commande
}
on
pouvoir
aussi
utiliser
le
syntaxe
alternatif
:
while
(
expression
)
:
commander
ou
{
bloc
de
commande
}
endwhile
do
...
while
ce
être
le
second
possibilité
.
dans
ce
cas
le
commande
ou
le
bloc
de
commande
être
exécuter
au
S
.
ROHAUT
courir
programmation
PHP
pager
/
moins
un
fois
,
car
le
expression
conditionnel
être
tester
en
fin
de
boucle
.
do
{
bloc
de
commande
}
while
(
expression
)
for
le
«
for
»
du
PHP
être
identique
au
«
for
»
du
C
.
for
(
expr1
;
expr2
;
expr3
)
commander
ou
{
bloc
de
commande
}
«
expr1
»
être
exécuter
à
le
premier
entrée
dans
le
boucle
.
«
expr2
»
être
exécuter
à
chaque
début
de
itération
jusqu
'
à
ce
que
le
expression
être
faux
auquel
cas
on
sortir
de
le
boucle
.
«
expr3
»
être
exécuter
à
le
fin
de
le
itération
.
le
usage
habituel
de
un
tel
boucle
être
de
placer
le
état
initial
en
expr1
,
le
condition
de
sortie
en
expr2
et
le
calcul
en
expr3
.
mais
on
peu
effectuer
tout
sorte
de
chose
.
/
/
de
à
for
(
$
i
=
;
$
i
<
=
;
print
$
i
,
$
i++
)
/
/
infini
for
(
;
;
)
/
/
de
à
for
(
$
i
=
;
$
i
<
=
;
print
$
i
,
$
i++
)
;
on
pouvoir
employer
un
syntaxe
alternatif
avec
le
«
:
»
et
«
endfor
»
.
for
(
expr1
;
expr2
;
expr3
)
:
commander
ou
{
bloc
de
commande
}
endfor
foreach
le
boucle
«
foreach
»
être
peut-être
le
un
du
plus
intéressant
pour
le
manipulation
de
tableau
ou
de
résultat
de
requête
SQL
.
elle
permettre
de
lister
le
tableau
.
elle
disposer
de
deux
syntaxe
.
foreach
(
array_expression
avoir
$
value
)
commande
foreach
(
array_expression
avoir
$
key
=
>
$
value
)
commande
le
premier
syntaxe
récupérer
le
élément
du
tableau
un
par
un
,
séquentiellement
.
le
valeur
de
le
élément
courir
du
tableau
être
placer
dans
$
value
.
le
second
syntaxe
être
presque
identique
,
sauf
que
en
plus
le
clé
(
le
index
)
de
le
élément
actuel
être
placer
dans
$
key
.
attention
:
modifier
le
valeur
de
$
value
(
ou
de
$
key
)
ne
modifier
pas
le
tableau
car
ce
boucle
travailler
sur
un
copie
,
pas
un
référence
.
par
contre
dans
le
second
cas
,
comme
on
disposer
de
le
clé
,
rien
ne
empêcher
de
assigner
quoi
que
ce
être
à
le
élément
courant
.
remarque
:
un
appel
à
foreach
«
rembobiner
»
automatiquement
le
tableau
à
son
premier
élément
.
mais
pas
dans
le
autre
boucle
,
il
falloir
alors
utiliser
«
reset
»
.
reset
(
$
arr
)
;
while
(
list
(
,
$
value
)
=
each
(
$
arr
)
)
{
echo
`
`
valeur
:
$
value
<
br
>
\n
'
'
;
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
foreach
(
$
arr
avoir
$
value
)
{
echo
`
`
valeur
:
$
value
<
br
>
\n
'
'
;
}
$
avoir
=
array
(
'
'
un
'
'
=
>
,
'
'
deux
'
'
=
>
,
'
'
trois
'
'
=
>
,
'
'
dix-sept
'
'
=
>
)
;
foreach
(
$
avoir
avoir
$
k
=
>
$
v
)
{
print
`
`
\
$
avoir
[
$
k
]
=
>
$
v.\n
'
'
;
}
break
et
continuer
le
instruction
«
break
»
permettre
de
sortir
de
un
for
,
while
,
foreach
ou
switch
.
on
pouvoir
lui
indiquer
de
combien
de
structure
on
souhaiter
sortir
si
elle
être
emboîter
.
le
instruction
«
continu
»
permettre
de
passer
à
le
itération
suivant
.
attention
PHP
conside
le
switch
comme
un
boucle
,
et
dans
ce
cas
,
réévaluer
le
switch
.
on
pouvoir
indiquer
à
continuer
combien
de
structure
emboîter
relancer
.
switch
le
«
switch
»
être
équivalent
à
un
série
de
if
et
permettre
de
comparer
avec
un
grand
nombre
de
valeur
.
switch
(
$
i
)
{
case
:
print
`
`
i
egale
'
'
;
break
;
case
:
print
`
`
i
egale
'
'
;
break
;
case
:
print
`
`
i
egale
'
'
;
break
;
default
:
print
`
`
i
être
inférieur
à
ou
supérieur
à
»
;
}
le
switch
se
arrêter
à
le
premier
expression
caser
vrai
puis
exécuter
le
code
suivre
dans
le
ordre
indiqué
,
jusqu
'
à
le
premier
instruction
break
.
se
il
n
'
y
avoir
pas
de
break
,
tout
le
code
jusqu
'
à
le
fin
du
switch
être
exécuter
.
dans
le
exemple
suivre
,
si
$
i
valoir
,
tout
le
print
être
afficher
!
switch
(
$
i
)
{
case
:
print
`
`
i
egale
'
'
;
case
:
print
`
`
i
egale
'
'
;
case
:
print
`
`
i
egale
'
'
;
}
noter
aussi
que
le
default
devoir
intervenir
en
dernier
,
sinon
il
n
'
avoir
aucun
intérêt
.
enfin
on
pouvoir
employer
un
syntaxe
alternatif
avec
«
:
»
et
«
endswitch
»
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
switch
(
$
i
)
:
case
:
print
`
`
i
egale
'
'
;
break
;
case
:
print
`
`
i
egale
'
'
;
break
;
endswitch
return
contrairement
à
de
autre
langage
,
«
return
»
ne
être
pas
un
fonction
mais
un
instruction
.
dans
un
fonction
,
return
servir
à
sortir
de
celui
-ci
et
à
retourner
un
valeur
.
dans
un
script
,
elle
sortir
de
celui
-ci
.
attention
cependant
dans
le
script
inclure
(
voir
require
et
include
)
:
le
return
dans
ce
type
de
code
considérer
que
il
sortir
de
le
fonction
«
require
»
ou
«
include
»
et
donc
ne
sortir
pas
du
script
ou
de
le
fonction
dans
lequel
ce
code
avoir
être
inclure
!
comme
return
être
un
élément
du
langage
et
pas
un
fonction
il
y
avoir
pas
besoin
de
utiliser
le
parenthèse
.
require
et
include
(
_once
)
«
require
»
et
«
include
»
inclure
à
le
endroit
actuel
et
exécuter
le
fichier
PHP
.
il
être
identique
dans
leur
fonctionnement
à
un
exception
:
le
traitement
du
erreur
.
un
include
produire
un
«
warning
»
(
le
code
continuer
en
principe
à
se
exécuter
)
tandis
que
un
require
produire
un
«
erreur
fatal
»
(
le
exécution
se
arrêter
)
.
comme
require
et
include
être
du
élément
du
langage
et
pas
du
fonction
il
y
avoir
pas
besoin
de
utiliser
le
parenthèse
.
«
require_once
»
et
«
include_once
»
ressembler
à
leur
homologue
avec
cependant
un
différence
.
quoi
que
il
arriver
,
le
fichier
être
inclure
un
seul
fois
.
si
un
second
«
require_once
»
apparaître
avec
le
même
fichier
,
le
instruction
ne
être
pas
exécuter
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
fonction
syntaxe
et
porter
voici
le
syntaxe
de
un
fonction
.
function
fonc
(
$
arg1
,
$
arg2
,
$
arg3
,
...
,
$
argn
)
{
bloc
de
commande
return
$
valeur
}
un
fonction
n
'
avoir
pas
besoin
de
être
déclarer
avant
de
être
utiliser
(
sauf
si
vous
vouloir
rester
compatible
avec
PHP3
)
,
du
moment
que
elle
apparaître
dans
le
script
.
il
y
avoir
cependant
deux
exception
:
si
le
fonction
être
conditionnel
,
ce
être
à
dire
déclarer
dans
un
if
,
ou
si
le
fonction
être
déclarer
dans
un
autre
fonction
.
dans
le
premier
cas
elle
être
inconnu
du
reste
du
code
tant
que
le
condition
du
if
ne
être
pas
vrai
.
dans
le
second
cas
elle
ne
être
connaître
que
quand
le
premier
fonction
être
exécuter
.
voici
un
exemple
tirer
du
manuel
.
pour
le
premier
cas
:
$
makefoo
=
true
;
/
*
impossible
de
appeler
foo
(
)
ici
,
car
ce
fonction
ne
exister
pas
.
mais
nous
pouvoir
utiliser
bar
(
)
*
/
bar
(
)
;
if
(
$
makefoo
)
{
function
foo
(
)
{
echo
`
`
je
ne
exister
pas
tant
que
le
programme
ne
être
pas
passer
ici.\n
'
'
;
}
}
/
*
Maitenant
,
nous
pouvoir
appeler
foo
(
)
car
$
makefoo
être
maintenant
vrai
*
/
if
(
$
makefoo
)
foo
(
)
;
function
bar
(
)
{
echo
`
`
je
exister
dès
le
début
du
programme.\n
'
'
;
}
pour
le
second
cas
:
function
foo
(
)
{
function
bar
(
)
{
echo
`
`
je
ne
exister
pas
tant
que
foo
(
)
ne
être
pas
appelé.\n
'
'
;
}
}
/
*
impossible
de
appeler
bar
(
)
ici
car
il
ne
exister
pas
.
*
/
foo
(
)
;
/
*
maintenant
,
nous
pouvoir
appeler
bar
(
)
,
car
le
utilisation
de
foo
(
)
l
'
avoir
rendre
accessible
.
*
/
bar
(
)
;
argument
on
pouvoir
passer
autant
de
argument
que
souhaiter
à
un
fonction
PHP
,
de
tout
type
.
le
argument
S
.
ROHAUT
courir
programmation
PHP
pager
/
être
séparer
par
du
virgule
.
par
défaut
il
être
passer
par
copie
.
function
affiche
(
$
msg
)
{
echo
$
msg
;
}
il
être
possible
de
passer
du
argument
par
référence
,
on
pouvoir
donc
en
changer
le
valeur
à
le
intérieur
de
le
fonction
.
pour
cela
on
rajouter
un
«
&
»
devant
le
argument
.
on
pouvoir
passer
ponctuellement
un
variable
par
référence
en
placer
un
«
&
»
devant
son
nom
lors
de
le
appel
de
le
fonction
.
function
modif
(
&
$
msg
)
{
$
msg
=
'
'
coucou
'
'
;
}
$
msg
=
'
'
salut
'
'
;
modif
(
$
msg
)
;
echo
$
msg
;
/
/
coucou
on
pouvoir
aussi
définir
du
valeur
par
défaut
mais
attention
,
dans
le
liste
du
paramètre
le
valeur
par
défaut
devoir
être
en
dernier
.
function
affiche
(
$
nom
,
$
prenom
=
'
'
toto
'
'
)
{
echo
`
`
$
nom
$
prenom
'
'
;
}
enfin
on
pouvoir
utiliser
un
nombre
variable
de
argument
avec
le
fonction
func_num_args
,
func_get_arg
et
func_get_args
.
function
foo
(
)
{
$
numargs
=
func_num_args
(
)
;
echo
`
`
nombre
de
argument
:
$
numargs\n
'
'
;
}
foo
(
,
,
)
;
/
/
affiche
'
nombre
de
argument
:
'
valeur
de
retour
on
retourner
un
valeur
avec
le
instruction
«
return
»
.
on
pouvoir
retourner
tout
type
de
valeur
,
mais
pas
plusieurs
en
même
temps
.
cependant
rien
ne
empêcher
dans
ce
cas
de
retourner
un
tableau
.
un
fonction
pouvoir
aussi
retourner
un
référence
.
dans
ce
cas
elle
devoir
être
déclarer
avec
un
«
&
»
devant
son
nom
.
function
carre
(
$
num
)
{
return
$
num
*
$
num
;
}
echo
carre
(
)
;
/
/
affiche
'
'
fonction
interne
en
plus
du
fonction
définir
par
le
utilisateur
PHP
proposer
un
grand
nombre
de
fonction
interne
couvrir
un
multitude
de
domaine
.
pour
accéder
à
ce
fonction
il
falloir
simplement
la|le
appeler
par
leur
nom
et
que
le
module
correspondre
être
compiler
avec
PHP
.
nous
voir
dans
le
chapitre
suivant
comment
en
utiliser
certain
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
gestion
du
formulaire
en
PHP
GET
et
POST
le
but
être
de
récupérer
le
contenu
du
champ
de
un
formulaire
HTML
dans
notre
code
PHP
pour
pouvoir
le
traiter
.
lorsque
un
formulaire
être
envoyer
à
un
script
PHP
,
tout
le
variable
être
disponible
automatiquement
dans
le
script
.
le
formulaire
pouvoir
être
de
type
GET
ou
POST
.
pour
rappel
,
dans
un
formulaire
de
type
GET
,
le
information
être
passer
directement
par
le
URL
en
clair
,
ce
qui
pouvoir
poser
du
problème
de
limitation
suivre
le
serveur
(
de
à
octet
selon
le
cas
)
.
le
méthode
POST
n
'
avoir
pas
ce
genre
de
limitation
,
car
le
information
être
transmettre
par
le
conteneur
de
variable
global
(
dans
la|le
entêter
)
et
être
de
plus
cacher
.
PHP
pouvoir
gérer
le
deux
méthode
de
manière
transparent
.
récupération
par
tableau
chaque
champ
de
formulaire
en
PHP
être
définir
par
un
nom
et
un
valeur
.
dans
un
script
,
PHP
aller
récupérer
ce
nom
et
ce
valeur
dans
du
tableau
spécial
dire
superglobal
(
accessible
depuis
partout
)
.
pour
le
méthode
GET
,
le
tableau
être
$
_GET
,
pour
le
méthode
POST
le
tableau
être
$
_POST
.
si
vous
ne
souhaiter
pas
vous
soucier
de
le
méthode
,
vous
pouvoir
utiliser
le
tableau
$
_REQUEST
.
en
index
on
avoir
le
nom
du
champ
de
formulaire
(
ou
de
le
variable
passée
en
URL
)
et
en
valeur
le
valeur
du
champ
.
par
exemple
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
post
'
'
>
Name
:
<
input
type
=
'
'
text
'
'
name
=
'
'
username
'
'
>
<
br
>
Email
:
<
input
type
=
'
'
text
'
'
name
=
'
'
email
'
'
>
<
br
>
<
input
type
=
'
'
submit
'
'
name
=
'
'
submit
'
'
value
=
'
'
Submit
me
!
`
`
>
<
/
form
>
dans
le
page
PHP
dns-remplacer
on
avoir
:
<
?
php
echo
$
_POST
[
'
username
'
]
;
echo
$
_REQUEST
[
'
email
'
]
;
?
>
imaginer
le
appel
de
un
page
dns-remplacer
par
un
URL
comme
ceci
:
http
:
/
/
dns-remplacer
/
dns-remplacer
?
id
=
ici
on
transmettre
un
variable
via
un
URL
et
donc
le
méthode
implicite
GET
.
pour
récupérer
«
id
»
dans
un
code
PHP
on
pouvoir
donc
faire
:
<
?
php
echo
$
_GET
[
'
id
'
]
;
echo
$
_REQUEST
[
'
id
'
]
;
?
>
$
_GET
ne
contenir
que
le
variable
de
type
GET
.
$
_POST
ne
contenir
que
le
variable
de
type
POST
.
$
_REQUEST
contenir
le
variable
de
type
POST
et
GET
mais
aussi
le
variable
de
cookies
.
il
être
aussi
possible
de
procéder
autrement
en
récupérer
le
nom
du
champ
directement
en
tant
que
variable
sans
passer
par
un
tableau
.
pour
cela
il
falloir
vérifier
dans
le
fichier
dns-remplacer
que
le
valeur
register_globals
être
à
on
.
dans
ce
cas
le
nom
du
champ
de
formulaire
être
le
S
.
ROHAUT
courir
programmation
PHP
pager
/
nom
du
variable
:
<
?
php
echo
$
username
;
echo
$
email
;
?
>
récupération
direct
si
ce
valeur
être
à
off
et
que
pour
divers
raison
(
sécurité
,
pas
le
droit
,
etc
)
vous
ne
souhaiter
/
pouvoir
pas
le
modifier
,
il
exister
tout
de
même
un
méthode
.
le
fonction
«
import_request_variable
»
permettre
de
effectuer
explicitement
le
même
chose
.
ce
fonction
prendre
un
ou
deux
paramètre
,
le
second
être
optionnel
.
après
exécution
,
on
récupérer
le
variable
sans
passer
par
un
tableau
.
le
premier
paramètre
être
le
type
de
variable
que
on
souhaiter
récupérer
:
–
P
/
p
:
variable
de
type
POST
–
G
/
g
:
variable
de
type
GET
–
C
/
c
:
variable
de
type
cookie
on
pouvoir
cumuler
le
ensemble
mais
attention
à
le
ordre
!
le
second
paramètre
être
le
préfixe
que
on
souhaiter
donner
au
nom
du
variable
que
on
aller
récupérer
.
voici
deux
exemple
:
<
?
php
import_request_variable
(
`
`
p
'
'
)
;
echo
$
username
;
?
>
<
?
php
import_request_variable
(
`
`
P
'
'
,
'
'
Post_
'
'
)
;
echo
$
Post_username
;
?
>
on
pouvoir
aussi
passer
par
le
fonction
«
extract
»
qui
permettre
de
exporter
un
tableau
en
variable
.
ainsi
pour
le
tableau
$
_POST
:
<
?
php
extract
(
$
_POST
)
;
echo
$
username
;
?
>
utiliser
du
tableau
le
formulaire
permettre
de
utiliser
du
liste
à
choix
multiple
et
PHP
devoir
donc
récupérer
le
ensemble
du
choix
de
le
utilisateur
.
pour
cela
il
falloir
utiliser
le
tableau
.
<
form
action
=
'
'
<
?
php
echo
$
HTTP_SERVER_VARS
[
'
PHP_SELF
'
]
;
?
>
'
'
method
=
'
'
post
'
'
>
Name
:
<
input
type
=
'
'
text
'
'
name
=
'
'
personal
[
name
]
'
'
>
<
br
>
Email
:
<
input
type
=
'
'
text
'
'
name
=
'
'
personal
[
email
]
'
'
>
<
br
>
Beer
:
<
br
>
<
select
multiple
name
=
'
'
vin
[
]
'
'
>
<
option
valoir
=
'
'
bordeaux
'
'
>
bordeaux
<
/
option
>
<
option
valoir
=
'
'
beaujolais
'
'
>
beaujolais
<
/
option
>
<
option
valoir
=
'
'
loire
'
'
>
loire
<
/
option
>
<
/
select
>
<
br
>
S
.
ROHAUT
courir
programmation
PHP
pager
/
<
input
type
=
'
'
hidden
'
'
name
=
'
'
action
'
'
value
=
'
'
submitted
'
'
>
<
input
type
=
'
'
submit
'
'
name
=
'
'
submit
'
'
value
=
'
'
submit
me
!
`
`
>
<
/
form
>
dans
le
exemple
précédent
si
par
exemple
on
sélectionner
plusieurs
vin
(
ex
:
bordeaux
et
beaujolais
)
on
avoir
dans
$
vin
[
]
bordeaux
et
$
vin
[
]
beaujolais
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
date
et
heure
localisation
le
format
de
date
et
de
heure
(
format
et
langue
)
être
dépendant
de
le
environnement
de
exécution
du
code
PHP
.
généralement
le
plupart
du
serveur
web
incorporer
PHP
être
configurer
en
langue
anglais
avec
un
gestion
du
information
de
localisation
en
anglais
.
il
pouvoir
être
préférable
de
passer
en
français
pour
un
site
francophone
ce
qui
simplifier
largement
le
tâche
.
on
pouvoir
effectuer
cela
avec
le
fonction
«
setlocal
»
.
voici
deux
exemple
:
un
sous
NT
/
et
un
autre
sous
Linux
.
if
(
substr
(
php_uname
(
)
,
,
)
!
=
`
`
Windows
'
'
)
{
setlocal
(
LC_TIME
,
'
'
fr_FR
@
euro
'
'
)
;
}
else
{
setlocal
(
LC_TIME
,
'
'
fr
'
'
)
;
}
dans
ce
exemple
,
nous
vérifier
de
abord
à
quel
système
nous
avoir
à
faire
(
fonction
php_uname
)
puis
en
fonction
du
résultat
nous
passer
en
localisation
français
selon
deux
méthode
.
après
ce
changement
,
le
appel
au
fonction
retourner
du
jour
de
le
semaine
ou
du
mois|moi
le
faire
en
français
.
récupérer
le
date
et
le
heure
date
(
)
le
plus
simple
être
de
utiliser
le
fonction
«
date
»
qui
retourner
le
heure
local
sous
forme
de
un
chaîne
de
caractère
à
préciser
en
premier
paramètre
.
en
second
paramètre
on
pouvoir
préciser
un
«
timestamp
»
si
on
ne
souhaiter
pas
le
heure
actuel
.
pour
récupérer
le
date
du
jour
:
echo
date
(
`
`
d
/
m
/
y
'
'
)
;
/
/
/
/
voici
le
caractère
utilisable
(
documentation
PHP
)
:
•
avoir
-
`
`
am
'
'
(
matin
)
ou
`
`
pm
'
'
(
après-midi
)
•
à
-
`
`
AM
'
'
(
matin
)
ou
`
`
PM
'
'
(
après-midi
)
•
B
-
heure
Internet
Swatch
•
d
-
jour
du
mois|moi
,
sur
deux
chiffre
(
éventuellement
avec
un
zéro
)
:
`
`
'
'
à
`
`
'
'
•
D
-
jour
de
le
semaine
,
en
trois
lettre
(
et
en
anglais
)
:
par
exemple
`
`
Fri
'
'
(
pour
vendredi
)
•
F
-
mois|moi
,
textuel
,
version
longue
;
en
anglais
,
i.e.
.
`
`
January
'
'
(
pour
janvier
)
•
g
-
heure
,
au
format
12h
,
sans
le
zéro
initial
i.e.
.
`
`
'
'
à
`
`
'
'
•
G
-
heure
,
au
format
24h
,
sans
le
zéro
initial
i.e.
.
`
`
'
'
à
`
`
'
'
•
heure
-
heure
,
au
format
12h
,
`
`
'
'
à
`
`
'
'
•
heure
-
heure
,
au
format
24h
,
`
`
'
'
à
`
`
'
'
•
i
-
minute
;
`
`
'
'
à
`
`
'
'
•
I
(
i
majuscule
)
-
`
`
'
'
si
le
heure
de
été
être
activer
,
`
`
'
'
si
le
heure
de
hiver
.
•
j
-
jour
du
mois|moi
sans
le
zéro
initial
:
`
`
'
'
à
`
`
'
'
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
l
-
(
'
L
'
minuscule
)
-
jour
de
le
semaine
,
textuel
,
version
longue
;
en
anglais
,
i.e.
.
`
`
Friday
'
'
(
pour
vendredi
)
•
L
-
booléen
pour
savoir
si
le
année
être
bissextile
(
`
`
'
'
)
ou
pas
(
`
`
'
'
)
•
m
-
mois|moi
;
i.e.
.
`
`
'
'
à
`
`
'
'
•
M
-
mois|moi
,
en
trois
lettre
(
et
en
anglais
)
:
par
exemple
`
`
Apr
'
'
(
pour
avril
)
•
n
-
mois|moi
sans
le
zéro
initial
;
i.e.
.
`
`
'
'
à
`
`
'
'
•
O
-
différence
de
heure
avec
le
heure
de
Greenwich
,
exprimer
en
heure
;
i.e.
.
`
`
'
'
•
r
-
format
de
date
RFC
;
i.e.
.
`
`
Thu
,
Dec
:
:
'
'
(
ajouter
en
PHP
)
•
s
-
second
;
i.e.
.
`
`
'
'
à
`
`
'
'
•
S
-
suffixe
ordinal
de
un
nombre
,
en
anglais
,
sur
deux
lettre
:
i.e.
.
`
`
th
'
'
,
`
`
nd
'
'
•
t
-
nombre
de
jour
dans
le
mois|moi
donner
,
i.e.
.
`
`
'
'
à
`
`
'
'
•
T
-
fuseau
horaire
de
le
machine
;
i.e.
.
`
`
mettre
'
'
•
U
-
seconde|second
depuis
un
époque
•
w
-
jour
de
le
semaine
,
numérique
,
i.e.
.
`
`
'
'
(
dimanche
)
to
`
`
'
'
(
samedi
)
•
W
-
numéro
de
semaine
dans
le
année
ISO-8601
:
le
semaine
commencer
le
lundi
(
ajouter
en
PHP
)
•
y
-
année
,
chiffre
;
i.e.
.
`
`
'
'
•
y
-
année
,
chiffre
;
i.e.
.
`
`
'
'
•
z
-
jour
de
le
année
;
i.e.
.
`
`
'
'
à
`
`
'
'
•
z
-
décalage
horaire
en
second
(
i.e.
.
`
`
'
'
à
`
`
'
'
)
tout
autre
caractère
pouvoir
être
employer
et
ne
être
pas
interpréter
.
si
vous
désirer
employer
le
un
de
ce
caractère
,
il
falloir
le
verrouiller
avec
un
antislash
.
attention
avec
ce
fonction
le
RESULTAT
être
en
anglais
.
on
pouvoir
récupérer
le
timestamp
actuel
avec
le
fonction
«
time
»
.
le
commande
suivant
avoir
le
même
effet
que
le
précédent
:
echo
date
(
`
`
d
/
m
/
y
'
'
,
time
(
)
)
;
/
/
/
/
date
local
strftime
(
)
pour
formater
le
résultat
en
local
(
pour
tenir
compte
de
le
localisation
)
il
falloir
utiliser
le
fonction
«
strftime
»
qui
tenir
compte
de
le
langue
.
on
avoir
donc
un
résultat
en
français
.
le
premier
paramètre
être
le
chaîne
de
formatage
.
le
second
être
un
éventuel
timestamp
.
•
%
avoir
-
nom
abréger
du
jour
de
le
semaine
(
local
)
.
•
%
à
-
nom
complet
du
jour
de
le
semaine
(
local
)
.
•
%
b
-
nom
abréger
du
mois|moi
(
local
)
.
•
%
B
-
nom
complet
du
mois|moi
(
local
)
.
•
%
c
-
représentation
préférer
pour
le
date
et
heure
,
en
local
.
•
%
C
-
numéro
de
siècle
(
le
année
,
diviser
par
et
arrondir
entre
et
)
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
%
d
-
jour
du
mois|moi
en
numérique
(
intervalle
à
)
•
%
D
-
identique
à
%
m
/
%
d
/
%
y
•
%
e
-
numéro
du
jour
du
mois|moi
.
le
chiffre
être
précéder
de
un
espace
(
de
'
'
à
'
'
)
•
%
heure
-
identique
à
%
b
•
%
heure
-
heure
de
le
journée
en
numérique
,
et
sur
24-heures
(
intervalle
de
à
)
•
%
I
-
heure
de
le
journée
en
numérique
,
et
sur
heure
(
intervalle
à
)
•
%
j
-
jour
de
le
année
,
en
numérique
(
intervalle
à
)
•
%
m
-
mois|moi
en
numérique
(
intervalle
à
)
•
%
M
-
minute
en
numérique
•
%
n
-
newline
character
•
%
p
-
soit
àm
'
oùpm
'
en
fonction
de
le
heure
absolu
,
ou
en
fonction
du
valeur
enregistrer
en
local
.
•
%
r
-
le
heure
au
format
a.m.
.
et
p.m.
.
•
%
R
-
le
heure
au
format
24h
•
%
S
-
seconder
en
numérique
•
%
t
-
tabulation
•
%
T
-
le
heure
actuel
(
égal
à
%
heure
:
%
M
:
%
S
)
•
%
u
-
le
numéro
de
jour
dans
le
semaine
,
de
à
.
(
représenter
lundi
)
•
%
U
-
numéro
de
semaine
dans
le
année
,
en
considérer
le
premier
dimanche
de
le
année
comme
le
premier
jour
de
le
premier
semaine
.
•
%
V
-
le
numéro
de
semaine
comme
définir
dans
le
ISO
:
,
sous
forme
décimal
,
de
à
.
le
semaine
être
le
premier
semaine
qui
avoir
plus
de
jour
dans
le
année
courant
,
et
dont
lundi
être
le
premier
jour
.
•
%
W
-
numéro
de
semaine
dans
le
année
,
en
considérer
le
premier
lundi
de
le
année
comme
le
premier
jour
de
le
premier
semaine
•
%
w
-
jour
de
le
semaine
,
numérique
,
avec
dimanche
=
•
%
x
-
format
préférer
de
représentation
de
le
date
sans
le
heure
•
%
X
-
format
préférer
de
représentation
de
le
heure
sans
le
date
•
%
y
-
le
année
,
numérique
,
sur
deux
chiffre
(
de
à
)
•
%
y
-
le
année
,
numérique
,
sur
quatre
chiffre
•
%
z
-
fuseau
horaire
,
ou
nom
ou
abréviation
•
%
%
-
un
caractèrè
%
'
littéral
retour
par
tableau
getdate
(
)
le
fonction
«
getdate
»
permettre
aussi
de
récupérer
le
date
et
le
heure
actuel
(
avec
éventuellement
un
timestamp
en
paramètre
)
mais
sous
forme
de
tableau
indexer
selon
le
valeur
suivant
:
•
`
`
second
'
'
-
second
•
`
`
minute
'
'
-
minute
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
`
`
hours
'
'
-
heure
•
`
`
mday
'
'
-
jour
du
mois|moi
•
`
`
wday
'
'
-
jour
de
le
semaine
,
numérique
.
:
dimanche
jusqu
'
à
:
samedi
•
`
`
mon
'
'
-
mois|moi
,
numérique
•
`
`
year
'
'
-
année
,
numérique
•
`
`
yday
'
'
-
jour
de
le
année
,
numérique
;
i.e.
.
`
`
'
'
•
`
`
weekday
'
'
-
jour
de
le
semaine
,
texte
complet
(
en
anglais
)
;
i.e.
.
`
`
Friday
'
'
•
`
`
month
'
'
-
mois|moi
,
texte
complet
(
en
anglais
)
;
i.e.
.
`
`
January
'
'
$
aujourdhui
=
getdate
(
)
;
$
mois|moi
=
$
aujourdhui
[
'
month
'
]
;
$
mjour
=
$
aujourdhui
[
'
mday
'
]
;
$
annee
=
$
aujourdhui
[
'
year
'
]
;
echo
`
`
$
mjour
/
$
mois|moi
/
$
annee
'
'
;
le
heure
localtime
(
)
pour
le
heure
on
pouvoir
utiliser
le
fonction
«
localtime
»
qui
pouvoir
aussi
prendre
un
paramètre
timestamp
et
qui
retourner
un
tableau
indexer
selon
le
valeur
suivant
;
•
`
`
tm_sec
'
'
-
second
•
`
`
tm_min
'
'
-
minute
•
`
`
tm_hour
'
'
-
heure
•
`
`
tm_mday
'
'
-
jour
du
mois|moi
•
`
`
tm_mon
'
'
-
mois|moi
de
le
année
•
`
`
tm_year
'
'
-
année
,
incompatible
an
•
`
`
tm_wday
'
'
-
jour
de
le
semaine
•
`
`
tm_yday
'
'
-
jour
de
le
année
•
`
`
tm_isdst
'
'
-
Est
ce
que
le
heure
de
hiver
avoir
prendre
effet
?
récupérer
ne
importer
quel
dater
on
pouvoir
récupérer
ne
importer
quel
dater
en
timestamp
ou
en
chaîne
.
on
pouvoir
pour
cela
utiliser
le
fonction
«
strtotime
»
.
elle
prendre
comme
paramètre
un
chaîne
de
texte
en
anglais
que
elle
essayer
de
convertir
en
timestamp
.
voici
quelque
exemple
.
echo
strtotime
(
`
`
now
'
'
)
;
/
/
timestamp
actuel
echo
strtotime
(
`
`
day
'
'
)
;
/
/
hier
echo
strtotime
(
`
`
day
'
'
)
;
/
/
demain
echo
strtotime
(
`
`
september
'
'
)
;
/
/
le
septembre
echo
strtotime
(
`
`
year
weeks
days
'
'
)
;
/
/
dans
an
semaine
jour
S
.
ROHAUT
courir
programmation
PHP
pager
/
MySQL
présentation
MySQL
être
un
SGBDR
:
«
système
de
gestion
de
base
de
donnée
relationnel
»
qui
se
définir
lui-
même
comme
être
«
le
base
de
donnée
open
source
le
plus
populaire
au
monde
»
.
rien
que
cela
.
et
ce
être
vrai
!
Edité
par
le
société
MySQL
ab
,
MySQL
être
un
produit
open
source
libre
de
utilisation
sous
licence
GPL
pour
le
projet
libre
.
cependant
un
licence
commercial
être
nécessaire
dans
le
autre
cas
,
notamment
si
on
souhaiter
redistribuer
MySQL
avec
un
produit
non
libre
ou
si
on
souhaiter
un
support
technique
.
le
version
de
production
actuel
de
MySQL
être
le
version
(
à
le
écriture
de
ce
support
)
,
mais
le
grand
majorité
du
serveur
du
hébergeur
être
encore
dans
le
dernier
version
de
MySQL
(
)
.
le
futur
version
actuellement
en
développement
être
le
et
ne
être
surtout
pas
à
utiliser
en
production
.
le
principal
qualité
de
MySQL
être
son
simplicité
et
son
rapidité
.
son
principal
défaut
être
le
manque
de
fonctionnalité
dire
avancer
(
dans
le
version
précédent
)
:
clé
étranger
,
procédure
stocker
,
trigger
et
selects
imbriquer
notamment
.
mais
cela
ne
devoir
pas
occulter
son
puissance
avec
le
ajout
de
fonctionnalité
avancer
comme
un
syntaxe
SQL
étendre
(
replacer
,
limit
,
delete
)
,
le
index
de
recherche
«
fulltext
»
permettre
de
créer
du
moteur
de
recherche
,
...
le
prochain
version
stable
(
)
combler
le
lacune
du
précédent
version
avec
le
support
complet
de
le
syntaxe
SQL
ANSI-99
.
outil
PhpMyAdmin
se
il
rester
bien
entendre
possible
de
utiliser
MySQL
en
ligne
de
commande
,
un
peu
comme
«
sqlplus
»
de
oracle
,
on
être
bien
plus
à
le
aise
avec
un
environnement
plus
intuitif
.
ainsi
,
le
outil
phpMyAdmin
être
un
interface
web
à
MySQL
permettre
de
effectuer
le
plupart
du
tâche
de
maintenance
et
de
utilisation
.
ce
solution
fonctionner
depuis
ne
importer
quel
navigateur
et
être
indépendant
de
le
machine
.
on
accéder
à
phpMyAdmin
généralement
par
le
URL
http
:
/
/
server_name
/
mysql
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
MysqlCC
MysqlCC
(
MySQL
Control
Center
)
être
le
front-end
graphique
officiel
de
MySQL
,
développer
par
le
même
société
.
baser
sur
e
toolkit
Qt
,
il
être
disponible
sous
Windows
,
Unix
(
linux
)
et
bientôt
sur
MacOS
.
il
permettre
le
administration
du
serveur
,
le
gestion
du
base
et
table
,
le
exécution
de
requête
SQL
interactif
avec
coloration
syntaxique
...
créer
un
base
à
partir
de
le
écran
de
accueil
de
phpMyAdmin
,
on
saisir
le
nom
de
le
base
dans
«
créer
un
base
de
donnée
»
.
il
falloir
de
préférence
choisir
un
nom
simple
et
intuitif
.
puis
on
cliquer
sur
«
créer
»
.
après
le
création
un
nouveau
page
se
afficher
:
ce
être
le
page
principal
de
administration
de
le
base
.
en
haut
être
toujours
présent
après
le
exécution
de
un
commande
le
résultat
de
celui
-ci
.
ce
écran
permettre
notamment
le
exécution
de
commande
SQL
,
et
le
travail
sur
le
table
.
utilisateur
et
droit
dans
le
menu
de
gauche
,
on
choisir
le
«
-
»
(
tiret
)
qui
correspondre
à
le
racine
ou
administration
du
serveur
MySQL
par
lui
même
.
dans
le
nouveau
page
,
on
choisir
«
utilisateur
et
privilège
»
.
le
page
suivant
permettre
de
ajouter
un
utilisateur
.
il
falloir
faire
attention
à
un
chose
:
le
serveur
.
en
effet
,
suivre
le
configuration
initial
(
sur
Linux
par
exemple
)
le
droit
dépendre
de
le
façon
dont
avoir
être
accéder
le
base
.
ainsi
si
localhost
et
ip-remplacée
>
être
identique
,
si
le
base
être
appeler
depuis
un
autre
IP
ou
un
autre
nom
,
le
utilisateur
ne
avoir
pas
tout
le
droit
.
en
cas
de
doute
,
il
suffire
de
choisir
«
tout
serveur
»
.
pour
créer
un
administrateur
,
le
mieux
être
de
donner
tout
le
privilège
.
pour
un
utilisateur
«
standard
»
(
requête
de
sélection
,
de
ajout
,
de
mise
à
jour
et
de
suppression
de
enregistrement
)
on
choisir
le
privilège
select
,
insert
,
Update
et
Delete
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
un
fois
le
utilisateur
créer
,
et
si
plusieurs
base
être
présent
,
on
pouvoir
affiner
le
droit
pour
chacun
du
base
.
le
liste
du
utilisateur
et
de
leur
droit
sur
un
base
être
afficher
en
haut
.
en
choisir
«
modifier
»
on
pouvoir
affiner
le
sélection
notamment
en
passer
par
«
autre
privilège
»
:
droit
sur
du
base
,
table
ou
même
colonne
.
créer
et
modifier
du
table
on
retourner
par
le
menu
de
gauche
dans
un
base
existant
.
dans
le
écran
de
administration
on
saisir
(
bas
de
le
page
)
le
nom
de
le
table
et
le
nombre
de
champ
(
colonne
)
.
il
être
possible
après
coup
de
en
rajouter
ou
de
en
supprimer
.
puis
on
choisir
«
créer
»
.
le
étape
suivant
consister
à
définir
le
table
.
Intéressons-nous
au
différent
type
de
champ
possible
.
type
numérique
ip-remplacée
>
type
entier
pour
chaque
entier
on
pouvoir
ajouter
le
mot
clé
«
UNSIGNED
»
:
non
signer
.
attention
au
type
BIGINT
qui
avoir
du
limitation
(
voir
documentation
MySQL
)
.
entre
parenthèse
:
le
valeur
UNSIGNED
.
il
être
possible
de
fournir
un
précision
de
affichage
(
nombre
de
chiffre
)
.
par
exemple
un
taille
de
pour
un
TINYINT
équivaloir
à
un
valeur
de
à
.
•
TINYINT
:
à
(
à
)
•
SMALLINT
:
à
(
à
)
•
MEDIUMINT
:
à
(
à
)
•
INT
ou
INTEGER
:
à
(
à
)
•
BIGINT
:
à
(
à
)
ip-remplacée
>
type
réel
(
flottant
)
•
FLOAT
:
nombre
en
virgule
flottant
•
double
,
double
PRECISION
,
REAL
:
nombre
en
virgule
flottant
double-précision
.
•
DECIMAL
,
DEC
,
NUMERIC
:
spécial
,
le
valeur
être
«
unpacked
»
:
ce
être
un
chaîne
texte
ip-remplacée
>
type
booléen
•
bit
,
BOOL
,
BOOLEAN
(
depuis
)
:
un
bit
,
équivaloir
à
TINYINT
(
)
type
caractère
ce
type
mériter
un
peu
plus
de
explication
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
ip-remplacée
>
type
char
char
:
un
chaîne
de
caractère
dont
le
taille
pouvoir
être
de
à
caractère
.
le
taille
être
définir
à
le
création
de
le
table
.
dans
le
table
,
le
champ
prendre
effectivement
le
nombre
de
caractère
indiqué
,
même
si
le
taille
réel
être
inférieur
.
VARCHAR
:
un
chaîne
de
caractère
dont
le
taille
maximal
pouvoir
être
de
à
caractère
mais
dont
le
longueur
pouvoir
être
variable
.
MySQL
stocker
en
plus
un
octet
contenir
le
longueur
de
le
chaîne
.
ce
être
un
optimisation
,
un
chaîne
de
caractère
aller
donc
prendre
octet
en
place
dans
le
table
.
on
pouvoir
rajouter
le
définition
BINARY
.
par
défaut
le
champ
char
et
VARCHAR
être
trier
sans
tenir
compte
de
le
casse
.
le
attribut
BINARY
permettre
de
trier
en
tenir
compte
de
le
casse
selon
le
machine
.
avec
ce
champ
,
le
espace
final
être
supprimer
.
ip-remplacée
>
type
TEXT
le
type
TEXT
et
BLOB
permettre
de
stocker
du
quantité
variable
de
texte
selon
leur
définition
.
ici
«
L
»
être
le
longueur
du
texte
:
•
TINY
(
BLOB
/
TEXT
)
:
L+1
octet
avec
L
<
2^@card@
•
BLOB
/
TEXT
:
L+2
octet
avec
L
<
2^16
•
medium
(
BLOB
/
TEXT
)
:
L+3
octet
avec
L
<
2^24
•
long
(
BLOB
/
TEXT
)
:
L+4
octet
avec
L
<
2^32
TEXT
et
BLOB
se
utiliser
de
manière
identique
mais
il
falloir
respecter
le
rêgles
suivant
:
•
lors
de
tri
,
un
champ
BLOB
tenir
compte
de
le
casse
,
pas
un
champ
TEXT
.
•
on
ne
pouvoir
pas
faire
de
recherche
FULLTEXT
sur
un
champ
de
type
BLOB
.
il
falloir
utiliser
le
champ
TEXT
.
•
le
champ
de
type
TEXT
et
BLOB
ne
prendre
pas
de
valeur
par
défaut
.
•
le
espace
final
ne
être
pas
supprimer
.
ip-remplacée
>
type
ENUM
un
champ
de
type
ENUM
ne
pouvoir
contenir
que
un
chaîne
de
texte
par
plusieurs
prédéfinie
à
le
création
de
le
table
.
voici
un
exemple
:
CREATE
tabler
test
(
id
int
NOT
NULL
auto_increment
,
c_enum
enum
(
'
oui
'
,
'
non
'
)
,
PRIMARY
KEY
(
id
)
)
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
champ
c_enum
ne
pouvoir
prendre
que
deux
valeur
:
oui
ou
non
.
si
on
tenter
d
'
y
mettre
autre
chose
:
insert
into
text
(
c_enum
)
valoir
(
'
toto
'
)
;
dans
ce
cas
un
chaîne
vide
être
insérer
à
le
place
.
si
le
champ
être
déclarer
NOT
NULL
,
le
valeur
par
défaut
devenir
le
premier
de
le
liste
de
énumération
.
ip-remplacée
>
type
set
un
type
set
ressembler
un
peu
au
type
ENUM
sauf
que
le
champ
pouvoir
avoir
un
ou
plusieurs
valeur
parmi
un
liste
prédéfinir
à
le
création
de
le
table
.
dans
le
type
ENUM
un
seul
valeur
être
autoriser
dans
le
champ
.
avec
le
type
set
,
plusieurs
valeur
séparer
par
du
espace
être
autoriser
.
CREATE
tabler
test
(
id
int
(
)
NOT
NULL
auto_increment
,
c_set
set
(
'
oui
'
,
'
non
'
)
,
PRIMARY
KEY
(
id
)
)
;
insert
into
test
(
c_set
)
valoir
(
'
oui
,
non
'
)
;
insert
into
test
(
c_set
)
valoir
(
'
non
,
oui
'
)
;
insert
into
test
(
c_set
)
valoir
(
'
oui
)
;
on
effectuer
un
recherche
de
un
élément
set
soit
avec
LIKE
,
soit
avec
le
fonction
FIND_IN_SET
:
select
*
from
test
where
c_set
LIKE
'
%
oui
%
'
;
select
*
from
test
where
FIND_IN_SET
(
'
oui
'
,
c_set
)
>
;
type
dater
attention
avec
le
date
:
le
logique
de
MySQL
être
de
laisser
au
développeur
le
soin
de
contrôler
le
validité
de
leur
date
.
ainsi
MySQL
autoriser
le
enregistrement
de
un
date
de
type
!
le
seul
test
effectuer
être
le
validité
du
mois|moi
(
entre
et
)
et
le
validité
du
jour
(
entre
et
)
.
le
zéro
(
)
être
autoriser
pour
du
raison
pratique
:
stockage
de
le
année
,
ou
de
le
année
/
mois|moi
seulement
par
exemple
.
voici
quelque
autre
information
:
•
MySQL
,
dans
le
comparaison
notamment
,
essayer
«
de
interpréter
»
le
format
de
date
que
on
lui
passer
.
ce
être
le
cas
pour
le
comparaison
entre
du
champ
de
type
date
et
du
champ
texte
.
dans
le
plupart
du
cas
le
résultat
être
celui
attendu
mais
attention
tout
de
même
au
formalisme
.
•
le
date
devoir
être
donner
de
préférence
au
format
année-mois-jour
.
le
année
devoir
toujours
apparaître
en
premier
.
dans
le
cas
de
un
année-jour-mois
attention
:
MySQL
ne
pouvoir
pas
deviner
si
être
le
février
ou
le
mai
...
•
si
un
date
être
utiliser
dans
un
calcul
numérique
,
elle
être
convertir
en
nombre
(
timestamp
)
.
•
si
un
valeur
illégal
être
transmettre
,
ce
être
le
valeur
zéro
(
)
qui
être
retenir
.
le
valeur
zéro
dépendre
du
type
de
champ
.
•
le
gestion
de
le
an
se
faire
ainsi
:
•
dans
le
cas
de
année
à
chiffre
,
aucun
souci
.
il
valoir
mieux
toujours
utiliser
du
S
.
ROHAUT
courir
programmation
PHP
pager
/
année
sur
chiffre
.
•
dans
le
cas
de
un
année
à
deux
chiffe
,
être
convertir
en
,
être
convertir
en
.
ip-remplacée
>
format
supporter
•
AAAA-MM-JJ
HH
:
messieurs
:
SS
ou
AA-MM-JJ
HH
:
messieurs
:
SS
.
le
séparateur
pouvoir
être
ne
importer
quoi
:
AAAA
/
messieurs
/
JJ
dns-remplacé
être
valable
•
AAAA-MM-JJ
ou
AA-MM-JJ
,
même
remarque
pour
le
séparateur
.
•
AAAAMMJJHHMMSS
ou
AAMMJJHHMMSS
si
le
chaîne
ou
le
nombre
avoir
un
signification
en
tant
que
date
•
AAAAMMJJ
ou
AAMMJJ
,
même
remarque
ip-remplacée
>
type
DATETIME
le
type
DATETIME
permettre
de
stocker
le
date
et
le
heure
sous
le
format
AAAA-MM-JJ
HH
:
messieurs
:
SS
.
son
zéro
être
donc
:
:
.
ip-remplacée
>
type
date
avec
ce
type
seul
le
date
être
stocker
au
format
AAAA-MM-JJ
.
son
zéro
être
.
ip-remplacée
>
type
TIMESTAMP
le
type
TIMESTAMP
permettre
de
stocker
implicitement
et
automatiquement
un
timestamp
(
heure
courant
)
lors
de
un
enregistrement
de
donnée
avec
insert
ou
UPDATE
.
si
un
table
disposer
de
un
champ
TIMESTAMP
,
lors
de
le
ajout
ou
de
le
mise
à
jour
de
un
celui
-ci
être
automatiquement
mettre
à
jour
pour
ce
ligne
de
enregistrement
.
le
colonne
n
'
avoir
pas
besoin
de
être
explicitement
spécifier
.
si
on
la
spécifier
,
alors
on
pouvoir
lui
mettre
ne
importer
quel
valeur
.
CREATE
tabler
test
(
id
int
(
)
NOT
NULL
auto_increment
,
c_ts
timestamp
(
)
NOT
NULL
,
c_txt
varchar
(
)
NOT
NULL
default
`
`
,
PRIMARY
KEY
(
id
)
)
insert
into
test
(
c_txt
)
valoir
(
'
toto
'
)
;
select
c_ts
from
test
;
update
test
set
c_txt
=
'
truc
'
;
select
c_ts
from
test
;
on
remarquer
que
le
résultat
retourner
par
MySQL
sur
le
colonne
TIMESTAMP
ne
être
pas
un
valeur
timestamp
Unix
(
bien
que
tel
en
interne
)
mais
un
valeur
formater
.
par
défaut
un
TIMESTAMP
S
.
ROHAUT
courir
programmation
PHP
pager
/
retourne
un
valeur
(
numérique
)
sur
caractère
.
on
pouvoir
choisir
ce
taille
à
le
création
de
le
table
:
•
TIMESTAMP
ou
TIMESTAMP
(
)
:
AAAAMMJJHHMMSS
•
TIMESTAMP
(
)
:
AAMMJJHHMMSS
•
TIMESTAMP
(
)
:
AAMMJJHHMM
•
TIMESTAMP
(
)
:
AAAAMMJJ
•
TIMESTAMP
(
)
:
AAMMJJ
•
TIMESTAMP
(
)
:
AAMM
•
TIMESTAMP
(
)
:
aa
avec
tout
ce
format
,
spécifier
toujours
le
année
le
mois|moi
et
le
jour
même
avec
un
timestamp
de
ou
de
sinon
le
date
être
invalide
.
ip-remplacée
>
type
TIME
le
type
TIME
pouvoir
être
utiliser
pour
stocker
un
information
horaire
.
son
format
être
HH
:
messieurs
:
SS
ou
HHH
:
messieurs
:
SS
et
le
valeur
pouvoir
être
négatif
.
le
valeur
maximal
possible
aller
de
:
:
à
:
:
.
TIME
ne
servir
pas
qu
'
à
stocker
un
heure
de
le
journée
mais
un
intervalle
ou
un
durée
ce
qui
expliquer
le
plage
horaire
.
on
y
accéder
comme
ceci
:
D
HH
:
messieurs
:
dns-remplacer
:
D
être
le
jour
.
le
fraction
ne
être
pas
stocker
.
ou
encore
:
HH
:
messieurs
:
SS
,
HH
:
messieurs
,
D
HH
:
messieurs
:
SS
,
D
HH
:
messieurs
,
D
HH
,
D
SS
,
HHMMSS
,
.SS
,
MMSS
,
...
ip-remplacée
>
typer
YEAR
le
type
YEAR
stocker
uniquement
le
année
,
sur
un
plage
aller
de
à
.
le
interprétation
du
valeur
à
deux
chiffre
et
soumettre
à
le
interprétation
de
le
gestion
de
le
an
.
création
:
syntaxe
SQL
on
utiliser
le
commande
SQL
CREATE
.
CREATE
table
[
if
NOT
EXIST
]
nom_table
(
champ1
type
[
NOT
NULL
|
NULL
]
[
DEFAULT
valeur_defaut
]
[
AUTO_INCREMENT
]
[
PRIMARY
KEY
]
,
...
,
PRIMARY
KEY
(
nom_champ
)
,
KEY
[
nom
]
(
col1
,
col2
,
...
)
,
index
[
nom
]
(
col1
,
col2
,
...
)
,
unique
[
index
]
[
nom
]
(
col1
,
col2
,
...
)
,
FULTEXT
[
index
]
[
nom
]
(
col1
,
col2
,
...
)
)
type
=
type_table
;
noter
que
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
KEY
et
index
être
du
synonyme
.
•
un
PRIMARY
KEY
être
un
index
unique
dont
tout
le
colonne
devoir
être
NOT
NULL
•
un
PRIMARY
KEY
pouvoir
contenir
plusieurs
colonne
.
dans
ce
cas
,
PRIMARY
KEY
ne
devoir
pas
apparaître
au
niveau
de
le
définition
de
un
colonne
mais
le
syntaxe
PRIMARY
KEY
(
col
,
...
)
devoir
être
utiliser
•
il
ne
pouvoir
y
avoir
que
un
seul
index
PRIMARY
KEY
,
mais
plusieurs
index
unique
.
•
si
un
application
vouloir
obtenir
le
PRIMARY
KEY
de
un
table
et
que
il
ne
exister
pas
,
alors
MySQL
retourner
le
premier
index
unique
trouver
.
•
si
on
ne
donner
pas
de
nom
à
un
index
,
celui
-ci
être
générer
automatiquement
en
prendre
le
nom
de
le
premier
colonne
de
le
index
suivre
de
un
suffixe
numérique
(
col_1
,
col_2
,
...
)
.
•
bien
que
cela
être
déconseiller
,
on
pouvoir
établir
un
index
sur
un
colonne
TEXT
ou
BLOB
.
mais
dans
ce
cas
il
falloir
obligatoirement
spécifier
un
longueur
de
index
.
par
exemple
:
CREATE
tabler
f_message
(
id_message
int
(
)
unsigned
NOT
NULL
auto_increment
,
id_msg_initial
int
(
)
unsigned
NOT
NULL
default
'
'
,
id_msg_prec
int
(
)
unsigned
NOT
NULL
default
'
'
,
id_forum
int
(
)
NOT
NULL
default
'
'
,
login
varchar
(
)
NOT
NULL
default
`
`
,
date
datetime
NOT
NULL
default
'
:
:
'
,
sujet
varchar
(
)
NOT
NULL
default
`
`
,
texte
text
,
PRIMARY
KEY
(
id_message
)
,
KEY
precedent
(
id_msg_prec
)
,
KEY
login
(
login
)
,
KEY
forum
(
id_forum
)
,
KEY
initial
(
id_msg_initial
)
,
FULLTEXT
KEY
ft1
(
sujet
,
texte
)
)
type
=
MyISAM
;
type
de
table
(
MyISAM
et
InnoDB
)
le
type
de
table
être
particulier
à
MySQL
.
le
type
par
défaut
être
«
MyISAM
»
,
le
gestionnaire
de
table
originel
de
MySQL
,
simple
et
rapide
,
correspondre
à
le
majorité
du
besoin
.
le
second
type
principal
être
«
InnoDB
»
et
permettre
un
gestion
du
transaction
et
verrouillage
du
donnée
.
le
«
commettre
»
,
«
rollback
»
,
restauration
après
crash
,
et
surtout
le
contrainte
de
intégrité
avec
clé
étranger
être
possible
.
CREATE
tabler
parent
(
id
INT
NOT
NULL
,
PRIMARY
KEY
(
id
)
)
type
=
INNODB
;
CREATE
tabler
child
(
id
INT
,
parent_id
INT
,
index
par_ind
(
parent_id
)
,
FOREIGN
KEY
(
parent_id
)
REFERENCES
parent
(
id
)
on
DELETE
set
NULL
)
type
=
INNODB
;
on
pouvoir
aussi
utiliser
le
clause
«
on
DELETE
cascade
»
et
«
on
DELETE
set
NULL
»
.
quelque
règle
être
à
respecter
pour
le
utilisation
:
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
avec
un
on
DELETE
cascade
,
si
un
ligne
de
le
table
parent
être
supprimer
,
le
ligne
correspondant
à
le
clé
étranger
être
automatiquement
supprimer
dans
le
table
fille
.
dans
le
exemple
,
un
suppression
de
un
enregistrement
de
le
table
«
parent
»
supprimer
tout
le
enregistrement
de
le
table
«
child
»
dont
le
«
parent_id
»
être
égal
au
«
id
»
de
le
enregistrement
de
le
table
«
parent
»
supprimer
.
•
avec
un
on
DELETE
set
NULL
,
le
enregistrement
fils|fil
ne
être
pas
supprimer
,
mais
le
colonne
de
le
clé
étranger
(
ici
parent_id
)
prendre
le
valeur
NULL
.
•
un
index
devoir
exister
pour
le
clé
parent
et
le
clé
fille
.
index
FULLTEXT
ip-remplacée
>
création
dans
son
dernier
version
(
et
supérieur
)
MySQL
permettre
le
indexation
et
le
recherche
sur
un
ou
plusieurs
champ
de
type
TEXT
.
on
pouvoir
ainsi
créer
du
moteur
de
recherche
très
rapidement
.
pour
cela
il
falloir
créer
un
index
«
FULLTEXT
»
ou
en
texte
entier
,
où
chaque
mot
du
champ
texte
être
en
faire
indexer
.
le
index
FULLTEXT
ne
fonctionner
qu'
avec
du
champ
de
type
TEXT
(
pas
BLOB
)
ou
VARCHAR
et
sur
du
table
de
type
MyISAM
uniquement
.
voici
comment
créer
un
index
FULLTEXT
.
si
le
table
exister
déjà
:
CREATE
FULLTEXT
index
ft1
on
f_message
(
sujet
,
texte
)
;
à
le
création
de
le
table
,
on
rajouter
un
ligne
de
création
de
index
:
FULLTEXT
KEY
ft1
(
sujet
,
texte
)
on
pouvoir
préciser
un
ou
plusieurs
colonne
dans
ce
genre
de
index
.
mais
attention
:
lors
de
le
recherche
si
on
avoir
créer
un
index
sur
deux
colonne
,
on
ne
pouvoir
pas
rechercher
sur
un
seul
du
deux
colonne
en
même
temps
...
dans
ce
cas
il
falloir
créer
plusieurs
index
FULLTEXT
.
ip-remplacée
>
recherche
on
effectuer
un
recherche
avec
le
fonction
match
(
)
et
AGAINST
(
)
.
le
fonction
match
permettre
de
préciser
sur
quel
colonne
on
effectuer
le
recherche
,
et
le
fonction
AGAINST
le
mot
recherché
.
select
id_message
FROM
f_message
WHERE
match
(
sujet
,
texte
)
AGAINST
(
'
linux
nvidia
'
)
;
ce
requête
aller
effectuer
un
recherche
sur
le
mot
'
linux
'
et
'
nvidia
'
dans
le
colonne
'
sujet
'
et
'
texte
'
.
elle
aller
retourner
le
id
du
message
correspondant
avec
le
plus
pertinent
en
premier
(
celui
qui
correspondre
le
mieux
à
le
recherche
)
.
cela
être
devoir
au
fait
que
match
être
dans
un
clause
WHERE
.
le
pertinence
être
déterminer
par
MySQL
selon
du
critère
(
un
peu
opaque
tout
de
même
)
comme
le
nombre
de
mot
dans
le
ligne
,
le
nombre
de
mot
unique
dans
le
ligne
,
le
longueur
de
le
ligne
.
ce
être
le
fonction
match
qui
retourner
le
pertinence
sous
forme
de
un
flottant
supérieur
ou
égal
à
S
.
ROHAUT
courir
programmation
PHP
pager
/
zéro
.
le
zéro
signifier
un
pertinence
nul
(
pas
de
correspondance
)
.
plus
le
valeur
être
élever
plus
le
résultat
être
pertinent
.
select
id_message
,
match
(
sujet
,
texte
)
AGAINST
(
'
linux
nvidia
'
)
FROM
f_message
;
ce
requête
récupérer
en
second
colonne
le
valeur
de
le
pertinence
.
celui
-ci
ne
être
pas
classer
car
il
n
'
y
avoir
pas
de
WHERE
ou
de
ORDER
by
.
voici
un
dernier
méthode
permettre
de
récupérer
le
champ
et
le
pertinence
trier
par
ordre
de
pertinence
.
select
id_message
,
sujet
match
(
sujet
,
texte
)
AGAINST
(
'
linux
nvidia
'
)
FROM
f_message
WHERE
match
(
sujet
,
texte
)
AGAINST
(
'
linux
nvidia
'
)
;
ip-remplacée
>
rechercher
booléen
le
version
4.x
de
MySQL
avoir
introduire
le
notion
de
recherche
booléen
qui
permettre
de
affiner
son
recherche
.
select
id_message
FROM
f_message
WHERE
match
(
sujet
,
texte
)
AGAINST
(
'
+linux
+nvidia
+ati
'
in
BOOLEAN
mode
)
;
voici
le
signification
du
caractère
supplémentaire
•
+
:
le
mot
devoir
obligatoirement
être
présent
dans
chaque
enregistrement
retourner
•
-
:
le
mot
ne
devoir
pas
être
présent
dans
le
enregistrement
retourner
•
>
et
<
:
valorisation
du
mot
.
un
>
toto
<
titi
valoriser
plus
toto
que
titi
dans
le
recherche
•
(
et
)
:
grouper
un
série
de
mot
•
~
:
négation
de
un
mot
.
contrairement
au
-
,
le
mot
être
tout
de
même
prendre
en
compte
avec
un
pertinence
négatif
.
•
*
:
tronquage
de
un
mot
:
bon
*
=
>
bonjour
,
bonsoir
...
•
le
guillemet
«
`
`
»
:
un
chaîne
rechercher
tel
quel
.
MySQL
et
PHP
connexion
à
un
base
de
donnée
deux
étape
être
généralement
nécessaire
pour
plus
de
simplicité
.
le
seconde|second
ne
être
pas
obligatoire
mais
bien
pratique
dans
le
cas
où
on
travailler
sur
un
seul
base
de
donnée
dans
tout
le
page
.
ip-remplacée
>
connexion
au
serveur
on
utiliser
le
fonction
mysql_connect
(
)
.
ce
fonction
prendre
(
au
minimum
)
trois
paramètre
:
le
serveur
(
hostname
)
le
utilisateur
et
son
mot
de
passe
.
$
b_host
=
'
'
dns-remplacer
'
'
$
b_user
=
'
'
toto
'
'
;
$
b_pass
=
'
'
CreT1
'
'
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
cnx
=
mysql_connect
(
$
b_host
,
$
b_user
,
$
b_pass
)
;
if
(
!
$
cnx
)
die
(
`
`
erreur
de
connexion
à
MySQL
'
'
)
;
ip-remplacée
>
choix
de
un
base
on
choisir
un
base
de
donnée
par
défaut
avec
le
fonction
mysql_select_db
(
)
.
elle
prendre
au
minimum
un
paramètre
,
le
nom
de
le
base
.
le
second
paramètre
optionnel
être
un
ressource
retourner
par
mysql_connect
,
en
cas
de
connexion
sur
plusieurs
serveur
MySQL
.
par
défaut
,
le
fonction
prendre
le
dernier
connexion
ouvert
(
celui
du
dernier
mysql_connect
exécuter
)
.
$
b_base
=
'
'
slyunix
'
'
;
$
db
=
msql_select_db
(
$
b_base
)
;
if
(
!
$
db
)
die
(
`
`
erreur
de
connexion
à
le
base
$
b_base
'
'
)
;
ip-remplacée
>
fermeture
de
un
connexion
on
fermer
un
connexion
à
MySQL
avec
le
fonction
mysql_close
(
)
.
cependant
dans
le
cas
de
connexion
non
persistant
(
voir
à
ce
point
)
ce
fonction
ne
être
pas
obligatoire
car
PHP
ferme
automatiquement
le
connexion
à
le
fin
de
un
script
.
mysql_close
(
$
cnx
)
;
ip-remplacée
>
séquencer
complet
pour
un
base
$
b_host
=
'
'
dns-remplacer
'
'
$
b_user
=
'
'
toto
'
'
;
$
b_pass
=
'
'
CreT1
'
'
;
$
b_base
=
'
'
slyunix
'
'
;
mysql_connect
(
$
b_host
,
$
b_user
,
$
b_pass
)
or
die
(
`
`
erreur
de
connexion
à
MySQL
'
'
)
;
mysql_select_db
(
$
b_base
)
or
die
(
`
`
erreur
à
le
selection
de
$
b_base
)
;
mysql_close
(
)
;
le
requête
ip-remplacée
>
exécuter
un
requête
on
exécuter
un
requête
SQL
avec
le
fonction
mysql_query
(
)
.
ce
fonction
prendre
au
moins
un
paramètre
:
un
requête
SQL
sous
forme
de
chaîne
.
le
fonction
retourner
FALSE
en
cas
de
échec
(
colonne
ou
table
invalide
,
droit
insuffisant
,
pas
de
connexion
,
etc
)
.
attention
:
ce
ne
être
pas
parce
que
le
appel
à
mysql_query
(
)
n
'
avoir
pas
retourner
de
erreur
que
le
fonction
retourner
du
ligne
de
résultat
dans
le
cas
de
un
select
par
exemple
.
enfin
,
le
requête
SQL
ne
devoir
pas
finir
par
un
point-virgule
.
le
requête
pouvoir
être
de
ne
importer
quel
type
(
selection
,
mettre
à
jour
,
destruction
,
etc
)
.
dans
le
cas
de
un
select
,
show
,
EXPLAIN
ou
DESCRIBE
,
mysql_query
(
)
retourner
un
ressource
qui
être
ensuite
utiliser
pour
lire
le
résultat
.
$
result
=
mysql_query
(
`
`
select
id_message
,
sujet
from
f_message
'
'
)
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
ip-remplacée
>
nombre
de
ligne
affecter
dans
le
cas
de
un
DELETE
,
insert
,
replacer
ou
UPDATE
,
on
pouvoir
connaître
le
nombre
de
ligne
affecter
(
modifier
)
par
le
requête
à
le
aide
de
le
fonction
mysql_affected_rows
(
)
.
$
result
=
mysql_query
(
`
`
delete
from
f_message
where
login
=
'
toto
'
'
'
)
;
if
(
$
result
)
echo
mysql_affected_rows
(
)
.
'
'
enregistrement
supprimer
'
'
;
ip-remplacée
>
nombre
de
ligne
retourner
dans
le
cas
de
un
select
,
le
nombre
de
enregistrement
(
ligne
)
retourner
être
obtenir
avec
le
fonction
mysql_num_rows
(
)
.
$
result
=
mysql_query
(
`
`
select
*
from
f_message
where
id_message
>
'
'
)
;
if
(
$
result
)
echo
mysql_num_rows
(
)
.
'
enregistrement
retourner
'
)
;
ip-remplacée
>
récupérer
le
résultat
le
fonction
le
plus
sympathique
pour
récupérer
le
enregistrement
après
le
exécution
de
un
sélection
être
mysql_fetch_array
(
)
.
elle
prendre
au
minimum
un
paramètre
:
un
ressource
résultat
(
résultat
de
mysql_query
)
.
elle
retourner
un
ligne
de
résultat
sous
forme
de
un
tableau
associatif
,
de
un
tableau
indexer
ou
du
deux
.
par
défaut
,
le
tableau
retourner
être
à
le
fois
associatif
et
indexer
.
dans
un
tableau
associatif
,
le
index
du
tableau
être
le
nom
du
champ
correspondre
à
le
colonne
.
dans
un
tableau
indexer
,
le
colonne
être
numéroter
à
partir
de
zéro
.
noter
que
mysql_fetch_array
(
)
ne
retourne
que
un
seul
ligne
de
résultat
.
pour
passer
à
le
suivant
,
il
falloir
exécuter
le
fonction
à
nouveau
.
elle
retourner
FALSE
quand
il
n
'
y
avoir
plus
de
ligne
à
lire
.
$
result
=
mysql_query
(
`
`
select
sujet
,
texte
from
f_message
where
login
=
'
toto
'
'
'
)
;
$
tab
=
mysql_fetch_array
(
$
result
)
;
/
/
premier
ligne
du
résultat
echo
$
tab
[
'
sujet
'
]
.
'
,
'
.
$
tab
[
'
texte
'
]
;
/
/
afficher
le
champ
sujet
et
texte
echo
$
tab
[
]
.
'
,
'
.
$
tab
[
]
;
/
/
idem
si
plusieurs
colonne
porter
le
même
nom
,
le
dernier
colonne
être
prioritaire
.
dans
un
requête
afficher
du
nom
de
colonne
identique
,
le
mieux
être
de
la|le
renommer
:
select
dns-remplacé
avoir
col1
,
t2_nom
avoir
col2
FROM
t1
,
t2
...
le
second
paramètre
de
mysql_fetch_array
(
)
pouvoir
être
:
•
MYSQL_ASSOC
:
le
résultat
être
uniquement
un
tableau
associatif
(
index
=
nom
de
colonne
)
•
MYSQL_NUM
:
le
résultat
être
uniquement
un
tableau
indexer
numériquement
.
•
MYSQL_BOTH
(
par
défaut
)
:
le
deux
voici
comment
récupérer
tout
le
résultat
:
$
result
=
mysql_query
(
`
`
select
sujet
,
texte
from
f_message
where
login
=
'
toto
'
'
'
)
;
while
(
$
result
&
&
$
tab
=
mysql_fetch_array
(
$
result
)
)
{
echo
$
tab
[
'
sujet
'
]
.
'
,
'
.
$
tab
[
'
texte
'
]
;
/
/
afficher
le
champ
sujet
et
texte
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
noter
le
expression
du
while
.
pour
y
rentrer
,
il
falloir
que
le
résultat
de
le
requête
(
$
result
)
ne
soit
pas
FALSE
(
donc
que
le
requête
avoir
fonctionner
)
et
que
il
rester
du
ligne
à
lire
.
autrement
dire
si
le
requête
ne
retourner
rien
,
on
ne
rentrer
pas
dans
le
boucle
.
noter
enfin
que
il
exister
deux
autre
fonction
possible
:
•
mysql_fetch_row
(
)
:
équivaloir
à
mysql_fetch_array
(
$
var
,
MYSQL_NUM
)
•
mysql_fetch_assoc
(
)
:
équivaloir
à
mysql_fetch_array
(
$
var
,
MYSQL_ASSOC
)
ip-remplacée
>
insertion
avec
auto-incrément
le
identifier
unique
de
un
table
être
souvent
un
entier
auto-incrémenté
.
le
avantage
être
que
il
n
'
y
avoir
pas
besoin
de
gérer
ce
identifier
,
ce
être
MySQL
qui
le
déterminer
tout
seul
.
mais
dans
certain
cas
,
il
pouvoir
être
nécessaire
de
récupérer
le
valeur
de
ce
champ
auto-incrémenter
après
un
insertion
pour
,
par
exemple
,
mettre
à
jour
un
autre
enregistrement
(
liste
chaîner
,
jointure
,
etc
)
.
on
utiliser
pour
cela
le
fonction
mysql_insert_id
(
)
.
$
result
=
mysql_query
(
`
`
insert
into
f_message
(
sujet
,
texte
)
valoir
(
'
test
'
,
'
test
'
)
'
'
)
;
$
id
=
mysql_insert_id
(
)
;
$
result
=
mysql_query
(
`
`
select
sujet
,
texte
from
f_message
where
id_message
=
$
id
'
'
)
;
$
tab
=
mysql_fetch_array
(
$
result
)
;
echo
$
tab
[
'
sujet
'
]
.
'
,
'
.
$
tab
[
'
texte
'
]
;
/
/
test
,
test
récupération
du
erreur
en
cas
de
erreur
lors
de
un
manipulation
sur
MySQL
,
on
pouvoir
récupérer
le
numéro
de
le
erreur
MySQL
par
le
fonction
mysql_errno
(
)
.
de
même
on
pouvoir
récupérer
le
message
de
erreur
par
le
fonction
mysql_error
(
)
.
on
pouvoir
trouver
le
liste
du
code
de
erreur
ici
:
http
:
/
/
dns-remplacer
/
doc
/
en
/
dns-remplacer
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
système
de
fichier
travail
sur
le
fichier
ouverture
le
fonction
fopen
(
)
permettre
de
ouvrir
ou
de
créer
un
fichier
selon
divers
mode
.
elle
prendre
en
premier
pramètre
le
nom
du
fichier
avec
son
chemin
.
ce
nom
de
fichier
pouvoir
être
un
URL
(
il
falloir
pour
cela
que
le
directive
allow_url_fopen
être
activer
dans
le
dns-remplacé
)
.
le
second
paramètre
être
le
mode
de
ouverture
:
–
r
:
lecture
seul
,
en
début
de
fichier
–
r+
:
lecture
/
écriture
,
en
début
de
fichier
–
w
:
écriture
seul
,
taille
du
fichier
à
(
ancien
contenu
effacer
)
,
créer
se
il
ne
exister
pas
–
w+
:
lecture
/
écriture
,
taille
du
fichier
à
,
créer
se
il
ne
exister
pas
–
avoir
:
écriture
seul
,
en
fin
de
fichier
,
créer
se
il
ne
exister
pas
–
a+
:
lecture
/
écriture
,
en
fin
de
fichier
,
créer
se
il
ne
exister
pas
.
on
pouvoir
sous
Windows
rajouter
le
lettre
'
b
'
pour
le
type
binaire
,
inutile
sous
Unix
.
enfin
,
fopen
(
)
admettre
un
troisième
paramètre
:
.
dans
ce
cas
le
fichier
à
ouvrir
être
rechercher
dans
le
include_path
(
voir
dns-remplacer
)
.
le
valeur
retourner
être
un
ressource
de
fichier
(
identifier
de
fichier
)
ou
le
valeur
FALSE
en
cas
de
échec
.
$
filer
=
fopen
(
'
dns-remplacer
'
,
'
a+
'
,
)
;
lecture
ip-remplacée
>
fgets
(
)
le
fonction
fgets
(
)
permettre
de
lire
un
ligne
de
un
fichier
en
mode
texte
.
le
fonction
se
arrêter
lorsque
elle
arriver
à
le
fin
du
fichier
ou
à
un
retour
chariot
.
on
pouvoir
préciser
en
second
paramètre
un
longueur
de
texte
en
octet
qui
être
par
défaut
et
ce
paramètre
être
obligatoire
avant
le
version
.
le
premier
paramètre
être
le
identifier
du
fichier
.
FALSE
être
retourner
en
cas
de
erreur
.
attention
:
fgets
(
)
ne
retourner
pas
FALSE
à
le
fin
du
fichier
.
$
ligner
=
fgets
(
$
file
)
;
ip-remplacée
>
fread
(
)
;
le
fonction
fread
(
)
permettre
de
lire
un
fichier
en
mode
binaire
.
le
second
paramètre
être
le
longueur
souhaiter
.
sous
Windows
il
falloir
penser
à
placer
'
b
'
dans
fopen
(
)
.
le
lecture
se
arrêter
lorsque
le
n
octet
(
longueur
)
avoir
être
lire
,
le
fin
du
fichier
avoir
être
atteindre
ou
que
un
erreur
être
survenir
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
file
=
fopen
(
'
dns-remplacer
'
,
'
rb
'
)
;
$
img
=
fread
(
$
file
,
$
filesize
(
'
dns-remplacer
'
)
)
;
fclose
(
$
file
)
;
ip-remplacée
>
fscanf
(
)
le
fonction
fscanf
(
)
lit
du
ligne
de
un
fichier
en
fonction
de
un
formatage
particulier
.
$
filer
=
fopen
(
'
dns-remplacer
'
,
'
r
'
)
;
while
(
$
ligne
=
fscanf
(
$
file
,
'
'
%
s\t
%
s\t
%
s\n
'
'
)
)
{
echo
$
ligne
;
}
ip-remplacée
>
fgetc
(
)
le
fonction
fgetc
(
)
lire
un
seul
caractère
dans
le
fichier
.
contrairement
à
fgets
(
)
,
elle
retourner
FALSE
à
le
fin
du
fichier
.
le
premier
paramètre
être
le
identifier
du
fichier
.
ip-remplacée
>
fgetss
(
)
le
fonction
fgetss
(
)
fonction
être
identique
à
fgets
(
)
mais
le
ligne
retourner
être
débarrasser
de
son
éventuel
balise
PHP
ou
HTML
.
on
pouvoir
préciser
en
troisième
paramètre
un
liste
de
balise
autoriser
.
ip-remplacée
>
fgetcsv
(
)
le
fonction
fgetcsv
(
)
être
un
fonction
très
puissant
car
elle
permettre
de
lire
un
fichier
de
type
CSV
,
ce
être
à
dire
dont
le
champ
être
délimiter
,
pour
récupérer
le
champ
dans
un
tableau
.
Lesond
paramètre
être
le
longueur
maximal
de
un
ligne
du
fichier
,
le
troisième
paramètre
le
séparateur
,
qui
être
le
virgule
par
défaut
.
voici
un
exemple
permettre
de
lire
un
fichier
CSV
et
de
en
afficher
le
résultat
sous
forme
de
un
tableau
HTML
:
$
filename
=
`
`
dns-remplacer
'
'
;
$
id
=
fopen
(
$
filename
,
`
`
r
'
'
)
;
while
(
$
dater
=
fgetcsv
(
$
id
,
filesize
(
$
filename
)
)
)
$
table
[
]
=
$
dater
;
fclose
(
$
id
)
;
echo
`
`
<
table
>
\n
'
'
;
foreach
(
$
table
avoir
$
row
)
{
echo
`
`
<
tr
>
'
'
;
foreach
(
$
row
avoir
$
dater
)
echo
`
`
<
td
>
$
dater
<
/
td
>
'
'
;
echo
`
`
<
/
tr
>
\n
'
'
;
}
echo
`
`
<
/
table
>
\n
'
'
;
ip-remplacée
>
renvoyer
un
fichier
par
le
sortie
standard
le
fonction
readfile
(
)
prendre
comme
paramètre
un
nom
de
fichier
et
renvoyer
son
contenu
par
le
sortie
standard
.
le
fonction
readgzfile
(
)
effectuer
le
même
chose
mais
le
fichier
être
au
format
compresser
gzip
(
zlib
)
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
Ecriture
le
deux
fonction
fwrite
(
)
et
fputs
(
)
être
identique
%
car
fputs
(
)
être
un
alias
de
fwrite
(
)
.
elle
écrire
un
chaîne
dans
un
fichier
.
on
pouvoir
limiter
le
longueur
de
le
chaîne
en
troisième
paramètre
mais
par
défaut
tout
le
chaîne
être
écrire
.
le
valeur
retourner
être
le
nombre
de
octet
écrire
,
ou
FALSE
en
cas
de
erreur
.
$
filer
=
fopen
(
'
dns-remplacer
'
,
'
avoir
)
;
$
ret
=
fwrite
(
$
file
,
'
un
ligne
dans
mon
fichier
'
)
;
fclose
(
$
file
)
;
en
cas
de
travail
sur
un
fichier
binaire
,
il
ne
falloir
pas
oublier
sous
Windows
de
rajouter
le
option
'
b
'
.
déplacement
ip-remplacée
>
fseek
(
)
le
fonction
fseek
(
)
permettre
de
se
déplacer
dans
un
fichier
.
le
second
paramètre
(
offset
)
être
le
nombre
de
octet
de
déplacement
.
il
pouvoir
être
négatif
.
par
défaut
le
déplacement
être
calculer
à
partir
du
début
du
fichier
mais
un
troisième
paramètre
pouvoir
modifier
ce
état
.
le
valeur
retourner
être
(
zéro
)
en
cas
de
réussite
,
sinon
.
un
positionnement
après
le
fin
du
fichier
ne
être
pas
un
erreur
.
–
SEEK_SET
:
calcul
à
partir
du
début
du
fichier
.
position
final
:
Début+offset
–
SEEK_CUR
:
calcul
à
partir
de
le
emplacement
actuel
.
position
final
:
Actuelle+offset
–
SEEK_END
:
calcul
à
partir
de
le
fin
du
fichier
.
position
final
:
Fin+Offset
.
$
ret
=
fseek
(
$
file
,
,
SEEK_END
)
;
/
/
fin
du
fichier
ip-remplacée
>
ftell
(
)
le
fonction
fseek
(
)
renvoyer
le
position
actuel
du
pointeur
dans
le
fichier
.
$
pos
=
ftell
(
$
file
)
;
ip-remplacée
>
rewind
(
)
le
fonction
rewind
(
)
permettre
de
retourner
au
début
du
fichier
.
elle
retourner
TRUE
en
cas
de
réussite
,
FALSE
sinon
.
fin
de
fichier
le
fonction
feof
(
)
indique
si
on
être
à
le
fin
du
fichier
ou
non
.
elle
retourner
TRUE
si
le
fin
de
fichier
avoir
être
atteindre
,
FALSE
sinon
.
$
fd
=
fopen
(
`
`
/
tmp
/
dns-remplacer
'
'
,
`
`
r
'
'
)
;
while
(
!
feof
(
$
fd
)
)
{
$
buffer
=
fgets
(
$
fd
,
)
;
echo
$
buffer
;
}
fclose
(
$
fd
)
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
fermeture
on
fermer
un
fichier
avec
le
fonction
fclose
(
)
.Elle
retourner
TRUE
en
cas
de
réussite
,
FALSE
sinon
.
travail
sur
le
répertoire
répertoire
actuel
le
fonction
getcwd
(
)
retourner
le
nom
du
dossier
de
travail
courant
,
ce
être
à
dire
là
où
on
être
.
attention
sous
Windows
:
ce
fonction
ne
faire
pas
de
distinction
entre
le
majuscule
et
le
minuscule
.
$
chemin
=
getcwd
(
)
;
echo
$
chemin
;
:
:
/
srv
/
www
/
site
se
déplacer
on
se
déplacer
avec
le
fonction
chdir
(
)
.
le
argument
pouvoir
être
absoudre
ou
relatif
.
en
cas
de
erreur
,
FALSE
être
retourner
.
if
(
chdir
(
'
.
/
rep
'
)
)
getcwd
(
)
;
else
die
(
'
impossible
de
se
déplacer
'
)
;
ouvrir
,
lister
,
fermer
on
ouvrir|ouvrer
un
répertoire
en
lecture
avec
le
fonction
opendir
(
)
qui
prendre
comme
unique
paramètre
un
nom
ou
chemin
de
répertoire
.
en
cas
de
échec
,
le
fonction
retourner
FALSE
sinon
un
identifier
(
handler
)
de
répertoire
.
on
lire
un
entrée
avec
le
fonction
readdir
(
)
qui
prendre
comme
paramètre
la|le
identifier
de
répertoire
.
quand
il
n
'
y
avoir
plus
rien
à
lire
,
le
fonction
retourner
FALSE
sinon
elle
retourner
le
nom
de
le
entrée
actuellement
lire
.
attention
,
le
entrée
«
.
»
et
«
.
.
»
être
lire
comme
le
autre
.
on
fermer
un
répertoire
en
cours|cour
de
lecture
avec
le
fonction
closedir
(
)
qui
prendre
comme
paramètre
la|le
identifier
de
répertoire
.
$
handle
=
opendir
(
'
.
'
)
;
while
(
$
filer
=
readdir
(
$
handle
)
)
{
if
(
$
file
!
=
`
`
.
'
'
&
&
$
file
!
=
`
`
.
.
'
'
)
{
echo
`
`
$
file\n
'
'
;
}
}
closedir
(
$
handle
)
;
on
pouvoir
retourner
au
début
du
répertoire
avec
le
fonction
rewinddir
(
)
qui
prendre
comme
paramètre
un
identifier
de
répertoire
.
le
prochain
lecture
être
le
premier
du
répertoire
.
récupérer
tout
le
entrée
même
se
il
être
possible
de
récupérer
le
ensemble
du
entrée
de
un
répertoire
avec
le
fonction
S
.
ROHAUT
courir
programmation
PHP
pager
/
précédent
et
un
boucle
,
le
fonction
scandir
(
)
proposer
le
même
chose
,
en
un
ligne
et
en
placer
tout
le
nom
de
fichier
du
chemin
indiquer
dans
un
tableau
.
le
premier
paramètre
être
un
chemin
de
répertoire
.
le
second
être
optionnel
et
définir
le
ordre
du
tri
qui
être
alphabétique
par
défaut
.
un
«
»
indiquer
un
tri
alphabétique
décroître
.
$
file
=
scandir
(
'
.
/
rep
'
)
;
print_r
(
$
file
)
;
travail
sur
le
système
de
fichier
information
sur
le
fichier
on
pouvoir
obtenir
divers
information
sur
un
fichier
à
le
aide
du
commande
de
type
is_x
(
)
:
–
is_dir
(
)
:
TRUE
si
le
nom
de
fichier
être
un
répertoire
–
is_file
(
)
:
TRUE
si
le
nom
de
fichier
être
un
véritable
fichier
normal
–
is_executable
(
)
:
TRUE
si
le
fichier
être
exécutable
.
sous
Windows
il
falloir
PHP
5.x
.
–
is_readable
(
)
:
TRUE
sir
le
fichier
être
lisible
–
is_writeable
(
)
,
is_writable
(
)
:
TRUE
si
le
fichier
être
accessible
en
écriture
–
is_link
(
)
:
TRUE
si
le
fichier
être
un
lien
.
de
même
,
on
pouvoir
obtenir
du
détail
sur
un
fichier
avec
le
fonction
filexxx
(
)
:
–
file_exists
(
)
:
TRUE
si
le
fichier
exister
–
fileatime
(
)
:
retourne
sous
forme
de
TIMESTAMP
le
dernier
date
de
accès
.
sous
Windows
,
ce
être
le
dernier
date
de
modification
.
–
filectime
(
)
:
retourner
le
date
de
création
–
filemtime
(
)
:
retourner
le
date
de
modification
–
filegroup
(
)
:
retourner
le
GID
du
fichier
.
on
récupérer
le
nom
réel
du
groupe
avec
le
fonction
posix_getgrgid
(
)
.
–
fileowner
(
)
:
retourner
le
UID
du
fichier
.
on
récupérer
le
nom
réel
de
le
utilisateur
avec
le
fonction
posix_getpwuid
(
)
.
–
fileinode
(
)
:
retourner
le
inode
du
fichier
–
fileperm
(
)
:
retourner
le
permission
du
fichier
.
attention
le
résultat
être
en
base
.
il
falloir
convertir
en
base
avec
le
fonction
base_convert
(
)
.
–
filesize
(
)
:
retourner
le
taille
du
fichier
en
octet
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
–
filetype
(
)
:
retourner
le
type
du
fichier
.
attention
il
se
agir
du
type
de
fichier
sur
disque
,
pas
de
leur
contenu
(
image
,
etc
)
:
fifo
,
char
,
dir
,
block
,
link
,
file
,
unknown
.
si
un
fichier
être
déjà
ouvrir
on
pouvoir
obtenir
du
information
avec
le
fonction
fstat
(
)
qui
prendre
comme
paramètre
un
identifier
de
fichier
retourner
par
fopen
(
)
et
qui
retourner
un
tableau
indexer
numériquement
ou
associatif
.
le
fonction
stat
(
)
retourner
le
même
chose
mais
on
lui
préciser
un
chemin
ou
nom
de
fichier
.
le
fonction
lstat
(
)
être
quasi-identique
sauf
que
dans
le
cadre
du
lien
,
ce
être
le
information
sur
le
lien
lui
même
(
et
pas
le
fichier
pointé
)
qui
être
retourner
.
@ord@
volume
(
ou
encore
dev
)
@ord@
inode
(
ou
encore
ino
)
@ord@
droit
de
accès
au
fichier
(
mode
de
protection
du
inode
)
.
à
convertir
en
octal
.
voir
aussi
fileperm
(
)
.
(
ou
encore
mode
)
@ord@
nombre
de
lien
(
ou
encore
nlink
)
@ord@
id
de
le
utilisateur
propriétaire
(
ou
encore
uid
)
@ord@
id
du
groupe
propriétaire
(
ou
encore
gid
)
@ord@
type
du
volume
de
le
inode
*
(
ou
encore
rdev
)
@ord@
taille
en
octet
(
ou
encore
size
)
@ord@
date
du
dernier
accès
(
ou
encore
atime
)
@ord@
date
de
le
dernier
modification
(
ou
encore
mtime
)
10.date
du
dernier
changement
(
ou
encore
ctime
)
11.taille
de
bloc
du
système
pour
le
entrée
/
sortie
*
(
ou
encore
blksize
)
12.nombre
de
bloc
alloué
(
ou
encore
block
)
action
sur
le
fichier
et
répertoire
on
retrouver
ici
du
fonction
qui
porter
souvent
le
même
nom
que
leur
équivalent
sous
le
shell
Unix
:
–
dirname
(
)
,
basemane
(
)
:
isoler
le
chemin
et
le
nom
de
un
fichier
–
chown
(
)
,
chgrp
(
)
:
changer
le
propriétaire
et
le
groupe
de
un
fichier
.
le
premier
paramètre
être
le
fichier
,
le
second
le
groupe
ou
le
propriétaire
(
UID
,
GID
,
ou
en
tout
lettre
)
–
chmod
(
)
:
modifier
le
droit
.
le
premier
paramètre
être
le
nom
du
fichier
,
le
second
le
droit
en
octal
.
attention
sous
Windows
,
le
résultat
pouvoir
surprendre
...
S
.
ROHAUT
courir
programmation
PHP
pager
/
–
copy
(
)
:
copie
de
un
fichier
:
source
et
destination
–
link
(
)
:
créer
un
lien
hard
link
:
cible
,
nom
du
lien
–
symlink
(
)
:
créer
un
lien
symbolique
:
cible
,
nom
du
lien
–
mkdir
(
)
:
créer
un
répertoire
,
le
second
paramètre
être
le
mode
(
droit
par
défaut
)
avant
application
du
masque
.
–
rename
(
)
:
renommer
et
/
ou
déplacer
un
fichier
:
orgine
,
destination
.
–
rmdir
(
)
:
supprimer
un
répertoire
.
il
devoir
être
vide
.
–
unlink
(
)
:
supprimer
un
fichier
.
–
umask
(
)
:
modifier
le
umask
par
défaut
Upload
de
fichier
le
upload
de
fichier
permettre
de
envoyer
depuis
un
poste
client
un
fichier
sur
le
serveur
.
ce
opération
nécessiter
un
navigateur
savoir
prendre
en
charge
un
balise
spécial
et
le
appel
de
un
script
PHP
.
côté
page
HTML
,
il
falloir
modifier
le
définition
de
un
formulaire
,
placer
le
champ
formulaire
de
type
filer
et
indiquer
le
taille
maximal
du
fichier
télécharger
avec
un
nom
HIDDEN
de
bom
MAX_FILE_SIZE
.
ce
taille
être
préciser
en
octet
.
ce
champ
devoir
être
placer
avant
le
apparition
du
champ
de
type
file
.
le
formulaire
devoir
être
de
type
POST
(
bien
que
GET
être
possible
,
voir
documentation
PHP
)
et
le
type
de
encodage
ENCTYPE
`
`
/
multipart
/
form-data
'
'
devoir
être
préciser
.
<
form
ENCTYPE
=
'
'
multipart
/
form-data
'
'
action
=
'
'
/
dns-remplacer
'
'
method
=
'
'
post
'
'
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
MAX_FILE_SIZE
'
'
value
=
'
'
'
'
>
<
input
NAME
=
'
'
avatar
'
'
type
=
'
'
file
'
'
SIZE
=
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
enregistrer
'
'
/
>
<
/
form
>
note
:
certain
navigateur
se
ficher
totalement
du
poid
(
taille
)
du
fichier
envoyer
en
ne
réagir
pas
à
le
variable
MAX_FILE_SIZE
.
dans
ce
cas
le
vérification
devoir
être
faire
du
côté
du
serveur
.
au
pire
on
pouvoir
limiter
côté
serveur
le
taille
maximal
à
le
aide
du
paramètre
upload_max_filesize
dans
le
dns-remplacé
.
on
choisir
son
fichier
via
le
boite
de
dialogue
du
gestionnaire
de
fichier
quand
on
cliquer
sur
le
bouton
parcourir
.
un
fois
le
formulaire
valider
,
le
donnée
du
formulaire
et
le
fichier
être
envoyer
à
le
page
PHP
.
côté
PHP
,
on
récupérer
le
information
sur
le
fichier
uploadé
via
un
tableau
$
_FILE
dont
le
index
être
le
suivant
$
_FILE
[
nom
]
[
propiete
]
le
nom
être
le
nom
du
champ
du
formulaire
filer
et
le
propriété
:
–
$
_FILES
[
'
userfile
'
]
[
'
name
'
]
:
le
nom
original
du
fichier
,
tel
que
sur
le
machine
du
client
web
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
–
$
_FILES
[
'
userfile
'
]
[
'
type
'
]
:
le
type
mimer
du
fichier
,
si
le
navigateur
avoir
fournir
ce
information
.
par
exemple
,
cela
pouvoir
être
`
`
image
/
gif
'
'
–
$
_FILES
[
'
userfile
'
]
[
'
size
'
]
:
le
taille
,
en
octet
,
du
fichier
téléchargé
.
–
$
_FILES
[
'
userfile
'
]
[
'
tmp_name
'
]
:
le
nom
temporaire
du
fichier
qui
être
charger
sur
le
machine
serveur
.
–
$
_FILES
[
'
userfile
'
]
[
'
error
'
]
:
le
code
de
erreur
associer
au
téléchargement
de
fichier
(
PHP
)
par
défaut
le
fichier
téléchargé
et
en
attente
de
déplacement
être
placer
dans
le
répertoire
temporaire
du
système
(
variable
système
TEMP
ou
TMPDIR
)
ou
dans
le
répertoire
préciser
par
le
paramètre
de
configuration
upload_tmp_dir
du
fichier
dns-remplacé
.
il
être
conseiller
de
initialiser
et
de
utiliser
ce
paramètre
.
le
chemin
du
fichier
temporaire
uploadé
être
donc
:
$
tmp_file
=
ini_get
(
`
`
upload_tmp_dir
'
'
)
.
'
/
'
.
$
_FILE
[
'
userfile
'
]
[
'
tmp_name
'
]
;
pour
savoir
si
un
fichier
avoir
être
correctement
uploadé
par
le
méthode
POST
,
on
pouvoir
utiliser
le
fonction
is_uploaded_file
(
)
qui
prendre
comme
paramètre
le
nom
du
fichier
uploadé
.
if
(
is_uploaded_file
(
$
_FILE
[
'
userfile
'
]
[
'
name
'
]
)
)
{
/
/
ou
tmp_name
echo
$
_FILES
[
'
userfile
'
]
[
'
size
'
]
;
}
savoir
le
position
du
fichier
temporaire
uploadé
et
se
il
avoir
être
correctement
uploadé
,
on
pouvoir
utiliser
le
fonction
copy
.
mais
le
mieux
être
de
utiliser
le
fonction
move_uploaded_file
(
)
qui
tester
le
réussite
de
le
upload
et
qui
déplacer
le
fichier
.
le
premier
paramètre
être
le
nom
du
fichier
uploadé
.
ce
pouvoir
être
le
nom
du
champ
file
,
le
nom
réel
du
fichier
ou
le
nom
du
fichier
temporaire
.
if
(
move_uploaded_file
(
$
_FILES
[
'
avatar
'
]
[
'
tmp_name
'
]
,
$
_SERVER
[
'
DOCUMENT_ROOT
'
]
.
`
`
/
forum
/
avatar
/
$
login
'
'
.
$
_FILES
[
'
avatar
'
]
[
'
name
'
]
)
)
{
$
avatar
=
$
login
.
$
_FILES
[
'
avatar
'
]
[
'
name
'
]
;
chmod
(
$
_SERVER
[
'
DOCUMENT_ROOT
'
]
.
`
`
/
forum
/
avatar
/
$
avatar
'
'
,
)
;
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
travail
sur
chaîne
fonction
pour
code
HTML
et
MySQL
gestion
du
caractère
verrouiller
le
fonction
addslashes
(
)
rajouter
du
slashes
(
backslashes
\
)
devant
tout
le
caractère
qui
devoir
être
verrouiller
.
ce
caractère
être
le
«
`
`
»
,
le
«
'
»
,
le
«
\
»
et
le
caractère
nul
(
NULL
)
.
ainsi
le
chaîne
résultant
pouvoir
être
utiliser
pour
être
placer
en
base
de
donnée
via
du
commande
SQL
.
le
fonction
stripslashes
(
)
effectuer
le
opération
inverse
:
elle
supprimer
le
anti-slash
sauf
dans
le
cas
du
double
anti-slash
\\
,
elle
ne
en
supprimer
que
un
.
$
chaine
=
'
'
le
oreille
cassé
'
'
;
$
c1
=
addslashes
(
$
chaine
)
;
echo
$
c1
;
/
/
L\'oreille
cassé
echo
stripslashes
(
$
c1
)
;
/
/
le
oreille
casser
balise
et
caractère
spécial
HTML
le
fonction
strip_tags
(
)
permettre
de
filtrer
un
chaîne
contenir
du
balise
(
tags
)
HTML
en
autoriser
certain
et
interdire
de
autre
.
le
premier
paramètre
être
le
chaîne
HTML
.
le
second
être
le
liste
du
tags
autoriser
.
attention
:
le
fonction
ne
modifier
pas
le
contenu
du
balise
autoriser
,
laisser
ainsi
le
attribut
class
,
style
et
appel
JavaScript
.
$
chaine
=
'
'
<
u
>
<
i
>
<
b
>
bonjour
le
ami
<
/
b
>
<
/
i
>
<
/
u
>
'
'
;
echo
strip_tags
(
$
chaine
,
'
<
u
>
<
i
>
<
b
>
'
)
;
/
/
bonjour
le
ami
echo
strip_tags
(
$
chaine
,
'
<
b
>
'
)
;
/
/
<
b
>
bonjour
le
ami
<
/
b
>
en
gras
le
fonction
htmlspecialchars
(
)
convertir
certain
caractère
spécial
en
entité
HTML
.
ce
caractère
être
:
–
«
&
»
:
&
amp
;
–
«
`
`
»
:
&
quot
;
si
ENT_NOQUOTES
être
utiliser
–
«
'
»
:
&
#
;
si
ENT_QUOTES
être
utiliser
–
«
<
»
:
&
lt
;
–
«
>
»
:
&
gt
;
le
second
paramètre
(
ENT_xxx
)
définir
le
fonctionnement
par
rapport
au
quotes
.
le
fonction
htmlentities
(
)
aller
plus
loin
en
remplacer
tout
le
caractère
qui
avoir
du
équivalent
en
HTML
.
pour
décoder
un
tel
chaîne
,
il
falloir
alors
utiliser
le
fonction
html_entity_decode
(
)
.
le
fonction
nl2br
(
)
remplacer
tout
le
retour-chariot
de
un
chaîne
en
retour
à
le
ligne
HTML
:
<
br
/
>
.
le
fonction
urlencode
(
)
formater
un
chaîne
pour
son
utilisation
dans
un
URL
.
le
espace
être
S
.
ROHAUT
courir
programmation
PHP
pager
/
remplacer
par
du
«
+
»
et
tout
le
caractère
non-alphanumérique
(
sauf
«
-
»
,
«
.
»
et
«
_
»
)
être
remplacer
par
leur
équivalent
hexadécimal
%
XX
.
un
tel
chaîne
être
décoder
par
le
fonction
urldecode
(
)
.
fonction
texte
général
découper
un
chaîne
le
fonction
explode
(
)
permettre
de
découper
un
chaîne
selon
un
séparateur
.
elle
retourner
un
tableau
contenir
le
divers
élément
découper
.
le
premier
paramètre
être
le
séparateur
,
le
second
le
chaîne
.
un
troisième
paramètre
permettre
de
limiter
le
nombre
de
valeur
retourner
.
$
chaine
=
'
login
:
pwd
:
uid
:
gid
'
;
$
tab
=
explode
(
'
:
'
,
$
chaine
)
;
foreach
(
$
tab
avoir
$
value
)
echo
$
valoir
;
/
/
login
pwd
uid
gid
le
fonction
inverse
se
nommer
implode
(
)
.Le
premier
paramètre
être
le
«
colle
»
:
le
ou
le
caractère
de
séparation
qui
être
placer
entre
le
divers
élément
de
le
chaîne
reconstituer
.
le
second
paramètre
être
un
tableau
.
/
/
suite
de
le
exemple
précédent
$
newchaine
=
implode
(
'
,
'
,
$
tab
)
;
echo
$
chaine
;
/
/
login
,
pwd
,
uid
,
gid
le
fonction
join
(
)
être
un
alias
de
implode
(
)
.
on
pouvoir
aussi
effectuer
un
découpage
tout
le
n
caractère
avec
le
fonction
chunk_split
(
)
.
elle
découper
le
premier
paramètre
en
morceau
de
longueur
du
second
paramètre
(
par
défaut
caractère
)
avec
comme
séparateur
le
troisième
paramètre
(
\n\r
par
défaut
)
.
$
chaine
=
'
FF5EB649C4
'
;
$
n_chaine
=
chunk_split
(
$
chaine
,
,
'
:
'
)
;
echo
n_chaine
;
/
/
FF
:
5E
:
B6
:
:
C4
le
fonction
wordwrap
(
)
effectuer
le
césure
de
un
chaîne
.
le
chaîne
résultant
être
le
texte
découper
en
tenir
compte
du
mot
.
par
défaut
le
longueur
(
second
paramètre
)
être
de
caractère
.
on
pouvoir
préciser
le
chaîne
de
coupure
de
ligne
en
troisième
paramètre
,
et
le
dernier
paramètre
se
il
être
à
force
le
coupure
même
au
milieu
de
un
mot
.
pour
un
affichage
en
HTML
,
il
falloir
encapsuler
le
résultat
dans
un
nl2br
(
)
.
$
chaine
=
'
'
bonjour
le
ami
et
bienvenir
dans
le
merveilleux
monde
du
langage
PHP
!
`
`
;
echo
nl2br
(
wordwrap
(
$
chaine
,
)
)
;
retourner
bonjour
le
ami
et
bienvenir
dans
le
merveilleux
monde
du
langage
PHP
!
le
fonction
str_split
(
)
découper
un
chaîne
de
caractère
en
tableau
.
par
défaut
le
longueur
être
de
mais
on
pouvoir
la
choisir
en
second
paramètre
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
on
pouvoir
découper
un
partie
de
chaîne
avec
le
fonction
substr
(
)
.
le
premier
paramètre
être
le
chaîne
,
le
second
le
début
(
depuis
)
et
le
dernier
le
longueur
.
le
début
de
le
chaîne
pouvoir
être
un
valeur
négatif
et
dans
ce
cas
on
compter
en
partir
de
le
fin
de
le
chaîne
.
$
chaine
=
'
abcdef
'
;
echo
substr
(
$
chaine
,
)
;
/
/
abcdef
echo
substr
(
$
chaine
,
,
)
;
/
/
cde
echo
substr
(
$
chaine
,
)
;
/
/
f
echo
substr
(
$
chaine
,
,
)
;
/
/
de
le
fonction
trim
(
)
,
rtrim
(
)
et
ltrim
(
)
supprimer
le
caractère
invisible
à
droit|droite
(
trim
,
rtrim
)
et
à
gauche
(
trim
,
ltrim
)
de
le
chaîne
.
rechercher
et
comparer
le
fonction
strcmp
(
)
effectuer
un
comparaison
de
deux
chaîne
.
retourne
<
si
le
chaine1
être
inférieur
à
chaine2
,
si
égal
,
>
sinon
.
le
fonction
strncmp
(
)
à
le
même
effetmais
sur
un
longueur
donner
,
en
troisième
paramètre
.
le
fonction
strcasecmp
(
)
et
strncasecmp
(
)
être
du
version
insensible
à
le
casse
.
le
fonction
strstr
(
)
recherche
le
premier
occurrence
du
second
paramètre
dans
le
premier
et
retourner
le
chaîne
depuis
ce
position
jusqu
'
à
le
fin
.
le
fonction
strchr
(
)
être
un
alias
de
strstr
(
)
.
le
fonction
stristr
(
)
être
le
même
mais
insensible
à
le
casse
.
le
fonction
strrchr
(
)
effectuer
quasiment
le
même
chose
sauf
que
elle
retourner
le
fin
de
le
chaîne
depuis
le
dernier
caractère
trouver
.
le
fonction
strpos
(
)
recherche
dans
le
chaîne
du
premier
paramètre
le
chaîne
en
second
paramètre
et
retourner
son
position
.
on
pouvoir
placer
en
troisième
paramètre
le
position
de
départ
de
le
recherche
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
session
et
cookies
le
cookies
création
un
cookie
se
envoyer
avec
le
fonction
setcookie
(
)
.
le
argument
être
le
suivant
:
•
nom
•
valeur
•
date
de
expiration
(
un
timestamp
unix
)
•
chemin
(
validité
du
cookie
suivre
le
chemin
dans
le
url
)
•
domaine
(
parer
défaut
,
le
vôtre
)
•
secure
:
flag
de
sécurité
:
le
cookie
ne
être
accessible
que
via
un
connexion
sécuriser
.
seul
le
premier
argument
être
obligatoire
.
pour
ne
pas
spécifier
un
valeur
,
il
suffire
de
ne
rien
mettre
.
attention
à
quelque
limitation
:
•
un
cookie
être
envoyer
avec
la|le
entêter
HTTP
,
il
ne
pouvoir
pas
être
envoyer
si
un
sortie
avoir
déjà
avoir
lieu
(
html
,
texte
,
...
)
•
un
cookie
ne
être
pas
disponible
dans
le
page
qui
l
'
avoir
créer
.
il
falloir
soit
recharger
le
page
,
soit
pointer
sur
un
autre
.
•
un
cookie
ne
pouvoir
être
supprimer
que
avec
le
même
paramètre
qui
avoir
servir
à
son
création
.
ce
être
le
navigateur
qui
supprimer
le
cookie
.
setcookie
(
`
`
testcookie
'
'
,
session_id
(
)
,
time
(
)
)
;
if
(
isset
(
$
_COOKIE
[
'
testcookie
'
]
)
)
echo
$
_COOKIE
[
'
testcookie
'
]
;
dans
le
exemple
précédent
,
au
premier
chargement
rien
ne
être
afficher
car
le
contenu
du
cookie
ne
être
pas
encore
accessible
.
au
deuxième
chargement
le
valeur
être
réellement
afficher
,
mais
attention
au
décalage
entre
le
mise
à
jour
et
le
accès
.
if
(
!
isset
(
$
_COOKIE
[
'
testcookie
'
]
)
)
{
setcookie
(
`
`
testcookie
'
'
,
'
toto
'
,
time
(
)
)
;
header
(
`
`
location
:
http
:
/
/
'
'
.
$
_SERVER
[
'
HTTP_HOST
'
]
.
$
_SERVER
[
'
REQUEST_URI
'
]
)
;
}
dans
ce
exemple
,
on
regarder
si
le
cookie
exister
,
sinon
on
le
créer
et
on
rappeler
le
page
.
accès
on
accéder
au
cookie
grâce
à
le
variable
global
$
_COOKIE
qui
être
un
tableau
.
le
index
du
tableau
être
le
nom
du
cookie
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
valeur
=
$
_COOKIE
[
'
testcookie
'
]
;
echo
$
valeur
;
/
/
par
rapport
à
le
exemple
précédent
:
toto
note
:
on
pouvoir
placer
le
tableau
avec
le
cookies
.
il
suffire
de
nommer
son
cookie
avec
un
notation
par
crochet
.
setcookie
(
`
`
testcookie
[
]
'
'
,
'
toto
'
,
time
(
)
)
;
setcookie
(
`
`
testcookie
[
]
'
'
,
'
titi
'
,
time
(
)
)
;
setcookie
(
`
`
testcookie
[
]
'
'
,
'
tata
'
,
time
(
)
)
;
...
(
page
suivant
)
foreach
(
$
_COOKIE
avoir
$
tab
)
{
if
(
is_array
(
$
tab
)
)
foreach
(
$
tab
avoir
$
key
=
>
$
value
)
echo
`
`
$
key
=
>
$
value
'
'
;
}
suppression
pour
supprimer
un
cookie
,
il
suffire
de
donner
un
date
antérieur
à
le
date
actuel
à
celui
-ci
.
if
(
!
isset
(
$
_COOKIE
[
'
testcookie
'
]
)
)
{
setcookie
(
`
`
testcookie
'
'
,
'
toto
'
,
time
(
)
)
;
}
else
{
setcookie
(
`
`
testcookie
'
'
,
'
'
,
time
(
)
)
;
}
if
(
isset
(
$
_COOKIE
[
'
testcookie
'
]
)
)
echo
`
`
OK
'
'
;
else
echo
`
`
pas
de
cookie
'
'
;
dans
le
exemple
précédent
,
le
appel
au
script
aller
provoquer
successivement
le
affichage
de
«
pas
de
cookie
»
et
«
OK
»
.
identification
HTTP
connexion
ce
possibilité
ne
être
disponible
que
si
PHP
être
utiliser
comme
module
apache
,
et
pas
en
tant
que
script
CGI
.
le
identification
HTTP
permettre
via
le
envoi
de
un
HEADER
HTTP
de
demander
un
identification
au
client
.
dans
ce
cas
le
navigateur
aller
ouvrir
un
fenêtre
de
connexion
demander
un
saisie
de
login
et
de
mot
de
passe
.
PHP
récupérer
bien
entendre
ce
valeur
.
voici
le
exemple
issu
de
le
documentation
PHP
if
(
!
isset
(
$
_SERVER
[
'
PHP_AUTH_USER
'
]
)
)
{
header
(
'
WWW-Authenticate
:
basic
realm
=
'
'
Slyunix
'
'
'
)
;
header
(
'
HTTP
/
Unauthorized
'
)
;
echo
'
texte
utiliser
si
le
visiteur
utiliser
le
bouton
d\'annulation
'
;
exit
;
}
else
{
echo
`
`
<
p
>
bonjour
,
{
$
_SERVER
[
'
PHP_AUTH_USER
'
]
}
.
<
/
p
>
'
'
;
echo
`
`
<
p
>
votre
mot
de
passe
être
{
$
_SERVER
[
'
PHP_AUTH_PW
'
]
}
.
<
/
p
>
'
'
;
}
dans
ce
exemple
,
on
passer
en
entêter
un
demande
de
authentification
.
en
cas
de
échec
(
bouton
annuler
)
un
message
de
annulation
être
afficher
.
sinon
on
pouvoir
récupérer
le
valeur
via
le
variable
:
•
$
_SERVER
[
'
PHP_AUTH_USER
'
]
:
login
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
$
_SERVER
[
'
PHP_AUTH_PW
'
]
:
mot
de
passe
déconnexion
le
déconnexion
ne
être
pas
si
évident
que
cela
car
un
fois
connecter
,
le
identifiants
être
placer
dans
le
session
.
le
méthode
le
plus
simple
consister
à
fermer
le
navigateur
et
à
le
relancer
.
session
PHP
principe
le
session
permettre
de
préserver
du
donnée
lors
de
le
visite
de
un
site
.
chaque
personne
se
voir
attribuer
un
identifier
unique
appelé
identifier
de
session
,
ou
SID
.
ce
SID
être
soit
stocker
dans
un
cookie
,
être
passer
par
URL
.
on
pouvoir
ainsi
définir
un
nombre
infini
de
variable
qui
être
accessible
durant
tout
le
durée
de
le
session
.
noter
que
si
vous
fermer
et
relancer
votre
navigateur
,
vous
changer
de
identifier
,
et
donc
le
précédent
session
être
perdre
,
même
si
elle
être
nommer
.
on
pouvoir
connaître
son
SID
grâce
à
le
constante
de
même
nom
,
ou
par
le
fonction
session_id
(
)
.
utilisation
ip-remplacée
>
ouverture
si
dans
dns-remplacé
le
valeur
«
dns-remplacer
_start
»
être
activer
,
le
session
être
démarrer
de
manière
automatique
lors
de
le
accès
à
un
page
.
sinon
il
falloir
utiliser
explicitement
le
fonction
session_start
(
)
.
son
appel
créer
un
session
ou
restaurer
un
session
précédemment
stocker
sur
le
serveur
.
attention
:
le
ouverture
de
un
session
devoir
obligatoirement
apparaître
avant
tout
sortie
/
affichage
du
script
PHP
ou
de
balise
HTML
,
même
un
ligne
vide
!
on
pouvoir
créer
ou
récupérer
un
session
nommer
en
préciser
un
session_name
(
)
qui
prendre
comme
paramètre
le
nom
de
le
session
qui
devoir
être
créer
(
premier
appel
)
ou
accéder
(
appel
suivant
)
.
le
session
par
défaut
se
nommer
«
PHPSESSID
»
et
ce
être
celui
là
qui
être
charger
si
session_name
(
)
ne
être
pas
appeler
.
il
falloir
donc
appeler
session_name
(
)
avant
session_start
(
)
pour
accéder
à
un
session
nommé
.
un
session
pouvoir
aussi
être
indirectement
créer
ou
ouvrir
avec
le
utilisation
de
le
fonction
session_register
(
)
.
ip-remplacée
>
variable
de
session
il
y
avoir
deux
moyen
de
créer
du
variable
de
session
,
qui
être
accessible
depuis
ne
importer
quel
pager
visiter
à
partir
du
moment
ou
session_start
(
)
avoir
être
appeler
.
le
premier
moyen
ne
fonctionner
ne
fonctionner
pas
si
register_globals
être
à
off
dans
dns-remplacé
:
méthode
(
déconseiller
)
:
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
fonction
session_register
(
)
prendre
comme
paramètre
un
nom
de
variable
et
la
définir
comme
variable
de
session
.
ce
variable
pouvoir
ensuite
être
accéder
par
son
nom
.
$
txt
=
'
bonjour
le
ami
'
;
session_register
(
'
txt
'
)
;
/
/
txt
devenir
un
variable
de
session
.
pour
savoir
si
un
variable
être
enregistrer
dans
le
session
courant
,
on
utiliser
session_is_registered
(
)
.
if
(
session_is_registered
(
'
txt
'
)
)
echo
$
txt
;
pour
supprimer
un
variable
de
session
,
il
falloir
utiliser
session_unregister
(
)
.
par
contre
il
ne
falloir
pas
oublier
de
utiliser
unset
(
)
pour
supprimer
le
variable
global
,
car
le
précédent
fonction
ne
la
supprimer
pas
,
elle
empêcher
seulement
son
sauvegarde
à
le
fin
du
script
.
if
(
session_is_registered
(
'
txt
'
)
)
{
session_unregister
(
'
txt
'
)
;
unset
(
$
txt
)
;
}
méthode
(
le
meilleur
à
utiliser
)
:
on
utiliser
tout
simplement
le
tableau
global
$
_SESSION
.
ainsi
:
$
_SESSION
[
'
txt
'
]
=
'
'
bonjour
le
ami
'
'
;
créer
le
variable
de
session
txt
,
echo
$
_SESSION
[
'
txt
'
]
le
affiche
et
unset
(
$
_SESSION
[
'
txt
'
]
)
;
la|le
effacer
.
pour
effacer
tout
le
variable
de
session
,
il
suffire
de
faire
$
_SESSION
=
array
(
)
;
expiration
de
le
session
le
durée
de
vie
de
un
session
PHP
dépendre
de
trois
paramètre
de
configuration
du
fichier
dns-remplacer
:
dns-remplacer
_maxlifetime
,
dns-remplacer
_lifetime
et
dns-remplacer
_expire
.
le
premier
concerner
le
durée
de
vie
du
donnée
sur
le
serveur
,
en
nombre
de
seconde|second
.
il
être
par
défaut
de
seconde|second
,
soit
minute
.
au
delà
,
le
donnée
être
supprimer
et
elle
être
recharger
via
le
cookie
de
session
lors
du
prochain
appel
.
le
second
être
le
durée
de
vie
du
cookie
de
session
,
exprimer
en
second
.
par
défaut
le
valeur
être
zéro
(
)
ce
qui
signifier
:
jusqu
'
à
ce
que
le
navigateur
soit
éteind
.
le
troisième
être
le
durée
de
vie
du
donnée
de
session
,
en
minute
.
son
valeur
par
défaut
être
de
minute
,
soit
trois
heure
.
ce
qui
vouloir
dire
que
dans
un
même
session
,
on
pouvoir
rester
trois
heure
sur
le
même
page
,
le
valeur
ne
être
pas
perdre
.
au
delà
,
il
falloir
rouvrir
un
nouveau
session
et
S
.
ROHAUT
courir
programmation
PHP
pager
/
restaurer
de
nouveau
valeur
.
à
chaque
chargement
de
page
(
ouverture
de
session
)
,
on
recommencer
le
décompte
.
on
pouvoir
modifier
le
délai
de
expiration
de
le
session
grâce
à
le
fonction
session_cache_expire
(
)
qui
prendre
comme
valeur
le
nouveau
durée
en
minute
.
sans
paramètre
elle
retourner
le
valeur
actuel
.
changer
le
accès
par
défaut
PHP
savoir
très
bien
se
débrouiller
tout
seul
mais
on
pouvoir
remplacer
le
prise
en
charge
par
défaut
du
session
par
son
propre
fonction
,
dans
le
but
de
gérer
le
ouverture
et
le
fermeture
ou
encore
le
sauvegarde
du
donnée
de
session
dans
un
fichier
ou
un
base
de
donnée
.
un
autre
utilisation
pouvoir
être
le
traçage
via
PHP
de
tout
le
ouverture
/
fermeture
du
session
.
pour
cela
on
utiliser
le
fonction
session_set_save_handler
(
)
.
son
étude
dépasser
le
cadre
du
cours|cour
mais
voici
un
exemple
tirer
de
le
documentation
PHP
.
if
(
!
mysql_table_exists
(
`
`
session
'
'
,
$
DB
)
)
{
$
query
=
'
CREATE
tabler
session
(
SessionID
char
(
)
not
null
,
LastUpdated
datetime
not
null
,
DataValue
text
,
PRIMARY
KEY
(
SessionID
)
,
index
(
LastUpdated
)
)
'
;
mysql_query
(
$
query
)
;
}
function
sessao_open
(
$
aSavaPath
,
$
aSessionName
)
{
global
$
aTime
;
sessao_gc
(
$
aTime
)
;
return
True
;
}
function
sessao_close
(
)
{
return
True
;
}
function
sessao_read
(
$
aKey
)
{
$
query
=
`
`
select
DataValue
FROM
session
WHERE
SessionID
=
'
$
aKey
'
'
'
;
$
busca
=
mysql_query
(
$
query
)
;
if
(
mysql_num_rows
(
$
busca
)
=
=
)
{
$
r
=
mysql_fetch_array
(
$
busca
)
;
return
$
r
[
'
DataValue
'
]
;
}
ELSE
{
$
query
=
`
`
insert
INTO
session
(
SessionID
,
LastUpdated
,
DataValue
)
valoir
(
'
$
aKey
'
,
NOW
(
)
,
`
`
)
'
'
;
mysql_query
(
$
query
)
;
return
`
`
'
'
;
}
}
function
sessao_write
(
$
aKey
,
$
aVal
)
{
$
aval
=
addslashes
(
$
aVal
)
;
$
query
=
`
`
UPDATE
session
set
DataValue
=
'
$
aVal
'
,
LastUpdated
=
NOW
(
)
WHERE
SessionID
=
'
$
aKey
'
'
'
;
mysql_query
(
$
query
)
;
return
True
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
}
function
sessao_destroy
(
$
aKey
)
{
$
query
=
`
`
DELETE
FROM
session
WHERE
SessionID
=
'
$
aKey
'
'
'
;
mysql_query
(
$
query
)
;
return
True
;
}
function
sessao_gc
(
$
aMaxLifeTime
)
{
$
query
=
`
`
DELETE
FROM
session
WHERE
UNIX_TIMESTAMP
(
NOW
(
)
)
-
UNIX_TIMESTAMP
(
LastUpdated
)
>
$
aMaxLifeTime
'
'
;
mysql_query
(
$
query
)
;
return
True
;
}
session_set_save_handler
(
`
`
sessao_open
'
'
,
`
`
sessao_close
'
'
,
`
`
sessao_read
'
'
,
'
'
sessao_write
'
'
,
`
`
sessao_destroy
'
'
,
`
`
sessao_gc
'
'
)
;
image
Pré-requis
important
ceci
concerner
le
version
de
PHP
avant
le
et
EasyPHP
:
certain
fonction
comme
gd_info
(
)
ou
encore
imagecreatetruetype
(
)
ne
être
pas
toujours
disponible
car
PHP
faire
appel
à
un
bibliothèque
externe
appeler
GD2
.
pour
le
version
et
au-delà
on
trouver
du
patches
à
le
adresse
http
:
/
/
dns-remplacer
/
gd
/
.
avant
ce
version
,
le
version
GD
linkée
avec
PHP
être
le
.
ceci
concerner
le
utilisateur
de
PHP
et
+
et
EasyPHP
sur
Windows
:
le
configuration
par
défaut
de
EasyPHP
ne
inclure
pas
le
support
du
image
.
pour
cela
il
falloir
modifier
le
fichier
dns-remplacer
en
retirer
le
commentaire
de
:
extension
=
php_
dns-remplacer
créer
un
image
type
possible
il
falloir
tout
de
abord
choisir
le
type
de
le
image
que
vous
souhaiter
créer
.
pour
cela
on
pouvoir
tester
quel
type
PHP
pouvoir
générer
avec
le
fonction
imagetypes
(
)
et
son
constant
associé
:
•
IMG_PNG
:
format
PNG
•
IMG_JPG
:
format
JPEG
•
IMG_GIF
:
format
GIF
•
IMG_WBMP
:
format
Windows
Bitmap
BMP
if
(
imagetype
(
)
&
IMG_PNG
)
{
echo
`
`
le
type
PNG
être
supporter
'
'
;
puis
au
début
du
script
,
on
envoyer
un
header
spécifier
le
type
de
image
:
S
.
ROHAUT
courir
programmation
PHP
pager
/
header
(
`
`
Content-type
:
image
/
png
'
'
)
;
/
/
ou
image
/
gif
ou
image
/
jpeg
création
ip-remplacée
>
nouveau
image
dynamique
et
enfin
on
créer
un
image
avec
le
fonction
imagecreate
(
)
(
baser
sur
un
table
de
couleur
indexer
)
ou
imagecreatetruecolor
(
)
(
en
truecolor
)
avec
comme
paramètre
le
largeur
et
le
hauteur
.
le
second
être
conseiller
par
le
documentation
PHP
.
le
fonction
retourner
un
ressource
identifier
le
image
.
par
défaut
le
image
être
noir
.
$
img
=
@
createimage
(
,
)
or
die
(
`
`
votre
PHP
ne
supporter
pas
le
image
'
'
)
;
ip-remplacée
>
récupération
de
un
image
existant
PHP
pouvoir
charger
un
image
existant
au
lieu
de
le
créer
de
tout
pièce
.
dans
ce
cas
le
image
être
charger
depuis
un
fichier
et
on
pouvoir
ensuite
le
retravailler
comme
on
le
souhaiter
.
on
pouvoir
utiliser
le
fonction
:
•
imagecreatefromgif
(
)
:
charger
un
image
GIF
•
imagecreatefromjpeg
(
)
:
charger
un
image
JPEG
•
imagecreatefrompng
(
)
:
charger
un
image
PNG
•
imagecreatefromstring
(
)
:
charger
un
image
depuis
un
chaîne
de
texte
(
par
exemple
un
champ
)
publication
enfin
,
on
publier
le
image
avec
le
fonction
imagexxx
(
)
.
si
ce
fonction
être
utiliser
sans
paramètre
,
le
image
créer
être
rediriger
vers
le
sortie
standard
.
on
pouvoir
toutefois
préciser
comme
paramètre
un
nom
de
fichier
.
dans
ce
cas
,
le
image
être
sauver
sur
disque
au
format
spécifier
.
•
imagepng
(
)
:
créer
un
image
au
format
PNG
•
imagegif
(
)
:
créer
un
image
au
format
GIF
•
imagejpeg
(
)
:
créer
un
image
au
format
JPEG
un
fois
le
image
créer
,
on
pouvoir
la
supprimer
avec
imagedestroy
(
)
ce
qui
le
décharge
de
le
mémoire
.
voici
donc
le
code
de
un
page
PHP
dns-remplacé
retourner
un
image
:
header
(
`
`
Content-type
:
image
/
png
'
'
)
;
$
img
=
@
imagecreatetruecolor
(
,
)
or
die
(
`
`
impossible
de
créer
un
flux
de
image
GD
'
'
)
;
/
*
ici
on
placer
le
commande
de
dessin
ou
manipulation
*
/
imagepng
(
$
img
)
;
imagedestroy
(
$
img
)
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
chargement
via
un
autre
page
pour
appeler
ce
image
dynamique
depuis
un
page
HTML
ou
PHP
il
suffire
de
le
placer
dans
un
balise
IMG
:
<
img
src
=
'
'
dns-remplacer
'
'
>
travailler
sur
le
image
récupérer
du
information
le
fonction
getimagesize
(
)
permettre
de
récupérer
du
information
sur
un
image
si
on
lui
passer
un
nom
de
fichier
(
pas
de
ressource
image
)
.
elle
retourner
un
tableau
indexer
.
list
(
$
width
,
$
height
,
$
type
,
$
attr
)
=
getimagesize
(
`
`
dns-remplacer
'
'
)
;
•
width
:
largeur
x
•
height
:
hauteur
y
•
type
:
=
GIF
,
=
JPG
,
=
PNG
,
=
PSD
,
=
BMP
,
=
TIFF
(
ordre
du
octet
Intel
)
,
=
TIFF
(
ordre
du
octet
Motorola
)
,
=
JPC
,
=
JP2
,
=
JPX
,
=
JB2
,
=
SWC
,
=
IFF
•
attr
:
chainer
width
/
height
pour
HTML
si
on
travailler
sur
un
image
que
on
avoir
créer
nous
même
:
•
imagesx
(
)
:
largeur
x
de
le
image
•
imagesy
(
)
:
hauteur
de
le
image
le
couleur
il
ne
être
pas
possible
de
voir
tout
le
fonction
cependant
un
chose
être
à
retenir
:
le
notion
de
palette
indexer
(
createimage
(
)
)
et
le
notion
de
truetype
.
dans
le
premier
cas
le
couleur
être
indexer
via
un
numéro
.
dans
le
second
cas
,
le
couleur
être
un
composant
RVB
.
le
fonction
imagecolorallocate
(
)
permettre
de
définir
un
couleur
qui
être
utiliser
pour
un
image
.
le
premier
paramètre
être
le
ressource
de
le
image
,
le
trois
autre
le
niveau
de
rouge
,
vert
et
bleu
de
le
couleur
.
attention
:
avec
un
image
créer
avec
createimage
(
)
,
le
palette
être
indexer
et
le
premier
index
être
le
couleur
du
fond
.
donc
:
un
premier
appel
à
imagecolorallocate
(
)
dans
ce
cas
modifier
le
couleur
du
fond
.
$
white
=
imagecolorallocate
(
$
img
,
,
,
)
;
le
fonction
imagecolorat
(
)
retourner
le
valeur
exact
(
soit
le
index
de
le
palette
,
soit
un
entier
RVB
)
du
point
au
coordonnées
x
/
y
de
le
image
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
color
=
imagecolorextact
(
$
img
,
,
)
;
le
fonction
imagecolortransparent
(
)
permettre
de
définir
le
couleur
de
transparence
de
un
image
dont
le
palette
être
indexer
.
le
premier
paramètre
être
le
ressource
de
le
image
obligatoirement
créer
avec
imagecreate
(
)
,
le
second
un
valeur
retourner
par
imagecolorallocate
(
)
.
le
fonction
imagecolorstotal
(
)
retourner
le
nombre
total
de
couleur
utiliser
pour
le
image
donner
.
dessin
ip-remplacée
>
remplissage
on
utiliser
le
fonction
imagefill
(
)
:
$
background
=
imagecolorallocate
(
$
img
,
,
,
)
;
ImageFill
(
$
img
,
,
,
$
background
)
;
le
fonction
imagefilltoborder
(
)
permettre
un
remplissage
de
un
zone
délimiter
par
un
couleur
donner
.
dans
ce
cas
le
deux
dernier
paramètre
être
le
couleur
de
le
bordure
et
le
couleur
de
remplissage
.
ip-remplacée
>
point
on
utiliser
imagesetpixel
(
)
:
$
green
=
imagecolorallocate
(
$
img
,
,
,
)
;
Imagesetpixel
(
$
img
,
,
,
$
green
)
;
ip-remplacée
>
ligner
on
utiliser
imageline
(
)
:
imageline
(
$
img
,
,
,
,
,
$
blue
)
;
ip-remplacée
>
rectangle
on
utiliser
imagerectangle
(
)
pour
un
rectangle
simple
,
imagefilledrectangle
(
)
pour
un
rectangle
remplir
.
$
blue
=
ImageColorAllocate
(
$
img
,
,
,
)
;
imagerectangle
(
$
img
,
,
,
,
,
$
blue
)
;
imagefilledrectangle
(
$
img
,
,
,
,
,
$
green
)
;
ip-remplacée
>
cercle
,
ellipse
on
utiliser
imageellipse
(
)
ou
imagefilledellipse
(
)
.
attention
le
deux
premier
paramètre
être
le
coordonnées
du
centre
de
le
ellipse
,
le
deux
autre
le
largeur
et
le
hauteur
de
le
ellipse
.
imageellipse
(
$
img
,
,
,
,
,
$
red
)
;
on
pouvoir
aussi
faire
du
arc
de
cercle
avec
le
fonction
imagearc
(
)
et
imagefilledarc
(
)
:
juste
S
.
ROHAUT
courir
programmation
PHP
pager
/
avant
le
couleur
on
préciser
le
début
et
le
fin
de
le
arc
en
degré
(
de
à
)
.
ip-remplacée
>
polygone
on
utiliser
le
fonction
imagepolygone
(
)
et
imagefilledpolygone
(
)
.
le
sommet
du
polygone
être
définir
dans
un
tableau
:
tab
[
]
=
x0
,
tab
[
]
=
y0
,
tab
[
]
=
x1
,
tab
[
]
=
y1
,
...
on
devoir
aussi
préciser
le
nombre
de
sommet
.
imagepolygon
(
$
img
,
array
(
,
,
,
,
,
)
,
,
$
blue
)
;
ip-remplacée
>
texte
simple
on
utiliser
imagestring
(
)
:
imagestring
(
$
img
,
,
,
,
`
`
un
simple
chaîne
de
texte
'
'
,
$
text_color
)
;
le
second
paramètre
être
le
numéro
de
police
par
défaut
de
le
page
actuel
ou
du
navigateur
.
le
programmation
objet
structure
un
classe
être
un
collection
de
variable
(
attribut
)
et
de
fonction
(
méthode
)
qui
fonctionner
avec
ce
variable
.
le
ensemble
former
le
membre
ou
le
propriété
de
le
objet
.
un
classe
être
définir
en
utiliser
le
mot-clé
«
class
»
:
class
panier
{
/
/
Eléments
de
notre
panier
var
$
contenir
;
/
/
ajout
de
$
qte
article
de
type
$
code
au
panier
function
ajout_article
(
$
code
,
$
qte
)
{
if
(
isset
(
$
this-
>
contenir
[
$
code
]
)
)
$
this-
>
contenir
[
$
code
]
+
=
$
qte
;
else
$
this-
>
contenir
[
$
code
]
=
$
qte
;
}
/
/
suppression
de
$
num
article
du
type
$
artnr
du
panier
function
suppr_article
(
$
code
,
$
qte
)
{
if
(
$
this-
>
contenir
[
$
code
]
>
$
qte
)
{
$
this-
>
contenir
[
$
code
]
-
=
$
qte
;
return
TRUE
;
}
else
{
return
FALSE
;
}
}
}
création
de
un
objet
on
utiliser
le
mot-clé
«
new
»
.
$
mon_caddie
=
new
panier
;
si
le
constructeur
exister
(
voir
plus
loin
)
on
pouvoir
bien
entendre
passer
du
valeur
à
le
création
:
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
o@card@
=
new
Obj
(
`
`
riri
'
'
)
;
accès
au
membre
PHP
et
on
utiliser
le
caractère
«
-
>
»
.
on
accéder
au
membre
avec
le
syntaxe
suivant
.
noter
que
on
utiliser
pas
le
$
devant
un
nom
de
attribut
.
$
mon_caddie-
>
contenu
=
array
(
'
ref01
'
=
>
,
'
ref02
'
=
>
)
;
au
sein
de
un
objet
,
on
accéder
au
attribut
de
le
classe
en
le
préciser
avec
le
variable
«
$
this
»
.
si
on
ne
le
préciser
pas
,
on
utiliser
en
fait
le
variable
localz
à
le
méthode
.
$
this-
>
contenir
[
'
ref01
'
]
+
=
;
PHP
le
PHP
étendre
le
possibilité
de
accès
au
membre
(
variable
et
fonction
)
via
le
variable
dynamique
.
ex
:
class
panier
{
/
/
Eléments
de
notre
panier
public
$
etat
=
false
;
/
/
false
:
vide
...
}
function
bidon
(
)
{
return
'
etat
'
;
}
$
mon_caddie
=
new
panier
;
$
pipo
=
'
etat
'
;
echo
$
mon_caddie-
>
$
pipo
;
/
/
affiche
$
this-
>
etat
$
fonction
=
'
affiche_panier
'
;
$
mon_caddie-
>
$
fonction
(
)
;
echo
$
nom_caddie-
>
{
bidon
(
)
}
;
le
opérateur
:
:
le
opérateur
«
:
:
»
permettre
de
faire
référence
au
membre
de
un
classe
de
base
(
voir
héritage
)
,
ou
de
utiliser
du
méthode
alors
que
le
classe
n
'
avoir
pas
être
instanciée
.
class
à
{
function
example
(
)
{
echo
`
`
je
être|suivre
le
fonction
original
.
<
br
>
\n
'
'
;
}
}
/
/
il
n
'
y
avoir
pas
de
objet
de
classe
à
.
/
/
le
affichage
être
:
je
être|suivre
le
fonction
original
.
avoir
:
:
example
(
)
;
dans
le
cas
de
un
appel
à
un
méthode
avec
:
:
de
un
classe
non
instanciée
(
pas
de
objet
)
,
le
méthode
ne
devoir
pas
appeler
de
attribut
de
le
classe
,
puisqu'ils
ne
exister
pas
.
de
même
pour
le
même
raison
il
ne
falloir
pas
employer
le
variable
$
this
dans
le
méthode
appelé
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
variable
,
protection
PHP
4.x
on
déclarer
le
attribut
avec
le
mot-clé
«
var
»
.
le
attribut
être
considérer
comme
être
tout
public
.
PHP
ne
posséder
aucun
mécanisme
de
protection
du
variable
.
ainsi
un
attribut
être
accessible
depuis
tout
le
classe
dérivé
et
depuis
le
extérieur
de
le
classe
.
var
$
mavariable
;
il
être
interdire
de
initialiser
un
variable
lors
de
son
déclaration
.
var
$
toto
=
'
'
salut
!
`
`
;
/
/
ne
marche
pas
!
PHP
5.x
ip-remplacée
>
protection
du
variable
et
fonction
le
PHP
rajouter
le
notion
de
protection
du
donnée
qui
manquer
à
PHP
.
on
appeler
cela
le
trois
«
P
»
:
«
public
»
,
«
protected
»
,
«
private
»
,
avec
le
mots-clé
correspondant
.
voici
un
tableau
récapitulatif
de
leur
effet
:
accès
public
Protected
Private
dans
le
classe
elle
même
ü
ü
ü
depuis
un
classe
dérivé
ü
ü
û
depuis
le
extérieur
ü
û
û
note
:
le
mots-clés
public
,
private
et
protected
pouvoir
bien
entendre
être
utiliser
pour
le
méthode
(
fonction
)
auquel
cas
le
protection
se
étendre
de
le
même
manière
.
le
mot-clé
«
var
»
être
toujours
utilisable
en
PHP
et
dans
ce
cas
le
attribut
être
considérer
comme
public
.
il
être
possible
de
initialiser
le
variable
à
leur
création
avec
ne
importer
quel
valeur
.
class
panier
{
/
/
Eléments
de
notre
panier
,
privé
private
$
contenir
=
array
(
)
;
...
}
ip-remplacée
>
attribut
et
méthode
statique
on
pouvoir
aussi
définir
du
attribut
et
du
méthode
statique
qui
être
accessible
en
dehors
de
le
classe
,
le
objet
ne
être
pas
forcément
déclarer
.
on
rajouter
le
mot-clé
«
static
»
après
le
définition
de
le
visibilité
de
le
attribut
.
un
«
static
»
ne
avoir
pas
de
portée
définir
être
considérer
comme
public
.
par
exemple
,
voici
un
compteur
permettre
de
savoir
combien
de
fois
un
classe
avoir
être
instanciée
.
noter
le
utilisation
de
«
self
»
à
le
place
de
«
$
this
»
.
«
$
this
»
ne
pouvoir
pas
être
utiliser
ici
il
faire
référence
à
un
objet
et
un
attribut
statique
faire
référence
à
le
classe
elle
même
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
à
{
public
static
$
compteur
=
;
function
à
(
)
{
self
:
:
$
compteur++
;
/
/
on
incrémenter
}
function
affiche
(
)
{
echo
self
:
:
$
compteur
.
`
`
<
br
/
>
'
'
;
/
/
self
!
}
}
$
o@card@
=
new
à
;
$
o@card@
>
affiche
(
)
;
/
/
$
o@card@
=
new
à
;
$
o@card@
>
affiche
(
)
;
/
/
$
o@card@
=
new
à
;
$
o@card@
>
affiche
(
)
;
/
/
echo
à
:
:
$
compteur
;
/
/
ip-remplacée
>
constant
de
classe
on
pouvoir
créer
du
constante
dans
un
classe
à
le
aide
du
mot-clé
«
const
»
.
le
déclaration
de
un
constante
ne
devoir
pas
être
précéder
de
un
indicateur
de
visibilité
.
un
constant
être
toujours
publique
.
on
ne
pouvoir
pas
non
plus
assigner
à
un
constant
un
valeur
elle
même
dynamique
,
comme
le
retour
de
un
fonction
.
comme
pour
le
variable
statique
,
on
utiliser
«
self
»
pour
accéder
à
son
valeur
.
class
à
{
const
classname
=
'
'
à
'
'
;
function
__construct
(
)
{
echo
self
:
:
classname
;
}
}
$
o@card@
=
new
à
;
/
/
affiche
à
héritage
et
polymorphisme
le
héritage
permettre
de
définir
du
classe
générique
réutilisable
.
on
pouvoir
alors
faire
du
extension
à
un
classe
,
faire
dériver
un
classe
de
un
autre
.
le
classe
dérivé
hériter
de
tout
le
méthode
et
variable
de
le
classe
de
base
et
pouvoir
redéfinir
son
propre
fonction
et
variable
.
un
classe
ne
pouvoir
hériter
que
de
un
seul
autre
classe
.
le
héritage
multiple
ne
être
pas
supporter
,
ni
par
PHP
,
ni
par
PHP
.
par
contre
rien
ne
empêcher
de
faire
du
héritage
en
cascade
.
le
«
polymorphisme
»
permettre
de
redéfinir
un
méthode
de
même
nom
dans
un
classe
dérivé
,
par
de
autre
paramètre
éventuel
.
note
:
le
«
polymorphisme
»
ne
être
pas
un
surcharge
.
un
surcharge
consister
à
définir
plusieurs
méthode
de
même
nom
mais
de
prototype
différent
.
PHP
ne
supporter
pas
ce
forme
de
surcharge
.
le
polymorphisme
remplacer
un
méthode
par
un
autre
dans
un
classe
dérivé
.
pour
créer
un
héritage
on
utiliser
le
mot-clé
«
extends
»
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
Panier_nomme
extends
panier
{
var
$
proprietaire
;
function
nom_proprietaire
(
$
nom
)
{
$
this-
>
proprietaire
=
$
nom
;
}
}
on
créer
un
classe
«
Panier_nomme
»
qui
hériter
de
«
panier
»
.
elle
posséder
donc
le
même
propriété
que
le
classe
«
panier
»
à
lequel
on
rajouter
un
nouveau
attribut
et
un
nouveau
méthode
.
$
ncart
=
new
Panier_nomme
;
$
ncart-
>
nom_proprietaire
(
`
`
Slyce
'
'
)
;
print
$
ncart-
>
proprietaire
;
$
ncart-
>
ajout_article
(
`
`
ref03
'
'
,
)
;
par
le
polymorphisme
on
pouvoir
redéfinir
dans
le
classe
dériver
le
méthode
de
le
classe
hériter
.
class
à
{
function
affiche
(
)
{
echo
`
`
classe
à
<
br
/
>
'
'
;
}
}
class
B
extends
à
{
function
affiche
(
)
{
echo
`
`
classe
B
<
br
/
>
'
'
;
}
}
$
test
=
new
B
;
$
test-
>
affiche
(
)
;
/
/
affiche
classe
B
le
mots-clé
parent
et
self
le
mot-clé
«
parent
»
représenter
le
classe
de
base
(
celui
présenter
après
un
«
extends
»
)
et
permettre
de
faire
référence
au
variable
et
fonction
de
un
classe
de
base
.
class
à
{
function
example
(
)
{
echo
`
`
je
être|suivre
à
:
:
example
(
)
,
fonctionnalité
de
base
.
<
br
>
\n
'
'
;
}
}
class
B
extends
à
{
function
example
(
)
{
echo
`
`
je
être|suivre
B
:
:
example
(
)
,
fonctionnalité
supplémentaire
.
<
br
>
\n
'
'
;
parent
:
:
example
(
)
;
}
}
$
b
=
new
B
;
/
/
appeler
B
:
:
example
(
)
,
qui
,
à
être
tour
,
appeler
à
:
:
example
(
)
.
$
b-
>
example
(
)
;
le
mot-clé
«
self
»
représenter
le
classe
elle
même
et
pouvoir
donc
être
utiliser
pour
préciser
le
accès
à
un
membre
précis
,
comme
un
attribut
statique
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
constructeur
PHP
et
le
constructeur
être
le
méthode
qui
être
automatiquement
appeler
lors
de
le
création
de
un
objet
par
«
new
»
.
un
méthode
devenir
un
constructeur
si
elle
porter
le
même
nom
que
le
classe
dans
lequel
elle
être
définir
.
class
auto_panier
extends
Panier_nommer
{
function
auto_panier
(
)
{
$
this-
>
proprietaire
=
session_id
(
)
;
}
}
ce
classe
hériter
de
Panier_nomme
.
le
constructeur
initialiser
le
nom
du
propriétaire
comme
être
le
identifier
de
session
.
le
constructeur
pouvoir
prendre
comme
ne
importer
quel
méthode
du
paramètre
optionnel
.
class
auto_panier
extends
Panier_nommer
{
function
auto_panier
(
$
nom
=
'
'
anonyme
'
'
)
{
$
this-
>
proprietaire
=
$
nom
;
}
}
$
panier
=
new
auto_panier
;
/
/
le
constructeur
être
appeler
avec
son
valeur
par
défaut
$
panier2
=
new
auto_panier
(
session_id
(
)
)
;
/
/
valeur
passer
PHP
outre
le
nom
de
le
classe
elle
même
,
PHP
proposer
un
méthode
générique
appeler
«
__construct
»
(
avec
deux
underscore
«
_
»
au
début
)
en
lieu
et
place
de
le
premier
méthode
voir
ci-dessus
.
ainsi
:
function
__construct
(
)
{
$
this-
>
proprietaire
=
session_id
(
)
;
}
revenir
exactement
au
même
.
constructeur
et
classe
dériver
PHP
et
soit
le
classe
à
et
B
suivant
:
class
à
{
function
à
(
)
{
echo
`
`
je
être|suivre
le
classe
à
<
br
/
>
'
'
;
}
}
class
B
extends
à
{
function
B
(
)
{
echo
`
`
je
être|suivre
le
classe
B
<
br
/
>
'
'
;
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
création
de
un
nouveau
objet
de
type
B
:
$
b
=
new
B
;
afficher
je
être|suivre
le
classe
B
si
un
classe
n
'
avoir
pas
de
constructeur
,
ce
être
le
constructeur
de
le
classe
de
base
qui
être
appeler
:
class
à
{
function
à
(
)
{
echo
`
`
je
être|suivre
le
classe
à
<
br
/
>
'
'
;
}
}
class
B
extends
à
{
var
$
var
;
}
$
b
=
new
B
;
/
/
je
être|suivre
le
classe
à
on
remarquer
que
le
constructeur
ne
être
pas
appeler
en
cascade
.
ainsi
dans
le
cas
le
classe
B
,
le
constructeur
de
le
classe
à
ne
être
pas
appeler
,
ce
qui
être
logique
car
PHP
ne
pouvoir
pas
savoir
par
défaut
comment
appeler
le
constructeur
(
quel
paramètre
)
.
on
devoir
donc
la|le
appeler
explicitement
à
le
aide
du
mot-clé
«
parent
»
:
class
à
{
function
à
(
)
{
echo
`
`
je
être|suivre
le
classe
à
<
br
/
>
'
'
;
}
}
class
B
extends
à
{
var
$
var
;
function
B
(
)
{
echo
`
`
je
être|suivre
le
classe
B
<
br
/
>
'
'
;
parent
:
:
avoir
(
)
;
}
}
$
b
=
new
B
;
/
/
affiche
:
je
être|suivre
le
classe
B
,
je
être|suivre
le
classe
à
PHP
le
PHP
réagir
de
manière
presque
identique
que
PHP
,
sauf
que
il
être
possible
de
appeler
un
constructeur
en
cascade
,
toujours
avec
le
mot-clé
«
parent
»
,
mais
sans
connaître
le
nom
du
constructeur
de
le
classe
de
base
,
en
utiliser
«
__construct
»
:
class
à
{
function
à
(
)
{
echo
`
`
je
être|suivre
le
classe
à
<
br
/
>
'
'
;
}
}
class
B
extends
à
{
var
$
var
;
function
__construct
(
)
S
.
ROHAUT
courir
programmation
PHP
pager
/
{
echo
`
`
je
être|suivre
le
classe
B
<
br
/
>
'
'
;
parent
:
:
__construct
(
)
;
/
/
appeler
le
constructeur
de
à
:
avoir
(
)
}
}
$
b
=
new
B
;
/
/
affiche
:
je
être|suivre
le
classe
B
,
je
être|suivre
le
classe
à
destructeur
PHP
il
n
'
y
avoir
pas
de
destructeur
en
PHP
.
on
faire
confiance
dans
ce
cas
à
le
gestion
de
le
mémoire
(
ramasse-miettes
)
de
PHP
,
ou
appeler
un
méthode
particulier
de
le
classe
à
le
fin
du
script
,
charger
de
faire
le
ménage
,
ce
qui
pouvoir
être
important
par
exemple
lorsque
on
avoir
allouer
un
ressource
pour
un
image
dynamique
.
pour
détruire
un
objet
,
il
suffire
de
réaffecter
son
variable
,
ou
de
la
détruire
avec
«
unset
»
.
le
objet
être
détruire
de
tout
façon
implicitement
à
le
fin
de
le
exécution
du
script
.
PHP
le
destructeur
être
présent
en
PHP
.
il
se
nommer
«
__destruct
»
et
être
automatiquement
appeler
lors
de
le
destruction
de
le
objet
.
tout
comme
le
constructeur
,
il
ne
être
pas
appeler
en
cascade
et
devoir
donc
être
appeler
explicitement
lors
de
un
héritage
.
class
à
{
function
__destruct
(
)
{
echo
`
`
au
revoir
le
classe
à
<
br
/
>
'
'
;
}
}
class
B
extends
à
{
function
__destruct
(
)
{
echo
`
`
au
revoir
le
classe
B
<
br
/
>
'
'
;
parent
:
:
__destruct
(
)
;
}
}
$
b
=
new
B
;
unset
(
$
b
)
;
/
/
destruction
de
le
objet
,
affiche
au
revoir
le
classe
B
et
à
...
affectation
de
objet
code
commun
le
fonctionnement
du
affectation
du
objet
en
PHP
et
PHP
ne
être
pas
le
même
.
en
,
effet
sur
PHP
,
le
affectation
se
faire
par
copie
,
et
par
référence
en
PHP
ce
qui
pouvoir
induire
de
grand
différence
de
fonctionnement
lorsque
du
code
objet
en
PHP
être
utiliser
en
PHP
.
nous
aller
voir
un
exemple
à
le
aide
de
un
classe
très
simple
.
class
à
{
var
$
avoir
;
function
à
(
)
{
$
this-
>
avoir
=
'
'
salut
'
'
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
}
function
affiche
(
)
{
echo
`
`
$
this-
>
avoir
<
br
/
>
'
'
;
}
}
function
modif
(
$
objet
)
{
$
objet-
>
avoir
=
'
coucou
'
;
}
PHP
en
PHP
,
le
objet
être
affecter
par
copie
,
un
nouveau
objet
être
créer
reprendre
tout
le
propriété
du
premier
,
mais
être
totalement
indépendant
.
ainsi
voici
le
résultat
du
code
suivre
:
$
obj1
=
new
à
;
$
obj2
=
$
obj1
;
/
/
affectation
par
copie
$
obj1-
>
affiche
(
)
;
/
/
affiche
salut
$
obj2-
>
affiche
(
)
;
/
/
affiche
salut
$
obj1-
>
avoir
=
'
'
bonjour
'
'
;
$
obj1-
>
affiche
(
)
;
/
/
affiche
bonjour
$
obj2-
>
affiche
(
)
;
/
/
affiche
salut
modif
(
$
obj1
)
;
/
/
par
copie
!
$
obj1-
>
affiche
(
)
;
/
/
affiche
bonjour
$
obj2-
>
affiche
(
)
;
/
/
affiche
salut
de
même
si
on
créer
un
fonction
qui
devoir
modifier
un
objet
,
comme
il
être
passer
par
défaut
en
copie
,
on
ne
modifier
en
fait
que
le
copie
local
de
le
objet
.
dans
ce
cas
on
le
passer
par
référence
.
function
modif
(
&
$
objet
)
{
$
objet-
>
avoir
=
'
coucou
'
;
}
$
obj2
=
&
$
obj1
;
/
/
par
référence
modif
(
$
obj1
)
;
/
/
par
référence
$
obj1-
>
affiche
(
)
;
/
/
affiche
coucou
car
on
avoir
modifier
par
référence
$
obj2-
>
affiche
(
)
;
/
/
affiche
coucou
donc
,
si
on
souhaiter
créer
un
code
objet
en
PHP
(
un
peu
)
compatible
avec
le
objet
de
PHP5
,
alors
on
devoir
effectuer
du
copie
par
référence
,
et
passer
le
objet
au
fonction
par
référence
.
le
code
modifier
ci-dessus
marche
dans
le
deux
cas
.
PHP
en
PHP
,
le
objet
être
affecter
par
référence
par
défaut
et
de
manière
implicite
.
ainsi
on
avoir
$
obj1
=
new
à
;
$
obj2
=
$
obj1
;
/
/
affectation
par
référence
$
obj1-
>
affiche
(
)
;
/
/
affiche
salut
$
obj2-
>
affiche
(
)
;
/
/
affiche
salut
$
obj1-
>
avoir
=
'
'
bonjour
'
'
;
$
obj1-
>
affiche
(
)
;
/
/
affiche
bonjour
S
.
ROHAUT
courir
programmation
PHP
pager
/
$
obj2-
>
affiche
(
)
;
/
/
affiche
bonjour
modif
(
$
obj1
)
;
/
/
par
référence
$
obj1-
>
affiche
(
)
;
/
/
affiche
coucou
$
obj2-
>
affiche
(
)
;
/
/
affiche
coucou
ce
qui
simplifier
énormément
le
tâche
du
développeur
.
cependant
,
on
pouvoir
explicitement
demander
le
copie
de
un
objet
à
le
aide
de
un
méthode
spécial
«
__clone
»
et
de
le
instruction
«
clone
»
.
le
clonage
consister
à
recopier
tout
le
attribut
de
un
classe
dans
un
autre
.
le
clonage
pouvoir
être
implicite
(
copie
direct
par
un
mécanisme
interne
de
PHP
)
ou
explicite
(
via
le
méthode
__clone
)
.
$
obj3
=
clone
$
obj1
;
/
/
on
copier
implicitement
$
obj1
dans
$
obj3
$
obj1-
>
avoir
=
'
bonjour
'
;
$
obj3-
>
avoir
=
'
au
revoir
'
;
$
obj1-
>
affiche
(
)
;
/
/
affiche
bonjour
$
obj3-
>
affiche
(
)
;
/
/
affiche
au
revoir
ce
méthode
fonctionner
bien
tant
que
on
ne
utiliser
pas
du
information
complexe
comme
du
ressource
ou
du
descripteur
de
fichier
.
par
exemple
si
dans
$
obj1
on
avoir
ouvrir
un
connexion
sur
un
base
de
donnée
,
on
avoir
copier
un
ressource
base
de
donnée
,
mais
elle
être
inutilisable
,
car
pas
ouvert
.
il
falloir
le
rouvrir
avec
«
__clone
»
:
class
base
{
private
$
db
;
function
__construct
(
)
{
$
this-
>
db
=
mysql_connect
(
'
localhost
'
)
;
}
function
__clone
(
)
{
$
this-
>
db
=
mysql_connect
(
'
localhost
'
)
;
}
}
$
obj1
=
new
base
;
$
obj2
=
clone
$
obj1
;
/
/
copie
:
__clone
rouvre
le
connexion
pour
le
copie
noter
:
le
méthode
«
__clone
»
être
appeler
implicitement
si
le
mot-clé
«
clone
»
être
utiliser
.
on
ne
pouvoir
pas
appeler
explicitement
ce
méthode
.
comparaison
de
objet
PHP
on
pouvoir
effectuer
du
comparaison
de
objet
en
PHP4
.
deux
instance
de
objet
être
égal
si
et
seulement
si
:
•
elle
provenir
de
le
même
classe
,
•
elle
être
le
même
attribut
,
•
le
attribut
être
de
même
valeur
.
on
pouvoir
employer
indifféremment
le
comparaison
avec
«
=
=
»
ou
«
=
=
=
»
.
function
bool2str
(
$
bool
)
{
if
(
$
bool
=
=
=
false
)
{
return
'
FALSE
'
;
}
else
{
S
.
ROHAUT
courir
programmation
PHP
pager
/
return
'
TRUE
'
;
}
}
function
compareObjects
(
&
$
o1
,
&
$
o2
)
{
echo
'
o1
=
=
o2
:
'
.bool2str
(
$
o@card@
=
=
$
o2
)
.
`
`
\n
'
'
;
echo
'
o1
!
=
o2
:
'
.bool2str
(
$
o1
!
=
$
o2
)
.
`
`
\n
'
'
;
echo
'
o1
=
=
=
o2
:
'
.bool2str
(
$
o@card@
=
=
=
$
o2
)
.
`
`
\n
'
'
;
echo
'
o1
!
=
=
o2
:
'
.bool2str
(
$
o1
!
=
=
$
o2
)
.
`
`
\n
'
'
;
}
class
flag
{
var
$
flag
;
function
flag
(
$
flag
=
true
)
{
$
this-
>
flag
=
$
flag
;
}
}
class
SwitchableFlag
extends
flag
{
function
turnOn
(
)
{
$
this-
>
flag
=
true
;
}
function
turnOff
(
)
{
$
this-
>
flag
=
false
;
}
}
$
o
=
new
flag
(
)
;
$
p
=
new
flag
(
false
)
;
$
q
=
new
flag
(
)
;
$
r
=
new
SwitchableFlag
(
)
;
echo
`
`
comparer
du
instance
créer
avec
le
même
paramètres\n
'
'
;
compareObjects
(
$
o
,
$
q
)
;
echo
`
`
\nCompare
du
instance
créer
avec
différent
paramètres\n
'
'
;
compareObjects
(
$
o
,
$
p
)
;
echo
`
`
\nCompare
un
instance
de
un
parent
avec
celui
de
un
sous-classe\n
'
'
;
compareObjects
(
$
o
,
$
r
)
;
ce
exemple
aller
afficher
:
comparer
du
instance
créer
avec
le
même
paramètre
o@card@
=
=
o2
:
TRUE
o1
!
=
o@card@
:
FALSE
o@card@
=
=
=
o2
:
TRUE
o1
!
=
=
o2
:
FALSE
comparer
du
instance
créer
avec
différent
paramètre
o@card@
=
=
o2
:
FALSE
o1
!
=
o@card@
:
TRUE
o@card@
=
=
=
o2
:
FALSE
o1
!
=
=
o2
:
TRUE
comparer
un
instance
de
un
parent
avec
celui
de
un
sous-classe
o@card@
=
=
o2
:
FALSE
o1
!
=
o@card@
:
TRUE
o@card@
=
=
=
o2
:
FALSE
o1
!
=
=
o2
:
TRUE
S
.
ROHAUT
courir
programmation
PHP
pager
/
PHP
PHP
faire
un
différence
entre
le
comparaison
simple
«
=
=
»
et
complet
«
=
=
=
»
.
avec
«
=
=
»
,
PHP
retourner
vrai
si
le
deux
objet
avoir
le
même
attribut
et
valeur
,
et
se
il
être
du
instance
de
le
même
classe
,
comme
pour
PHP
.
avec
«
=
=
=
»
,
PHP
retourner
vrai
si
le
deux
objet
faire
référence
au
même
objet
de
le
même
classe
.
$
o@card@
=
new
à
;
$
o@card@
=
$
o1
;
/
/
référence
$
o@card@
=
new
à
;
if
(
$
o@card@
=
=
$
o2
)
echo
`
`
o@card@
=
=
o@card@
<
br
/
>
'
'
;
else
echo
`
`
o1
!
=
=
o@card@
<
br
/
>
'
'
;
if
(
$
o@card@
=
=
=
$
o2
)
echo
`
`
o@card@
=
=
=
o@card@
<
br
/
>
'
'
;
else
echo
`
`
o1
!
=
=
=
o@card@
<
br
/
>
'
'
;
if
(
$
o@card@
=
=
$
o3
)
echo
`
`
o@card@
=
=
o@card@
<
br
/
>
'
'
;
else
echo
`
`
o1
!
=
=
o@card@
<
br
/
>
'
'
;
if
(
$
o@card@
=
=
=
$
o3
)
echo
`
`
o@card@
=
=
=
o@card@
<
br
/
>
'
'
;
else
echo
`
`
o1
!
=
=
=
o@card@
<
br
/
>
'
'
;
aller
afficher
o1
=
=
o2
/
/
o1
et
o2
être
identique
(
même
classe
,
même
attribut
et
props
.
)
o1
=
=
=
o2
/
/
o1
et
o2
être
du
référence
du
même
objet
o@card@
=
=
o3
/
/
o1
et
o3
être
identique
(
même
classe
,
même
attribut
et
props
.
)
o1
!
=
=
=
o3
/
/
o1
et
o3
ne
être
pas
du
référence
sur
le
même
objet
)
S
.
ROHAUT
courir
programmation
PHP
pager
/
nouveauté
en
PHP
le
objet
le
fonction
__autoload
le
fonction
«
__autoload
»
indiquer
à
PHP
comment
réagir
quand
on
tenter
de
créer
un
objet
depuis
un
classe
qui
n
'
avoir
pas
être
définir
.
ce
être
un
facilité
offert
qui
ne
se
substituer
pas
forcément
au
require
et
include
.
elle
pouvoir
être
utile
par
exemple
pour
éviter
de
inclure
le
ensemble
du
classe
utiliser
dans
un
projet
.
on
préférer
inclure
le
définition
de
le
classe
au
moment
de
le
création
de
son
instance
.
le
fonction
«
__autoload
»
ne
prendre
que
un
paramètre
,
le
nom
de
le
classe
.
avoir
vous
de
la
programmer
ensuite
pour
inclure
le
code
nécessaire
.
function
__autoload
(
$
class
)
{
require_once
(
`
`
/
inc
/
{
$
class
]
}
.php
'
'
)
;
}
le
classe
abstraire
le
classe
abstrait
être
un
nouveauté
de
PHP
.
un
classe
abstrait
être
un
classe
sans
implémentation
(
qui
ne
pouvoir
être
instanciée
)
,
représenter
par
au
moins
un
fonction
abstrait
(
virtuel
pur
,
sans
code
)
,
le
implémentation
être
effectuer
dans
le
classe
dérivé
.
le
classe
abstrait
servir
essentiellement
à
définir
un
classe
de
base
normaliser
dont
le
structure
pouvoir
être
reprendre
pour
le
développement
de
autre
classe
effectif
.
tout
classe
qui
contenir
au
moins
un
méthode
abstrait
devoir
être
définir
comme
abstraire
.
si
le
classe
dériver
ne
redéfinir
pas
un
méthode
abstraire
de
le
classe
parent
(
de
base
)
,
elle
devoir
être
déclarer
abstraire
à
son
tour
et
ne
pouvoir
être
instanciée
.
le
classe
qui
implémente
le
méthode
abstrait
devoir
être
définir
avec
le
même
visibilité
ou
plus
faible
.
si
le
méthode
abstrait
être
définir
en
tant
que
protéger
,
le
fonction
le
implémentant
devoir
être
définir
en
tant
que
protéger
ou
publique
.
le
instruction
pour
définir
du
classe
et
méthode
être
«
abstract
»
.
/
/
classe
abstrait
:
elle
contenir
un
méthode
abstrait
abstract
class
AbstractClass
{
/
/
méthode
abstrait
qui
devoir
être
redéfinir
dans
le
classe
dérivé
abstract
protected
function
getValue
(
)
;
public
function
prt
(
)
{
print
$
this-
>
getValue
(
)
;
}
}
class
ConcreteClass1
extends
AbstractClass
{
/
/
redéfinition
de
le
méthode
abstraire
de
le
classe
de
base
protected
function
getValue
(
)
{
return
`
`
ConcreteClass1
'
'
;
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
ConcreteClass2
extends
AbstractClass
{
/
/
redéfinition
de
le
méthode
abstraire
de
le
classe
de
base
protected
function
getValue
(
)
{
return
`
`
ConcreteClass2
'
'
;
}
}
$
class1
=
new
ConcreteClass1
;
$
class1-
>
prt
(
)
;
/
/
affiche
ConcreteClass1
$
class2
=
new
ConcreteClass2
;
$
class2-
>
prt
(
)
;
/
/
affiche
ConcreteClass2
classe
,
méthode
et
variable
final
PHP
inclure
un
nouveau
mécanisme
de
protection
interdire
au
classe
dériver
de
réimplémenter
un
méthode
ou
un
variable
,
ou
à
un
classe
de
être
elle
même
dérivée
.
avec
le
mot-clé
«
final
»
,
on
indiquer
que
le
classe
,
le
méthode
ou
le
variable
être
définitif
et
que
elle
ne
pouvoir
plus
être
implémenter
.
voici
un
cas
de
erreur
:
class
à
{
protected
$
val
;
function
__construct
(
)
{
$
this-
>
val
=
;
}
final
function
affiche
(
)
{
print
$
this-
>
val
;
}
}
class
B
extends
à
{
function
__construct
(
)
{
parent
:
:
_construct
(
)
;
}
function
affiche
(
)
{
/
/
erreur
!
on
ne
pouvoir
pas
REDEFINIR
!
print
$
this-
>
val
;
}
}
$
o@card@
=
new
B
;
$
o@card@
>
affiche
(
)
;
dans
le
classe
B
nous
avoir
tenter
de
récrire
le
méthode
afficher
déclarer
en
«
final
»
,
et
PHP
nous
retourner
un
erreur
.
le
interface
objet
le
interface
permettre
de
créer
du
code
qui
spécifier
quel
méthode
et
attribut
un
classe
pouvoir
implémenter
sans
avoir
à
définir
comment
elle
être
gérer
.
tout
le
méthode
spécifier
dans
le
interface
devoir
être
implémenter
dans
le
classe
qui
la
définir
.
le
interface
être
donc
un
moyen
de
définir
le
pré-requis
obligatoire
à
le
construction
de
un
modèle
de
classe
en
en
donner
le
liste
du
prototype
.
on
créer
un
interface
avec
le
mot-clé
«
interface
»
.
dans
notre
exemple
,
nous
aller
définir
que
tout
le
classe
qui
implémentir
notre
interface
devoir
obligatoirement
définir
le
fonction
afficher
et
incrémenter
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
interface
Template
{
public
function
affiche
(
)
;
public
function
incremente
(
$
cpt
)
;
}
attention
:
le
déclaration
du
méthode
(
notamment
du
paramètre
)
devoir
être
rigoureusement
identique
dans
le
classe
à
celui
de
le
interface
.
on
indiquer
que
un
classe
implémentir
un
interface
avec
le
mot-clé
«
implements
»
.
class
à
implements
Template
{
protected
$
val
;
function
__construct
(
)
{
$
this-
>
val
=
;
}
function
affiche
(
)
{
print
$
this-
>
val
;
}
function
incremente
(
$
cpt
)
{
$
this-
>
val+
=
$
cpt
;
}
}
$
o@card@
=
new
à
;
$
o@card@
>
incremente
(
)
;
$
o@card@
>
affiche
(
)
;
un
classe
pouvoir
implémenter
plusieurs
interface
en
même
temps
.
dans
ce
cas
le
liste
du
interface
devoir
être
préciser
après
le
mot-clé
«
implements
»
,
et
chaque
interface
séparer
par
du
virgule
.
interface
Template
{
public
function
affiche
(
)
;
public
function
incremente
(
$
cpt
)
;
}
interface
Template2
{
public
function
decremente
(
$
cpt
)
;
}
class
à
implements
Template
,
Template2
{
protected
$
val
;
function
__construct
(
)
{
$
this-
>
val
=
;
}
function
affiche
(
)
{
print
$
this-
>
val
;
}
function
incremente
(
$
cpt
)
{
$
this-
>
val+
=
$
cpt
;
}
function
decremente
(
$
cpt
)
{
$
this-
>
val-
=
$
cpt
;
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
gestion
dynamique
du
méthode
et
attribut
on
ne
pouvoir
toujours
pas
surcharger
directement
son
méthode
,
attribut
et
opérateur
en
PHP
comme
en
C++
.
cependant
de
nouveau
fonction
permettre
de
intercepter
du
appel
à
du
méthode
ou
attribut
non
prévoir
.
note
:
ce
méthode
pouvoir
uniquement
être
déclencher
lorsque
votre
objet
,
hériter
ou
non
,
ne
contenir
pas
le
attribut
ou
le
méthode
que
vous
tenter
de
accéder
.
dans
le
cas
contraire
,
le
méthode
ou
le
attribut
être
utiliser
.
pour
un
méthode
,
on
utiliser
le
méthode
«
__call
»
qui
prendre
deux
paramètre
.
le
premier
être
le
nom
de
le
méthode
,
le
second
être
un
tableau
du
paramètre
passer
à
le
méthode
.
imaginer
que
nous
souhaiter
appeler
le
méthode
«
test
»
de
notre
objet
,
mais
que
nous
ne
avoir
pas
prévoir
ce
cas
.
il
suffire
de
gérer
ce
cas
dans
le
méthode
«
__call
»
:
class
à
{
function
__call
(
$
m
,
$
avoir
)
{
/
/
gérer
le
appel
au
méthode
non
défini
if
(
$
m
=
=
'
'
test
'
'
)
{
echo
`
`
fonction
test
appeler
avec
le
valeur
$
avoir
'
'
;
return
$
avoir
;
}
}
}
$
o@card@
=
new
à
(
)
;
$
avoir
=
$
o@card@
>
test
(
,
`
`
'
'
,
,
true
)
;
/
/
test
ne
exister
pas
et
pourtant
...
print_r
(
$
avoir
)
;
/
/
cela
marche
et
cela
retourner
le
paramètre
de
test
.
pour
un
attribut
,
on
utiliser
le
méthode
«
__get
»
et
«
__set
»
.
le
méthode
«
__get
»
être
appeler
implicitement
lorsque
vous
tenter
de
accéder
à
le
valeur
de
un
variable
qui
ne
être
pas
définir
dans
votre
classe
.
elle
prendre
comme
unique
paramètre
le
nom
de
le
attribut
auquel
vous
tenter
de
accéder
.
le
méthode
«
__set
»
être
appeler
lorsque
vous
tenter
de
affecter
un
valeur
à
un
attribut
qui
ne
être
pas
définir
,
et
prendre
deux
paramètre
:
le
nom
de
le
variable
et
le
valeur
affecter
.
class
à
{
private
$
tab
=
array
(
)
;
function
__get
(
$
v
)
{
if
(
!
isset
(
$
this-
>
tab
[
$
v
]
)
)
return
false
;
else
return
$
this-
>
tab
[
$
v
]
;
}
function
__set
(
$
v
,
$
c
)
{
$
this-
>
tab
[
$
v
]
=
$
c
;
}
}
$
o@card@
=
new
à
(
)
;
$
o@card@
>
var
=
;
/
/
le
membre
var
ne
exister
pas
et
pourtant
...
echo
$
o@card@
>
var
;
/
/
cela
marche
et
cela
affiche
!
le
itération
de
objet
PHP
indexer
le
attribut
de
son
objet
.
il
être
possible
de
accéder
à
le
liste
du
attribut
(
si
le
visibilité
le
permettre
)
à
le
aide
du
simple
boucle
itératif
comme
«
foreach
»
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
class
à
{
public
$
v1
=
'
'
salut
'
'
;
public
$
v@card@
=
'
'
la|le
'
'
;
public
$
v@card@
=
'
'
ami
!
`
`
;
private
$
v@card@
=
'
'
priver
'
'
;
}
$
o@card@
=
new
à
(
)
;
foreach
(
$
o1
avoir
$
cle
=
>
$
valeur
)
{
echo
`
`
$
cle
=
$
valeur
<
br
/
>
\n
'
'
;
}
ce
code
afficher
v1
=
salut
v@card@
=
le
v3
=
ami
!
et
le
attribut
qui
ne
être
pas
visible
ne
être
pas
afficher
.
il
exister
du
interface
prédéfini
permettre
de
créer
son
propre
classe
de
itération
.
le
classe
«
Iterator
»
implémente
le
cinq
méthode
suivant
:
•
current
•
next
•
key
•
valid
•
rewind
on
pouvoir
donc
créer
un
classe
implémentir
ce
interface
pour
,
par
exemple
,
naviguer
dans
le
résultat
de
un
requête
de
base
de
donnée
,
ou
dans
un
tableau
.
type
hinting
PHP
permettre
de
contrôler
le
type
de
valeur
passer
en
paramètre
à
un
fonction
.
prendre
le
code
suivre
qui
retourner
le
infos
de
un
utilisateur
de
classe
«
utilisateur
»
:
function
detail
(
$
user
)
{
return
$
user-
>
infos
(
)
;
}
le
fonction
attendre
un
objet
particulier
de
classe
utilisateur
.
tout
fonctionner
à
merveille
si
votre
code
être
blinder
.
cependant
si
on
lui
passer
un
entier
,
cela
ne
marcher
pas
,
mais
ce
être
seulement
lors
du
«
return
$
user-
>
infos
(
)
»
que
PHP
générer
un
erreur
.
le
«
type
hinting
»
indiquer
à
PHP
ce
que
attendre
exactement
le
fonction
.
function
detail
(
utilisateur
$
user
)
{
return
$
user-
>
infos
(
)
;
}
ce
fois
PHP
retourner
un
erreur
dès
le
appel
à
le
fonction
si
elle
ne
recevoir
pas
un
objet
de
classe
utilisateur
.
S
.
ROHAUT
courir
programmation
PHP
pager
/
le
exception
try
...
catch
PHP
inclure
enfin
le
support
du
exception
avec
le
bloc
«
try
...
catch
»
.
ainsi
on
pouvoir
placer
du
code
«
à
risque
»
ou
un
code
«
exceptionnel
»
qui
pouvoir
produire
un
erreur
dans
un
bloc
«
try
»
,
et
gérer
le
erreur
,
selon
son
type
,
dans
du
bloc
«
catch
»
.
on
pouvoir
utiliser
plusieurs
bloc
«
catch
»
suivre
le
type
de
erreur
générer
.
attention
,
quand
ce
être
possible
on
gérer
le
erreur
avec
du
code
normal
.
try
{
...
/
/
code
à
risque
de
erreur
}
catch
(
exception
$
e
)
{
...
/
/
code
régler
le
situation
exceptionnel
}
au
sein
du
bloc
«
try
»
,
le
exécution
de
un
instruction
erroné
aller
déclencher
le
émission
de
un
signal
:
un
exception
.
ce
signal
interrompre
le
exécution
du
reste
de
tout
le
bloc
.
en
fonction
du
signal
,
PHP
exécuter
le
bloc
«
catch
»
approprié
.
on
remarquer
que
dans
le
bloc
«
catch
»
,
PHP
gérer
le
exception
à
le
aide
de
un
classe
spécial
appeler
«
exception
»
.
un
exception
être
en
faire
définir
par
un
objet
de
ce
classe
ou
de
un
classe
dérivé
.
on
pouvoir
donc
créer
son
propre
gestionnaire
de
exception
.
comme
on
pouvoir
écrire
plusieurs
bloc
«
catch
»
pour
gérer
le
exception
suivre
le
type
de
objet
.
déclenchement
avec
throw
on
pouvoir
déclencher
manuellement
un
exception
à
le
aide
de
le
instruction
«
throw
»
.
voici
un
code
qui
provoquer
toujours
un
exception
:
try
{
$
erreur
=
'
'
message
de
erreur
'
'
;
throw
new
exception
(
$
erreur
)
;
echo
'
jamais
exécuter
'
;
}
catch
(
exception
$
e
)
{
echo
'
exception
:
'
.
$
e-
>
getMessage
(
)
.
'
à
le
ligne
'
.
$
e-
>
getLine
(
)
.
`
`
\n
'
'
;
}
à
le
aide
de
le
instruction
«
throw
»
nous
avoir
provoquer
le
émission
de
un
exception
qui
être
gérer
par
le
classe
«
exception
»
.
dans
ce
cas
,
PHP
aller
rechercher
le
bloc
«
catch
»
correspondre
au
type
de
objet
créer
pour
gérer
le
exception
,
ici
«
catch
(
exception
$
e
)
»
.
classe
exception
et
classe
personnaliser
le
classe
«
exception
»
être
imposer
par
PHP
comme
classe
de
base
et
parent
de
tout
classe
utilisable
avec
«
catch
»
.
le
classe
de
base
dispos
du
méthode
suivant
:
•
__construct
(
$
erreur
,
$
code
)
:
le
constructeur
avec
le
message
de
erreur
et
le
code
•
getMessage
(
)
:
retourner
le
message
de
erreur
générer
S
.
ROHAUT
courir
programmation
PHP
pager
/
•
getCode
(
)
:
coder
erreur
de
le
exception
•
getLine
(
)
:
numéro
de
le
ligne
du
script
avoir
provoquer
le
exception
•
getFile
(
)
:
nom
du
script
PHP
avoir
provoquer
le
exception
•
getTrace
(
)
et
getTraceAstring
(
)
:
gestion
de
le
pile
de
appel
,
un
peu
comme
java
.
•
__toString
(
)
:
chaîne
formater
à
afficher
.
le
méthode
«
getXXXX
(
)
»
être
final
.
on
ne
pouvoir
donc
pas
la|le
étendre
.
mais
le
constructeur
et
le
méthode
«
__toString
»
pouvoir
être
étendre
.
on
pouvoir
donc
créer
son
propre
classe
dériver
.
class
MonException
extends
exception
{
public
function
__construct
(
$
message
=
'
'
erreur
par
défaut
'
'
,
$
code
=
)
{
parent
:
:
__construct
(
$
message
,
$
code
)
;
}
}
$
avoir
=
;
try
{
switch
(
$
avoir
)
{
caser
:
throw
new
MonException
(
`
`
ouille
!
`
`
,
$
avoir
)
;
break
;
case
:
throw
new
exception
(
`
`
avoir
!
`
`
,
$
avoir
)
;
break
;
}
}
catch
(
MonException
$
e
)
{
echo
$
e-
>
getMessage
(
)
;
}
catch
(
exception
$
e
)
{
echo
'
exception
:
'
.
$
e-
>
getMessage
(
)
.
'
ligne
'
.
$
e-
>
getLine
(
)
.
`
`
\n
'
'
;
}
si
$
avoir
valoir
,
«
MonException
»
être
envoyer
,
si
$
avoir
valoir
,
ce
être
«
exception
»
.
PHP
:
erreur
ou
exception
?
il
se
pouvoir
que
dans
certain
cas
,
PHP
déclencher
naturellement
un
exception
suivre
le
exécution
de
un
fonction
.
dans
ce
cas
,
ce
être
indiquer
dans
le
documentation
PHP
(
voir
site
PHP
)
en
ligne
.
mais
dans
le
plupart
du
cas
,
ce
être
le
ancien
système
de
gestion
du
erreur
qui
être
utiliser
.
ainsi
le
code
suivant
try
{
$
avoir
=
fopen
(
'
toto
'
,
'
r
'
)
;
}
catch
(
exception
$
e
)
{
echo
'
exception
:
'
.
$
e-
>
getMessage
(
)
;
}
ne
donner
pas
du
tout
le
résultat
escompter
.
le
exécution
de
«
fopen
»
ne
provoquer
pas
le
émission
de
un
exception
mais
un
erreur
PHP
de
type
warning
:
warning
:
fopen
(
toto
)
[
dns-remplacer
]
:
failed
to
open
stream
:
No
such
file
or
S
.
ROHAUT
courir
programmation
PHP
pager
/
directory
in
C
:
\apachefriends\xampp\htdocs\objet\
dns-remplacer
on
line
PHP
gérer
plusieurs
niveau
de
erreur
:
warning
,
notice
,
etc
.
par
exemple
,
un
problème
de
ouverture
de
fichier
émettre
un
erreur
de
type
warning
,
un
erreur
de
syntaxe
parse
,
le
utilisation
de
un
variable
non
déclarer
un
notice
.
on
pouvoir
régler
et
modifier
le
niveau
de
erreur
dans
le
dns-remplacé
,
mais
aussi
dynamiquement
via
du
fonction
.
parmi
ce
fonction
,
deux
pouvoir
nous
intéresser
.
«
set_error_handler
»
permettre
de
modifier
le
comportement
par
défaut
de
PHP
lorsque
il
rencontrer
un
erreur
dans
votre
script
.
au
lieu
de
exécuter
son
propre
gestionnaire
,
il
exécuter
le
votre
.
attention
,
ce
gestionnaire
ne
pouvoir
pas
gérer
certain
type
de
erreur
(
syntaxe
,
etc
,
voir
http
:
/
/
dns-remplacer
/
manual
/
en
/
dns-remplacer
-
dns-remplacer
)
,
mais
dans
le
cas
de
un
simple
warning
ou
notice
il
n
'
y
avoir
pas
de
problème
.
on
lui
passer
en
paramètre
le
nom
de
son
propre
fonction
qui
devoir
gérer
le
erreur
.
le
paramètre
être
assez
parlant
.
dans
notre
fonction
,
nous
aller
déclencher
un
exception
à
le
réception
de
ne
importer
quel
erreur
.
function
gest_erreur
(
$
errno
,
$
errstr
,
$
errfile
,
$
errline
)
{
throw
new
exception
(
`
`
$
errstr
line
$
errline
'
'
,
$
errno
)
;
}
set_error_handler
(
`
`
gest_erreur
'
'
)
;
à
le
exécution
de
notre
bloc
«
try
...
catch
»
,
nous
avoir
ce
fois
exception
:
fopen
(
toto
)
[
dns-remplacer
]
:
failed
to
open
stream
:
No
such
file
or
directory
line
ce
que
nous
vouloir
:
nous
avoir
bien
déclencher
un
exception
.
exception
par
défaut
si
certain
instruction
PHP
générer
du
exception
et
que
ce
instruction
ne
être
pas
au
sein
de
un
bloc
«
try
...
catch
»
,
PHP
générer
un
exception
par
défaut
avec
son
propre
gestionnaire
de
exception
.
on
pouvoir
modifier
ce
état
avec
le
fonction
«
set_exception_handler
»
.
function
exception_handler
(
$
exception
)
{
echo
`
`
exception
imprévu
:
`
`
,
$
exception-
>
getMessage
(
)
,
`
`
\n
'
'
;
}
set_exception_handler
(
'
exception_handler
'
)
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
sauvegarder
son
objet
cas
de
un
session
le
information
indiqué
ici
fonctionner
aussi
bien
en
PHP
que
en
PHP
.
il
falloir
distinguer
le
cas
du
session
où
il
falloir
passer
un
objet
de
un
page
à
le
autre
et
le
cas
de
un
sauvegarde
de
un
objet
sur
disque
.
dans
le
premier
cas
,
si
le
session
être
utiliser
le
objet
pouvoir
être
passer
directement
de
un
page
à
un
autre
en
respecter
quelque
règle
:
•
le
session
devoir
être
ouvrir
sur
chaque
page
par
le
fonction
«
session_start
(
)
»
avant
le
utilisation
de
le
objet
•
le
classe
devoir
être
définir
avant
le
ouverture
de
session
par
session_start
(
)
et
le
appel
à
le
objet
,
ce
qui
impliquer
soit
de
répéter
ce
déclaration
dans
chaque
page
,
soit
de
le
placer
dans
un
fichier
à
inclure
avec
«
require
(
)
»
ou
«
require_once
(
)
»
en
début
de
script
.
•
le
objet
devoir
être
un
variable
de
session
stocker
soit
par
le
fonction
«
session_register
(
)
»
,
soit
à
le
aide
du
tableau
global
«
$
_SESSION
[
]
»
.
voici
un
exemple
:
dns-remplacer
:
<
?
class
panier
{
/
/
Eléments
de
notre
panier
var
$
contenir
;
/
/
ajout
de
$
qte
article
de
type
$
code
au
panier
function
ajout_article
(
$
code
,
$
qte
)
{
if
(
isset
(
$
this-
>
contenir
[
$
code
]
)
)
$
this-
>
contenir
[
$
code
]
+
=
$
qte
;
else
$
this-
>
contenir
[
$
code
]
=
$
qte
;
}
/
/
suppression
de
$
num
article
du
type
$
artnr
du
panier
function
suppr_article
(
$
code
,
$
qte
)
{
if
(
$
this-
>
contenir
[
$
code
]
>
$
qte
)
{
$
this-
>
contenir
[
$
code
]
-
=
$
qte
;
return
TRUE
;
}
else
{
return
FALSE
;
}
}
function
liste_article
(
)
{
foreach
(
$
this-
>
contenir
avoir
$
ref
=
>
$
qte
)
echo
`
`
$
ref
=
$
qte
<
br
/
>
'
'
;
}
}
class
Panier_nomme
extends
panier
{
var
$
proprietaire
;
function
nom_proprietaire
(
$
nom
)
{
$
this-
>
proprietaire
=
$
nom
;
}
}
S
.
ROHAUT
courir
programmation
PHP
pager
/
?
>
dns-remplacé
:
<
?
php
require_once
(
`
`
dns-remplacer
'
'
)
;
session_start
(
)
;
?
>
<
html
>
<
head
>
<
title
>
page
<
/
title
>
<
/
head
>
<
body
>
<
?
$
_SESSION
[
'
objet
'
]
=
new
Panier_nomme
;
$
_SESSION
[
'
objet
'
]
-
>
nom_proprietaire
(
`
`
seb
'
'
)
;
$
_SESSION
[
'
objet
'
]
-
>
ajout_article
(
`
`
ref01
'
'
,
)
;
$
_SESSION
[
'
objet
'
]
-
>
suppr_article
(
`
`
ref01
'
'
,
)
;
$
_SESSION
[
'
objet
'
]
-
>
ajout_article
(
`
`
ref02
'
'
,
)
;
echo
`
`
{
$
_SESSION
[
'
objet
'
]
-
>
proprietaire
}
<
br
/
>
'
'
;
?
>
<
avoir
href
=
'
'
dns-remplacer
'
'
>
page
<
/
avoir
>
<
/
body
>
<
/
html
>
dns-remplacé
:
<
?
php
require_once
(
`
`
dns-remplacer
'
'
)
;
session_start
(
)
;
?
>
<
html
>
<
head
>
<
title
>
page
<
/
title
>
<
/
head
>
<
body
>
<
?
echo
$
_SESSION
[
'
objet
'
]
-
>
proprietaire
.
`
`
<
br
/
>
'
'
;
$
_SESSION
[
'
objet
'
]
-
>
liste_article
(
)
;
?
>
<
/
body
>
<
/
html
>
autre
cas
rien
ne
empêcher
de
conserver
un
objet
pour
le
récupérer
plus
tard
,
même
après
avoir
fermer
un
session
.
pour
cela
on
pouvoir
le
stocker
dans
un
fichier
ou
en
base
de
donnée
.
pour
récupérer
un
format
correct
de
donnée
pour
stockage
,
il
falloir
utiliser
le
fonction
«
serialize
(
)
»
et
«
unserialize
(
)
»
.
le
premier
fonction
retourner
un
chaîne
de
texte
représenter
le
variable
(
pas
forcément
un
objet
)
passer
en
paramètre
.
ce
format
de
donnée
pouvoir
ainsi
être
stocker
dans
le
manière
qui
vous
convenir|convier
.
le
second
fonction
prendre
comme
paramètre
le
chaîne
de
texte
issu
de
serialize
et
retourner
le
variable
du
type
originel
,
dans
notre
cas
un
objet
.
dns-remplacer
:
<
?
php
class
à
{
var
$
one
=
;
function
show_one
(
)
{
echo
$
this-
>
one
;
S
.
ROHAUT
courir
programmation
PHP
pager
/
}
}
?
>
dns-remplacé
:
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
$
avoir
=
new
à
;
$
s
=
serialize
(
$
avoir
)
;
/
/
enregistrer
$
s
où
le
dns-remplacé
pouvoir
le
trouver
.
$
fp
=
fopen
(
`
`
store
'
'
,
`
`
w
'
'
)
;
fputs
(
$
fp
,
$
s
)
;
fclose
(
$
fp
)
;
?
>
dns-remplacé
:
<
?
php
/
/
ceci
être
nécessaire
pour
que
unserialize
(
)
fonctionner
correctement
include
(
`
`
dns-remplacer
'
'
)
;
$
s
=
implode
(
`
`
'
'
,
@
file
(
`
`
store
'
'
)
)
;
unserialize
(
$
s
)
;
/
/
maintenant
,
utiliser
le
méthode
show_one
de
le
objet
$
avoir
.
$
a-
>
show_one
(
)
;
?
>
S
.
ROHAUT
courir
programmation
PHP
pager
/
document
Outline
1Introduction
1.1Définition
1.2Historique
1.3Utilisation
pratique
1.4Pages
statique
vs
page
dynamique
1.5Scripts
CGI
1.6Pages
dynamique
et
PHP
1.7Pourquoi
préférer
PHP
à
de
autre
langage
comme
ASP
?
1.8Ce
que
vous
devoir
déjà
connaître
1.9Le
nécessaire
serveur
1.10Le
nécessaire
client
1.11Le
respect
du
standard
2Bases
:
présentation
2.0.1Syntaxe
de
base
2.1Intégration
à
HTML
2.2Séparateur
de
instruction
2.3Bloc
de
instruction
2.4Commentaires
3Travailler
avec
du
variable
3.1Déclarer
un
variable
3.2Portée
du
variable
3.3Variables
prédéfinie
3.4Variables
dynamique
3.5Types
de
variable
3.5.1booléen
3.5.2Entiers
3.5.3Virgule
flottant
3.5.4Chaînes
de
caractère
3.5.5Les
tableau
3.5.6La
variable
objet
3.6Les
constant
3.7Obtenir
le
type
de
un
variable
3.8Définir
et
supprimer
un
variable
4Les
opérateur
4.1La
précédence
du
opérateur
4.2Opérateurs
arithmétique
4.3Opérateurs
de
assignation
4.4Opérateurs
sur
le
bit
4.5Opérateurs
de
comparaison
4.6Opérateur
de
erreur
4.7Opérateur
de
exécution
4.8Opérateurs
de
incrémentation
/
décrémentation
4.9Opérateurs
logique
4.10Opérateurs
de
chaîne
4.11Opérateur
de
tableau
5La
notion
de
expression
6Les
structure
de
contrôle
6.1if
6.2while
6.2.1while
classique
6.2.2do
...
while
6.3for
6.4foreach
6.5break
et
continuer
6.6switch
6.7return
6.8require
et
include
(
_once
)
7Les
fonction
7.1Syntaxe
et
porté
7.2Arguments
7.3Valeur
de
retour
7.4Fonctions
interne
8Gestion
du
formulaire
en
PHP
8.1GET
et
POST
8.2Récupération
par
tableau
8.3Récupération
direct
8.4Utiliser
du
tableau
9Date
et
heure
9.1Localisation
9.2Récupérer
le
date
et
le
heure
9.2.1date
(
)
9.2.2date
local
strftime
(
)
9.2.3Retour
par
tableau
getdate
(
)
9.2.4L'heure
localtime
(
)
9.3Récupérer
ne
importer
quel
dater
10MySQL
10.1Présentation
10.2Outils
10.2.1PhpMyAdmin
10.2.2MysqlCC
10.3Créer
un
base
10.4Utilisateurs
et
droit
10.5Créer
et
modifier
du
table
10.5.1Types
numérique
ip-remplacée
>
type
entier
ip-remplacée
>
type
réel
(
flottant
)
ip-remplacée
>
type
booléen
10.5.2Types
caractère
ip-remplacée
>
type
char
ip-remplacée
>
type
TEXT
ip-remplacée
>
typer
ENUM
ip-remplacée
>
typer
set
10.5.3Types
dater
ip-remplacer
>
format
supporter
ip-remplacée
>
type
DATETIME
ip-remplacée
>
type
dater
ip-remplacée
>
type
TIMESTAMP
ip-remplacée
>
type
TIME
ip-remplacée
>
type
YEAR
10.5.4Création
:
syntaxe
SQL
10.5.5Types
de
table
(
MyISAM
et
InnoDB
)
10.5.6Index
FULLTEXT
ip-remplacée
>
création
ip-remplacée
>
rechercher
ip-remplacer
>
recherche
booléen
10.6MySQL
et
PHP
10.6.1Connexion
à
un
base
de
donné
ip-remplacée
>
connexion
au
serveur
ip-remplacer
>
choix
de
un
base
ip-remplacer
>
fermeture
de
un
connexion
ip-remplacer
>
séquence
complet
pour
un
base
10.6.2Les
requête
ip-remplacée
>
exécuter
un
requête
ip-remplacer
>
nombre
de
ligne
affecter
ip-remplacée
>
nombre
de
ligne
retourner
ip-remplacée
>
récupérer
le
résultat
ip-remplacer
>
insertion
avec
auto-incrément
10.6.3Récupération
du
erreur
11Le
système
de
fichier
11.1Travail
sur
le
fichier
11.1.1Ouverture
11.1.2Lecture
ip-remplacée
>
fgets
(
)
ip-remplacée
>
fread
(
)
;
ip-remplacée
>
fscanf
(
)
ip-remplacée
>
fgetc
(
)
ip-remplacée
>
fgetss
(
)
ip-remplacée
>
fgetcsv
(
)
ip-remplacée
>
renvoyer
un
fichier
par
le
sortie
standard
11.1.3Ecriture
11.1.4Déplacement
ip-remplacée
>
fseek
(
)
ip-remplacée
>
ftell
(
)
ip-remplacée
>
rewind
(
)
11.1.5Fin
de
fichier
11.1.6Fermeture
11.2Travail
sur
le
répertoire
11.2.1Répertoire
actuel
11.2.2Se
déplacer
11.2.3Ouvrir
,
lister
,
fermer
11.2.4Récupérer
tout
le
entrée
11.3Travail
sur
le
système
de
fichier
11.3.1Informations
sur
le
fichier
11.3.2Actions
sur
le
fichier
et
répertoire
11.4Upload
de
fichier
12Travail
sur
chaîne
12.1Fonctions
pour
code
HTML
et
MySQL
12.1.1Gestion
du
caractère
verrouiller
12.1.2balises
et
caractère
spécial
HTML
12.2Fonctions
texte
général
12.2.1Découper
un
chaîne
12.2.2Rechercher
et
comparer
13Sessions
et
cookies
13.1Les
cookies
13.1.1Création
13.1.2Accès
13.1.3Suppression
13.2Identification
HTTP
13.2.1Connexion
13.2.2Déconnexion
13.3Sessions
PHP
13.3.1Principe
13.3.2Utilisation
ip-remplacée
>
ouverture
ip-remplacée
>
variable
de
session
13.3.3Expiration
de
le
session
13.3.4Changer
le
accès
par
défaut
14Image
14.1Pré-requis
important
14.2Créer
un
image
14.2.1Types
possible
14.2.2Création
ip-remplacée
>
nouveau
image
dynamique
ip-remplacée
>
récupération
de
un
image
existant
14.2.3Publication
14.2.4Chargement
via
un
autre
page
14.3Travailler
sur
le
image
14.3.1Récupérer
du
information
14.3.2Les
couleur
14.3.3Dessin
ip-remplacée
>
remplissage
ip-remplacée
>
point
ip-remplacée
>
ligner
ip-remplacée
>
rectangle
ip-remplacée
>
cercle
,
ellipse
ip-remplacée
>
polygone
ip-remplacée
>
texte
simple
15La
programmation
objet
15.1Structure
15.2Création
de
un
objet
15.3Accès
au
membre
15.3.1PHP
et
15.3.2PHP
15.4L'opérateur
:
:
15.5Les
variable
,
protection
15.5.1PHP
4.x
15.5.2PHP
5.x
ip-remplacée
>
protection
du
variable
et
fonction
ip-remplacée
>
attribut
et
méthode
statique
ip-remplacée
>
constant
de
classe
15.6Héritage
et
polymorphisme
15.7Les
mots-clés
parent
et
self
15.8Constructeurs
15.8.1PHP
et
15.8.2PHP
15.9Constructeurs
et
classe
dériver
15.9.1PHP
et
15.9.2PHP
15.10Destructeur
15.10.1PHP
15.10.2PHP
15.11Affectation
de
objet
15.11.1Code
commun
15.11.2PHP
15.11.3PHP
15.12Comparaison
de
objet
15.12.1PHP
15.12.2PHP
16Nouveautés
en
PHP
16.1Les
objet
16.1.1La
fonction
__autoload
16.1.2Les
classe
abstraire
16.1.3Classes
,
méthode
et
variable
finale
16.1.4Les
interface
objet
16.1.5Gestion
dynamique
du
méthode
et
attribut
16.1.6Les
itération
de
objet
16.1.7Type
hinting
16.2Les
excepter
16.2.1try
...
catch
16.2.2Déclenchement
avec
throw
16.2.3clas
exception
et
classe
personnaliser
16.2.4PHP
:
erreur
ou
exception
?
16.2.5Exception
par
défaut
17Sauvegarder
son
objet
17.1Cas
de
un
session
17.2Autres
cas
