programmer
en
PHP
Julien
Gaulmin
dns-remplacé
@
dns-remplacer
version
copyright
c
Julien
Gaulmin
dns-remplacé
@
dns-remplacer
,
alcôve
ce
document
pouvoir
être
reproduire
,
distribuer
et
/
ou
modifier
selon
le
terme
de
le
licence
GNU
de
documentation
libre
(
GNU
Free
documentation
licence
)
dans
son
version
ou
ultérieur
tel
que
publier
,
en
anglais
,
par
le
Free
software
Foundation
;
sans
partie
invariant
,
avec
comme
premier
de
couverture
(
front
cover
texts
)
le
deux
premier
page
,
et
sans
partie
considérer
comme
quatrième
de
couverture
(
back
cover
texts
)
un
copie
de
le
licence
être
fournir
en
annexe
et
pouvoir
être
consulter
à
l
’
url
:
http
:
/
/
dns-remplacer
/
copyleft
/
dns-remplacer
alcôve
centre
Paris
Pleyel
bd
Anatole
France
Saint-Denis
,
France
Tél
.
:
Fax
:
E-mail
:
alcove
@
dns-remplacer
,
toile
:
dns-remplacer
table
du
matière
chapitrer
introduction
au
langage
le
programmation
web
présentation
de
PHP
installation
et
configuration
de
PHP
chapitrer
le
base
du
langage
syntaxe
du
langage
le
structure
de
contrôle
fonction
programmation
orienter
objet
chapitrer
fonctionnalité
essentiel
connexion
et
utilisateur
gestion
du
session
autre
fonctionnalité
chapitrer
utilisation
avancer
interopérabilité
avec
du
applicatifs
traitement
du
chaîne
de
caractère
fonctionnalité
utile
conclusion
chapitre
alcôve
-
programmer
en
PHP
introduction
au
langage
introduction
au
langage
alcôve
-
programmer
en
PHP
objectif
du
chapitre
principe
de
le
programmation
web
;
présentation
de
PHP
;
installation
et
configuration
.
section
alcôve
-
programmer
en
PHP
le
programmation
web
le
programmation
web
alcôve
-
programmer
en
PHP
objectif
de
le
section
rappel
d
’
HTML
;
le
web
interactif
;
notion
de
CGI
;
distinction
PHP
/
CGI
.
le
programmation
web
alcôve
-
programmer
en
PHP
rappel
d
’
HTML
heure
yper
T
ext
M
arkup
L
anguage
;
définir
le
structure
logique
d
’
un
document
web
;
composer
d
’
un
ensemble
de
commande
de
formatage
;
baser
sur
le
notion
d
’
environnement
posséder
un
début
et
un
fin
-
>
délimiteur
:
tags
ou
marqueur
.
le
programmation
web
alcôve
-
programmer
en
PHP
le
marqueur
être
définir
entre
<
>
;
ex
:
<
marqueur
>
...
<
/
marqueur
>
le
plupart
du
environnement
pouvoir
être
imbriquer
selon
du
règle
bien
définir
;
ex
:
<
H@card@
>
<
B
>
mon
titre
<
/
B
>
<
/
H1
>
il
n
’
être
pas
permettre
de
faire
chevaucher
du
environnement
.
ex
:
<
H@card@
>
<
B
>
mon
titre
<
/
H1
>
<
/
B
>
le
programmation
web
alcôve
-
programmer
en
PHP
structurer
général
d
’
un
page
HTML
:
<
HTML
>
<
HEAD
>
<
TITLE
>
mon
titre
<
/
TITLE
>
<
!
--
mon
commentaire
--
>
<
/
HEAD
>
<
body
>
<
H@card@
>
mon
chapitre
<
/
H@card@
>
<
P
>
mon
paragraphe
<
/
P
>
<
ADDRESS
>
mon
coordonnées
<
/
ADDRESS
>
<
/
body
>
<
/
HTML
>
le
programmation
web
alcôve
-
programmer
en
PHP
le
web
interactif
deux
principal
type
d
’
interaction
:
–
côté
serveur
(
Server-side
scripting
)
,
–
côté
client
(
Client-side
scripting
)
.
chacun
du
type
précédent
se
diviser
encore
en
sous-catégorie
.
le
programmation
web
alcôve
-
programmer
en
PHP
côté
client
:
–
script
embarquer
dans
le
page
HTML
(
HTML-embedded
scripting
)
-
>
Javascript
...
,
–
applet
-
>
java
,
ActiveX
...
,
–
plugins
propriétaire
.
le
programmation
web
alcôve
-
programmer
en
PHP
côté
serveur
:
–
CGI
-
>
Perl
,
C
,
Shell
...
,
–
interpréteur
intégrer
au
serveur
HTTP
script
embarquer
dans
le
page
HTML
(
HTTPD
module
,
HTML-embedded
scripting
)
-
>
PHP
,
ASP-VBScript
...
,
script
à
le
CGI
(
CGI-like
)
-
>
mod_perl
/
apache
–
Servlets
-
>
java
.
le
programmation
web
alcôve
-
programmer
en
PHP
WWW
interactif
Server-side
scripting
CGI
(
Perl
,
C
,
Shell
...
)
Client-side
scripting
Servlets
(
java
)
Applets
(
java
,
ActiveX
)
HTTPD
module
HTML-embedded
scripting
(
PHP
,
ASP-VBS
)
HTML-embedded
scripting
(
JavaScript
)
CGI-like
(
mod_perl
/
apache
)
le
programmation
web
alcôve
-
programmer
en
PHP
notion
de
CGI
C
ommon
G
ateway
I
nterface
;
interface
de
communication
pour
le
création
de
programme
capable
d
’
être
exécuter
par
un
serveur
HTTP
;
permettre
le
création
dynamique
de
page
du
côté
serveur
;
généralement
utiliser
pour
servir
le
requête
en
provenance
d
’
un
page
de
formulaire
HTML
.
le
programmation
web
alcôve
-
programmer
en
PHP
principe
de
le
CGI
:
GET
/
POST
'
'
emballage
'
'
formulaire
HTML
Browser
appel
'
'
variable
'
'
résultat
réponse
programmer
externe
HTTP
serveur
HTTP
CGI
le
programmation
web
alcôve
-
programmer
en
PHP
if
(
$
want_page
=
=
)
{
$
want_page
=
;
}
scénario
de
génération
dynamique
de
page
via
le
CGI
:
–
l
’
utilisateur
remplir
un
formulaire
HTML
et
le
valide
,
–
le
navigateur
ouvrir|ouvrer
un
connexion
vers
le
serveur
HTTP
et
lui
envoyer
le
requête
correspondant
(
nom
du
CGI
+
paramètre
)
,
–
le
serveur
HTTP
invoquer
le
script
CGI
en
lui
transmettre
le
paramètre
de
le
requête
,
–
le
script
CGI
générer
un
page
correspondre
au
paramètre
,
–
le
serveur
envoyer
le
page
au
navigateur
et
ferme
le
connexion
,
–
le
navigateur
afficher
le
page
.
le
programmation
web
alcôve
-
programmer
en
PHP
distinction
PHP
/
CGI
tout
le
deux
être
situer
côté
serveur
mais
:
PHP
:
le
code
PHP
être
contenir
dans
le
page
HTML
ex
:
<
?
php
$
username
=
`
`
toto
'
'
;
?
>
<
HTML
>
<
body
>
<
H@card@
>
bonjour
monsieur
<
?
php
print
$
username
?
>
<
/
H1
>
<
/
body
>
<
/
HTML
>
CGI
:
le
code
HTML
être
contenir
dans
le
code
du
CGI
ex
:
#
!
/
usr
/
bin
/
perl
-w
$
username
=
`
`
toto
'
'
;
print
`
`
Content-Type
:
text
/
html\n\n
'
'
;
<
HTML
>
<
body
>
<
H@card@
>
bonjour
monsieur
$
username
<
/
H@card@
>
<
/
body
>
<
/
HTML
>
'
'
;
section
alcôve
-
programmer
en
PHP
présentation
de
PHP
présentation
de
PHP
alcôve
-
programmer
en
PHP
objectif
de
le
section
;
vue
d
’
ensemble
du
PHP
;
L
’
histoire
du
langage
;
son
avantage
;
et
son
inconvénient
.
présentation
de
PHP
alcôve
-
programmer
en
PHP
vue
d
’
ensemble
du
PHP
à
server-side
,
HTML-embedded
scripting
language
langage
de
script
côté
serveur
;
embarquer
dans
le
page
HTML
;
syntaxe
hériter
du
C
et
du
Perl
;
extensible
(
nombreux
bibliothèque
)
;
supporter
pratiquement
tout
le
standard
du
web
;
logiciel
open
source
(
licence
PHP
de
type
BSD
)
.
présentation
de
PHP
alcôve
-
programmer
en
PHP
L
’
histoire
du
langage
créer
par
Rasmus
Lerdorf
en
pour
du
besoin
personnel
(
P
ersonnal
heure
ome
P
age
)
;
premier
version
publique
en
sous
le
nom
de
Personnal
home
pager
Tools
capable
de
gérer
un
livre
d
’
or
,
un
compteur
d
’
accès
...
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
Deuxième
version
plus
complet
(
PHP
/
fi
)
en
avec
gestion
du
formulaire
HTML
et
du
base
mSQL
ainsi
qu
’
un
nouveau
interpréteur
;
PHP
/
fi
être
utiliser
par
environ
site
web
en
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
en
,
le
projet
devenir
un
travail
d
’
équipe
et
l
’
interpréteur
être
réécrire
par
Zeev
Suraski
et
Andi
Gutmans
pour
donner
le
version
PHP3
;
le
version
de
PHP
s
’
être
rapidement
imposer
pour
atteindre
environ
site
web
durant
l
’
être
(
source
:
Netcraft
)
et
devenir
P
HP
:
heure
ypertext
P
reProcessor
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
Aujourd
’
hui
le
projet
être
chapeauter
par
zend
,
un
société
privé
créer
par
Suraskyi
et
Gutmans
,
qui
commercialiser
du
logiciel
complémentaire
à
PHP
;
le
dernier
version
en
date
être
le
PHP4
(
)
.
elle
posséder
un
interpréteur
optimiser
par
zend
et
s
’
ouvrir|ouvrer
à
d
’
autre
serveur
HTTP
qu
’
apache
.
présentation
de
PHP
alcôve
-
programmer
en
PHP
présentation
de
PHP
alcôve
-
programmer
en
PHP
le
avantage
de
PHP
le
client
n
’
avoir
pas
accès
au
code
source
puisque
celui
-ci
être
interpréter
avant
envoi
(
!
=
Javascript
)
;
le
client
ne
recevoir
que
le
résultat
de
l
’
exécution
du
script
;
on
pouvoir
configurer
le
serveur
HTTP
pour
masquer
complètement
le
qualité
dynamique
du
page
;
le
code
n
’
être
pas
alourdir
par
du
commande
destiner
à
générer
le
page
HTML
(
!
=
CGI
)
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
le
langage
posséder
de
nombreux
bibliothèque
/
module
pour
:
–
le
calcul
mathématique
,
–
le
création
dynamique
d
’
image
,
–
le
gestion
de
session
,
–
le
connexion
sécuriser
(
SSL
)
,
–
l
’
accès
à
le
plupart
du
SGBD
,
–
l
’
accès
au
base
LDAP
...
présentation
de
PHP
alcôve
-
programmer
en
PHP
le
inconvénient
de
PHP
pas
aussi
rapide
que
mod_perl
ou
certain
CGI
mais
plus
portable
;
pas
aussi
simple
que
ASP-VBScript
mais
plus
respectueux
du
standard
web
et
sous
licence
open
source
(
-
>
plus
facilement
extensible
)
;
pas
d
’
interactivité
au
niveau
du
client
(
-
>
on
devoir
quand
même
utiliser
du
Javascript
dans
ce
cas
là
)
.
section
alcôve
-
programmer
en
PHP
installation
et
configuration
de
PHP
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
objectif
de
le
section
installation
de
PHP
;
configuration
via
dns-remplacé
/
dns-remplacer
;
Premier
test
;
ajout
de
nouveau
module
.
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
installation
trois
type
d
’
installation
:
–
module
dynamique
du
serveur
HTTP
(
ex
:
mod_php
pour
apache
)
,
–
module
statique
du
serveur
HTTP
(
%
plus
rapide
que
mod_php
)
qui
nécessiter
de
patcher
le
serveur
HTTP
et
de
tout
recompiler
,
–
sous
forme
de
CGI
(
pour
le
serveur
HTTP
non
supporter
)
.
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
Télécharger
du
source
sur
http
:
/
/
dns-remplacer
(
mirroir
français
du
site
officiel
de
PHP
)
;
installer
le
source
dans
un
répertoire
différent
de
celui
du
serveur
HTTP
(
ex
:
/
usr
/
local
/
src
/
php
/
)
avec
le
commande
tar
-zxvf
php-
<
version
>
.
dns-remplacé
-C
/
usr
/
local
/
src
/
php
/
;
configuration
de
l
’
installation
:
–
.
/
setup
(
configuration
interactif
)
,
ou
–
.
/
configurer
<
option
>
(
.
/
configurer
--
help
pour
connaître
tout
le
option
)
.
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
compilation
et
installation
:
make
;
savoir
;
make
install
association
du
fichier
contenir
du
code
PHP
avec
l
’
interpréteur
PHP
dans
le
configuration
du
serveur
HTTP
ex
:
serveur
apache
(
dns-remplacé
ou
dns-remplacé
)
PHP3
-
>
AddType
application
/
x-httpd-php3
.php
PHP4
-
>
AddType
application
/
x-httpd-php
.php
sous
Debian
,
tout
ceci
être
simplifier
grâce
à
l
’
utilitaire
apt-get
(
remplacer
php3
par
php4
pour
PHP4
)
:
–
apt-get
install
php3
pour
le
module
dynamique
apache
,
ou
–
apt-get
install
php3-cgi
pour
le
CGI
.
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
configuration
de
PHP
(
dns-remplacer
/
dns-remplacer
)
généralement
dans
/
etc
/
php
<
version
>
/
apache
/
ou
/
usr
/
lib
/
php
<
version
>
/
;
ce
fichier
(
dns-remplacer
pour
PHP3
et
dns-remplacer
pour
PHP4
)
contrôle
le
principal
comportement
de
PHP
;
très
clair
et
facilement
configurable
;
syntaxe
:
–
clef
=
valeur
,
–
clef
=
`
`
valeur
complexe
'
'
,
–
;
commentaire
,
–
booléen
-
>
,
on
,
True
,
Yes
/
,
off
,
False
,
No
.
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
segmenter
en
partie
:
–
option
du
langage
,
–
ressource
maximal
allouer
à
PHP
,
–
gestion
du
erreur
,
–
gestion
du
donnée
HTTP
,
–
fichier
et
répertoire
,
–
extension
dynamique
(
module
)
,
–
configuration
du
module
.
pour
que
PHP
prendre
le
modification
en
compte
il
falloir
relancer
le
serveur
HTTP
(
ex
:
serveur
apache
-
>
apachectl
restart
)
.
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
Premier
test
créer
le
fichier
dns-remplacé
:
<
?
php
phpinfo
(
)
;
?
>
placer
ce
fichier
à
le
racine
du
serveur
HTTP
(
ou
dans
le
répertoire
doc_root
si
vous
avoir
activer
l
’
option
safe_mode
)
;
charger
l
’
URL
http
:
/
/
localhost
/
dns-remplacer
sur
votre
navigateur
web
;
bravo
!
vous
avoir
créer
votre
premier
page
dynamique
avec
PHP
et
en
plus
elle
vous
résumer
tout
le
fonctionnalité
PHP
qui
être
configurer
sur
votre
machine
.
installation
et
configuration
de
PHP
alcôve
-
programmer
en
PHP
installer
un
nouveau
module
PHP
placer
le
nouveau
fichier
<
nom
>
.so
dans
extension_dir
(
par
défaut
/
usr
/
lib
/
php
<
version
>
/
apache
mais
configurable
dans
dns-remplacé
/
dns-remplacer
)
ou
utiliser
apt-get
install
php
<
version
>
_
<
nom
>
sous
Debian
;
ajouter
le
ligne
extension
=
<
nom
>
.so
dans
dns-remplacé
/
dns-remplacer
;
configurer
le
aspect
relatif
au
module
dans
dns-remplacé
/
dns-remplacer
;
redémarrer
le
serveur
HTTP
.
chapitre
alcôve
-
programmer
en
PHP
le
base
du
langage
le
base
du
langage
alcôve
-
programmer
en
PHP
objectif
du
chapitre
syntaxe
du
langage
;
le
structure
de
contrôle
;
fonction
;
programmation
orienter
objet
.
section
alcôve
-
programmer
en
PHP
syntaxe
du
langage
syntaxe
du
langage
alcôve
-
programmer
en
PHP
objectif
de
le
section
syntaxe
de
base
;
le
type
de
donnée
;
le
variable
;
le
constant
;
le
opérateur
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
syntaxe
de
base
quatre
moyen
équivalent
pour
passer
du
mode
HTML
au
PHP
:
–
standard
:
<
?
php
...
mon
code
PHP
...
?
>
,
–
option
short_open_tag
:
<
?
...
mon
code
PHP
...
?
>
,
–
option
asp_tags
:
<
%
...
mon
code
PHP
...
%
>
,
–
marqueur
script
du
HTML
:
<
script
language
=
'
'
php
'
'
>
...
mon
code
PHP
...
<
/
script
>
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
base
de
le
syntaxe
hériter
du
C
et
du
Perl
:
–
séparateur
d
’
instruction
-
>
;
–
commentaire
:
...
code
/
*
...
mon
commentaire
...
*
/
code
...
,
...
code
...
/
/
...
mon
commentaire
...
,
...
code
...
#
...
mon
commentaire
...
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
type
de
donnée
PHP
supporter
le
type
de
donnée
suivant
:
–
nombre
entier
,
–
nombre
à
virgule
flottant
,
–
chaîne
de
caractère
,
–
tableau
,
–
objet
(
développer
dans
le
section
’
programmation
orienter
objet
’
)
.
tout
le
nom
de
variable
être
précéder
d
’
un
$
(
ex
:
$
toto
=
;
)
;
syntaxe
du
langage
alcôve
-
programmer
en
PHP
il
être
possible
de
spécifier
un
variable
de
type
entier
de
le
façon
suivant
:
–
$
toto
=
;
#
être
un
entier
en
base
,
–
$
toto
=
;
#
être
un
entier
négatif
,
–
$
toto
=
;
#
être
un
entier
en
base
,
–
$
toto
=
0x123
;
#
être
un
entier
en
base
.
il
être
possible
de
spécifier
un
variable
de
type
flottant
ou
double
de
le
façon
suivant
:
–
$
titi
=
;
#
être
un
nombre
à
virgule
flottant
,
–
$
titi
=
1.2e3
;
#
être
aussi
un
nombre
à
virgule
flottant
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
il
être
possible
de
spécifier
un
variable
de
type
chaîne
de
caratère
de
le
façon
suivant
:
–
$
personne
=
’
M
.
Smith
’
;
#
être
un
chaîne
de
caractère
,
–
$
personne
=
`
`
M
.
Smith
'
'
;
#
être
aussi
un
chaîne
de
caractère
.
dans
le
deuxième
cas
,
si
le
chaîne
contenir
du
nom
de
variable
,
celui
-ci
être
remplacer
par
leur
valeur
;
ex
:
$
type
=
’
M
.
’
;
$
nom
=
`
`
Smith
'
'
;
$
personne
=
`
`
$
type
$
nom
'
'
;
Equivalent
à
$
personne
=
’
M
.
Smith
’
;
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
quand
on
utiliser
le
`
`
...
'
'
on
devoir
donc
échapper
certain
caractère
avec
un
backslash
(
\
)
pour
pouvoir
la|le
afficher
comme
tel
:
–
dollar
(
$
)
:
\
$
,
–
doubler
quotes
(
`
`
)
:
\
'
'
,
–
backslash
(
\
)
:
\\
.
de
même
,
il
exister
du
caractère
spécial
qui
nécessiter
d
’
être
échapper
:
–
nouveau
ligne
:
\n
,
–
retour
à
le
ligne
:
\r
,
–
tabulation
:
\t
.
tout
autre
caractère
échappé
génèrera
un
avertissement
(
warning
)
;
syntaxe
du
langage
alcôve
-
programmer
en
PHP
Lorsqu
’
un
chaîne
de
caractère
être
évaluer
comme
un
valeur
numérique
,
le
règle
suivant
s
’
appliquer
:
–
le
chaîne
être
de
type
flottant
/
double
si
elle
contenir
’
.
’
,
e
ou
E
sinon
elle
être
de
type
entier
,
–
le
valeur
être
définir
par
le
premier
partie
de
le
chaîne
(
si
c
’
être
du
texte
)
,
–
lorsque
le
premier
expression
être
un
chaîne
,
le
type
de
le
variable
dépendre
de
le
second
expression
.
ex
:
$
toto
=
+
`
`
'
'
;
#
$
toto
valoir
$
toto
=
+
`
`
-1e3
'
'
;
#
$
toto
valoir
$
toto
=
+
`
`
titi
+
'
'
;
#
$
toto
valoir
$
toto
=
+
`
`
+
titi
'
'
;
#
$
toto
valoir
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
tableau
de
PHP
ressembler
au
tableau
associatif
(
hash-tables
)
du
Perl
;
L
’
index
dans
le
tableau
être
appeller
clé
et
pouvoir
être
indifféremment
un
entier
ou
un
chaîne
de
caractère
;
le
valeur
associer
à
un
clé
être
appeler
valeur
;
on
pouvoir
utiliser
le
fonction
array
(
)
pour
créer
un
tableau
;
on
pouvoir
aussi
affecter
directement
le
valeur
au
tableau
;
le
fonction
list
(
)
permettre
d
’
affecter
du
variable
comme
si
elle
constituer
un
tableau
;
syntaxe
du
langage
alcôve
-
programmer
en
PHP
ex
:
$
tab
[
]
=
;
$
tab
[
]
=
`
`
toto
'
'
;
#
on
pouvoir
mélanger
le
contenu
$
tab
[
`
`
toto
'
'
]
=
`
`
titi
'
'
;
#
on
pouvoir
mélanger
le
clé
$
tab
[
`
`
toto
'
'
]
[
]
;
#
tableau
à
deux
dimension
$
tab
[
`
`
toto
'
'
]
[
]
[
`
`
encore
'
'
]
[
]
;
#
quatre
dimension
$
suite
=
array
(
,
,
,
)
;
$
personne
=
array
(
`
`
type
'
'
=
>
`
`
M
.
`
`
,
`
`
nom
'
'
=
>
'
'
Smith
'
'
)
;
list
(
$
num1
,
$
num2
)
=
$
suite
;
#
$
num1
valoir
et
$
num2
valoir
syntaxe
du
langage
alcôve
-
programmer
en
PHP
on
pouvoir
connaître
le
nombre
d
’
élément
d
’
un
tableau
grâce
au
fonction
:
–
sizeof
(
)
:
retourner
le
nombre
d
’
élément
d
’
un
tableau
,
ou
–
count
(
)
:
retourner
le
nombre
d
’
élément
d
’
un
tableau
s
’
il
exister
,
si
le
variable
n
’
être
pas
un
tableau
et
si
le
variable
n
’
exister
pas
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
chaque
tableau
entretenir
un
pointeur
courant
qui
servir
à
naviguer
en
son
sein
grâce
au
fonction
:
–
reset
(
)
:
placer
le
pointeur
interne
sur
le
premier
élément
et
retourner
son
valeur
,
–
current
(
)
:
retourner
le
valeur
de
l
’
élément
courant
,
–
next
(
)
:
placer
le
pointeur
interne
sur
l
’
élément
suivre
et
retourner
son
valeur
,
–
prev
(
)
:
placer
le
pointeur
interne
sur
l
’
élément
précédent
et
retourner
son
valeur
,
–
each
(
)
:
retourner
le
pair
clé
/
valeur
courant
du
tableau
et
avance
le
pointeur
sur
l
’
élément
suivre
(
c
’
être
le
seul
fonction
qui
ne
retourner
pas
faux
si
l
’
élément
valoir
ou
`
`
'
'
)
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
un
tableau
pouvoir
être
trier
en
utiliser
le
fonction
suivant
:
–
asort
(
)
/
arsort
(
)
:
trier
le
tableau
en
ordre
croître
/
décroître
de
valeur
,
–
ksort
(
)
/
rsort
(
)
:
trier
le
tableau
en
ordre
croître
/
décroître
de
clé
,
–
sort
(
)
:
trier
le
tableau
en
ordre
croître
clé
et
valeur
(
on
perdre
le
correspondance
clé
/
valeur
)
,
–
uasort
(
)
/
uksort
(
)
/
usort
(
)
:
trier
le
tableau
de
le
même
façon
que
leur
quasi-homonyme
(
u
pour
user
)
mais
avec
un
fonction
de
comparaison
fournir
par
l
’
utilisateur
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
ex
:
function
cmp
(
$
avoir
,
$
b
)
{
if
(
$
avoir
=
=
$
b
)
return
;
return
(
$
avoir
>
$
b
)
?
:
;
}
$
tab
=
array
(
,
,
,
,
)
;
usort
(
$
tab
,
cmp
)
;
while
(
list
(
$
cle
,
$
valeur
)
=
each
(
$
tab
)
)
{
echo
`
`
tab
[
$
cle
]
=
$
valeur
<
BR
>
\n
'
'
;
}
ce
programme
être
équivalent
à
rsort
(
)
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
variable
le
porté
d
’
un
variable
dépendre
du
contexte
dans
lequel
elle
être
définir
;
le
plupart
du
variable
avoir
un
portée
qui
s
’
étendre
sur
l
’
intégralité
du
script
PHP
,
elle
être
global
;
cependant
,
le
variable
être
local
au
sein
d
’
un
fonction
;
syntaxe
du
langage
alcôve
-
programmer
en
PHP
ex
:
$
toto
=
;
#
porter
global
function
affiche
(
)
{
echo
$
toto
;
#
portée
local
}
affiche
(
)
;
ce
exemple
n
’
afficher
rien
car
echo
(
)
utiliser
le
variable
local
$
toto
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
deux
façon
exister
pour
accéder
à
un
variable
global
au
sein
d
’
un
bloc
:
–
déclarer
le
variable
comme
global
au
sein
du
bloc
,
–
utiliser
le
tableau
associatif
$
GLOBALS
avec
comme
clé
le
nom
de
le
variable
global
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
ex
:
$
toto
=
;
#
portée
global
$
titi
=
;
#
porter
global
function
affiche
(
)
{
global
$
toto
;
#
porter
global
echo
`
`
$
toto
et
$
GLOBALS
[
’
titi
’
]
'
'
;
}
affiche
(
)
;
ce
exemple
afficher
et
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
variable
statique
:
un
variable
statique
être
un
variable
local
qui
ne
perdre
pas
son
valeur
à
chaque
fois
que
le
bloc
être
exécuter
;
on
utiliser
,
comme
en
C
,
l
’
attribut
static
pour
déclarer
un
tel
variable
:
ex
:
static
$
toto
;
ce
type
de
variable
être
très
utile
pour
le
création
de
fonction
récursif
;
syntaxe
du
langage
alcôve
-
programmer
en
PHP
ex
:
compter
récursivement
jusqu
’
à
function
compter
(
)
{
static
$
compteur
=
;
$
compteur++
;
echo
`
`
$
compteur
`
`
;
if
(
$
compteur
<
)
compte
(
)
;
}
compte
(
)
;
affiche
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
variable
dynamique
:
un
variable
dynamique
prendre
le
valeur
d
’
un
variable
et
l
’
utiliser
comme
nom
d
’
un
autre
variable
;
ex
:
$
toto
=
`
`
hello
'
'
;
#
$
toto
valoir
hello
$
$
toto
=
`
`
World
'
'
;
#
$
hello
valoir
World
echo
`
`
$
toto
$
hello
!
'
'
;
#
affiche
hello
World
!
echo
`
`
$
toto
$
{
$
toto
}
!
'
'
;
#
afficher
aussi
hello
World
!
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
nom
d
’
un
variable
pouvoir
être
placer
entre
accolade
pour
éviter
le
ambiguïté
;
ex
:
$
avoir
[
]
=
`
`
V1
'
'
;
$
avoir
=
`
`
V2
'
'
;
$
b
=
`
`
avoir
'
'
;
$
b
[
]
=
`
`
avoir
'
'
;
résultat
:
$
{
$
b
}
[
]
=
=
`
`
V1
'
'
résultat
:
$
{
$
b
[
]
}
=
=
`
`
V2
'
'
conclusion
:
$
{
$
b
}
[
]
et
$
{
$
b
[
]
}
s
’
utiliser
dans
contexte
différent
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
variable
extérieur
:
tout
le
variable
transmettre
par
le
méthode
POST
ou
GET
être
accessible
via
le
tableau
associatif
$
HTTP_POST_VARS
et
$
HTTP_GET_VARS
(
si
l
’
option
track_vars
être
activer
dans
dns-remplacé
/
dns-remplacer
)
;
le
variable
d
’
environnement
être
accessible
comme
du
variable
PHP
classique
(
ex
:
$
home
)
;
on
pouvoir
aussi
utiliser
le
fonction
getenv
(
)
et
putenv
(
)
pour
manipuler
le
variable
d
’
environnement
;
syntaxe
du
langage
alcôve
-
programmer
en
PHP
variable
prédéfinie
:
certain
variable
être
prédéfinie
par
PHP
,
elle
être
disponible
pendant
tout
l
’
exécution
du
script
.
PHP_SELF
URI
du
script
en
cours|cour
d
’
exécution
.
GLOBALS
tableau
du
variable
global
.
HTTP_GET_VARS
tableau
du
variable
issue
de
GET
.
HTTP_POST_VARS
tableau
du
variable
issue
de
POST
.
HTTP_COOKIE_VARS
tableau
du
variable
issue
du
cookies
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
variable
d
’
environnement
CGI
:
SERVER_SOFTWARE
SERVER_NAME
GATEWAY_INTERFACE
SERVER_PROTOCOL
SERVER_PORT
REQUEST_METHOD
PATH_INFO
PATH_TRANSLATED
SCRIPT_NAME
QUERY_STRING
REMOTE_HOST
REMOTE_ADDR
AUTH_TYPE
REMOTE_USER
REMOTE_IDENT
CONTENT_TYPE
CONTENT_LENGTH
http
:
/
/
dns-remplacer
/
cgi
/
dns-remplacer
syntaxe
du
langage
alcôve
-
programmer
en
PHP
pour
déterminer
le
type
d
’
un
variable
on
pouvoir
utiliser
le
fonction
suivant
:
–
gettype
(
)
:
retourner
un
chaine
décrire
le
type
de
le
variable
passée
en
argument
(
integer
,
double
,
string
,
array
,
object
,
unknown
type
)
,
–
is_long
(
)
/
is_int
(
)
/
is_integer
(
)
:
retourne
true
si
le
variable
passée
en
argument
être
un
entier
et
false
dans
le
cas
contraire
,
–
is_double
(
)
/
is_float
:
idem
mais
avec
le
flottant
/
double
,
–
is_string
(
)
:
idem
mais
avec
le
chaîne
de
caractère
,
–
is_array
(
)
:
idem
mais
avec
le
tableau
,
–
is_object
(
)
:
idem
mais
avec
le
objet
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
constant
PHP
définir
certain
constant
et
proposer
un
mécanisme
pour
en
définir
d
’
autre
durant
l
’
exécution
du
script
;
on
définir
un
constante
en
utiliser
le
fonction
define
(
)
;
ex
:
define
(
`
`
MA_CONSTANTE
'
'
,
`
`
bonjour
'
'
)
;
echo
MA_CONSTANTE
;
#
afficher
bonjour
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
principal
constant
définir
par
PHP
être
le
suivant
:
–
__FILE__
:
nom
du
fichier
actuellement
exécuter
,
–
__LINE__
:
numéro
de
le
ligne
qui
être
actuellement
exécuter
,
–
PHP_VERSION
:
présentation
de
le
version
du
PHP
utiliser
(
ex
:
3.0.8-dev
)
,
–
PHP_OS
:
système
d
’
exploitation
utiliser
par
le
machine
qui
faire
tourner
le
PHP
(
ex
:
Linux
)
,
–
TRUE
:
vrai
,
–
FALSE
:
faux
,
–
E_
*
:
gestion
du
erreur
(
cf
.
section
correspondant
)
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
opérateur
le
opérateur
arithmétique
:
–
addition
:
$
avoir
+
$
b
,
–
soustraction
:
$
avoir
-
$
b
,
–
multiplication
:
$
avoir
*
$
b
,
–
division
:
$
avoir
/
$
b
,
–
modulo
(
rester
de
le
division
entier
)
:
$
avoir
%
$
b
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
L
’
opérateur
sur
le
chaîne
de
caractère
:
–
concaténation
:
chaine1
.
chaine2
ex
:
$
jour
=
`
`
lundi
'
'
;
echo
’
nous
être|sommer
’
.
$
jour
.
`
`
!
'
'
;
affiche
nous
être|sommer
lundi
!
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
opérateur
sur
le
bit
:
–
et
bit
à
bit
:
$
avoir
&
$
b
,
–
ou
bit
à
bit
:
$
avoir
|
$
b
,
–
OU-Exclusif
/
XOR
bit
à
bit
:
$
avoir
ˆ
$
b
,
–
non
bit
à
bit
:
˜
$
avoir
,
–
décalage
à
droit|droite
de
$
b
bit
:
$
avoir
>
>
$
b
,
–
décalage
à
gauche
de
$
b
bit
:
$
avoir
<
<
$
b
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
opérateur
logique
:
–
et
(
vrai
si
$
avoir
et
$
b
vrai
)
:
$
avoir
and
$
b
,
$
avoir
&
&
$
b
.
–
ou
(
vrai
si
$
avoir
ou
$
b
vrai
(
s
)
)
:
$
avoir
or
$
b
,
$
avoir
|
|
$
b
.
–
OU-Exclusif
/
XOR
(
vrai
si
seul
$
avoir
ou
$
b
vrai
)
:
$
avoir
xor
$
b
,
–
non
(
vrai
si
$
avoir
être
faux
)
:
!
$
avoir
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
opérateur
d
’
affectation
:
–
l
’
opérateur
d
’
affectation
le
plus
simple
être
le
signe
=
,
–
il
ne
signifier
pas
`
`
égal
à
'
'
mais
que
l
’
opérande
à
gauche
du
signe
=
se
voir
affecter
de
le
valeur
de
l
’
opérande
de
droit|droite
,
–
le
valeur
retourner
par
un
expression
d
’
assignement
être
le
valeur
assigner
,
ex
:
$
avoir
=
(
$
b
=
)
+
;
#
$
avoir
valoir
et
$
b
valoir
syntaxe
du
langage
alcôve
-
programmer
en
PHP
–
il
exister
en
plus
du
opérateur
combiner
pour
tout
le
opérateur
arithmétique
,
le
opérateur
bit
à
bit
et
l
’
opérateur
de
concaténation
,
+
=
-
=
*
=
/
=
%
=
.
=
&
=
|
=
ˆ
=
<
<
=
>
>
=
˜
=
–
celui
-ci
permettre
d
’
utiliser
le
valeur
d
’
un
variable
dans
un
expression
et
d
’
affecter
le
résultat
de
ce
expression
à
ce
variable
,
ex
:
$
toto
+
=
#
équivaloir
à
$
toto
=
$
toto
+
syntaxe
du
langage
alcôve
-
programmer
en
PHP
–
l
’
opérateur
++
être
équivalent
à
+
=
,
–
l
’
opérateur
--
être
équivalent
à
-
=
,
–
ce
deux
opérateur
pouvoir
être
placer
avant
(
pré-exécution
)
ou
après
(
post-exécution
)
le
variable
à
lequel
il
s
’
appliquer
.
ex
:
$
toto
=
;
echo
++
$
toto
;
#
afficher
echo
$
toto++
;
#
afficher
echo
$
toto
;
#
affiche
syntaxe
du
langage
alcôve
-
programmer
en
PHP
le
opérateur
de
comparaison
:
–
égal
à
:
$
avoir
=
=
$
b
,
–
différent
de
:
$
avoir
!
=
$
b
,
–
supérieur
à
:
$
avoir
>
$
b
,
–
inférieur
à
:
$
avoir
<
$
b
,
–
supérieur
ou
égal
à
:
$
avoir
>
=
$
b
,
–
inférieur
ou
égal
à
:
$
avoir
<
=
$
b
.
syntaxe
du
langage
alcôve
-
programmer
en
PHP
L
’
opérateur
ternaire
:
–
issu
du
langage
C
,
–
(
condition
)
?
(
expression1
)
:
(
expression2
)
;
,
–
renvoyer
expression1
si
condition
être
vrai
et
expression2
dans
le
cas
contraire
.
ex
:
echo
$
toto
=
=
?
`
`
nul
'
'
:
`
`
non
nul
'
'
;
#
affiche
nul
si
$
toto
valoir
et
non
nul
sinon
section
alcôve
-
programmer
en
PHP
le
structure
de
contrôle
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
objectif
de
le
section
introduction
;
instruction
conditionnel
;
boucle
;
inclusion
.
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
introduction
tout
le
script
PHP
être
un
suite
d
’
instruction
;
un
instruction
pouvoir
être
:
–
un
assignement
,
–
un
appel
de
fonction
,
–
un
instruction
conditionnel
,
ou
–
un
instruction
qui
ne
faire
rien
(
un
instruction
vide
)
.
un
instruction
se
terminer
habituellement
par
un
point
virguler
(
;
)
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
plusieurs
instruction
pouvoir
être
regrouper
en
bloc
,
délimiter
par
du
accolade
(
{
...
}
)
;
un
bloc
être
considérer
comme
un
instruction
;
le
différent
type
d
’
instruction
être
décrire
dans
ce
chapitre
.
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
instruction
conditionnel
L
’
instruction
if
être
un
du
plus
important
instruction
de
tout
le
langage
,
PHP
inclure
;
elle
permettre
l
’
exécution
conditionnel
d
’
un
partie
de
code
;
le
fonctionnalité
de
l
’
instruction
if
être
le
même
en
PHP
qu
’
en
C
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
if
(
condition
)
{
#
instruction
à
exécuter
si
le
condition
être
vrai
...
}
un
chaine
de
caractère
ne
contenir
que
être
évaluer
comme
faux
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
souvent
on
souhaiter
exécuter
un
instruction
si
un
condition
être
remplir
,
et
un
autre
instruction
si
ce
condition
n
’
être
pas
remplir
;
C
’
être
le
rôle
du
else
;
prototype
:
if
(
condition
)
{
#
instruction
à
exécuter
si
le
condition
être
vrai
...
}
else
{
#
instruction
à
exécuter
si
le
condition
être
faux
...
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
elseif
permettre
,
comme
l
’
expression
else
,
d
’
exécuter
un
instruction
après
un
if
dans
le
cas
où
ce
dernier
être
évaluer
comme
faux
;
à
le
différence
de
l
’
expression
else
,
il
n
’
exécuter
le
instruction
que
si
l
’
expression
condionnelle
elseif
être
évaluer
comme
vrai
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
if
(
condition1
)
{
#
instruction
à
exécuter
si
le
condition1
être
vrai
...
}
elseif
(
condition2
)
{
#
instruction
à
exécuter
si
le
condition2
être
vrai
...
}
elseif
(
condition3
)
{
#
instruction
à
exécuter
si
le
condition3
être
vrai
...
...
}
else
{
#
instruction
à
exécuter
si
aucun
du
condition
n
’
être
vrai
...
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
le
syntaxe
du
if
que
nous
venir
de
voir
être
directement
hériter
du
langage
C
;
pas
toujours
très
adapter
pour
mélanger
code
PHP
et
HTML
;
PHP
proposer
donc
un
autre
syntaxe
pour
le
if
qui
permettre
d
’
améliorer
le
lisibilité
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototyper
simplifier
:
if
(
condition1
)
:
#
instruction
à
exécuter
si
le
condition1
être
vrai
...
elseif
(
condition2
)
:
#
instruction
à
exécuter
si
le
condition2
être
vrai
...
elseif
(
condition3
)
:
#
instruction
à
exécuter
si
le
condition3
être
vrai
...
...
else
:
#
instruction
à
exécuter
si
aucun
du
condition
n
’
être
vrai
...
endif
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
ex
:
if
(
$
type
=
=
`
`
femme
'
'
)
{
echo
`
`
bonjour
Madame
'
'
;
}
elseif
(
$
type
=
=
`
`
Homme
'
'
)
{
echo
`
`
bonjour
Monsieur
'
'
;
}
else
{
echo
`
`
bonjour
,
vous
être
bizarre
!
'
'
;
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
boucler
le
boucle
while
être
le
moyen
le
plus
simple
d
’
implémenter
un
boucle
en
PHP
;
ce
boucle
se
comporter
de
le
même
manière
qu
’
en
C
:
le
instruction
être
exécuter
tant
que
l
’
expression
être
vrai
;
le
valeur
de
l
’
expression
être
vérifier
à
chaque
début
de
boucle
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
si
le
valeur
changer
durant
l
’
exécution
de
l
’
instruction
,
l
’
exécution
ne
s
’
arrêter
qu
’
à
le
fin
de
l
’
itération
;
comme
avec
le
if
,
PHP
définir
un
syntaxe
simplifier
,
en
plus
de
celui
hériter
du
langage
C
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
while
(
condition
)
{
#
instruction
à
exécuter
tant
que
le
condition
être
vrai
...
}
prototyper
simplifier
:
while
(
condition
)
:
#
instruction
à
exécuter
tant
que
le
condition
être
vrai
...
endwhile
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
ex
:
compter
jusqu
’
à
$
i
=
;
while
(
$
i
<
=
)
{
echo
`
`
$
i
`
`
;
$
i++
;
}
affiche
.
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
le
boucle
do
.
.
while
ressembler
beaucoup
à
le
boucle
while
;
le
différence
être
que
l
’
expression
être
tester
à
le
fin
de
chaque
itération
au
lieu
du
début
;
le
premier
itération
de
le
boucle
être
donc
toujours
exécuter
;
il
n
’
y
avoir
qu
’
un
syntaxe
possible
pour
le
boucle
do
.
.
while
qui
être
,
elle
aussi
,
hériter
du
langage
C
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
do
{
#
instruction
à
exécuter
le
premier
fois
et
ensuite
tant
que
le
condition
être
vrai
...
}
while
(
condition
)
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
ex
:
compter
jusqu
’
à
$
i
=
;
do
{
echo
`
`
$
i
`
`
;
$
i++
;
}
while
(
$
i
<
=
)
;
affiche
.
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
le
boucle
for
être
,
en
PHP
tout
comme
en
C
,
le
boucle
le
plus
complexe
mais
aussi
le
plus
puissant
;
elle
fonctionner
comme
le
boucle
for
du
langage
C
;
prototype
:
for
(
expression1
;
condition
;
expression2
)
{
#
instruction
à
exécuter
tant
que
le
condition
être
vrai
...
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
expression1
être
évaluer
(
exécuter
)
quoi
qu
’
il
arriver
au
début
de
le
boucle
;
au
début
de
chaque
itération
,
le
condition
être
évaluer
;
–
si
elle
être
vrai
,
le
boucle
continu
et
le
instruction
être
à
nouveau
exécuter
,
–
si
elle
être
faux
,
l
’
exécution
de
le
boucle
s
’
arrêter
.
à
le
fin
de
chaque
itération
,
l
’
expression2
être
évaluer
(
exécuter
)
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
le
expression
/
condition
pouvoir
éventuellement
être
laisser
vide
(
-
>
attention
au
boucle
infini
)
;
comme
avec
le
if
et
le
while
,
PHP
définir
un
syntaxe
simplifier
,
en
plus
de
celui
hériter
du
langage
C
;
prototyper
simplifier
:
for
(
expression1
;
condition
;
expression2
)
:
#
instruction
à
exécuter
tant
que
le
condition
être
vrai
...
endfor
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
ex
:
compter
jusqu
’
à
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
echo
`
`
$
i
`
`
;
}
Ex2
:
compter
jusqu
’
à
for
(
$
i
=
;
$
i
<
=
;
print
`
`
$
i
`
`
,
$
i++
)
;
Ex3
:
compter
jusqu
’
à
for
(
$
i
=
;
$
i
<
=
;
print
$
i++
)
;
ce
exemple
afficher
.
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
PHP4
définir
un
boucle
foreach
,
comme
en
Perl
,
pour
réaliser
un
boucle
sur
le
élément
d
’
un
tableau
;
en
PHP3
on
pouvoir
réaliser
l
’
équivaloir
avec
un
boucle
while
et
le
fonction
list
(
)
et
each
(
)
que
nous
avoir
voir
précédemment
;
ex
:
afficher
tout
le
argument
d
’
un
formulaire
POST
while
(
list
(
$
cle
,
$
valeur
)
=
each
(
$
HTTP_POST_VARS
)
)
{
echo
`
`
$
cle
=
>
$
valeur
,
`
`
;
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
avec
l
’
instruction
foreach
ce
boucle
devenir
:
foreach
(
$
HTTP_POST_VARS
avoir
$
cle
=
>
$
valeur
)
{
echo
`
`
$
cle
=
>
$
valeur
,
`
`
;
}
ou
bien
,
si
l
’
on
ne
vouloir
récupérer
que
le
valeur
:
foreach
(
$
HTTP_POST_VARS
avoir
$
valeur
)
{
echo
`
`
$
valeur
,
`
`
;
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
break
permettre
de
sortir
d
’
un
boucle
à
n
’
importer
quel
moment
;
ex
:
compter
jusqu
’
à
for
(
$
i
=
,
,
$
i++
)
{
if
(
$
i
>
)
break
;
echo
`
`
$
i
`
`
;
}
afficher
.
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
continu
permettre
d
’
ignorer
le
instruction
restant
dans
le
boucle
et
de
passer
directement
à
l
’
itération
suivant
;
ex
:
compter
par
jusqu
’
à
for
(
$
i
=
,
$
i
<
=
,
$
i++
)
{
if
(
$
i
%
)
continu
;
#
$
i
impair
echo
`
`
$
i
`
`
;
}
afficher
.
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
switch
équivaloir
à
un
serie
d
’
instruction
if
.
.
elseif
.
.
elseif
...
.
else
;
elle
être
utiliser
pour
comparer
le
même
variable
(
ou
expression
)
avec
un
grand
nombre
de
valeur
différent
et
d
’
exécuter
différent
partie
de
code
suivre
le
valeur
à
lequel
elle
être
égal
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
switch
(
expression
)
{
case
resultat1
:
#
instruction
à
exécuter
si
l
’
expression
valoir
resultat1
...
break
;
case
resultat2
:
#
instruction
à
exécuter
si
l
’
expression
valoir
resultat2
...
break
;
...
default
:
#
instruction
à
exécuter
en
dernier
recours
...
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
switch
exécuter
chacun
du
clause
dans
l
’
ordre
d
’
écriture
;
elle
être
exécuter
ligne
par
ligne
;
aucun
code
n
’
être
exécuter
jusqu
’
à
ce
que
le
premier
case
être
vérifier
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
Lorsqu
’
il
trouver
le
premier
case
vérifier
,
PHP
exécuter
alors
le
instruction
correspondant
et
continu
jusqu
’
à
le
fin
du
bloc
switch
;
pour
reproduire
le
fonctionnement
d
’
un
if
.
.
elseif
.
.
elseif
...
.
else
,
il
falloir
terminer
tout
le
case
par
du
break
;
on
pouvoir
définir
un
case
exécuter
par
défaut
(
équivalent
au
else
)
grâce
à
default
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
ex
:
switch
(
$
type
)
{
case
`
`
femme
'
'
:
echo
`
`
bonjour
Madame
'
'
;
break
;
case
`
`
Homme
'
'
:
echo
`
`
bonjour
Monsieur
'
'
;
break
;
default
:
echo
`
`
bonjour
,
vous
être
bizarre
!
'
'
;
}
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
inclusion
le
fonction
require
(
)
se
substituer
elle
même
avec
le
contenu
du
fichier
spécifier
en
argument
;
le
substitution
s
’
opérer
avant
l
’
interprétation
du
code
;
elle
ressembler
à
peu
près
au
#
include
du
C
;
si
on
l
’
utiliser
au
sein
d
’
un
boucle
,
c
’
être
le
fichier
tel
qu
’
il
être
à
le
premier
itération
qui
être
réutiliser
à
chaque
itération
(
même
s
’
il
avoir
changer
entre
temps
)
;
de
plus
,
il
être
déconseiller
d
’
utiliser
require
(
)
avec
un
nom
de
fichier
dynamique
(
contenir
un
variable
)
;
le
structure
de
contrôle
alcôve
-
programmer
en
PHP
le
fonction
include
(
)
inclure
et
évaluer
le
fichier
spécifier
en
argument
;
ceci
être
faire
à
chaque
fois
que
le
fonction
être
rencontrer
;
on
pouvoir
donc
utiliser
ce
fonction
au
sein
d
’
un
boucle
pour
inclure
un
fichier
différent
à
chaque
fois
par
exemple
(
ex
:
include
(
`
`
toto_
$
i
'
'
)
;
)
.
section
alcôve
-
programmer
en
PHP
fonction
fonction
alcôve
-
programmer
en
PHP
objectif
de
le
section
présentation
du
fonction
PHP
;
le
valeur
de
retour
;
le
argument
.
fonction
alcôve
-
programmer
en
PHP
présentation
du
fonction
PHP
un
fonction
pouvoir
être
définir
en
utiliser
le
syntaxe
suivant
:
function
ma_fonction
(
$
arg_1
,
$
arg_2
,
...
,
$
arg_n
)
{
#
corps
de
mon
fonction
...
return
$
valeur_de_retour
;
}
tout
code
PHP
correct
syntaxiquement
pouvoir
apparaître
dans
un
fonction
et
dans
un
définition
de
classe
;
en
PHP3
tout
fonction
devoir
être
préalablement
définir
avant
d
’
être
utiliser
(
idem
langage
C
)
.
elle
pouvoir
être
définir
n
’
importer
où
en
PHP4
.
fonction
alcôve
-
programmer
en
PHP
le
valeur
de
retour
le
valeur
être
renvoyer
en
utiliser
un
instruction
de
retour
optionnel
;
tout
le
type
de
variable
pouvoir
être
renvoyer
(
tableau
et
objet
comprendre
)
;
ex
:
function
carre
(
$
nombre
)
{
return
$
nombre
*
$
nombre
;
}
echo
carre
(
)
;
#
afficher
le
valeur
fonction
alcôve
-
programmer
en
PHP
on
ne
pouvoir
pas
renvoyer
plusieurs
valeur
en
même
temps
mais
on
pouvoir
obtenir
un
résultat
identique
en
renvoyer
un
tableau
;
ex
:
function
couleur
(
)
{
return
array
(
`
`
cœur
'
'
,
`
`
pique
'
'
,
`
`
trèfle
'
'
,
'
'
carreau
'
'
)
;
}
list
(
$
c1
,
$
c2
,
$
c3
,
$
c4
)
=
couleur
(
)
;
fonction
alcôve
-
programmer
en
PHP
PHP4
permettre
également
le
retour
de
fonction
par
référence
;
ce
mécanisme
être
utile
lorsque
l
’
on
chercher
à
utiliser
un
fonction
pour
trouver
un
variable
que
l
’
on
vouloir
lier
;
à
le
différence
du
passage
par
référence
,
il
falloir
utiliser
un
&
à
deux
endroit
:
–
pour
indiquer
que
l
’
on
retourner
un
référence
(
et
non
un
copie
comme
à
l
’
habitude
)
,
mais
aussi
–
pour
indiquer
qu
’
un
liaison
à
un
référence
et
non
un
simple
assignement
de
variable
devoir
avoir
lieu
avec
le
variable
de
retour
.
fonction
alcôve
-
programmer
en
PHP
ex
:
function
&
trouve_variable
(
$
param
)
{
#
...
recherche
de
le
variable
$
toto
...
return
$
toto
;
}
$
titi
=
&
trouve_variable
(
$
tata
)
;
$
titi-
>
x
=
;
le
propriété
de
l
’
objet
retourner
par
le
fonction
trouve_variable
(
)
être
lier
à
$
titi
.
il
ne
s
’
agir
pas
d
’
un
copie
de
$
toto
.
fonction
alcôve
-
programmer
en
PHP
le
argument
du
information
pouvoir
être
passer
à
un
fonction
en
utiliser
un
tableau
d
’
argument
dont
chaque
élément
être
séparer
par
un
virgule
;
un
élément
pouvoir
être
un
variable
ou
un
constant
;
PHP
supporter
:
–
le
passage
d
’
argument
par
valeur
(
méthode
par
défaut
)
,
–
le
passage
d
’
argument
par
référence
,
et
–
le
valeur
par
défaut
du
argument
.
un
liste
d
’
argument
dont
le
nombre
être
variable
ne
fonctionner
pas
en
PHP
mais
un
résultat
similaire
pouvoir
être
obtenir
en
utiliser
un
tableau
;
fonction
alcôve
-
programmer
en
PHP
passage
d
’
argument
par
valeur
:
C
’
être
le
méthode
par
défaut
;
le
variable
ne
être
pas
affecter
par
du
changement
au
sein
de
le
fonction
;
on
pouvoir
donc
changer
le
valeur
du
argument
au
sein
de
le
fonction
sans
que
ceci
avoir
du
répercussion
à
l
’
extérieur
de
celui
-ci
;
fonction
alcôve
-
programmer
en
PHP
ex
:
function
ajoute_deux
(
$
nombre
)
{
$
nombre
+
=
;
echo
$
nombre
;
}
$
toto
=
;
ajoute_deux
(
$
toto
)
;
#
afficher
echo
$
toto
;
#
affiche
fonction
alcôve
-
programmer
en
PHP
passage
d
’
argument
par
référence
:
le
variable
être
affecter
par
du
changement
au
sein
de
le
fonction
;
deux
possibilité
:
–
de
façon
permanent
en
ajouter
un
&
devant
le
nom
de
le
variable
dans
le
définition
de
le
fonction
,
ou
–
de
façon
ponctuel
en
ajouter
un
&
devant
le
nom
de
le
variable
lors
de
l
’
appel
à
le
fonction
.
fonction
alcôve
-
programmer
en
PHP
ex
:
function
retranche_deux
(
&
$
nombre
)
{
$
nombre
-
=
;
echo
$
nombre
;
}
$
toto
=
;
ajoute_deux
(
&
$
toto
)
;
#
afficher
echo
$
toto
;
#
afficher
retranche_deux
(
$
toto
)
;
#
afficher
echo
$
toto
;
#
affiche
fonction
alcôve
-
programmer
en
PHP
valeur
par
défaut
du
argument
:
PHP
permettre
,
comme
en
C++
,
de
spécifier
du
valeur
par
défaut
pour
le
argument
de
type
scalaire
;
il
suffire
de
spécifier
le
valeur
par
défaut
avec
un
=
dans
le
déclaration
de
le
fonction
;
ce
valeur
devoir
être
un
constant
(
pas
de
variable
ni
d
’
attribut
de
classe
)
et
le
argument
par
défaut
devoir
être
le
dernier
dans
le
liste
;
fonction
alcôve
-
programmer
en
PHP
ex
:
function
annotation
(
$
type
=
`
`
assez
bien
'
'
)
{
echo
`
`
vous
avoir
$
type
travailler
'
'
;
}
annotation
(
`
`
mal
'
'
)
;
#
afficher
vous
avoir
mal
travailler
annotation
(
)
;
#
afficher
vous
avoir
assez
bien
travailler
section
alcôve
-
programmer
en
PHP
programmation
orienter
objet
programmation
orienter
objet
alcôve
-
programmer
en
PHP
objectif
de
le
section
rappel
sur
le
programmation
orienter
objet
;
le
classe
en
PHP
;
le
objet
en
PHP
;
particularité
de
PHP
.
programmation
orienter
objet
alcôve
-
programmer
en
PHP
rappel
sur
le
programmation
orienter
objet
POO
-
>
raisonner
en
terme
de
fonctionnalité
et
de
propriété
et
non
en
terme
de
traitement
;
L
’
encapsulation
:
L
’
objet
représenter
un
abstraction
d
’
un
entité
abstrait
ou
concret
pour
lequel
il
regrouper
en
un
même
structure
le
donnée
et
le
traitement
;
un
objet
posséder
du
caractéristique
et
du
fonctionnalité
et
on
l
’
utiliser
sans
savoir
comment
elle
être
implémenter
(
ex
:
un
téléphone
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
le
caractéristique
/
fonctionnalité
non
utile
pour
le
manipulation
de
l
’
objet
mais
utile
à
son
fonctionnement
être
masquer
à
l
’
utilisateur
(
ex
:
le
composant
interne
du
téléphone
)
;
L
’
héritage
:
un
objet
pouvoir
dériver
d
’
un
autre
objet
et
posséder
du
caractéristique
/
fonctionnalité
supplémentaire
tout
en
hériter
du
caractéristique
/
fonctionalités
de
son
aïeul
(
ex
:
un
téléphone
sans
fils|fil
être
un
téléphone
un
peu
particulier
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
le
polymorphisme
:
Lorsqu
’
on
invoquer
un
méthode
d
’
un
objet
,
le
programme
savoir
retrouver
le
méthode
parmis
celui
du
aïeux
de
l
’
objet
si
celui
-ci
n
’
être
pas
explicitement
définir
pour
lui
mais
qu
’
il
en
avoir
hériter
(
ex
:
le
méthode
`
`
décrocher
le
téléphone
'
'
pour
un
sans
fils|fil
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
à
le
création
(
instanciation
)
de
l
’
objet
,
un
méthode
(
qui
porter
généralement
le
même
nom
que
le
classe
)
être
appeller
automatiquement
:
c
’
être
le
constructeur
;
parfois
,
à
le
destruction
de
l
’
objet
,
un
méthode
(
qui
porter
généralement
le
même
nom
que
le
classe
précéder
d
’
un
˜
)
être
appeller
automatiquement
:
c
’
être
le
destructeur
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
un
classe
être
un
collection
de
variable
(
attribut
)
et
de
fonction
(
méthode
)
qui
s
’
appliquer
à
ce
variable
;
un
objet
être
un
instance
d
’
un
classe
.
son
type
de
donnée
être
le
classe
d
’
objet
à
lequel
il
appartenir
(
un
peu
comme
$
toto
=
;
être
un
instance
du
type
entier
)
.
programmation
orienter
objet
alcôve
-
programmer
en
PHP
le
classe
en
PHP
en
PHP
,
on
définir
un
classe
d
’
objet
de
le
façon
suivant
:
class
macler
{
#
attribut
var
$
monAttribut
;
#
méthode
function
maMethode
(
$
argument
)
{
#
...
traitement
de
$
monAttribut
avec
$
argument
...
}
}
programmation
orienter
objet
alcôve
-
programmer
en
PHP
le
objet
en
PHP
il
être
possible
de
spécifier
un
variable
objet
de
le
façon
suivant
:
$
monObjet
=
new
macler
;
on
accéder
à
un
attribut
ou
à
un
méthode
de
le
façon
suivant
:
$
monObjet-
>
monAttribut
=
`
`
toto
'
'
;
$
monObjet-
>
maMethode
(
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
particularité
de
PHP
tout
le
attribut
et
méthode
être
public
;
le
objet
être
libérer
automatiquement
quand
il
ne
être
plus
utiliser
(
Garbage
Collector
)
;
pas
de
destructeur
.
programmation
orienter
objet
alcôve
-
programmer
en
PHP
ex
:
le
caddie
class
caddie
{
var
$
elements
;
#
élément
de
notre
caddie
#
constructeur
qui
ajouter
un
cadeau
à
chaque
nouveau
caddie
function
caddie
(
)
{
$
this-
>
ajouter
(
,
`
`
cadeau
'
'
)
;
}
#
ajout
de
$
nombre
article
de
type
$
type
au
caddie
function
ajouter
(
$
nombre
,
$
type
)
{
$
this-
>
elements
[
$
type
]
+
=
$
nombre
;
}
programmation
orienter
objet
alcôve
-
programmer
en
PHP
#
retraire
de
$
nombre
article
de
type
$
type
au
caddie
function
enleve
(
$
nombre
,
$
type
)
{
if
(
$
this-
>
elements
[
$
type
]
>
$
nombre
)
{
$
this-
>
elements
[
$
type
]
-
=
$
nombre
;
return
true
;
}
else
{
return
false
;
}
}
}
chapitre
alcôve
-
programmer
en
PHP
fonctionnalité
essentiel
fonctionnalité
essentiel
alcôve
-
programmer
en
PHP
objectif
du
chapitre
gestion
du
connexion
et
du
utilisateur
;
gestion
du
session
;
autre
fonctionnalité
essentiel
.
section
alcôve
-
programmer
en
PHP
connexion
et
utilisateur
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
objectif
de
le
section
gestion
du
utilisateur
-
authentification
;
gestion
du
connexion
.
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
gestion
du
utilisateur
-
authentification
le
fonction
d
’
authentification
HTTP
ne
être
disponible
que
si
PHP
être
exécuter
comme
module
apache
(
et
non
pas
comme
CGI
)
;
on
utiliser
le
fonction
header
(
)
pour
demander
un
authentification
(
Authentication
Required
)
au
client
,
générer
ainsi
l
’
apparition
d
’
un
fenêtre
de
demande
de
nom
d
’
utilisateur
et
de
mot
de
passe
;
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
un
fois
que
le
champ
avoir
être
remplir
,
l
’
URL
être
de
nouveau
appelé
mais
avec
le
variable
suivant
mettre
à
jour
:
–
$
PHP_AUTH_USER
:
utilisateur
,
–
$
PHP_AUTH_PW
:
mot
de
passe
,
et
–
$
PHP_AUTH_TYPE
:
type
d
’
authentification
.
actuellement
,
seul
l
’
authentification
basique
(
basic
)
être
supporter
;
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
ex
:
page
d
’
authentification
<
?
php
if
(
!
isset
(
$
PHP_AUTH_USER
)
)
{
Header
(
`
`
WWW-Authenticate
:
basic
realm
=
’
titre
’
'
'
)
;
Header
(
`
`
HTTP
/
Unauthorized
'
'
)
;
echo
`
`
texte
à
envoyer
au
client
en
cas
d
’
annulation
'
'
;
exit
;
}
else
{
echo
`
`
bonjour
$
PHP_AUTH_USER
.
<
br
>
'
'
;
echo
`
`
votre
mot
de
passe
être
$
PHP_AUTH_PW
.
'
'
;
}
?
>
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
gestion
du
connexion
le
statut
du
connexion
être
conserver
en
interne
par
PHP
;
il
y
avoir
trois
état
possible
:
–
/
normal
:
le
script
PHP
travailler
,
–
/
ABORTED
:
le
client
distant
s
’
être
déconnecter
,
–
/
TIMEOUT
:
le
durée
maximal
d
’
exécution
être
dépasser
.
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
par
défaut
,
le
script
PHP
se
terminer
dès
que
le
client
se
déconnecter
mais
on
pouvoir
changer
ce
politique
de
différent
façon
:
–
continuer
le
script
comme
si
le
client
être
encore
là
en
activer
l
’
option
:
ignore_user_abort
dans
dns-remplacé
/
dns-remplacer
,
ou
[
php3_ignore_user_abort
/
ignore_user_abort
dans
dns-remplacé
.
–
exécuter
un
fonction
de
fermeture
préalablement
enregistrer
grâce
à
le
fonction
register_shutdown_function
(
)
.
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
le
fonction
enregistrer
avec
register_shutdown_function
(
)
être
aussi
appeler
à
le
fin
du
script
quand
celui
-ci
se
terminer
normalement
;
pour
pouvoir
avoir
un
comportement
différent
suivre
l
’
état
du
script
lors
de
son
finalisation
on
pouvoir
tester
l
’
état
déconnecter
du
script
avec
le
fonction
connection_aborted
(
)
;
le
fonction
connection_status
(
)
permettre
également
de
retourner
l
’
état
du
script
(
,
,
ou
)
;
connexion
et
utilisateur
alcôve
-
programmer
en
PHP
on
pouvoir
modifier
le
délai
de
timeout
(
seconde|second
par
défaut
)
de
plusieurs
manière
:
–
fonction
set_time_limit
(
)
,
–
max_execution_time
dans
dns-remplacé
/
dns-remplacer
,
ou
–
php3_max_execution_time
/
max_execution_time
dans
dns-remplacé
.
le
fonction
enregistrer
avec
register_shutdown_function
(
)
être
également
appeler
lorsqu
’
un
timeout
intervenir
;
on
pouvoir
tester
l
’
état
timeout
du
script
avec
le
fonction
connection_timeout
(
)
;
section
alcôve
-
programmer
en
PHP
gestion
du
session
gestion
du
session
alcôve
-
programmer
en
PHP
objectif
de
le
section
principe
;
session
avec
PHPlib
;
session
avec
PHP4
.
gestion
du
session
alcôve
-
programmer
en
PHP
principe
le
gestion
du
session
avec
PHP
être
un
moyen
de
sauver
du
information
entre
deux
accès
(
requête
HTTP
)
;
cela
permettre
notamment
de
construire
du
application
personnaliser
,
et
d
’
accroître
le
fonctionnalité
de
votre
site
;
malheureusement
,
le
gestion
du
session
n
’
être
pas
inclure
dans
le
fonctionnalité
standard
de
PHP
jusqu
’
à
le
version
PHP4
;
un
bibliothèque
complémentaire
avoir
donc
être
développer
pour
gérer
le
session
avec
PHP3
,
c
’
être
PHPlib
;
gestion
du
session
alcôve
-
programmer
en
PHP
session
avec
PHPlib
PHPlib
être
un
bibliothèque
PHP
libre
qui
viser
à
faciliter
le
création
de
site
avec
PHP
;
elle
être
toujours
utilisable
avec
PHP4
et
présenter
d
’
ailleurs
du
fonctionnalité
que
ce
dernier
ne
posséder
toujours
pas
en
natif
;
elle
se
composer
de
classe
et
de
fonction
qui
permettre
:
–
le
suivi
du
session
,
–
l
’
utilisation
de
variable
persistant
au
niveau
utilisateur
et
au
niveau
session
,
–
l
’
authentification
et
le
gestion
du
permission
,
–
le
génération
rapide
de
code
HTML
...
gestion
du
session
alcôve
-
programmer
en
PHP
installation
:
–
récupérer
l
’
archiver
(
http
:
/
/
dns-remplacer
)
,
–
la
décompresser
dans
un
répertoire
quelconque
(
ex
:
/
usr
/
lib
/
phplib
/
)
,
–
éditer
le
fichier
dns-remplacer
/
dns-remplacer
et
fixer
le
option
de
le
façon
suivant
:
magic_quotes_gpc
=
off
magic_quotes_runtime
=
off
magic_quotes_sybase
=
off
track_vars
=
on
auto_prepend_file
=
<
répertoire
contenir
dns-remplacer
>
include_path
=
<
répertoire
d
’
installation
>
gestion
du
session
alcôve
-
programmer
en
PHP
pour
l
’
utilisation
de
PHPlib
,
il
falloir
créer
quelque
fichier
en
plus
du
script
PHP
:
–
dns-remplacé
servir
à
définir
tout
le
librairie
PHPlib
à
inclure
avant
chaque
fichier
,
et
–
dns-remplacé
servir
à
définir
le
classe
qui
aller
être
utiliser
par
le
script
.
gestion
du
session
alcôve
-
programmer
en
PHP
pour
gérer
le
session
et
le
variable
persistant
,
le
librairie
se
servir
d
’
un
base
de
donnée
,
d
’
un
annuaire
LDAP
ou
encore
d
’
un
simple
fichier
;
ce
base
de
donnée
et
le
différent
table
qui
être
utiliser
par
le
script
utiliser
PHPlib
devoir
être
créer
par
votre
soin
grâce
au
fichier
de
configuration
fournir
(
généralement
dans
/
usr
/
lib
/
phplib
/
stuff
/
)
;
ex
:
base
de
donnée
MySQL
mysql
-h
<
ma_machine_hote
>
<
ma_base
>
<
create_
dns-remplacer
gestion
du
session
alcôve
-
programmer
en
PHP
pour
gérer
un
session
,
PHPlib
utiliser
un
identifier
qui
être
transmettre
de
script
en
script
au
cours|cour
de
le
navigation
;
pour
le
session
sans
reprise
,
ce
identifier
pouvoir
être
transmettre
dans
l
’
URL
;
pour
gérer
le
reprise
de
session
,
PHPlib
pouvoir
stocker
l
’
identifier
dans
un
cookie
qu
’
il
transmettre
au
client
à
le
fin
de
chaque
script
(
fonction
page_close
(
)
)
;
gestion
du
session
alcôve
-
programmer
en
PHP
PHPlib
définir
du
classe
pour
accéder
au
base
de
donnée
et
gérer
le
session
;
vous
devoir
définir
votre
propre
classe
qui
dériver
du
classe
générique
de
PHPlib
;
ce
classe
être
généralement
stocker
dans
le
fichier
dns-remplacé
;
gestion
du
session
alcôve
-
programmer
en
PHP
tout
le
page
gérer
le
session
devoir
être
encadrer
par
:
–
page_open
(
array
(
`
`
sess
'
'
=
>
`
`
MaSession
'
'
)
)
,
et
–
page_close
(
)
;
si
on
ne
souhaiter
pas
utiliser
l
’
option
auto_prepend_file
pour
inclure
le
fichier
dns-remplacé
,
on
pouvoir
commencer
le
script
par
un
include
(
)
de
ce
fichier
;
pour
rendre
un
variable
persistant
,
on
utiliser
le
méthode
register
(
)
de
le
classe
MaSession
;
gestion
du
session
alcôve
-
programmer
en
PHP
ex
:
dns-remplacer
<
?
php
page_open
(
array
(
`
`
sess
'
'
=
>
`
`
MaSession
'
'
)
)
;
if
(
!
isset
(
$
toto
)
)
$
toto
=
;
print
++
$
toto
;
$
sess-
>
register
(
`
`
toto
'
'
)
;
page_close
(
)
;
?
>
gestion
du
session
alcôve
-
programmer
en
PHP
ex
(
suite
)
:
dns-remplacer
<
?
php
class
MaBaseSql
extends
DB_Sql
{
var
$
host
=
`
`
ma_machine_hote
'
'
;
var
$
Database
=
`
`
ma_base
'
'
;
var
$
user
=
`
`
mon_utilisateur
'
'
;
var
$
Password
=
`
`
mon_password
'
'
;
}
class
MonContainerSql
extends
CT_Sql
{
var
$
database_class
=
`
`
MaBaseSql
'
'
;
var
$
database_table
=
`
`
ma_table
'
'
;
}
gestion
du
session
alcôve
-
programmer
en
PHP
class
MaSession
extends
session
{
var
$
classname
=
`
`
MaSession
'
'
;
var
$
mode
=
`
`
cookie
'
'
;
var
$
lifetime
=
;
var
$
that_class
=
`
`
MonContainerSql
'
'
;
}
?
>
gestion
du
session
alcôve
-
programmer
en
PHP
ex
(
fin
)
:
dns-remplacer
<
?
php
if
(
!
is_array
(
$
_PHPLIB
)
)
$
_PHPLIB
[
`
`
libdir
'
'
]
=
`
`
'
'
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
db_
dns-remplacé
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
ct_
dns-remplacé
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
dns-remplacer
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
dns-remplacer
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
dns-remplacer
'
'
)
;
?
>
gestion
du
session
alcôve
-
programmer
en
PHP
session
avec
PHP4
le
principe
être
le
même
qu
’
avec
PHPlib
:
on
attribuer
à
un
nouveau
utilisateur
un
identificateur
de
session
(
SID
)
;
ce
numéro
être
transmettre
soit
sous
forme
de
cookie
soit
dans
le
URLs
;
quand
un
visiteur
accéder
à
le
page
,
PHP4
vérifier
si
un
identificateur
de
session
avoir
être
transmettre
avec
le
requête
;
gestion
du
session
alcôve
-
programmer
en
PHP
ce
vérification
pouvoir
être
faire
de
trois
manière
différent
:
–
automatiquement
si
l
’
option
dns-remplacer
_start
être
activer
dans
dns-remplacé
,
–
explicitement
par
l
’
appel
de
le
fonction
session_start
(
)
,
ou
–
implicitement
par
l
’
appel
de
le
fonction
session_register
(
)
.
dans
le
cas
où
le
numéro
de
session
être
valide
,
tout
l
’
environnement
de
celui
-ci
être
restaurer
;
gestion
du
session
alcôve
-
programmer
en
PHP
L
’
option
register_globals
de
dns-remplacé
autoriser
le
variable
global
à
être
sauvegarder
dans
un
session
;
ex
:
<
?
php
session_register
(
`
`
toto
'
'
)
;
$
toto++
;
?
>
L
’
option
track_vars
de
dns-remplacé
(
qui
être
bloquer
à
pour
le
version
de
PHP4
supérieur
à
le
)
autoriser
le
variable
de
$
HTTP_SESSION_VARS
à
être
sauvegarder
dans
un
session
;
ex
:
<
?
php
session_register
(
`
`
toto
'
'
)
;
$
HTTP_SESSION_VARS
[
`
`
toto
'
'
]
++
;
?
>
gestion
du
session
alcôve
-
programmer
en
PHP
il
exister
deux
manière
pour
transmettre
le
numéro
de
session
au
sein
de
l
’
URL
:
–
manuellement
grâce
à
le
constant
SID
qui
être
un
chaîne
de
caractère
de
le
forme
session_name
=
session_id
(
ou
vide
)
,
–
automatiquement
si
PHP4
avoir
être
compiler
avec
l
’
option
--
enable-trans-sid
.
gestion
du
session
alcôve
-
programmer
en
PHP
ex
:
compteur
de
visite
<
?
php
session_register
(
`
`
compteur
'
'
)
;
$
compteur++
;
?
>
vous
avoir
voir
ce
page
<
?
echo
$
compteur
;
?
>
fois
.
<
!
--
<
?
=
SID
?
>
servir
à
conserver
le
numéro
de
session
au
cas
où
le
cookies
être
desactiver
--
>
pour
continuer
cliquer
<
à
href
=
'
'
dns-remplacer
?
<
?
=
SID
?
>
'
'
>
ici
<
/
à
>
gestion
du
session
alcôve
-
programmer
en
PHP
le
fonction
le
plus
utiliser
être
:
–
session_start
(
)
:
créer
ou
restaurer
un
session
,
–
session_destroy
(
)
:
détruire
un
session
,
–
session_register
(
)
/
session_unregister
(
)
:
sauvegarde
/
oublier
un
variable
,
–
session_set_save_handler
(
)
:
permettre
de
définir
son
propre
fonction
de
sauvegarde
de
session
(
pour
stocker
le
donnée
dans
un
base
de
donnée
par
exemple
)
.
section
alcôve
-
programmer
en
PHP
autre
fonctionnalité
autre
fonctionnalité
alcôve
-
programmer
en
PHP
objectif
de
le
section
récupération
et
traitement
du
erreur
;
le
cookies
.
autre
fonctionnalité
alcôve
-
programmer
en
PHP
récupération
et
traitement
du
erreur
il
exister
type
d
’
erreur
et
d
’
alerte
PHP
:
–
E_ERROR
(
)
:
erreur
d
’
exécution
–
E_WARNING
(
)
:
alerte
–
E_PARSE
(
)
:
erreur
d
’
analyser
–
E_NOTICE
(
)
:
note
(
alerte
qui
pouvoir
être
ignorer
)
pour
définir
un
niveau
d
’
erreur
,
on
ajouter
le
chiffre
du
erreur
que
l
’
on
souhaiter
prendre
en
compte
(
bitmask
par
défaut
=
+
+
)
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
ce
niveau
pouvoir
être
changer
de
trois
manière
:
–
directif
error_reporting
dans
dns-remplacé
/
dns-remplacer
,
–
directif
php3_error_reporting
/
error_reporting
/
error_reporting
dans
dns-remplacé
,
–
fonction
error_reporting
(
)
.
autre
fonctionnalité
alcôve
-
programmer
en
PHP
tout
le
expression
PHP
pouvoir
être
appeler
avec
le
préfixe
@
qui
permettre
d
’
ignorer
le
rapport
d
’
erreur
pour
ce
fonction
particulier
;
si
un
erreur
survenir
dans
un
tel
expression
,
et
que
l
’
option
track_errors
être
activer
dans
dns-remplacé
/
dns-remplacer
,
on
retrouver
le
message
d
’
erreur
dans
le
variable
global
$
php_errormsg
;
le
fonction
error_reporting
(
)
établir
le
niveau
d
’
erreur
à
prendre
en
compte
et
renvoyer
l
’
ancien
niveau
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
le
fonction
error_log
(
)
envoyer
un
message
d
’
erreur
:
–
dans
le
logs
du
serveur
,
–
à
un
port
TCP
,
ou
–
à
un
fichier
.
elle
prendre
comme
paramètre
:
–
message
:
message
qui
devoir
être
envoyer
,
–
message_type
:
type
de
transmission
choisir
:
:
système
standard
de
log
de
PHP
,
:
mail
,
:
machine
distant
(
TCP
/
IP
)
,
ou
:
fichier
local
.
ex
:
error_log
(
`
`
alerte
rouge
'
'
,
,
'
'
webmaster
@
dns-remplacer
'
'
)
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
le
cookies
le
cookies
être
un
mécanisme
d
’
enregistrement
d
’
information
sur
le
disque
du
client
mais
aussi
de
relecture
de
ce
information
;
ce
système
permettre
d
’
authentifier
et
de
suivre
le
visiteur
;
PHP
supporter
le
cookies
de
manière
transparent
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
pour
envoyer
un
cookie
,
on
utiliser
le
commande
setcookie
(
)
;
le
Cookies
faire
partie
de
l
’
entêter
HTTP
,
ce
qui
imposer
que
setcookie
(
)
soit
appeler
avant
tout
affichage
sur
le
client
(
idem
header
(
)
)
;
avec
PHP4
,
on
pouvoir
contourner
ce
limitation
en
bufferisant
le
sortie
standard
grâce
à
le
fonction
ob_start
(
)
puis
en
libérer
celui
-ci
grâce
à
le
fonction
ob_end_flush
;
on
pouvoir
aussi
indiquer
à
PHP4
de
bufferiser
automatiquement
le
sorti
grâce
à
l
’
option
output_buffering
de
dns-remplacé
mais
ceci
ralentir
sensiblement
PHP4
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
tout
le
cookies
qui
être
envoyer
au
client
être
automatiquement
retourner
au
script
PHP
et
placer
dans
le
tableau
associatif
$
HTTP_COOKIE_VARS
;
seul
le
cookies
qui
correspondre
au
nom
de
domaine
de
le
page
demander
être
envoyer
au
serveur
par
le
navigateur
;
pour
affecter
plusieurs
valeur
à
un
seul
cookie
il
falloir
ajouter
[
]
au
nom
du
cookie
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
ex
:
cookie_
dns-remplacer
<
?
php
setcookie
(
`
`
MonCookie
'
'
,
`
`
contenu
'
'
,
time
(
)
+
)
;
?
>
<
HTML
>
<
body
>
<
H@card@
>
maintenant
,
vous
l
’
avoir
!
<
br
>
aller
sur
le
page
<
avoir
href
=
`
`
cookie_
dns-remplacé
'
'
>
précédent
<
/
avoir
>
.
<
/
H1
>
<
/
body
>
<
/
HTML
>
autre
fonctionnalité
alcôve
-
programmer
en
PHP
ex
(
suite
)
:
cookie_
dns-remplacer
<
HTML
>
<
body
>
<
H@card@
>
<
?
php
if
(
isset
(
$
HTTP_COOKIE_VARS
[
`
`
MonCookie
'
'
]
)
)
:
?
>
le
cookie
MonCookie
contenir
:
<
?
php
print
$
HTTP_COOKIE_VARS
[
`
`
MonCookie
'
'
]
;
else
:
?
>
vous
n
’
avoir
pas
le
cookie
MonCookie
.
<
br
>
aller
le
chercher
<
avoir
href
=
'
'
cookie_
dns-remplacé
'
'
>
ici
<
/
avoir
>
.
<
?
php
endif
;
?
>
<
/
H1
>
<
/
body
>
<
/
HTML
>
chapitre
alcôve
-
programmer
en
PHP
utilisation
avancer
utilisation
avancer
alcôve
-
programmer
en
PHP
objectif
du
chapitre
interopérabilité
avec
du
applicatifs
;
traitement
du
chaîne
de
caractère
;
fonctionnalité
utile
.
section
alcôve
-
programmer
en
PHP
interopérabilité
avec
du
applicatifs
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
objectif
de
le
section
utilisation
du
SGBDs
;
interfaçage
avec
l
’
api
apache
;
utilisation
de
LDAP
.
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
utilisation
du
SGBDs
un
grand
nombre
de
S
ystèmes
de
G
estion
de
B
ases
de
D
onnaître
(
SGBD
)
être
supporter
par
PHP
;
le
plupart
être
accessible
via
le
langage
SQL
(
S
tructured
Q
uery
L
angage
)
;
celui
-ci
permettre
,
comme
son
nom
l
’
indique
,
de
réaliser
du
requête
sur
le
base
de
donnée
et
ceci
de
façon
structurer
et
standardiser
;
L
’
utilisation
du
base
du
donnée
être
le
clé
de
voûte
du
site
dynamique
et
de
commerce
électronique
;
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
baser
SQL
supporter
:
Adabas
D
Empress
IBM
DB@card@
Informix
Interbase
mSQL
MySQL
ODBC
(
Access
,
MS-SQL
,
iODBC
...
)
oracle
PostgreSQL
Raima
Velocis
Solid
Sybase
autre
SGBD
supporter
:
–
dBase
,
–
filePro
(
lecture
seul
)
,
–
dbm
(
ndbm
,
gdbm
,
Berkeley
db
)
.
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
principal
commande
SQL
:
–
CREATE
table
:
créer
un
nouveau
table
,
–
DELETE
:
supprimer
du
ligne
d
’
un
table
,
–
insert
:
insérer
un
nouveau
ligne
dans
un
table
,
–
select
:
récupérer
du
ligne
d
’
un
table
ou
d
’
un
vue
,
–
UPDATE
:
modifier
du
valeur
dans
du
champ
.
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
ex
:
création
et
alimentation
d
’
un
table
CREATE
tabler
personne
(
Secu
INT8
NOT
NULL
PRIMARY
KEY
,
nom
VARCHAR
(
)
NOT
NULL
,
Prenom
VARCHAR
(
)
NOT
NULL
)
insert
INTO
personne
valoir
(
’
’
,
’
Smith
’
,
’
John
’
)
insert
INTO
personne
valoir
(
’
’
,
’
Gates
’
,
’
bill
’
)
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
ex
(
suite
)
:
affichage
de
le
table
et
suppression
d
’
un
entrée
select
*
FROM
personne
Secu
nom
Prenom
Smith
John
Gates
bill
DELETE
FROM
personne
WHERE
nom
=
’
Gates
’
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
chaque
base
SQL
posséder
son
propre
api
mais
le
mécanisme
de
consultation
être
globalement
le
même
pour
tout
:
–
connexion
au
serveur
de
base
de
donnée
(
machine
,
utilisateur
,
mot
de
passe
)
,
–
sélection
de
le
base
à
utiliser
(
nom
de
le
base
)
,
–
requêter
SQL
,
–
exploitation
de
le
requête
(
affichage
...
)
,
–
déconnexion
.
bien
sûr
avant
d
’
utiliser
un
base
de
donnée
particulier
,
il
falloir
s
’
assurer
que
le
librairie
correspondant
être
charger
dans
PHP
;
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
pour
un
base
de
donnée
MySQL
,
il
falloir
ajouter
le
ligne
extension
=
dns-remplacer
dans
le
fichier
dns-remplacer
/
dns-remplacer
et
vérifier
que
le
fichier
dns-remplacé
se
trouver
bien
dans
le
répertoire
extension_dir
;
le
fonction
MySQL
le
plus
couramment
utiliser
être
le
suivant
:
–
mysql_connect
(
)
:
ouvrir|ouvrer
un
connexion
à
un
serveur
MySQL
,
–
mysql_list_
*
(
)
:
retourner
le
liste
du
base
,
table
ou
champ
disponible
sur
le
serveur
,
–
mysql_select_db
(
)
:
selectionne
un
base
de
donnée
sur
le
serveur
,
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
–
mysql_query
(
)
:
envoyer
un
requête
SQL
sur
le
base
de
donnée
actif
sur
le
serveur
et
renvoyer
un
identifier
de
résultat
:
mysql_result
(
)
:
exploiter
le
résultat
,
mysql_fetch_
*
(
)
:
exploiter
et
manipuler
le
résultat
,
mysql_field_
*
(
)
:
permettre
de
naviguer
au
sein
du
résultat
.
–
mysql_close
(
)
:
ferme
le
connexion
au
serveur
MySQL
(
faire
par
défaut
à
le
fin
du
script
)
.
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
il
être
possible
de
réaliser
un
connection
persistant
à
un
serveur
MySQL
en
utiliser
le
fonction
mysql_pconnect
(
)
;
un
tel
connexion
ne
être
pas
fermer
automatiquement
à
le
fin
du
script
;
accélérer
sensiblement
le
script
quand
le
connexion
à
le
base
être
fréquent
;
le
connexion
être
refermer
automatiquement
après
un
certain
temps
d
’
inutilisation
;
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
ex
:
<
?
php
mysql_pconnect
(
`
`
dns-remplacer
'
'
,
`
`
username
'
'
,
'
'
password
'
'
)
;
mysql_select_db
(
`
`
ma_base
'
'
)
;
$
resultat
=
mysql_query
(
`
`
select
*
FROM
ma_table
'
'
)
;
if
(
$
resultat
)
:
?
>
<
table
>
<
TR
>
<
TH
>
nom
<
/
TH
>
<
TH
>
description
<
/
TH
>
<
/
TR
>
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
<
?
php
while
(
$
tableau
=
mysql_fetch_array
(
$
resultat
)
)
echo
`
`
<
TR
>
<
TD
>
'
'
,
$
tableau
[
`
`
nom
'
'
]
,
`
`
<
/
TD
>
<
TD
>
'
'
,
$
tableau
[
`
`
descr
'
'
]
,
`
`
<
/
TD
>
<
/
TR
>
\n
'
'
;
?
>
<
/
table
>
<
?
php
else
:
echo
`
`
votre
table
être
vide
'
'
;
endif
;
?
>
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
il
exister
du
outil
d
’
administration
de
base
de
donnée
entièrement
écrire
en
PHP
;
–
PHPMyAdmin
pour
le
base
MySQL
(
http
:
/
/
dns-remplacer
/
phpMyAdmin
/
)
,
–
PHPPgAdmin
pour
le
base
PostgreSQL
(
http
:
/
/
dns-remplacer
/
phpPgAdmin
/
)
.
ce
outil
être
très
utile
pour
créer
le
base
de
donnée
avant
de
la|le
utiliser
dans
du
script
PHP
;
il
être
également
pratique
pour
maintenir
le
base
;
ce
outil
être
libre
,
lui
coder
source
pouvoir
servir
de
référence
pour
accéder
au
base
de
donnée
avec
PHP
;
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
interfaçage
avec
l
’
api
apache
le
fonction
getallheaders
(
)
permettre
de
récupérer
tout
le
en-tête
HTTP
correspondre
à
le
requête
courant
;
le
en-tête
être
stocker
dans
un
tableau
associatif
;
ex
:
$
headers
=
getallheaders
(
)
;
while
(
list
(
$
header
,
$
valeur
)
=
each
(
$
headers
)
)
{
echo
`
`
$
header
:
$
valeur
<
BR
>
\n
'
'
;
}
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
utilisation
de
LDAP
L
ightweight
D
irectory
à
ccess
P
rotocol
;
protocole
normaliser
d
’
accès
au
service
d
’
annuaire
;
un
annuaire
être
équivalent
à
un
base
de
donnée
où
le
information
être
ranger
de
manière
hiérarchique
;
le
caractéristique
de
LDAP
:
–
organisation
global
,
–
standard
ouvert
,
–
extensible
et
paramétrable
,
–
stockage
de
donnée
hétérogène
,
–
sécuriser
.
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
LDAP
utiliser
un
syntaxe
à
nom
distinct
(
dn
:
distinguished
names
)
;
ex
:
dn
et
signification
dn
=
`
`
cn
=
Linus
Torvalds
,
ou
=
Devel
,
o
=
Transmeta
,
c
=
user
'
'
country
=
user
organization
=
Transmeta
organizationUnit
=
Devel
commonName
=
Linus
Torvalds
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
avant
de
pouvoir
utiliser
LDAP
avec
PHP
,
il
falloir
ajouter
le
ligne
extension
=
dns-remplacer
dans
dns-remplacé
/
dns-remplacer
et
vérifier
que
le
librairie
dns-remplacé
se
trouver
bien
dans
le
répertoire
extension_dir
;
un
séquence
type
de
consultation
/
modification
d
’
un
base
LDAP
avec
PHP
prendre
le
forme
suivant
:
–
ldap_connect
(
)
:
établir
un
connexion
avec
un
serveur
LDAP
,
–
ldap_bind
(
)
:
liaison
et
authentification
sur
le
serveur
,
–
ldap_get_
*
(
)
/
ldap_add
(
)
/
ldap_modify
(
)
...
:
consultation
/
modification
de
le
base
,
–
ldap_close
(
)
:
déconnexion
.
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
ex
:
recherche
de
tout
le
dn
commançant
par
l
<
?
php
$
ds
=
ldap_connect
(
`
`
dns-remplacer
'
'
)
;
if
(
$
ds
)
{
ldap_bind
(
$
ds
)
;
$
sr
=
ldap_search
(
$
ds
,
`
`
ou
=
Devel
,
o
=
Transmeta
,
c
=
user
'
'
,
`
`
dn
=
l
*
'
'
)
;
$
info
=
ldap_get_entrie
(
$
ds
,
$
sr
)
;
interopérabilité
avec
du
applicatifs
alcôve
-
programmer
en
PHP
for
(
$
i
=
;
$
i
<
$
info
[
`
`
count
'
'
]
;
$
i++
)
{
echo
`
`
dn
valoir
:
`
`
.
$
info
[
$
i
]
[
`
`
dn
'
'
]
.
`
`
<
br
>
'
'
;
echo
`
`
premier
entrée
cn
valoir
:
`
`
.
$
info
[
$
i
]
[
`
`
cn
'
'
]
[
]
.
`
`
<
br
>
'
'
;
echo
`
`
premier
email
valoir
:
`
`
.
$
info
[
$
i
]
[
`
`
mail
'
'
]
[
]
.
`
`
<
br
>
'
'
;
}
ldap_close
(
$
ds
)
;
}
else
{
echo
`
`
<
H@card@
>
impossible
de
se
connecter
au
serveur
LDAP
<
/
H4
>
'
'
;
}
?
>
section
alcôve
-
programmer
en
PHP
traitement
du
chaîne
de
caractère
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
objectif
de
le
section
manipulation
du
chaîne
de
caractère
;
expression
régulier
.
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
manipulation
du
chaîne
de
caractère
affichage
:
–
echo
(
)
:
affiche
un
ou
plusieurs
chaîne
séparer
par
du
virgule
,
–
print
(
)
:
afficher
un
chaîne
,
–
printf
(
)
:
afficher
un
chaîne
selon
un
chaîne
de
formatage
(
idem
langage
C
)
.
ex
:
$
nom
=
`
`
toto
'
'
;
echo
`
`
bonjour
'
'
,
$
nom
;
#
afficher
bonjour
toto
print
`
`
bonjour
$
nom
'
'
;
#
afficher
bonjour
toto
printf
(
`
`
bonjour
%
s
'
'
,
$
nom
)
;
#
afficher
bonjour
toto
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
substitution
:
–
addslashes
(
)
:
ajouter
un
backslash
devant
tout
le
caractère
spécial
,
–
stripslashes
(
)
:
enlever
le
backslashs
ajouter
par
le
fonction
addslashes
,
–
str_replace
(
)
:
remplacer
tout
le
occurrence
d
’
un
chaîne
par
un
autre
,
ex
:
print
addslashes
(
’
\
’
\
`
`
’
)
;
#
affiche
\
’
\
\
'
'
print
str_replace
(
`
`
toto
'
'
,
`
`
titi
'
'
,
`
`
bonjour
toto
!
'
'
)
;
#
afficher
bonjour
titi
!
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
découpage
:
–
explode
(
)
:
scinder
un
chaîne
en
morceau
grâce
à
un
délimiteur
,
–
implode
(
)
/
join
(
)
:
regrouper
tout
le
élément
d
’
un
tableau
dans
un
chaîne
en
ajouter
un
chaîne
de
jointure
,
–
ltrim
(
)
/
chop
(
)
:
enlever
le
espace
de
début
/
fin
de
chaîne
.
ex
:
$
composant
=
`
`
resistance
,
condensateur
,
transistor
`
`
;
$
composant
=
chop
(
$
composant
)
;
$
tableau
=
explode
(
`
`
,
`
`
,
$
composant
)
;
print
$
tableau
[
]
.
`
`
.
'
'
;
#
afficher
transistor
.
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
Web
:
–
rawurlencode
(
)
/
rawurldecode
(
)
:
encoder
/
décoder
un
chaîne
en
URL
selon
le
RFC1738
,
–
htmlspecialchar
(
)
/
htmlentities
(
)
:
convertir
tout
le
caractère
spécial
en
équivalent
HTML
.
ex
:
$
url
=
rawurlencode
(
’
bonjour
@
toi
/
toto
/
’
)
;
print
$
url
;
#
afficher
bonjour
%
40toi
%
%
2Ftoto
%
2F
$
html
=
htmlentities
(
`
`
<
'
'
)
;
print
$
html
;
#
affiche
<
mais
le
source
HTML
contenir
<
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
comparaison
:
–
parse_str
(
)
:
analyser
un
chaîne
et
en
déduire
du
variable
et
leur
valeur
,
–
strcmp
(
)
:
comparaison
sensible
à
le
casse
,
–
strlen
(
)
:
retourner
le
longueur
de
le
chaîne
.
ex
:
parse_str
(
`
`
toto
=
&
tab
[
]
=
Ceci+fonctionne
&
tab
[
]
=
aussi
'
'
)
;
print
`
`
$
toto
,
$
tab
[
]
,
$
tab
[
]
'
'
;
affiche
,
ceci
fonctionner
,
aussi
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
casse
:
–
strtolower
(
)
/
strtoupper
(
)
:
mettre
tout
le
caractère
en
minuscule
/
majuscule
,
–
ucfirst
(
)
:
force
le
premier
caractère
d
’
un
chaîne
en
majuscule
,
–
ucwords
(
)
:
force
le
premier
caractère
de
chaque
mot
d
’
un
chaîne
en
majuscule
.
ex
:
$
nom
=
`
`
bill
GaTeZ
'
'
;
print
$
nom
=
strtolower
(
$
nom
)
;
#
afficher
bill
gatez
print
strtolower
(
$
nom
)
;
#
afficher
bill
Gatez
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
expression
régulier
le
expression
régulier
(
abrv
:
regex
)
être
utiliser
pour
faire
du
manipulation
complexe
sur
le
chaîne
de
caractère
(
ex
:
substitution
ou
recherche
complexe
)
;
PHP
gérer
deux
type
d
’
expression
régulier
:
–
le
expression
régulier
avancer
de
POSIX
,
et
–
le
expression
régulier
modifier
du
langage
Perl
.
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
principe
de
base
du
expression
régulier
:
–
recherche
de
séquence
de
caractère
au
sein
d
’
un
chaîne
,
–
besoin
d
’
expression
pour
décrire
ce
séquence
,
–
utilisation
d
’
un
syntaxe
puissant
,
–
équivaloir
à
le
définition
de
condition
de
recherche
.
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
signification
du
principal
expression
régulier
:
–
c
:
caractère
c
(
sauf
caractère
spécial
)
,
–
\c
:
caractère
spécial
c
(
sauf
chiffre
de
à
)
,
–
ˆ
:
début
de
le
ligne
,
–
$
:
fin
de
le
ligne
,
–
.
:
n
’
importer
quel
caractère
,
–
[
s
]
:
caractère
appartenir
à
l
’
ensemble
s
,
où
s
être
un
suite
de
caractère
et
/
ou
un
échelle
de
caractère
(
[
c-c
]
)
,
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
–
[
ˆs
]
:
caractère
n
’
appartenir
pas
à
l
’
ensemble
s
,
–
r
*
:
,
ou
plusieurs
occurrence
successif
de
l
’
expression
régulier
r
,
–
rx
:
r
,
suivre
de
l
’
expression
régulier
x
(
concaténation
)
,
–
r
{
m
,
n
}
:
un
nombre
(
entre
m
et
n
)
d
’
occurrence
successif
de
r
,
–
r
{
m
}
:
exactement
m
occurrence
successif
de
r
,
–
r
{
m
,
}
:
au
moins
m
occurrence
successif
de
l
’
expression
régulier
r
.
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
utilisation
avec
PHP
:
–
ereg
(
)
/
eregi
(
)
:
expression
régulier
standard
sensible
/
insensible
à
le
casse
,
–
ereg_replace
(
)
/
eregi_replace
(
)
:
expression
régulier
de
substitution
sensible
/
insensible
à
le
casse
,
–
split
(
)
:
découper
un
chaîne
grâce
à
un
délimiteur
définir
par
un
expression
régulier
,
–
sql_regcase
(
)
:
préparer
un
expression
régulier
insensible
à
le
casse
(
utile
pour
le
fonction
ne
supporter
pas
le
recherche
insensible
à
le
casse
)
.
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
ex
:
<
?
php
$
personne
=
`
`
nom
:
Smith
,
prénom
:
John
,
age
:
,
divers
:
blond
'
'
;
if
(
ereg
(
`
`
blond
'
'
,
$
personne
)
)
print
`
`
ce
personne
être
blond
.
'
'
;
#
afficher
ce
personne
être
blond
.
if
(
eregi
(
`
`
age
:
*
(
[
]
+
)
'
'
,
$
personne
,
$
resultat
)
)
print
`
`
ce
personne
avoir
$
resultat
[
]
an
.
'
'
;
else
print
`
`
ce
personne
n
’
avoir
pas
d
’
age
.
'
'
;
#
afficher
ce
personne
avoir
an
.
traitement
du
chaîne
de
caractère
alcôve
-
programmer
en
PHP
print
eregi_replace
(
`
`
(
age
:
)
*
[
]
+
.
*
'
'
,
`
`
\@card@
'
'
,
$
personne
)
;
#
afficher
nom
:
Smith
,
prénom
:
John
,
age
:
print
sql_regcase
(
`
`
John
Smith
'
'
)
;
#
affiche
[
Jj
]
[
Oo
]
[
Hh
]
[
Nn
]
[
Ss
]
[
Mm
]
[
Ii
]
[
Tt
]
[
Hh
]
?
>
section
alcôve
-
programmer
en
PHP
fonctionnalité
utile
fonctionnalité
utile
alcôve
-
programmer
en
PHP
objectif
de
le
section
manipulation
et
traitement
du
fichier
;
argument
et
gestion
du
URLs
;
création
dynamique
d
’
image
;
fonction
mathématique
;
PHP
et
XML
;
Templates
avec
PHPlib
;
utilisation
de
PHP
comme
langage
de
script
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
manipulation
et
traitement
du
fichier
quel
que
être
le
langage
de
programmation
,
le
gestion
du
fichier
être
toujours
important
pour
le
stockage
de
donnée
;
le
gestion
du
fichier
en
PHP
être
issu
du
langage
C
mais
elle
comporter
quelque
fonction
supplémentaire
très
utile
(
comme
le
gestion
du
fichier
distant
par
exemple
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
le
principal
fonction
de
manipulation
de
fichier
être
le
suivant
:
–
fopen
(
)
:
ouverture
d
’
un
fichier
(
possibilité
de
fournir
un
URL
HTTP
ou
FTP
pour
le
fichier
distant
)
,
–
fclose
(
)
:
fermeture
du
fichier
,
–
fpassthru
(
)
:
lire
un
fichier
en
entier
et
l
’
affiche
,
–
fread
(
)
/
fgets
(
)
:
lire
n
caractère
dans
le
fichier
,
–
fwrite
(
)
/
fputs
(
)
:
écrire
un
chaîne
dans
un
fichier
,
–
rewind
(
)
/
fseek
(
)
/
ftell
(
)
:
positionnement
au
sein
du
fichier
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
:
affichage
de
l
’
imager
dns-remplacer
<
?
php
Header
(
`
`
Content-type
:
image
/
png
'
'
)
;
if
(
!
$
fd
=
fopen
(
`
`
dns-remplacer
'
'
,
`
`
rb
'
'
)
)
echo
`
`
impossible
d
’
ouvrir
le
fichier
.
'
'
;
else
fpassthru
(
$
fd
)
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
Ex2
:
fichier
de
log
<
?
php
...
if
(
!
$
fd
=
fopen
(
`
`
mon_
dns-remplacé
'
'
,
`
`
avoir
'
'
)
)
echo
`
`
impossible
d
’
ouvrir
le
fichier
.
'
'
;
else
fputs
(
$
fd
,
`
`
erreur
:
$
errormsg\n
'
'
)
;
#
Ecrit
le
dernier
message
d
’
erreur
renvoyer
dans
mon_
dns-remplacer
...
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
le
principal
fonction
de
gestion
de
fichier
être
le
suivant
:
–
file_exists
(
)
:
test
de
l
’
existence
d
’
un
fichier
,
–
copy
(
)
:
copier
un
fichier
,
–
rename
(
)
:
renommer
un
fichier
,
–
unlink
(
)
:
effacer
définitivement
un
fichier
.
ex
:
<
?
php
$
fichier
=
`
`
dns-remplacer
'
'
if
(
file_exists
(
$
fichier
)
)
copy
(
$
fichier
,
`
`
/
tmp
/
'
'
.
$
fichier
)
;
else
echo
`
`
impossible
d
’
ouvrir
le
fichier
.
'
'
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
le
principal
fonction
de
manipulation
du
répertoire
être
le
suivant
:
–
chdir
(
)
:
changement
de
répertoire
courir
,
–
opendir
(
)
:
ouverture
d
’
un
répertoire
,
–
closedir
(
)
:
fermeture
du
répertoire
,
–
readdir
(
)
:
lire
l
’
entrée
suivant
dans
le
répertoire
,
–
rewinddir
(
)
:
revenir
au
début
du
répertoire
,
–
mkdir
(
)
:
créer
un
nouveau
répertoire
,
–
rmdir
(
)
:
supprimer
un
répertoire
,
–
dir
(
)
:
instanciation
d
’
un
objet
répertoire
pour
un
manipulation
objet
de
celui
-ci
,
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
:
équivaloir
de
le
commande
ls
<
?
php
chdir
(
`
`
/
tmp
'
'
)
;
$
dir
=
dir
(
`
`
.
'
'
)
;
$
dir-
>
rewind
(
)
;
while
(
$
fichier
=
$
dir-
>
read
(
)
)
echo
`
`
$
fichier
<
br
>
'
'
;
$
dir-
>
clore
(
)
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
argument
et
gestion
du
URLs
le
gestion
du
URLs
être
important
pour
encoder
/
décoder
du
information
au
sein
même
de
celui
-ci
;
on
pouvoir
utiliser
l
’
URL
pour
transmettre
du
information
(
variable
...
)
d
’
un
script
à
l
’
autre
;
ce
mécanisme
pouvoir
constituer
un
mini-gestion
de
session
par
exemple
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
le
principal
fonction
utiliser
pour
le
gestion
du
URLs
être
le
suivant
:
–
parse_url
:
analyser
un
URL
et
retourner
son
composant
sous
forme
d
’
un
tableau
associatif
,
–
urlencode
/
urldecode
:
encoder
/
décoder
un
chaîne
en
remplacer
le
caractère
spécial
par
du
%
xx
et
le
espace
par
du
+
(
application
/
x-www-form-urlencode
)
,
–
base64_encode
/
base64_decode
:
encoder
/
décoder
un
chaîne
en
base64
pour
permettre
à
certain
système
de
manipuler
le
information
binaire
sur
bit
(
ex
:
corps
de
mail
)
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
:
transmission
d
’
un
variable
par
l
’
URL
<
?
php
$
chaine
=
`
`
bonjour
tout
le
monde
?
'
'
;
?
>
<
à
href
=
'
'
mon-cgi
?
chaine
=
<
?
php
echo
urlencode
(
$
chaine
)
;
?
>
'
'
>
envoyer
<
/
à
>
appeler
le
script
CGI
mon-cgi
avec
l
’
URL
'
'
mon-cgi
?
chaine
=
Bonjour+tout+le+monde+
%
3F
'
'
fonctionnalité
utile
alcôve
-
programmer
en
PHP
création
dynamique
d
’
image
PHP
n
’
être
pas
limiter
à
le
création
de
fichier
HTML
,
il
pouvoir
aussi
servir
à
générer
dynamiquement
du
image
(
PNG
,
JPEG
,
GIF
)
;
ce
image
pouvoir
être
émettre
directement
vers
le
client
ou
sauvegarder
sur
le
serveur
;
elle
être
très
pratique
pour
dessiner
rapidement
du
graphique
à
partir
de
donnée
dynamique
(
ex
:
statistique
du
site
,
résultat
d
’
un
sondage
...
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
pour
générer
du
image
,
PHP
utiliser
le
librairie
GD
;
celui
-ci
se
composer
d
’
un
ensemble
de
fonction
qui
permettre
de
créer
du
image
dynamique
de
qualité
avec
très
peu
de
code
;
historiquement
,
le
format
GIF
être
le
premier
à
avoir
être
supporter
mais
aujourd
’
hui
on
lui
prefère
le
format
JPEG
et
surtout
PNG
,
le
format
le
plus
ouvrir
de
tout
;
bien
sûr
avant
d
’
utiliser
ce
librairie
il
falloir
au
préalable
la
charger
dans
PHP
en
ajouter
le
ligne
extension
=
dns-remplacer
dans
le
fichier
dns-remplacer
/
dns-remplacer
et
en
vérifier
que
le
fichier
dns-remplacé
se
trouver
bien
dans
votre
extension_dir
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
L
’
api
être
très
intuitif
:
–
ImageCreate
*
(
)
:
pour
créer
un
image
blanc
ou
à
partir
d
’
un
image
existant
,
–
ImageColor
*
(
)
:
pour
définir
un
couleur
et
le
transparence
,
–
ImageString
(
)
:
pour
écrire
du
texte
,
–
image
<
former
>
(
)
:
pour
dessiner
du
forme
géométrique
connaître
(
rectangle
,
arc
,
ligne
,
polygone
...
)
,
–
ImageFill
*
(
)
:
pour
colorier
du
forme
,
–
image
<
attribut
>
(
)
:
pour
connaître
un
attribut
(
largeur
,
hauteur
,
taille
...
)
de
l
’
image
,
–
image
<
type
>
(
)
:
pour
envoyer
un
image
de
type
PNG
,
JPEG
ou
GIF
au
navigateur
,
–
ImageDestroy
(
)
:
pour
détruire
l
’
image
...
fonctionnalité
utile
alcôve
-
programmer
en
PHP
tout
le
fonction
de
l
’
api
manipuler
un
pointeur
sur
l
’
image
courant
;
ce
pointeur
être
retourner
par
le
fonction
ImageCreate
*
(
)
à
le
création
de
l
’
image
;
typiquement
,
on
créer
un
fichier
PHP
dont
le
seul
but
être
de
retourner
un
image
dynamique
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
le
argument
pour
créer
l
’
image
être
alors
passer
dans
l
’
URL
à
le
manière
du
formulaire
en
mode
GET
par
exemple
(
ex
:
<
IMG
src
=
`
`
dns-remplacer
?
texte
=
TITRE+BOUTON
'
'
>
)
le
fichier
devoir
retourner
un
en-tête
correspondre
à
l
’
image
retourner
(
ex
:
Header
(
`
`
Content-type
:
image
/
gif
'
'
)
;
)
afin
que
le
navigateur
pouvoir
correctement
l
’
afficher
;
on
pouvoir
aussi
créer
un
fonction
qui
générer
l
’
image
mais
ce
technique
être
moins
facile
à
utiliser
car
il
falloir
s
’
occuper
de
stocker
l
’
image
puis
éventuellement
de
la
détruire
par
le
suite
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
:
génération
dynamique
de
bouton
,
dns-remplacer
<
?
php
Header
(
`
`
Content-type
:
image
/
gif
'
'
)
;
if
(
!
isset
(
$
texte
)
)
$
texte
=
`
`
'
'
;
$
image
=
ImageCreateFromGif
(
`
`
image
/
dns-remplacer
'
'
)
;
$
couleur
=
ImageColorAllocate
(
$
image
,
,
,
)
;
$
espace
=
(
ImageSX
(
$
image
)
-
*
strlen
(
$
texte
)
)
/
;
ImageString
(
$
image
,
,
$
espace
,
,
$
texte
,
$
couleur
)
;
ImageGif
(
$
image
)
;
ImageDestroy
(
$
image
)
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
avant
:
<
IMG
src
=
`
`
dns-remplacer
?
texte
=
Mon+titre
'
'
>
après
:
fonctionnalité
utile
alcôve
-
programmer
en
PHP
fonction
mathématique
il
exister
deux
type
de
fonction
mathématique
dans
PHP
:
–
le
fonction
standard
,
qui
s
’
appliquer
sur
du
entier
long
(
double
)
,
et
–
le
fonction
de
précision
où
le
nombre
être
représenter
par
du
chaîne
de
caractère
.
le
constant
M_PI
être
définir
pour
le
nombre
pi
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
le
fonction
standard
le
plus
utiliser
être
le
suivant
:
–
abs
(
)
:
valeur
absolu
,
–
number_format
(
)
:
formater
un
nombre
par
groupe
de
millier
,
–
round
(
)
/
ceil
(
)
/
floor
(
)
:
arrondir
,
–
max
(
)
/
min
(
)
:
encadrement
,
–
pow
(
)
/
sqrt
(
)
:
puissance
,
–
exp
(
)
/
log
(
)
/
log10
(
)
:
exponentiel
et
logarithme
,
fonctionnalité
utile
alcôve
-
programmer
en
PHP
–
cos
(
)
/
sin
(
)
/
tan
(
)
/
acos
(
)
/
asin
(
)
/
atan
(
)
:
trigonométrie
,
–
base_convert
(
)
/
BinDec
(
)
/
DecBin
(
)
/
HexDec
(
)
/
DecHex
(
)
/
OctDec
(
)
/
DecOct
(
)
:
changement
de
base
,
–
rand
(
)
/
srand
(
)
/
getrandmax
(
)
:
nombre
pseudo-aléatoire
(
le
fonction
mt_
*
être
meilleur
et
plus
rapide
)
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
:
$
x
=
;
print
sqrt
(
pow
(
$
x
,
)
)
.
`
`
=
`
`
.
abs
(
$
x
)
;
#
afficher
=
print
number_format
(
round
(
)
,
,
`
`
,
'
'
,
'
'
`
`
)
;
#
afficher
,
print
cos
(
M_PI
/
)
.
`
`
=
`
`
.
/
sqrt
(
)
;
#
afficher
=
fonctionnalité
utile
alcôve
-
programmer
en
PHP
PHP
et
XML
e
X
tensible
M
arkup
L
anguage
;
standard
ouvrir
de
description
de
donnée
;
utiliser
du
marqueur
qui
,
à
le
différence
du
autre
ML
,
décrire
le
donnée
et
non
pas
le
manière
dont
celui
-ci
devoir
être
afficher
(
ex
:
HTML
)
;
L
’
utilisation
de
XML
avec
PHP
nécessiter
l
’
installation
de
le
librairie
Expat
(
http
:
/
/
dns-remplacer
/
xml
/
)
et
le
compilation
de
PHP
avec
l
’
option
--
with-xml
;
depuis
le
version
d
’
apache
,
le
librairie
Expat
être
directement
intégrer
au
serveur
web
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
le
module
XML
permettre
de
créer
un
parseur
XML
appeler
du
fonction
définir
par
l
’
utilisateur
et
permettre
de
traiter
le
donnée
inclus
dans
le
tags
XML
;
fonction
principal
:
–
xml_parser_create
(
)
:
créer
un
parseur
XML
et
retourner
un
descripteur
de
parseur
qui
être
utiliser
par
le
autre
fonction
,
–
xml_set_element_handler
(
)
:
modifier
le
option
associer
à
un
parseur
(
sensibilité
à
le
casse
,
encodage
du
caractère
...
)
,
–
xml_set_character_data_handler
(
)
:
définir
le
fonction
à
appeler
à
l
’
ouverture
et
à
le
fermeture
d
’
un
tag
XML
spécifique
,
–
xml_parse
(
)
:
le
parseur
XML
,
–
xml_parser_free
(
)
:
élimination
d
’
un
parseur
XML
de
le
mémoire
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
on
ne
pouvoir
pas
directement
manipuler
un
parseur
XML
à
l
’
intérieur
d
’
un
objet
PHP
;
il
falloir
pour
cela
définir
un
parseur
comme
variable
d
’
instance
de
l
’
objet
et
passer
l
’
objet
par
référence
à
le
fonction
xml_set_object
(
)
;
ex
:
xml_set_object
(
parser
,
&
object
)
;
par
le
suite
,
il
falloir
utiliser
le
fonction
xml_set_
*
(
)
avec
$
this-
>
parser
comme
identifier
de
parseur
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
utilisation
du
template
PHPlib
PHPlib
proposer
un
classe
Templat
permettre
de
séparer
le
squelette
HTML
d
’
un
page
,
du
traitement
du
donnée
permettre
de
modifier
dynamiquement
ce
page
;
le
partie
dynamique
de
le
page
être
représenter
dans
le
code
HTML
par
du
identifiants
entourer
d
’
accolade
;
ce
identifiants
être
remplacer
par
leur
valeur
calculer
par
le
script
PHP
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
:
le
template
(
dns-remplacer
)
<
html
>
<
head
>
<
title
>
{
LETITRE
}
<
/
title
>
<
/
head
>
<
body
>
<
br
>
un
exemple
de
variable
:
{
ici
}
<
/
body
>
<
/
html
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
(
suite
)
:
code
PHP
utiliser
le
template
dns-remplacer
include
(
`
`
dns-remplacer
'
'
)
$
tmpl
=
new
Template
(
`
`
rep-template
'
'
)
;
$
tmpl-
>
set_file
(
`
`
main
'
'
,
`
`
dns-remplacer
'
'
)
;
$
tmpl-
>
set_var
(
array
(
'
'
LETITRE
'
'
=
>
'
'
exemple
de
titre
'
'
,
'
'
ici
'
'
=
>
'
'
un
message
'
'
)
)
;
$
tpml-
>
parse
(
`
`
out
'
'
,
`
`
main
'
'
)
;
$
tmpl-
>
p
(
`
`
out
'
'
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
fonction
associer
au
template
:
–
template
(
)
:
retourner
un
objet
Template
associer
au
répertoire
où
être
stocker
le
squelette
HTML
,
–
set_file
(
)
:
associer
un
fichier
template
à
un
variable
qui
représenter
celui
-ci
,
–
set_var
(
)
:
affecter
un
valeur
à
un
nom
de
variable
du
template
,
ce
deux
dernier
fonction
pouvoir
aussi
être
appeler
avec
comme
unique
argument
un
tableau
contenir
du
pair
clef
/
valeur
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
–
parse
(
)
:
ce
fonction
substituer
le
valeur
de
tout
le
variable
définir
dans
le
variable
de
référence
puis
stocker
(
ou
ajouter
)
le
résultat
dans
le
variable
cible
,
–
p
(
)
:
ce
fonction
afficher
le
valeur
de
le
variable
passée
en
argument
dans
le
navigateur
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
afin
de
pouvoir
traiter
du
élément
répétitif
(
tableau
,
liste
de
sélection
...
)
,
on
pouvoir
déclarer
du
bloc
dans
le
variable
manipuler
par
le
classe
Templat
;
le
définition
utiliser
le
commentaire
HTML
;
ex
:
<
form
action
=
`
`
{
PHPSELF
}
'
'
>
<
select
name
=
`
`
variable
'
'
>
<
!
--
BEGIN
monbloc
-
>
<
option
>
{
MUL
}
<
!
--
END
monbloc
-
>
<
/
select
>
<
br
>
<
input
type
=
'
'
submit
'
'
>
<
/
form
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
(
suite
)
:
$
tmpl
=
new
Template
(
`
`
rep-template
'
'
)
;
$
tmpl-
>
set_file
(
`
`
main
'
'
,
`
`
dns-remplacer
'
'
)
;
$
tmpl-
>
set_bloc
(
`
`
main
'
'
,
`
`
monbloc
'
'
,
`
`
toto
'
'
)
;
$
tmpl-
>
set_var
(
`
`
PHPSELF
'
'
,
$
PHP_SELF
)
;
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
$
tmpl-
>
set_var
(
`
`
MUL
'
'
,
$
i
)
;
$
tmpl-
>
parse
(
`
`
toto
'
'
,
`
`
monbloc
'
'
,
true
)
;
}
$
tpml-
>
parse
(
`
`
out
'
'
,
`
`
main
'
'
)
;
$
tmpl-
>
p
(
`
`
out
'
'
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
un
fois
un
bloc
défini
,
on
pouvoir
le
répéter
en
spécifier
true
comme
dernier
argument
de
le
fonction
parse
;
le
fonction
set_block
(
$
parent
,
$
blocname
,
$
name
)
indique
que
le
variable
$
parent
contenir
un
bloc
nommer
$
blocname
.
ce
fonction
enlever
le
bloc
de
$
parent
et
le
remplacer
par
un
variable
$
name
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
utilisation
de
PHP
comme
langage
de
script
on
pouvoir
utiliser
tout
le
puissance
et
le
richesse
du
fonction
de
PHP
pour
faire
du
script
non
orienter
web
;
il
falloir
avoir
au
préalable
compiler
PHP
comme
CGI
(
le
cohabitation
entre
plusieurs
forme
de
PHP
être
possible
sur
un
même
machine
)
;
le
commande
php
donner
alors
accès
à
un
shell
PHP
où
chaque
commander
PHP
taper
être
interpréter
immédiatement
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
bien
sûr
,
seul
le
commande
encadrer
par
le
<
?
php
...
?
>
être
interpréter
le
autre
étant
afficher
telles-quelles
;
L
’
option
-q
permettre
d
’
éviter
d
’
avoir
un
en-tête
HTTP
envoyer
avant
le
premier
affichage
;
pour
réaliser
du
script
classique
en
PHP
il
suffire
de
faire
commencer
le
fichier
par
le
ligne
:
#
!
/
usr
/
bin
/
php
<
version
>
-q
fonctionnalité
utile
alcôve
-
programmer
en
PHP
ex
:
script
d
’
invite
login
,
dns-remplacer
#
!
/
usr
/
bin
/
php
<
version
>
-q
bonjour
monsieur
<
?
php
echo
$
user
,
`
`
\n
'
'
?
>
,
vous
être
sur
le
machine
<
?
php
echo
$
HOSTNAME
,
'
'
\n
'
'
?
>
en
vérifier
que
le
variable
$
user
et
$
HOSTNAME
être
bien
exporter
par
le
shell
et
en
rendre
le
script
dns-remplacer
exécutable
(
chmod
+x
dns-remplacé
)
le
commande
.
/
dns-remplacé
affiche
:
bonjour
monsieur
nom_login
,
vous
être
sur
le
machine
nom_machine
.
section
alcôve
-
programmer
en
PHP
conclusion
conclusion
alcôve
-
programmer
en
PHP
objectif
du
chapitre
conseil
de
programmation
PHP
;
L
’
avenir
de
PHP
;
référence
;
glossaire
.
conclusion
alcôve
-
programmer
en
PHP
conseil
de
programmation
PHP
penser
en
matière
de
réutilisabilité
du
code
;
ne
pas
lésiner
sur
le
commentaire
,
il
aider
le
autre
à
comprendre
votre
code
(
on
être
rarement
seul
à
travailler
sur
un
site
web
)
;
segmenter
le
code
PHP
pour
le
rendre
plus
clair
:
–
préférer
le
fonction
court
et
mono-tâches
,
–
utiliser
du
fichier
différent
...
conclusion
alcôve
-
programmer
en
PHP
essayer
de
séparer
au
maximum
le
aspect
graphique
(
charte
graphique
,
feuille
de
style
...
)
,
contenir
(
gestion
du
donnée
dynamique
...
)
et
mettre
en
forme
(
affichage
du
donnée
dynamique
...
)
:
–
utilisation
de
fichier
d
’
en-tête
,
de
barre
de
navigation
et
de
pied
de
page
séparer
,
–
utilisation
de
fichier
contenir
le
classe
manipuler
par
le
script
...
conclusion
alcôve
-
programmer
en
PHP
L
’
avenir
de
PHP
de
plus
en
plus
utiliser
sur
Internet
(
plusieurs
million
de
domaine
différent
)
;
PHP4
depuis
le
début
de
l
’
année
;
ce
version
être
néanmoins
contester
(
ex
:
FSF
)
à
cause
de
son
nouveau
licence
;
elle
apporter
cependant
plus
de
rapidité
(
ex
:
analyseur
zend
)
et
de
nouveau
fonctionnalité
natif
(
ex
:
gestion
du
session
...
)
;
conclusion
alcôve
-
programmer
en
PHP
référencer
livre
:
–
Professional
PHP
Programming
(
Wrox
)
,
–
programmation
Web
avec
PHP
(
Eyrolle
)
,
–
PHP
,
précis
&
concis
(
O
’
Reilly
)
,
–
programmation
PHP
(
CampusPress
)
...
conclusion
alcôve
-
programmer
en
PHP
URLs
:
–
le
site
officiel
de
PHP
(
http
:
/
/
dns-remplacer
)
,
–
documentation
officiel
en
anglais
(
http
:
/
/
dns-remplacer
/
manual
)
,
–
traduction
français
de
le
documentation
officiel
(
http
:
/
/
dns-remplacer
/
doc
)
,
–
le
site
de
zend
(
http
:
/
/
dns-remplacer
)
,
–
développement
PHP
/
MySQL
chez
Nexen
(
http
:
/
/
dns-remplacer
)
conclusion
alcôve
-
programmer
en
PHP
–
projet
libre
autour
de
PHP
(
http
:
/
/
dns-remplacer
)
,
–
article
technique
sur
PHP
(
http
:
/
/
dns-remplacer
/
)
,
–
le
site
officiel
de
PHPlib
(
http
:
/
/
dns-remplacer
)
,
–
site
francophone
pour
l
’
aider
à
le
programmation
en
PHP
(
http
:
/
/
dns-remplacer
)
...
conclusion
alcôve
-
programmer
en
PHP
glossaire
–
apache
:
serveur
web
(
HTTP
)
le
plus
utiliser
sur
Internet
,
–
Browser
:
navigateur
/
butineur
de
page
web
,
–
CGI
(
Common
Gateway
interface
)
:
interface
de
communication
pour
le
création
de
programme
capable
d
’
être
exécuter
par
un
serveur
HTTP
,
elle
permettre
le
création
dynamique
de
page
du
côté
serveur
,
–
GET
:
méthode
HTTP
de
transmission
de
formulaire
via
le
URLs
(
donnée
encoder
dans
l
’
URL
)
,
conclusion
alcôve
-
programmer
en
PHP
–
GIF
(
Graphics
interchanger
format
)
:
format
breveté
d
’
image
compresser
,
très
utiliser
sur
le
web
,
–
HTML
(
Hyper
Text
Markup
Language
)
:
langage
de
description
structural
de
document
,
baser
sur
le
notion
d
’
environnement
et
de
délimiteur
,
utiliser
pour
créer
le
page
web
,
–
HTTP
(
HyperText
Transfer
Protocol
)
:
protocole
de
transfert
de
fichier
utiliser
sur
le
web
,
–
HTTPD
(
HTTP
Daemon
)
:
partie
principal
d
’
un
serveur
web
qui
échanger
,
via
HTTP
,
du
fichier
avec
le
client
web
(
navigateur
)
,
conclusion
alcôve
-
programmer
en
PHP
–
JPEG
:
format
d
’
image
compresser
très
utiliser
sur
le
web
,
–
LDAP
(
Lightweight
Directory
Access
Protocol
)
:
protocole
normaliser
d
’
accès
au
service
d
’
annuaire
,
–
PHP
(
PHP
:
Hypertext
PreProcessor
)
:
langage
de
script
côté
serveur
,
embarquer
dans
le
page
HTML
,
–
PNG
(
portable
Network
Graphics
)
:
format
libre
d
’
image
compresser
créer
pour
fournir
un
alternative
libre
au
format
GIF
,
conclusion
alcôve
-
programmer
en
PHP
–
POST
:
méthode
HTTP
de
transmission
de
formulaire
dans
le
corps
de
le
requête
(
alternatif
à
le
méthode
GET
)
,
–
Regex
:
raccourcir
pour
Regular
expression
,
syntaxe
pour
réaliser
du
manipulation
complexe
sur
le
chaîne
de
caractère
,
–
session
PHP
:
mécanisme
de
sauvegarde
d
’
information
entre
deux
accès
(
requête
HTTP
)
,
–
SGBD
:
système
de
gestion
de
base
de
donnée
,
conclusion
alcôve
-
programmer
en
PHP
–
SQL
(
Structured
Query
langage
)
:
langage
structurer
de
requête
pour
interroger
du
SGBDs
,
–
URL
(
Uniform
Resource
Locator
)
:
syntaxe
utiliser
pour
localiser
un
ressource
(
fichier
)
sur
le
web
(
ex
:
http
:
/
/
dns-remplacer
/
dns-remplacer
)
–
WWW
(
World
Wide
Web
)
:
aussi
appeller
web
,
c
’
être
le
nom
donner
au
réseau
Internet
,
–
XML
(
extensible
Markup
Language
)
:
standard
ouvrir
de
description
de
donnée
baser
sur
l
’
utilisation
de
marqueur
decriver
le
donnée
qu
’
il
encapsuler
.
