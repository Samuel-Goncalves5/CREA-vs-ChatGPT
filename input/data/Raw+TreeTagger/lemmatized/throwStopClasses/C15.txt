cours|cour
d
’
initiation
PHP
initiation
à
programmation
de
page
web
en
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
tabler
MATIERES
.
PRE-REQUIS
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
introduction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
être
PHP
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
historique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
à
adresser
PHP
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
marche
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
nouveau
génération
Web
:
site
Web
actif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
technologie
dynamique
côté
client
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
technologie
côté
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
de
intérêt
traitement
côté
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
architecture
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
installation
manuel
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
installation
de
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
configuration
de
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
d
’
apache
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
configuration
d
’
apache
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
lancement
arrêt
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
test
de
configuration
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
interfaçage
avec
SGBD
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
base
de
donnée
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
installation
rapide
avec
EasyPHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
d
'
EasyPHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
d
'
EasyPHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
installation
support
de
cours|cour
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
langage
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
règle
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variable
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
type
de
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
constant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
type
booléen
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variable
type
entier
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
nombre
à
virgule
flottant
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
type
chaîne
de
caractère
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
traitement
variable
dans
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variable
type
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
type
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
type
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
transtypage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
variable
super
global
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
opérateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
arithmétique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
L
’
opérateur
d
’
affectation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
L
’
opérateur
de
concaténation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
L
’
opérateur
arobase
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
de
comparaison
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
logique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
de
incrémentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
raccourci
d
’
affectation
de
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
instruction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
instruction
conditionnel
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
branchement
conditionnel
:
mot
clé
«
else
»
«
elseif
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
instruction
«
switch
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
boucle
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
de
traitement
de
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
parcourir
tableau
avec
boucle
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
tri
de
tableau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
fonction
prédéfini
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
utilisateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
porter
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
imbriquer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
inclusion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
formulaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
méthode
GET
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
méthode
POST
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Urlencode
(
)
Urldecode
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Recupération
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
contrôle
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
validation
formulaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Htmlentites
(
)
htmlspecialchar
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
en-tête
HTTP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
récupérer
en-tête
de
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
base
de
DONNEES
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
utiliser
base
donné
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
architecture
externe
d
’
base
de
donné
web
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
accès
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
support
PHP
de
connexion
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
rudiment
langage
SQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PhpMyadmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
installer
base
formation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
base
de
donnée
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Etablir
connexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
choisir
base
de
donnée
existant
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
déconnexion
à
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
envoyer
requête
vers
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
rechercher
donnée
dans
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
naviguer
dans
donnée
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
insérer
donnée
dans
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
addslashes
(
)
stripslashes
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
modifier
donnée
dans
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
supprimer
donnée
dans
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
date
heure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
conversion
entre
format
de
date
PHP
format
de
date
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utiliser
ODBC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
driver
odbc
de
MySql
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
configuration
de
source
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
session
COOKIES
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
Cookies
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Qu
’
être
qu
’
cookie
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Cookies
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
accéder
à
cookie
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
supprimer
cookie
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
session
avec
cookies
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
passage
paramètre
par
l
’
URL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
session
utiliser
fonction
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
configuration
de
dns-remplacé
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ouverture
d
’
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
enregistrement
d
’
variable
de
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
utilisation
de
variable
de
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Dés-enregistrement
de
variable
suppression
de
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
ouvrir
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fermer
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
naviguer
dans
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
afficher
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
lire
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Ecrire
dans
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
copier
,
supprimer
renommer
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
chargement
de
tableau
à
partir
de
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
chargement
de
tableau
à
partir
de
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
gérer
répertoire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
afficher
image
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
gestion
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
introduction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
type
d
’
erreur
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
erreur
de
syntaxe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
erreur
de
sémantique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
erreur
logique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
erreur
d
’
environnement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
message
d
’
erreur
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
niveau
d
’
erreur
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
définition
niveau
de
rapport
d
’
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
définition
duniveau
de
rapport
d
’
erreur
dans
«
dns-remplacé
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
définition
niveau
de
rapport
d
’
erreur
dans
script
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
gérer
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
suppression
message
d
’
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
message
d
’
erreur
personnaliser
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Journalisation
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
programmation
orienter
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
concept
de
programmation
orienter
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
classe
objet
(
PHP
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
création
d
’
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
création
d
’
attribut
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
création
de
méthode
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
constructeur
de
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Instanciation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
accès
attribut
méthode
d
’
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
accesseurs
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
héritage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
L
’
opérateur
de
contexte
de
classe
(
:
:
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
redéfinition
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
manipulation
de
classe
d
’
objet
d
’
origine
similaire
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
classe
objet
(
PHP
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
de
changement
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
création
d
’
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
constructeur
destructeur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
création
de
instance
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
assignation
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
héritage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
visibilité
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
visibilité
membre
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
visibilité
méthode
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
de
résolution
de
portée
(
:
:
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
abstraction
de
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
interface
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
PRE-REQUIS
pour
être
suivre
avec
efficacité
,
connaissance
être
utile
à
cours|cour
:
langage
HTML
:
PHP
permettre
de
faire
manipulation
balise
par
balise
.
base
de
donnée
:
langage
Sql
:
langage
JavaScript
:
notion
de
base
création
de
base
de
donnée
,
table
,
type
de
donnée
,
etc
...
interrogation
(
select
)
,
insertion
(
insert
)
,
modification
(
update
)
,
etc
...
création
de
fonction
,
manipulation
chaîne
,
etc
...
réseau
:
fonctionnement
général
,
structure
client
/
serveur
etc
...
cours|cour
adresser
débutant
avoir
programmer
dans
langage
simple
à
désirer
acquérir
notion
de
base
de
programmation
PHP
.
avoir
pratiquer
JavaScript
,
constater
PHP
présenter
avec
langage
de
script
similitude
être
compliquer
.
avoir
de
gérer
propre
serveur
(
être
réaliste
dans
cas
de
intranet
!
)
,
être
obliger
de
subir
hébergeur
imposer
n
'
à
langage
PHP
pur
dur
être
cas
dans
autre
langage
normaliser
,
de
langage
PHP
multiple
extension
permettre
,
PHP
gérer
HTML
baliser
par
balise
niveau
bas
,
aller
devoir
mettre
main
dans
cambouis
.
rester
dans
cadre
de
réalisation
de
page
Web
simple
aborder
technique
sophistiqué
faire
appel
multimédia
.
montrer
appliquer
PHP
commerce
électronique
.
laisser
dans
ombre
question
de
hébergement
payer
de
site
Web
s
'
rattacher
(
acquisition
de
nom
de
domaine
,
par
exemple
)
.
essayer
de
réaliser
application
de
gestion
simple
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
introduction
être
PHP
?
PHP
être
langage
de
script
imbriquer
dans
page
HTML
traiter
par
serveur
.
PHP
permettre
de
construire
page
HTML
contenir
résultat
de
calcul
de
requête
SQL
adresser
à
système
de
gestion
de
base
de
donnée
(
SGBD
)
.
grâce
à
de
nombreux
extension
,
PHP
pouvoir
générer
fichier
PDF
,
interfacer
avec
serveur
de
messagerie
,
serveur
LDAP
générer
image
graphique
GIF
à
volée
,
citer
fonctionnalité
important
.
PHP
pouvoir
interfacer
avec
quasitotalité
SGBD
marché
,
être
commercial
venir
monde
libre
(
Free
software
)
.
PHP
être
langage
de
script
niveau
serveur
,
comparable
à
ASP
de
Microsoft
comporter
de
fonction
,
supporter
standard
Web
être
extensible
.
historique
langage
PHP
avoir
être
mettre
point
début
de
automne
par
Rasmus
Lerdorf
.
langage
de
script
permettre
de
conserver
trace
utilisateur
venir
consulter
CV
sur
site
,
grâce
à
accès
à
base
de
donnée
par
intermédiaire
de
requête
SQL
.
,
être
donner
de
nombreux
internaute
demander
programme
,
Rasmus
Lerdorf
mettre
en
ligne
en
premier
version
de
programme
baptiser
Personal
sommaire
page
Tools
(
outil
basique
pour
page
perso
)
,
Personal
home
page
v1.0
(
traduire
page
personnel
version
)
.
Etant
donner
succès
de
PHP
,
Rasmus
Lerdorf
décider
de
améliorer
langage
en
intégrer
structure
avancer
boucle
,
structure
conditionnel
,
intégrer
package
permettre
de
interpréter
formulaire
avoir
développer
(
fi
,
Form
Interpreter
)
support
de
mSQL
.
être
de
façon
version
langage
,
baptiser
pour
occasion
PHP
/
fi
version
,
vivre
jour
durant
été
.
PHP
être
utiliser
sur
de
nombreux
site
(
fin
,
en
milieu
de
année
)
.
à
partir
de
,
Zeev
Suraski
Andi
Gurmans
rejoindre
Rasmus
pour
former
équipe
de
programmeur
de
mettre
point
PHP
(
Stig
Bakken
,
Shane
Caraveo
Jim
Winstead
rejoignèrent
par
suite
)
.
être
version
de
PHP
être
disponible
juin
appeler
PHP
:
Hypertext
Preprocessor
.
exister
par
application
web
prêt
à
emploi
(
PHPNuke
,
PHP
SPIP
,
PHPSlash
...
)
permettre
de
monter
portail
.
en
juillet
de
site
tourner
sous
PHP
!
à
fin
de
année
,
version
bêta
de
PHP
,
baptiser
PHP4
être
apparaître
...
version
PHP4
être
version
rapide
autre
utiliser
nouveau
moteur
zend
.
de
support
session
être
intégrer
dans
autre
version
falloir
installer
bibliothèque
PHPlib
pour
accéder
à
contrôle
de
session
falloir
en
écrire
un
.
en
version
PHP5
...
avoir
adresser
PHP
?
PHP
être
outil
idéal
pour
création
de
site
Internet
intranet
de
taille
moyen
de
grand
taille
avoir
à
supporter
grand
nombre
de
requête
simultané
.
site
affirmer
afficher
de
page
par
jour
sur
machine
configuration
être
suivant
:
dual
PII-333
,
512Mb
ram
,
2x9Go
SCSI
,
sans
atteindre
%
de
charge
sur
deux
processeur
.
`
`
PHP
can
spew
HTML
much
much
faster
than
the
leased
line
can
push
the
bit
.
'
'
(
Rasmus
Lerdorf
)
reprendre
syntaxe
clair
familier
proche
de
langage
C
,
PHP
être
langage
prise
en
main
être
rapide
(
PHP
provoquer
de
phénomène
de
rejet
Perl
...
)
.
être
langage
convenir
débutant
désireux
de
familiariser
avec
technique
web
dynamique
,
professionnel
chercher
solution
simple
puissant
fiable
pour
création
de
site
de
taille
moyen
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
marche
PHP
être
langage
destiner
à
écriture
de
script
.
pouvoir
travailler
de
façon
autonome
,
sans
support
de
HTML
.
instruction
PHP
être
placer
entre
deux
balise
particulier
,
permettre
navigateur
serveur
de
reconnaître
.
navigateur
demander
page
serveur
,
rencontrer
balise
PHP
,
appeler
interpréteur
PHP
exécuter
nombre
de
action
en
fonction
de
nature
instruction
contenir
dans
page
.
,
aller
en
résulter
création
de
sortir
pouvoir
comporter
commande
HTML
sortie
aller
être
envoyer
navigateur
aller
afficher
.
être
processus
de
création
de
page
Web
dynamique
.
nouveau
génération
Web
:
site
Web
actif
web
être
orienter
vers
site
web
actif
,
permettre
à
utilisateur
de
recevoir
page
personnaliser
offrir
de
faire
navigation
dynamique
.
être
réaliser
à
aide
de
combinaison
de
langage
de
technologie
,
à
utiliser
seul
combiné
,
être
indépendant
un
autre
.
technologie
pouvoir
être
répartir
en
deux
groupe
,
selon
agir
de
technologie
côté
client
côté
serveur
.
technologie
dynamique
côté
client
technologie
être
innovation
récent
.
principal
inconvénient
côté
client
être
administrateur
site
(
webmestre
)
dispos
de
contrôle
sur
logiciel
utiliser
pour
afficher
page
.
entreprise
tenir
à
prendre
compter
de
utilisateur
possible
avec
maximum
de
navigateur
,
progrès
être
lent
pour
nouveau
technologie
,
prendre
en
charge
par
dernier
génération
principal
navigateur
marché
.
technologie
côté
client
être
:
contrôle
ActiveX
;
Applets
java
;
script
côté
client
(
JavaScript
)
DHTML
.
technologie
côté
serveur
avoir
année
,
Common
Gateway
interface
(
CGI
)
constituer
seul
vrai
solution
permettre
de
mettre
donnée
dynamique
sur
Web
.
programme
CGI
constituer
moyen
simple
de
créer
application
web
accepter
saisie
de
utilisateur
,
de
interroger
base
de
donnée
de
renvoyer
résultat
navigateur
.
Microsoft
Netscape
avoir
deux
développé
api
propriétaire
pouvoir
être
utiliser
pour
développer
code
permettre
de
servir
requête
web
.
parmi
dernier
technologie
web
côté
serveur
,
pouvoir
citer
actif
Server
page
(
ASP
)
,
servlets
java
,
JavaServer
page
(
JSP
)
PHP
.
PHP
fonctionner
de
façon
similaire
à
JSP
à
ASP
:
section
de
script
être
encadrer
par
balise
(
<
?
...
?
>
)
incorporer
à
page
HTML
.
script
être
exécuter
sur
serveur
avant
page
être
envoyer
navigateur
,
page
PHP
préoccuper
de
prise
en
charge
par
navigateur
.
à
ASP
,
PHP
être
indépendant
de
plate-forme
exister
pour
différent
version
de
Windows
,
Unix
Linux
,
de
nombreux
serveur
apache
IIS
.
facteur
décisif
être
être
libre
`
`
open
source
'
'
.
de
intérêt
traitement
côté
serveur
traitement
génération
de
page
web
côté
serveur
offrir
avantage
par
rapport
technologie
côté
client
,
:
diminution
trafic
réseau
en
limiter
échange
client
/
serveur
à
envoi
de
requête
de
réponse
;
réduction
temps
de
téléchargement
:
client
recevoir
simple
page
HTML
;
élimination
problème
de
compatibilité
navigateur
;
amélioration
mesure
sécuritaire
,
pouvoir
coder
chose
être
voir
par
navigateur
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
architecturer
plupart
site
web
offrir
contenu
statique
,
publication
scientifique
article
.
page
de
site
consister
en
texte
simple
agrémenter
de
image
de
lien
hypertextes
mener
vers
de
autre
page
.
pour
catégorie
de
site
web
,
technique
côté
client
suffire
.
HTML
feuille
de
style
en
cascade
(
CSS
)
permettre
de
structurer
de
présenter
contenu
page
,
Javascript
permettre
de
ajouter
touche
sophistiqué
nécessaire
.
source
inconnu
or
,
trouver
Internet
intranets
être
de
en
utiliser
pour
application
,
plupart
mettre
en
jeu
base
de
donnée
.
site
application
être
dynamique
,
contenu
être
modifier
selon
donnée
impliquer
action
de
utilisateur
.
requête
pour
page
provenir
navigateur
(
client
)
,
serveur
HTTP
procéder
en
trois
étape
:
lecture
de
requête
navigateur
(
client
)
;
identification
de
page
sur
serveur
;
envoi
de
page
navigateur
(
client
)
via
Internet
(
intranet
)
.
être
PHP
entre
en
scène
.
en
exécuter
programme
PHP
sur
serveur
,
pouvoir
créer
de
puissant
application
agir
de
façon
interactif
avec
base
de
donnée
générer
contenu
dynamique
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
source
inconnu
lieu
de
renvoyer
page
HTML
statique
à
utilisateur
,
souhaiter
serveur
accomplir
action
en
fonction
code
PHP
:
PHP
devoir
prendre
décision
créer
page
approprier
à
situation
.
de
fait
,
avec
PHP
action
serveur
être
suivant
:
lecture
de
requête
navigateur
(
client
)
;
identification
de
page
sur
serveur
;
exécution
instruction
venir
de
PHP
,
besoin
PHP
interroger
base
donnée
,
pour
modifier
page
;
renvoi
de
page
navigateur
(
client
)
via
Internet
(
intranet
)
.
code
HTML
pur
être
interpréter
par
navigateur
,
exécuter
sur
serveur
.
en
écrire
code
PHP
être
exécuter
sur
serveur
web
,
pouvoir
accomplir
de
chose
être
possible
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
installation
devoir
installer
PHP
serveur
Web
permettre
de
accéder
à
script
PHP
via
navigateur
.
utiliser
serveur
Web
apache
,
leader
marché
,
rapide
,
fiable
gratuit
,
serveur
IIS
fonctionner
.
pouvoir
installer
apache
PHP
de
deux
façon
:
•
,
en
utiliser
utilitaire
installer
configurer
avoir
besoin
.
voir
détail
de
installation
dans
chapitre
`
`
installation
rapide
avec
EasyPHP
'
'
.
•
,
en
suivre
étape
.
.
installation
manuel
fichier
nécessaire
pour
installation
de
PHP
de
apache
être
disponible
sur
web
à
adresse
http
:
/
/
dns-remplacer
/
être
conseiller
de
télécharger
dernier
version
disponible
.
installation
de
PHP
créer
répertoire
nommer
php
sur
C
:
/
(
autre
répertoire
)
copier
de
dans
fichier
PHP
.
configuration
de
PHP
Php4
copier
fichier
dns-remplacer
de
PHP
dans
C
:
/
WINNT
/
System
(
)
.
copier
fichier
dns-remplacer
de
PHP
dans
C
:
/
WINNT
en
retirer
`
`
–
dist
'
'
.
fichier
permettre
de
régler
différent
paramètre
de
PHP
.
Php5
copier
fichier
dns-remplacer
de
PHP
dans
C
:
/
WINNT
/
System
(
)
.
copier
fichier
dns-remplacer
de
PHP
dans
C
:
/
WINNT
en
retirer
–
recommended
.
fichier
permettre
de
régler
différent
paramètre
de
PHP
.
liste
point
utile
(
à
noter
`
`
;
'
'
servir
de
commentaire
)
:
•
dans
`
`
Paths
and
Directories
'
'
ajouter
.
(
point
)
dans
include_path
.
mettre
chemin
fichier
dll
(
par
exemple
c
:
\php\extensions
)
dans
extension_dir
Php4
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
Paths
and
Directories
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
include_path
=
.
doc_root
=
user_dir
=
upload_max_filesize
=
extension_dir
=
c
:
\php\extensions
enable_dl
=
Php5
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
Paths
and
Directories
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
include_path
=
.
doc_root
=
user_dir
=
upload_max_filesize
=
extension_dir
=
c
:
\php\ext
enable_dl
=
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
•
dans
`
`
Windows
extension
'
'
Dé-commenter
ligne
fichier
de
extension
souhaiter
utiliser
en
enlever
point
virguler
.
par
exemple
souhaiter
utiliser
fonction
ftp
imap
:
Php4
;
Windows
extension
;
extension
=
php_
dns-remplacer
;
extension
=
php_
dns-remplacer
;
extension
=
php_
dns-remplacer
extension
=
php_
dns-remplacer
;
Php5
;
Windows
extension
;
extension
=
php_
dns-remplacer
extension
=
php_
dns-remplacer
;
extension
=
php_
dns-remplacer
;
extension
=
php_
dns-remplacer
extension
=
php_
dns-remplacer
;
remarque
:
MySQL
être
supporter
dans
PHP4
,
n
’
être
nécessaire
de
charger
dll
,
n
’
être
cas
pour
PHP5
.
•
dans
`
`
[
session
]
'
'
souhaiter
utiliser
session
PHP
,
simple
être
de
garder
configuration
par
défaut
,
de
stocker
session
dans
fichier
.
falloir
par
contre
spécifier
chemin
répertoire
être
stocker
session
.
par
exemple
,
pouvoir
créer
répertoire
c
:
\php\sessions
.
Php4
Php5
[
session
]
dns-remplacer
_handler
=
file
;
session
être
stocker
dans
fichier
dns-remplacer
_path
=
c
:
\php\sessions
dns-remplacer
_cookies
=
;
utiliser
cookies
pour
transmettre
identifier
de
session
dns-remplacer
=
PHPSESSID
;
etc
.
installation
d
’
apache
devoir
l
’
installer
dans
C
:
/
Program
file
/
apache
group
configuration
d
’
apache
fichier
`
`
dns-remplacer
'
'
permettre
de
configurer
apache
.
pouvoir
par
exemple
ajouter
adresse
IP
à
ligne
Server
Name
;
pouvoir
modifier
racine
Web
de
document
,
à
aide
de
directif
DocumentRoot
.
par
défaut
agir
répertoire
`
`
htdocs
'
'
,
dans
répertoire
de
installation
de
apache
.
convenir|convier
de
changer
,
pour
`
`
c
:
\web
'
'
par
exemple
.
ServerName
ip-remplacée
>
DocumentRoot
`
`
c
:
/
web
'
'
...
<
Directory
`
`
c
:
/
web
'
'
>
option
All
AllowOverride
All
Order
allow
,
deny
Allow
from
all
<
/
Directory
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
copier
ligne
de
configuration
suivant
,
coller
dans
fichier
dns-remplacé
.
Php4
#
for
the
apache
moduler
LoadModule
php4_module
c
:
/
php
/
sapi
/
dns-remplacer
#
ajouter
avoir
suite
de
ligne
extension
#
vouloir
voir
reconnaître
par
php
,
précéder
d
’
point
AddType
application
/
x-httpd-php
.phtml
.pwml
.php3
.php4
.php
.php2
.inc
#
for
the
cgi
binary
(
you
can
user
that
one
compiled
with
force
cgi
redirect
too
)
ScriptAlias
/
php4
/
`
`
C
:
/
php
/
'
'
action
application
/
x-httpd-php4
`
`
/
php4
/
dns-remplacer
'
'
Php5
#
for
the
apache
moduler
LoadModule
php5_module
c
:
/
php
/
sapi
/
dns-remplacer
#
ajouter
avoir
suite
de
ligne
extension
#
vouloir
voir
reconnaître
par
php
,
précéder
d
’
point
AddType
application
/
x-httpd-php
.phtml
.pwml
.php3
.php4
.php
.php2
.inc
.php5
#
for
the
cgi
binary
(
you
can
user
that
one
compiled
with
force
cgi
redirect
too
)
ScriptAlias
/
php5
/
`
`
C
:
/
php
/
'
'
action
application
/
x-httpd-php5
`
`
/
php5
/
dns-remplacer
'
'
d
’
information
sur
apache
,
avoir
site
web
d
’
apache
software
Foundation
à
l
’
adresse
:
http
:
/
/
dns-remplacer
/
.
exister
précis
concis
sur
apache
chez
O
’
Reilly
.
lancement
arrêt
serveur
dans
démarrer
,
programme
,
apache
httpd
Server
,
cliquer
start
apache
in
console
.
fenêtre
s
’
ouvrir|ouvrer
indiquer
:
apache
(
Winn
)
PHP
running
...
pour
arrêter
serveur
,
dans
démarrer
,
exécuter
taper
cmd
.
dans
fenêtre
s
’
ouvrir|ouvrer
,
taper
cd
program
file
/
apache
group
/
apache
apache
–
k
shutdown
.
test
de
configuration
pour
tester
être
installer
,
falloir
de
abord
rendre
sur
http
:
/
/
ip-remplacée
>
(
l
’
adresse
IP
de
site
)
.
devoir
obtenir
page
indiquer
qu
’
apache
fonctionner
.
dans
cas
contraire
,
vérifier
avoir
lancer
dns-remplacer
.
falloir
vérifier
PHP
fonctionner
.
pour
,
lancer
éditeur
de
texte
(
par
exemple
phpedit
)
,
créer
nouveau
fichier
,
avec
extension
adapter
(
dns-remplacer
par
exemple
)
insérer
ligne
suivant
:
<
?
phpinfo
(
)
;
?
>
sauvegarder
fichier
dans
répertoire
adéquat
(
c
:
\program
files\apache
group\apache\htdocs\
)
,
lancer
fichier
à
aide
de
navigateur
(
http
:
/
/
ip-remplacée
>
/
dns-remplacer
)
:
devoir
obtenir
page
de
information
sur
configuration
de
PHP
.
interfaçage
avec
SGBD
interfaçage
avec
base
de
donnée
être
aspect
intéressant
langage
PHP
.
base
de
donnée
pouvoir
offrir
solution
séduisant
à
à
application
nécessiter
génération
de
page
HTML
dynamique
.
permettre
de
organiser
page
en
trois
partie
:
•
corps
de
HTML
faire
présentation
,
invoquer
script
de
génération
dynamique
de
contenu
;
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
•
script
de
génération
de
contenu
(
mettre
en
forme
donnée
lire
dans
base
de
donnée
)
;
•
interfaçage
avec
base
de
donnée
,
avec
fonction
de
enrobage
(
wrappers
)
,
permettre
de
abstraire
de
base
de
donnée
utiliser
.
base
de
donnée
?
trio
PHP
+
MySQL
+
apache
être
solution
éprouver
fiable
,
sur
machine
Linux
FreeBSD
sur
plate-forme
Win32
,
être
livrer
dans
package
appeler
`
`
MAP
'
'
.
PHP
contenir
connexion
natif
vers
plupart
système
de
base
de
donnée
.
en
de
MySQL
,
pouvoir
connecter
base
de
donnée
PostgreSQL
,
mSQL
,
oracle
,
dbm
,
filePro
,
Informix
,
Interbase
Sybase
citer
.
grâce
standard
ODBC
(
open
Database
Connectivity
)
,
pouvoir
connecter
à
importer
base
de
donnée
posséder
pilote
ODBC
,
produit
de
Microsoft
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
installation
rapide
avec
EasyPHP
présentation
d
'
EasyPHP
EasyPHP
installer
configurer
environnement
de
travail
complet
permettre
de
mettre
en
œuvre
puissance
souplesse
offrir
langage
dynamique
PHP
support
efficace
de
base
de
donnée
.
EasyPHP
regrouper
serveur
http
apache
,
base
de
donnée
MySQL
,
PHP
outil
de
administration
de
base
de
donnée
phpMyAdmin
.
installation
d
'
EasyPHP
utiliser
dans
cadre
de
cours|cour
,
version
EasyPHP
comprendre
apache
,
PHP
,
PHPMyadmin
MySQL
.
Télécharger
EasyPHP
sur
site
http
:
/
/
dns-remplacer
/
,
installer
à
aide
fichier
de
installation
(
easyphp1-8_
dns-remplacé
)
`
`
lancement
`
`
de
EasyPHP
revenir
à
mettre
en
route
serveur
apache
MySQL
.
à
installation
,
raccourci
vers
EasyPHP
être
créer
dans
répertoire
`
`
démarrer
/
programme
/
EasyPHP
'
'
.
fois
EasyPHP
lancer
,
icône
placer
dans
barre
tâche
à
côté
de
horloge
.
clic
droit
permettre
de
accéder
à
différent
menu
:
•
fichier
Log
:
renvoyer
erreur
générer
par
apache
MySQL
;
•
configuration
:
donner
accès
différent
configuration
de
EasyPHP
;
•
web
local
:
ouvrir|ouvrer
page
http
:
/
/
localhost
/
dns-remplacer
,
page
de
accueil
de
EasyPHP
;
•
démarrer
/
arrêter
:
démarrer
/
arrêter
apache
MySQL
;
•
quitter
:
ferme
EasyPHP
;
page
PHP
être
interpréter
,
pouvoir
placer
fichier
dans
répertoire
www
serveur
apache
être
configurer
pour
ouvrir
fichier
index
saisir
adresse
'
'
http
:
/
/
localhost
/
'
'
(
à
condition
serveur
apache
en
route
)
.
page
servir
de
page
de
accueil
Web
local
permettre
de
vérifier
bon
fonctionnement
de
EasyPHP
.
de
avoir
vision
clair
développement
,
être
conseiller
de
créer
répertoire
par
projet
de
ajouter
en
indiquer
répertoire
contenir
fichier
.
exister
de
façon
de
programmer
en
PHP
exister
de
éditeur
spécialiser
(
éditeur
html
,
coloration
syntaxique
,
saisir
semi-automatique
...
)
.
pour
tester
configuration
afficher
page
de
administration
de
EasyPHP
à
adresse
suivant
:
http
:
/
/
ip-remplacée
>
/
home
/
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
installation
support
de
cours|cour
aller
installer
site
en
mode
local
contenir
support
de
cours|cour
.
à
partir
de
site
statique
,
réaliser
en
HTML
,
aller
étudier
différent
manière
de
rendre
dynamique
grâce
à
PHP
.
Etape
de
installation
•
créer
répertoire
`
`
coursphp
'
'
.
•
Télécharger
fichier
`
`
dns-remplacer
'
'
.
•
décompresser
fichier
dans
répertoire
`
`
coursphp
'
'
.
•
avec
clic
droit
sur
icône
de
EasyPHP
,
cliquer
sur
administration
•
cliquer
sur
ajouter
.
•
indiquer
nom
site
(
exemple
:
coursphp
)
chemin
de
accés
(
exemple
:
C
:
\
coursphp
)
.
•
valider
en
cliquer
sur
OK
•
redémarrer
EasyPHP
changement
être
prendre
en
compte
par
serveur
http
•
adresse
http
:
/
/
localhost
/
coursphp
/
permettre
de
afficher
site
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
langage
PHP
.
règle
de
base
code
PHP
être
enregistrer
texte
brut
format
ASCII
,
pouvoir
écrire
page
PHP
à
aide
de
importer
éditeur
de
texte
.
utiliser
PHPEdit
.
dans
cas
de
fichier
HTML
,
serveur
Web
transmettre
contenu
fichier
navigateur
.
essayer
en
façon
de
comprendre
de
traiter
fichier
:
être
rôle
navigateur
.
fichier
doter
de
extension
.php
être
gérer
:
code
PHP
être
rechercher
.
serveur
web
démarrer
en
`
`
mode
HTML
'
'
.
commencer
examen
,
partir
principe
fichier
contenir
code
HTML
,
feuille
de
style
en
cascade
(
CSS
)
,
code
JavaScript
,
texte
brut
autre
texte
transmettre
navigateur
sans
besoin
de
interprétation
de
part
serveur
.
entrer
en
`
`
mode
PHP
'
'
dès
rencontrer
balise
PHP
,
servir
à
`
`
sortir
'
'
mode
HTML
.
pouvoir
utiliser
type
de
balise
PHP
:
différent
type
de
balise
PHP
style
XML
:
C
’
être
style
par
défaut
être
reconnaître
par
interpréteur
.
C
’
être
utiliser
.
<
?
php
...
?
>
style
court
(
instruction
SGML
)
:
<
?
...
?
>
style
JavaScript
instruction
appeler
JavaScript
VBScript
,
à
utiliser
éditeur
gérer
instruction
de
traitement
:
<
script
LANGUAGE
=
'
php
'
>
...
<
/
script
>
caractère
d
’
échappement
d
’
ASP
:
à
condition
paramètre
de
configuration
asp_tags
fichier
de
configuration
de
PHP
(
dns-remplacer
)
être
valeur
.
<
%
...
%
>
instruction
PHP
devoir
terminer
par
point-virgule
sauf
après
accolade
fermant
de
bloc
de
instruction
.
PHP
permettre
de
générer
page
web
côté
client
.
suffire
pour
de
incorporer
code
côté
client
dans
texte
,
générer
par
PHP
de
envoyer
navigateur
.
sortie
script
pouvoir
être
générer
par
instruction
echo
print
.
commentaire
pouvoir
être
insérer
dans
script
grâce
signe
:
/
/
pour
commentaire
sur
seul
ligne
;
/
*
commentaire
sur
ligne
*
/
deux
exemple
:
exemple
:
<
?
php
echo
`
`
texte
générer
par
PHP
'
'
;
?
>
navigateur
affiche
:
texte
générer
par
PHP
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exemple
:
<
?
php
print
`
`
<
script
LANGUAGE
=
'
JavaScript
'
>
alert
(
'
erreur
!
'
)
;
<
/
script
>
'
'
;
?
>
serveur
transmettre
texte
:
<
script
LANGUAGE
=
'
JavaScript
'
>
alert
(
'
erreur
!
'
)
;
<
/
script
>
navigateur
interpréter
code
JavaScript
afficher
boîte
d
’
alerte
.
exercice
:
(
voir
annexe
règle
de
base
)
.
générer
à
l
’
aide
de
PHP
texte
suivre
:
premier
script
.
bonjour
monde
.
même
texte
à
l
’
aide
de
JavaScript
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
variable
PHP
PHP
être
langage
typer
.
être
tenir
de
déclarer
type
variable
constante
aller
utiliser
.
variable
pouvoir
renfermer
importer
typer
de
contenu
.
être
PHP
déterminer
type
de
variable
par
contexte
,
est-à-ire
par
valeur
être
attribuer
.
en
PHP
,
variable
être
représenter
par
signe
dollar
`
`
$
'
'
suivre
nom
de
variable
.
nom
variable
écrire
en
minuscule
être
différent
variable
écrire
en
majuscule
(
ie
:
$
x
!
=
$
X
)
.
nom
de
variable
suivre
même
règle
de
nommage
autre
entité
PHP
.
nom
de
variable
valide
devoir
commencer
par
lettre
souligner
(
_
)
,
suivre
de
lettre
,
chiffre
souligner
.
exprimer
sous
forme
de
expression
régulier
,
donner
:
'
[
a-zA-Z_\x7f-\xff
]
[
a-zA-Z0-9_\x7f-\xff
]
*
'
PHP
permettre
de
assigner
valeur
variable
par
référence
.
signifier
nouveau
variable
faire
référencer
(
en
de
autre
terme
,
`
`
devenir
de
'
'
,
`
`
pointe
sur
'
'
)
variable
original
.
modification
de
nouveau
variable
affecter
ancien
,
.
signifier
copie
être
faire
:
assignation
être
rapide
.
faire
sentir
dans
boucle
,
de
assignation
de
grand
objet
(
tableau
)
.
pour
assigner
par
référence
,
ajouter
un
&
(
commercial
)
début
de
variable
être
assigner
(
variable
source
)
.
dans
exemple
suivre
,
`
`
nom
être
Pierre
`
`
afficher
deux
fois
:
exemple
:
<
?
php
$
foo
$
bar
$
bar
echo
echo
?
>
=
'
Pierre
'
;
/
/
assigner
valeur
'
Pierre
'
à
$
foo
=
&
$
foo
;
/
/
référence
$
foo
avec
$
bar
.
=
`
`
nom
être
Pierre
'
'
;
/
/
modifier
$
bar
...
$
foo
;
/
/
$
foo
être
modifier
$
bar
;
type
de
variable
type
scalaire
:
constant
.
booléen
.
entier
.
nombre
à
virgule
flottant
.
chaîne
de
caractère
.
type
composer
:
tableau
.
objet
.
constant
D
’
façon
général
,
pouvoir
donner
nom
symbolique
à
n
’
importer
constant
scalaire
(
c
’
être
à
dire
de
type
booléen
,
integer
,
double
string
)
.Toutefois
l
’
usage
vouloir
constant
s
’
écrire
en
lettre
capital
.
pour
créer
constante
utiliser
fonction
define
(
)
forme
général
être
:
structure
de
définition
d
’
constant
define
(
nom
,
valeur
,
[
,
casse
]
)
;
:
nom
:
chaîne
de
caractère
représenter
nom
qu
’
vouloir
donner
à
constant
.
valeur
:
valeur
attribuer
à
constant
.
casse
:
valeur
booléen
indiquer
nom
donner
à
constant
être
sensible
(
FALSE
)
(
TRUE
)
à
casse
.
par
défaut
valeur
être
FALSE
,
signifier
nom
de
constant
être
sensible
à
casse
.
nom
suggérer
,
valeur
pouvoir
être
modifier
durant
exécution
script
(
constante
magique
__FILE__
__LINE__
être
seul
exception
)
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exemple
:
<
?
php
define
(
`
`
pi
'
'
,
)
;
$
r
=
;
$
circ
=
*
pi
*
$
r
;
echo
`
`
circonférence
de
rayon
$
r
:
$
circ
<
br
>
'
'
;
echo
`
`
pi
valoir
`
`
.PI
;
?
>
exercice
:
(
voir
annexe
:
constant
)
.
générer
à
l
’
aide
de
PHP
deux
ligne
suivant
en
affecter
valeur
″Bonjour
monde″
avoir
constant
:
″Voici
deuxième
script.″
constante
.
dans
même
fichier
même
texte
à
l
’
aide
de
JavaScript
.
variable
type
booléen
:
être
type
simple
.
booléen
exprimer
valeur
de
vrai
TRUE
faux
FALSE
.
pouvoir
utiliser
constant
'
TRUE
'
'
FALSE
'
pour
spécifier
valeur
de
type
booléen
:
constante
être
insensible
à
casse
.
exemple
:
<
?
php
$
foo
=
True
;
/
/
assign
valeur
TRUE
to
$
foo
$
foo
=
False
;
/
/
assign
valeur
false
to
$
foo
$
foo
=
;
/
/
assign
valeur
to
$
foo
$
foo
=
;
/
/
assign
valeur
to
$
foo
foo
(
True
)
=
foo
(
False
)
=
foo
(
)
=
foo
(
)
=
?
>
variable
type
entier
:
entier
être
nombre
de
ensemble
entier
naturel
z
:
z
=
{
...
.
,
,
,
,
,
,
...
}
.
être
possible
de
spécifier
nombre
entier
(
integers
)
de
manière
suivant
:
décimal
(
base
)
,
hexadécimal
(
base
)
,
octal
(
base
)
précéder
signe
(
-
)
.
exemple
:
<
?
php
$
avoir
=
;
echo
`
`
$
avoir
=
nombre
entier
en
base
:
(
)
<
br
>
'
'
;
$
avoir
=
;
echo
`
`
$
avoir
=
nombre
entier
négatif
:
(
)
<
br
>
'
'
;
$
avoir
=
;
echo
`
`
$
avoir
=
nombre
entier
en
base
,
octal
(
équivalent
à
en
base
)
:
(
)
<
br
>
'
'
;
$
avoir
=
0x1A
;
echo
`
`
$
avoir
=
nombre
entier
en
base
,
hexadécimal
(
équivalent
à
en
base
)
:
(
)
'
'
;
?
>
nombre
à
virgule
flottant
:
nombre
à
virgule
flottant
connaître
sous
vocable
de
`
`
double
`
`
`
`
float
`
`
`
`
nombre
rééls
`
`
pouvoir
être
spécifier
en
utiliser
syntaxe
suivant
:
exemple
:
<
?
php
$
avoir
=
;
echo
$
avoir
.
`
`
<
br
>
'
'
;
$
avoir
=
1.2e3
;
echo
$
avoir
;
?
>
•
variable
débuter
par
valeur
numérique
valide
,
chaîne
être
évaluer
par
valeur
,
être
évaluer
zéro
;
•
valeur
double
constituer
l
’
intégralité
de
chaîne
,
chaîne
être
évaluer
valeur
double
,
d
’
autre
caractère
double
être
présent
dans
chaîne
,
être
évaluer
entier
.
exemple
:
<
?
php
$
var
=
;
/
/
$
var
être
entier
$
var
=
;
/
/
$
var
être
double
$
var
=
`
`
abcd
'
'
;
/
/
$
var
être
chaîne
$
str
=
`
`
rue
Fbg
Montmartre
'
'
;
$
x
=
+
$
str
;
/
/
$
x
=
$
str
rester
inchangé
echo
`
`
$
x
:
$
str
'
'
;
/
/
affiche
:
:
rue
Fbg
Montmartre
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
$
str
=
`
`
code
'
'
;
$
x
=
+
$
str
;
/
/
$
x
=
echo
`
`
$
x
:
$
str
'
'
;
/
/
affiche
:
:
code
$
str
=
`
`
mètre
'
'
;
$
x
=
+
$
str
;
/
/
$
x
=
echo
`
`
$
x
:
$
str
'
'
;
/
/
affiche
:
:
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
variable
type
chaîne
de
caractère
:
chaîne
de
caractère
être
séquence
de
caractère
.
en
PHP
,
caractère
être
octet
,
en
de
possible
.
PHP
n
'
avoir
(
?
)
de
support
natif
de
Unicode
chaîne
pouvoir
être
spécifier
de
deux
manière
différent
:
guillemet
simple
guillemet
double
guillemet
simple
Syntax
:
$
avoir
=
'
'
MaVariable
'
'
;
$
avoir
valoir
MaVariable
exemple
:
<
?
php
echo
'
être
chaîne
simple
'
;
echo
'
'
<
br
>
'
'
;
echo
'
pouvoir
inclure
nouveau
ligne
dans
chaîne
,
.
'
;
echo
`
`
<
br
>
<
br
>
'
'
;
echo
'
Arnold
avoir
coutume
de
dire
:
`
`
I\
'
ll
be
back
'
'
'
;
/
/
affiche
:
...
`
`
I
'
ll
be
back
'
'
echo
`
`
<
br
>
<
br
>
'
'
;
echo
'
Etes
sûr
de
vouloir
effacer
dossier
C
:
\\
*
.
*
?
'
;
/
/
affiche
:
Etes
sûr
de
vouloir
effacer
dossier
C
:
\
*
.
*
?
echo
`
`
<
br
>
<
br
>
'
'
;
echo
'
Etes
sûr
de
vouloir
effacer
dossier
C
:
\
*
.
*
?
'
;
/
/
affiche
:
Etes
sûr
de
vouloir
effacer
dossier
C
:
\
*
.
*
?
echo
`
`
<
br
>
<
br
>
'
'
;
echo
'
être|suivre
en
train
de
mettre
nouveau
ligne
:
\n
'
;
/
/
affiche
:
être|suivre
en
train
de
mettre
nouveau
ligne
:
\n
?
>
guillemet
double
chaîne
être
entourer
de
guillemet
double
,
PHP
aller
comprendre
séquence
de
caractère
:
séquence
de
caractère
comprendre
par
PHP
.
\n
nouveau
ligne
(
linefeed
,
LF
0x0A
(
)
en
ASCII
)
\r
retour
à
ligne
(
carriage
return
,
CR
0x0D
(
)
en
ASCII
)
\t
tabulation
horizontal
(
HT
0x09
(
)
en
ASCII
)
\\
Antislash
\
$
caractère
$
\
'
'
guillemet
double
\
[
]
{
,
}
séquence
de
caractère
permettre
de
rechercher
nombre
en
notation
octal
.
\x
[
0-9A-Fa-f
]
{
,
}
séquence
de
caractère
permettre
de
rechercher
nombre
en
notation
hexadécimal
exercice
:
(
voir
annexe
variable
type
chaîne
de
caractère
)
.
créer
page
en
utiliser
côte
guillemet
afficher
texte
suivre
:
été
indien
rêver
!
histoire
,
c
’
être
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
traitement
variable
dans
chaîne
chaîne
être
spécifier
avec
guillemet
double
variable
contenir
être
remplacer
par
valeur
.
avoir
deux
type
de
syntaxe
,
simple
complexe
.
syntaxe
simple
être
courant
,
pratique
:
fournir
moyen
de
utiliser
variable
,
être
chaîne
,
tableau
membre
de
objet
.
syntaxe
complexe
avoir
être
introduire
en
PHP
pouvoir
être
reconnaître
grâce
accolade
entourer
expression
.
dès
signe
dollar
$
être
rencontrer
,
analyseur
PHP
aller
lire
de
caractère
pouvoir
pour
former
nom
de
variable
valide
.
entourer
nom
de
variable
avec
accolade
pour
indiquer
nom
.
utilisation
accolade
{
}
dans
chaîne
exemple
:
<
?
php
$
boisson
=
'
vin
'
;
echo
`
`
$
boisson
,
pain
fromage
!
`
`
;
/
/
OK
,
`
`
,
'
'
être
autoriser
dans
nom
de
variable
echo
`
`
avoir
goûter
$
boisson
'
'
;
/
/
OK
,
'
s
'
pouvoir
entrer
dans
nom
de
variable
,
PHP
rechercher
$
boisson
echo
`
`
avoir
goûter
$
{
boisson
}
s
'
'
;
/
/
OK
?
>
exercice
:
(
voir
annexe
chaîne
de
caractère
exercice
)
.
reprendre
l
’
exemple
présenter
dans
paragraphe
‘
’
guillemet
simple
’
’
remplacer
côte
par
guillemet
,
observer
passer
,
corriger
.
exercice
:
(
voir
annexe
chaîne
de
caractère
exercice
)
.
déclarer
variable
php
affecter
valeur
de
prénom
,
générer
à
l
’
aide
de
PHP
texte
suivre
,
présenter
prénom
être
`
`
variable
'
'
!
même
texte
à
l
’
aide
de
JavaScript
.
exercice
:
(
voir
annexe
chaîne
de
caractère
exercice
)
.
reprendre
l
’
exercice
ajouter
variable
contenir
nom
,
afficher
variable
nom
variable
prénom
exercice
:
(
voir
annexe
chaîne
de
caractère
exercice
)
.
avoir
l
’
aide
de
variable
$
super
=
fantastique
,
créer
page
PHP
afficher
texte
suivre
en
utiliser
syntaxe
simple
complexe
:
C
’
être
fantastique
.
soirée
être
fantastique
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
variable
type
tableau
tableau
être
agrégat
de
valeur
de
type
quelconque
,
mélanger
,
regrouper
sous
nom
unique
dans
repérer
élément
isolé
par
indice
(
compter
à
partir
de
zéro
)
,
par
clé
enregistrer
en
même
temps
valeur
correspondant
de
création
tableau
.
pouvoir
créer
tableau
moyen
de
fonction
array
(
)
.
forme
général
de
déclaration
être
:
déclaration
d
’
tableau
.
$
tableau
[
]
=
valeur
$
tableau
=
array
(
valeur
,
valeur
,
valeur
...
)
;
$
tableau
=
array
(
clé
=
>
valeur
,
clé
=
>
valeur
,
clé
=
>
valeur
...
)
;
exemple
:
<
?
php
$
tableau
=
array
(
`
`
chien
'
'
,
`
`
salade
'
'
,
`
`
rocher
'
'
)
;
/
/
$
tableau
=
array
(
=
>
'
'
chien
'
'
,
=
>
'
'
salade
'
'
,
=
>
'
'
rocher
'
'
)
;
?
>
revenir
sur
l
’
utilisation
tableau
chapitre
tableau
.
variable
type
objet
objet
être
sorte
de
conteneur
pouvoir
contenir
différent
élément
,
en
général
classe
.
objet
être
de
type
object
.
pour
initialiser
objet
,
devoir
utiliser
commande
`
`
new
'
'
de
créer
l
’
instance
de
objet
.
exemple
:
<
?
php
class
foo
{
function
faire_foo
(
)
{
echo
`
`
faire
foo
.
`
`
;
}
}
$
bar
=
new
foo
;
$
bar-
>
faire_foo
(
)
;
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
transtypage
type
de
donnée
d
’
variable
pouvoir
être
modifier
à
l
’
aide
`
`
transtypage
'
'
(
int
)
,
(
double
)
,
(
string
)
,
...
.
conversion
autoriser
être
:
(
int
)
,
(
integer
)
type
entier
(
bool
)
,
(
boolean
)
booléen
(
real
)
,
(
double
)
,
(
float
)
type
double
(
string
)
type
chaîne
(
array
)
type
tableau
(
object
)
type
objet
exemple
:
<
?
php
$
foo
=
+
`
`
'
'
;
echo
`
`
\
$
foo
=
+
\
'
'
10.5\
'
'
\
$
foo
être
type
float
(
)
<
br
>
'
'
;
$
foo
=
+
`
`
-1.3e3
'
'
;
echo
`
`
\
$
foo
=
+
\
'
'
-1.3e3\
'
'
\
$
foo
être
type
float
(
)
<
br
>
'
'
;
$
foo
=
+
`
`
bob-1.3e3
'
'
;
echo
`
`
\
$
foo
=
+
\
'
'
bob-1.3e3\
'
'
\
$
foo
être
type
integer
(
)
<
br
>
'
'
;
$
foo
echo
$
foo
echo
=
+
`
`
bob3
'
'
;
'
'
\
$
foo
=
+
\
'
'
bob3\
'
'
\
$
foo
être
type
integer
(
)
<
br
>
'
'
;
=
+
`
`
Small
Pigs
'
'
;
'
'
\
$
foo
=
+
\
'
'
Small
Pigs\
'
'
\
$
foo
être
type
integer
(
)
<
br
>
'
'
;
$
foo
echo
$
foo
echo
=
+
`
`
Little
Piggies
'
'
;
'
'
\
$
foo
=
+
\
'
'
Little
Piggies\
'
'
\
$
foo
être
type
integer
(
)
<
br
>
'
'
;
=
`
`
pigs
`
`
+
;
'
'
\
$
foo
=
+
\
'
'
pigs
\
'
'
+
\
$
foo
être
type
float
(
)
<
br
>
'
'
;
?
>
PHP
mettre
deux
fonction
à
disposition
pour
traiter
type
de
variable
fonction
gettype
(
)
settype
(
)
.
fonction
gettype
(
)
déterminer
type
de
donnée
de
variable
renvoyer
l
’
un
valeur
suivant
:
•
`
`
integer
'
'
;
•
`
`
double
'
'
;
•
`
`
string
'
'
;
•
`
`
array
'
'
;
•
`
`
object
'
'
;
•
`
`
class
'
'
;
•
`
`
unknown
type
'
'
;
fonction
settype
(
)
définir
type
d
’
variable
de
façon
explicite
,
type
pouvoir
être
définir
,
renvoyer
valeur
false
.
exemple
:
<
?
php
$
var
=
;
/
/
$
var
être
double
echo
`
`
\
$
var
=
$
var
type
de
\
$
var
être
`
`
;
echo
gettype
(
$
var
)
;
echo
`
`
<
br
>
'
'
;
/
/
affiche
:
$
var
=
type
de
$
var
être
double
$
var
=
(
int
)
$
var
;
/
/
$
var
être
entier
de
valeur
echo
`
`
\
$
var
=
$
var
type
de
\
$
var
être
`
`
;
echo
gettype
(
$
var
)
;
echo
`
`
<
br
>
'
'
;
/
/
affiche
:
$
var
=
type
de
$
var
être
integer
$
var
=
(
double
)
$
var
;
/
/
$
var
être
de
nouveau
double
de
valeur
echo
`
`
\
$
var
=
$
var
type
de
\
$
var
être
`
`
;
echo
gettype
(
$
var
)
;
echo
`
`
<
br
>
'
'
;
/
/
affiche
:
$
var
=
type
de
$
var
être
double
$
var
=
(
string
)
$
var
;
/
/
$
var
être
chaîne
de
caractère
de
valeur
`
`
'
'
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
echo
`
`
\
$
var
=
$
var
type
de
\
$
var
être
`
`
;
echo
gettype
(
$
var
)
;
echo
`
`
<
br
>
'
'
;
/
/
affiche
:
$
var
=
type
de
$
var
être
string
?
>
exercice
:
(
voir
annexe
transtypage
exercice
)
.
déclarer
deux
variable
php
affecter
valeur
de
nom
prénom
,
générer
à
aide
de
PHP
texte
suivre
,
présenter
prénom
être
`
`
prénom
'
'
!
(
Déja
voir
à
exercice
chapitre
`
`
traitement
variable
dans
chaîne
'
'
)
afficher
,
type
de
variable
.
exercice
:
(
voir
annexe
transtypage
exercice
)
.
variable
$
var1
=
,
$
var2
=
,
$
var3
=
‘
’
’
,
$
var4
=
array
(
)
créer
page
PHP
d
’
afficher
variable
type
,
convertisser
$
var1
en
type
`
`
double
'
'
,
$
var2
en
type
`
`
integer
'
'
,
$
var3
en
type
`
`
double
'
'
$
var4
en
type
`
`
integer
'
'
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
variable
super
global
variable
être
'
superglobal
'
,
global
automatique
.
signifier
être
disponible
dans
contexte
de
exécution
(
fonction
méthode
)
.
avoir
besoin
de
déclarer
global
pour
accéder
.
information
retrouver
grace
à
fonction
phpinfo
(
)
vue
paragraphe
`
`
test
de
configuration
'
'
chapitre
`
`
installation
'
'
.
$
GLOBALS
contenir
référence
sur
variable
être
disponible
dans
environnement
de
exécution
global
.
clé
de
tableau
être
nom
variable
global
.
$
_SERVER
variable
fournir
par
serveur
web
,
lier
à
environnement
de
exécution
script
courant
.
ancien
version
$
HTTP_SERVER_VARS
contenir
même
information
,
être
auto
global
.
$
_GET
variable
fournir
par
protocole
HTTP
en
méthode
GET
.
ancien
version
$
HTTP_GET_VARS
contenir
même
information
,
être
auto
global
.
$
_POST
variable
fournir
par
protocole
HTTP
en
méthode
POST
.
ancien
version
$
HTTP_POST_VARS
contenir
même
information
,
être
auto
global
.
$
_COOKIE
variable
fournir
par
protocole
HTTP
,
dans
cookies
.
ancien
version
$
HTTP_COOKIE_VARS
contenir
même
information
,
être
auto
global
.
$
_FILES
variable
fournir
par
protocole
HTTP
,
suite
à
téléchargement
de
fichier
.
ancien
version
$
HTTP_POST_FILES
contenir
même
information
,
être
auto
global
.
voir
Téléchargement
par
méthode
POST
,
de
information
.
$
_ENV
variable
fournir
par
environnement
.
ancien
version
$
HTTP_ENV_VARS
contenir
même
information
,
être
auto
global
.
$
_REQUEST
variable
fournir
script
par
importer
mécanisme
de
entrée
devoir
recevoir
confiance
limiter
.
tableau
associatif
constituer
contenu
variable
$
_GET
,
$
_POST
,
$
_COOKIE
,
$
_FILES
.
note
:
exécuter
script
en
ligne
de
commande
,
variable
aller
inclure
variable
argv
argc
.
être
présent
dans
variable
$
_SERVER
.
présence
valeur
entrée
de
tableau
être
régler
par
directif
variables_order
.
tableau
être
évolution
de
variable
de
avant
PHP
.
$
_SESSION
variable
être
enregistrer
dans
session
attacher
script
.
ancien
version
$
HTTP_ENV_VARS
contenir
même
information
,
être
auto
global
.
voir
chapitre
pour
de
information
.
préciser
variable
super
global
être
faire
tableau
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
opérateur
opérateur
servir
à
déterminer
valeur
en
effectuer
opération
sur
un
variable
.
opérateur
de
PHP
être
similaire
à
de
C
,
de
Perl
.
opérateur
arithmétique
rappelez_vous
opération
élémentaire
apprendre
à
école
?
exemple
nom
résultat
$
avoir
+
$
b
addition
Somme
de
$
avoir
$
b
.
$
avoir
-
$
b
soustraction
différence
de
$
avoir
$
b
.
$
avoir
*
$
b
multiplication
produire
de
$
avoir
$
b
.
$
avoir
/
$
b
division
quotient
de
$
avoir
$
b
.
$
avoir
%
$
b
modulo
reste
de
$
avoir
diviser
par
$
b
.
L
’
opérateur
d
’
affectation
L
’
opérateur
«
=
»
permettre
d
’
affecter
valeur
à
variable
.
variable
situer
à
gauche
signe
«
=
»
voir
affecter
valeur
situer
à
droit|droite
signe
«
=
»
.
C
’
être
l
’
expression
:
$
b
=
$
avoir
+
;
signifier
valeur
de
variable
$
avoir
être
augmenter
de
cinq
ranger
dans
variable
$
b
.
PHP
permettre
affectation
multiple
.
,
avoir
droit
d
’
écrire
:
$
avoir
=
$
b
=
$
c
=
;
variable
$
avoir
,
$
b
$
c
contenir
trois
valeur
.
propriété
être
valable
pour
tableau
.
devoir
confondre
opérateur
d
’
affectation
avec
l
’
opérateur
de
comparaison
`
`
=
=
`
`
.
L
’
opérateur
de
concaténation
point
«
.
»
être
utiliser
en
PHP
opérateur
de
concaténation
pour
fusionner
chaîne
en
seul
.
exemple
:
<
?
PHP
$
nom
=
`
`
Durand
'
'
;
$
prenom
=
`
`
Pierre
'
'
;
$
personne
=
$
prenom
.
'
'
`
`
.
$
nom
;
echo
echo
echo
echo
$
personne
.
`
`
<
br
>
'
'
;
'
'
Martine
`
`
.
$
nom
.
`
`
<
br
>
'
'
;
'
'
affiche
:
Pierre
Durand
<
br
>
'
'
;
'
'
affiche
Martine
Durand
'
'
;
?
>
exercice
:
(
voir
annexe
L
’
opérateur
de
concaténation
)
.
déclarer
variable
affecter
valeur
de
prénom
autre
pour
nom
,
générer
à
l
’
aide
de
PHP
de
l
’
opérateur
de
concaténation
texte
suivre
,
présenter
prénom
être
`
`
variable
prénom
variable
nom
'
'
!
même
texte
à
l
’
aide
de
JavaScript
.
L
’
opérateur
arobase
opérateur
pouvoir
intervenir
devant
nom
de
fonction
.
interdire
à
PHP
d
’
afficher
éventuel
message
d
’
erreur
cours|cour
de
l
’
exécution
de
fonction
.
appartenir
dé
programmeur
de
prendre
disposition
nécessaire
(
par
exemple
,
en
tester
valeur
de
retour
de
fonction
)
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
opérateur
de
comparaison
opérateur
de
comparaison
,
nom
indique
,
permettre
de
comparer
deux
valeur
.
exemple
nom
résultat
$
avoir
=
=
$
b
Egal
vrai
$
avoir
être
égal
à
$
b
.
$
avoir
=
=
=
$
b
identique
vrai
$
avoir
être
égal
à
$
b
être
de
même
type
(
PHP4
)
.
$
avoir
!
=
$
b
différent
vrai
$
avoir
être
différent
de
$
b
.
$
avoir
<
$
b
petit
vrai
$
avoir
être
petit
$
b
.
$
avoir
>
$
b
grand
vrai
$
avoir
être
grand
$
b
.
inférieur
$
avoir
<
=
$
b
vrai
$
avoir
être
petit
égal
à
$
b
.
égal
supérieur
$
avoir
>
=
$
b
vrai
$
avoir
être
grand
égal
à
$
b
.
égal
opérateur
logique
exemple
$
avoir
and
$
b
$
avoir
or
$
b
$
avoir
xor
$
b
!
$
avoir
$
avoir
&
&
$
b
$
avoir
|
|
$
b
nom
(
And
)
(
or
)
XOR
(
or
)
(
Not
)
(
And
)
(
or
)
résultat
vrai
$
avoir
$
b
être
vrai
.
vrai
$
avoir
$
b
être
vrai
vrai
$
avoir
$
b
être
vrai
,
deux
en
même
temps
.
vrai
$
avoir
être
faux
.
vrai
$
avoir
$
b
être
vrai
.
vrai
$
avoir
$
b
être
vrai
.
opérateur
de
incrémentation
example
++
$
avoir
$
a++
--
$
avoir
$
avoir
--
name
Pre-increment
Post-increment
Pre-decrement
Post-decrement
effect
incrémenter
$
avoir
de
un
,
renvoi
$
avoir
.
renvoi
$
avoir
,
incrémenter
$
avoir
de
un
.
décrément
$
avoir
de
un
,
renvoi
$
avoir
.
renvoi
$
avoir
,
décrémente
$
avoir
de
un
.
raccourcir
d
’
affectation
de
variable
être
possible
en
PHP
d
’
utiliser
raccourci
d
’
opérateur
premier
opérande
être
variable
résultat
être
stocker
dans
variable
.
exemple
$
Ma_variable
+
=
$
i
$
Ma_variable
-
=
$
i
$
Ma_variable
*
=
$
i
$
Ma_variable
/
=
$
i
$
Ma_variable
%
=
$
i
$
Ma_variable
.
=
$
i
$
Ma_variable
++
$
Ma_variable
--
Daniel
HADJADJ
Daniel
Equivaut
à
$
Ma_variable
=
$
Ma_variable
+
$
i
$
Ma_variable
=
$
Ma_variable
-
$
i
$
Ma_variable
=
$
Ma_variable
*
$
i
$
Ma_variable
=
$
Ma_variable
/
$
i
$
Ma_variable
=
$
Ma_variable
%
$
i
$
Ma_variable
=
$
Ma_variable
+
$
i
$
Ma_variable
=
$
Ma_variable
+
$
Ma_variable
=
$
Ma_variable
-
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
instruction
instruction
conditionnel
instruction
conditionnel
indiquer
à
programme
qu
’
décision
devoir
être
prendre
forme
général
de
instruction
être
suivant
:
structure
de
if
If
(
condition
)
{
bloc
d
’
instruction
...
}
exemple
:
<
?
php
$
prix
=
;
if
(
$
prix
>
)
{
$
remise
=
;
$
frais_de_port
=
;
}
?
>
être
possible
d
’
imbriquer
instruction
if
dans
autre
.
exemple
:
<
?
php
$
prix
=
;
if
(
$
prix
<
)
{
if
(
$
prix
>
)
{
$
remise
=
;
$
frais_de_port
=
;
}
}
?
>
exercice
:
(
voir
annexe
instruction
conditionnel
exercice
)
.
initialiser
variable
$
civ
à
‘
madame
’
être
dame
,
‘
mademoiselle
’
être
demoiselle
à
‘
M
’
être
homme
.
créer
variable
$
prenom
$
nom
affecter
valeur
de
choix
.
tester
variable
$
civ
d
’
afficher
dans
page
PHP
l
’
un
phrase
suivant
correspondre
à
sexe
:
bonjour
Madame
$
prénom
$
nom
.
bonjour
Mademoiselle
$
prénom
$
nom
.
bonjour
Monsieur
$
prénom
$
nom
.
branchement
conditionnel
:
mot
clé
«
else
»
«
elseif
»
structure
de
else
If
(
condition
)
{
condition
être
vérifier
exécution
de
bloc
d
’
instruction
...
}
else
{
condition
n
’
être
vérifier
exécution
de
bloc
d
’
instruction
...
}
else
permettre
d
’
exécuter
second
bloc
d
’
instruction
condition
tester
n
’
être
vérifier
.
exploiter
deux
possibilité
logique
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exemple
:
<
?
php
$
prix
=
;
if
(
$
prix
>
)
{
$
remise
=
;
$
frais_de_port
=
;
}
else
{
$
remise
=
;
$
frais_de_port
=
;
}
?
>
exercice
:
(
voir
annexe
instruction
conditionnel
exercice
)
.
reprendre
l
’
exercice
précédent
ajouter
Else
afficher
‘
’
J
’
avoir
doute
sur
genre
.
’
’
,
variable
$
civ
n
’
être
vérifier
.
elsif
permettre
de
cascader
test
.
règle
d
’
emploi
être
inspirer
de
deux
précédent
.
structure
de
elseif
If
(
condition
)
{
condition
être
vérifier
exécution
de
bloc
d
’
instruction
...
}
elseif
(
condition
)
{
condition
être
vérifier
exécution
de
bloc
d
’
instruction
...
}
elseif
(
condition
)
{
condition
être
vérifier
exécution
de
bloc
d
’
instruction
...
}
expression
elseif
être
exécuter
if
précédent
autre
elseif
précédent
être
évaluer
faux
(
FALSE
)
,
elseif
être
évaluer
à
vrai
(
TRUE
)
.
exemple
:
<
?
php
$
prix
=
;
if
(
$
prix
<
)
{
$
remise
=
;
$
frais_de_port
=
}
elseif
(
$
prix
=
{
$
remise
=
;
$
frais_de_port
=
}
elseif
(
$
prix
>
{
$
remise
=
;
$
frais_de_port
=
}
?
>
;
)
;
)
;
exercice
:
(
voir
annexe
instruction
conditionnel
exercice
)
.
centre
de
formation
dispenser
cours|cour
différent
stagiaire
de
entreprise
.
cours|cour
principal
facultatif
.
selon
réglementation
stagiaire
pouvoir
s
’
inscrire
qu
’
avoir
deux
cours|cour
principal
maximum
deux
cours|cour
facultatif
maximum
à
condition
qu
’
suivre
cour
principal
.
secrétariat
de
centre
,
charger
d
’
adresser
courrier
à
stagiaire
,
disposer
pour
envoyer
courrier
de
trois
lettre
typer
lettre
de
conseiller
(
lettrer
type
conseiller
)
lettre
de
confirmation
(
lettre
type
confirmation
)
lettre
de
rappel
de
réglementation
,
demander
stagiaire
de
restreindre
choix
(
lettre
type
interdire
)
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
courrier
personnaliser
être
envoyer
à
stagiaire
à
réglementation
,
selon
cas
de
figure
suivre
:
stagiaire
s
’
inscrire
à
cour
principal
,
adresser
lettre
de
conseiller
.
stagiaire
s
’
inscrire
qu
’
à
cours|cour
principal
,
adresser
lettre
de
conseiller
.
stagiaire
s
’
inscrire
à
deux
cours|cour
principal
,
adresser
lettre
de
confirmation
.
stagiaire
s
’
inscrire
à
de
deux
cours|cour
principal
à
de
deux
cours|cour
facultatif
,
adresser
lettre
d
‘
interdiction
.
Ecriver
programme
en
PHP
permettre
d
’
afficher
lettre
type
correspondre
à
situation
stagiaire
en
avoir
prendre
soin
de
vérifier
préalable
civilité
stagiaire
.
disposer
quatre
variable
suivant
pour
aider
:
$
prenom
:
prendre
valeur
de
choix
$
nom
:
prendre
valeur
de
choix
$
civ
:
pouvoir
prendre
un
valeur
suivant
:
`
`
'
'
pour
Madame
,
`
`
'
'
pour
Mademoiselle
,
`
`
'
'
pour
monsieur
.
$
ncours|cour
nombre
de
cours|cour
principal
pouvoir
prendre
valeur
de
à
.
$
ncoursf
nombre
de
cours|cour
facultatif
pouvoir
prendre
valeur
de
à
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
instruction
«
switch
»
instruction
permettre
de
réaliser
aiguillage
multidirectionnel
.
structure
de
Switch
Switch
(
variable
)
{
caser
valeur
:
bloc
d
’
instruction
break
;
caser
valeur
:
bloc
d
’
instruction
break
;
caser
valeur
n
:
bloc
d
’
instruction
n
default
}
:
dernier
bloc
d
’
instruction
case
spécial
default
être
utiliser
case
avoir
échouer
.
devoir
être
dernier
cas
lister
.
exemple
:
<
?
php
/
/
dans
liste
déroulant
proposer
gens
différent
choix
de
pays
,
/
/
choix
$
liste
avoir
pour
valeur
avoir
,
b
,
c
renvoyer
à
page
/
/
suivant
contenir
script
:
$
liste
=
array
(
)
;
switch
(
$
liste
)
{
case
`
`
avoir
'
'
:
echo
`
`
habiter
en
France
'
'
;
break
;
case
`
`
b
'
'
:
echo
`
`
habiter
en
Allemagne
'
'
;
break
;
case
`
`
c
'
'
:
echo
`
`
habiter
en
Espagne
'
'
;
break
;
default
:
echo
`
`
pays
être
connaître
'
'
;
}
?
>
exercice
:
(
voir
annexe
instruction
conditionnel
exercice
)
.
reprendre
l
’
exercice
de
chapitre
afficher
page
en
utiliser
l
’
instruction
`
`
switch
'
'
.
boucle
boucle
while
do
...
while
boucle
while
exécuter
bloc
d
’
instruction
expression
de
boucle
while
être
vérifier
(
évaluer
TRUE
)
.
valeur
de
expression
être
vérifier
à
début
de
boucle
,
,
valeur
changer
durant
exécution
de
instruction
,
exécution
arrêter
qu
'
à
fin
de
itération
(
fois
PHP
exécuter
instruction
,
appeler
itération
)
.
expression
while
n
’
être
vérifier
(
évaluer
FALSE
)
avant
premier
itération
,
instruction
être
exécuter
.
structure
de
boucle
while
while
(
condition
)
{
bloc
d
’
instruction
...
}
exemple
:
<
?
php
$
num
=
;
while
(
$
num
<
=
)
{
echo
$
num
.
`
`
<
br
>
'
'
;
/
/
afficher
chiffre
de
à
$
num++
;
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
}
?
>
exercice
:
(
voir
annexe
boucle
exercice
)
tableau
mois|moi
de
l
’
année
:
$
mois|moi
=
array
(
'
janvier
'
,
'
février
'
,
'
Mars
'
,
'
avril
'
,
'
mai
'
,
'
juin
'
,
'
juillet
'
,
'
Aôut
'
,
'
septembre
'
,
'
octobre
'
,
'
novembre
'
,
'
décembre
'
)
;
créer
page
PHP
afficher
douze
mois|moi
de
l
’
année
à
l
’
aide
de
l
’
instruction
while
.
boucle
do
...
while
être
similaire
à
boucle
while
:
condition
être
vérifier
à
fin
de
itération
,
début
,
s
’
exécuter
fois
.
structure
de
boucle
do
while
do
{
bloc
d
’
instruction
...
}
while
(
$
num
<
)
exemple
:
<
?
php
$
num
=
;
do
{
echo
$
num
.
`
`
<
br
>
'
'
;
$
num++
;
}
while
(
$
num
<
)
/
/
afficher
chiffre
de
à
?
>
exercice
:
(
voir
annexe
boucle
exercice
)
reprendre
l
’
exercice
précédent
créer
page
PHP
afficher
mois|moi
de
juin
à
l
’
aide
de
l
’
instruction
do
while
.
boucle
«
for
»
type
de
boucle
for
while
être
équivalent
.
utiliser
boucle
for
nombre
de
répétition
être
prédéfinir
.
structure
de
boucle
for
for
(
expression1
;
condition
;
expression2
)
{
bloc
d
’
instruction
...
}
exemple
:
<
?
php
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
echo
$
i
.
`
`
<
br
>
'
'
;
/
/
afficher
chiffre
de
à
}
?
>
exercice
:
(
voir
annexe
boucle
exercice
)
reprendre
l
’
exercice
de
chapitre
créer
page
PHP
afficher
douze
mois|moi
de
l
’
année
à
l
’
aider
de
boucle
for
.
voir
autre
boucle
(
foreach
,
list
Each
)
chapitre
concerner
tableau
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
tableau
avoir
aborder
tableau
,
aller
voir
possibilité
.
tableau
être
série
de
variable
avoir
même
nom
.
constituant
tableau
être
appeler
élément
.
élément
d
’
tableau
être
associer
de
manière
unique
à
entier
.
grâce
à
entier
,
appeler
index
indice
clé
,
être
possible
de
accéder
à
élément
de
tableau
agir
de
variable
normal
.
accéder
à
élément
tableau
en
utiliser
crochet
[
]
contenir
l
’
index
.
entier
indexer
tableau
n
'
avoir
obligation
de
suivre
.
index
être
manquant
,
PHP
utiliser
index
grand
index
exister
incrémenter
de
.
sommer
tenir
de
déclarer
être
avant
d
’
initialiser
tableau
,
élément
créer
à
volée
.
pouvoir
affecter
valeur
élément
tableau
de
même
façon
pour
autre
variable
.
pouvoir
initialiser
tableau
de
deux
manière
différent
.
structure
d
’
tableau
NomTableau
[
]
=
valeur
;
NomTableau
=
array
(
indice
valeur
,
indice
=
>
valeur
,
...
)
exemple
:
<
?
php
$
auteur
[
]
=
`
`
Molière
'
'
;
$
auteur
[
]
=
`
`
Franz
Kafka
'
'
;
$
auteur
[
]
=
`
`
Albert
Camus
'
'
;
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Molière
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Franz
Kafka
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Albert
Camus
?
>
à
l
’
aider
de
fonction
array
(
)
.
<
?
php
$
auteur
=
?
>
array
(
`
`
Molière
'
'
,
'
'
Franz
Kafka
'
'
,
`
`
Albert
Camus
'
'
)
;
dans
exemple
l
’
indice
n
’
avoir
être
renseigner
,
PHP
s
’
en
charge
,
valeur
`
`
Molière
'
'
,
`
`
Franz
Kafka
'
'
,
`
`
Albert
Camus
'
'
prendre
valeur
,
,
.
pouvoir
spécifier
indice
tableau
.
<
?
php
$
auteur
[
]
=
`
`
Molière
'
'
;
$
auteur
[
]
=
`
`
Franz
Kafka
'
'
;
$
auteur
[
]
=
`
`
Albert
Camus
'
'
;
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Molière
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Franz
Kafka
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Albert
Camus
?
>
<
?
php
$
auteur
=
array
(
=
>
`
`
Molière
'
'
,
=
>
`
`
Franz
Kafka
'
'
,
=
>
`
`
Albert
Camus
'
'
)
;
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Molière
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Franz
Kafka
echo
$
auteur
[
]
.
`
`
<
br
>
'
'
;
/
/
affiche
Albert
Camus
?
>
dans
exemple
l
’
indice
avoir
être
renseigner
,
valeur
`
`
Molière
'
'
,
`
`
Franz
Kafka
'
'
,
`
`
Albert
Camus
'
'
prendre
valeur
,
,
.
exercice
:
(
voir
annexe
tableau
exercice
)
.
tableau
mois|moi
de
l
’
année
:
$
mois|moi
=
array
(
'
janvier
'
,
'
février
'
,
'
Mars
'
,
'
avril
'
,
'
mai
'
,
'
juin
'
,
'
juillet
'
,
'
Aôu
t
'
,
'
septembre
'
,
'
octobre
'
,
'
novembre
'
,
'
décembre
'
)
;
afficher
mois|moi
de
juillet
à
partir
tableau
mois|moi
de
l
’
année
sans
utiliser
de
boucle
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
fonction
de
traitement
de
tableau
Php
offrir
de
nombreux
fonction
pour
manipuler
tableau
(
reporter
à
documentation
pour
liste
complet
fonction
de
tableau
.
en
un
:
Array
(
)
;
Count
(
$
tableau
)
;
Reset
(
$
tableau
)
;
End
(
$
tableau
)
;
Current
(
$
tableau
)
;
Next
(
$
tableau
)
;
Prev
(
$
tableau
)
;
Extract
(
$
tableau
)
;
créer
tableau
renvoi
nombre
d
’
élément
tableau
retourner
premier
élément
tableau
positionner
dernier
élément
tableau
renvoi
l
’
élément
en
cour
tableau
positionner
sur
l
’
élément
suivre
tableau
positionner
sur
l
’
élément
précédent
tableau
importer
variable
dans
table
symbole
à
partir
d
’
tableau
.
(
attention
traitement
collision
)
in_array
(
$
tableau
)
;
renvoi
TRUE
valeur
appartenir
à
tableau
array_search
(
)
;
rechercher
élément
dans
tableau
renvoi
clé
s
’
exister
array_keys
(
$
tableau
,
$
chaine
)
;
renvoi
clé
d
’
tableau
array_diff
(
$
tableau1
,
$
tableau2
)
;
créer
tableau
contenir
élément
premier
tableau
être
dans
second
Array_push
(
(
$
tableau
,
$
chaine
)
;
ajouter
élément
à
fin
de
tableau
Print_r
(
$
tableau
)
;
afficher
tableau
dans
format
montrer
clé
valeur
.
parcourir
tableau
avec
boucle
pouvoir
passer
en
revue
tableau
avec
boucle
for
,
List
each
foreach
:
pour
utiliser
boucle
for
nombre
de
répétition
devoir
être
prédéfinir
.
pour
faire
utiliser
fonction
count
(
)
renvoi
nombre
d
’
élément
tableau
:
exemple
:
<
?
php
$
tableau
=
array
(
'
bleu
'
,
'
rouge
'
,
'
vert
'
,
'
violet
'
,
'
jaune
'
)
;
for
(
$
i
=
;
$
i
<
Count
(
$
tableau
)
;
$
i++
)
{
echo
`
`
clé
=
`
`
.
$
i
.
'
'
valeur
=
`
`
.
$
tableau
[
$
i
]
.
`
`
<
br
>
'
'
;
}
?
>
List
each
List
array
(
)
,
list
(
)
être
véritable
fonction
,
construction
syntaxique
,
permettre
de
assigner
série
de
variable
en
seul
ligne
Each
each
(
)
retourner
pair
clé-valeur
courant
tableau
array
avance
pointeur
de
tableau
.
paire
être
retourner
dans
tableau
de
élément
,
avec
clé
,
,
key
,
valoir
.
élément
key
contenir
nom
de
clé
,
value
contenir
valeur
.
pointeur
interne
de
fichier
être
de
fin
tableau
,
each
(
)
retourne
FALSE
rester
dans
position
,
signifier
devoir
utiliser
reset
(
)
avant
de
réutiliser
tableau
.
exemple
:
<
?
php
$
couleur
=
array
(
'
bleu
'
,
'
rouge
'
,
'
vert
'
,
'
violet
'
,
'
jaune
'
)
;
reset
(
$
couleur
)
;
while
(
list
(
$
Cle
,
$
valeur
)
=
each
(
$
couleur
)
)
{
echo
`
`
$
Cle
=
>
$
valeur
<
BR
>
'
'
;
}
?
>
exercice
:
(
voir
annexe
tableau
exercice
)
.
dans
page
PHP
,
créer
tableau
contenir
voyelle
afficher
à
l
’
aide
de
l
’
instruction
list
each
.
exercice
:
(
voir
annexe
tableau
exercice
)
.
dans
page
PHP
construiser
tableau
$
List_stagiaire
,
contenir
élément
suivant
afficher
liste
à
l
’
aider
de
boucle
list
each
:
'
'
Madame
'
'
`
`
durant
'
'
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
'
'
Mademoiselle
'
'
`
`
Dupré
'
'
'
'
Alain
'
'
'
'
Monsieur
'
'
`
`
Camus
'
'
'
'
ami
'
'
`
`
Jean-Marc
'
'
Foreach
PHP
avoir
faire
évoluer
boucle
for
,
boucle
″Foreach″
.
boucle
″Foreach″
permettre
de
parcourir
tableau
contenir
nombre
inconnu
d
’
élément
,
effectuer
itération
jusqu
’
avoir
fin
tableau
.
prendre
deux
forme
.
premier
:
structure
de
boucle
foreach
Foreach
(
$
NomTableau
avoir
$
ElementTableau
)
{
instruction
avoir
exécuter
...
}
exemple
:
<
?
php
$
couleur
=
array
(
'
bleu
'
,
'
rouge
'
,
'
vert
'
,
'
violet
'
,
'
jaune
'
)
;
Foreach
(
$
couleur
avoir
$
ElementTableau
)
{
echo
$
ElementTableau
.
`
`
<
BR
>
'
'
;
}
?
>
second
:
structure
de
boucle
foreach
Foreach
(
$
NomTableau
avoir
$
ValeurIndice
=
>
$
ElementTableau
)
{
instruction
avoir
exécuter
...
}
second
forme
être
identique
à
premier
sauf
qu
’
mettre
avoir
disposition
valeur
d
’
indice
tableau
.
exemple
:
<
?
php
$
couleur
=
array
(
'
bleu
'
,
'
rouge
'
,
'
vert
'
,
'
violet
'
,
'
jaune
'
)
;
Foreach
(
$
couleur
avoir
$
ValeurIndice
=
>
$
ElementTableau
)
{
echo
`
`
$
ValeurIndice
=
$
ElementTableau
<
BR
>
'
'
;
}
?
>
foreach
démarrer
,
pointeur
interne
de
fichier
être
ramener
premier
élément
tableau
.
signifier
avoir
à
faire
appel
à
reset
(
)
avant
foreach
.
exercice
:
(
voir
annexe
tableau
exercice
)
.
créer
page
PHP
afficher
élément
contenir
dans
variable
global
$
_SERVER
en
utiliser
foreach
.
exercice
:
(
voir
annexe
tableau
exercice
)
.
reprendre
tableau
$
List_stagiaire
de
l
’
exercice
chapitre
`
`
tableau
'
'
créer
à
l
’
aide
d
’
fonction
PHP
prédéfinie
,
page
PHP
permettre
d
’
afficher
liste
.
rechercher
Madame
durant
Monsieur
Dupont
faire
parier
de
liste
indiquer
pour
,
par
phrase
,
s
’
avoir
être
contacter
par
courrier
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
tableau
multidimensionnel
tableau
multidimensionnel
être
tableau
composer
de
tableau
,
pouvoir
imbriquer
tableau
PHP
manquer
de
mémoire
.
définition
d
’
tableau
multidimensionnel
dans
forme
général
présenter
de
manière
suivant
:
structurer
d
’
tableau
multidimensionnel
NomTableau
=
array
(
indice
=
>
array
(
contenir
tableau
)
,
indice
=
>
array
(
contenir
tableau
)
,
...
)
exemple
:
<
?
php
$
animal
=
array
(
`
`
poisonns
'
'
=
>
array
(
`
`
sole
'
'
,
`
`
merlan
'
'
,
`
`
colin
'
'
,
'
'
sardine
'
'
)
,
'
'
serpent
'
'
=
>
array
(
`
`
orvet
'
'
,
'
'
couleuvre
'
'
)
,
'
'
oiseau
'
'
=
>
array
(
`
`
merle
'
'
,
`
`
serin
'
'
,
`
`
pie
'
'
)
)
;
/
/
$
poisonns
=
array
(
`
`
sole
'
'
,
`
`
merlan
'
'
,
`
`
colin
'
'
,
`
`
sardine
'
'
)
;
$
serpent
=
array
(
`
`
orvet
'
'
,
'
'
couleuvre
'
'
)
;
$
oiseau
=
array
(
`
`
merle
'
'
,
`
`
serin
'
'
,
`
`
pie
'
'
)
;
$
animal
=
array
(
`
`
poisonns
'
'
=
>
$
poisonns
,
'
'
serpent
'
'
=
>
$
serpent
,
'
'
oiseau
'
'
=
>
$
oiseau
)
;
echo
`
`
élément
\
$
animal
[
'
oiseau
'
]
[
]
valoir
:
`
`
.
$
animal
[
'
oiseau
'
]
[
]
;
?
>
exercice
:
(
voir
annexe
tableau
multidimensionnel
exercice
)
.
avec
liste
stagiaire
:
Madame
durer
,
Mademoiselle
Dupré
,
père
Alain
,
Monsieur
Camus
,
Jean-Marc
Leblanc
,
savoir
Madame
durant
être
domicilier
,
rue
Georges
Brassens
n
°
de
téléphone
être
:
Mademoiselle
`
`
Dupré
être
domicilier
,
rue
Jacques
Brel
n
°
de
téléphone
être
:
père
Alain
être
domicilier
,
rue
saint
père
n
°
de
téléphone
être
:
monsieur
Camus
être
domicilier
,
rue
scribe
n
°
de
téléphone
être
:
Jean-Marc
Leblanc
être
domicilier
rue
blanc
manteau
n
°
de
téléphone
être
:
dans
page
PHP
,
construiser
tableau
multidimensionnel
de
liste
stagiaire
,
adresse
N
°
de
téléphone
(
$
annuaire_stagiaire
)
,
afficher
liste
de
stagiaire
accompagner
dessous
de
adresse
.
exercice
:
(
voir
annexe
tableau
multidimensionnel
exercice
)
.
avec
liste
stagiaire
:
Madame
durer
,
Mademoiselle
Dupré
,
père
Alain
,
Monsieur
Camus
,
Jean-Marc
Leblanc
,
savoir
Madame
durant
être
domicilier
,
rue
Georges
Brassens
Créteil
Mademoiselle
`
`
Dupré
être
domicilier
,
rue
Jacques
Brel
Paris
père
Alain
être
domicilier
,
rue
saint
père
Saint-Denis
Monsieur
Camus
être
domicilier
,
rue
scribe
Antony
Jean-Marc
Leblanc
être
domicilier
rue
blanc
manteau
Montfermeil
Construiser
tableau
multidimensionnel
de
liste
stagiaire
adresse
(
$
annuaire_stagiaire
)
,
créer
page
PHP
afficher
liste
de
stagiaire
accompagner
dessous
de
adresse
en
afficher
sur
même
ligne
code
postal
ville
.
exercice
:
(
voir
annexe
tableau
multidimensionnel
exercice
)
.
avec
liste
stagiaire
:
Madame
durer
,
Mademoiselle
Dupré
,
père
Alain
,
Monsieur
Camus
,
Jean-Marc
Leblanc
,
savoir
Madame
durant
être
domicilier
,
rue
Georges
Brassens
Créteil
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
Mademoiselle
`
`
Dupré
être
domicilier
,
rue
Jacques
Brel
Paris
père
Alain
être
domicilier
,
rue
saint
père
Saint-Denis
Monsieur
Camus
être
domicilier
,
rue
scribe
Antony
Jean-Marc
Leblanc
être
domicilier
rue
blanc
manteau
Montfermeil
liste
inscrit
cours|cour
suivant
:
inscrire
cours|cour
de
mathématique
:
`
`
Madame
durer
'
'
`
`
Monsieur
Camus
'
'
inscrire
cours|cour
de
physique
:
`
`
Mademoiselle
Dupré
'
'
`
`
père
Alain
'
'
inscrire
cours|cour
de
Français
:
`
`
Jean-Marc
Leblanc
'
'
,
`
`
Mademoiselle
Dupré
'
'
`
`
Monsieur
Camus
'
'
.
dans
page
PHP
,
construiser
deux
tableau
multidimensionnel
,
un
pour
liste
stagiaire
avec
adresse
(
$
annuaire_stagiaire
)
un
pour
liste
cours|cour
avec
stagiaire
inscrit
(
$
cours_stagiaire
)
,
afficher
liste
de
cours|cour
stagiaire
inscrire
accompagner
dessous
de
adresse
en
afficher
sur
même
ligne
code
postal
ville
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
tri
de
tableau
PHP
mettre
à
disposition
fonction
de
tri
en
un
:
sort
(
)
;
Asort
(
)
;
Rsort
(
)
;
arsort
;
Ksort
(
)
;
krsort
(
)
;
trier
tableau
maintenir
association
index
,
supprimer
clé
existant
,
réordonner
.
trier
tableau
maintenir
association
index
comporter
de
même
façon
sortir
(
)
rsort
(
)
,
sauf
qu
’
renvoyer
tableau
dans
ordre
inverser
.
comporter
de
même
façon
sortir
(
)
rsort
(
)
,
sauf
qu
’
renvoyer
tableau
trier
dans
l
’
ordre
alphabétique
de
indice
de
chaîne
.
exemple
de
différent
tri
tableau
$
fruit
:
$
fruit
=
array
(
`
`
d
'
'
=
>
'
'
papaye
'
'
,
'
'
avoir
'
'
=
>
'
'
orange
'
'
,
'
'
b
'
'
=
>
'
'
banane
'
'
,
'
'
c
'
'
=
>
'
'
ananas
'
'
)
;
avant
tri
:
d
:
papaye
avoir
:
orange
b
:
banane
c
:
ananas
avant
tri
d
:
papaye
avoir
:
orange
b
:
banane
c
:
ananas
après
tri
:
exemple
de
tri
avec
sort
(
)
:
ananas
sort
(
$
fruit
)
;
tri
tableau
dans
ordre
alphabétique
valeur
:
banane
réordonner
indice
:
orange
:
papaye
après
tri
exemple
de
tri
avec
asort
(
)
c
:
ananas
asort
(
$
fruit
)
;
tri
tableau
dans
ordre
alphabétique
valeur
b
:
banane
maintenir
association
index
avoir
:
orange
d
:
papaye
avant
tri
:
d
:
papaye
avoir
:
orange
b
:
banane
c
:
ananas
après
tri
:
exemple
de
tri
avec
rsort
(
)
rsort
(
$
fruit
)
;
tri
tableau
dans
ordre
alphabétique
inverse
valeur
réordonner
indice
avant
tri
d
:
papaye
avoir
:
orange
b
:
banane
c
:
ananas
après
tri
exemple
de
tri
avec
arsort
(
)
arsort
(
$
fruit
)
;
tri
tableau
dans
ordre
alphabétique
inverse
valeur
maintenir
association
index
avant
tri
:
d
:
papaye
avoir
:
orange
b
:
banane
c
:
ananas
d
:
papaye
avoir
:
orange
b
:
banane
c
:
ananas
après
tri
:
exemple
de
tri
avec
ksort
(
)
ksort
(
$
fruit
)
;
tri
tableau
dans
ordre
alphabétique
de
indice
de
chaîne
.
maintenir
association
indice
avant
tri
d
:
papaye
avoir
:
orange
b
:
banane
c
:
ananas
:
papaye
:
orange
:
banane
:
ananas
avoir
:
orange
b
:
banane
c
:
ananas
d
:
papaye
après
tri
exemple
de
tri
avec
krsort
(
)
krsort
(
$
fruit
)
;
tri
tableau
dans
ordre
alphabétique
inverse
de
indice
de
chaîne
.
maintenir
association
indice
d
:
papaye
c
:
ananas
b
:
banane
avoir
:
orange
attention
tri
de
récupération
valeur
d
’
liste
par
indice
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exercice
:
(
voir
annexe
tri
tableau
)
.
tableau
mois|moi
de
année
:
$
mois|moi
=
array
(
'
janvier
'
,
'
février
'
,
'
Mars
'
,
'
avril
'
,
'
mai
'
,
'
juin
'
,
'
juillet
'
,
'
Aôut
'
,
'
septembre
'
,
'
octobre
'
,
'
novembre
'
,
'
décembre
'
)
;
effectuer
tri
avec
fonction
de
tri
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
fonction
fonction
être
section
de
code
définir
fois
pour
être
réutiliser
dans
d
’
autre
partir
programme
.
permettre
d
’
écrire
application
modulaire
structuré
.
fonction
pouvoir
prendre
valeur
d
’
entrée
appelé
argument
,
effectuer
opération
renvoyer
valeur
.
transfert
valeur
d
’
argument
dans
de
nouveau
variable
appeler
paramètre
dernier
pouvoir
être
utiliser
à
l
’
intérieur
de
fonction
.
exister
deux
type
de
fonction
:
fonction
prédéfini
:
PHP
disposer
de
nombreux
.
fonction
utilisateur
l
’
utilisateur
créer
même
.
fonction
prédéfinir
pouvoir
donner
qu
’
échantillon
succinct
nombreux
fonction
de
PHP
.
avoir
choisir
employer
.
Isset
(
)
;
Empty
(
)
;
Strtoupper
(
)
;
Strtolower
(
)
;
Ucfirst
(
)
;
exit
(
)
;
Die
(
)
;
Unset
(
)
;
renvoi
TRUE
variable
à
été
définir
FALSE
.
renvoi
TRUE
variable
être
définir
vide
FALSE
.
renvoyer
chaîne
en
majuscule
.
renvoyer
chaîne
en
minuscule
.
mettre
premier
caractère
en
majuscule
.
terminer
script
courant
.
envoi
message
passer
en
argument
avant
de
terminer
script
.
détruire
variable
.
fonction
utilisateur
fonction
pouvoir
être
définir
n
’
importer
dans
script
,
qu
’
seul
fois
.
pour
définir
fonction
devoir
donner
nom
.
fonction
être
déclarer
à
l
’
aide
de
l
’
instruction
function
,
selon
structure
suivant
:
structure
de
définition
d
’
fonction
function
nom_fonction
(
[
argument
]
)
{
corps
de
fonction
}
mot-clé
return
mettre
fin
avoir
fonction
,
vouloir
fonction
renvoi
valeur
placer
après
mot-clé
return
sur
dernier
ligne
de
fonction
.
exemple
:
<
?
php
function
charge
(
$
salaire
)
{
$
salaire
=
$
salaire
-
(
(
$
salaire
/
)
*
)
;
return
$
salaire
;
}
echo
charge
(
)
;
/
/
affiche
?
>
pouvoir
fournir
paramètre
séparer
par
virgule
:
exemple
:
<
?
php
function
charge
(
$
salaire
,
$
TauxCharge
)
{
$
salaire
=
$
salaire
-
(
(
$
salaire
/
)
*
$
TauxCharge
)
;
return
$
salaire
;
}
$
salaire
=
;
$
TauxCharge
=
;
echo
charge
(
$
salaire
,
$
TauxCharge
)
.
`
`
<
br
>
'
'
;
/
/
affiche
echo
$
salaire
;
/
/
affiche
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exercice
:
(
voir
annexe
fonction
exercice
)
.
dans
page
PHP
,
déclarer
deux
variable
php
affecter
valeur
de
prénom
nom
.
créer
fonction
get_msg
(
$
chaine
,
$
couleur
)
,
renvoyer
chaîne
passer
en
paramètre
dans
couleur
différent
,
passer
en
paramètre
,
savoir
rouge
=
`
`
#
FF0000
'
'
,
bleu
=
'
'
#
0000FF
'
'
,
vert
=
'
'
#
00FF00
'
'
blanc
=
'
'
FFFFFF
'
'
,
,
générer
texte
suivre
,
présenter
<
BR
>
appel
`
`
prénom
'
'
`
`
nom
'
'
avec
nom
en
rouge
prénom
en
vert
.
même
texte
à
aide
de
JavaScript
.
vérifier
en
appeler
fonction
.
exister
autre
méthode
pour
passer
paramètre
à
fonction
,
impliquer
valeur
modifier
à
l
’
intérieur
de
fonction
être
à
l
’
extérieur
.
s
’
appeler
passer
argument
par
référence
.
pour
indiquer
à
PHP
vouloir
utiliser
méthode
,
devoir
ajouter
&
(
commercial
)
début
de
variable
passée
.
pouvoir
appeler
fonction
avec
paramètre
passer
par
référence
,
méthode
n
’
être
valable
directif
«
allow_call_time_pass_reference
»
fichier
de
configuration
de
PHP
être
égal
à
.
exemple
:
<
?
php
function
charge
(
&
$
salaire
,
$
TauxCharge
)
{
$
salaire
=
$
salaire
-
(
(
$
salaire
/
)
*
$
TauxCharge
)
;
return
$
salaire
;
}
$
salaire
=
;
$
TauxCharge
=
;
echo
$
salaire
.
`
`
<
br
>
'
'
;
/
/
salaire
avant
fonction
afficher
echo
charge
(
$
salaire
,
$
TauxCharge
)
.
`
`
<
br
>
'
'
;
/
/
affiche
echo
$
salaire
;
/
/
salaire
aprés
fonction
afficher
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
porter
variable
Lorsqu
’
variable
être
créer
dans
page
PHP
,
dire
qu
’
à
durée
de
vie
identique
à
d
’
page
web
.
de
l
’
utilisation
d
’
variable
à
l
’
intérieur
d
’
fonction
durée
de
vie
être
égal
à
durée
de
vie
de
fonction
,
c
’
être
à
dire
qu
’
cesser
d
’
exister
dès
fonction
terminer
.
variable
déclarer
à
l
’
intérieur
d
’
fonction
être
dire
local
être
visible
(
accessible
)
en
dehors
de
fonction
.
exister
niveau
de
définition
de
variable
:
niveau
global
,
permettre
à
variable
de
être
visible
dans
fonction
à
extérieur
de
fonction
.
niveau
static
permettre
de
définir
variable
local
à
fonction
,
persister
durant
temps
de
exécution
script
.
niveau
local
,
utiliser
par
défaut
,
permettre
de
définir
variable
local
classique
.
fonction
imbriquer
pouvoir
imbriquer
fonction
un
dans
autre
,
attention
à
définir
fois
même
fonction
.
exemple
:
<
?
php
echo
`
`
vouloir
calculer
montant
de
retraite
,
fois
charge
déduire
:
<
br
>
'
'
;
function
retrait
(
$
total
,
$
TauxCharge
)
{
function
charge
(
$
salaire
,
$
TauxCharge
)
{
return
$
salaire
-
(
(
$
salaire
/
)
*
$
TauxCharge
)
;
}
$
ApresCharges
=
charge
(
$
total
,
$
TauxCharge
)
;
return
charge
(
$
total
,
$
TauxCharge
)
-
(
(
$
ApresCharges
/
)
*
)
;
}
$
total
=
;
$
TauxCharge
=
;
echo
`
`
total
=
`
`
.
$
total
.
`
`
<
BR
>
'
'
;
/
/
affiche
total
=
echo
`
`
retraite
=
`
`
.retrait
(
$
total
,
$
TauxCharge
)
.
`
`
<
br
>
'
'
;
/
/
afficher
retraire
=
echo
`
`
ApresCharges
=
`
`
.charge
(
$
total
,
$
TauxCharge
)
.
`
`
<
br
>
'
'
;
/
/
affiche
après
charge
=
/
/
echo
`
`
retraite
=
`
`
.retrait
(
$
total
,
$
TauxCharge
)
.
`
`
<
br
>
'
'
;
/
/
afficher
erreure
?
>
vouloir
accéder
à
variable
situer
à
l
’
intérieur
d
’
fonction
,
devoir
utiliser
l
’
instruction
global
,
indiquer
à
PHP
n
’
être
nouveau
variable
local
variable
global
pouvoir
être
utiliser
dans
script
.
exemple
:
<
?
php
function
charge
(
$
salaire
,
$
TauxCharge
)
{
global
$
salaire
;
$
salaire
=
;
$
salaire
-
=
(
(
$
salaire
/
)
*
$
TauxCharge
)
;
return
$
salaire
;
}
$
salaire
=
;
$
TauxCharge
=
;
echo
$
salaire
.
`
`
<
BR
>
'
'
;
/
/
affiche
echo
charge
(
$
salaire
,
$
TauxCharge
)
.
`
`
<
br
>
'
'
;
/
/
affiche
echo
$
salaire
.
`
`
<
BR
>
'
'
;
/
/
affiche
?
>
exercice
:
(
voir
annexe
fonction
exercice
)
.
reprendre
tableau
stagiaire
(
$
annuaire_stagiaire
)
de
l
’
exercice
chapitre
tableau
multidimensionnel
,
parcourrer
tableau
à
l
’
aide
d
’
boucle
pour
élément
tableau
appeler
fonction
(
ajoute_stagiaire
(
)
)
avoir
créer
afficher
nombre
de
stagiaire
femme
,
nombre
de
stagiaire
homme
nombre
total
de
stagiaire
.
NB
:
aider
de
fonction
eregi
(
«
occurrence
à
rechercher
»
,
$
chaine
)
retourner
true
occurrence
avoir
être
trouver
dans
chaîne
false
dans
cas
contraire
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exercice
:
(
voir
annexe
fonction
exercice
)
.
reprendre
l
’
exercice
ajouter
fonction
(
moyenne_parité
(
)
)
permettre
d
’
afficher
parité
homme
/
femme
sous
forme
de
moyenne
(
%
)
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
inclusion
avec
fonction
include
(
)
require
(
)
,
PHP
permettre
d
’
inclure
segment
de
code
de
texte
à
endroit
donner
d
’
page
web
.
pouvoir
utiliser
fichier
inclure
pour
inclure
texte
,
code
HTML
script
PHP
.
C
’
être
de
façon
l
’
pouvoir
définir
élément
être
partager
par
page
d
’
site
web
.
l
’
vouloir
modifier
l
’
d
’
entre
,
suffire
de
modifier
dans
fichier
être
définir
modification
être
répercuter
dans
script
inclure
fichier
.
PHP
mettre
deux
instruction
à
disposition
pour
inclure
fichier
include
require
prennenet
forme
suivant
:
include
(
‘
’
monfichier
’
’
)
;
require
(
‘
’
monfichier
’
’
)
;
exemple
:
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
/
/
require
(
`
`
dns-remplacer
'
'
)
;
?
>
depuis
version
de
PHP
deux
instruction
être
identique
,
hormis
dans
gestion
erreur
.
Include
(
)
produire
alerte
(
warning
)
require
(
)
générer
erreur
fatal
.
en
de
autre
terme
,
hésiter
à
utiliser
require
(
)
vouloir
fichier
de
inclusion
manquant
interrompre
script
.
include
(
)
comporter
de
façon
,
script
continuer
exécution
.
exister
variante
instruction
include
require
,
s
’
agir
de
include_once
require_once
avoir
comportement
identique
hormis
qu
’
s
’
exécuter
qu
’
fois
dans
script
.
instruction
être
utiliser
de
préférence
fichier
devoir
être
inclure
évaluer
fois
dans
script
,
vouloir
être
sûr
être
inclure
seul
fois
,
pour
éviter
redéfinition
de
fonction
.
exercice
:
(
voir
annexe
inclusion
exercice
)
.
créer
fichier
PHP
`
`
dns-remplacer
'
'
permettre
d
’
afficher
grâce
à
instruction
d
’
inclusion
message
de
bienvenue
sur
page
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
formulaire
formulaire
être
page
contenir
texte
encapsuler
dans
balise
HTML
.
pouvoir
mettre
à
disposition
client
divers
élément
:
bouton
d
’
envoi
,
liste
déroulant
,
case
à
option
,
bouton
radio
etc
...
client
envoi
page
HTML
serveur
,
transmettre
information
recueillir
à
PHP
traite
renvoi
dans
cadre
de
réponse
http
navigateur
.
information
être
regrouper
à
l
’
aide
d
’
un
deux
méthode
,
méthode
`
`
GET
'
'
méthode
'
'
POST
'
'
.
balise
html
`
`
<
form
>
'
'
permettre
de
créer
formulaire
,
posséder
de
nombreux
attribut
,
l
’
occurrence
l
’
attribut
`
`
method
'
'
,
indiquer
à
PHP
méthode
à
utiliser
l
’
attribut
`
`
action
'
'
indiquer
serveur
à
qu
’
pager
rendre
fois
l
’
utilisateur
avoir
cliquer
sur
bouton
envoi
.
exemple
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
GET
'
'
>
directive
`
`
register_globals
fichier
de
configuration
être
égal
'
'
à
PHP
traiter
information
transmettre
par
client
en
transformer
valeur
de
l
’
attribut
name
élément
en
variable
en
affecter
valeur
de
l
’
attribut
`
`
value
'
'
.
exemple
:
<
input
type
=
'
'
text
'
'
value
=
'
'
madame
durer
'
'
name
=
'
'
nom
'
'
/
>
variable
$
nom
être
créer
valeur
`
`
madame
durer
'
'
être
affécté
.
méthode
GET
:
méthode
indique
navigateur
de
joindre
à
l
’
URL
valeur
placer
par
l
’
utilisateur
dans
formulaire
.
pour
faire
navigateur
ajouter
point
d
’
interrogation
à
fin
de
l
’
adresse
URL
,
paramètre
sous
forme
de
pair
nom
=
valeur
séparer
par
un
&
(
commercial
)
.
exemple
:
http
:
/
/
localhost
/
coursphp
/
dns-remplacer
?
animal
=
chat
&
nom
=
minou
méthode
POST
:
être
inconvénient
pouvoir
reprocher
à
méthode
`
`
GET
'
'
être
nature
publique
de
transmission
.
vouloir
donnée
envoyé
apparaître
dans
URL
,
falloir
utiliser
méthode
`
`
POST
'
'
.
fonctionner
méthode
`
`
GET
'
'
à
différence
information
formulaire
être
envoyer
corps
de
requête
HTTP
lieu
de
faire
partie
de
URL
.
signifier
être
visible
œil
de
dans
mesure
être
attacher
à
URL
.
méthode
`
`
POST
'
'
permettre
transmission
de
grand
nombre
de
donnée
.
notion
avoir
importance
avoir
limite
physique
à
quantité
de
donner
pouvoir
être
transmettre
dans
cadre
de
URL
.
utilisateur
envoi
formulaire
serveur
,
PHP
recueillir
information
dans
variable
stock
dans
tableau
sous
forme
index
/
valeur
index
correspondre
nom
paramètre
valeur
à
valeur
.
tableau
`
`
$
_GET
'
'
`
`
$
HTTP_GET_VARS
'
'
stock
information
recueillir
par
méthode
'
'
GET
'
'
tableau
`
`
$
_POST
'
'
`
`
$
HTTP_POST_VARS
'
'
recueillir
avec
méthode
`
`
POST
'
'
.
exemple
:
<
html
>
<
head
>
<
title
>
exemple
de
formulaire
<
/
title
>
<
link
rel
=
'
'
stylesheet
'
'
href
=
'
'
dns-remplacer
'
'
type
=
'
'
text
/
css
'
'
/
>
<
/
head
>
<
body
>
<
form
action
=
'
'
form_get_
dns-remplacé
'
'
method
=
'
'
GET
'
'
>
merci
de
remplir
formulaire
<
br
>
nom
&
nbsp
;
:
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
<
input
type
=
'
'
text
'
'
size
=
'
'
'
'
maxlength
=
'
'
'
'
name
=
'
'
nom
'
'
/
>
<
br
>
prénom
&
nbsp
;
:
&
nbsp
;
<
input
type
=
'
'
text
'
'
size
=
'
'
'
'
maxlength
=
'
'
'
'
name
=
'
'
prenom
'
'
/
>
<
br
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
&
nbsp
;
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
/
>
<
/
form
>
<
/
body
>
<
/
html
>
exercice
:
(
voir
annexe
formulaire
exercice
)
.
créer
formulaire
montrer
figure
,
à
l
’
aide
d
’
boucle
afficher
dans
page
PHP
message
de
bienvenue
composer
élément
saisir
en
utiliser
méthode
GET
méthode
POST
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
Urlencode
(
)
Urldecode
(
)
Lorsqu
’
appeler
page
avec
méthode
GET
,
chaîne
de
caractère
être
abouter
à
l
’
URL
,
contenir
suite
de
couple
nom
/
valeur
élément
formulaire
séparer
par
caractère
&
.
suite
être
coder
de
façon
n
’
figurer
espace
(
être
remplacer
par
«
+
»
)
.
en
,
caractère
de
ponctuation
diacritique
être
remplacer
par
code
ASCII
.
exemple
:
<
?
php
prenom
=
Arthur-Jérémie
cours|cour
[
]
=
Anglais
être
transmettre
dans
URL
:
prenom
=
Arthur-J
%
E9r
£
E9émie
&
cours|cour
%
5B
%
5D
=
Anglais
?
>
grâce
fonction
urldecode
urlencode
pouvoir
transformer
chaîne
de
l
’
url
qu
’
devenir
lisible
.
urldecode
(
)
décoder
séquence
%
#
#
remplacer
par
valeur
.
chaîne
décoder
être
retourner
.
urlencode
(
)
retourner
chaîne
caractère
alpha-numérique
(
hormis
-_
.
)
être
remplacer
par
séquence
commencer
par
caractère
pourcentage
(
%
)
,
suivre
de
deux
chiffre
hexadécimal
.
espace
être
remplacer
par
signe
(
+
)
.
codage
être
être
utiliser
pour
poster
information
dans
formulaire
HTML
.
exemple
:
commencer
par
récupérer
chaîne
de
l
’
URL
trouver
dans
variable
global
$
_SERVER
[
`
`
QUERY_STRING
'
'
]
,
appliquer
fonction
split
aller
récupérer
occurrence
de
chaîne
séparer
par
&
dans
tableau
,
aller
isoler
nom
de
valeur
de
façon
classique
à
l
’
aider
de
boucle
while
.
exemple
:
<
?
php
$
avoir
=
split
(
'
&
'
,
$
_SERVER
[
`
`
QUERY_STRING
'
'
]
)
;
$
I
=
;
while
(
$
I
<
count
(
$
avoir
)
)
{
$
b
=
spilt
(
'
=
'
,
$
avoir
[
$
i
]
)
;
echo
'
valeur
paramètre
'
,
htmlspecialchar
(
urldecode
(
$
b
[
]
)
)
,
'
être
'
,
htmlspecialchar
(
urldecode
(
$
b
[
]
)
)
,
`
`
<
br
>
'
'
;
$
i++
;
}
?
>
exercice
:
(
voir
annexe
formulaire
exercice
)
.
créer
formulaire
de
exemple
,
à
l
’
aider
de
fonction
urldecode
(
)
afficher
dans
page
PHP
message
de
bienvenue
composer
élément
saisir
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
Recupération
variable
aller
voir
sous
forme
d
’
exemple
d
’
exercice
contrôle
HTML
courant
manière
de
traiter
avec
PHP
.
l
’
avoir
voir
,
l
’
utilisateur
clique
sur
bouton
`
`
envoyer
'
'
,
transmettre
serveur
http
formulaire
selon
méthode
mentionner
par
l
’
attribut
`
`
Method
'
'
de
balise
`
`
action
'
'
,
,
PHP
interpréter
code
redirige
l
’
action
sur
page
mentionner
par
l
’
attribut
`
`
action
'
'
de
balise
`
`
FORM
'
'
.
après
l
’
analyser
de
page
(
parser
)
,
renvoi
réponse
à
l
’
utilisateur
via
serveur
HTTP
.
exercice
:
(
voir
annexe
formulaire
exercice
)
.
d
’
illustrer
mécanisme
,
créer
formulaire
d
’
inscription
(
voir
figurer
)
en
HTML
récupérer
sur
autre
page
PHP
valeur
saisir
par
l
’
utilisateur
,
en
utiliser
méthode
`
`
GET
'
'
méthode
'
'
POST
'
'
.
créer
deux
page
distinct
obtenir
séparation
code
HTML
constituer
élément
d
’
interface
proposer
client
(
IHM
)
,
code
PHP
gérer
règle
de
gestion
(
validation
,
calcul
,
contrôle
,
etc
...
)
,
donner
meilleur
visibilité
faciliter
maintenance
l
’
pouvoir
intervenir
sur
l
’
interface
sans
modifier
code
vis
.
formulaire
de
inscription
nom
:
prénom
:
adresse
:
Courriel
:
envoyer
figurer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
contrôle
HTML
bouton
radio
bouton
radio
créer
avec
balise
HTML
:
<
input
type
=
'
'
radio
'
'
value
=
'
'
'
'
checked
=
'
'
checked
'
'
name
=
'
'
'
'
>
pour
récupérer
valeur
d
’
groupe
de
bouton
radio
,
falloir
bouton
radio
avoir
même
nom
,
PHP
créer
qu
’
seul
variable
pouvoir
avoir
qu
’
seul
valeur
être
traiter
n
’
importer
qu
’
autre
variable
.
exercice
:
(
voir
annexe
formulaire
exercice
)
.
créer
formulaire
identique
précédent
,
en
ajouter
groupe
de
bouton
radio
permettre
à
l
’
utilisateur
de
choisir
civilité
,
montrer
figure
.
formulaire
de
inscription
Madame
:
Mademoiselle
:
Monsieur
:
nom
:
prénom
:
adresse
:
Courriel
:
envoyer
figurer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
case
à
cocher
liste
de
sélection
.
case
à
cocher
liste
de
sélection
permettre
d
’
effectuer
choix
.
être
pratique
de
considérer
réponse
être
constituer
par
tableau
,
convenir|convier
l
’
attribut
`
`
name
'
'
élément
`
`
<
select
>
'
'
`
`
<
input
>
'
'
être
suivre
de
crochet
.
PHP
transformer
variable
sous
forme
de
tableau
pouvoir
appliquer
traitement
l
’
à
voir
chapitre
tableau
(
boucle
,
tri
,
etc
.
.
)
.
case
à
cocher
créer
avec
balise
HTML
:
<
input
type
=
'
'
checkbox
'
'
value
=
'
'
physique
'
'
name
=
'
'
cours|cour
[
]
'
'
>
liste
de
selection
créer
avec
balise
HTML
:
<
select
name
=
'
'
coursoption
[
]
'
'
multiple
>
<
option
>
'
'
élément
de
liste
'
'
<
/
option
>
<
option
>
'
'
élément
de
liste
'
'
<
/
option
>
<
/
select
>
exercice
:
(
voir
annexe
formulaire
exercice
)
.
pour
compléter
page
aller
ajouter
liste
case
à
cocher
,
pour
faire
,
réaliser
formulaire
en
HTML
(
voir
figurer
)
,
récupérer
sur
autre
page
PHP
valeur
saisi
.
formulaire
de
inscription
Madame
:
Mademoiselle
:
Monsieur
:
nom
:
prénom
:
adresse
Courriel
:
choix
cours|cour
:
principal
:
optionnel
math
ématiques
:
physique
:
anglais
espagnol
Art
plastiquer
Français
:
envoyer
figurer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exercice
:
(
voir
annexe
formulaire
exercice
)
.
tableau
:
$
List_stagiaire
=
array
(
=
>
'
'
Madame
durer
'
'
,
=
>
'
'
Mademoiselle
Dupré
'
'
,
=
>
'
'
Alain
'
'
,
=
>
'
'
monsieur
Camus
'
'
,
=
>
'
'
ami
Jean-Marc
'
'
)
;
afficher
stagiaire
issu
tableau
dans
liste
de
sélection
,
à
l
’
aide
d
’
bouton
permetter
à
l
’
utilisateur
d
’
alimenter
second
liste
titulaire
montrer
figue
liste
stagiaire
titulaire
Madame
durant
Mademoiselle
Dupré
Alain
Monsieur
Camus
=
=
=
=
>
figurer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
validation
formulaire
avec
formulaire
de
figure
avoir
permettre
à
l
’
utilisateur
de
saisir
renseignement
qu
’
souhaiter
de
envoyer
,
formulaire
être
incomplet
saisie
être
erroné
,
vérification
être
faîte
être
envoyer
.
aller
demander
à
PHP
de
faire
vérification
nécessaire
avant
d
’
afficher
page
HTML
.
rappeler
l
’
pouvoir
envoyer
serveur
page
HTML
qu
’
page
PHP
.
exercice
:
(
voir
annexe
formulaire
exercice
)
.
reprendre
formulaire
de
figure
,
après
avoir
ajouter
champ
pour
code
postal
,
champ
pour
ville
autre
pour
téléphone
,
ajouter
fonction
dans
page
PHP
permettre
de
vérifier
champ
avoir
être
saisir
.
c
’
être
cas
fonction
renvoyer
TRUE
afficher
résultat
,
fonction
renvoyer
FALSE
réafficher
page
HTML
accompagner
d
’
message
indiquer
à
l
’
utilisateur
champ
incorrect
.
dans
cas
l
’
réafficher
page
HTML
pour
correction
,
éviter
à
l
’
utilisateur
de
saisir
à
nouveau
Madame
:
Mademoiselle
:
Monsieur
:
nom
:
prénom
:
adresse
:
code
postal
:
ville
Courriel
:
choix
cours|cour
:
optionnel
principal
:
mathématique
:
physique
:
anglais
espagnol
Art
plastiquer
Français
:
envoyer
Réinitialiser
figurer
information
dns-remplacer
de
inscription
dans
exemple
,
envoyer
page
PHP
détecter
d
’
abord
s
’
s
’
agir
d
’
premier
envoi
en
vérifier
méthode
POST
GET
grâce
à
variable
$
_SERVER
[
'
REQUEST_METHOD
'
]
.
c
’
être
cas
exécuter
fonction
de
vérification
informer
saisie
être
correct
.
selon
résultat
de
fonction
afficher
page
de
résultat
page
de
saisie
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
Htmlentites
(
)
htmlspecialchar
fonction
jouer
rôle
important
dans
traduction
de
caractère
destiner
à
être
afficher
par
navigateur
.
premier
convertir
plupart
diacritique
dire
caractère
spécial
en
entité
de
caractère
équivalent
.
dire
«
plupart
»
,
c
’
être
caractère
€
«
oe
«
être
traduire
.
second
convertir
caractère
avoir
sens|sen
particulier
dans
commande
HTML
:
commercial
(
&
)
devenir
&
amp
;
.
chevron
balise
(
<
>
)
devenir
$
lt
;
$
gt
;
.
guillemet
(
`
`
)
devenir
&
quot
;
second
argument
valoir
ENT_QUOTES
.
exemple
<
?
php
$
new
=
htmlspecialchar
(
`
`
<
avoir
href
=
'
test
'
>
test
<
/
avoir
>
'
'
,
ENT_QUOTES
)
;
$
new
=
htmlentities
(
`
`
<
avoir
href
=
'
test
'
>
test
<
/
avoir
>
'
'
,
ENT_QUOTES
)
;
?
>
NB
:
n
’
utiliser
dernier
fonction
l
’
récupérer
élément
saisir
dans
formulaire
avoir
de
fort
chance
d
’
avoir
comportement
inattendu
.
exercice
:
(
voir
annexe
formulaire
exercice
)
.
reprendre
formulaire
de
l
’
exercice
(
figurer
)
,
à
l
’
aider
de
fonction
htmlentities
(
)
htmlspecialchar
,
supprimer
problème
relatif
saisie
balise
HTML
dans
champ
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
en-tête
HTTP
de
échange
par
protocole
HTTP
entre
navigateur
serveur
,
donnée
dire
de
entêter
contenir
information
sur
donnée
à
envoyer
(
dans
cas
de
requête
)
envoyer
(
dans
cas
de
réponse
)
.
information
en
question
,
sur
page
web
image
,
suivre
en-tête
.
en-tête
HTTP
permettre
de
effectuer
action
sur
navigateur
transfert
de
cookies
redirection
vers
autre
page
.
en-tête
être
premier
information
envoyer
navigateur
(
pour
réponse
)
serveur
(
dans
cas
de
requête
)
,
présenter
sous
forme
:
en-tête
:
valeur
syntaxe
devoir
être
respecter
,
espace
devoir
figurer
entre
nom
de
en-tête
deux
point
(
:
)
.
espace
devoir
par
contre
figurer
après
!
PHP
fournir
fonction
permettre
de
envoyer
en-tête
HTTP
serveur
navigateur
(
agir
de
réponse
HTTP
.
syntaxe
de
fonction
être
suivant
:
booléen
header
(
chaîne
en-tête
HTTP
)
Etant
donner
en-tête
HTTP
être
premier
information
envoyer
,
fonction
header
(
)
devoir
être
utiliser
avant
envoi
de
donnée
HTML
navigateur
(
script
contenir
devoir
être
placer
avant
balise
<
HTML
>
avant
fonction
echo
(
)
,
print
printf
(
)
)
utilisation
possible
de
fonction
header
(
)
:
exemple
:
pour
rediriger
navigateur
vers
nouveau
page
:
<
?
PHP
header
(
`
`
location
:
http
:
/
/
dns-remplacer
/
'
'
)
;
?
>
exemple
:
pour
envoyer
navigateur
image
créer
à
volée
(
pour
faire
compteur
de
statistique
histogramme
dynamique
par
exemple
)
:
<
?
php
header
(
`
`
Content-Type
:
image
/
gif
'
'
)
;
/
/
code
générer
image
imagegif
(
$
image
)
;
/
/
envoi
de
image
navigateur
?
>
récupérer
en-tête
de
requête
fonction
header
(
)
permettre
de
envoyer
en-tête
HTTP
navigateur
,
PHP
fournir
second
fonction
permettre
de
récupérer
dans
tableau
ensemble
en-tête
HTTP
envoyer
par
navigateur
.
syntaxe
de
fonction
:
tableau
getallheaders
(
)
;
tableau
retourner
par
fonction
contenir
en-tête
indexer
par
nom
.
script
permettre
par
exemple
de
récupérer
en-tête
particulier
.
exemple
:
<
?
php
$
entetes
=
getallheaders
;
echo
$
entetes
[
`
`
location
'
'
]
;
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
base
de
donnée
utiliser
base
donné
?
pour
stocker
information
,
être
avantageux
d
’
utiliser
base
donné
relationnel
qu
’
fichier
brut
.
en
effet
RBDMS
(
Relational
Database
management
System
)
présenter
atout
suivant
:
permettre
d
’
accéder
donnée
qu
’
avec
fichier
brut
;
pouvoir
interroger
pour
récupérer
ensemble
de
donnée
répondre
à
critère
;
posséder
mécanisme
intégré
permettre
de
gérer
accès
simultané
,
programmeur
n
’
être
besoin
de
s
’
en
occuper
;
permettre
d
’
accéder
à
donnée
;
posséder
système
de
privilège
intégrer
.
L
’
utilisation
d
’
base
de
donnée
relationnel
permettre
de
répondre
à
question
aider
à
améliorer
site
.
architecture
externe
d
’
base
de
donnée
web
étape
suivant
donner
cheminement
d
’
transaction
de
base
de
donnée
Web
typique
:
navigateur
Web
d
’
utilisateur
envoyer
requête
http
pour
page
Web
particulier
;
serveur
recevoir
requête
,
récupérer
fichier
.php
passe
moteur
PHP
qu
’
être
traiter
;
moteur
PHP
commencer
à
analyser
script
.
avoir
l
’
intérieur
de
script
trouver
commande
permettre
de
connecter
à
base
de
donnée
d
’
exécuter
requête
.
PHP
ouvrir|ouvrer
connexion
vers
serveur
de
base
de
donnée
transmettre
requête
approprié
;
serveur
de
base
de
donnée
recevoir
requête
de
base
de
donnée
traite
,
renvoyer
résultat
moteur
PHP
;
moteur
PHP
terminer
l
’
exécution
script
,
consister
en
formatage
résultat
de
requête
en
HTML
.
envoyer
fichier
HTML
obtenir
serveur
Web
.
serveur
Web
transmettre
page
HTML
navigateur
,
l
’
utilisateur
pouvoir
voir
résultat
.
.
accès
base
de
donné
support
PHP
de
connexion
base
de
donnée
PHP
prendre
en
charge
api
donner
accès
à
grand
nombre
de
base
de
donnée
,
oracle
,
Sybase
,
PostgreSQL
,
MySQL
,
etc
.
programme
PHP
pouvoir
utiliser
pour
accéder
donnée
.
ODBC
(
open
DataBase
Connectivity
,
middle
ware
de
connexion
)
être
api
(
application
Programming
interface
)
standard
permettre
d
’
accéder
à
base
de
donnée
prendre
en
charge
par
PHP
d
’
écrire
application
de
base
de
donnée
générique
,
c
’
code
de
l
’
application
fonctionner
pour
base
de
donnée
prendre
en
charge
norme
ODBC
.
rudiment
langage
SQL
SQL
(
Strutured
Query
Language
)
être
langage
de
programmation
standard
permettre
d
’
accéder
de
manipuler
information
d
’
base
de
donnée
relationnel
.
C
’
être
norme
ANSI
ISO
accepter
par
plupart
de
base
de
donnée
relationnel
.
requête
de
définition
de
donnée
instruction
SQL
permettre
de
modifier
schéma
de
base
de
donnée
en
créer
modifier
objet
dans
dernier
.
CREATE
:
permettre
de
créer
base
de
donnée
table
dans
base
de
donnée
existant
.
drop
:
permettre
de
détruire
base
de
donnée
table
dans
base
de
donnée
.
instruction
de
manipulation
de
donnée
instruction
SQL
permettre
de
modifier
contenu
d
’
base
de
donnée
.
insert
:
permettre
de
compléter
ligne
d
’
table
de
base
de
donnée
.
replacer
:
permettre
de
remplacer
ancien
enregistrement
par
nouveau
(
instruction
spécifique
à
base
MySQL
)
.
UPDATE
:
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
permettre
de
modifier
colonne
dans
enregistrement
.
DELETE
:
permettre
de
supprimer
d
’
table
un
enregistrement
correspondre
à
condition
particulier
.
instruction
de
recherche
select
:
permettre
d
’
effectuer
recherche
dans
base
de
donnée
MySQL
à
partir
d
’
application
web
.
PhpMyadmin
EasyPHP
être
livrer
avec
l
’
outil
`
`
PhpMyadmin
'
'
,
permettre
d
’
effectuer
opération
sur
base
de
donné
Mysql
de
manière
graphique
.
L
’
un
gros
avantage
outil
,
c
’
être
qu
’
i
mettre
avoir
disposition
syntax
SQL
modifier
pour
PHP
opération
effectuer
.
aller
étudier
base
de
donnée
(
`
`
formation
'
'
)
gérer
stagiaire
d
’
centre
de
formation
selon
modèle
:
après
avoir
installer
base
de
donnée
`
`
formation
'
'
à
l
’
aide
de
PhpMyadmin
,
aller
voir
élément
language
SQL
servir
de
base
avec
PHP
.
installer
base
formation
avoir
deux
manière
d
’
installer
base
formation
,
à
l
’
aide
de
PhpMyadmin
via
PHP
:
avec
PhpMyadmin
:
lancer
PhpMyadmin
avec
clique
droit
sur
l
’
icône
EasyPHP
,
configuration
PhpMyadmin
.
importer
fichier
SQL
de
création
de
base
stagiaire
(
dns-remplacer
)
cliquer
sur
l
’
icône
`
`
sql
'
'
de
fenêtre
de
gauche
sur
`
`
importer
fichier
'
'
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
avec
PHP
:
fichier
create_
dns-remplacé
contenir
commande
pour
créer
base
.
pouvoir
créer
base
en
appeler
script
par
l
’
url
:
http
:
/
/
ip-remplacée
>
/
coursphp
/
exercice
/
create_
dns-remplacé
exemple
:
étudire
détail
instruction
dans
chapitre
suivre
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
base
de
donnée
MySQL
MySQL
être
serveur
de
base
de
donnée
réduit
,
compact
convivial
.
être
disponible
pour
platesforme
UNIX
,
Windows
NT
,
Windows
/
.
être
inutile
de
déclarer
être
pour
utiliser
Mysql
avec
PHP4
,
PHP4
supporter
base
de
donnée
.
pour
PHP5
SqlLite
à
prendre
relais
,
falloir
charger
module
Mysql
.
chargement
module
MySql
avec
PHP5
:
modifier
fichier
de
configuration
`
`
dns-remplacer
'
'
dans
section
extension
ajouter
ligne
suivant
:
extension
=
php_
dns-remplacer
N
’
oublier
de
redémarrer
serveur
http
modification
être
prendre
en
compte
.
accès
à
base
de
donnée
MySQL
à
partir
Web
avec
PHP
dans
script
utiliser
pour
accéder
à
base
de
donnée
à
partir
Web
,
falloir
respecter
étape
suivant
:
établir
connexion
vers
base
de
donnée
approprier
;
envoyer
requête
vers
base
de
donnée
;
récupérer
traiter
résultat
pour
présenter
à
l
’
utilisateur
;
fermer
connexion
.
Etablir
connexion
fonction
mysql_connect
(
)
:
permettre
d
’
établir
connexion
.
int
mysql_connect
(
[
string
nom_serveur
]
,
[
string
nom_utilisateur
]
,
[
string
mot_passe
]
)
;
argument
être
optionnel
.
S
’
être
préciser
,
fonction
servir
valeur
par
défaut
:
'
'
localhost
'
'
pour
l
’
hôte
,
nom
de
l
’
utilisateur
sous
PHP
être
exécuter
,
mot
de
passe
.
fonction
renvoyer
identificateur
de
lien
vers
base
de
donnée
MySQL
(
réutiliser
par
suite
)
en
cas
de
succès
,
false
en
cas
d
’
échec
.
exemple
:
<
?
php
$
db
=
mysql_connect
(
`
`
localhost
'
'
,
`
`
root
'
'
,
`
`
'
'
)
;
/
/
identificateur
de
lien
être
enregistrer
dans
$
db
?
>
de
même
manière
,
fonction
mysql_pconnect
(
)
permettre
d
’
établir
connexion
,
renvoyer
connexion
persistant
vers
base
de
donnée
,
connexion
normal
être
fermer
l
’
exécution
script
être
terminer
.
exercice
:
(
voir
annexer
Etablir
connexion
exercice
)
.
créer
fichier
PHP
permettre
d
’
ouvrir
unr
connection
avec
MySql
,
avec
paramètre
:
nom
de
l
’
utilisateur
:
`
`
stagiaire
'
'
mot
de
passe
:
`
`
stagiaire
'
'
choisir
base
de
donnée
existant
fonction
mysql_select_db
(
)
:
permettre
de
sélectionner
base
de
donnée
existant
.
int
mysql_select_db
(
string
nom_base
,
[
int
identificateur_connexion
]
)
;
L
’
argument
identificateur_connexion
,
spécifier
lien
vers
base
de
donnée
,
être
optionnel
:
par
défaut
dernier
lien
ouvert
être
utiliser
,
lien
n
’
avoir
être
ouvrir
,
lien
par
défaut
être
ouvrir
avoir
appeler
mysql_connect
(
)
.
exercice
:
(
voir
choisir
base
de
donnée
existant
exercice
)
.
créer
fichier
PHP
permettre
d
’
établir
connexion
avec
base
formation
.
,
avec
paramètre
:
nom
de
l
’
utilisateur
:
`
`
stagiaire
'
'
mot
de
passe
:
`
`
stagiaire
'
'
exercice
:
(
voir
choisir
base
de
donnée
existant
exercice
)
.
créer
fichier
`
`
dns-remplacer
'
'
servir
de
besoin
sous
forme
de
fichier
inclure
à
connecter
à
base
formation
paramètre
de
connecter
être
identique
exercice
précédent
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
déconnexion
à
base
de
donnée
fonction
mysql_close
(
)
:
permettre
de
déconnecter
de
base
de
donnée
:
boolean
mysql_close
(
[
mixed
identificateur_connexion
]
)
;
attention
:
connexion
être
persistant
,
fonction
mysql_close
(
)
permettre
de
fermer
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
envoyer
requête
vers
base
de
donnée
fonction
mysql_query
(
)
:
permettre
d
’
envoyer
requête
base
de
donnée
.
requête
vouloir
exécuter
pouvoir
être
configurer
avant
l
’
appel
de
fonction
dans
fonction
:
structure
d
’
requête
SQL
$
query
=
“
...
requête
SQL
...
”
;
$
resultat
=
mysql_query
(
$
query
,
[
identificateur_connexion
]
)
;
$
resultat
=
mysql_query
=
“
...
requête
SQL
...
”
,
[
identificateur_connexion
]
)
;
fonction
mysql_db_query
(
)
:
pouvoir
appeler
fonction
mysql_db_query
(
)
permettre
de
spécifier
base
de
donnée
souhaiter
interroger
:
mixed
mysql_db_query
(
string
nom_base
,
string
requete
,
[
mixed
identificateur_connexion
]
)
;
en
cas
de
succès
,
deux
fonction
renvoyer
:
•
dans
cas
d
’
requête
d
’
interrogation
,
identificateur
de
résultat
permettre
de
récupérer
résultat
requête
,
•
dans
cas
d
’
autre
requête
,
.
en
cas
d
’
échec
renvoyer
false
.
L
’
identificateur
de
résultat
servir
de
clé
pour
accéder
à
zéro
,
un
ligne
renvoyer
par
requête
.
fonction
permettre
de
récupérer
résultat
à
partir
de
identificateur
.
exercice
:
(
voir
annexer
envoyer
requête
vers
base
de
donnée
,
exercice
)
.
créer
page
PHP
,
à
l
’
aide
fichier
dns-remplacer
,
permettre
d
’
exécuter
requête
interroger
table
stagiaire
:
PHP
disposer
de
fonction
permettre
de
récupérer
valeur
d
’
table
.
fonction
récupérer
nom
de
champ
valeur
stock
dans
variable
tableau
passer
en
paramètre
.
Mysql_fetch_array
(
)
array
mysql_fetch_array
(
resource
result_identifier
[
,
int
result_type
]
)
retourner
ligne
de
résultat
sous
forme
de
tableau
associatif
.
C
’
être
version
étendre
de
mysql_fetch_row
(
)
.
en
de
enregistrer
donnée
sous
forme
de
tableau
à
indice
numérique
,
pouvoir
enregistrer
dans
tableau
associatif
,
en
utiliser
nom
champ
indice
dire
,
pouvoir
récupérer
valeur
,
indiquer
l
’
indice
numérique
nom
de
champ
de
table
exemple
:
<
?
PHP
$
resultat
=
mysql_query
(
`
`
select
*
from
personne
'
'
,
$
conn
)
;
while
(
$
row
=
mysql_fetch_array
(
$
resultat
)
)
{
echo
`
`
<
br
>
'
'
.
$
row
[
`
`
num_personne
'
'
]
.
'
'
`
`
;
echo
$
row
[
`
`
nom
'
'
]
.
'
'
`
`
;
echo
$
row
[
`
`
prenom
'
'
]
.
'
'
<
br
>
'
'
;
}
?
>
mysql_fetch_row
(
)
array
mysql_fetch_row
(
resource
result_identifier
)
retourner
tableau
énumérer
correspondre
à
ligne
demander
,
FALSE
rester
de
ligne
.
pouvoir
récupérer
valeur
par
l
’
indice
numérique
.
exemple
:
<
?
PHP
$
resultat
=
mysql_query
(
`
`
select
*
from
personne
'
'
,
$
conn
)
;
while
(
$
row
=
mysql_fetch_array
(
$
resultat
)
)
{
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
echo
`
`
<
br
>
'
'
.
$
row
[
]
.
'
'
`
`
;
echo
$
row
[
]
.
'
'
`
`
;
echo
$
row
[
]
.
'
'
<
br
>
'
'
;
}
?
>
mysql_fetch_assoc
(
)
array
mysql_fetch_assoc
(
resource
result_identifier
)
retourner
tableau
associatif
contenir
ligne
lire
,
FALSE
,
rester
de
ligne
.
avoir
besoin
de
indice
numérique
,
préférer
mysql_fetch_array
(
)
dire
,
fait
qu
’
n
’
avoir
d
’
indice
numérique
,
colonne
porter
même
nom
,
dernier
avoir
priorité
,
autre
être
récupérer
.
exemple
:
<
?
PHP
$
resultat
=
mysql_query
(
`
`
select
*
from
personne
'
'
,
$
conn
)
;
while
(
$
row
=
mysql_fetch_assoc
(
$
resultat
)
)
{
echo
`
`
<
br
>
'
'
.
$
row
[
`
`
num_personne
'
'
]
.
'
'
`
`
;
echo
$
row
[
`
`
nom
'
'
]
.
'
'
`
`
;
echo
$
row
[
`
`
prenom
'
'
]
.
'
'
<
br
>
'
'
;
}
?
>
trois
fonction
valide
,
utiliser
faire
pouvoir
fonction
mysql_fetch_array
(
)
,
apporter
confort
d
’
utilisation
sans
pour
être
performant
autre
.
mysql_free_result
int
mysql_free_result
(
resource
result_identifier
)
mysql_free_result
(
)
effacer
résultat
de
mémoire
.
fonction
être
à
appeler
avoir
peur
de
utiliser
de
mémoire
durant
exécution
de
script
.
mémoire
associer
à
identifier
de
résultat
être
libérer
,
sans
oublier
,
traitement
terminer
avec
fin
script
.
exercice
:
(
voir
annexer
envoyer
requête
vers
base
de
donnée
,
exercice
)
.
créer
page
afficher
liste
stagiaire
avec
adresse
,
en
interroger
table
stagiaire
de
base
formation
,
en
utiliser
fonction
:
mysql_fetch_array
(
)
,
mysql_fetch_row
(
)
mysql_fetch_assoc
(
)
.
exercice
:
(
voir
annexer
envoyer
requête
vers
base
de
donnée
,
exercice
)
.
créer
page
afficher
liste
stagiaire
avec
adresse
,
en
interroger
table
stagiaire
de
base
formation
,
en
utiliser
mysql_fetch_array
(
)
,
présenter
resultat
sous
forme
de
tableau
HTML
(
balise
<
tabler
>
etc
...
)
,
montrer
figure
(
figurer
)
.
liste
stagiaire
N
°
de
stagiaire
N
°
de
téléphone
nom
prénom
adresser
code
postal
Madame
durant
,
rue
Georges
Brassens
Creteil
Mademoiselle
Dupré
,
rue
Jacques
Brel
pari
père
Alain
,
rue
saint
père
Saint-Denis
monsieur
Camus
Albert
,
rue
scribe
Antony
Madame
Leblanc
Jea
n-
rue
blanc
Marc
manteau
Montfermeil
ville
figure
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exercice
:
(
voir
annexer
envoyer
requête
vers
base
de
donnée
,
exercice
)
.
reprendre
formulaire
de
l
’
exercice
paragraphe
`
`
formulaire
'
'
remplacer
contrôle
checkbox
cours|cour
principal
à
l
’
aide
information
recueillir
dans
table
cours|cour
de
base
formation
alimenter
liste
de
sélection
cours|cour
optionnel
à
partir
de
même
table
.
Etape
de
construction
:
création
fichier
`
`
`
`
être
page
en
HTML
charger
de
afficher
champ
de
saisie
sous
forme
de
tableau
HTML
(
figurer
)
.
création
fichier
`
`
`
`
charger
de
vérifier
méthode
POST
à
été
utiliser
,
oui
vérifier
validité
formulaire
afficher
resultat
.
création
fichier
`
`
`
`
effectuer
contrôle
de
saisie
formulaire
d
’
inscription
en
PHP
.
création
fichier
`
`
chk_
dns-remplacer
'
'
création
contrôle
checkbox
à
partir
donnée
de
base
.
création
fichier
`
`
lst_
dns-remplacer
'
'
alimentation
de
liste
de
sélection
cours|cour
optionnel
à
partir
donnée
de
base
.
création
fichier
`
`
`
`
construire
mettre
former
page
de
résultat
selon
information
issu
de
base
de
donnée
de
saisi
de
l
’
utilisateur
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
rechercher
donnée
dans
base
commande
SQL
`
`
select
'
'
comporte
trois
clause
aller
servir
pour
rechercher
ordonner
donnée
:
clause
`
`
WHERE
'
'
,
clause
`
`
ORER
by
'
'
clause
`
`
LIMIT
'
'
.
clause
`
`
WHERE
'
'
:
ajouter
condition
s
’
exprimer
par
comparaison
entre
contenu
d
’
champ
constant
variable
.
condition
pouvoir
être
associer
avec
opérateur
AND
(
)
or
(
)
pouvoir
inverser
condition
avec
l
’
opérateur
NOT
(
)
.
pour
indiquer
différence
,
à
choix
entre
l
’
opérateur
habituel
`
`
!
=
'
'
l
’
opérateur
`
`
<
>
'
'
.
mot
clé
LIKE
recherche
correspondance
flou
d
’
chaîne
de
caractère
.
compléter
par
l
’
un
deux
caractère
`
`
_
'
'
`
`
%
'
'
autoriser
différent
combinaison
:
exemple
:
<
?
php
$
Sql
=
'
'
select
*
from
livre
where
auteur
=
'
Leon
'
'
'
;
/
/
rechercher
livre
nom
de
auteur
égal
à
`
`
Leon
'
'
/
/
trouver
livre
écrire
par
auteur
Leon
$
Sql
=
'
'
select
*
from
livre
where
auteur
=
'
%
Leon
'
'
'
;
/
/
rechercher
livre
nom
de
auteur
commencer
par
`
`
Leon
'
'
/
/
trouver
livre
écrire
par
auteur
`
`
Dona
Leon
'
'
$
Sql
=
'
'
select
*
from
livre
where
auteur
=
'
%
%
'
'
'
;
/
/
rechercher
livre
nom
de
auteur
contenir
`
`
Leon
'
'
/
/
trouver
livre
écrire
par
auteur
`
`
Dona
Leon
'
'
/
/
'
'
Edward
Marston
'
'
$
Sql
=
'
'
select
*
from
livre
where
auteur
=
'
_o
%
'
'
'
;
/
/
rechercher
livre
titre
deuxième
lettre
être
/
/
égal
à
`
`
o
'
'
/
/
trouver
titre
`
`
poésie
'
'
`
`
noblesse
obliger
'
'
?
>
clause
`
`
ORER
by
'
'
:
spécifier
nom
de
champ
sur
porter
de
tri
résultat
.
mot
clé
`
`
ASC
'
'
`
`
DESC
'
'
préciser
l
’
ordre
croissant
décroître
.
par
défaut
tri
avoir
lieu
dans
l
’
ordre
croître
.
exemple
:
<
?
php
$
Sql
=
'
'
select
*
from
livre
ORDER
by
auteur
desc
'
'
;
/
/
afficher
livre
dans
ordre
décroissant
.
?
>
clause
`
`
LIMIT
'
'
:
clause
indiquer
limite
exprimer
en
numéro
de
ligne
enregistrement
à
traiter
.
S
’
figurer
qu
’
seul
valeur
,
signifier
table
être
traiter
à
partir
de
valeur
indiqué
.
S
’
avoir
deux
limite
séparer
par
virgule
,
table
être
traiter
entre
valeur
indiqué
,
borne
comprendre
.
exemple
:
<
?
php
$
Sql
=
'
'
select
*
from
livre
LIMIT
,
'
'
;
?
>
avoir
voir
paragraphe
`
`
envoyer
requête
vers
base
de
donnée
'
'
interroger
base
de
donnée
.
avoir
voir
commande
SQL
composer
,
aller
manipuler
chaîne
de
caractère
,
issu
élément
saisir
par
utilisateur
,
pour
construire
clause
`
`
where
'
'
,
`
`
order
by
'
'
'
'
limit
'
'
,
après
avoir
ajouter
avoir
suite
de
requête
SQL
envoyer
serveur
.
exemple
:
<
?
PHP
$
Sql
=
'
'
select
*
from
livre
where
auteur
=
'
Leon
'
ORDER
by
auteur
DESC
LIMIT
,
'
'
;
/
/
recherche
premier
livre
nom
de
auteur
égal
à
/
/
'
'
Leon
'
'
affiche
dans
audre
alphabétique
décroître
auteur
.
?
>
exercice
:
(
voir
annexer
rechercher
donnée
dans
base
,
exercice
)
.
reproduire
formulaire
(
figurer
)
construir
requête
SQL
de
interroger
table
stagiaire
,
afficher
résultat
sur
autre
page
(
figurer
)
.
Etapes
:
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
création
fichier
`
`
dns-remplacer
'
'
charger
de
vérifier
méthode
POST
à
été
utiliser
,
oui
vérifier
validité
formulaire
appeler
page
construire
requête
SQL
,
afficher
critère
de
recherche
création
fichier
`
`
dns-remplacer
'
'
(
voir
figurer
)
être
page
en
HTML
charger
de
afficher
critère
de
recherche
de
indiquer
formulaire
à
appeler
après
avoir
cliquer
sur
`
`
lancer
recherche
'
'
.
création
fichier
`
`
Construction_
dns-remplacer
'
'
page
récupérer
élément
saisir
par
utilisateur
construire
requête
SQL
,
appel
page
de
resultat
.
création
fichier
`
`
dns-remplacer
'
'
interroger
base
de
donnée
construire
balise
donnée
necessaire
à
affichage
résultat
.
création
fichier
`
`
dns-remplacer
'
'
(
figurer
)
mettre
en
page
affiche
résultat
sous
forme
de
tableau
HTML
construire
,
pouvoir
modifier
clause
`
`
where
'
'
,
sans
avoir
besoin
de
modifier
page
de
résultat
voir
.
formulaire
de
recherche
recherche
effectuer
sur
critère
:
nom
,
prénom
code
postal
.
champ
`
`
nom
'
'
devoir
être
remplir
,
autre
champ
être
facultatif
.
résultat
apparaître
sous
forme
de
liste
.
nom
:
contenir
prénom
:
contenir
code
postal
:
figurer
résultat
de
recherche
N
°
nom
prénom
durant
Dupré
Alain
Camus
Albert
Leblanc
Jean-Marc
adresser
téléphone
Mél
,
rue
Georges
Brassens
Creteil
,
rue
Jacques
Brel
pari
,
rue
saint
p
Saint-Denis
,
rue
scribe
Antony
rue
blanc
manteau
Montfermeil
durant
@
dns-remplacer
dupre
@
dns-remplacer
alain
@
dns-remplacer
camus
@
dns-remplacer
dns-remplacé
@
dns-remplacé
figurer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
naviguer
dans
donnée
de
base
pour
naviguer
dans
donnée
de
base
,
servir
de
clause
`
`
LIMIT
'
'
.
premier
paramètre
de
clause
permettre
d
’
indiquer
ligne
débuter
recherche
,
second
nombre
d
’
enregistrement
à
afficher
sur
page
.
premier
page
afficher
premier
enregistrement
en
rappeller
page
,
suivant
de
suite
,
jusqu
'
à
fin
résultat
de
recherche
.
exercice
:
(
voir
annexer
naviguer
dans
donnée
de
base
,
exercice
)
.
reproduire
formulaire
(
Figure11
)
construir
requête
SQL
de
interroger
table
stagiaire
,
afficher
résultat
sur
autre
page
en
limiter
affichage
avoir
enregistrement
permetter
à
utilisateur
de
naviguer
dans
résultat
.
dans
page
de
résultat
l
’
utilisateur
pouvoir
en
cliquer
sur
nom
stagiaire
en
double
cliquer
sur
ligne
consulter
fiche
cours|cour
suivre
par
stagiaire
(
fiche
de
renseignement
)
.
formulaire
être
réaliser
en
utiliser
méthode
POST
Etapes
:
création
fichier
`
`
recherche_
dns-remplacer
'
'
:
charger
de
vérifier
méthode
POST
à
été
utiliser
,
oui
vérifier
validité
formulaire
appeler
page
construire
requête
SQL
,
afficher
critère
de
recherche
création
fichier
`
`
rech_
dns-remplacer
'
'
:
effectuer
contrôle
de
saisie
formulaire
de
recherche
.
création
fichier
`
`
recherche_
dns-remplacer
'
'
:
être
page
en
HTML
charger
de
afficher
champ
de
saisie
critère
de
recherche
sous
forme
de
tableau
HTML
(
figurer
)
.
création
fichier
`
`
resultat_
dns-remplacer
'
'
:
être
page
en
HTML
charger
de
afficher
résultat
de
requête
sous
forme
de
tableau
HTML
(
figurer
)
.
création
fichier
`
`
Construction_post_
dns-remplacer
'
'
:
page
récupérer
élément
saisir
par
utilisateur
construire
requête
SQL
,
appel
page
Construction_post_
dns-remplacer
.
création
fichier
`
`
Construction_post_
dns-remplacer
'
'
:
pager
construire
clause
limit
appel
page
resultat_
dns-remplacer
.
création
fichier
`
`
resultat_
dns-remplacer
'
'
:
page
interroger
base
de
donnée
à
aide
clause
`
`
where
'
'
`
`
limit
'
'
créer
précédement
,
vérifier
formater
donnée
dans
tableau
html
appel
page
resultat_post_html
.
création
fichier
`
`
navigation_
dns-remplacer
'
'
:
page
être
inclus
par
fichier
resultat_post_html
servir
avoir
afficher
barre
de
navigation
.
création
fichier
`
`
dns-remplacer
'
'
fichier
écrire
en
javascript
aider
à
naviguer
dans
table
,
en
incrémenter
n
°
de
page
.
en
réalité
avoir
besoin
de
créer
de
fichier
,
pouvoir
entendre
regrouper
par
type
,
de
comprendre
,
étape
à
été
décomposer
en
fichier
.
construire
,
pouvoir
modifier
clause
`
`
where
'
'
`
`
limit
'
'
,
sans
avoir
besoin
de
modifier
page
de
résultat
voir
.
formulaire
de
recherche
recherche
effectuer
sur
critère
:
nom
,
prénom
code
postal
.
champ
`
`
nom
'
'
devoir
être
remplir
;
autre
champ
être
facultatif
.
résultat
apparaître
sous
forme
de
liste
.
fiche
cours|cour
suivre
par
stagiaire
recherché
être
accessible
en
cliquer
sur
nom
en
double
cliquer
sur
ligne
correspondant
.
nom
:
contenir
prénom
:
contenir
code
postal
:
figurer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
résultat
de
recherche
N
°
nom
prénom
durant
Dupré
Alain
Camus
Albert
Leblanc
Jean-Marc
premier
page
adresser
téléphone
Mél
,
rue
Georges
Brassens
Creteil
,
rue
Jacques
Brel
pari
,
rue
saint
p
Saint-Denis
,
rue
scribe
Antony
rue
blanc
manteau
Montfermeil
durant
@
dns-remplacer
dupre
@
dns-remplacer
alain
@
dns-remplacer
camus
@
dns-remplacer
dns-remplacé
@
dns-remplacer
page
Précedente
pager
suivant
/
/
dernier
page
figurer
fiche
de
renseignement
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
insérer
donnée
dans
base
insert
:
être
instruction
SQL
permettre
d
’
ajouter
ligne
de
donnée
(
enregistrement
)
dans
table
de
base
de
donnée
.
exemple
:
<
?
php
$
Sql
=
'
'
insert
into
livre
(
Num
,
auteur
,
date
)
valoir
(
'
'
,
'
Dona
Leon
'
,
'
'
)
'
'
;
?
>
exercice
:
(
voir
annexer
insérer
donnée
dans
base
de
donnée
)
.
reprendre
formulaire
de
inscription
(
figurer
)
l
’
utilisateur
envoi
page
,
insérer
donnée
dans
base
addslashes
(
)
stripslashes
(
)
opération
d
’
insertion
de
modification
de
sélection
de
donnée
dans
base
caractère
devoir
faire
l
’
objet
d
’
traitement
particulier
d
’
être
reconnaître
.
fonction
addslashes
(
)
,
après
avoir
échapper
caractère
devoir
être
,
retourner
chaîne
de
caractère
pouvoir
être
utiliser
dans
requête
de
base
de
donnée
.
caractère
être
guillemet
simple
(
'
)
,
guillemet
double
(
`
`
)
,
anti-slash
(
\
)
nul
(
caractère
NULL
)
.
stripslashes
(
)
retourner
chaîne
anti-slash
être
supprimer
.
double
anti-slash
être
réduire
en
seul
anti-slash
.
stripslashes
(
)
être
fonction
inverse
de
addslashes
(
)
.
exercice
:
(
voir
annexer
insérer
donnée
dans
base
de
donnée
exercice
)
.
reprendre
formulaire
d
’
inscription
de
l
’
exercice
précédent
,
ajouter
fonction
addslashes
(
)
stripslashes
(
)
,
vérifier
en
insérer
adresse
comporter
apostrophe
.
modifier
donnée
dans
base
UPDATE
:
être
instruction
SQL
permettre
de
modifier
colonne
dans
enregistrement
.
exemple
:
<
?
php
$
Sql
=
'
'
update
livre
set
Num
=
,
auteur
=
'
Dona
Leon
'
)
'
'
;
?
>
exercice
:
(
voir
annexer
modifier
donnée
dans
base
)
reprendre
formulaire
de
inscription
ajouter
bouton
modifier
permettre
avoir
utilisateur
de
modifier
donnée
dans
base
,
montrer
figue
Etape
de
construction
formulaire
:
création
fichier
`
`
db_
dns-remplacer
'
'
en
HTML
être
page
en
HTML
charger
de
afficher
champ
de
saisie
sous
forme
de
tableau
HTML
(
figurer
)
.
création
fichier
`
`
dns-remplacer
'
'
effectuer
contrôle
de
saisie
formulaire
d
’
inscription
sur
serveur
avec
PHP
.
création
fichier
`
`
db_
dns-remplacer
'
'
effectuer
contrôle
de
saisie
formulaire
d
’
incription
sur
client
avec
JavaScript
.
création
fichier
`
`
db_
dns-remplacer
'
'
charger
de
vérifier
méthode
POST
à
été
utiliser
,
oui
vérifier
validité
formulaire
appel
l
’
action
choisir
par
l
’
utilisateur
.
création
fichier
`
`
dns-remplacer
'
'
ouvrir|ouvrer
connection
à
base
de
donnée
.
création
fichier
`
`
charge_
dns-remplacer
'
'
interroger
base
récupérer
donnée
.
création
fichier
`
`
get_
dns-remplacer
'
'
fonction
de
mise
en
forme
message
d
’
erreur
personaliser
.
création
fichier
`
`
verif_
dns-remplacer
'
'
fonction
de
contrôl
de
validité
de
l
’
adresse
mèl
.
création
fichier
`
`
db_update_
dns-remplacer
'
'
mettre
à
jour
base
de
donnée
avec
élément
saisir
par
l
’
utilisateur
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
ficher
de
inscription
N
°
stagiaire
:
Madame
:
nom
:
Mademoiselle
:
Monsieur
:
durant
prénom
:
,
rue
Georges
Brassens
adresser
code
postal
Télépho
:
Courriel
:
durant
@
dns-remplacer
ville
Creteil
choix
cours|cour
:
principal
:
optionnel
Mathém
atique
:
physique
:
Anglais
Espagno
l
Art
plastiquer
Français
:
ajouter
modifier
annuler
figurer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
supprimer
donnée
dans
base
DELETE
:
être
instruction
SQL
permettre
de
supprimer
de
table
un
enregistrement
correspondre
à
condition
particulier
.
<
?
php
$
Sql
=
`
`
DELETE
FROM
livre
WHERE
num
=
'
'
;
?
>
attention
:
de
suppression
de
enregistrement
,
de
vérifier
avec
précaution
condition
de
suppression
être
prendre
en
compte
,
risquer
de
effacer
enregistrement
exercice
:
(
voir
annexer
supprimer
donnée
dans
base
)
reprendre
formulaire
de
exemple
permettre
avoir
utilisateur
de
supprimer
donnée
dans
base
ficher
de
inscription
N
°
stagiaire
:
Madame
:
Mademoiselle
:
Monsieur
:
durant
nom
:
prénom
:
,
rue
Georges
Brassens
adresser
code
postal
téléphone
:
Courriel
:
durant
@
dns-remplacer
ville
Creteil
choix
cours|cour
:
principal
:
optionnel
mathématique
:
physique
:
anglais
espagnol
Art
plastiquer
Français
:
ajouter
modifier
supprimer
annuler
figurer
date
heure
PHP
disposer
de
fonction
permettre
de
manipuler
date
heure
serveur
exécuter
PHP
.
pouvoir
utiliser
fonction
pour
formater
date
heure
de
nombreux
façon
.
fonction
mktime
(
)
int
mktime
(
[
int
hour
[
,
int
minute
[
,
int
second
[
,
int
month
[
,
int
day
[
,
int
year
[
,
int
is_dst
]
]
]
]
]
]
]
)
.
mktime
(
)
retourner
timestamp
UNIX
correspondre
argument
fournir
.
timestamp
être
entier
long
,
contenir
nombre
de
seconde|second
entre
début
de
époque
UNIX
(
1er
janvier
:
:
GMT
)
temps
spécifier
.
argument
pouvoir
être
omettre
,
de
droit
à
gauche
,
argument
manquant
être
utiliser
avec
valeur
courant
de
heure
jour
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
fonction
mktime
(
)
être
pratique
pour
faire
calcul
de
date
validation
,
aller
corriger
valeur
invalide
.
exemple
:
<
?
php
$
jour
=
'
'
;
$
mois|moi
=
'
'
;
$
annee
=
'
'
;
echo
mktime
(
,
,
,
$
mois|moi
,
$
jour
,
$
annee
)
;
/
/
affiche
?
>
fonction
date
(
)
string
date
(
string
format
[
,
int
timestamp
]
)
;
fonction
date
(
)
prendre
deux
paramètre
.
premier
paramètre
être
chaîne
spécifier
code
de
format
,
second
être
optionnel
être
horodatage
Unix
.
l
’
absence
second
paramètre
,
fonction
date
(
)
traiter
date
l
’
heure
courant
.
renvoyer
chaîne
formater
représenter
date
approprié
.
exemple
:
<
?
php
/
/
date
en
anglais
echo
date
(
`
`
jS
F
'
'
)
;
/
/
affiche
22nd
May
/
/
date
en
français
echo
date
(
'
d
/
m
/
'
)
;
/
/
affiche
/
/
/
/
date
fournir
par
mktime
en
français
$
jour
=
'
'
;
$
mois|moi
=
'
'
;
$
annee
=
'
'
;
echo
date
(
'
d
/
m
/
'
,
mktime
(
,
,
,
$
mois|moi
,
$
jour
,
$
annee
)
)
;
/
/
affiche
/
/
?
>
tableau
suivre
donner
code
de
format
reconnaître
par
fonction
date
(
)
.
code
avoir
à
B
d
D
F
g
G
heure
heure
description
matin
après-midi
,
représenter
sous
forme
de
deux
caractère
en
minuscule
:
“
am
”
“
pm
”
.
matin
après-midi
,
représenter
sous
forme
de
deux
caractère
en
majuscule
:
“
AM
”
“
PM
”
.
heure
Internet
Swtach
,
constituer
système
de
temps
universel
.
jour
mois|moi
,
sous
forme
d
’
nombre
à
deux
chiffre
,
préfixer
par
zéro
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
jour
de
semaine
en
anglais
,
dans
format
textuel
abréger
en
trois
lettre
:
par
exemple
“
Fri
”
pour
vendredi
.
mois|moi
de
l
’
année
en
anglais
,
format
textuel
,
version
longue
.
plage
autoriser
aller
de
“
January
”
à
“
December
”
.
heure
jour
,
exprimer
dans
système
à
heure
,
sans
zéro
initial
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
heure
jour
,
exprimer
dans
système
à
heure
,
sans
zéro
initial
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
heure
jour
,
exprimer
dans
système
à
heure
,
nécessaire
avec
préfix
zéro
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
heure
jour
,
exprimer
dans
système
à
heure
,
nécessaire
avec
préfix
zéro
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
i
minute
,
nécessaire
préfixer
avec
zéro
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
I
(
‘
i
’
majuscule
)
spécifier
système
horaire
courir
être
de
l
’
heure
d
’
hiver
de
l
’
heure
d
’
être
,
sous
forme
d
’
valeur
booléen
:
“
”
l
’
heure
d
’
hiver
être
activer
,
“
”
.
jour
mois|moi
format
numérique
,
sans
zéro
en
préfixe
.
page
autoriser
s
’
étendre
de
“
”
à
“
”
.
jour
de
semaine
en
anglais
,
format
textuel
,
version
longue
.
plage
autoriser
s
’
étendre
de
“
Monday
”
à
“
Sunday
”
.
indiquer
l
’
année
être
bissextile
,
par
valeur
booléen
:
“
”
dans
cas
d
’
année
bissextile
,
“
”
pour
année
bissextile
.
mois|moi
de
l
’
année
,
sous
forme
d
’
nombre
à
deux
chiffre
,
préfixer
par
zéro
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
mois|moi
de
l
’
année
en
anglais
,
dans
format
textuel
abréger
en
trois
lettre
.
plage
autoriser
s
’
étendre
de
“
Jan
”
à
“
Dec
”
.
j
l
(
‘
L
’
minuscule
)
L
m
M
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
n
mois|moi
de
l
’
année
,
sous
forme
d
’
nombre
sans
zéro
en
préfixe
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
s
seconder
avec
nécessaire
zéro
en
préfixe
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
S
suffixer
ordinal
pour
date
,
en
anglais
,
en
deux
lettre
.
suffixe
pouvoir
être
“
st
”
,
“
nd
”
,
“
rd
”
,
“
th
”
selon
nombre
précéder
.
t
nombre
total
de
jour
dans
mois|moi
donner
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
T
fuseau
horaire
serveur
,
sous
forme
de
trois
lettre
,
par
exemple
“
mettre
”
.
nombre
total
de
seconde|second
être
écouler
depuis
1er
janvier
jusque
moment
considérer
.
jour
de
semaine
sous
forme
d
’
seul
chiffre
.
plage
autoriser
s
’
étendre
de
“
”
(
dimanche
)
à
“
”
(
samedi
)
.
U
w
année
,
sous
format
à
chiffre
,
par
exemple
“
”
.
année
,
sous
format
à
chiffre
,
par
exemple
“
”
.
z
jour
de
l
’
année
sous
forme
d
’
nombre
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
z
décalage
horaire
en
second
.
plage
autoriser
s
’
étendre
de
“
”
à
“
”
.
fonction
getdate
array
getdate
(
[
int
timestamp
]
)
getdate
(
)
retourner
tableau
associatif
contenir
information
de
date
de
heure
timestamp
timestamp
(
être
fournir
,
,
timestamp
de
date
/
heure
courant
)
,
avec
champ
suivant
:
tableau
.
nom
clé
tableau
associatif
retourner
clé
description
'
'
second
'
'
représentation
numérique
second
exemple
de
valeur
retourner
à
'
'
minute
'
'
représentation
numérique
minute
à
'
'
hours
'
'
représentation
numérique
heure
à
'
'
mday
'
'
représentation
numérique
jour
mois|moi
courir
à
'
'
wday
'
'
représentation
numérique
jour
de
semaine
courant
(
pour
dimanche
)
à
(
pour
samedi
)
'
'
'
'
représentation
numérique
mois|moi
à
'
'
year
'
'
année
,
sur
chiffre
exemple
:
'
'
yday
'
'
représentation
numérique
jour
de
année
à
'
'
weekday
'
'
version
texte
jour
de
semaine
Sunday
à
Saturday
'
'
month
'
'
version
texte
mois|moi
,
January
March
nombre
de
seconde|second
depuis
époque
Unix
,
similaire
à
valeur
retourner
par
dépendre
système
,
de
fonction
time
(
)
utiliser
par
date
(
)
.
à
.
January
à
December
exemple
:
<
?
php
$
jour
=
'
'
;
$
mois|moi
=
'
'
;
$
annee
=
'
'
;
$
MaDate
=
getdate
(
mktime
(
,
,
,
$
mois|moi
,
$
jour
,
$
annee
)
)
;
foreach
(
$
MaDate
avoir
$
key
=
>
$
value
)
{
echo
`
`
$
key
:
$
value
<
br
>
'
'
;
}
echo
$
MaDate
[
'
mday
'
]
.
'
'
/
'
'
.
$
MaDate
[
'
'
]
.
`
`
/
'
'
.
$
MaDate
[
'
year
'
]
;
/
/
affiche
/
/
?
>
fonction
checkdate
(
)
int
checkdate
(
int
month
,
int
day
,
int
year
)
checkdate
(
)
retourne
TRUE
date
représenter
par
jour
day
,
mois|moi
month
année
year
être
valide
,
FALSE
.
noter
ordre
argument
être
ordre
français
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
conversion
entre
format
de
date
PHP
format
de
date
MySQL
MySQL
d
’
autre
base
de
donnée
dispos
de
fonction
SQL
permettre
de
traiter
date
en
un
:
curdate
(
)
:
renvoi
date
sous
forme
select
curdate
(
)
FROM
tablename
;
curtime
(
)
:
renvoi
l
’
heure
sous
forme
:
:
select
curtime
(
)
FROM
tablename
;
now
(
)
:
renvoi
date
l
’
heure
sous
forme
:
:
select
now
(
)
FROM
tablename
;
MySQL
exiger
date
être
entrer
sous
forme
anné
,
mois|moi
,
jour
.
exemple
:
août
devoir
être
saisir
sous
forme
–
–
–
–
conversion
de
format
être
nécessaire
date
devoir
être
échanger
entre
PHP
MySQL
.
date
devoir
être
communiquer
de
PHP
vers
MySQL
,
fonction
date
(
)
permettre
d
’
obtenir
format
approprié
.
falloir
utiliser
format
de
jour
de
mois|moi
zéro
être
placer
en
préfixe
,
de
manière
à
éviter
confusion
niveau
de
MySQL
.
dans
MySQL
,
commande
SQL
DATE_FORMAT
(
)
permettre
de
formater
date
.
être
semblable
à
fonction
date
(
)
de
PHP
,
utiliser
code
de
format
différent
.
conversion
courant
consister
à
exprimer
date
sous
format
messieurs
–
JJ
–
AAAA
sous
format
AAAA
–
messieurs
–
JJ
en
vigueur
dans
MySQL
.
conversion
s
’
effectuer
moyen
de
requête
suivant
:
select
DATE_FORMAT
(
date_column
,
'
%
m
%
d
%
'
)
FROM
tablename
;
code
de
format
%
m
correspondre
à
représentation
mois|moi
sous
forme
d
’
nombre
à
deux
chiffre
;
%
d
représenter
jour
sous
forme
d
’
nombre
à
deux
chiffre
;
%
représenter
l
’
année
sous
forme
d
’
nombre
à
chiffre
.
code
de
format
MySQL
utile
pour
type
de
conversion
être
décrire
dans
tableau
suivre
.
coder
description
%
M
mois|moi
,
plein
texte
%
W
nom
jour
de
semaine
,
plein
texte
%
D
jour
mois|moi
,
numérique
,
avec
préfixe
textuel
%
année
,
numérique
,
chiffre
%
année
,
numérique
,
chiffre
%
avoir
nom
jour
de
semaine
,
lettre
%
d
jour
mois|moi
,
numérique
,
zéro
en
préfix
%
e
jour
mois|moi
,
numérique
,
de
zéro
en
préfix
%
m
mois|moi
,
numérique
,
zéro
en
préfix
%
c
mois|moi
,
numérique
,
de
zéro
en
préfix
%
b
mois|moi
,
texte
,
lettre
%
j
jour
de
l
’
année
,
numérique
%
heure
heure
,
système
à
heure
,
zéro
en
préfix
%
k
heure
,
système
à
heure
,
de
zéro
en
préfix
%
heure
%
I
(
’
i
’
majuscule
)
%
l
(
’
L
’
minuscule
)
heure
,
système
à
heure
,
zéro
en
préfix
heure
,
système
à
heure
,
de
zéro
en
préfix
%
i
minute
,
numérique
,
zéro
en
préfix
%
r
heure
,
système
à
heure
(
hh
:
mm
:
ss
[
AM
|
PM
]
)
%
T
heure
,
système
à
heure
(
hh
:
mm
:
ss
)
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
%
S
%
s
second
,
numérique
,
zéro
en
préfix
%
p
AM
PM
%
w
jour
de
semaine
,
numérique
,
de
(
dimanche
)
à
(
samedi
)
exercice
:
(
voir
annexe
date
)
reprendre
formulaire
d
’
inscription
ajouter
champ
date
d
’
inscription
(
voir
figurer
)
modifier
de
sorte
date
pouvoir
être
insérer
modifier
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
utiliser
ODBC
Odbc
être
solution
alternatif
permettre
d
’
accéder
à
base
de
donnée
en
écrire
code
générique
,
c
’
code
de
l
’
application
fonctionner
pour
base
de
donnée
prendre
en
charge
norme
ODBC
.
,
solution
sembler
séduisant
,
être
fournir
en
fonctionnalité
l
’
accès
en
base
travers
fonction
de
base
dédier
c
’
être
à
dire
priser
en
charge
par
PHP
.
pour
uitliser
ODBC
,
être
nécessaire
d
’
installer
de
configurer
driver
de
base
.
installation
driver
odbc
de
MySql
Télécharger
fichier
MyODBC-3.51.11-2-
dns-remplacer
dans
répertoire
temporaire
lancer
programme
(
dns-remplacer
)
configuration
de
source
de
donnée
dans
menu
`
`
paramètre
'
'
,
`
`
panneau
de
configuration
'
'
double
cliquer
sur
`
`
source
de
donnée
(
ODBC
)
`
`
.
cliquer
sur
add
pour
ajouter
nouveau
source
de
donnée
,
sélectionner
Mysql
terminer
.
Editez
paramètre
suivre
:
Windows
DSN
name
:
Mysql
host
name
:
user
:
Passeword
:
port
:
formation
localhost
stagiaire
stagiaire
valider
en
cliquer
sur
OK
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
pouvoir
établir
connéction
avoir
base
en
utiliser
fonction
odbc_connect
(
)
:
resource
odbc_connect
(
string
dsn
,
string
user
,
string
password
[
,
int
cursor_type
]
)
exemple
:
<
?
php
$
dsn
=
`
`
formation
'
'
;
$
host
=
'
'
localhost
'
'
;
/
/
nom
serveur
adresse
IP
héberger
base
de
donnée
$
user
=
'
'
stagiaire
'
'
;
/
/
nom
de
utilisateur
de
base
de
donnée
$
password
=
'
'
stagiaire
'
'
;
/
/
mot
de
passe
de
connexion
à
base
de
donnée
$
db
=
'
'
formation
'
'
;
/
/
nom
de
base
de
donnée
interroger
'
$
conn
=
odbc_connect
(
$
dsn
,
$
user
,
$
password
)
or
die
(
`
`
impossible
de
connecter
'
'
)
;
?
>
pour
interroger
base
utiliser
:
odbc_exec
pour
éxecuter
requête
à
place
de
Mysql_query
int
odbc_exec
(
resource
connection_id
,
string
query_string
)
odbc_fetch_array
pour
lire
enregistrement
à
place
de
mysql_fetch_array
array
odbc_fetch_array
(
resource
result
[
,
int
rownumber
]
)
exemple
de
connéction
d
’
intérrogation
de
base
formation
<
?
PHP
/
/
code
servir
avoir
afficher
source
.
echo
`
`
<
link
rel
=
\
'
'
stylesheet\
'
'
type
=
\
'
'
text
/
css\
'
'
?
href
=
\
'
'
.
.
/
css
/
dns-remplacer
\
'
'
>
'
'
;
echo
`
`
<
à
href
=
\
'
'
show_
dns-remplacé
?
script
=
db_
dns-remplacer
\
'
'
>
voir
source
<
/
à
>
<
br
>
<
br
>
'
'
;
include
(
`
`
dns-remplacer
'
'
)
;
/
/
code
de
exercice
.
include
(
`
`
connect_
dns-remplacé
'
'
)
;
/
/
table
nommer
stagiaire
$
requete
=
`
`
select
*
from
stagiaire
limit
,
'
'
;
echo
`
`
<
B
>
résultat
avec
odbc_fetch_array
(
)
<
/
B
>
<
BR
>
'
'
;
/
/
éxecute
requête
$
resultat
=
@
odbc_exec
(
$
conn
,
$
requete
)
;
/
/
récupérer
valeur
grace
à
boucle
while
/
/
dans
variable
tableau
$
annuaire_stagiaire
créer
par
mysql_fetch_array
(
)
/
/
disposer
indice
numérique
nom
de
champ
indice
echo
`
`
<
h@card@
>
liste
stagiaire
<
/
h2
>
'
'
;
echo
`
`
<
tabler
border
=
>
<
tr
align
=
center
>
<
th
>
N
°
de
stagiaire
<
/
th
>
<
th
>
nom
prénom
<
/
th
>
<
th
>
adresse
<
/
th
>
<
th
>
coder
postal
<
/
th
>
<
th
>
ville
<
/
th
>
<
th
>
Courriel
<
/
th
>
<
th
>
N
°
de
téléphone
<
/
th
>
<
/
tr
>
'
'
;
while
(
$
annuaire_stagiaire
=
odbc_fetch_array
(
$
resultat
)
)
{
echo
`
`
<
tr
>
<
td
align
center
>
'
'
.
$
annuaire_stagiaire
[
`
`
num_stagiaire
'
'
]
.
`
`
<
/
td
>
`
`
;
echo
`
`
<
td
>
'
'
.civilite
(
$
annuaire_stagiaire
[
`
`
civ
'
'
]
)
.
'
'
`
`
.
$
annuaire_stagiaire
[
`
`
nom
'
'
]
.
'
'
`
`
.
$
annuaire_stagiaire
[
`
`
prenom
'
'
]
.
`
`
<
/
td
>
'
'
;
echo
`
`
<
td
>
'
'
.
$
annuaire_stagiaire
[
`
`
adresse
'
'
]
.
`
`
&
nbsp
;
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
center
>
'
'
.
$
annuaire_stagiaire
[
`
`
cp
'
'
]
.
`
`
&
nbsp
;
<
/
td
>
'
'
;
echo
`
`
<
td
>
'
'
.
$
annuaire_stagiaire
[
`
`
ville
'
'
]
.
`
`
&
nbsp
;
<
/
td
>
'
'
;
echo
`
`
<
td
>
'
'
.
$
annuaire_stagiaire
[
`
`
courriel
'
'
]
.
`
`
&
nbsp
;
<
/
td
>
'
'
;
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
echo
`
`
<
td
>
'
'
.
$
annuaire_stagiaire
[
`
`
telephone
'
'
]
.
`
`
&
nbsp
;
<
/
td
>
<
/
tr
>
'
'
;
}
echo
`
`
<
/
table
>
'
'
;
/
/
libérer
ressource
.
odbc_free_result
(
$
resultat
)
;
/
/
fermer
connection
à
base
odbc_close
(
$
conn
)
;
?
>
exercice
:
(
voir
annexe
ODBC
exercice
)
afficher
liste
stagiaire
en
utiliser
connection
ODBC
avoir
base
mysql
source
de
donnée
,
avec
utilisateur
=
stagiaire
,
mot
de
passe
=
stagiaire
base
=
formation
de
obtenir
résultat
montrer
dans
exemple
.
liste
stagiaire
N
°
de
stagiaire
nom
prénom
coder
postal
adresse
Madame
durant
,
rue
Brassens
Mademoiselle
Dupré
père
Alain
Georges
ville
Courriel
N
°
de
téléphone
Creteil
durant
@
dns-remplacer
,
rue
Jacques
Brel
pari
dupre
@
dns-remplacer
,
rue
saint
p
Saint-Denis
alain
@
dns-remplacer
monsieur
Camus
Albert
,
rue
scribe
Antony
camus
@
dns-remplacer
Leblanc
Jean-Marc
Montfermeil
dns-remplacer
@
dns-remplacer
rue
blanc
manteau
exercice
:
(
voir
annexe
ODBC
exercice
)
créer
source
de
donnée
ODBC
permettre
d
’
accéder
à
base
access
`
`
dns-remplacer
'
'
.
reprendre
l
’
exercice
précédent
adapter
de
pouvoir
obtenir
même
résultat
,
en
interroger
base
access
`
`
dns-remplacer
'
'
trouver
dans
répertoire
exercice
(
pouvoir
avoir
télécharger
)
.
l
’
avoir
voir
,
être
possible
d
’
interroger
différent
base
de
donnée
par
fonction
natif
par
ODBC
.
l
’
souhaiter
accéder
à
différent
source
de
donnée
dans
même
programme
,
devenir
fastidieux
de
changer
de
connection
fonction
.
pour
éviter
manipulation
,
exister
moyen
passer
par
création
d
’
classe
regrouper
mode
de
connection
l
’
à
besoin
.
classe
apporter
couche
d
’
abstraction
de
base
de
donnée
.
exister
(
PEAR
fournir
avec
PHP
,
sql_layer
créer
par
PHP_Nuke
etc
...
)
.
revenir
sur
sujet
chapitre
classe
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
session
Cookies
.
Cookies
Qu
’
être
qu
’
cookie
?
cookie
être
fichier
texte
sauvegarder
sur
machine
côté
client
dans
être
stocker
donnée
.
permettre
à
site
web
de
stocker
de
récupérer
donnée
dans
cas
d
’
application
avoir
besoin
de
maintenir
état
(
persistance
donnée
)
entre
visite
de
l
’
utilisateur
.
cookies
permettre
d
’
éviter
de
forcer
utilisateur
à
reconnecter
s
’
émettre
nouveau
requête
,
favoriser
navigation
personnaliser
.
fichier
contenir
chaîne
de
texte
de
type
nom
=
valeur
.
URL
être
associer
:
permettre
client
de
savoir
s
’
devoir
renvoyer
cookie
serveur
contacter
.
Cookies
en
PHP
fonction
setcookie
(
)
permettre
de
définir
cookies
,
de
manière
suivant
:
int
setcookie
(
string
nom_cookie
,
string
valeur_cookie
,
int
date_exp
)
;
date
d
’
expiration
n
’
être
définir
,
durée
de
vie
cookie
être
de
session
.
exemple
:
<
?
PHP
setcookie
(
`
`
cookie
'
'
,
`
`
chocolat
'
'
,
time
(
)
+
*
)
;
?
>
après
exécution
de
ligne
,
cookie
de
nom
moncookie
de
valeur
“
chocolat
”
être
stocker
.
être
possible
de
définir
cookies
à
valeur
multiple
:
en
effet
,
cookies
être
restreindre
à
par
serveur
.
traiter
cookie
tableau
,
affecter
valeur
à
élément
tableau
.
exemple
:
<
?
PHP
if
(
!
isset
(
$
cookie
[
]
)
)
{
setcookie
(
`
`
cookie
[
]
'
'
,
$
nomvisiteur
)
;
cookie
[
]
++
;
setcookie
(
`
`
cookie
[
]
'
'
,
$
cookie
[
]
)
;
echo
`
`
bonjour
$
cookie
[
]
,
avoir
effectuer
`
`
.
$
cookie
[
]
.
(
$
cookie
[
]
=
=
?
`
`
visite
!
'
'
:
`
`
visite
!
`
`
)
.
`
`
sur
page
.
`
`
;
/
/
affiche
:
bonjour
(
nom
visiteur
)
,
avoir
effectuer
(
nombre
de
visite
)
sur
page
.
?
>
code
définir
cookie
devoir
apparaître
début
de
page
,
dans
l
’
en-tête
,
avant
génération
d
’
sortie
envoyer
navigateur
.
PHP
envoyer
message
d
’
erreur
setcookie
(
)
être
appeler
après
qu
’
réponse
HTTP
avoir
être
envoyer
client
.
attention
:
simple
espace
,
caractère
de
saut
de
ligne
autre
texte
,
HTML
générer
par
PHP
,
suffire
à
provoquer
erreur
.
dans
même
condition
d
’
utilisation
,
fonction
setcookie
(
)
avec
nouveau
valeur
pour
cookie
permettre
de
changer
valeur
cookie
.
accéder
à
cookie
deux
méthode
permettre
d
’
accéder
à
cookie
:
•
variable
global
être
associer
cookie
:
$
nom_cookie
contenir
valeur_cookie
;
•
variable
d
’
environnement
$
_COOKIE
[
nom_cookie
]
être
tableau
associatif
global
contenir
variable
provenir
de
cookies
,
permettre
d
’
avoir
information
fiable
sur
l
’
origine
.
exemple
:
<
?
php
if
(
!
isset
(
$
_COOKIE
[
'
cookie
'
]
)
)
{
setcookie
(
`
`
cookie
'
'
,
`
`
chocolat
'
'
)
;
echo
`
`
cookie
\
$
cookie
=
chocolat
avoir
être
créer
:
<
br
>
'
'
;
echo
`
`
aller
pouvoir
avoir
accès
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
accès
<
/
avoir
>
'
'
;
}
else
{
echo
`
`
\
$
cookie
=
`
`
.
$
_COOKIE
[
'
cookie
'
]
.
`
`
,
<
br
>
'
'
;
echo
`
`
pouvoir
utiliser
cookie
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
utilisation
<
/
avoir
>
'
'
;
}
?
>
supprimer
cookie
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
cookie
pouvoir
être
supprimer
à
l
’
aider
de
fonction
setcookie
(
)
doter
d
’
unique
paramètre
:
int
setcookie
(
string
nom_cookie
)
;
exemple
:
<
?
php
setcookie
(
`
`
cookie
'
'
,
'
'
'
'
)
;
if
(
!
isset
(
$
_COOKIE
[
'
cookie
'
]
)
)
{
echo
`
`
\
$
cookie
avoir
être
détruire
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
recommencer
<
/
avoir
>
'
'
;
}
else
{
echo
`
`
\
$
cookie
aller
être
détruire
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
destruction
<
/
avoir
>
'
'
;
}
?
>
exemple
d
’
utilisation
cookies
script
de
dns-remplacé
<
?
php
if
(
!
isset
(
$
_COOKIE
[
'
cookie
'
]
)
)
{
setcookie
(
`
`
cookie
'
'
,
`
`
chocolat
'
'
)
;
echo
`
`
cookie
\
$
cookie
=
chocolat
avoir
être
créer
:
<
br
>
'
'
;
echo
`
`
aller
pouvoir
avoir
accès
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
accès
<
/
avoir
>
'
'
;
}
else
{
echo
`
`
\
$
cookie
=
`
`
.
$
_COOKIE
[
'
cookie
'
]
.
`
`
,
<
br
>
'
'
;
echo
`
`
pouvoir
utiliser
cookie
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
utilisation
<
/
avoir
>
'
'
;
}
?
>
script
de
dns-remplacé
<
?
php
$
cookie
=
$
_COOKIE
[
'
cookie
'
]
;
echo
`
`
\
$
cookie
être
$
cookie
<
br
>
'
'
;
echo
`
`
valeur
aller
changer
<
br
>
'
'
;
echo
`
`
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
suite
<
/
avoir
>
'
'
;
?
>
script
de
dns-remplacé
<
?
php
echo
`
`
\
$
cookie
être
`
`
.
$
_COOKIE
[
'
cookie
'
]
.
`
`
<
br
>
'
'
;
echo
`
`
valeur
aller
changer
<
br
>
'
'
;
echo
`
`
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
suite
<
/
avoir
>
'
'
;
?
>
script
de
dns-remplacé
<
?
php
setcookie
(
`
`
cookie
'
'
,
'
'
café
'
'
)
;
if
(
$
_COOKIE
[
'
cookie
'
]
=
=
`
`
chocolat
'
'
)
{
echo
`
`
changement
n
'
avoir
avoir
lieu
'
'
;
echo
`
`
<
br
>
valeur
`
`
.
$
_COOKIE
[
'
cookie
'
]
.
'
'
de
\
$
cookie
aller
changer
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
changement
<
/
avoir
>
'
'
;
}
elseif
(
$
_COOKIE
[
'
cookie
'
]
=
=
`
`
café
'
'
)
{
echo
`
`
changement
avoir
avoir
lieu
'
'
;
echo
`
`
<
br
>
nouveau
valeur
de
\
$
cookie
être
`
`
.
$
_COOKIE
[
'
cookie
'
]
.
`
`
,
`
`
;
echo
`
`
aller
détruire
cookie
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
destruction
<
/
avoir
>
'
'
;
}
?
>
script
de
dns-remplacé
<
?
php
setcookie
(
`
`
cookie
'
'
,
'
'
'
'
)
;
if
(
!
isset
(
$
_COOKIE
[
'
cookie
'
]
)
)
{
echo
`
`
\
$
cookie
avoir
être
détruire
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
recommencer
<
/
avoir
>
'
'
;
}
else
{
echo
`
`
\
$
cookie
aller
être
détruire
'
'
;
echo
`
`
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
destruction
<
/
avoir
>
'
'
;
}
?
>
exercice
:
(
voir
annexe
,
cookies
)
créer
page
pour
manipuler
cookies
.
pour
page
,
permettre
à
utilisateur
,
à
aide
de
lien
hypertexte
,
de
passer
avoir
page
suivant
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
indiquer
sur
page
état
valeur
cookie
,
indiquer
.
premier
:
créer
fichier
dns-remplacé
vérifier
éxistance
de
variable
cookie
(
$
cookie
)
avoir
valeur
'
'
manger
poisson
'
'
.
exister
,
être
créer
utilisateur
informé
.
lien
permettre
de
rappeller
page
.
exite
message
informer
utilisateur
lien
permettre
de
passer
à
page
suivant
.
exemple
:
cookie
$
cookie
=
`
`
manger
poisson
'
'
avoir
être
créer
:
aller
pouvoir
avoir
accès
accès
$
cookie
=
manger
poisson
,
pouvoir
utiliser
cookie
utilisation
second
:
créer
fichier
dns-remplacé
informer
utilisateur
de
valeur
cookie
précédement
créer
indiquer
cliquer
sur
lun
lien
changara
valeur
.
exemple
:
'
'
$
cookie
=
manger
poisson
'
'
,
pouvoir
utiliser
cookie
utilisation
$
cookie
être
`
`
manger
poisson
'
'
valeur
aller
changer
suite
troisième
:
créer
fichier
dns-remplacé
déterminer
valeur
cookie
avoir
changer
,
oui
utilisateur
être
avertir
cliquer
sur
lien
valeur
aller
changer
,
,
avertir
changement
avoir
avoir
lieu
en
clien
sur
lien
cookie
être
détruire
.
exemple
:
changement
n
'
avoir
avoir
lieu
valeur
`
`
manger
poisson
'
'
de
$
cookie
aller
changer
changement
changement
avoir
avoir
lieu
nouveau
valeur
de
$
cookie
être
`
`
préfere
viande
'
'
,
aller
détruire
cookie
destruction
quatrième
:
créer
fichier
dns-remplacé
déterminer
cookie
avoir
être
détruire
,
oui
informer
utilisateur
insserrer
lien
permettre
de
recommencer
,
,
informer
cliquer
sur
lien
cookie
être
détruire
.
exemple
:
$
cookie
aller
être
détruire
destruction
$
cookie
avoir
être
détruire
recommencer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
session
session
débuter
lancement
navigateur
,
lorsqu
’
utilisateur
arriver
sur
page
web
terminer
à
départ
.
HTTP
être
protocole
sans
état
:
comprendre
de
mécanisme
de
maintenir
état
entre
deux
transaction
.
dire
lorsqu
’
page
web
fermer
srcipts
terminer
élément
en
mémoire
être
détruire
perdre
.
avoir
recours
à
session
permettre
de
gérer
contexte
être
l
’
ensemble
de
variable
contenu
devoir
persister
sur
page
de
l
’
application
.
opération
pouvoir
s
’
effectuer
de
manière
:
•
à
l
’
aide
d
’
cookie
;
•
par
passage
de
paramètre
à
lien
(
URL
longue
)
;
•
par
passage
de
variable
poster
via
champ
cacher
;
•
par
l
’
utilisation
session
PHP
.
en
PHP
session
être
caractériser
par
numéro
d
’
identification
unique
:
ID
identifier
de
session
.
C
’
être
nombre
aléatoire
,
stocker
sur
machine
client
dans
cookie
être
passer
via
URL
.
ID
de
session
jouer
rôle
d
’
clé
permettre
d
’
enregistrer
variable
particulier
en
`
`
variable
de
session
'
'
être
seul
information
relatif
à
session
visible
côté
client
.
variable
session
être
enregistrer
dans
fichier
texte
de
type
nom
=
valeur
sur
client
via
cookies
sur
serveur
cookies
être
disponible
.
session
avec
cookies
de
mise
en
œuvre
de
session
PHP
,
fonction
de
session
charger
dans
définition
cookies
,
avoir
condition
directif
dns-remplacé
_cookies
égal
avoir
.
fonction
session_get_cookie_params
(
)
permettre
de
visualiser
contenu
d
’
cookie
définir
par
session
.
renvoyer
tableau
associatif
contenir
élément
date
d
’
expiration
,
chemin
,
domaine
.
fonction
session_set_cookie_params
(
)
permettre
de
définir
paramètre
d
’
cookie
de
session
:
void
session_set_cookie_params
(
int
date_exp
,
string
chemin
[
,
string
domaine
]
)
;
L
’
usage
de
cookies
pouvoir
poser
problème
.
navigateur
accepter
,
utilisateur
désactiver
dans
navigateur
Web
fonctionnalité
relatif
cookies
.
session
PHP
utiliser
par
défaut
cookies
:
possible
,
cookie
être
créer
pour
stocker
l
’
ID
de
session
courant
.
dans
cadre
d
’
application
de
gestion
,
l
’
application
reposer
sur
l
’
utilisation
session
être
préférable
d
’
éviter
d
’
utiliser
session
avec
cookies
.
passage
paramètre
par
l
’
URL
avec
méthode
L
’
ID
session
être
tranmis
via
l
’
URL
.
être
adopter
PHP
devoir
être
compiler
avec
l
’
option
--
enable-trans-sid
option
.
pouvoir
passer
l
’
ID
d
’
session
par
biais
d
’
hyper
lien
.
PHP
avoir
être
configurer
avec
l
’
option
--
enable-track-vars
,
l
’
ID
de
session
être
stocker
dans
constant
SID
:
devoir
l
’
ajouter
à
fin
lien
,
à
manière
d
’
paramètre
GET
.
exemple
:
<
à
HREF
=
'
'
page_2.php
?
<
?
=
SID
?
>
'
'
>
lien
<
/
à
>
PHP
n
’
avoir
être
configurer
avec
option
,
falloir
placer
clé
de
session
dans
l
’
URL
de
page
de
destination
,
constituer
écriture
longue
.
exemple
:
<
à
HREF
=
'
'
page_2.php
?
session_name
(
)
=
session_id
(
)
'
'
>
lien
<
/
à
>
fonction
session_name
(
)
renvoi
nom
de
session
définir
dans
dns-remplacé
.
string
session_name
(
[
string
name
]
)
fonction
session_id
(
)
renvoi
N
°
de
session
définir
début
de
session
déclarer
par
session_start
(
)
string
session_id
(
[
string
id
]
)
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
session
utiliser
fonction
PHP
PHP
comprendre
fonction
natif
de
contrôle
de
session
,
en
de
contenir
dans
bibliothèque
de
base
de
PHP
:
PHPlib
.
configuration
de
dns-remplacé
fichier
de
configuration
dns-remplacer
comporter
section
dédier
à
configuration
de
gestion
de
session
.
trouver
en
particulier
paramètre
suivant
:
dns-remplacer
_handler
:
avec
PHP4
,
seul
valeur
possible
être
file
,
signifier
valeur
variable
de
session
être
stocker
dans
fichier
sur
disque
.
contenu
de
fichier
être
en
ASCII
,
pouvoir
reconnaître
nom
variable
,
type
valeur
.
avec
PHP5
valeur
user
permettre
stockage
en
mémoire
,
dans
SGBD
.
dns-remplacé
_path
:
paramètre
indiquer
chemin
fichier
contenir
valeur
variable
de
session
.
par
défaut
,
être
créer
dans
/
tmp
.
dns-remplacer
:
paramètre
spécifier
nom
de
session
,
nom
utiliser
en
nom
cookie
de
session
.
devoir
contenir
caractère
alpha
numérique
.
valeur
par
défaut
être
PHPSESSID
.
dns-remplacer
_lifetime
:
paramètre
indiquer
durée
maximal
de
vie
cookie
envoyer
navigateur
client
.
paramètre
être
zéro
,
cookie
exister
jusqu
'
à
navigateur
être
arrêter
.
être
valeur
par
défaut
.
dns-remplacé
_start
:
paramètre
spécifier
session
être
créer
à
demande
.
par
défaut
,
à
zéro
,
session
devoir
être
créer
par
session_start
(
)
session_register
(
)
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
ouverture
d
’
session
fonction
session_start
(
)
initialiser
donnée
d
’
nouveau
session
rafraîchir
donnée
de
session
en
cours|cour
.
boolean
session_start
(
)
;
de
l
’
accès
site
,
l
’
identificateur
de
session
pouvoir
être
trouver
,
l
’
appel
à
fonction
permettre
de
créer
session
de
transmettre
identifier
navigateur
.
fonction
devoir
être
placer
en
début
de
script
devoir
être
placer
avant
l
’
envoyer
headers
http
.
enregistrement
d
’
variable
de
session
variable
de
session
être
variable
régulière
global
,
être
enregistrer
,
garder
valeur
sur
page
utiliser
session
.
pour
enregistrer
variable
de
session
,
falloir
assigner
valeur
à
variable
aller
devenir
variable
de
session
.
deux
méthode
être
possible
pour
enregistrer
variable
session
selon
directive
register_global
fichier
de
configuration
de
php
(
dns-remplacer
)
être
actif
:
avec
register_global
=
utiliser
fonction
session_register
(
)
:
boolean
session_register
(
mixed
nom_variable
[
,
...
]
)
;
pouvoir
enregistrer
variable
de
session
même
appel
de
fonction
.
avec
register_global
=
$
_SESSION
[
‘
Mavariable
’
]
=
’
valeur
’
$
HTTP_SESSION_VARS
[
‘
Mavariable
’
]
=
’
valeur
’
sur
prochain
page
utiliser
session
(
en
appeler
fonction
session_start
(
)
)
,
variable
$
_SESSION
[
‘
nom_variable
’
]
avoir
valeur
avoir
être
assigner
avoir
être
enregistrer
variable
de
session
.
changement
de
valeur
de
variable
être
enregistrer
dans
session
sauvegarder
pour
prochain
utilisation
.
utilisation
de
variable
de
session
pouvoir
accéder
à
variable
:
avec
register_global
=
via
nom
:
$
nom_variable
avec
register_global
=
par
biais
tableau
associatif
$
_SESSION
$
HTTP_SESSION_VARS
:
$
_SESSION
[
$
nom_variable
]
déterminer
variable
être
variable
de
session
enregistrer
:
avec
register_global
=
fonction
session_is_registered
(
)
permettre
de
déterminer
variable
être
variable
de
session
enregistrer
:
boolean
session_is_registered
(
string
nom_variable
)
;
renvoyer
valeur
true
variable
être
enregistrer
variable
de
session
false
dans
cas
contraire
.
avec
register_global
=
pouvoir
utiliser
tableau
$
_SESSION
$
HTTP_SESSION_VARS
pour
vérifier
variable
être
enregistrer
variable
de
session
:
If
(
isset
(
$
_SESSION
[
‘
Mavariable
’
]
)
)
;
Dés-enregistrement
de
variable
suppression
de
session
Dés-enregistrement
d
’
variable
de
session
:
pouvoir
dés-enregistrer
variable
session
en
invoquer
fonction
avec
register_global
=
session_unregister
(
)
:
boolean
session_unregister
(
string
nom_variable
)
;
fonction
dés-enregistrer
variable
de
session
à
fois
.
avec
register_global
=
Unset
(
)
:
void
unset
(
$
_SESSION
[
'
Mavariable
'
]
)
;
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
Dés-enregistrement
de
variable
de
session
:
avec
register_global
=
fonction
session_unset
(
)
permettre
de
dés-enregistrer
variable
de
session
courant
.
void
session_unset
(
)
;
avec
register_global
=
$
_SESSION
=
array
(
)
;
suppression
de
session
:
avoir
terminer
session
,
après
avoir
supprimer
variable
de
session
,
pouvoir
invoquer
fonction
session_destroy
(
)
permettre
de
supprimer
l
’
ID
de
session
.
boolean
session_destroy
(
)
;
exercice
:
(
voir
annexe
,
session
)
créer
formulaire
html
,
de
l
’
envoi
formulaire
enregistrer
saisie
de
l
’
utilisateur
dans
variable
session
,
afficher
information
sur
second
page
.
exercice
:
(
voir
annexe
,
session
)
créer
formulaire
de
connection
(
figurer
)
,
de
l
’
envoi
formulaire
enregistrer
saisie
de
l
’
utilisateur
dans
variable
session
,
afficher
information
sur
second
page
.
second
page
contenir
lien
permettre
avoir
l
’
utilisateur
de
déconnecter
(
supprimer
variable
session
)
,
pour
revenir
à
page
de
connection
.
Connection
nom
:
mot
de
passe
:
figurer
exercice
:
(
voir
annexe
,
session
)
reprendre
formulaire
de
connection
(
figurer
)
,
de
l
’
envoi
formulaire
,
avant
d
’
enregistrer
saisie
de
l
’
utilisateur
dans
variable
session
,
créer
fonction
vérifier
en
comparer
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
avec
base
de
donnée
l
’
utilisateur
exister
mot
de
passe
être
correct
,
afficher
information
sur
second
page
.
second
page
contenir
lien
permettre
avoir
l
’
utilisateur
de
déconnecter
(
supprimer
variable
session
)
,
pour
revenir
à
page
de
connection
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
gestion
fichier
PHP
permettre
de
manipuler
n
’
importer
fichier
serveur
.
avant
d
’
effectuer
opération
sur
fichier
,
être
intéresser
de
s
’
assurer
fichier
exister
.
fonction
file_exists
(
)
permettre
de
faire
:
int
file_exists
(
string
nom_fichier
)
;
fonction
permettre
gestion
de
fichier
être
fonction
renvoyer
true
l
’
opération
réussir
,
false
échouer
,
sauf
précision
contraire
.
ouvrir
fichier
fonction
fopen
(
)
permettre
d
’
ouvrir
fichier
sur
serveur
local
via
HTTP
FTP
sur
Internet
.
l
’
utiliser
de
manière
suivant
:
int
fopen
(
string
nom_fichier
,
string
mode
)
;
L
’
argument
nom_fichier
désigner
nom
fichier
à
ouvrir
,
l
’
argument
mode
correspondre
mode
d
’
ouverture
fichier
,
accepter
l
’
un
valeur
suivant
:
valeur
avoir
a+
r
r+
w
w+
description
ouverture
d
’
fichier
en
ajout
.
donnée
être
écrire
à
fin
fichier
.
fichier
n
’
exister
,
PHP
tenter
de
créer
.
ouverture
d
’
fichier
en
ajout
en
lecture
.
donnée
être
écrire
à
fin
fichier
.
fichier
n
’
exister
,
PHP
tenter
de
créer
.
ouverture
d
’
fichier
pour
lecture
seul
.
ouverture
d
’
fichier
en
lecture-écriture
.
donnée
être
écrire
début
fichier
.
ouverture
d
’
fichier
en
écriture
seul
.
donnée
remplacer
contenu
fichier
être
perdre
.
fichier
n
’
exister
,
PHP
tenter
de
créer
.
ouverture
d
’
fichier
en
écriture-lecture
.
donnée
remplacer
contenu
fichier
être
perdre
.
fichier
n
’
exister
,
PHP
tenter
de
créer
.
de
,
l
’
indicateur
b
indique
contenu
fichier
être
binaire
texte
(
image
par
exemple
)
.
fonction
fopen
(
)
réussir
,
renvoyer
pointeur
de
fichier
(
entier
faire
référence
fichier
dans
appel
de
fonction
ultérieur
)
,
,
renvoyer
false
.
exemple
:
<
?
$
var
=
file_exists
(
`
`
dns-remplacer
'
'
)
;
if
(
!
$
var
)
{
echo
`
`
echec
:
fichier
demander
exister
<
br
>
'
'
;
}
else
{
echo
`
`
fichier
demander
exister
<
br
>
'
'
;
if
(
!
$
mavar
=
fopen
(
`
`
dns-remplacer
'
'
,
'
'
r
'
'
)
)
{
echo
`
`
echec
:
fichier
n
'
avoir
être
ouvrir
<
br
>
'
'
;
}
else
{
echo
`
`
fichier
avoir
être
ouvrir
<
br
>
'
'
;
echo
`
`
contenu
<
br
>
<
br
>
<
br
>
'
'
;
fpassthru
(
$
mavar
)
;
}
}
/
/
afficher
formulaire
de
page
dns-remplacer
fichier
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
fermer
fichier
après
lecture
d
’
fichier
,
devoir
refermer
.
fonction
utiliser
être
:
mixed
fclose
(
int
pointeur_fichier
)
;
naviguer
dans
fichier
PHP
posséder
fonction
permettre
de
définir
avec
précision
longueur
de
chaîne
à
lire
dans
fichier
,
de
déplacer
à
position
spécifique
fichier
.
fonction
rewind
(
)
:
int
rewind
(
int
pointeur_fichier
)
;
placer
l
’
indicateur
de
position
début
fichier
.
fonction
fseek
(
)
:
int
fseek
(
int
pointeur_fichier
,
int
decalage
)
;
L
’
argument
décalage
être
nombre
d
’
octet
de
caractère
par
rapport
début
fichier
.
attention
:
fonction
retourner
–
en
cas
d
’
erreur
en
cas
de
réussite
.
fonction
ftell
(
)
:
int
ftell
(
int
pointeur_fichier
)
;
fonction
renseigner
sur
position
de
l
’
indicateur
dans
fichier
.
fonction
feof
(
)
:
int
feof
(
int
pointeur_fichier
)
;
afficher
fichier
L
’
opération
consister
à
envoyer
contenu
fichier
vers
flux
de
sortie
.
fonction
utiliser
être
:
int
fpassthru
(
int
pointeur_fichier
)
;
effectuer
lecture
de
position
courant
à
fin
fichier
,
refermer
fichier
.
paramètre
de
fonction
être
pointeur
fichier
renvoyer
par
fonction
fopen
(
)
.
lire
fichier
L
’
affichage
en
totalité
d
’
fichier
n
’
être
souhaitable
.
fonction
PHP
de
lecture
de
fichier
permettre
de
lire
donnée
.
fonction
fread
(
)
:
string
fread
(
int
pointeur_fichier
,
int
longeur
)
;
paramètre
longueur
indiquer
nombre
de
caractère
depuis
début
.
lecture
terminer
fonction
rencontrer
fin
fichier
.
fonction
fgets
(
)
:
string
fgets
(
int
pointeur_fichier
,
int
longueur
)
;
paramètre
longueur
indiquer
nombre
de
caractère
caractère
depuis
début
.
lecture
terminer
fonction
rencontrer
caractère
de
saut
de
ligne
fin
fichier
.
fonction
fgetss
(
)
:
string
fgetss
(
int
pointeur_fichier
,
int
longueur
)
;
fonction
avoir
même
effet
fonction
fgets
(
)
,
exclure
balise
HTML
PHP
de
l
’
affichage
.
fonction
fgetc
(
)
:
string
fgetc
(
int
pointeur_fichier
)
;
fonction
permettre
de
lire
premier
caractère
situer
à
position
courant
.
fonction
filer
(
)
:
array
file
(
string
nom_fichier
)
;
fonction
lire
contenu
d
’
fichier
qu
’
placer
dans
tableau
,
ligne
fichier
être
représenter
par
élément
tableau
(
premier
ligne
correspondre
à
l
’
élément
zéro
)
.
fonction
filesize
(
)
:
int
filesize
(
string
filename
)
renvoi
taille
fichier
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
exemple
:
<
?
php
if
(
!
$
fichier
=
fopen
(
`
`
dns-remplacer
'
'
,
'
'
r
'
'
)
)
{
echo
`
`
ouverture
fichier
impossible
'
'
;
}
else
{
$
text1
=
fread
(
$
fichier
,
)
;
echo
`
`
$
text1
<
br
>
'
'
;
/
/
affiche
:
fichier
être
(
premier
caractère
+
<
p
>
)
$
text2
=
fgets
(
$
fichier
,
)
;
echo
`
`
$
text2
<
br
>
'
'
;
/
/
affiche
:
destiner
à
apprendre
à
insérer
fichier
(
arrêter
saut
de
ligne
)
rewind
(
$
fichier
)
;
$
text4
=
fgetss
(
$
fichier
,
)
;
echo
`
`
$
text4
<
br
>
'
'
;
/
/
affiche
:
fichier
être
echo
`
`
<
br
>
'
'
;
rewind
(
$
fichier
)
;
/
/
replacer
pointeur
début
fichier
while
(
!
feof
(
$
fichier
)
)
{
echo
(
fgetc
(
$
fichier
)
)
;
/
/
afficher
caractère
fichier
jusqu
'
à
fin
fichier
}
echo
`
`
<
br
>
'
'
;
rewind
(
$
fichier
)
;
$
arrText
=
file
(
`
`
dns-remplacer
'
'
)
;
/
/
placer
contenu
fichier
dans
tableau
for
(
$
i
=
;
$
i
<
count
(
$
arrText
)
;
$
i++
)
{
/
/
ligne
texte
être
insérer
dans
balise
<
b
>
...
<
/
b
>
/
/
pour
mettre
texte
en
gras
echo
`
`
<
b
>
$
arrText
[
$
i
]
<
/
b
>
<
br
>
'
'
;
}
/
/
renvoi
taille
fichier
echo
filesize
(
`
`
dns-remplacer
'
'
)
.
'
'
octet
<
br
>
'
'
;
fclose
(
$
fichier
)
;
}
?
>
exercice
:
(
voir
annexe
,
gestion
fichier
)
fichier
`
`
stagiaires_
dns-remplacé
'
'
contenir
liste
stagiaire
.
ouvrer
fichier
en
lecture
seul
afficher
contenu
.
Ecrire
dans
fichier
pour
écrire
chaîne
dans
fichier
,
pouvoir
utiliser
l
’
un
deux
fonction
fputs
(
)
fwrite
(
)
être
identique
en
point
:
int
fputs
(
int
fichier_pointeur
,
string
str
,
[
int
longeur
]
)
;
int
fwrite
(
int
fichier_pointeur
,
string
str
,
[
int
longeur
]
)
;
dernier
paramètre
n
’
apparaître
,
chaîne
être
écrire
en
totalité
.
exemple
:
<
?
php
if
(
$
fichier
=
fopen
(
`
`
dns-remplacer
'
'
,
'
'
avoir
'
'
)
)
{
fputs
(
$
fichier
,
'
'
insérer
nouveau
ligne
à
fin
fichier
'
'
)
;
}
?
>
copier
,
supprimer
renommer
fichier
fonction
copy
(
)
permettre
de
copier
fichier
:
int
copy
(
string
source
,
string
destination
)
;
fonction
unlink
(
)
supprimer
fichier
:
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
int
unlink
(
string
nom_fichier
)
;
fonction
rename
(
)
permettre
de
renommer
fichier
:
int
rename
(
string
ancien_name
,
string
nouveau_nom
)
;
exemple
:
copier
fichier
<
?
php
$
fichier
=
`
`
dns-remplacer
'
'
;
copy
(
$
fichier
,
'
'
.
.
/
rep
/
'
'
.
$
fichier
)
;
echo
`
`
fichier
copier
dans
répertoire
rep
<
br
>
<
avoir
href
=
\
'
'
dns-remplacer
\
'
'
>
suite
<
/
avoir
>
'
'
;
?
>
supprimer
fichier
<
?
php
$
fichier
=
`
`
dns-remplacer
'
'
;
unlink
(
`
`
.
.
/
rep
/
'
'
.
$
fichier
)
;
'
'
fichier
$
fichier
supprimer
<
br
>
<
avoir
ref
=
\
'
'
dns-remplacer
\
'
'
>
retour
<
/
avoir
>
'
'
;
echo
`
`
fichier
$
fichier
avoir
être
supprimer
'
'
;
?
>
renommer
fichier
<
?
php
$
fichier
=
`
`
dns-remplacer
'
'
;
rename
(
$
fichier
,
`
`
nouveau_
dns-remplacé
'
'
)
;
echo
`
`
fichier
$
fichier
avoir
être
renommer
nouveau_
dns-remplacer
'
'
;
?
>
exercice
:
(
voir
annexe
,
gestion
fichier
)
créer
quatre
fichier
suivre
:
`
`
creer_
dns-remplacé
'
'
,
`
`
copy_
dns-remplacé
'
'
,
`
`
rename_
dns-remplacé
'
'
'
'
supp_
dns-remplacé
'
'
.
premier
,
`
`
creer_
dns-remplacé
'
'
créer
fichier
dns-remplacer
inserrer
deux
ligne
suivant
:
'
'
insertion
de
premier
ligne
de
fichier
<
br
>
'
'
'
'
insertion
de
deuxième
ligne
de
fichier
<
br
>
'
'
fichier
exister
,
contenu
être
supprimer
.
L
’
utilisateur
être
informer
par
message
résultat
de
l
’
opération
,
contenu
fichier
être
afficher
.
second
,
`
`
copy_
dns-remplacé
'
'
copier
fichier
dns-remplacer
en
stagiaires_
dns-remplacer
.
informer
l
’
utilisateur
résultat
de
l
’
opération
.
troisième
,
`
`
rename_
dns-remplacé
'
'
,
renomera
fichier
stagiaires_
dns-remplacer
en
lst_
dns-remplacer
contenu
nouveau
fichier
être
afficher
.
informer
l
’
utilisateur
résultat
de
l
’
opération
.
quatrième
,
`
`
supp_
dns-remplacé
'
'
supprimer
fichier
dns-remplacer
,
stagiaires_
dns-remplacé
lst_
dns-remplacer
.
informer
l
’
utilisateur
résultat
de
l
’
opération
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
chargement
de
tableau
à
partir
de
fichier
avoir
voir
fonction
filer
(
)
placer
contenu
d
’
fichier
dans
tableau
:
ligne
fichier
être
représenter
par
élément
tableau
scalaire
.
pouvoir
utiliser
fonction
tableau
scalaire
pour
accéder
donnée
fichier
.
array
file
(
string
URL_fichier
)
;
exemple
:
<
?
php
$
orders
=
file
(
`
`
dns-remplacer
'
'
)
;
/
/
contenu
fichier
être
placer
dans
tableau
$
orders
$
num
=
count
(
$
orders
)
;
/
/
compter
nombre
de
élément
tableau
if
(
$
num
=
=
)
{
echo
`
`
rien
à
afficher
,
réessayer
'
'
;
}
else
{
for
(
$
i
=
;
$
i
<
$
num
;
$
i++
)
{
echo
`
`
$
orders
[
$
i
]
<
br
>
'
'
;
/
/
afficher
ligne
fichier
}
}
?
>
exercice
:
(
voir
annexe
,
chargement
de
tableau
à
partir
de
fichier
)
fichier
texte
stagiaire_
dns-remplacer
être
issu
d
’
éxportation
d
’
base
access
,
contenir
liste
stagiaire
coordonnées
.
de
avoir
être
générer
avec
ligne
délimiter
par
;
champ
délimiter
par
`
`
(
guillemet
)
.
afficher
dans
page
,
stagiaire
avec
adresse
téléphone
en
dessous
.
exemple
:
numéro
de
stagiaire
:
Madame
durant
,
rue
Georges
Brassens
Creteil
téléphone
:
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
gérer
répertoire
fonction
chdir
(
)
permettre
de
définir
répertoire
courir
:
mixed
chdir
(
string
repertoire
)
;
par
défaut
,
répertoire
d
’
page
PHP
s
’
affiche
être
répertoire
dans
résider
.
être
avantageux
de
basculer
autre
répertoire
dans
répertoire
pour
pouvoir
accéder
fichier
,
de
spécifier
chemin
d
’
accès
complet
de
fichier
.
fonction
opendir
(
)
permettre
d
’
ouvrir
répertoire
:
mixed
opendir
(
string
chemin
)
;
fonction
retourner
pointeur
de
répertoire
,
valeur
entier
permettre
de
référer
répertoire
ouvrir
dans
appel
de
fonction
ultérieur
.
fonction
readdir
(
)
permettre
de
lire
entrée
répertoire
ouvrir
:
string
readdir
(
int
pointeur_repertoire
)
;
fonction
renvoyer
false
lorsqu
’
avoir
échouer
fin
répertoire
être
atteindre
.
exemple
:
<
?
chdir
(
`
`
.
.
/
exercice
'
'
)
;
$
rep
=
opendir
(
`
`
.
`
`
)
;
while
(
$
fichier
=
readdir
(
$
rep
)
)
{
echo
`
`
$
fichier
<
br
>
'
'
;
}
/
/
afficher
fichier
répertoire
exercice
?
>
fonction
rewinddir
(
)
permettre
de
revenir
début
répertoire
:
void
rewinddir
(
int
pointeur_repertoire
)
;
fonction
closedir
(
)
permettre
de
fermer
répertoire
de
libérer
ressource
:
void
rewinddir
(
int
pointeur_repertoire
)
;
fonction
mkdir
(
)
permettre
de
définir
nouveau
répertoire
:
int
mkdir
(
string
chemin_repertoire
,
int
mode
)
;
second
paramètre
désigner
permission
d
’
accès
répertoire
UNIX
;
Windows
tenir
compte
de
paramètre
.
exemple
:
<
?
if
(
mkdir
(
`
`
.
.
/
rep
/
new
'
'
,
)
)
{
echo
`
`
répertoire
avoir
être
créer
!
`
`
;
}
else
{
echo
`
`
échec
:
répertoire
n
'
avoir
pouvoir
être
créer
.
`
`
;
}
?
>
fonction
rmdir
(
)
permettre
de
supprimer
répertoire
:
int
rmdir
(
string
nom_repertoire
)
;
fonction
basename
séparer
nom
fichier
nom
dossier
.
string
basename
(
string
path
[
,
string
suffix
]
)
exercice
:
(
voir
annexe
,
gérer
répertoire
)
créer
quatre
fichier
suivre
:
`
`
creer_
'
'
rename_
dns-remplacé
'
'
`
`
supp_
dns-remplacé
'
'
.
dns-remplacer
'
'
,
'
'
copy_
dns-remplacé
'
'
,
premier
,
`
`
creer_
dns-remplacé
'
'
créer
repertoire1
repertoire2
fichier
dns-remplacer
dans
repertoire1
inserrer
dans
fichier
deux
ligne
suivant
:
'
'
insertion
de
premier
ligne
de
fichier
<
br
>
'
'
'
'
insertion
de
deuxième
ligne
de
fichier
<
br
>
'
'
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
fichier
exister
,
contenu
être
supprimer
.
L
’
utilisateur
être
informer
par
message
résultat
de
l
’
opération
,
contenu
fichier
être
afficher
.
second
,
`
`
copy_
dns-remplacé
'
'
copier
fichier
dns-remplacer
en
stagiaires_
dns-remplacer
dans
repertoire2
.
informer
l
’
utilisateur
résultat
de
l
’
opération
.
troisième
,
`
`
rename_
dns-remplacé
'
'
,
renomera
fichier
stagiaires_
dns-remplacer
en
lst_
dns-remplacer
dans
repertoire1
contenu
nouveau
fichier
être
afficher
.
informer
l
’
utilisateur
résultat
de
l
’
opération
.
quatrième
,
`
`
supp_
dns-remplacé
'
'
supprimer
deux
répertoire
contenu
.
informer
l
’
utilisateur
résultat
de
l
’
opération
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
afficher
image
PHP
utiliser
bibliothèque
GD
pour
image
hormis
simple
d
’
entre
.
PHP
permettre
de
créer
de
manipuler
image
,
dans
grand
choix
de
format
,
gif
,
png
,
jpg
,
wbmp
xpm
.
PHP
pouvoir
générer
image
pour
navigateur
,
avec
librarie
GD
.
utilisation
d
’
image
simple
:
utiliser
balise
<
img
>
pour
afficher
image
:
<
img
src
=
'
'
Mon_image
'
'
width
=
'
'
'
'
height
=
'
'
'
'
>
PHP
permettre
d
’
afficher
image
grace
avoir
balise
<
input
>
:
<
input
name
=
'
imageField
'
type
=
'
image
'
src
=
'
Mon_image
'
>
;
PHP
rencontrer
balise
,
contenter
d
’
interroger
serveur
d
’
obtenir
l
’
image
transmettre
navigateur
faire
d
’
autre
.
GetImageSize
:
fonction
GetImageSize
(
)
,
être
utile
puisqu
’
retourner
taille
de
image
tableau
de
élément
.
index
contenir
largeur
.
index
contenir
longueur
.
index
contenir
type
de
image
:
=
GIF
,
=
JPG
,
=
PNG
,
=
PSD
,
=
BMP
.
index
contenir
chaîne
:
`
`
height
=
xxx
width
=
xxx
'
'
.
array
getimagesize
(
string
filename
[
,
array
imageinfo
]
)
pouvoir
obtenir
information
utile
sur
l
’
image
placer
dans
balise
html
.
exercice
:
(
voir
annexe
,
afficher
image
exercice
)
à
l
’
aide
d
’
liste
de
séléction
(
<
select
>
)
afficher
liste
image
contenir
dans
répertoire
image
(
voir
figurer
)
.
permettre
à
l
’
utilisateur
d
’
afficher
l
’
image
sélectionner
à
l
’
aider
de
balise
img
input
.
liste
image
disponible
afficher
librarie
GD
de
pouvoir
utiliser
librairie
GD
,
devoir
préalable
charger
module
.
pour
faire
,
ajouter
ligne
suivant
dans
partie
extension
fichier
de
configuration
de
php
(
dns-remplacer
)
.
exemple
:
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
Dynamic
extension
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
extension
=
php_
dns-remplacer
;
librarie
GD
PHP
disposer
de
nombreux
fonction
relatif
traitement
image
,
contenter
de
un
.
fonction
utiliser
l
’
entêter
de
fichier
,
dire
devoir
être
utiliser
avant
autre
commande
transmettre
flux
de
donnée
.
Imagecreatefromgif
:
créer
nouveau
image
gif
à
partir
de
fichier
de
URL
.
resource
imagecreatefromgif
(
string
filename
)
imagegif
:
envoyer
image
GIF
vers
navigateur
fichier
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
int
imagegif
(
resource
im
,
string
filename
)
ImagecreatefromJpeg
:
créer
nouveau
image
JPEG
à
partir
de
fichier
de
URL
resource
imagecreatefromjpeg
(
string
filename
)
imagejpeg
:
envoyer
image
JPEG
vers
navigateur
fichier
.
int
imagejpeg
(
resource
im
[
,
string
filename
[
,
int
quality
]
]
)
ImageCreateFromPNG
:
créer
nouveau
image
PNG
à
partir
de
fichier
de
URL
resource
imagecreatefrompng
(
string
filename
)
ImagePNG
:
envoyer
image
PNG
vers
navigateur
fichier
int
imagepng
(
resource
im
[
,
string
filename
]
)
ImageDestroy
:
détruire
image
libérer
mémoire
associer
à
image
im
.
im
être
identifier
de
image
valide
retourner
par
fonction
de
création
d
’
image
(
imagecreate
(
)
par
exemple
)
int
imagedestroy
(
resource
im
)
exemple
de
création
d
’
image
:
<
?
php
/
/
définition
de
image
$
hauteur
=
;
$
largeur
=
;
$
image
=
ImageCreate
(
$
largeur
,
$
hauteur
)
;
/
/
identificateur
de
couleur
blanc
$
blanc
=
ImageColorAllocate
(
$
image
,
,
,
)
;
/
/
identificateur
de
couleur
noir
$
noir
=
ImageColorAllocate
(
$
image
,
,
,
)
;
/
/
dessin
de
image
ImageFill
(
$
image
,
,
,
$
noir
)
;
/
/
peindre
fond
noir
ImageLine
(
$
image
,
,
,
$
largeur
,
$
hauteur
,
$
blanc
)
;
/
/
tracer
trait
blanc
coin
supérieur
gauche
(
,
)
/
/
jusque
coin
inférieur
droit
(
$
largeur
,
$
hauteur
)
ImageString
(
$
image
,
,
,
,
`
`
vente
'
'
,
$
blanc
)
;
/
/
ajouter
légende
`
`
vente
'
'
graphique
de
police
,
point
initial
(
,
)
/
/
génération
de
image
Header
(
`
`
Content-type
:
image
/
png
'
'
)
;
ImagePng
(
$
image
)
;
/
/
nettoyage
ImageDestroy
(
$
image
)
;
?
>
exercice
:
(
voir
annexe
,
afficher
image
exercice
)
à
l
’
aide
d
’
liste
de
séléction
(
<
select
>
)
afficher
liste
image
contenir
dans
répertoire
image
(
exercice
précédent
)
.
permettre
à
l
’
utilisateur
d
’
afficher
l
’
image
sélectionner
en
utiliser
fonction
de
librairie
GD
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
gestion
erreur
introduction
PHP
constituer
environnement
pratique
pour
débogage
gestion
erreur
.
permettre
de
détecter
erreur
d
’
réagir
en
laisser
latitude
quant
à
façon
message
d
’
erreur
être
afficher
.
.
type
d
’
erreur
PHP
trois
grand
groupe
d
’
erreur
de
programmation
pouvoir
être
distinguer
:
erreur
de
syntaxe
de
compilation
,
survenir
syntaxe
code
être
erroné
.
erreur
de
sémantique
d
’
exécution
,
produire
programme
exécuter
code
syntaxe
être
correct
;
erreur
logique
provoquer
l
’
apparition
d
’
message
d
’
erreur
avoir
pour
résultat
programme
effectuer
autre
chose
être
souhaiter
par
programmeur
.
avoir
erreur
d
’
environnement
être
devoir
à
faute
programmeur
à
ensemble
de
facteur
d
’
environnement
sur
programmeur
n
’
avoir
contrôle
.
erreur
de
syntaxe
erreur
de
syntaxe
produire
de
l
’
analyser
code
,
avant
exécution
.
L
’
analyseur
indiquer
numéro
de
ligne
s
’
être
produire
l
’
erreur
.
exemple
:
<
?
php
$
var
=
`
`
test
de
erreur
'
'
echo
$
var
;
?
>
manquer
`
`
;
'
'
de
fin
d
’
instruction
L
’
analyseur
détecter
erreur
à
ligne
devoir
trouver
de
nouveau
instruction
,
`
`
;
'
'
de
fin
d
’
instruction
être
absent
de
ligne
erreur
de
sémantique
erreur
sémantique
n
’
être
détecter
par
l
’
analyseur
syntaxe
être
correct
:
survenir
PHP
tenter
d
’
exécuter
ligne
.
exemple
:
<
?
php
fopen
(
`
`
dns-remplacer
'
'
)
;
?
>
ligne
présenter
d
’
erreur
de
syntaxe
,
fonction
fopen
(
)
nécessiter
deux
paramètre
erreur
de
sémantique
n
’
être
identifiable
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
erreur
logique
L
’
erreur
logique
être
délicat
à
identifier
correspondre
à
code
parfait
par
syntaxe
sémantique
:
produire
de
message
d
’
erreur
.
dans
plupart
cas
,
aboutir
à
résultat
n
’
être
attendu
.
erreur
d
’
environnement
même
dans
cas
code
être
dépourvu
de
bogue
,
n
’
être
garantir
qu
’
s
’
exécuter
sans
erreur
.
en
effet
programmeur
devoir
s
’
appuyer
sur
élément
qu
’
contrôler
,
l
’
échec
d
’
ouverture
d
’
base
de
donnée
,
l
’
impossibilité
d
’
ouvrir
fichier
include
...
être
important
de
s
’
assurer
de
présence
d
’
gestion
d
’
erreur
adapter
à
quelconque
erreur
d
’
environnement
.
message
d
’
erreur
PHP
message
d
’
erreur
PHP
être
descriptif
.
correspondre
à
forme
suivant
:
Niveau_erreur
:
message_erreur
in
Nom_fichier
line
#
.
niveau
d
’
erreur
PHP
erreur
d
’
analyse
:
`
`
parse
error
'
'
C
’
être
erreur
de
syntaxe
détecter
par
l
’
analyseur
.
de
profond
modification
dans
moteur
PHP
passage
de
PHP3
à
PHP4
entraîner
effet
différent
d
’
erreur
d
’
analyse
.
PHP3
être
langage
interpréter
:
moteur
interpète
ligne
de
code
,
l
’
exécuter
passer
à
suivant
.
PHP4
précompile
,
PHP5
compiler
script
avant
d
’
exécuter
script
.
changement
impliquer
erreur
d
’
analyser
PHP3
de
détecter
avant
d
’
avoir
atteindre
ligne
fautif
être
épingler
par
PHP
avant
l
’
exécution
de
moindre
ligne
de
code
.
erreur
fatal
:
`
`
fatal
error
'
'
C
’
être
erreur
de
sémantique
d
’
environnement
PHP
pouvoir
surmonter
:
entraîner
l
’
interruption
immédiat
script
,
PHP
pouvoir
continuer
sans
l
’
exécution
de
ligne
s
‘
être
produire
l
’
erreur
.
avertissement
:
`
`
warning
'
'
S
’
renccontrer
avertissement
,
PHP
tenter
de
poursuivre
l
’
exécution
script
.
s
’
agir
en
général
d
’
erreur
grave
pour
compromettre
bon
exécution
programme
(
de
nombreux
erreur
d
’
environnement
entraîner
warning
)
.
gestion
erreur
permettre
de
réagir
à
erreur
,
défaillance
initial
provoquer
d
’
autre
erreur
script
poursuivre
exécution
.
remarquer
remarque
(
notice
)
être
devoir
à
erreur
de
faible
importance
,
qu
’
variable
initialiser
.
par
défaut
PHP
n
’
être
configurer
pour
afficher
remarque
,
pouvoir
être
activer
constituer
bon
moyen
de
détecter
erreur
.
définition
niveau
de
rapport
d
’
erreur
différent
type
d
’
erreur
d
’
alerte
être
:
valeur
constant
description
E_ERROR
erreur
fatal
d
’
exécution
noter
E_WARNING
alerte
d
’
exécution
(
erreur
fatal
)
E_PARSE
erreur
de
compilation
E_NOTICE
note
d
’
exécution
(
critique
alerte
)
E_CORE_ERROR
erreur
survenir
de
l
’
initialisation
de
PHP
PHP4
supérieur
E_CORE_WARNING
alerte
survenir
de
l
’
initialisation
de
PHP
PHP4
supérieur
E_COMPILE_ERROR
erreur
fatal
de
compilation
PHP4
supérieur
E_COMPILE_WARNING
alerte
de
compilation
(
erreur
fatal
)
PHP4
supérieur
E_USER_ERROR
erreur
générer
par
l
’
utilisateur
PHP4
supérieur
E_USER_WARNING
alerter
générer
par
l
’
utilisateur
PHP4
supérieur
E_USER_NOTICE
noter
générer
par
l
’
utilisateur
PHP4
supérieur
E_ALL
erreur
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
valeur
(
numérique
symbolique
)
être
utiliser
pour
construire
champ
de
bit
spécifier
erreur
rapporter
.
opérateur
de
bit
être
utilisable
pour
combiner
valeur
conserver
être
intéresantes
.
niveau
de
rapport
d
’
erreur
être
définir
dans
fichier
«
dns-remplacer
»
niveau
script
par
fonction
error_reporting
(
)
.
définition
niveau
de
rapport
d
’
erreur
dans
«
dns-remplacé
»
C
’
être
définition
de
valeur
de
«
error_reporting
»
définir
niveau
de
rapport
d
’
erreur
.
par
défaut
,
niveau
de
rapport
d
’
erreur
être
définir
à
E_ALL
&
~
E_NOTICE
(
à
valeur
pour
«
dns-remplacé
»
)
.
définition
niveau
de
rapport
d
’
erreur
dans
script
:
fonction
error_reporting
(
)
accepter
argument
spécifier
niveau
d
’
erreur
à
afficher
.
pour
déterminer
valeur
de
l
’
argument
,
falloir
ajouter
valeur
niveau
d
’
erreur
à
afficher
.
pour
désactiver
rapport
d
’
erreur
,
falloir
appeler
fonction
avec
l
’
argument
à
.
paramètrage
par
défaut
être
équivalent
à
l
’
appel
de
fonction
avec
valeur
(
+
+
)
.
pour
l
’
affichage
de
erreur
,
falloir
appel
de
fonction
à
(
+
+
+
)
.
être
conseiller
de
remplacer
message
d
’
erreur
standard
par
gestion
harmonieux
erreur
d
’
environnement
de
journaliser
sans
afficher
message
standard
PHP
à
l
’
utilisateur
.
.
gérer
erreur
plupart
fonction
PHP
retourner
en
cas
d
’
erreur
.
avec
test
être
simple
de
gérer
l
’
erreur
.
exemple
:
<
?
php
if
(
mysql_connect
(
$
db
,
$
utilisateur
,
$
password
)
)
{
/
/
code
de
accès
à
base
de
donnée
situer
'
}
?
>
suppression
message
d
’
erreur
dans
l
’
exemple
précédent
,
en
cas
d
’
erreur
message
d
’
erreur
être
afficher
:
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
être
possible
de
supprimer
message
d
’
erreur
de
deux
façon
:
avec
fonction
error_reporting
(
)
vue
;
avec
l
’
opérateur
de
contrôle
d
’
erreur
`
`
@
'
'
permettre
d
’
ignorer
message
d
’
erreur
générer
par
l
’
expression
qu
’
préfixer
.
l
’
option
track_errors
de
`
`
dns-remplacer
'
'
être
activer
,
message
d
’
erreur
être
sauver
dans
variable
global
$
php_errormsg
,
être
écraser
à
erreur
.
exemple
:
<
?
php
if
(
@
mysql_connect
(
$
db
,
$
utilisateur
,
$
password
)
)
{
/
/
code
de
accès
à
base
de
donnée
situer
'
}
echo
`
`
message
de
erreur
:
<
br
>
<
b
>
<
u
>
$
php_errormsg
<
/
u
>
<
/
b
>
'
'
;
?
>
message
d
’
erreur
personnaliser
message
d
’
erreur
personnaliser
pour
l
’
utilisateur
être
percevoir
message
d
’
erreur
standard
.
suffire
d
’
ajouer
test
clause
`
`
else
'
'
pouvoir
contenir
message
d
’
erreur
instruction
pour
terminer
l
’
exécution
script
.
fonction
die
(
)
entraîner
fin
d
’
exécution
script
l
’
affichage
d
’
chaîne
de
caractère
qu
’
prendre
en
argument
(
pouvoir
exécuter
fonction
en
argument
)
.
fonction
exit
(
)
jouer
même
rôle
sans
message
.
exemple
:
<
?
php
if
(
@
mysql_connect
(
$
db
,
$
utilisateur
,
$
password
)
)
{
/
/
code
de
accès
à
base
de
donnée
situer
'
}
else
{
exit
(
`
`
<
h@card@
>
désoler
!
<
/
h1
>
<
p
>
impossible
de
établir
connexion
pour
moment
.
<
br
>
réessayer
<
/
p
>
'
'
)
;
}
echo
`
`
partie
script
être
afficher
connexion
avoir
pouvoir
faire
'
'
;
?
>
être
possible
de
rediriger
l
’
utilisateur
vers
page
d
’
erreur
aucn
contenir
n
’
avoir
être
envoyer
navigateur
avec
fonction
header
(
)
(
fonction
d
’
en-tête
)
:
exemple
:
<
?
php
header
(
`
`
location
:
dns-remplacer
'
'
)
/
/
rediriger
vers
page
dns-remplacé
?
>
être
possible
de
imprimer
élément
de
JavaScript
côté
client
,
navigateur
prendre
en
charge
JavaScript
exemple
:
<
?
php
if
(
!
isset
(
$
_REQUEST
[
'
var
'
]
)
)
{
echo
`
`
<
form
action
=
\
'
'
dns-remplacer
\
'
'
>
\n
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
nom
<
input
type
=
\
'
'
text\
'
'
name
=
\
'
'
var\
'
'
>
\n
<
br
>
<
input
type
=
\
'
'
submit\
'
'
value
=
\
'
'
envoyer\
'
'
>
\n
<
/
form
>
'
'
;
}
else
{
if
(
empty
(
$
_REQUEST
[
'
var
'
]
)
)
{
/
/
utilisateur
n
'
avoir
remplir
champ
$
var
echo
`
`
<
script
language
=
\
'
'
javascript\
'
'
>
alert
(
\
'
'
devoir
remplir
champ\
'
'
)
<
/
script
>
'
'
;
echo
`
`
<
form
action
=
\
'
'
dns-remplacer
\
'
'
>
\n
nom
<
input
type
=
\
'
'
text\
'
'
name
=
\
'
'
var\
'
'
>
\n
<
br
>
<
input
type
=
\
'
'
submit\
'
'
value
=
\
'
'
envoyer\
'
'
>
\n
<
/
form
>
'
'
;
}
else
{
/
/
utilisation
de
$
_REQUEST
[
'
var
'
]
}
}
?
>
l
’
utilisateur
faire
l
’
erreur
de
remplir
formulaire
avant
de
l
’
envoyer
,
message
javascript
s
’
affiche
Journalisation
erreur
fonction
error_log
(
)
mettre
en
journal
erreur
pouvoir
subvenir
.
int
error_log
(
string
message
,
int
type_message
[
,
string
destination
[
,
string
extra_headers
]
]
)
;
paramètre
message
être
message
d
’
erreur
devoir
être
mettre
dans
journal
.
paramètre
type_message
définir
type
de
cible
vers
aller
être
diriger
message
d
’
erreur
:
:
journal
d
’
erreur
système
de
PHP
,
pouvoir
être
définir
dans
«
dns-remplacer
»
par
directif
error_log
:
par
défaut
,
c
’
être
journal
serveur
web
(
dns-remplacé
d
’
apache
:
...
/
apache
/
logs
/
dns-remplacer
)
:
adresse
électronique
transmettre
troisième
paramètre
:
port
de
débogage
(
débogage
être
activer
)
:
fichier
journal
spécifier
dans
troisème
argument
paramètre
destination
être
l
’
adresse
électronique
type_message
être
,
l
’
emplacement
fichier
journal
type_message
être
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
programmation
orienter
objet
.
concept
de
programmation
orienter
objet
programmation
orienter
objet
,
programmation
modulaire
,
permettre
réutilisation
de
code
.
PHP
permettre
modularité
via
programmation
de
librairie
de
classe
.
logiciel
orienter
objet
être
concevoir
construire
sous
forme
d
’
ensemble
d
’
objet
indépendant
doter
à
fois
d
’
attribut
d
’
opération
interagir
pour
répondre
à
besoin
.
«
attribut
»
être
propriété
variable
rapporter
à
l
’
objet
.
«
méthode
»
être
action
fonction
l
’
objet
pouvoir
accomplir
pour
modifier
même
,
pour
produire
effet
externe
.
donnée
contenir
dans
objet
être
accessible
par
biais
méthode
de
l
’
objet
former
l
’
«
interface
»
de
l
’
objet
.
plupart
script
Web
rester
concevoir
écrire
en
appliquer
méthodologie
orienter
fonction
,
être
de
petit
taille
simple
.
nombre
de
projet
Web
évoluer
d
’
ensemble
de
page
hyper
lier
vers
application
complexe
requérir
méthodologie
de
développement
réfléchir
.
L
’
orientation
objet
pouvoir
aider
à
gérer
complexité
projet
logiciel
,
à
augmenter
réutilisabilité
code
,
par
conséquent
à
réduire
coût
de
maintenance
.
objet
être
collection
unique
identifiable
de
donnée
stocker
de
méthode
agir
sur
donnée
.
objet
pouvoir
être
regrouper
en
«
classe
»
.
classe
être
ensemble
d
’
objet
pouvoir
être
différent
un
autre
,
caractériser
par
point
commun
.
contenir
objet
présenter
méthode
comporter
de
même
manière
,
attribut
identique
représenter
même
chose
,
valeur
de
attribut
pouvoir
varier
d
’
objet
à
l
’
autre
sein
de
classe
.
différent
classe
devoir
pouvoir
présenter
comportement
différent
pour
même
méthode
:
c
’
être
«
polymorphisme
»
,
caractériser
comportement
objet
,
objet
même
.
en
PHP
,
fonction
membre
d
’
classe
pouvoir
être
polymorphique
.
concept
d
’
«
héritage
»
permettre
de
créer
relation
hiérarchique
entre
classe
,
moyen
de
sousclasse
.
sous-classe
hériter
attribut
méthode
de
classe
parent
.
concept
permettre
d
’
élaborer
d
’
enrichir
jeu
de
classe
exister
,
de
rendre
code
réutilisable
,
constituer
atout
indéniable
de
programmation
orienter
objet
:
méthode
pouvoir
être
implémenter
seul
fois
dans
classe
parent
lieu
de
l
’
être
de
nombreux
fois
dans
sous-classe
séparer
.
dans
cadre
d
’
développement
pour
Web
,
classe
pouvoir
être
utiliser
pour
représenter
page
Web
,
composant
d
’
interface
utilisateur
,
carte
d
’
achat
,
gestionnaire
d
’
erreur
,
catégorie
de
produit
,
client
.
en
PHP
,
avoir
tout
nouveau
model
objet
.
gestion
objet
en
PHP
avoir
être
réécrire
,
permettre
de
meilleur
performance
de
fonctionnalité
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
classe
objet
(
PHP
)
classe
classe
être
collection
de
variable
de
fonction
fonctionner
avec
variable
.
classe
former
type
de
variable
objet
.
.
création
d
’
classe
création
d
’
classe
s
’
effectuer
moyen
mot
clé
class
:
structure
de
définition
d
’
classe
nom_classe
{
}
classe
devoir
être
doter
d
’
attribut
de
méthode
.
création
d
’
attribut
:
déclarer
variable
sein
d
’
définition
de
classe
,
variable
devenir
attribut
de
classe
appeller
membre
de
classe
déclaration
attribut
fait
par
l
’
intermédiaire
mot
clé
var
:
structure
de
définition
d
’
attribut
nom_classe
{
var
$
attribut1
;
var
$
attribut2
;
}
création
de
méthode
:
déclarer
fonction
sein
de
définition
de
classe
,
devenir
méthode
de
classe
:
structure
de
définition
d
’
méthode
nom_classe
{
function
nom_fonction
(
$
parametres
)
{
corps
de
fonction
}
}
constructeur
de
classe
exister
méthode
spécial
,
constructeur
,
être
être
fonction
appeler
par
classe
créer
nouveau
instance
de
classe
.
fonction
constructeur
avoir
même
nom
classe
.
en
PHP
,
fonction
devenir
constructeur
porter
même
nom
classe
.
en
PHP
,
fonction
devenir
constructeur
porter
même
nom
classe
dans
être
définir
.
différence
être
subtil
,
crucial
.
constructeur
être
utile
pour
initialiser
donné
membre
de
l
’
instanciation
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
structurer
de
définition
d
’
constructeur
nom_classe
{
function
nom_classe
(
$
parametres
)
{
}
/
/
méthode
constructeur
corps
de
fonction
}
attention
:
pouvoir
attribuer
même
nom
à
fonction
.
.
Instanciation
L
’
instanciation
correspondre
à
création
d
’
objet
.
classe
former
type
de
variable
.
pour
créer
variable
type
désirer
,
devoir
utiliser
opérateur
new
.
devoir
spécifier
classe
l
’
objet
créer
être
l
’
instance
fournir
paramètre
requérir
par
constructeur
de
classe
.
$
objet
=
new
nom_classe
(
$
parametres
)
;
exemple
:
<
?
php
/
/
déclaration
de
classe
ma_classe
ma_classe
{
function
ma_classe
(
$
mavar
)
{
echo
`
`
constructeur
appeler
paramètre
<
b
>
$
mavar
<
/
b
>
<
br
>
'
'
;
}
}
/
/
Instanciaition
de
classe
ma_classe
$
avoir
=
new
ma_classe
(
`
`
nouveau
paramètre
'
'
)
;
?
>
création
de
objet
$
avoir
de
type
ma_classe
permettre
de
afficher
:
constructeur
appeler
paramètre
nouveau
paramètre
.
.
accès
attribut
méthode
d
’
classe
sein
d
’
classe
,
pointeur
$
this
permettre
de
faire
référence
à
attribut
:
$
this-
>
attribut
pour
appeler
méthode
falloir
spécifier
nom
,
suivre
paramètre
requis
placer
entre
parenthèse
,
préciser
l
’
objet
appartenir
:
$
objet-
>
methode
(
$
parametres
)
;
exemple
:
<
?
php
/
/
déclaration
de
classe
ma_classe
ma_classe
{
var
$
attribut
;
function
operation
(
$
mavar
)
{
$
this-
>
attribut
=
$
mavar
;
/
/
accès
à
attribut
sein
de
classe
echo
$
this-
>
attribut
.
'
'
attribut
'
'
;
}
}
$
avoir
=
new
ma_classe
(
)
;
$
a-
>
operation
(
`
`
nouveau
'
'
)
;
/
/
affiche
:
nouveau
attribut
?
>
accesseurs
accesseurs
être
fonction
dans
classe
d
’
effectuer
accès
attribut
d
’
classe
par
biais
d
’
seul
section
de
code
,
,
à
différent
niveau
code
.
avec
point
d
’
accès
unique
,
pouvoir
décider
sorte
de
modification
:
être
changement
à
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
apporter
,
suffire
de
modifier
fonction
accesseur
,
autre
section
de
code
s
’
en
trouver
affecter
.
fonction
accesseur
pouvoir
formuler
de
manière
suivant
:
<
?
php
class
accesseur
{
var
$
attribut
;
function
get_attribut
(
)
{
return
$
this-
>
attribut
;
}
function
set_attribut
(
$
newvalue
)
{
$
this-
>
attribute
=
$
newvalue
}
}
?
>
code
fournir
fonction
permettre
d
’
accéder
à
l
’
attribut
$
attribute
:
fonction
get_attribute
(
)
renvoyer
valeur
de
$
attribute
,
fonction
set_attribute
(
)
affecter
nouveau
valeur
à
$
attribute
.
.
héritage
classe
pouvoir
être
déclarer
être
sous-classe
d
’
autre
classe
à
l
’
aide
mot
clé
extends
.
exemple
:
<
?
php
class
B
extends
à
{
var
$
attributB
;
function
operationB
(
)
{
corps
de
fonction
}
}
?
>
classe
B
être
sous-classe
de
classe
à
:
hériter
attribut
méthode
de
classe
à
,
par
contre
classe
à
,
parent
de
classe
B
pouvoir
en
cas
hériter
attribut
méthode
de
B
.
exemple
:
<
?
php
parent
{
var
$
attribut1
;
function
operation1
(
)
{
$
this-
>
attribut1
;
echo
`
`
attribut
de
parent
être
<
b
>
$
this-
>
attribut1
<
/
b
>
(
grace
avoir
operation1
)
.
<
br
>
<
br
>
'
'
;
}
/
/
accesseur
de
attribut1
function
get_attribut1
(
)
{
return
$
this-
>
attribut1
;
}
function
set_attribut1
(
$
new_attribut
)
{
$
this-
>
attribut1
=
$
new_attribut
;
}
}
class
fils|fil
extends
parent
{
var
$
attribut2
;
function
operation2
(
)
{
$
this-
>
attribut2
;
echo
`
`
attribut
de
fils|fil
être
<
b
>
$
this-
>
attribut2
<
/
b
>
(
grace
à
operation2
)
.
<
br
>
<
br
>
'
'
;
}
}
/
/
Instanciation
de
classe
fils|fil
dans
objet
b
$
b
=
new
fils|fil
(
)
;
/
/
affectation
de
nouveau
valeur
grace
à
accesseur
$
b-
>
set_attribut1
(
)
;
/
/
affichage
de
valeur
de
attribut1
grace
à
accesseur
echo
`
`
attribut
de
parent
être
<
b
>
'
'
.
$
b-
>
get_attribut1
(
)
.
'
'
<
/
b
>
(
grace
à
get_attribut1
)
.
<
br
>
'
'
;
/
/
exécution
de
méthode
de
classe
fils|fil
être
hériter
de
classe
parent
/
/
affichage
de
valeur
de
attribut1
grace
à
méthode
operation1
de
parent
$
b-
>
operation1
(
)
;
/
/
affiche
:
attribut
de
parent
être
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
/
/
affectation
de
nouveau
valeur
sans
accesseur
$
b-
>
attribut2
=
;
/
/
affichage
de
valeur
de
attribut2
sans
accesseur
echo
`
`
attribut
de
parent
être
<
b
>
'
'
.
$
b-
>
attribut2
.
'
'
<
/
b
>
(
grace
avoir
attribut2
)
.
<
br
>
'
'
;
/
/
exécution
de
méthode
de
classe
fils|fil
/
/
affichage
de
valeur
de
attributé
grace
à
méthode
operation2
de
class
fils|fil
$
b-
>
operation2
(
)
;
/
/
affiche
:
attribut
de
fils|fil
être
/
/
accès
attribut
opération
être
possible
pour
objet
de
/
/
classe
fils|fil
/
/
Instanciation
de
classe
parent
dans
objet
avoir
$
avoir
=
new
parent
(
)
;
/
/
affectation
de
nouveau
valeur
grace
à
accesseur
$
a-
>
set_attribut1
(
)
;
/
/
affichage
de
valeur
de
attribut1
grace
à
accesseur
echo
`
`
attribut
de
parent
être
<
b
>
'
'
.
$
a-
>
get_attribut1
(
)
.
'
'
<
/
b
>
(
grace
avoir
get_attribut1
)
.
<
br
>
'
'
;
/
/
exécution
de
méthode
de
classe
parent
/
/
affichage
de
valeur
de
attribut1
grace
à
méthode
operation1
de
parent
$
a-
>
operation1
(
)
;
/
/
/
/
affectation
de
nouveau
valeur
sans
accesseur
$
a-
>
attribut2
=
;
/
/
affichage
de
valeur
de
attribut2
sans
accesseur
echo
`
`
attribut
de
parent
être
<
b
>
'
'
.
$
a-
>
attribut2
.
'
'
<
/
b
>
grace
avoir
attribut2
.
<
br
>
'
'
;
/
/
exécution
de
méthode
de
classe
fils|fil
operation2
être
autoriser
/
/
classe
parent
hériter
de
classe
fils|fil
/
/
affichage
de
valeur
de
attributé
grace
à
méthode
operation2
de
class
fils|fil
/
/
affiche
fatal
error
:
Call
to
undefined
function
:
operation2
(
)
in
/
/
d
:
\coursphp\exercice\
dns-remplacer
line
$
a-
>
operation2
(
)
;
/
/
affiche
:
attribut
de
fils|fil
être
?
>
L
’
opérateur
de
contexte
de
classe
(
:
:
)
opérateur
:
:
permettre
de
faire
référence
fonction
variable
de
classe
de
base
,
de
utiliser
méthode
de
classe
avoir
de
objet
créer
.
exemple
:
<
?
php
class
à
{
function
example
(
)
{
echo
'
'
être|suivre
fonction
original
à
:
:
example
(
)
.
<
br
/
>
\n
'
'
;
}
}
B
extends
à
{
function
example
(
)
{
echo
`
`
être|suivre
fonction
redéfinir
B
:
:
example
(
)
.
<
br
/
>
\n
'
'
;
à
:
:
example
(
)
;
}
}
/
/
n
'
avoir
de
objet
de
classe
à
.
/
/
affichage
être
:
/
/
être|suivre
fonction
original
à
:
:
example
(
)
.
<
br
/
>
à
:
:
example
(
)
;
/
/
création
de
objet
de
classe
B
.
$
b
=
new
B
;
/
/
affichage
être
:
/
/
être|suivre
fonction
redéfinir
B
:
:
example
(
)
.
<
br
/
>
/
/
être|suivre
fonction
original
à
:
:
example
(
)
.
<
br
/
>
$
b-
>
example
(
)
;
?
>
exemple
appeler
fonction
example
(
)
dans
classe
à
,
n
'
avoir
de
objet
de
classe
à
,
être
possible
de
écrire
$
a-
>
example
(
)
.
à
place
,
appeler
fonction
example
(
)
fonction
de
classe
,
avec
nom
de
classe
même
,
sans
objet
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
avoir
fonction
de
classe
,
de
variable
de
classe
.
faire
,
n
'
avoir
objet
moment
de
appel
de
fonction
.
,
fonction
de
classe
pouvoir
accéder
à
variable
(
pouvoir
accéder
variable
local
global
)
.
falloir
proscrire
utilisation
de
$
this
.
dans
exemple
,
classe
B
redéfinir
fonction
example
(
)
.
définition
original
dans
classe
à
être
remplacer
par
de
B
,
être
accessible
depuis
B
,
à
appeler
fonction
example
(
)
de
classe
à
avec
opérateur
:
:
.
Ecriver
à
:
:
example
(
)
pour
(
en
fait
,
falloir
écrire
parent
:
:
example
(
)
,
expliquer
dans
section
suivant
)
.
dans
contexte
,
avoir
objet
courant
,
pouvoir
avoir
de
autre
variable
objet
.
de
fait
,
être
utiliser
depuis
méthode
de
objet
,
pouvoir
utiliser
$
this
.
.
redéfinition
être
possible
,
dans
sous-classe
,
de
re-déclarer
même
attribut
de
classe
parent
en
donner
valeur
par
défaut
différent
,
même
méthode
en
donner
fonctionnalité
différent
:
c
’
être
redéfinition
.
redéfinition
d
’
attribut
de
méthode
dans
sous-classe
n
’
affecter
classe
parent
.
Lorsqu
’
redéfinition
être
fournir
,
devenir
prépondérant
remplacer
définition
d
’
origine
.
PHP
permettre
de
redéfinir
fonction
en
garder
possibilité
d
’
invoquer
version
définir
dans
parent
.
exemple
:
<
?
php
class
à
{
var
$
attribut
=
`
`
valeur
défaut
'
'
;
function
operation
(
)
{
echo
`
`
<
b
>
définition
de
classe
<
/
b
>
<
br
>
'
'
;
echo
`
`
valeur
de
\
$
attribut
être
$
this-
>
attribut
'
'
;
echo
`
`
<
br
>
<
br
>
'
'
;
}
}
B
extends
à
{
var
$
attribut
=
`
`
valeur
différent
'
'
;
function
operation
(
)
{
echo
`
`
<
b
>
nouveau
définition
<
/
b
>
<
br
>
'
'
;
echo
`
`
valeur
de
\
$
attribut
être
$
this-
>
attribut
'
'
;
echo
`
`
<
br
>
<
br
>
'
'
;
}
}
/
/
Instanciation
de
classe
à
dans
objet
avoir
$
avoir
=
new
à
(
)
;
/
*
affiche
:
définition
de
classe
valeur
de
$
attribut
être
valeur
défaut
*
/
$
a-
>
operation
(
)
;
/
/
Instanciation
de
classe
B
dans
objet
b
$
b
=
new
B
(
)
;
/
*
affiche
:
nouveau
définition
valeur
de
$
attribut
être
valeur
différent
*
/
$
b-
>
operation
(
)
;
?
>
manipulation
de
classe
d
’
objet
d
’
origine
similaire
.
exemple
:
<
?
php
vehicule
{
var
$
roue
;
var
$
passager
;
var
$
classname
=
`
`
véhicule
'
'
;
var
$
nom
=
`
`
'
'
;
function
vehicule
(
$
val1
,
$
val2
)
{
$
this-
>
roue
=
$
val1
;
$
this-
>
passager
=
$
val2
;
}
function
init_nom
(
$
nom_type
)
{
$
this-
>
nom
=
$
nom_type
;
}
function
jesuis
(
)
{
echo
`
`
être|suivre
véhicule
à
$
this-
>
roue
roue
'
'
;
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
echo
`
`
$
this-
>
passager
passager
,
`
`
;
echo
`
`
type
être
$
this-
>
classname
.
`
`
;
if
(
$
this-
>
nom
)
{
echo
`
`
appeler
$
this-
>
nom
.
`
`
;
echo
`
`
<
br
>
<
br
>
'
'
;
}
}
}
/
/
héritage
de
classe
véhiculer
class
velo
extends
vehicule
{
var
$
classname
=
`
`
vélo
'
'
;
/
/
redéfinition
de
attribut
$
classname
/
/
`
`
construction
'
'
de
classe
vélo
function
velo
(
)
{
$
this-
>
vehicule
(
,
)
;
}
}
/
/
véhiculer
motoriser
issu
de
classe
vehicule
class
mvehicule
extends
vehicule
{
var
$
classname
=
`
`
motoriser
'
'
;
/
/
redéfinition
de
attribut
$
classname
vareur
;
$
mot
function
init_moteur
(
$
cylindre
)
{
$
this-
>
moteur
=
$
cylindre
;
}
function
jesuis
(
)
{
/
/
surcharger
fonction
jesuis
(
)
de
classeehicule
v
echo
`
`
moteur
être
de
$
this-
>
moteur
cc
.
<
br
>
'
'
;
vehicule
:
:
jesuis
(
)
;
/
/
appel
à
méthode
jesuis
(
)
de
classe
vehicule
}
}
/
/
classe
voiturer
moto
hériter
de
classe
mvehicule
voiturer
extends
mvehicule
{
var
$
classname
=
`
`
voiture
'
'
;
function
oiture
(
)
$
this-
>
vehicule
(
,
)
;
}
}
class
moto
extends
mvehicule
{
var
$
classname
=
`
`
moto
'
'
;
function
moto
(
)
{
$
this-
>
vehicule
(
,
)
;
}
}
/
/
création
objet
bmx
,
cb
,
twingo
$
bmx
=
new
elo
;
$
cb
=
new
moto
;
$
twingo
=
new
voiture
;
$
bmx-
>
init_nom
(
`
`
BMX
'
'
)
;
/
/
initialisation
de
objet
$
twingo-
>
init_nom
(
`
`
TWINGO
'
'
)
;
$
twingo-
>
init_moteur
(
)
;
$
cb-
>
init_nom
(
`
`
CB
'
'
)
;
$
cb-
>
init_moteur
(
)
;
/
/
appeler
fonction
jesuis
(
)
de
objet
pour
savoir
être
$
bmx-
>
jesuis
(
)
;
$
twingo-
>
jesuis
(
)
;
$
cb-
>
jesuis
(
)
;
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
classe
objet
(
PHP
)
PHP
inclure
nouveau
modèle
objet
.
traitement
objet
en
PHP
avoir
être
réécrire
pour
arriver
à
de
meilleur
performance
de
fonctionnalité
.
dans
version
précédent
de
PHP
,
objet
être
traiter
type
primitif
(
par
exemple
entier
chaîne
de
caractère
)
.
inconvénient
de
méthode
être
,
objet
en
entier
être
copier
variable
être
assigner
passer
paramètre
à
fonction
.
dans
nouveau
approche
,
objet
être
référencer
par
pointeur
valeur
(
pouvoir
penser
à
pointeur
en
identifier
de
objet
)
.
de
développeur
PHP
rendre
compte
caprice
de
copie
dans
ancien
modèle
objet
,
par
conséquent
,
majorité
application
PHP
devoir
fonctionner
avec
de
modification
.
modification
apporter
à
PHP
zend
Engine
augmenter
capacité
performance
de
PHP
.
attention
particulier
avoir
être
apporter
à
nouveau
version
compatible
possible
avec
script
antérieur
.
migration
de
code
de
PHP
vers
PHP
devoir
être
aisé
.
plupart
script
PHP
devoir
être
prêt
à
fonctionner
sans
nécessiter
moindre
modification
.
exister
différence
devoir
tester
code
avant
de
changer
de
version
en
production
exemple
de
changement
:
•
•
•
objet
sans
propriété
être
considérer
vide
(
empty
(
)
)
.
dans
cas
,
classe
devoir
être
déclarer
avant
de
être
utiliser
.
survenir
nouveau
fonctionnalité
de
PHP
être
utiliser
.
,
comportement
être
même
.
fonction
get_class
(
)
,
get_parent_class
(
)
get_class_methods
(
)
retourner
nom
de
classe
avoir
être
déclarer
(
sensible
à
casse
)
,
pouvoir
causer
problème
dans
ancien
script
utiliser
comportement
précédent
(
nom
de
classe
être
retourner
en
minuscule
)
.
solution
possible
être
de
rechercher
fonction
dans
ancien
script
de
utiliser
fonction
strtolower
(
)
.
.
création
d
’
classe
définition
de
classe
commencer
par
mot-clé
class
,
suivre
par
nom
de
classe
,
pouvoir
être
quelconque
à
condition
être
mot
réserver
en
PHP
.
suivre
paire
de
parenthèse
contenir
définition
membre
méthode
.
pseudo-variable
$
this
être
disponible
méthode
être
appeler
depuis
contexte
objet
.
$
this
être
référence
à
objet
appeler
(
,
objet
auquelle
méthode
appartenir
,
pouvoir
être
autre
objet
méthode
être
appeler
de
manière
statique
depuis
contexte
de
autre
objet
)
.
comportement
être
illustrer
dans
exemple
suivre
:
exemple
.
variable
$
this
en
programmation
objet
structure
de
définition
d
’
classe
nom_classe
{
}
exemple
:
/
*
définition
simple
de
classe
*
/
<
?
php
class
SimpleClass
{
/
/
déclaration
de
membre
public
$
var
=
'
valeur
par
défaut
'
;
/
/
déclaration
de
méthode
public
function
displayVar
(
)
{
echo
$
this-
>
var
;
}
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
}
?
>
constructeur
destructeur
constructeur
PHP
permettre
développeur
de
déclarer
constructeur
pour
classe
.
classe
posséder
méthode
constructeur
appeler
méthode
à
création
de
nouveau
instance
de
objet
,
être
intéressant
pour
initialisation
objet
avoir
besoin
avant
de
être
utiliser
.
void
__construct
(
[
mixed
args
[
,
...
]
]
)
note
:
constructeur
parents
être
appeler
classe
enfant
définir
constructeur
.
vouloir
utiliser
constructeur
parent
,
être
nécessaire
de
faire
appel
à
parent
:
:
__construct
(
)
.
exemple
:
<
?
php
class
BaseClass
{
function
__construct
(
)
{
print
`
`
in
BaseClass
constructor\n
'
'
;
}
}
class
SubClass
extends
BaseClass
{
function
__construct
(
)
{
parent
:
:
__construct
(
)
;
print
`
`
in
SubClass
constructor\n
'
'
;
}
}
$
obj
=
new
BaseClass
(
)
;
$
obj
=
new
SubClass
(
)
;
?
>
pour
raison
de
compatibilité
ascendant
,
PHP
pouvoir
trouver
fonction
__construct
(
)
pour
classe
donner
,
chercher
fonction
constructeur
représenter
,
dans
ancien
style
(
PHP
<
)
,
par
nom
de
classe
.
,
signifier
seul
cas
pouvoir
avoir
problème
de
compatibilité
être
classe
contenir
méthode
nommer
__construct
(
)
avoir
autre
usage
.
destructeur
void
__destruct
(
void
)
PHP
introduire
concept
de
destructeur
similaire
autre
langage
orienter
objet
,
C++
.
méthode
destructeur
devoir
être
appeler
référence
à
objet
particulier
être
effacer
objet
être
détruire
.
exemple
:
<
?
php
class
MyDestructableClass
{
function
__construct
(
)
{
print
`
`
in
constructor\n
'
'
;
$
this-
>
name
=
`
`
MyDestructableClass
'
'
;
}
function
__destruct
(
)
{
print
`
`
destruction
de
`
`
.
$
this-
>
name
.
`
`
\n
'
'
;
}
}
$
obj
=
new
MyDestructableClass
(
)
;
?
>
constructeur
,
destructeur
parent
être
appeler
par
moteur
.
pour
exécuter
destructeur
parent
,
devoir
appeler
fonction
parent
:
:
__destruct
dans
corps
destructeur
.
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
.
création
de
instance
pour
créer
instance
de
objet
,
nouveau
objet
devoir
être
créer
assigner
à
variable
.
objet
devoir
être
assigner
de
création
de
nouveau
objet
à
objet
avoir
constructeur
défini
lancer
exception
en
cas
de
erreur
.
exemple
:
<
?
php
$
instance
=
new
SimpleClass
(
)
?
>
.
assignation
de
objet
de
assignation
de
instance
créer
de
objet
à
variable
,
nouveau
variable
accéder
à
même
instance
de
objet
assigner
.
comportement
être
même
passage
de
instance
à
fonction
.
nouveau
instance
de
objet
créer
pouvoir
être
effectuer
par
clonage
.
exemple
:
<
?
php
$
assigned
=
$
instance
;
$
reference
=
&
$
instance
;
$
instance-
>
var
=
'
$
assigned
avoir
valeur
'
;
$
instance
=
null
;
/
/
$
instance
$
reference
devenir
null
var_dump
(
$
instance
)
;
var_dump
(
$
reference
)
;
var_dump
(
$
assigned
)
;
/
*
exemple
aller
afficher
:
NULL
NULL
object
(
SimpleClass
)
#
(
)
{
[
`
`
var
'
'
]
=
>
string
(
)
`
`
$
assigned
avoir
valeur
'
'
}
*
/
?
>
.
héritage
classe
pouvoir
hériter
méthode
membre
de
autre
classe
en
utiliser
mot
clé
extends
dans
déclaration
.
être
possible
de
étendre
de
multiple
classe
,
classe
pouvoir
hériter
de
seul
classe
de
base
.
méthode
membre
hériter
pouvoir
être
surcharger
,
à
classe
parent
avoir
définir
méthode
final
.
pour
surcharger
,
suffire
de
redéclarer
méthode
avec
même
nom
défini
dans
classe
parent
.
être
possible
de
accéder
à
méthode
membre
surcharger
avec
opérateur
parent
:
:
exemple
:
<
?
php
class
ExtendClass
extends
SimpleClass
{
/
/
redéfinition
de
méthode
parent
function
displayVar
(
)
{
echo
`
`
classe
étendue\n
'
'
;
parent
:
:
displayVar
(
)
;
}
}
$
extended
=
new
ExtendClass
(
)
;
$
extended-
>
displayVar
(
)
;
?
>
exemple
aller
afficher
:
classer
étendre
valeur
par
défaut
.
visibilité
visibilité
de
propriété
de
méthode
pouvoir
être
définir
en
préfixer
déclaration
avec
mot-clé
:
public
,
protected
private
.
élément
déclarer
public
(
public
)
pouvoir
être
utiliser
par
importer
partie
programme
.
accès
élément
protéger
(
protected
)
être
limiter
classe
hériter
(
à
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
classe
avoir
définir
élément
)
.
accès
élément
priver
(
private
)
être
réserver
à
classe
avoir
définir
.
visibilité
membre
classe
membre
devoir
être
définir
publique
,
protégé
privé
.
exemple
:
/
*
Déckaration
membre
*
/
<
?
php
/
*
*
*
définition
de
MyClass
*
/
MyClass
{
public
$
public
=
'
public
'
;
protected
$
protected
=
'
Protected
'
;
private
$
private
=
'
Private
'
;
function
{
echo
echo
echo
}
printHello
(
)
$
this-
>
private
;
$
this-
>
protected
;
$
this-
>
private
;
}
$
obj
=
new
MyClass
(
)
;
echo
$
obj-
>
public
;
/
/
fonctionner
echo
$
obj-
>
protected
;
/
/
erreur
fatal
echo
$
obj-
>
private
;
/
/
erreur
fatal
$
obj-
>
printHello
(
)
;
/
/
affiche
public
,
Protected
Private
/
*
*
*
définition
de
MyClass2
*
/
MyClass2
extends
MyClass
{
/
/
pouvoir
redéclarer
élément
public
protégé
,
privé
protected
$
protected
=
'
Protected
'
;
function
printHello
(
)
{
echo
$
this-
>
public
;
echo
$
this-
>
protected
;
echo
$
this-
>
private
;
}
}
$
obj2
=
new
MyClass2
(
)
;
echo
$
obj-
>
public
;
/
/
fonctionner
echo
$
obj2-
>
private
;
/
/
indéfini
echo
$
obj2-
>
protected
;
/
/
erreur
fatal
$
obj2-
>
printHello
(
)
;
/
/
affiche
public
,
Protected2
Private
?
>
note
:
méthode
de
déclaration
de
variable
en
PHP
avec
mot
clé
var
être
valide
pour
objet
en
PHP
.
pour
raison
de
compatibilité
,
variable
déclarer
avoir
visibilité
publique
erreur
de
niveau
E_STRICT
être
générer
.
visibilité
méthode
méthode
classe
devoir
être
définir
en
publique
,
privé
protégé
.
méthode
sans
déclaration
être
définir
être
publique
.
exemple
:
/
*
Déckaration
d
’
méthode
*
/
<
?
php
/
*
*
*
définition
de
MyClass
*
/
MyClass
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
{
/
/
contructeurs
devoir
être
public
public
function
__construct
(
)
{
}
/
/
déclaration
de
méthode
publique
public
function
MyPublic
(
)
{
}
/
/
déclaration
de
méthode
protéger
protected
function
MyProtected
(
)
{
}
/
/
déclaration
de
méthode
priver
private
function
MyPrivate
(
)
{
}
/
/
être
publique
function
Foo
(
)
{
$
this-
>
MyPublic
(
)
;
$
this-
>
MyProtected
(
)
;
$
this-
>
MyPrivate
(
)
;
}
}
$
myclass
=
new
MyClass
;
$
myclass-
>
MyPublic
(
)
;
/
/
fonctionner
$
myclass-
>
MyProtected
(
)
;
/
/
erreur
fatal
$
myclass-
>
MyPrivate
(
)
;
/
/
erreur
fatal
$
myclass-
>
Foo
(
)
;
/
/
public
,
Protected
Private
fonctionner
/
*
*
*
définition
de
MyClass2
*
/
MyClass2
extends
MyClass
{
/
/
être
publique
function
Foo2
(
)
{
$
this-
>
MyPublic
(
)
;
$
this-
>
MyProtected
(
)
;
$
this-
>
MyPrivate
(
)
;
/
/
erreur
fatal
}
}
$
myclass2
=
new
MyClass2
;
$
myclass2-
>
MyPublic
(
)
;
/
/
fonctionner
$
myclass2-
>
Foo2
(
)
;
/
/
public
Protected
fonctionner
,
Private
?
>
opérateur
de
résolution
de
portée
(
:
:
)
opérateur
de
résolution
de
portée
,
en
terme
simple
,
symbole
`
`
double
deux
point
'
'
(
:
:
)
,
fournir
moyen
de
accéder
membre
statique
constant
élément
redéfinir
par
classe
.
référencer
élément
en
dehors
de
définition
de
classe
,
utiliser
nom
de
classe
.
exemple
:
/
*
en
dehors
de
définition
de
classe
/
*
<
?
php
class
MyClass
{
const
CONST_VALUE
=
'
valeur
constant
'
;
}
echo
MyClass
:
:
CONST_VALUE
;
?
>
deux
mots-clé
spécial
,
self
parent
,
être
utiliser
pour
accéder
membre
méthode
depuis
définition
de
classe
.
exemple
:
/
*
depuis
définition
de
classe
*
/
<
?
php
class
OtherClass
extends
MyClass
{
public
static
$
my_static
=
'
variable
statique
'
;
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
public
static
function
doubleColon
(
)
{
echo
parent
:
:
CONST_VALUE
.
`
`
\n
'
'
;
echo
self
:
:
$
my_static
.
`
`
\n
'
'
;
}
}
OtherClass
:
:
doubleColon
(
)
;
?
>
classe
étendre
redéfinir
méthode
de
classe
parent
,
PHP
appelera
méthode
de
origine
.
appartenir
à
méthode
dériver
de
appeler
méthode
de
origine
en
cas
de
besoin
.
être
valable
pour
définition
constructeur
destructeur
,
surcharge
méthode
magique
.
exemple
:
/
*
appel
de
méthode
parent
*
/
<
?
php
class
MyClass
{
protected
function
myFunc
(
)
{
echo
`
`
MyClass
:
:
myFunc
(
)
\n
'
'
;
}
}
class
OtherClass
extends
MyClass
{
/
/
dépassement
de
définition
parent
public
function
myFunc
(
)
{
/
/
appel
de
fonction
parent
parent
:
:
myFunc
(
)
;
echo
`
`
OtherClass
:
:
myFunc
(
)
\n
'
'
;
}
}
$
=
new
OtherClass
(
)
;
$
class-
>
myFunc
(
)
;
?
>
.
abstraction
de
objet
PHP
introduire
classe
méthode
abstrait
.
être
autoriser
de
créer
instance
de
classe
définir
abstraire
.
classe
contenir
méthode
abstrait
devoir
être
abstraire
.
pour
définir
méthode
abstrait
,
falloir
déclarer
signature
de
méthode
fournir
implémentation
.
classe
implémente
méthode
abstrait
devoir
être
définir
avec
même
visibillité
faible
.
méthode
abstrait
être
définir
en
protéger
,
fonction
implémentant
devoir
être
définir
en
protéger
publique
.
exemple
:
/
*
exemple
de
classe
abstraire
*
/
<
?
php
abstract
AbstractClass
{
/
/
force
classe
étendre
à
définir
méthode
abstract
protected
function
getValue
(
)
;
/
/
méthode
commun
public
function
printOut
(
)
{
print
$
this-
>
getValue
(
)
;
}
}
ConcreteClass1
extends
AbstractClass
{
protected
function
getValue
(
)
{
return
`
`
ConcreteClass1
'
'
;
}
}
ConcreteClass2
extends
AbstractClass
{
protected
function
getValue
(
)
{
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
cours|cour
d
’
initiation
PHP
return
`
`
ConcreteClass2
'
'
;
}
}
$
class1
=
new
ConcreteClass1
;
$
class1-
>
printOut
(
)
;
$
class2
=
new
ConcreteClass2
;
$
class2-
>
printOut
(
)
;
?
>
code
ancien
avoir
classe
fonction
nommer
abstract
devoir
fonctionner
sans
modification
.
.
interface
interface
objet
permettre
de
créer
code
spécifier
méthode
variable
classe
pouvoir
implémenter
,
sans
avoir
à
définir
méthode
être
gérer
.
interface
être
définir
en
utiliser
mot
clé
interface
,
de
même
façon
classe
standard
sans
contenu
de
méthode
.
classe
implémentir
interface
devoir
faire
en
utiliser
mot
clé
implements
devoir
contenir
définition
de
méthode
lister
dans
interface
.
classe
implémentir
de
interface
devoir
faire
en
lister
interface
,
séparer
de
virgule
.
méthode
déclarer
dans
interface
devoir
être
publique
.
classe
définir
interface
implémentir
méthode
dans
interface
,
erreur
fatal
indiquer
méthode
n
'
avoir
être
implémenter
.
exemple
:
/
*
exemple
de
interface
*
/
<
?
php
/
/
Declaration
de
interface
'
iTemplate
'
interface
iTemplate
{
public
function
setVariable
(
$
name
,
$
var
)
;
public
function
getHtml
(
$
template
)
;
}
/
/
Implémentation
de
interface
/
/
aller
fonctionner
Templat
implements
iTemplat
{
private
$
var
=
array
(
)
;
public
function
setVariable
(
$
name
,
$
var
)
{
$
this-
>
var
[
$
name
]
=
$
var
;
}
public
function
getHtml
(
$
template
)
{
foreach
(
$
this-
>
var
avoir
$
name
=
>
$
value
)
{
$
template
=
str_replace
(
'
{
'
.
$
name
.
'
}
'
,
$
value
,
$
template
)
;
}
return
$
template
;
}
}
/
/
fonctionner
/
/
fatal
error
:
BadTemplat
contain
abstract
methods
/
/
and
must
therefore
be
declared
abstract
(
iTemplate
:
:
getHtml
)
BadTemplat
implements
iTemplat
{
private
$
var
=
array
(
)
;
public
function
setVariable
(
$
name
,
$
var
)
{
$
this-
>
var
[
$
name
]
=
$
var
;
}
}
?
>
Daniel
HADJADJ
Daniel
©
dahadjadj
@
dns-remplacer
-
-
page
