PHP
:
INTRO
–
HTML
–
WAMP
–
premier
programme
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
introduction-a-php
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
http
:
/
/
dns-remplacer
/
php
/
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
INTRO-HTML-WAMP-Premiers
programme
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
introduction
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
objectif
cours|cour
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
site
dynamique
site
statique
–
rôle
de
l
’
utilisateur
de
l
’
administrateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
historique
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
architecture
client
serveur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
principe
PHP
:
écrire
code
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
rappel
HTML
-
CSS
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
HTML
de
base
:
h1-h6
,
p
,
br
,
img
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
squelette
html
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
CSS
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
charger
exemple
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
page
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
page
de
base
avec
lien
vers
formulaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
page
de
base
avec
lien
vers
formulaire
dans
tableau
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
outil
de
développement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
outil
pour
fonctionnement
d
’
site
WEB
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
outil
de
développement
PHP-MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
de
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
premier
usage
de
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
démarrer
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
installer
l
’
icône
WAMP
dans
barre
d
’
icône
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
passer
Wamp
en
français
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
consulter
serveur
dans
gestionnaire
tâche
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
tester
WAMP
:
afficher
page
WampServer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
aller
dans
dossier
projet
:
C
:
\wamp64\www
,
créer
dossier
«
home
»
...
...
...
...
...
...
...
...
...
...
.
:
afficher
contenu
de
«
home
»
dans
page
WampServer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
accéder
dossier
«
home
»
dans
page
WampServer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
premier
programme
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
premier
programme
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
fichier
dns-remplacé
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
deuxième
programme
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
consulter
contenu
dossier
d
’
site
en
ligne
!
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
WAMP
-
version
détailler
(
pouvoir
passer
!
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
reprise
détailler
paragraphe
précédent
:
premier
usage
-
résumer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
tester
WAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
travailler
avec
fichier
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
Paramétrage
divers
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
PHPMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
Paramétrage
installation
:
display_errors
display_startup_errors
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
MAMP
–
version
détailler
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
lancer
MAMP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
:
problème
d
’
installation
–
problème
de
port
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
accès
projet
web
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
:
PHPMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
:
fichier
dns-remplacé
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
trois
exemple
de
l
’
instruction
echo
(
print
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
charger
installer
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
code
HTML
minimum
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
code
HTML
minimum
avec
echo
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
page
HTML
standard
avec
echo
php
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
echo
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
principe
général
code
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
affichage
erreur
-
rappel
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
principal
message
d
’
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
TP
:
gestion
erreur
-
variable
display_errors
display_startup_errors
à
...
...
...
...
...
...
...
...
...
...
...
.
inclusion
de
fichier
PHP
–
factorisation
code
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
rappel
sur
balise
structurant
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
problème
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
solution
PHP
:
l
’
inclusion
de
fichier
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
solution
HTML
:
l
’
inclusion
de
fichier
en
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
:
Includes
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
documentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
d
’
usage
:
dns-remplacer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Edition
:
février
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
INTRO-HTML-WAMP-PREMIERS
programme
.
introduction
PHP
exemple
exercice
exemple
cours|cour
être
dans
fichier
zip
fournir
avec
l
’
article
cours|cour
:
dns-remplacé
.
exemple
être
présenter
dans
chapitre
en
vert
.
charger
fichier
mettez-le
dans
dossier
Partie_2
répertoire
web
«
www
»
serveur
WAMP
.
exercice
à
faire
être
présenter
dans
chapitre
en
jaune
.
objectif
cours|cour
page
web
:
HTML
...
•
formulaire
de
contact
•
espace
membre
avec
login
pseudo
,
forum
,
actualité
,
newsletter
,
etc
.
•
Back
office
•
faire
circuler
information
de
page
en
page
•
faire
attention
faille
de
sécurité
,
•
enregistrer
infos
dans
BD
,
•
structurer
site
avec
POO
l
’
architecturer
MVC
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
site
dynamique
site
statique
–
rôle
de
l
’
utilisateur
de
l
’
administrateur
site
statique
(
web
)
L
’
utilisateur
consulter
contenu
site
sans
fournir
d
’
information
(
message
,
login
,
etc
.
)
.
L
’
administrateur
ajouter
de
nouveau
élément
dans
site
(
de
nouveau
information
,
de
nouveau
article
,
de
nouveau
page
)
revenir
dans
code
,
en
programmer
.
site
statique
être
faire
en
HTML
,
CSS
JavaScript
:
être
langage
client
universel
.
site
dynamique
(
web
)
L
’
utilisateur
fournir
information
site
:
message
,
login
,
etc
.
partie
site
être
publique
(
même
s
’
falloir
mot
de
passe
pour
connecter
)
:
c
’
être
front-office
.
L
’
administrateur
gérer
contenu
site
(
ajout
,
modification
,
suppression
d
’
information
,
d
’
article
,
de
message
,
d
’
utilisateur
,
modération
de
message
,
etc
.
)
par
partie
de
site
dédier
à
l
’
administration
:
c
’
être
back-office
.
site
dynamique
être
faire
:
•
langage
client
:
HTML
,
CSS
JavaScript
•
langage
serveur
:
PHP
java
C
#
Ruby
python
JavaScript
(
Node
)
,
etc
.
•
langage
serveur
utiliser
en
général
base
de
donnée
:
MySQL
,
MariaDB
,
oracle
,
SQL-Server
,
PostgreSQL
,
SQLite
,
etc
.
,
associer
BD
à
langage
serveur
:
•
PHP-MySQL
,
•
Java-Oracle
,
•
C
#
-SQL-Server
.
utiliser
framework
faciliter
accélérer
travail
:
•
Symfony
,
Laravel
,
zend
(
PHP
)
,
•
JEE
(
java
)
,
•
.Net
(
c
#
)
,
•
RubyOnRails
(
Ruby
)
,
•
Django
(
python
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
historique
PHP
PHP-MySQL
:
début
WEB
grand
public
.
PHP
:
langage
simple
,
«
sale
»
(
versus
java
,
langage
propre
)
.
Aujourd
’
hui
:
PHP
objet
,
langage
propre
.
PHP
avoir
intégrer
aspect
sécurité
.
S
’
utiliser
avec
frameworks
(
Laravel
,
Symfony
,
zend
,
etc
.
)
.
https
:
/
/
dns-remplacer
/
wiki
/
PHP
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
architecture
client
serveur
langage
côté
client
HTML
,
CSS
,
JavaScript
application
côté
client
navigateur
:
Firefox
,
Internet
explorer
,
safari
,
Opera
,
etc
.
langage
côté
serveur
SQL
,
PHP
,
C
#
,
java
,
python
,
Ruby
,
etc
.
,
application
côté
serveur
serveur
HTTP
(
serveur
web
)
:
apache
(
PHP
)
,
Tomcat
(
java
,
JEE
)
,
IIS
(
C
#
,
.Net
)
serveur
SGBD
:
MySQL
,
oracle
,
SQL-Server
,
PostgreSQL
,
MariaDB
,
SQLite
remarque
:
serveur
c
’
être
machine
faire
fonctionner
programme
qu
’
appeler
serveur
(
machine
être
serveur
qu
’
contenir
programme
serveur
)
.
programme
serveur
être
programme
tourner
24H
sur
avoir
caractéristique
de
avoir
d
’
interface
utilisateur
.
seul
d
’
autre
programme
pouvoir
communiquer
avec
.
programme
serveur
s
’
appeler
serveur
deamon
.
serveur
mysql
sur
PC
s
’
appeler
mysqld
,
«
d
»
pour
deamon
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
affichage
d
’
page
HTML
dans
navigateur
:
cas
possible
:
•
local
,
•
langage
serveur
,
•
ajax
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
accéder
à
page
Web
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
principe
PHP
:
écrire
code
HTML
Ecrire
code
HTML
en
PHP
PHP
servir
à
écrire
code
HTML
dynamique
,
aller
par
exemple
chercher
information
dans
BD
.
traduction
PHP
en
HTML
navigateur
comprendre
langage
HTML
.
serveur
web
permettre
de
traduire
code
PHP
en
page
HTML
.
principe
de
traduction
)
client
demander
fichier
HTML
PHP
:
page
web
,
HTML
PHP
.
)
serveur
web
récupérer
page
HTML
PHP
traduire
en
HTML
(
n
’
avoir
à
faire
s
’
n
’
avoir
HTML
.
)
traduction
pouvoir
consister
à
inclure
d
’
autre
fichier
fichier
PHP
à
récupérer
information
dans
base
de
donnée
dans
fichier
.
)
fin
de
traduction
produire
page
HTML
être
renvoyer
client
(
navigateur
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
de
traduction
trouver
instruction
PHP
,
serveur
apache
transformer
instruction
en
code
HTML
exemple
de
traduction
<
p
>
<
?
php
echo
`
`
être
visiteur
n
°
'
'
.
$
numVisiteur
;
?
>
<
/
p
>
balise
<
p
>
être
laisser
.
balise
<
?
php
être
traduire
.
résultat
de
traduction
donner
,
variable
$
numVisiteur
valoir
:
<
p
>
être
visiteur
n
°
<
/
p
>
pouvoir
avoir
instruction
php
interroger
base
de
donnée
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
de
traduction
<
p
>
<
?
php
$
reponse
=
$
bdd-
>
query
(
'
select
prenom
FROM
utilisateur
WHERE
id
=
'
)
;
echo
`
`
bonjour
`
`
.
$
reponse
;
?
>
<
/
p
>
donner
,
select
revoir
Bertrand
:
<
p
>
bonjour
Bertrand
<
/
p
>
pour
fonctionner
,
exemple
nécessiter
qu
’
connecter
d
’
abord
à
BD
.
page
HTML
pouvoir
être
envoyer
navigateur
client
pouvoir
interpréter
afficher
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
rappel
HTML
-
CSS
HTML
de
base
:
h1-h6
,
p
,
br
,
img
<
h@card@
>
titre
<
/
h@card@
>
h2-h6
<
p
>
,
<
br
>
,
<
img
src
=
«
dns-remplacé
»
>
<
avoir
href
=
«
URL
»
...
dans
balise
,
pouvoir
mettre
couple
:
attribut
=
«
valeur
»
squelette
html
<
!
DOCTYPE
html
>
<
html
lang
=
'
'
fr
'
'
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
link
rel
=
'
'
stylesheet
'
'
href
=
'
'
dns-remplacer
'
'
/
>
<
title
>
page
<
/
title
>
<
/
head
>
<
body
>
contenir
HTML
<
/
body
>
<
/
html
>
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
CSS
de
base
principe
selecteur
{
p1
:
v1
;
p2
:
v2
;
...
;
pn
:
vn
}
selecteur
définir
balise
concerner
.
couple
propriété
:
valeur
.
exemple
de
sélecteur
*
(
balise
)
,
p
,
h1
,
h2
,
etc
,
#
idCeci
:
balise
avec
id
=
«
idCeci
»
.classeCela
:
balise
avec
=
«
classeCela
»
p.classeCela
:
balise
p
avec
=
«
classeCela
»
[
att
]
:
balise
avoir
attribut
nommer
«
att
»
[
att
=
petit
]
:
balise
avec
attribut
att
=
«
petit
»
pseudo
classer
pseudo-classe
être
mot-clé
pouvoir
être
ajouter
à
sélecteur
de
indiquer
état
spécifique
dans
élément
devoir
être
pour
être
cibler
par
déclaration
.
placer
après
selecteur
simple
être
introduire
par
«
:
»
elt
:
first-child
:
premier
enfant
d
’
balise
avoir
:
link
:
avoir
visiter
avoir
:
visited
:
avoir
visiter
elt
:
hover
:
élément
survoler
elt
:
focus
:
élément
avoir
focus
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
charger
exemple
HTML
http
:
/
/
dns-remplacer
/
IMG
/
zip
/
dns-remplacer
exemple
:
page
de
base
coder
page
avec
titre
,
paragraphe
de
texte
,
un
sous
titre
,
texte
,
image
.
changer
typo
texte
=
>
font-family
:
Comic
;
font-style
:
italic
;
color
:
blue
;
encadrer
titre
=
>
border
:
solid
black
1px
;
centrer
l
’
image
=
>
text-align
:
center
;
pour
mettre
faux
texte
:
chercher
«
Lorem
ipsum
dolor
»
sur
google
.
site
proposer
faux
texte
.
pour
couleur
nommer
,
voir
par
exemple
:
http
:
/
/
dns-remplacer
/
dns-remplacer
.
exemple
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
page
de
base
avec
lien
vers
formulaire
rappel
théorique
sur
formulaire
balise
d
’
formulaire
<
form
action
=
«
dns-remplacer
»
method
=
GET
>
:
pour
regrouper
input
.
L
’
action
définir
page
appeler
valider
de
formulaire
.
méthode
être
notion
PHP
.
<
fieldset
>
:
pour
mettre
cadre
input
.
<
legend
>
:
pour
mettre
texte
sur
cadre
<
input
type
=
«
text
»
name
=
«
nom
»
>
type
=
text
pour
avoir
champ
de
saisie
.
«
name
»
permettre
d
’
accéder
en
PHP
à
«
value
»
saisir
.
<
input
type
=
'
'
submit
'
'
name
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
type
:
submit
pour
avoir
bouton
de
validation
.
value
c
’
être
texte
afficher
.
cliquer
sur
bouton
,
page
faire
appel
à
l
’
action
de
balise
<
form
>
<
input
type
=
'
'
reset
'
'
name
=
'
'
reset
'
'
value
=
'
'
annuler
'
'
>
type
:
reset
pour
annuler
saisie
en
cours|cour
.
<
input
type
=
'
'
hidden
'
'
name
=
'
'
saisir
'
'
value
=
'
'
saisir
'
'
>
type
:
hydden
faire
circuler
name
value
sans
concerner
l
’
utilisateur
(
c
’
être
cacher
)
.
C
’
être
utile
en
programmation
PHP
.
<
select
>
<
option
>
pour
créer
menu
dérouler
.
<
textarea
>
pour
avoir
zone
de
saisie
.
autre
type
de
balise
<
input
>
préciser
e
type
de
balise
input
,
obtenir
comportement
différent
(
par
exemple
,
avec
type
,
saisir
numéro
de
téléphone
,
champ
de
saisie
passer
en
rouge
)
.
type
=
password
:
caractère
cacher
,
email
,
url
,
,
number
(
+min
,
max
,
step
)
,
range
(
+min
,
max
,
step
avec
curseur
)
,
color
(
firefox
proposer
palette
colorer
)
,
date
,
search
,
chechobox
(
+checked
)
:
bouton
à
cocher
,
radio
:
radio
bouton
(
seul
parmi
)
.
autre
attribut
de
balise
<
input
>
attribut
maxlength
(
input
)
:
taille
maximum
de
saisie
.
attribut
autofocus
(
input
)
:
dans
input
placer
curseur
dans
champ
.
attribut
required
(
input
)
:
obliger
saisie
avant
d
’
envoyer
formulaire
(
dans
safari
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
code
proposer
page
de
l
’
exercice
avec
lien
vers
formulaire
.
formulaire
renvoyer
vers
page
de
l
’
exercice
valider
.
avoir
cas
possible
pour
l
’
âge
:
<
,
,
>
)
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
page
de
base
avec
lien
vers
formulaire
dans
tableau
rappel
théorique
sur
tableau
balise
de
structure
:
<
table
>
<
tr
>
de
texte
.
•
<
table
>
:
tableau
•
<
tr
>
:
ligne
balise
de
donnée
:
<
th
>
<
td
>
dans
ligne
,
mettre
cellule
.
•
<
th
>
:
pour
nom
de
colonne
(
1er|1ère
ligne
)
.
•
<
td
>
:
pour
autre
cellule
.
encadrement
minimum
:
<
tabler
border
>
•
<
tabler
border
>
encadrer
suivre
:
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
pouvoir
mettre
formulaire
dans
tableau
:
avoir
même
résultat
,
sauf
zone
de
saisie
être
aligner
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
outil
de
développement
outil
pour
fonctionnement
d
’
site
WEB
présentation
pour
faire
fonctionner
site
WEB
,
falloir
outil
,
côté
client
côté
serveur
.
coter
client
:
navigateur
navigateur
interagir
avec
l
’
utilisateur
.
comprendre
HTML
,
CSS
JavaScript
,
comprendre
PHP
.
côté
serveur
:
serveur
web
serveur
de
BD
serveur
web
(
serveur
http
)
interagir
avec
navigateur
serveur
de
BD
.
serveur
web
traduire
code
PHP
en
HTML
.
comprendre
PHP
.
serveur
de
BD
interagir
avec
serveur
web
disque
dur
pour
sauvegarder
récupérer
donnée
.
comprendre
SQL
pour
différence
entre
serveur
web
serveur
d
’
application
:
https
:
/
/
dns-remplacer
/
article
/
single
/
1156-difference-serveur-web
.
pdf
correspondant
lien
marcher
:
http
:
/
/
dns-remplacer
/
IMG
/
pdf
/
dns-remplacer
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
outil
de
développement
PHP-MySQL
présentation
pour
développer
site
WEB
,
falloir
outil
permettre
d
’
écrire
code
de
faire
de
machine
serveur
pour
navigateur
.
coter
client
–
partie
statique
•
HTML
,
CSS
:
Editeur
de
texte
(
VSCode
,
SublimeText
,
bracket
,
etc
.
)
•
affichage
de
page
:
navigateur
•
hébergement
site
:
logiciel
FTP
côté
serveur
-
partie
dynamique
•
PHP
:
Editeur
de
texte
•
SQL
:
Editeur
de
texte
•
serveur
HTTP
:
apache
•
serveur
SGBD
:
MySQL
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
solution
exister
solution
en
un
fournir
serveur
HTTP
SGBD
qu
’
interface
utilisateur
pour
utiliser
serveur
pour
tester
code
HTML
PHP
sur
machine
de
développement
jouer
rôle
serveur
même
en
client
.
par
exemple
:
WAMP
(
Windows
,
apache
,
MySQL
,
PHP
)
,
MAMP
sur
mac
,
LAMPP
sous
Linux
(
P
en
pour
Perl
)
,
XAMPP
.
EasyPHP
,
etc
.
solution
n
’
être
parfaire
supérieur
à
autre
.
C
’
être
question
d
’
habitude
.
choisir
WAMP
.
pouvoir
utiliser
XAMPP
.
MAMP
être
sur
mac
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
installation
de
WAMP
http
:
/
/
dns-remplacer
/
dns-remplacer
?
id_article
=
aller
dans
l
’
option
:
WAMP
aller
télécharger
fichier
d
’
installation
:
wampserver3.1.4_
dns-remplacé
(
selon
version
)
.
pendant
l
’
installation
:
choisir
navigateur
par
défaut
(
chrome
Firefox
de
préférence
,
Internet
explorer
)
,
choisir
éditeur
par
défaut
(
VSCode
de
préférence
sublime
Text
)
.
autoriser
déblocage
pare-feu
.
détail
sur
l
’
installation
de
WAMP
:
dans
l
’
article
:
http
:
/
/
dns-remplacer
/
dns-remplacer
?
id_article
=
,
poly
:
http
:
/
/
dns-remplacer
/
IMG
/
pdf
/
01_Installation_de_
dns-remplacer
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
premier
usage
de
WAMP
:
démarrer
WAMP
falloir
autoriser
pare-feu
serveur
pouvoir
démarrer
.
double
clic
sur
raccourci
sur
bureau
:
Ca
marche
!
obtenir
icône
vert
.
avoir
icône
rouge
,
c
’
être
qu
’
serveur
n
’
être
démarrer
.
avoir
icône
orange
,
c
’
être
qu
’
seul
serveur
être
démarrer
.
pouvoir
démarrer
,
arrêter
,
redémarrer
service
(
service
=
serveur
)
.
:
installer
l
’
icône
WAMP
dans
barre
d
’
icône
déplacer
l
’
icône
pour
qu
’
être
dans
barre
icône
:
:
passer
Wamp
en
français
icône
Wamp
–
bouton
gauche
-
choix
langage
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
consulter
serveur
dans
gestionnaire
tâche
•
pouvoir
regarder
processus
tourner
sur
Windows
:
CTRL-ALT-SUP
CTRL-SHIFTESC
.
•
falloir
afficher
détail
.
•
apache
HTTP
Server
:
c
’
être
serveur
web
.
pouvoir
en
avoir
deux
,
c
’
être
même
!
•
mysqld
:
c
’
être
serveur
de
BD
MySQL
.
pouvoir
en
avoir
deux
,
c
’
être
même
!
pouvoir
avoir
:
un
de
pour
MariaDB
!
•
dans
cas
,
arrêter
serveur
,
devoir
en
rester
.
rester
falloir
arrêter
!
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
tester
WAMP
:
afficher
page
WampServer
dans
navigateur
:
localhost
icône
Wamp
–
bouton
droit
-
choix
localhost
(
icône
Wamp
:
icône
vert
dans
dans
zone
de
notification
:
en
à
droit|droite
)
.
page
WampServer
apparaître
.
:
aller
dans
dossier
projet
:
C
:
\wamp64\www
,
créer
dossier
«
home
»
icône
Wamp
–
bouton
droit
-
choix
répertoire
www
mettre
dossier
:
«
home
»
dans
répertoire
www
:
afficher
contenu
de
«
home
»
dans
page
WampServer
icône
Wamp
–
bouton
droit
-
choix
localhost
dossier
home
apparaître
dans
zone
«
projet
»
:
n
’
être
cliquable
.
:
accéder
dossier
«
home
»
dans
page
WampServer
icône
Wamp
–
bouton
droit
-
choix
localhost
dans
l
’
url
,
trouver
:
localhost
ajouter
/
home
:
l
’
url
être
:
localhost
/
home
arriver
sur
page
web
répertoire
home
:
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
premier
programme
en
PHP
:
premier
programme
php
coder
dans
dossier
«
home
»
,
ajouter
fichier
test_1.php
avec
code
suivant
<
?
php
echo
«
<
h@card@
>
hello
World
<
/
h1
>
»
;
?
>
test
fichier
apparaître
dans
page
WampServer
,
dans
page
de
l
’
url
http
:
/
/
localhost
/
home
/
cliquer
,
apparaître
page
HTML
correspondre
code
.
pouvoir
visualiser
code
HTML
avec
MAJ-CTRL-i
(
pour
Firefox
)
.
voir
code
HTML
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
fichier
dns-remplacer
répertoire
contenir
fichier
dns-remplacé
dns-remplacé
,
être
exécuter
rentrer
dans
dossier
.
dupliquer
test_1.php
en
nommer
dns-remplacer
ajouter
:
echo
«
<
h@card@
>
hello
World
avec
index
<
/
h1
>
»
;
vérifier
propriété
.
,
renommer
dns-remplacer
en
dns-remplacé
.
vérifier
qu
’
n
’
avoir
d
’
exécution
automatique
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
deuxième
programme
php
coder
dans
dossier
«
home
»
,
ajouter
fichier
test_2.php
avec
code
suivant
<
?
php
/
/
en
utiliser
url
:
/
/
localhost
/
home
/
dns-remplacer
?
name
=
Bertrand
$
name
=
$
_GET
[
'
name
'
]
;
/
/
header
préciser
type
de
page
header
(
'
Content-Type
:
text
/
html
'
)
;
echo
'
<
html
>
'
;
echo
'
<
body
>
bonjour
'
.
$
name
.
'
<
/
body
>
'
;
echo
'
<
/
html
>
'
?
>
test
fichier
apparaître
dans
page
WampServer
,
dans
page
de
l
’
url
http
:
/
/
localhost
/
home
/
cliquer
,
apparaître
page
HTML
correspondre
code
:
avoir
bug
!
falloir
ajouter
dans
l
’
url
:
?
name
=
Bertrand
marche
:
http
:
/
/
localhost
/
home
/
test_2.php
?
name
=
Bertrand
pouvoir
visualiser
code
HTML
avec
MAJ-CTRL-i
(
pour
Firefox
)
.
voir
code
HTML
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
consulter
contenu
dossier
d
’
site
en
ligne
!
exemple
:
http
:
/
/
dns-remplacer
/
spip
/
IMG
/
jpg
/
sur
site
,
constater
qu
’
pouvoir
accéder
contenu
dossier
!
pouvoir
remonter
dossier
:
http
:
/
/
dns-remplacer
/
spip
/
IMG
Jusqu
’
à
racine
site
:
http
:
/
/
dns-remplacer
racine
contenir
fichier
dns-remplacer
:
c
’
être
page
d
’
accueil
site
s
’
affiche
.
pour
éviter
problème
,
pouvoir
par
exemple
mettre
fichier
dns-remplacer
dans
répertoire
renvoyer
par
exemple
sur
page
d
’
accueil
(
fonction
header
en
PHP
)
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
WAMP
-
version
détailler
(
pouvoir
passer
!
)
:
reprise
détailler
paragraphe
précédent
:
premier
usage
-
résumer
chapitre
détailler
qu
’
avoir
faire
paragraphe
précédent
:
tester
WAMP
démarrer
WAMP
falloir
autoriser
pare-feu
serveur
pouvoir
démarrer
.
double
clic
sur
raccourci
sur
bureau
:
Ca
marche
!
obtenir
icône
vert
.
passer
Wamp
en
français
icône
Wamp
–
bouton
gauche
-
choix
langage
tester
WAMP
:
afficher
page
WampServer
dans
navigateur
:
localhost
icône
Wamp
–
bouton
droit
-
choix
localhost
(
icône
Wamp
:
icône
vert
dans
dans
zone
de
notification
:
en
à
droit|droite
)
.
page
WampServer
apparaître
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
zone
«
projet
»
être
vide
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
travailler
avec
fichier
PHP
aller
dans
dossier
projet
:
C
:
\wamp64\www
aller
dans
C
:
\wamp64\www
.
C
’
être
dans
dossier
qu
’
mettre
dossier
de
travail
.
créer
dossier
«
mon-site
»
,
par
exemple
.
zone
«
projet
»
contenir
nom
dossier
qu
’
venir
de
créer
.
accéder
projet
:
localhost
/
mon-site
en
entrer
localhost
/
mon-site
dans
navigateur
,
accéder
projet
:
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
accès
direct
projet
cliquer
sur
nom
projet
,
obtenir
erreur
n
’
accéder
projet
.
solution
:
pour
remédier
à
:
sur
l
’
icône
vert
Wamp
:
bouton
droit
/
paramètre
Wamp
/
ajouter
localhost
dans
l
’
URL
.
Ca
ajouter
warning
dans
zone
«
projet
»
.
pouvoir
accéder
projet
en
cliquer
sur
nom
.
solution
:
dans
dossier
projet
(
C
:
/
wampp64
/
www
)
ouvrir|ouvrer
fichier
dns-remplacé
.
vers
ligne
,
après
ligne
:
$
suppress_localhost
=
(
$
wampConf
[
'
urlAddLocalhost
'
]
=
=
'
'
?
true
:
false
)
;
ajouter
:
$
suppress_localhost
=
false
;
solution
donner
même
résultat
précédent
,
en
compliquer
!
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
solution
:
«
à
main
»
dans
navigateur
:
localhost
/
mon-site
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
création
d
’
premier
fichier
PHP
ouvrir
dossier
«
mon-site
»
avec
VSCode
SublimeText
:
sur
nom
dossier
,
ouvrir
fichier
:
new
file
.
save
:
l
’
appeler
dns-remplacer
,
trouver
dans
répertoire
mon-site
.
dans
fichier
dns-remplacé
:
exécuter
fichier
PHP
suffire
de
cliquer
sur
dossier
«
mon-site
»
.
par
défaut
,
fichier
«
dns-remplacer
»
être
envoyer
serveur
apache
retourne
navigateur
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
:
Paramétrage
divers
bouton
droit
sur
l
’
icône
vert
Wamp
langue
bouton
droit
/
language
/
français
paramètre
de
Wamp
«
ajouter
localhost
dans
l
’
URL
»
:
pour
l
’
accès
direct
dossier
de
travail
,
par
exemple
.
outil
pour
tester
port
,
par
exemple
clic
sur
l
’
icône
vert
Wamp
•
démarrer
arrêter
serveur
(
service
)
:
apache
mysql
•
accès
direct
à
page
localhost
•
accéder
à
phpmyadmin
,
l
’
utilitaire
pour
gérer
BD
.
•
Paramétrer
apache
,
MySQL
,
PHP
(
AMP
)
.
:
PHPMyAdmin
accéder
à
PHPMyAdmin
:
http
:
/
/
localhost
/
phpmyadmin
/
icône
Wamp
/
PHPMyAdmin
:
Paramétrage
installation
:
display_errors
display_startup_errors
fichier
dns-remplacé
exister
fichier
dns-remplacé
paramètre
l
’
usage
de
WAMP
pour
php
.
trouver
dans
clic
/
PHP
sous
MAMP
,
falloir
trouver
bon
!
aller
dans
phpInfo
,
trouver
configuration
filer
:
/
application
/
MAMP
/
bin
/
php
/
php7.0.0
/
conf
C
’
être
fichier
qu
’
falloir
modifier
.
variable
display_errors
=
display_startup_errors
=
variable
display_errors
display_startup_errors
permettre
d
’
afficher
message
d
’
erreur
explicite
.
devoir
être
à
message
d
’
erreur
s
’
afficher
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
falloir
redémarrer
serveur
apache
prise
en
compte
être
faire
.
pouvoir
voir
dans
phpInfo
de
MAMP
.
alternative
pour
site
en
production
attention
,
message
d
’
erreur
devoir
être
voir
par
utilisateur
.
pour
site
en
production
,
falloir
passer
par
fichier
de
log
.
regarder
dans
fichier
de
conf
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
d
’
information
.
MAMP
–
version
détailler
:
principe
suivre
même
logique
pour
tester
WAMP
.
falloir
suivre
chapitre
précédent
pour
faire
partie
pratique
revenir
dans
chapitre
pour
voir
spécificité
de
MAMP
.
:
lancer
MAMP
•
falloir
autoriser
parefeu
serveur
pouvoir
démarrer
.
•
pour
démarrer
MAMP
:
application
/
MAMP
/
dns-remplacer
programme
proposer
d
’
utiliser
MAMP
pro
:
éviter
!
•
préférence
:
pour
gérer
port
serveur
démarrage
automatique
serveur
•
démarrer
/
arrêter
serveur
:
problème
d
’
installation
–
problème
de
port
onglet
préférence
,
menu
port
:
apache
être
sur
par
défaut
:
accès
projet
web
localhost
:
dans
navigateur
,
taper
:
«
localhost
:
»
.
http
:
/
/
localhost
:
/
page
index
of
/
apparaître
.
être
vide
,
contenir
projet
.
page
correspondre
répertoire
:
/
application
/
mamp
/
htdocs
répertoire
être
paramétrable
dans
préférence
/
serveur
web
ouvrir
page
web
start
/
site
web
accéder
à
page
localhost
:
ouvrir
page
web
start
/
site
web
:
PHPMyAdmin
accéder
à
PHPMyAdmin
:
http
:
/
/
localhost
:
/
phpMyAdmin
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
ouvrir
page
web
start
/
Tools
/
PHPMyAdmin
:
fichier
dns-remplacé
exister
fichier
dns-remplacé
paramètre
l
’
usage
de
WAMP
pour
php
.
trouver
dans
clic
/
PHP
sous
MAMP
,
falloir
trouver
bon
!
aller
dans
phpInfo
,
trouver
configuration
filer
:
/
application
/
MAMP
/
bin
/
php
/
php7.0.0
/
conf
C
’
être
fichier
qu
’
falloir
modifier
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
trois
exemple
de
l
’
instruction
echo
(
print
)
charger
installer
exemple
commencer
par
charger
dossier
zipper
:
dns-remplacé
installez-le
dans
répertoire
serveur
WAMP
(
www
)
.
exemple
:
code
HTML
minimum
objectif
simple
affichage
de
texte
sans
php
.
comparaison
entre
fichier
.html
.php
code
dans
php
fichier
Exemple_01_
dns-remplacé
bonjour
sans
balise
dans
fichier
.php
<
h@card@
>
bonjour
avec
balise
dans
fichier
.php
<
/
h@card@
>
résultat
:
bonjour
sans
balise
dans
fichier
.php
bonjour
avec
balise
dans
fichier
.php
fichier
Exemple_01_
dns-remplacé
bonjour
sans
balise
dans
fichier
.php
<
h@card@
>
bonjour
avec
balise
dans
fichier
.php
<
/
h@card@
>
résultat
:
bonjour
sans
balise
dans
fichier
.php
bonjour
avec
balise
dans
fichier
.php
explication
résultat
être
même
dans
deux
cas
.
fichier
.html
être
fournir
navigateur
.
texte
s
’
affiche
.
fichier
.php
être
traiter
par
serveur
apache
.
contenir
de
balise
php
:
serveur
web
n
’
effectuer
transformation
.
résultat
être
transmettre
navigateur
.
texte
s
’
affiche
.
éviter
d
’
utiliser
fichier
html
dans
programme
côté
serveur
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
code
HTML
minimum
avec
echo
php
objectif
simple
affichage
de
texte
avec
php
comparaison
entre
fichier
.html
.php
fichier
php
:
<
?
php
echo
`
`
bonjour
avec
balise
php
'
'
;
?
>
<
?
php
echo
`
`
<
h@card@
>
bonjour
avec
balise
HTML
php
<
/
h3
>
'
'
;
?
>
résultat
dans
navigateur
:
bonjour
sans
balise
php
bonjour
avec
balise
HTML
php
page
HTML
générer
:
bonjour
sans
balise
php
<
h@card@
>
bonjour
avec
balise
HTML
php
<
/
h@card@
>
explication
•
fichier
.php
être
traiter
par
serveur
apache
.
•
ligne
de
PHP
trouver
entre
:
<
?
php
?
>
•
Echo
être
instruction
.
instruction
être
terminer
par
un
;
•
serveur
apache
traiter
instruction
situer
entre
<
?
php
?
>
.
echo
être
instruction
permettre
d
’
écrire
trouver
entre
guillemet
.
•
résultat
être
fichier
HTML
être
transmettre
navigateur
.
texte
s
’
affiche
.
remarquer
faire
echo
en
PHP
d
’
afficher
texte
en
HTML
,
servir
à
rien
.
PHP
être
langage
de
programmation
permettre
de
récupérer
information
formulaire
HTML
,
de
faire
calcul
complexe
,
d
’
enregistrer
information
dans
BD
dans
fichier
,
de
récupérer
information
dans
BD
dans
fichier
,
de
remplir
tableau
avec
donnée
de
BD
,
etc
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
page
HTML
standard
avec
echo
php
objectif
pager
HTML
classique
avec
simple
affichage
de
texte
php
.
comparaison
entre
fichier
.html
.php
fichier
php
:
<
!
DOCTYPE
html
>
<
html
lang
=
'
'
fr
'
'
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
exemple
:
echo
<
/
title
>
<
/
head
>
<
body
>
<
?
php
echo
`
`
<
h@card@
>
affichage
de
texte
HTML
PHP
<
/
h1
>
'
'
?
>
<
?
php
echo
`
`
<
p
>
PHP
:
'
'
;
echo
`
`
<
span
style
=
\
'
'
color
:
red
;
\
'
'
>
ligner
écrire
avec
\
'
'
echo\
'
'
<
strong
>
PHP
<
/
strong
>
<
/
span
>
<
/
p
>
'
'
;
?
>
<
/
body
>
<
/
html
>
résultat
dans
navigateur
:
affichage
de
texte
HTML
PHP
PHP
:
ligner
écrire
avec
un
`
`
echo
'
'
PHP
.
page
HTML
générer
:
<
!
DOCTYPE
html
>
<
html
lang
=
'
'
fr
'
'
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
exemple
:
echo
<
/
title
>
<
/
head
>
<
body
>
<
h@card@
>
affichage
de
texte
HTML
PHP
<
/
h@card@
>
<
p
>
PHP
:
<
span
style
=
'
'
color
:
red
;
'
'
>
ligner
écrire
avec
un
`
`
echo
'
'
<
strong
>
PHP
<
/
strong
>
<
/
span
>
<
/
p
>
<
/
body
>
<
/
html
>
explication
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
h1
être
mettre
dans
echo
dans
<
?
php
séparer
(
servir
à
rien
,
c
’
être
pour
test
!
)
.
<
?
php
suivant
fait
:
echo
ouvrir|ouvrer
<
p
>
autre
ouvrir|ouvrer
<
span
>
avec
style
strong
fermer
<
/
span
>
<
/
p
>
ouvrir
dans
précédent
echo
.
pour
mettre
guillemet
dans
texte
d
’
echo
(
pour
afficher
guillemet
dans
code
HTML
)
,
mettre
\
'
'
exercice
echo
coder
page
précédent
avec
écho
.
faut-il
en
mettre
minimum
?
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
principe
général
code
PHP
règle
•
code
PHP
commencer
par
<
?
php
(
sans
espace
)
finir
par
?
>
.
aller
parler
de
«
balise
PHP
»
.
•
pouvoir
placer
balise
PHP
n
’
importer
dans
code
HTML
(
dans
code
CSS
!
)
•
dans
balise
PHP
pouvoir
mettre
d
’
instruction
de
ligne
PHP
qu
’
vouloir
.
•
devoir
mettre
un
;
à
fin
de
instruction
PHP
.
•
pouvoir
mettre
commentaire
entre
/
*
*
/
dans
code
PHP
.
commentaire
pouvoir
s
’
étaler
sur
ligne
.
commentaire
disparaître
dans
code
HTML
.
•
pouvoir
mettre
commentaire
de
fin
de
ligne
/
/
erreur
courant
•
parse
error
:
oublier
;
à
fin
d
’
instruction
(
;
être
facultatif
sur
dernier
instruction
•
fichier
.htlm
à
place
d
’
fichier
.php
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
gestion
erreur
affichage
erreur
-
rappel
variable
display_errors
=
display_startup_errors
=
variable
display_errors
display_startup_errors
permettre
d
’
afficher
message
d
’
erreur
explicite
.
par
défaut
,
erreur
s
’
afficher
sur
PC
.
pour
voir
variable
,
ouvrir|ouvrer
fichier
dns-remplacé
:
WAMP
/
PHP
/
dns-remplacer
chercher
variable
display_errors
display_startup_errors
trouver
ligne
:
(
sans
;
début
,
c
’
être
commentaire
)
display_startup_errors
=
display_errors
=
falloir
redémarrer
serveur
apache
prise
en
compte
être
faire
.
erreur
s
’
afficher
pouvoir
voir
variable
dans
phpInfo
de
Mamp
.
alternative
pour
site
en
production
attention
,
message
d
’
erreur
devoir
être
voir
par
utilisateur
.
pour
site
en
production
,
falloir
passer
par
fichier
de
log
.
regarder
dans
fichier
de
conf
d
’
information
.
principal
message
d
’
erreur
parse
error
Est
indiquer
fichier
,
ligne
,
cause
.
L
’
erreur
pouvoir
être
sur
ligne
sur
ligne
précédent
.
pouvoir
correspondre
à
:
•
oubli
de
;
•
apostrophe
guillemet
fermer
•
concaténation
à
problème
Undefined
function
fonction
n
’
être
reconnaître
s
’
en
sert
:
falloir
include
.
Wrong
parameter
count
fonction
n
’
avoir
bon
nombre
de
paramètre
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
erreur
de
BD
erreur
SQL
être
explicite
.
falloir
vérifier
code
SQL
fonctionner
.
headers
already
sentir
by
...
avoir
code
HTML
avant
header
session
maximum
execution
time
exceeded
boucle
sans
fin
TP
:
gestion
erreur
-
variable
display_errors
display_startup_errors
à
charger
zip
«
dns-remplacé
»
essayer
programme
TP_gestion_
dns-remplacer
corriger
erreur
.
affichage
erreur
sur
mac
par
défaut
,
erreur
s
’
afficher
sur
mac
.
falloir
modifier
variable
display_errors
display_startup_errors
dans
fichier
dns-remplacer
pour
:
démarrer
MAMP
:
ouvrir
page
web
start
/
phpinfo
chercher
dns-remplacer
trouver
pour
configuration
filer
(
dns-remplacer
)
Path
valeur
:
/
application
/
MAMP
/
bin
/
php
/
php7.0.0
/
conf
aller
dans
répertoire
ouvrir|ouvrer
fichier
dns-remplacé
passer
deux
variable
à
:
display_startup_errors
=
display_errors
=
relancer
serveur
:
MAMP
/
arrêter
serveur
–
MAMP
/
démarrer
serveur
affichage
erreur
sur
PC
par
défaut
,
erreur
s
’
afficher
sur
PC
.
pour
voir
variable
,
ouvrir|ouvrer
fichier
dns-remplacé
:
WAMP
/
PHP
/
dns-remplacer
chercher
variable
display_errors
display_startup_errors
trouver
ligne
:
(
sans
;
début
,
c
’
être
commentaire
)
display_startup_errors
=
display_errors
=
erreur
s
’
afficher
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
inclusion
de
fichier
PHP
–
factorisation
code
HTML
rappel
sur
balise
structurant
HTML
HTML
proposer
balise
de
structuration
page
:
•
header
,
nav
,
footer
baliser
unique
dans
page
correspondre
à
élément
qu
’
retrouver
sur
page
site
•
section
,
article
,
aside
balise
multiple
dans
page
différent
selon
page
•
div
balise
de
structuration
personnel
.
problème
header
,
nav
footer
aller
en
général
retrouver
sur
page
.
éviter
de
répéter
même
code
sur
page
de
devoir
faire
mise
à
jour
sur
page
?
solution
PHP
:
l
’
inclusion
de
fichier
en
PHP
code
de
balise
header
pouvoir
être
mettre
dans
fichier
dns-remplacer
,
l
’
instruction
«
include
»
permettre
de
faire
appel
à
fichier
de
l
’
inclure
dans
fichier
appelant
.
include
(
«
dns-remplacé
»
)
avec
l
’
instruction
suivant
:
<
?
php
include
(
«
dns-remplacé
»
)
;
?
>
code
de
page
être
limiter
à
qu
’
contenir
de
spécifique
.
modifier
header
,
modifier
pour
page
.
pouvoir
faire
même
chose
avec
footer
nav
.
nav
être
dans
header
,
pouvoir
mettre
l
’
inclusion
dans
fichier
dns-remplacé
syntaxe
include
être
fonction
avec
parenthèse
à
fournir
nom
fichier
qu
’
vouloir
charger
,
entre
guillemet
,
à
différence
de
echo
prendre
de
parenthèse
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
exemple
:
body
avec
include
header
footer
<
body
>
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
?
>
<
section
>
<
/
section
>
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
?
>
<
/
body
>
header
inclure
nav
<
header
>
<
h@card@
>
super
site
<
/
h1
>
<
?
php
include
(
`
`
dns-remplacer
'
'
)
;
?
>
<
/
header
>
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
solution
HTML
:
l
’
inclusion
de
fichier
en
HTML
L
’
ancien
solution
:
inclusion
de
fichier
en
HTML
:
balise
frame
(
obsolète
)
site
n
’
utiliser
de
langage
serveur
utiliser
balise
<
frame
>
pour
factoriser
page
.
balise
n
’
être
supporter
par
HTML
.
être
remplacer
par
balise
<
iframe
>
http
:
/
/
dns-remplacer
/
tags
/
tag_
dns-remplacer
balise
frame
fermer
.
s
’
utiliser
à
l
’
intérieur
d
’
balise
<
frameset
>
balise
<
iframe
>
:
inclusion
de
fichier
en
HTML
(
déprécier
)
balise
servir
à
inclure
morceau
qu
’
autre
site
permettre
de
partager
.
à
adresse
,
site
fournir
iframe
dans
bouton
exporter
:
https
:
/
/
dns-remplacer
/
emettre
/
les-series-musicales-dete
/
les-series-musicales-detelundi-24-juillet-2017
usage
être
déprécier
.
<
!
DOCTYPE
html
>
<
html
>
<
body
>
<
iframe
src
=
'
'
https
:
/
/
dns-remplacer
/
player
/
exportreecouter
?
content
=
9c19db61-0761-4b50-b4ae-907f0dbf3259
'
'
width
=
'
'
'
'
frameborder
=
'
'
'
'
scrolling
=
'
'
no
'
'
height
=
'
'
'
'
>
<
p
>
Your
browser
does
not
support
iframes
.
<
/
p
>
<
/
iframe
>
<
/
body
>
<
/
html
>
Widget
widgets
tendre
à
remplacer
iframe
.
être
de
simple
div
à
copier
dans
site
.
widget
de
météo
:
http
:
/
/
dns-remplacer
/
Widgets-Meteo
/
/
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
TP
:
Includes
charger
zip
<
dns-remplacé
»
contenir
dossier
avec
page
HTML
.
)
réécrire
en
sortir
header
footer
dans
fichier
séparer
utiliser
include
.
tester
résultat
.
)
,
mettre
fichier
header
footer
dans
dossier
«
include
»
fichier
css
dans
in
dossier
«
css
»
.
but
être
de
n
’
avoir
fichier
dns-remplacer
à
racine
.
)
ajouter
page
contenir
l
’
en-tête
footer
section
contenir
lien
permettre
de
revenir
à
l
’
index
de
page
principal
(
dns-remplacer
)
.
dans
dns-remplacé
,
un
menu
permettre
d
’
accéder
à
nouveau
page
qu
’
appeler
dns-remplacer
.
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
.
documentation
principe
référence
exister
site
de
référence
pour
avoir
de
documentation
:
dns-remplacer
:
http
:
/
/
dns-remplacer
/
dns-remplacer
w3school
:
http
:
/
/
dns-remplacer
/
php
/
cours|cour
:
coder
academy
:
https
:
/
/
dns-remplacer
/
learn
/
php
OpenClassRoom
:
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-etmysql
https
:
/
/
dns-remplacer
/
paths
/
developpeur-php-symfony
sûr
:
google
!
bon
usage
falloir
essayer
de
passer
par
documentation
«
officiel
»
pour
comprendre
possible
sans
contenter
d
’
exemple
marche
.
falloir
apprendre
à
servir
de
documentation
exemple
d
’
usage
:
dns-remplacer
page
d
’
accueil
en
français
http
:
/
/
dns-remplacer
/
manual
/
fr
/
:
trouver
sommaire
liste
fonction
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
noter
:
extension
sur
mathématique
:
contenir
math
:
fonction
mathématique
traitement
de
texte
:
contenir
chaîne
de
caractère
:
fonction
de
traitement
de
chaine
.
accès
direct
à
fonction
:
dns-remplacer
/
nomFonction
dns-remplacer
/
date
:
j
’
arriver
sur
fonction
date
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
remonter
menu
de
droit|droite
,
revenir
niveau
de
liste
fonction
.
liste
thématique
de
fonction
•
audio
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
•
identification
•
ligner
de
commande
•
archivage
compression
•
carte
de
crédit
•
cryptographier
•
base
de
donnée
•
date
heure
•
système
de
fichier
•
langage
humain
encodage
de
caractère
•
génération
traitement
image
•
emails
•
mathématique
•
donnée
non-textuel
•
contrôle
processus
•
moteur
de
recherche
•
serveur
•
session
•
traitement
texte
•
variable
type
•
service
Web
•
Windows
•
XML
PHP
–
Intro
–
HTML
–
WAMP
–
premier
programme
–
page
/
base
langage
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
http
:
/
/
dns-remplacer
/
php
/
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
base
langage
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
fichier
de
test
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
définition
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
type
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
vérifier
type
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
signification
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
pouvoir
faire
avec
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
pouvoir
utiliser
variable
dans
calcul
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
constante
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
test
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
if
,
else
,
elseif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
de
comparaison
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
opérateur
logique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
switch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
opérateur
de
comparaison
ternaire
:
?
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
HTML
dans
PHP
séparer
PHP
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
HTML
dans
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
HTML
séparer
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
HTML
dans
PHP
avec
balise
heredoc
:
<
<
<
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
boucle
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
While
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
for
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exercice
:
premier
entier
,
carré
racine
dans
tableau
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
débranchement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
break
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
continu
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
goto
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
bibliothèque
de
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
de
calcul
mathématique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
de
traitement
de
chaine
de
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
de
traitement
de
date
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
envoi
de
mail
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
générer
PDF
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
générer
image
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
traiter
expression
régulier
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
tableau
numéroter
tableau
associatif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
tableau
numéroter
–
exemple
,
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
exercice
–
tableau
de
prénom
liste
à
puce
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
tableau
associatif
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
–
tableau-users-Etape-0
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
–
tableau
périodique
élément
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
tableau
numéroter
de
tableau
associatif
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
de
manipulation
de
tableau
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
–
tableau-users-Etape-1
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Ecrire
propre
fonction
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
d
’
affichage
,
renvoyer
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
renvoyer
résultat
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fonction
avec
paramètre
en
sortie
:
être
modifier
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
visibilité
variable
–
exemple
–
global
,
GLOBALS
,
static
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exercice
–
tableau-users-Etape-2
:
codage
avec
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
filtrer
tableau
:
fonction
array_filter
–
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exercice
–
tableau-users-Etape
:
tri
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Edition
:
mars
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
base
langage
PHP
installation
fichier
de
test
exemple
cours|cour
être
dans
fichier
zip
fournir
avec
l
’
article
cours|cour
:
dns-remplacé
.
exemple
être
présenter
dans
chapitre
en
vert
.
charger
fichier
mettez-le
dans
dossier
Partie_2
répertoire
web
«
www
»
serveur
WAMP
.
exercice
à
faire
être
présenter
dans
chapitre
en
jaune
.
remarque
:
fichier
d
’
exemple
commencer
par
trois
ligne
:
echo
'
<
h@card@
>
code
PHP
<
/
h1
>
'
;
highlight_file
(
'
dns-remplacer
'
)
;
echo
'
<
h@card@
>
RESULTATS
<
/
h1
>
'
;
code
afficher
deux
balise
h1
avec
code
PHP
RESULTATS
fonction
«
highlight_file
»
permettre
d
’
afficher
contenu
fichier
proposer
.
tester
code
,
commencer
par
affiche
code
.
Ca
permettre
de
voir
code
en
même
temps
résultat
.
pour
généraliser
code
,
écrire
:
highlight_file
(
basename
(
__FILE__
)
)
;
basename
(
__FILE__
)
permettre
de
récupérer
nom
fichier
en
cours|cour
de
traitement
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
variable
définition
variable
être
moyen
pour
stocker
en
mémoire
information
temps
de
génération
de
page
PHP
variable
avoir
nom
,
valeur
,
type
signification
.
en
PHP
,
nom
d
’
variable
commencer
par
un
$
par
exemple
:
$
username
être
variable
de
type
string
signification
être
de
contenir
information
être
nom
de
l
’
utilisateur
.
type
présentation
variable
pouvoir
enregistrer
information
de
différent
type
:
entier
,
décimal
(
nombre
à
virgule
)
,
texte
booléen
(
vrai
faux
)
être
principal
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
type
entier
:
int
,
,
,
,
etc
entier
négatif
:
,
,
etc
.
type
décimal
:
float
être
nombre
à
virgule
:
écrire
virgule
avec
point
.
qu
’
n
’
avoir
besoin
d
’
précision
extrême
,
convenir
à
calcul
.
type
texte
(
chaine
de
caractère
)
:
string
chaine
de
caractère
être
écrire
entre
guillemet
apostrophe
.
parler
de
quotter
simple
quotter
simple
guillemet
pour
apostrophe
,
de
double
quotter
pour
guillemet
.
type
booléen
:
bool
pouvoir
prendre
valeur
true
false
.
valeur
NULL
pouvoir
donner
valeur
NULL
à
variable
,
être
type
.
vouloir
dire
variable
contenir
.
type
tableau
,
objet
,
ressourcer
exister
type
pour
tableau
(
suite
cours|cour
)
,
pour
objet
(
cours|cour
POO
)
pour
ressource
(
ressource
être
référence
à
ressource
externe
:
voir
doc
PHP
)
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
vérifier
type
utiliser
variable
,
n
’
avoir
besoin
de
préciser
type
.
selon
valeur
qu
’
donner
à
variable
,
type
être
définir
.
fonction
permettre
de
savoir
de
type
être
variable
.
par
exemple
:
is_bool
(
$
maVariable
)
retourne
vrai
(
)
$
maVariable
être
booléen
,
faux
(
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
is_bool
,
is_float
,
is_numeric
,
etc
.
signification
variable
servir
à
chose
,
par
exemple
à
enregistrer
nom
de
l
’
utilisateur
.
C
’
être
signification
.
donner
nom
en
rapport
avec
signification
.
n
’
être
obligé
,
c
’
être
préférable
.
pouvoir
faire
avec
variable
pouvoir
donner
valeur
à
variable
$
username
=
`
`
Barack
'
'
;
parler
d
’
affectation
d
’
assignation
pouvoir
afficher
contenu
d
’
variable
echo
$
username
;
de
guillemet
afficher
texte
.
pouvoir
concaténer
variable
à
chaine
de
caractère
avec
texte
entre
apostrophe
entre
guillemet
,
pouvoir
concaténer
variable
avec
l
’
opérateur
«
.
»
Echo
'
bonjour
'
.
$
username
.
'
.
aller
?
'
valoir
utiliser
apostrophe
«
‘
»
dans
PHP
guillemet
«
“
»
dans
HTML
.
pouvoir
afficher
contenu
d
’
variable
dans
chaine
de
caractère
avec
texte
entre
guillemet
,
pouvoir
mettre
variable
dans
texte
entre
guillemet
.
Echo
`
`
bonjour
$
username
.
aller
?
'
'
éviter
usage
.
utiliser
précédent
,
avec
concaténation
concaténation
:
opérateur
«
.
»
«
.
»
permettre
de
concaténer
deux
texte
,
variable
texte
,
deux
variable
.
opérateur
arithmétique
utiliser
opérateur
classique
:
+
,
-
,
/
,
*
,
%
opérateur
d
’
incrémentation
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
$
i++
équivaloir
à
$
i
=
$
i@card@
attention
,
c
’
être
post-incrémentation
:
faire
«
echo
$
i++
;
c
’
être
$
i
avant
l
’
incrémentation
être
afficher
.
exemple
:
pouvoir
utiliser
variable
dans
calcul
<
?
php
$
prix_unitaire
=
;
$
quantite
=
;
$
produire
=
'
'
clé
USB
go
'
'
;
$
prix_total
=
$
quantite
*
$
prix_unitaire
;
echo
'
bonjour
<
br
>
'
;
echo
$
quantite
.
'
'
.
$
produit
.
'
:
'
.
$
prix_total
;
?
>
pouvoir
utiliser
symbole
classique
de
calcul
:
+
,
-
,
x
,
/
,
%
(
modulo
)
,
fonction
classique
(
sin
(
)
,
cos
(
)
,
sqrt
(
)
,
pow
(
)
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
à
noter
à
gauche
signe
=
,
modifier
valeur
de
variable
.
qu
’
avoir
dans
variable
avant
modification
être
perdre
.
avoir
droit
signe
=
,
utiliser
valeur
de
variable
pour
faire
calcul
.
à
noter
qu
’
mettre
de
de
variable
dans
l
’
echo
,
début
de
l
’
echo
,
début
de
variable
,
à
fin
de
variable
à
fin
de
l
’
echo
.
constant
constant
être
sorte
de
variable
pouvoir
être
modifier
.
nom
être
donner
en
majuscule
par
convention
.
valeur
être
donner
par
fonction
«
define
»
.
accéder
sans
utiliser
«
$
»
.
<
?
php
define
(
`
`
constant
'
'
,
`
`
bonjour
monde
.
`
`
)
;
echo
constant
;
/
/
affiche
`
`
bonjour
monde
.
'
'
define
(
'
ANIMALS
'
,
array
(
'
chien
'
,
'
chat
'
,
'
oiseau
'
)
)
;
echo
ANIMALS
[
]
;
/
/
affiche
`
`
chat
'
'
?
>
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
test
:
exemple
if
,
else
,
elseif
if
(
$
maVariable
=
=
)
{
instruction
;
}
elseif
(
$
maVariable
>
{
instruction
;
}
else
{
/
*
$
maVariable
<
*
/
instruction
;
}
if
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
else
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
elseif
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
opérateur
de
comparaison
=
=
,
!
=
,
<
,
<
=
,
>
,
>
=
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
#
dns-remplacer
=
=
=
:
vrai
valeur
être
identique
de
même
type
,
!
=
=
opérateur
logique
binaire
:
AND
,
&
&
,
or
,
|
|
(
$
avoir
>
and
$
avoir
<
)
unaire
:
!
(
!
is_int
(
$
avoir
)
)
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
switch
switch
(
$
maVariable
)
{
case
(
)
:
instruction
;
break
;
case
(
)
:
instruction
;
break
;
default
:
instruction
;
}
switch
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
opérateur
de
comparaison
ternaire
:
?
:
$
monResultat
=
(
$
maVarialble
=
=
)
?
true
:
false
;
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
#
dns-remplacer
rnary
HTML
dans
PHP
séparer
PHP
:
exemple
HTML
dans
PHP
<
?
php
if
(
$
variable
<
)
{
echo
<
strong
>
variable
'
.
$
variable
.
'
<
/
strong
>
:
c\'est
négatif
!
'
;
}
?
>
pouvoir
mettre
variable
dans
l
’
echo
.
falloir
utiliser
\
’
.
HTML
séparer
PHP
<
?
php
if
(
$
variable
<
)
{
?
>
<
strong
>
variable
<
/
strong
>
être
négatif
!
<
?
php
}
?
>
solution
séparer
code
HTML
code
PHP
.
avoir
de
code
HTML
,
sans
variable
,
c
’
être
pratique
.
éviter
\
’
devoir
ajouter
variable
,
c
’
être
inadapté
HTML
dans
PHP
avec
balise
heredoc
:
<
<
<
L
’
opérateur
<
<
<
,
qu
’
pouvoir
appeler
balise
heredoc
,
permettre
d
’
ouvrir
deux
balise
_BALISE
.
texte
contenir
dans
balise
être
chaîne
de
caractère
.
apostrophe
guillemet
pouvoir
être
traiter
,
sans
\
’
pouvoir
mettre
variable
$
variable
balise
fermant
_BALISE
devoir
être
coller
à
marge
gauche
être
seul
avec
;
if
(
$
variable
<
)
{
echo
<
<
<
_BALISE
<
strong
>
variable
$
variable
<
/
strong
>
:
être
négatif
!
<
br
>
_BALISE
;
pouvoir
utiliser
variable
éviter
\
’
C
’
être
utiliser
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
boucle
:
exemple
While
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
présentation
while
(
$
cpt
<
)
{
instruction
;
}
maVariable
<
,
répéter
instruction
.
falloir
sûr
maVariable
modifier
dans
instruction
pur
qu
’
pouvoir
sortir
de
boucle
.
boucler
fois
pour
boucler
fois
pouvoir
écrire
$
cpt
=
while
(
$
cpt
<
=
)
{
instruction
;
$
cpt
++
;
}
++
permettre
d
’
incrémenter
$
cpt
.
$
cpt
++
;
être
équivalent
à
$
cpt
=
$
cpt
;
for
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
boucle
for
être
l
’
équivaloir
de
boucle
while
pour
boucler
fois
(
de
fois
qu
’
vouloir
)
:
for
(
$
cpt
=
;
$
cpt
<
;
$
cpt++
)
{
instruction
;
}
avoir
trois
partie
dans
for
:
•
L
’
initialisation
de
maVariable
être
dans
for
,
en
premier
.
•
condition
de
sortie
être
milieu
.
•
L
’
incrémentation
de
maVariable
être
en
troisième
position
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
exercice
:
premier
entier
,
carré
racine
dans
tableau
HTML
Ecrire
script
afficher
premier
entier
,
carré
racine
carrer
dans
tableau
.
chercher
fonction
raciner
carrer
.
résultat
attendre
:
etc
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
débranchement
présentation
instruction
permettre
de
quitter
fonctionnement
standard
boucle
:
break
faire
quitter
boucle
continu
permettre
de
passer
suivant
.
break
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
while
(
$
maVariable
<
)
{
if
(
$
casParticulierQuiFaitSortir
=
=
true
)
{
qu
’
avoir
à
faire
break
;
/
/
}
cas
général
}
continuer
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
while
(
$
maVariable
<
)
{
if
(
$
casParticulierQuiFaitPasserAuSuivant
=
=
true
)
{
qu
’
avoir
à
faire
continu
;
/
/
(
passer
suivant
)
}
cas
général
}
goto
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
goto
permettre
d
’
aller
de
n
’
importer
vers
n
’
importer
!
C
’
être
à
éviter
!
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
bibliothèque
de
fonction
présentation
exister
millier
de
fonction
qu
’
pouvoir
utiliser
en
PHP
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
fonction
de
calcul
mathématique
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
sqrt
:
raciner
carrer
,
pow
:
puissance
,
round
:
arrondir
,
rand
:
aléatoire
,
min
,
max
,
cos
,
sin
,
etc
.
fonction
de
traitement
de
chaine
de
caractère
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
length
,
substr
,
strpos
,
str_replace
:
longueur
,
extraction
,
position
,
remplacement
.
trim
,
ltrim
:
pour
supprimer
espace
début
à
fin
d
’
chaîne
.
chr
,
ord
:
passer
d
’
caractère
à
nombre
printf
,
fprintf
:
print
formater
(
f
de
fin
)
,
print
formater
dans
fichier
(
f
de
début
)
sscanf
:
scan
formater
(
f
de
fin
)
dans
string
(
s
de
début
)
fonction
de
traitement
de
date
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
envoi
de
mail
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
générer
PDF
en
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
générer
image
en
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
creer-desimages-en-php
traiter
expression
régulier
en
PHP
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
lesexpressions-regulieres-partie-1-2
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
lesexpressions-regulieres-partie-2-2-2
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
mementodes-expressions-regulieres
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
tableau
numéroter
tableau
associatif
tableau
numéroter
–
exemple
,
présentation
tableau
«
classique
»
:
permettre
de
mettre
valeur
d
’
même
type
dans
variable
.
fonction
array
:
créer
tableau
$
prenom
=
array
(
‘
Aurélien
’
,
‘
Isabelle
’
,
‘
Ahmed
’
,
‘
Olivier
’
,
‘
Nour
’
,
‘
Chang
’
)
;
/
/
créer
$
prenom
[
]
,
$
prenom
[
]
jusqu
’
à
$
prenom
[
]
créer
tableau
par
indice
$
lesPrenom
[
]
=
’
Aurélien
’
;
$
lesPrenom
[
]
=
’
Isabelle
’
;
$
lesPrenom
[
]
=
’
Ahmed
’
;
noter
premier
élément
tableau
être
à
l
’
indice
.
L
’
indice
être
appeler
clé
.
créer
tableau
par
indice
automatique
$
lesPrenom
[
]
=
’
Aurélien
’
;
/
/
créer
$
prenom
[
]
$
lesPrenom
[
]
=
’
Isabelle
’
;
/
/
créer
$
prenom
[
]
$
lesPrenom
[
]
=
’
Ahmed
’
;
/
/
créer
$
prenom
[
]
utiliser
crochet
vide
,
nouveau
élément
être
placer
à
suite
précédent
.
instruction
echo
:
afficher
élément
tableau
echo
$
prenom
[
]
;
boucle
for
:
afficher
tableau
<
?
php
$
lesPrenom
[
]
=
'
Aurélien
'
;
$
lesPrenom
[
]
=
'
Olivier
'
;
$
lesPrenom
[
]
=
'
Ahmed
'
;
for
(
$
indice
=
;
$
indicer
<
count
(
$
lesPrenom
)
;
$
indice++
)
{
echo
'
lesPrenom
[
'
.
$
indice
.
'
]
=
'
.
$
lesPrenom
[
$
indice
]
.
'
<
br
/
>
'
;
}
?
>
noter
présence
de
fonction
count
pour
avoir
nombre
d
’
élément
tableau
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
fonction
print-r
(
)
:
affichage
basique
tableau
sans
mise
en
forme
affichage
sur
seul
ligne
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
print_r
(
$
lesPrenom
)
;
?
>
affichage
ligner
par
ligne
:
avec
balise
<
pre
>
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
echo
$
lesPrenom
;
echo
'
<
pre
>
'
;
print_r
(
$
lesPrenom
)
;
echo
'
<
/
pre
>
'
;
?
>
fonction
var_dump
(
)
:
affichage
basique
information
d
’
variable
affichage
sur
seul
ligne
avec
type
en
:
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
var_dump
(
$
lesPrenom
)
;
$
i
=
;
var_dump
(
$
i
)
;
?
>
attention
:
devoir
avoir
de
trou
dans
tableau
<
?
php
$
lesPrenom
[
]
=
'
Aurélien
'
;
$
lesPrenom
[
]
=
'
Olivier
'
;
$
lesPrenom
[
]
=
'
Ahmed
'
;
$
lesPrenom
[
]
=
'
Hang
'
;
/
/
affiche
prénom
print_r
(
$
lesPrenom
)
;
/
/
for
n
’
afficher
pour
$
lesPrenom
[
]
/
/
n
’
afficher
$
lesPrenom
[
]
for
(
$
indice
=
;
$
indicer
<
count
(
$
lesPrenom
)
;
$
indice++
)
{
echo
'
lesPrenom
[
'
.
$
indice
.
'
]
=
'
.
$
lesPrenom
[
$
indice
]
.
'
<
br
/
>
'
;
}
?
>
boucler
foreach
:
afficher
tableau
,
l
’
indice
pour
passer
en
revue
élément
tableau
,
être
numéro
dans
tableau
,
utiliser
foreach
.
dans
boucle
foreach
mettre
tableau
nom
de
variable
qu
’
récupérer
dans
tableau
.
deux
élément
être
séparer
par
as
.
boucle
foreach
gérer
fait
de
démarrer
premier
élément
tableau
d
’
aller
jusqu
’
dernier
.
<
?
php
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
foreach
(
$
lesPrenom
avoir
$
unPrenom
)
{
echo
$
unPrenom
.
'
<
br
/
>
'
;
}
?
>
boucler
foreach
$
key
=
>
$
valoir
élément
d
’
tableau
correspondre
à
couple
(
key
,
valoir
)
:
clé
être
numéro
de
l
’
élément
dans
tableau
,
value
valeur
.
pouvoir
ajouter
$
key
dans
boucle
foreach
:
permettre
d
’
accéder
à
clé
.
<
?
php
$
lesPrenom
=
array
(
'
Aurélien
'
,
'
Isabelle
'
,
'
Ahmed
'
)
;
echo
'
<
h@card@
>
affichage
foreach
$
key
=
>
$
value
<
/
h2
>
'
;
foreach
(
$
lesPrenom
avoir
$
key
=
>
$
value
)
{
echo
'
$
key
:
'
.
$
key
.
'
<
br
/
>
'
;
echo
'
$
value
:
'
.
$
valoir
.
'
<
br
/
>
'
;
}
?
>
chainer
vers
tableau
:
implode
explode
explode
pour
convertir
chaine
avec
liste
de
valeur
en
tableau
numéroter
implode
pour
convertir
tableau
numéroter
en
chaine
contenir
liste
valeur
tableau
.
préciser
fonction
séparateur
qu
’
trouver
entre
valeur
dans
chaine
.
$
chainer
=
implode
(
$
sep
,
$
tableau
)
;
$
chainer
=
implode
(
«
<
br
>
»
,
$
tableau
)
;
$
tab
=
explode
(
$
sep
,
$
chaine
)
;
$
tab
=
explode
(
«
,
»
,
$
chaine
)
;
exercice
–
tableau
de
prénom
liste
à
puce
Ecrire
script
afficher
contenu
d
’
tableau
de
prénom
dans
liste
à
puce
.
prénom
être
écrire
en
minuscule
avec
majuscule
en
premier
.
résultat
attendre
:
faire
version
n
’
affiche
prénom
premier
lettre
venir
après
heure
.
chercher
information
sur
fonction
strcmp
(
)
dans
documentation
PHP
.
utiliser
«
continu
»
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
tableau
associatif
–
exemple
présentation
tableau
associatif
être
tableau
particulier
permettre
de
mettre
valeur
de
type
différent
dans
variable
.
C
’
être
l
’
équivaloir
d
’
structure
(
struct
)
d
’
objet
dans
d
’
autre
langage
.
à
valeur
associer
nom
qu
’
appeler
clé
attribut
.
nom
être
«
associé
»
à
valeur
.
PHP
parler
de
tableau
associatif
.
fonction
array
:
créer
tableau
:
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
aurelien1995
'
)
;
créer
tableau
par
indice
$
utilisateur
[
'
nom
'
]
=
'
toto
'
;
$
utilisateur
[
'
prenom
'
]
=
'
Aurélien
'
;
$
utilisateur
[
'
dateNaissance
'
]
=
;
$
utilisateur
[
'
nomDUtilisateur
'
]
=
'
aurelien1995
'
;
instruction
echo
:
afficher
élément
tableau
echo
$
utilisateur
[
‘
nomUtilisateur
’
]
;
fonction
print-r
(
)
:
affichage
basique
tableau
associatif
sans
mise
en
forme
affichage
sur
seul
ligne
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
print_r
(
$
utilisateur
)
;
?
>
affichage
ligner
par
ligne
:
avec
balise
<
pre
>
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
echo
'
<
pre
>
'
;
print_r
(
$
utilisateur
)
;
echo
'
<
/
pre
>
'
;
?
>
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
afficher
tableau
associatif
:
boucle
foreach
dans
boucle
foreach
mettre
tableau
nom
de
variable
qu
’
récupérer
dans
tableau
.
deux
élément
être
séparer
par
as
.
boucle
foreach
gérer
fait
de
démarrer
premier
élément
tableau
d
’
aller
jusqu
’
dernier
.
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
foreach
(
$
utilisateur
avoir
$
element
)
{
echo
$
element
.
'
<
br
/
>
'
;
}
?
>
boucler
foreach
$
key
=
>
$
valoir
élément
d
’
tableau
associatif
,
pour
tableau
numéroter
,
correspondre
à
couple
(
key
,
valoir
)
.
key
correspondre
à
attribut
,
value
à
valeur
.
pouvoir
ajouter
$
key
dans
boucle
foreach
:
permettre
d
’
accéder
à
l
’
attribut
.
<
?
php
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
nomUtilisateur
=
>
'
aurelien1995
'
)
;
echo
'
<
h@card@
>
affichage
foreach
avoir
$
key
=
>
$
value
<
/
h2
>
'
;
foreach
(
$
utilisateur
avoir
$
key
=
>
$
value
)
{
echo
'
$
key
:
'
.
$
key
.
'
<
br
/
>
'
;
echo
'
$
value
:
'
.
$
valoir
.
'
<
br
/
>
'
;
}
?
>
exercice
–
tableau-users-Etape-0
vouloir
gérer
utilisateur
avec
caractéristique
suivant
:
prénom
nom
(
dans
seul
champ
)
,
mail
,
motDePasse
,
age
créer
utilisateur
(
!
)
avec
information
dans
tableau
associatif
.
afficher
tableau
associatif
avec
print_r
avec
ligne
par
information
.
afficher
tableau
associatif
dans
tableau
HTML
.
exercice
–
tableau
périodique
élément
en
chimie
,
tableau
périodique
élément
associer
symbole
à
nom
d
’
élément
chimique
.
heure
pour
hydrogène
,
He
Helium
,
etc
.
faire
programme
afficher
premier
élément
dans
tableau
HTML
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
pouvoir
trouver
autre
sur
Internet
.
résultat
attendre
:
devoir
mettre
résultat
dans
page
HTML
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
tableau
numéroter
de
tableau
associatif
–
exemple
présentation
utiliser
tableau
numéroter
contenir
tableau
associatif
.
par
exemple
,
tableau
d
’
élève
.
utiliser
foreach
foreach
$
key
=
>
$
valoir
.
$
utilisateur
[
]
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
dateNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
aurelien1995
'
)
;
$
utilisateur
[
]
=
array
(
'
nom
'
=
>
'
tata
'
,
'
prenom
'
=
>
'
Bertrand
'
,
'
dateNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
bertrand1990
'
)
;
$
utilisateur
[
]
=
[
'
Toto3
'
,
'
Olivier
'
,
,
'
olivier1992
'
]
;
$
utilisateur
[
]
=
[
'
Titi4
'
,
'
Ahmed
'
,
,
'
ahmed1990
'
]
;
echo
'
<
h@card@
>
affichage
foreach
<
/
h2
>
'
;
foreach
(
$
utilisateur
avoir
$
user
)
{
echo
'
<
pre
>
'
;
print_r
(
$
user
)
;
echo
'
<
/
pre
>
'
;
}
echo
'
<
h@card@
>
affichage
foreach
skey
=
>
$
value
<
/
h2
>
'
;
foreach
(
$
utilisateur
avoir
$
index
=
>
$
user
)
{
echo
'
<
p
>
<
b
>
$
index
:
'
.
$
index
.
'
<
/
b
>
<
/
p
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
user
)
;
echo
'
<
/
pre
>
'
;
foreach
(
$
user
avoir
$
key
=
>
$
value
)
{
echo
'
<
p
>
$
key
:
'
.
$
key
.
'
<
br
>
'
;
echo
'
$
value
:
'
.
$
valoir
.
'
<
/
p
>
'
;
}
}
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
fonction
de
manipulation
de
tableau
–
exemple
exister
de
fonction
de
manipulation
de
tableau
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
citer
:
array
pour
créer
tableau
count
-
sizeof
count
(
$
monTableau
)
sizeof
(
$
monTableau
)
pour
récupérer
nombre
d
’
élément
tableau
.
sort
–
exemple
sort
(
$
monTableau
)
pour
trier
tableau
numéroter
rsort
(
)
pour
trier
en
sens|sen
inverse
.
exemple
.
fonction
de
tri
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
ksort
ksort
(
$
monTableau
)
pour
trier
tableau
associatif
selon
«
key
»
.
krsort
(
)
pour
trier
en
sens|sen
inverse
.
asort
asort
(
$
monTableau
)
pour
trier
tableau
associatif
selon
«
value
»
.
arsort
(
)
pour
trier
en
sens|sen
inverse
.
in_array
in_array
(
‘
valeur
’
,
$
monTableau
)
être
vrai
‘
valeur
’
être
dans
$
monTableau
.
array_key_exists
–
exemple
array_key_exists
(
$
cle
,
$
monTableauAssociatif
)
être
vrai
$
cle
être
clé
tableau
associatif
$
monTableauAssociatif
.
array-search
array_search
(
‘
Nour
’
,
$
lesPrenom
)
renvoyer
l
’
indice
de
valeur
‘
Nour
’
dans
tableau
$
lesPrenom
,
dans
exemple
(
cf
.
haut
)
.
shuffle
–
exemple
shuffle
(
$
monTableau
)
pour
mélanger
tableau
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
exercice
–
tableau-users-Etape-1
)
vouloir
gérer
utilisateur
avec
caractéristique
suivant
:
prénom
nom
(
dans
seul
champ
)
,
mail
,
motDePasse
,
age
créer
utilisateur
(
!
)
avec
information
dans
tableau
associatif
.
afficher
tableau
associatif
avec
print_r
avec
ligne
par
information
.
)
vouloir
créer
seul
utilisateur
tableau
d
’
utilisateur
.
créer
tableau
avec
utilisateur
.
créer
premier
utilisateur
avec
syntaxe
suivant
:
$
lesUtilisateurs
[
]
[
'
nom
'
]
=
'
toto
toto
'
;
etc
.
autre
avec
syntaxe
:
$
lesUtilisateurs
[
]
=
array
(
'
nom
'
=
>
'
toto
toto
'
,
etc
.
)
)
)
)
afficher
utilisateur
créer
avec
print_r
afficher
utilisateur
avec
for
afficher
utilisateur
avec
foreach
afficher
tableau
utilisateur
en
HTML
dans
tableau
HTML
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
Ecrire
propre
fonction
–
exemple
fonction
d
’
affichage
,
renvoyer
–
exemple
vouloir
afficher
«
Olivier
avoir
an
»
à
partir
prénom
de
l
’
année
de
naissance
<
?
php
function
afficherAge
(
$
prenom
,
$
anneeNaissance
)
{
$
today
=
getdate
(
)
;
$
age
=
$
today
[
'
year
'
]
-
$
anneeNaissance
;
echo
(
$
prenom
.
'
avoir
'
.
$
age
.
'
an
'
)
;
}
$
utilisateur
=
array
(
'
nom
'
=
>
'
toto
'
,
'
prenom
'
=
>
'
Aurélien
'
,
'
anneeNaissance
'
=
>
,
'
nomUtilisateur
'
=
>
'
aurelien1995
'
)
;
afficherAge
(
$
utilisateur
[
'
prenom
'
]
,
$
utilisateur
[
'
anneeNaissance
'
]
)
;
?
>
fonction
avoir
deux
paramètre
en
entrée
:
prénom
l
’
année
de
naissance
.
calcul
l
’
âge
en
fonction
de
l
’
année
de
naissance
de
l
’
année
de
date
jour
.
fonction
getdate
permettre
de
récupérer
l
’
information
.
utiliser
fonction
à
partir
,
dans
l
’
exemple
,
d
’
tableau
associatif
voir
.
fonction
renvoyer
résultat
–
exemple
aller
écrire
fonction
renvoyer
l
’
âge
à
partir
de
l
’
année
de
naissance
<
?
php
function
calculerAge
(
$
anneeNaissance
)
{
$
today
=
getdate
(
)
;
$
year
=
$
today
[
'
year
'
]
;
$
age
=
$
year-
$
anneeNaissance
;
return
$
age
;
}
$
anneeNaissance
=
;
$
age
=
calculerAge
(
$
anneeNaissance
)
;
echo
(
'
naître
en
'
.
$
anneeNaissance
.
'
:
'
.
$
age
.
'
an
.
'
)
;
?
>
fonction
avoir
paramètre
en
entrée
:
l
’
année
de
naissance
.
calcul
l
’
âge
en
fonction
de
l
’
année
de
naissance
de
l
’
année
de
date
jour
.
renvoyer
résultat
avec
return
.
fonction
pouvoir
être
utiliser
pour
donner
valeur
à
variable
,
par
exemple
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
fonction
avec
paramètre
en
sortie
:
être
modifier
–
exemple
aller
écrire
fonction
augmenter
employé
.
L
’
employé
être
tableau
associatif
avec
nom
salaire
.
fonction
recevoir
en
paramètre
l
’
employé
l
’
augmentation
.
<
?
php
echo
'
<
h@card@
>
code
PHP
<
/
h1
>
'
;
highlight_file
(
basename
(
__FILE__
)
)
;
echo
'
<
h@card@
>
RESULTATS
<
/
h1
>
'
;
function
augmenter
(
&
$
employe
,
$
augmentation
)
{
$
employe
[
'
salaire
'
]
=
$
employe
[
'
salaire
'
]
+
$
augmentation
;
}
$
emp
=
array
(
'
nom
'
=
>
'
toto
'
,
'
salaire
'
=
>
)
;
print_r
(
$
emp
)
;
echo
'
<
br
>
'
;
augmenter
(
$
emp
,
)
;
print_r
(
$
emp
)
;
?
>
dans
fonction
,
mettre
«
&
»
devant
$
employe
:
c
’
être
faire
qu
’
ressortir
modifier
.
test
faire
passer
de
à
.
sans
«
&
»
,
rester
à
.
visibilité
variable
–
exemple
–
global
,
GLOBALS
,
static
niveau
de
visibilité
pour
variable
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
•
variable
de
page
variable
global
:
être
visible
dans
page
après
premier
apparition
,
sauf
dans
fonction
de
page
,
sauf
être
redéclarer
«
global
»
dans
fonction
.
être
visible
dans
autre
page
.
à
noter
variable
de
page
être
appeler
en
général
variable
global
(
global
à
page
)
.
à
noter
qu
’
pouvoir
utiliser
tableau
associatif
$
GLOBALS
contenir
couple
keyvalue
correspondre
couple
nomDeVariable-valeurDeVariable
.
•
variable
local
:
être
visible
dans
fonction
être
définir
.
•
variable
«
static
»
«
locales-global
»
:
être
visible
dans
fonction
être
définir
garder
valeur
revenir
dans
fonction
.
circulation
de
l
’
information
entre
fonction
entre
page
fonction
pour
passer
de
l
’
information
à
fonction
,
passer
en
paramètre
de
fonction
.
variable
vouloir
accéder
à
variable
de
page
,
devoir
déclarer
«
global
»
dans
fonction
.
<
?
php
function
test1
(
)
{
$
varGlobale
=
'
test1
'
;
}
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
function
test2
(
)
{
global
$
varGlobale
;
$
varGlobale
=
'
test2
'
;
}
$
varGlobale
=
'
global
'
;
test1
(
)
;
echo
$
varGlobale
.
'
<
br
>
'
;
/
/
affiche
:
global
test2
(
)
;
echo
$
varGlobale
.
'
<
br
>
'
;
/
/
affiche
:
test2
?
>
entre
page
pour
faire
circuler
de
l
’
information
entre
page
,
utiliser
variable
$
_GET
$
_POST
variable
$
_SESSION
.
Cf
.
chapitre
suivre
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
exercice
–
tableau-users-Etape-2
:
codage
avec
fonction
prendre
fichier
de
correction
de
Exercice-tableau-users-Etape-1
.
dupliquer
l
’
appeler
dns-remplacer
)
dans
nouveau
fichier
appeler
«
dns-remplacer
»
aller
créer
fonction
permettre
de
créer
utilisateur
.
l
’
appeler
«
newUser
»
.
Ecriver
fonction
.
mettre
à
jour
copie
fichier
de
l
’
étape1
pour
qu
’
utiliser
fonction
.
/
/
creation
d
’
utilisateur
newUser
(
parametres
à
déterminer
)
;
)
dans
fichier
«
dns-remplacé
»
,
ajouter
fonction
permettre
d
’
afficher
utilisateur
avec
print_r
.
mettre
à
jour
copie
fichier
de
l
’
étape1
pour
qu
’
utiliser
fonction
.
/
/
affichage
tableau
avec
print_r
print_rUnUser
(
parametres
à
déterminer
)
;
)
dans
fichier
«
dns-remplacé
»
,
ajouter
fonction
permettre
d
’
afficher
utilisateur
champ
par
champ
.
mettre
à
jour
copie
fichier
de
l
’
étape1
pour
qu
’
utiliser
fonction
.
/
/
affichage
tableau
avec
print_r
printUnUser
(
parametres
à
déterminer
)
;
)
dans
nouveau
fichier
appeler
«
dns-remplacé
»
,
ajouter
fonction
permettre
de
créer
tableau
d
’
utilisateur
.
utilisateur
être
fournir
dans
fonction
.
appeler
fonction
initTab
.
mettre
à
jour
copie
fichier
de
l
’
étape1
pour
qu
’
utiliser
fonction
.
/
/
initialisation
de
tableau
de
utilisateur
initLesUsers
(
parametres
à
déterminer
)
;
)
doter
d
’
fonction
afficher
utilisateur
avec
print_r
.
ajouter
l
’
appel
à
fonction
dans
copie
fichier
de
l
’
étape1
.
/
/
affichage
tableau
avec
print_r
print_rLesUsers
(
$
lesUtilisateurs
)
;
)
doter
d
’
fonction
afficher
avec
for
.
mettre
à
jour
copie
fichier
de
l
’
étape1
pour
qu
’
utiliser
fonction
.
/
/
affichage
tableau
de
façon
basique
avec
for
print_rLesUsersFor
(
$
lesUtilisateurs
)
;
)
doter
d
’
fonction
afficher
avec
foreach
.
mettre
à
jour
copie
fichier
de
l
’
étape1
pour
qu
’
utiliser
fonction
.
/
/
affichage
tableau
de
façon
basique
avec
foreach
print_rLesUsersForeach
(
$
lesUtilisateurs
)
;
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
)
à
place
âge
,
entrer
l
’
année
de
naissance
.
adapter
programme
pour
qu
’
continuer
à
afficher
âge
.
doter
d
’
fonction
calculerAge
(
$
anneeNaissance
)
mettre
à
jour
fonction
printUnUser
(
)
,
tout
dans
fichier
dns-remplacé
.
)
créer
fonction
d
’
affichage
styler
:
par
exemple
afficher
dans
tableau
HTML
gérer
de
CSS
pour
tableau
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
filtrer
tableau
:
fonction
array_filter
–
exemple
fonction
«
array_filter
»
permettre
de
filtrer
tableau
:
<
?
php
$
tab
=
array
(
,
,
,
,
,
,
,
,
,
)
;
echo
'
<
h@card@
>
affichage
tableau
complet
<
/
h2
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
tab
)
;
echo
'
<
/
pre
>
'
;
function
filtreLesPairs
(
$
element
)
{
if
(
$
element
%
=
=
)
return
true
;
else
return
false
;
}
$
tab_filtre
=
array_filter
(
$
tab
,
`
`
filtreLesPairs
'
'
)
;
echo
'
<
h@card@
>
affichage
pair
<
/
h2
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
tab_filtre
)
;
echo
'
<
/
pre
>
'
;
?
>
explication
:
passer
tableau
nom
d
’
fonction
en
paramètre
à
fonction
«
array_filter
»
.
,
fonction
s
’
appeler
«
filtreLesPairs
»
.
définir
fonction
.
avoir
paramètre
correspondre
à
élément
tableau
passer
en
paramètre
à
array_filter
.
pouvoir
appeler
paramètre
$
element
.
aller
choisir
«
$
element
conserver
.
retourner
true
,
conserver
$
element
dans
tableau
,
,
garder
.
,
tester
l
’
entier
être
divisible
par
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
exercice
–
tableau-users-Etape
:
tri
donnée
)
vouloir
trier
utilisateur
par
nom
.
utiliser
fonction
«
array_multisort
»
.
principe
être
de
créer
tableau
avec
nom
,
de
faire
appel
à
fonction
«
array_multisort
»
en
passer
en
paramètre
tableau
avec
nom
,
constant
(
SORT_ASC
dire
c
’
être
tri
croître
)
tableau
utilisateur
.
function
triParNomDesc
(
&
$
lesUsers
)
{
/
/
tri
tableau
par
nom
/
/
commencer
par
fabriquer
tableau
nom
foreach
(
$
lesUsers
avoir
$
indice
=
>
$
unUser
)
{
$
lesNoms
[
$
indice
]
=
$
unUser
[
'
nom
'
]
;
}
/
/
appel
à
array_multisort
:
tableau
à
trier
être
en
dernier
array_multisort
(
$
lesNoms
,
SORT_DESC
,
$
lesUsers
)
;
}
enregistrer
fonction
dans
fichier
«
dns-remplacer
»
tester
fonction
à
partir
résultat
de
l
’
Etape
.
)
avec
même
méthode
,
trier
par
âge
décroître
)
avec
même
méthode
,
trier
par
âge
nom
décroître
)
aller
généraliser
fonction
de
tri
pour
qu
’
pouvoir
trier
selon
n
’
importer
champ
.
)
écrire
fonction
tri
selon
champ
,
de
façon
général
.
base
PHP
–
environnement
de
développement
–
page
/
-
open
Room
ECHANGE
D
’
information
PHP
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Echange
d
’
information
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
.
.
introduction
:
passer
variable
dans
l
’
URL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
recherche
dans
google
de
:
«
php
variable
$
_GET
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
installation
fichier
de
test
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
méthode
Get
-
URL
-
tableau
$
_GET
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
problématique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Exemple-1
:
<
avoir
href
=
'
'
URL
'
'
>
tableau
$
_GET
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
vérifier
information
fournir
par
l
’
utilisateur
–
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Exemple-2
:
href-GET-sans-verification
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Exemple-3
:
href-GET-avec-verification
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
de
gestion
variable
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
méthode
POST
-
formulaire
-
tableau
$
_POST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
rappel
sur
formulaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
:
formulaire-POST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
:
formuaire-GET
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
vérifier
information
fournir
par
l
’
utilisateur
–
:
faille
XSS
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Never
trust
user
input
!
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
solution
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fonction
de
traitement
de
chaîne
de
caractère
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
protéger
contre
faille
:
aide
en
ligne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
:
exercice
password
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
premier
version
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
remarque
:
crypter
mot
de
passe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Deuxième
version
:
monofichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
saisir
d
’
utilisateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
structure
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
conclusion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
$
_SESSION
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
utilisation
tableau
associatif
$
_SESSION
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
terminer
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
TP
:
synthèse
:
site
user
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
objectif
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Etape
:
affichage
utilisateur
avec
Header
Nav
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Etape
:
ajout
formulaire
admin-mot
de
passe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Etape
:
page
d
’
administration
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Etape
:
vérifier
login
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
base
PHP
–
environnement
de
développement
–
page
/
Etape
:
enregistrer
nouveau
user
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Etape
:
création
d
’
fichier
dns-remplacer
–
fonction
header
(
URL
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variable
superglobale
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
être
tableau
associatif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
S_GET
-
$
_POST
-
$
_SESSION
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
$
_COOKIE
$
_REQUEST
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
S_FILE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
$
_SERVER
$
_
ENV
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
afficher
superglobale
:
print_r
(
)
var_dump
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
$
_FILE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
objectif
:
upload
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
technique
:
formulaire
spécial
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
:
$
_FILE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
autoriser
l
’
écriture
de
fichier
sur
serveur
:
CHMOD
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
syntaxe
général
de
manipulation
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
algorithmique
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exemple
–
tableau-users-Etape-4
:
codage
avec
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
$
_COOKIES
:
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
principe
de
codage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
modifier
supprimer
cookie
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
précision
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
bilan
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
construction
d
’
site
variable
de
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Echange
entre
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
appel
d
’
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
<
avoir
href
=
«
url
»
>
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
<
form
action
=
«
url
»
method
=
«
»
>
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
header
(
‘
location
:
url
’
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.HTACCESS
.HTPASSWD
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.htaccess
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.htpasswd
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Edition
:
mars
base
PHP
–
environnement
de
développement
–
page
/
ECHANGES
D
’
information
en
PHP
Manuel
de
référence
PHP
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
introduction
:
passer
variable
dans
l
’
URL
recherche
dans
google
de
:
«
php
variable
$
_GET
»
résultat
L
’
URL
résultat
être
suivant
:
https
:
/
/
dns-remplacer
/
#
safe
=
activer
&
q
=
php+variable+
%
24_get
derrière
https
:
/
/
dns-remplacer
/
trouver
élément
séparer
par
«
&
»
.
aller
trouver
:
«
q
=
php+variable+
%
24_GET
»
.
variable
q
contenir
information
«
php
»
+
«
variable
»
+
«
%
24_get
»
%
venir
remplacer
$
.
modification
de
l
’
URL
pouvoir
modifier
l
’
URL
.
mettre
par
exemple
POST
à
place
de
GET
.
obtenir
page
de
recherche
de
«
php
variable
$
_POST
»
simplification
pouvoir
écrire
dans
l
’
URL
:
https
:
/
/
dns-remplacer
/
search
?
q
=
php+variable+
%
24_POST
conclusion
C
’
être
à
l
’
adresse
de
l
’
URL
donner
page
à
afficher
,
avec
paramètre
en
.
exercice
Google
chercher
«
java
»
dans
l
’
URL
de
google
.
page
cours|cour
regarder
l
’
URL
de
page
cours|cour
:
.
être
question
poser
dans
l
’
URL
?
modifier
valeur
de
l
’
article
,
par
exemple
.
constater
?
base
PHP
–
environnement
de
développement
–
page
/
installation
fichier
de
test
exemple
cours|cour
être
dans
fichier
zip
fournir
avec
l
’
article
cours|cour
:
01exemples_GET_
dns-remplacer
charger
fichier
mettez-le
dans
dossier
Partie_2
répertoire
web
«
www
»
serveur
WAMP
.
exemple
être
présenter
dans
chapitre
en
vert
.
exercice
à
faire
être
présenter
dans
chapitre
en
jaune
.
remarque
:
fichier
d
’
exemple
commencer
par
trois
ligne
:
echo
'
<
h@card@
>
code
PHP
<
/
h1
>
'
;
highlight_file
(
'
dns-remplacer
'
)
;
echo
'
<
h@card@
>
RESULTATS
<
/
h1
>
'
;
code
afficher
deux
balise
h1
avec
code
PHP
RESULTATS
fonction
«
highlight_file
»
permettre
d
’
afficher
contenu
fichier
proposer
.
tester
code
,
commencer
par
affiche
code
.
Ca
permettre
de
voir
code
en
même
temps
résultat
.
pour
généraliser
code
,
écrire
:
highlight_file
(
basename
(
__FILE__
)
)
;
basename
(
__FILE__
)
permettre
de
récupérer
nom
fichier
en
cours|cour
de
traitement
.
méthode
Get
-
URL
-
tableau
$
_GET
problématique
faire
passer
information
d
’
page
web
à
autre
?
passer
d
’
page
à
autre
pouvoir
faire
avec
<
avoir
href
=
'
'
URL
'
'
>
.
venir
de
voir
qu
’
pouvoir
passer
information
sur
l
’
URL
.
aller
pouvoir
passer
information
d
’
page
à
autre
de
manière
.
Exemple-1
:
<
avoir
href
=
'
'
URL
'
'
>
tableau
$
_GET
objectif
L
’
objectif
être
,
à
partir
d
’
premier
page
(
page
d
’
appel
)
de
faire
appel
à
deuxième
page
(
page
appelé
)
en
passer
information
circuler
à
travers
l
’
URL
.
principe
:
passage
de
paramètre
•
utiliser
<
avoir
href
=
'
'
URL
'
'
>
link
text
<
/
avoir
>
•
dans
l
’
URL
,
aller
mettre
paramètre
.
•
dans
page
appelé
,
paramètre
retrouver
dans
tableau
associatif
de
paramètre
:
$
_GET
base
PHP
–
environnement
de
développement
–
page
/
page
appelant
:
avoir
href
fichier
:
index_appel_
dns-remplacer
C
’
être
page
HTML
PHP
(
falloir
l
’
exécuter
via
serveur
web
)
avec
<
avoir
href
>
:
<
DOCTYPE
html
>
<
html
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
$
_GET-Appelant
<
/
title
>
<
/
head
>
<
body
>
<
h@card@
>
test
de
$
_GET
<
/
h@card@
>
<
p
>
rendre
sur
<
avoir
href
=
'
'
dns-remplacé
?
prenom
=
Bertrand
&
amp
;
nom
=
Liaudet
'
'
>
bonjour
personnaliser
avec
$
_GET
<
/
avoir
>
<
!
--
syntaxe
:
?
nom
de
variable
=
valeur
&
nom
de
variable
=
etc
.
--
>
<
/
p
>
<
/
body
>
<
/
html
>
href
=
'
'
dns-remplacer
?
prenom
=
Bertrand
&
amp
;
nom
=
Liaudet
'
'
>
•
nom
fichier
:
dns-remplacer
•
un
?
•
nom
de
variable
=
information
(
prenom
=
Bertrand
)
information
envoyé
aller
remplir
tableau
associatif
$
_GET
•
variable
être
séparer
par
«
&
»
.
écrire
«
&
amp
;
»
«
&
»
seul
créer
confusion
en
HTML
.
•
avoir
deuxième
variable
avec
valeur
:
nom
=
Liaudet
pager
appeler
:
$
_GET
fichier
:
dns-remplacer
<
?
php
echo
'
<
h@card@
>
code
PHP
:
<
/
h1
>
'
;
highlight_file
(
basename
(
__FILE__
)
)
;
echo
'
<
h@card@
>
RESULTATS
:
<
/
h1
>
'
;
echo
'
<
h@card@
>
tableau
$
_GET
:
<
/
h3
>
'
;
echo
'
<
pre
>
'
;
print_r
(
$
_GET
)
;
echo
'
<
/
pre
>
'
;
?
>
<
DOCTYPE
html
>
<
html
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
title
>
$
_GET-Appelé
<
/
title
>
<
/
head
>
<
body
>
<
h@card@
>
page
appeléeee
par
un
&
lt
;
avoir
href
=
'
'
URL
'
'
&
gt
;
<
/
h1
>
base
PHP
–
environnement
de
développement
–
page
/
<
h@card@
>
paramètre
être
passer
URL
dans
tableau
$
_GET
:
<
/
h@card@
>
<
p
>
bonjour
<
?
php
echo
$
_GET
[
'
prenom
'
]
.
'
'
.
$
_GET
[
'
nom
'
]
;
?
>
<
/
p
>
<
/
body
>
<
/
html
>
explication
dans
page
appelé
,
avoir
tableau
associatif
$
_GET
contenir
clé
valeur
fournir
dans
page
appelant
:
array
(
[
prenom
]
=
>
Bertrand
[
nom
]
=
>
Liaudet
)
pouvoir
exploiter
tableau
associatif
vouloir
dans
page
appelé
.
&
alt
;
avoir
permettre
d
’
avoir
<
&
gt
;
permettre
d
’
avoir
>
code
spécial
HTML
:
.
précision
Ø
URL
:
voir
paramètre
...
dns-remplacer
?
prenom
=
Bertrand
&
nom
=
Liaudet
(
dans
l
’
adresser
espace
être
traduire
par
%
)
Ø
sécurité
–
confidentialité
L
’
information
circuler
être
visible
sur
lien
URL
.
falloir
faire
attention
à
limiter
à
information
confidentiel
.
Ø
limite
en
général
,
navigateur
n
’
accepter
url
de
de
caractère
.
falloir
éviter
de
passer
d
’
information
par
moyen
.
base
PHP
–
environnement
de
développement
–
page
/
vérifier
information
fournir
par
l
’
utilisateur
–
présentation
avoir
voir
qu
’
pouvoir
voir
dans
l
’
URL
information
fournir
par
l
’
utilisateur
.
pouvoir
modifier
information
supprimer
dans
l
’
URL
.
Ca
pouvoir
être
gênant
pour
fonctionnement
site
.
falloir
faire
vérification
.
Exemple-2
:
href-GET-sans-verification
code
sans
vérification
pouvoir
tester
résultat
donner
de
mauvais
valeur
en
changer
l
’
URL
.
pouvoir
ralentir
serveur
générer
erreur
.
Exemple-3
:
href-GET-avec-verification
code
avec
vérification
vérifier
cas
à
problème
possible
:
<
?
php
echo
'
<
h@card@
>
attendre
nombre
programme
appeler
<
/
h2
>
'
;
if
(
!
isset
(
$
_GET
[
'
nombre
'
]
)
)
{
echo
'
<
p
>
de
nombre
recevoir
!
<
/
p
>
'
;
}
else
{
/
/
cast
:
$
_GET
être
entier
,
obtenir
$
nombre
=
(
int
)
$
_GET
[
'
nombre
'
]
;
if
(
$
_GET
[
'
nombre
'
]
>
or
$
_GET
[
'
nombre
'
]
<
=
)
{
echo
'
<
p
>
nombre
recevoir
n\'est
valide
!
<
/
p
>
'
;
}
else
{
echo
'
<
p
>
aller
compter
jusqu\
'
à
'
.
$
nombre
.
'
<
/
p
>
'
;
for
(
$
i
=
;
$
i
<
=
$
_GET
[
'
nombre
'
]
;
$
i++
)
{
echo
(
'
<
p
>
'
.
$
i
.
'
<
/
p
>
'
)
;
}
}
}
?
>
vérifier
information
attendre
exister
:
isset
(
$
var
)
isset
(
)
être
vrai
s
’
avoir
chose
dans
variable
,
faux
.
pouvoir
utiliser
fonction
empy
(
)
Transtypage
(
cast
)
:
forcer
type
d
’
variable
:
(
int
)
$
_GET
[
‘
nombre
’
]
être
chaine
de
caractère
.
pouvoir
tester
contenir
chiffre
avec
fonction
ctype_digit
(
)
.
«
caster
»
$
_GET
[
‘
nombre
’
]
avec
un
(
int
)
.
$
_GET
[
‘
nombre
’
]
n
’
être
entier
,
cast
renvoyer
.
base
PHP
–
environnement
de
développement
–
page
/
fonction
de
gestion
variable
exister
de
nombreux
fonction
permettre
de
faire
vérification
.
être
fonction
de
gestion
variable
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
base
PHP
–
environnement
de
développement
–
page
/
méthode
POST
-
formulaire
-
tableau
$
_POST
rappel
sur
formulaire
principe
formulaire
être
l
’
outil
de
base
pour
échanger
information
avec
visiteur
.
http
:
/
/
dns-remplacer
/
html
/
html_
dns-remplacé
http
:
/
/
dns-remplacer
/
tags
/
att_form_
dns-remplacé
http
:
/
/
dns-remplacer
/
IMG
/
pdf
/
HTML_4_Fonctionnalites_
dns-remplacer
chapitre
:
formulaire
,
page
à
:
<
form
>
<
input
>
syntaxe
de
base
•
exemple
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
<
p
>
<
label
for
=
'
'
nom
'
'
>
nom
<
/
label
>
<
input
type
=
'
'
text
'
'
name
=
'
'
nom
'
'
id
=
'
'
nom
'
'
maxlength
=
'
'
'
'
placeholder
=
'
'
nom
'
'
>
<
/
p
>
<
p
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
<
/
p
>
<
/
form
>
•
balise
form
contenir
attribut
principal
:
method
action
.
•
balise
form
contenir
balise
inclure
permettre
de
:
@ord@
caractériser
type
de
formulaire
(
champ
de
saisie
,
bouton
,
menu
dérouler
,
etc
.
)
fournir
variable
à
passer
à
page
appeler
via
tableau
associatif
$
_GET
$
_POST
.
principe
C
’
être
passage
de
paramètre
(
dans
appel
de
fonction
)
de
page
à
page
.
paramètre
retrouver
dans
tableau
associatif
de
paramètre
:
$
_GET
$
_POST
code
HTML
de
page
appelant
remplir
$
_GET
$
_POST
dans
page
appelé
,
accéder
élément
tableau
associatif
$
_GET
$
_POST
attribut
de
méthode
form
•
L
’
attribut
method
permettre
de
choisir
technique
de
transfert
d
’
information
.
avoir
:
GET
POST
.
méthode
GET
être
voir
faire
transiter
l
’
information
dans
l
’
URL
.
limiter
l
’
information
à
caractère
.
méthode
POST
permettre
d
’
envoyer
gros
contenu
d
’
information
de
cacher
transit
utilisateur
.
utiliser
méthode
POST
dans
formulaire
.
•
L
’
attribut
action
dire
autre
page
être
appeler
avec
balise
form
,
valider
sur
bouton
par
exemple
,
à
page
envoyer
information
.
être
page
php
(
n
’
importer
autre
page
d
’
langage
serveur
)
être
capable
de
traiter
information
transmettre
.
pouvoir
faire
appel
à
même
page
.
base
PHP
–
environnement
de
développement
–
page
/
balise
inclure
dans
balise
form
•
balise
input
:
c
’
être
principal
balise
de
saisie
.
fournir
en
général
champ
de
saisie
.
saisie
«
typé
»
:
téléphone
,
mail
,
couleur
,
etc
.
fournir
bouton
de
validation
.
•
balise
textarea
:
fournir
zone
de
texte
à
saisir
•
balise
select
:
fournir
menu
dérouler
•
balise
fieldset
:
permettre
de
regrouper
dans
cadre
élément
de
saisie
.
balise
legend
joue
rôle
d
’
label
pour
cadre
.
•
balise
label
:
permettre
de
mettre
texte
associer
à
zone
de
saisie
.
http
:
/
/
dns-remplacer
/
html
/
html_form_input_
dns-remplacer
attribut
fondamental
balise
inclure
:
name
value
,
pour
remplir
$
_GET
$
_POST
pour
élément
d
’
formulaire
(
champ
de
saisie
,
bouton
,
menu
dérouler
,
etc
.
)
,
pouvoir
définir
«
name
»
être
nom
de
variable
qu
’
retrouver
dans
$
_
$
GET
$
_POST
être
accessible
dans
page
appelé
.
«
name
»
être
variable
passée
en
paramètre
pour
page
appelé
.
pouvoir
définir
«
value
»
être
valeur
de
variable
définir
par
«
name
»
.
«
value
»
pouvoir
être
fournir
à
travers
variable
avec
php
n
’
importer
langage
serveur
.
à
noter
«
value
»
pouvoir
être
valeur
s
’
affiche
dans
formulaire
(
par
exemple
texte
bouton
de
validation
)
.
exemple
:
formulaire-POST
page
appelant
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
code
formulaire
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
<
p
>
<
label
for
=
'
'
prenom
'
'
>
prenom
<
/
label
>
<
input
type
=
'
'
text
'
'
name
=
'
'
prenom
'
'
id
=
'
'
prenom
'
'
placeholder
=
'
'
prenom
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
nom
'
'
>
nom
<
/
label
>
<
input
type
=
'
'
text
'
'
name
=
'
'
nom
'
'
id
=
'
'
nom
'
'
placeholder
=
'
'
nom
'
'
>
<
/
p
>
<
p
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
<
/
p
>
<
/
form
>
dans
l
’
input
:
•
type
définir
type
de
saisie
:
texte
•
name
être
clé
tableau
associatif
$
_POST
$
_GET
,
$
_POST
•
L
’
id
servir
pour
CSS
•
for
<
label
>
être
égal
à
l
’
id
,
clic
sur
label
conduire
dans
l
’
input
pour
éviter
confusion
.
•
placeholder
:
info
pour
saisie
,
en
grisé
page
appelé
:
$
_POST
<
p
>
bonjour
<
?
php
echo
$
_POST
[
'
prenom
'
]
.
'
'
.
$
_POST
[
'
nom
'
]
;
?
>
<
/
p
>
base
PHP
–
environnement
de
développement
–
page
/
tableau
$
_POST
fonctionner
tableau
$
_GET
:
c
’
être
tableau
associatif
.
name
être
clé
(
key
)
tableau
$
_POST
:
être
cas
pour
autre
formulaire
.
tester
,
constater
qu
’
n
’
avoir
d
’
information
dans
l
’
URL
.
exemple
:
formuaire-GET
page
appelant
:
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
GET
'
'
>
code
formulaire
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
GET
'
'
>
pager
appeler
:
$
_GET
<
p
>
bonjour
<
?
php
echo
$
_GET
[
'
prenom
'
]
.
'
'
.
$
_GET
[
'
nom
'
]
;
?
>
<
/
p
>
dans
cas
,
variable
transiter
via
l
’
URL
.
pouvoir
voir
dans
l
’
URL
.
base
PHP
–
environnement
de
développement
–
page
/
vérifier
information
fournir
par
l
’
utilisateur
–
:
faille
XSS
Never
trust
user
input
!
principe
:
envoyer
code
avec
méthode
POST
,
l
’
information
envoyer
être
cacher
.
pouvoir
envoyer
n
’
importer
code
HTML
JavaScript
nuire
à
l
’
utilisation
normal
site
,
afficher
par
exemple
contenu
inadapté
.
L
’
envoi
de
code
à
place
d
’
texte
,
c
’
être
qu
’
appeler
faille
XSS
exemple
exemple
précédent
être
protéger
.
pouvoir
saisir
simple
balise
HTML
,
code
JavaScript
,
balise
HTML
complexe
(
formulaire
!
)
Ø
saisir
de
balise
dans
test
précédent
,
à
place
de
saisir
simple
nom
:
«
Bertrand
»
,
pouvoir
saisir
«
<
h@card@
>
Bertrand
<
/
h1
>
dans
cas
,
balise
<
h@card@
>
être
interpréter
texte
apparaître
en
gros
.
Ø
saisir
de
code
javascript
pouvoir
ajouter
code
JavaScript
:
<
script
type
=
'
'
text
/
javascript
'
'
>
alert
(
'
virus
avoir
être
détecter
!
Veuillez
rendre
sur
dns-remplacé
'
)
<
/
script
>
!
exemple
précédent
être
grave
,
avec
code
JavaScript
,
pirate
pouvoir
récupérer
information
privé
d
’
utilisateur
.
Ø
rôle
navigateur
safari
(
apple
)
protéger
contre
intrusion
XSS
(
firefox
)
.
Firefox
,
laisser
passer
Javascript
solution
:
exemple
principe
PHP
fournir
deux
fonction
permettre
de
traiter
code
interprétable
simple
chaîne
de
caractère
.
fonction
htmlspecialchar
fonction
htmlspecialchars
permettre
code
insérer
traiter
texte
normal
.
htmlspecialchar
(
$
_POST
[
'
nom
'
]
)
saisir
:
<
h@card@
>
Bertrand
<
/
h1
>
,
site
afficher
:
bonjour
<
h@card@
>
Bertrand
<
/
h1
>
:
balise
h1
n
’
avoir
être
prise
en
compte
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
transformation
caractère
spécial
«
<
»
en
caractère
normal
«
&
lt
;
»
regarder
code
source
d
’
page
avec
htmlspecialchar
,
voir
«
<
»
être
interpréter
par
navigateur
début
d
’
balise
être
remplacer
par
«
&
lt
;
»
permettre
navigateur
d
’
afficher
<
base
PHP
–
environnement
de
développement
–
page
/
C
’
être
cas
dans
safari
,
dans
Firefox
chrome
.
fonction
htmlentities
fonction
htmlentities
être
équivalent
à
fonction
htmlspecialchars
en
restrictif
:
caractère
avoir
équivalent
HTML
être
traduire
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
fonction
de
traitement
de
chaîne
de
caractère
Htmlspecialchars
htmlentities
être
fonction
de
traitement
de
chaîne
de
caractère
.
fonction
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
trouver
par
exemple
:
ltrim
(
suppression
espace
en
)
,
ucfirst
(
upper
case
pour
premier
lettre
)
,
etc
.
:
printf
sprintf
fonction
printf
permettre
d
’
écrire
chaine
avec
variable
«
formater
(
«
echo
»
formater
)
.
fonction
sprintf
permettre
de
retourner
lef
résultat
dans
chaine
.
exemple
printf
(
«
prix
être
%
.2f
euro
»
,
$
prix
)
;
résultat
afficher
pour
prix
être
avec
chiffre
après
virgule
.
%
s
:
string
%
f
:
float
avec
chiffre
après
virgule
.
%
d
:
entier
%
c
:
caractère
etc
.
documentation
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
tester
code
:
http
:
/
/
dns-remplacer
protéger
contre
faille
:
aide
en
ligne
https
:
/
/
dns-remplacer
/
course
/
protegez-vous-efficacement-contre-les-failles-web
base
PHP
–
environnement
de
développement
–
page
/
TP
:
exercice
password
premier
version
objectif
donner
l
’
accès
à
page
contenir
information
cacher
pour
avoir
mot
de
passe
.
n
’
avoir
bon
mot
de
passe
,
revenir
sur
page
d
’
accueil
.
méthode
D
’
abord
réfléchir
sur
papier
!
être
page
en
jeu
?
un
,
?
page
communiquer
entre
?
premier
analyse
•
page
d
’
accueil
:
formulaire
de
saisie
d
’
mot
de
passe
.
en
HTML
.
•
mot
de
passe
saisir
dans
formulaire
être
envoyer
dans
tableau
$
_POST
à
page
action
,
en
PHP
,
vérifier
mot
de
passe
être
bon
avant
d
’
afficher
information
cacher
.
•
mot
de
passe
être
faux
,
falloir
afficher
message
d
’
erreur
•
dans
cas
,
page
appeler
permettre
de
revenir
sur
page
appelant
.
Elément
de
solution
dans
page
action
trouver
code
:
if
(
isset
(
$
_POST
[
'
password
'
]
)
AND
htmlspecialchar
(
$
_POST
[
'
password
'
]
)
=
=
'
password
'
)
{
remarque
:
crypter
mot
de
passe
circulation
sur
réseau
:
https
mot
de
passe
apparaître
dans
page
action
.
,
être
dans
code
php
(
dans
if
)
,
être
visible
sur
navigateur
poste
client
.
C
’
être
sécuriser
serveur
être
sécuriser
!
:
faire
circuler
mot
de
passe
sur
réseau
,
avoir
risque
.
C
’
être
https
permettre
de
sécuriser
circulation
.
enregistrement
dans
BD
en
pratique
,
mot
de
passe
être
récupérer
dans
BD
:
:
mot
de
passe
devoir
être
enregistrer
crypté
dans
BD
.
pour
crypter
,
utiliser
fonction
crypt
:
$
hashed_password
=
crypt
(
$
password
)
pour
décrytpter
,
écrire
code
suivre
,
password
être
mot
de
passe
saisi
,
hashed_password
mot
de
passe
récupérer
dans
BD
.
if
(
crypt
(
$
password
,
$
hashed_password
)
=
=
$
hashed_password
)
{
base
PHP
–
environnement
de
développement
–
page
/
echo
`
`
mot
de
passe
correct
!
`
`
;
}
else
{
echo
`
`
mot
de
passe
incorrect
!
`
`
;
}
Deuxième
version
:
monofichier
souhaiter
coder
dans
seul
fichier
.
page
action
être
page
d
’
accueil
même
.
aller
falloir
tester
différent
cas
début
de
page
d
’
accueil
:
•
Est
dans
cas
falloir
afficher
formulaire
?
$
_POST
[
'
password
'
]
n
’
être
setté
•
Est
dans
cas
mot
de
passe
être
bon
?
$
_POST
[
'
password
'
]
=
«
password
»
•
Est
dans
cas
mot
de
passe
être
mauvais
?
$
_POST
[
'
password
'
]
!
=
«
password
»
base
PHP
–
environnement
de
développement
–
page
/
exemple
:
saisir
d
’
utilisateur
structure
code
vouloir
obtenir
page
suivant
:
utilisation
de
fonction
aller
utiliser
fonction
«
printLesUsersHTML
(
)
»
qu
’
avoir
définir
dans
exercice
sur
tableau
d
’
utilisateur
.
base
PHP
–
environnement
de
développement
–
page
/
en
cas
d
’
erreur
:
saisir
champ
,
afficher
message
qu
’
voir
en
jaune
base
PHP
–
environnement
de
développement
–
page
/
structure
de
page
HTML
page
HTML
aller
utiliser
variable
PHP
:
$
lesUsers
$
msgErr
.
avoir
page
HTML
classique
,
avec
petit
de
PHP
,
en
gris
:
<
!
DOCTYPE
html
>
<
html
>
<
head
>
<
meta
charset
=
'
'
utf-8
'
'
/
>
<
link
rel
=
'
'
stylesheet
'
'
href
=
'
'
dns-remplacer
'
'
/
>
<
title
>
tableau
<
/
title
>
<
/
head
>
<
body
>
<
?
php
echo
'
<
h@card@
>
affichage
utilisateur
<
/
h2
>
'
;
printLesUsersHTML
(
$
lesUsers
)
;
?
>
<
h@card@
>
entrer
information
dun
utilisateur
<
/
h@card@
>
<
p
>
champ
être
obligatoire
<
/
h@card@
>
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
POST
'
'
>
<
fieldset
>
<
legend
>
entrer
bon
mot
de
passe
pour
accéder
code
secret
<
/
legend
>
<
p
>
<
label
for
=
'
'
nom
'
'
>
nom
prénom
<
/
label
>
<
input
type
=
'
'
nom
'
'
name
=
'
'
nom
'
'
id
=
'
'
password
'
'
placeholder
=
'
'
nom
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
mail
'
'
>
mail
<
/
label
>
<
input
type
=
'
'
mail
'
'
name
=
'
'
mail
'
'
id
=
'
'
mail
'
'
placeholder
=
'
'
mail
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
mail
'
'
>
mot
de
passe
<
/
label
>
<
input
type
=
'
'
password
'
'
name
=
'
'
password
'
'
id
=
'
'
password
'
'
placeholder
=
'
'
password
'
'
>
<
/
p
>
<
p
>
<
label
for
=
'
'
annee
'
'
>
année
naissance
<
/
label
>
<
input
type
=
'
'
annee
'
'
name
=
'
'
annee
'
'
id
=
'
'
password
'
'
placeholder
=
'
'
annee
'
'
>
<
/
p
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
lesUsers
'
'
value
=
'
<
?
php
echo
serialize
(
$
lesUsers
)
?
>
'
>
<
p
>
<
input
type
=
'
'
submit
'
'
name
=
'
'
submit
'
'
value
=
'
'
valider
'
'
>
<
/
p
>
<
/
fieldset
>
<
/
form
>
<
?
php
if
(
isset
(
$
msgErr
)
)
{
echo
$
msgErr
;
}
?
>
<
/
body
>
<
/
html
>
base
PHP
–
environnement
de
développement
–
page
/
code
PHP
code
PHP
être
placer
début
.
avoir
étape
:
)
debug
:
afficher
$
_POST
)
inclure
fonction
)
initialiser
variable
:
$
lesUsers
)
traiter
cas
avoir
valider
saisie
.
<
?
php
/
/
:
debut
echo
'
$
_POST
:
'
;
print_r
(
$
_POST
)
;
echo
'
<
br
>
'
;
/
/
:
inclusion
fonction
include_once
(
`
`
dns-remplacer
'
'
)
;
include_once
(
`
`
dns-remplacer
'
'
)
;
/
/
:
initialiser
tableau
user
$
lesUsers
=
initLesUsers
(
)
;
/
/
:
avoir
valider
formulaire
if
(
isset
(
$
_POST
[
'
submit
'
]
)
)
{
/
/
charger
bon
$
lesUsers
$
lesUsers
=
unserialize
(
$
_POST
[
'
lesUsers
'
]
)
;
/
/
saisie
être
complet
if
(
!
isset
(
$
_POST
[
'
nom
'
]
)
or
ltrim
(
$
_POST
[
'
nom
'
]
)
=
=
'
'
or
!
isset
(
$
_POST
[
'
mail
'
]
)
or
ltrim
(
$
_POST
[
'
mail
'
]
)
=
=
'
'
or
!
isset
(
$
_POST
[
'
annee
'
]
)
or
ltrim
(
$
_POST
[
'
annee
'
]
)
=
=
'
'
or
!
isset
(
$
_POST
[
'
password
'
]
)
or
ltrim
(
$
_POST
[
'
password
'
]
)
=
=
'
'
)
{
$
msgErr
=
'
<
h@card@
style
=
'
'
background-color
:
yellow
'
'
>
champ
être
obligatoire
<
/
h2
>
'
;
}
/
/
saisie
être
complet
,
récupérer
$
lesUsers
ajouter
saisi
else
{
$
lesUsers
[
]
=
newUser
(
$
_POST
[
'
nom
'
]
,
$
_POST
[
'
mail
'
]
,
$
_POST
[
'
passwo
rd
'
]
,
$
_POST
[
'
annee
'
]
)
;
}
}
?
>
base
PHP
–
environnement
de
développement
–
page
/
conclusion
avec
organisation
,
avoir
séparer
PHP
HTML
.
C
’
être
premier
étape
vers
MVC
.
page
HTML-PHP
aller
ressembler
à
<
?
php
/
/
partie
PHP
session_start
(
)
;
/
/
ouvrir|ouvrer
session
,
c
’
être
faire
en
1er
etc
.
?
>
<
DOCTYPE
html
>
<
!
--
partie
HTML
--
>
<
/
html
>
base
PHP
–
environnement
de
développement
–
page
/
$
_SESSION
présentation
•
«
session
»
c
’
être
instance
de
fonctionnement
d
’
programme
.
•
avoir
début
fin
.
•
pour
site
web
,
session
,
c
’
être
fonctionnement
site
pour
client
,
c
’
navigateur
.
•
session
contenir
information
pouvoir
être
accessible
à
page
.
information
être
ranger
dans
tableau
associatif
$
_SESSION
précision
technique
faire
serveur
pour
savoir
qu
’
s
’
agir
de
utilisateur
?
C
’
être
cookie
de
session
permettre
de
garantir
.
cookie
n
’
avoir
de
sens|sen
pour
serveur
web
donner
information
sur
l
’
utilisateur
.
revenir
dans
chapitre
sur
cookies
.
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
session-cookies
utilisation
tableau
associatif
$
_SESSION
démarrage
d
’
session
devoir
faire
avant
code
HTML
.
session_start
(
)
pour
pouvoir
utiliser
variable
$
_SESSION
falloir
appeler
fonction
session_start
(
)
.
page
vouloir
utiliser
$
_SESSION
devoir
appeler
session_start
(
)
<
?
php
session_start
(
)
;
?
>
<
DOCTYPE
html
>
L
’
appel
de
fonction
devoir
faire
début
de
page
,
avant
<
DOCTYPE
html
>
$
_SESSION
$
_SESSION
s
’
utiliser
tableau
associatif
.
pour
enregistrer
donnée
dans
$
_SESSION
écrire
:
$
_SESSION
[
'
administrateur
'
]
=
'
Bertrand
'
;
fois
clé
«
administrateur
»
créer
,
pouvoir
tester
exister
:
If
(
isset
(
$
_SESSION
[
'
administrateur
'
]
)
{
echo
'
bonjour
'
.
$
_SESSION
[
'
administrateur
'
]
;
echo
'
être
connecter
pouvoir
accéder
back-office
'
;
}
terminer
session
technique
pouvoir
terminer
session
.
:
unset
(
$
_SESSION
[
'
administrateur
'
]
)
base
PHP
–
environnement
de
développement
–
page
/
«
unset
»
finir
session
,
supprimer
clé
dans
$
_SESSION
.
test
avec
«
isset
»
donner
réponse
faux
.
:
$
_SESSION
=
array
(
)
instruction
supprimer
variable
de
sssion
.
:
patienter
!
timeout
bouillir
d
’
temps
sans
activité
,
«
timeout
»
,
variable
de
session
être
supprimer
.
:
déconnecter
:
fermer
client
,
navigateur
.
•
quitter
navigateur
,
variable
de
session
être
supprimer
.
•
à
noter
fermer
page
sans
fermer
navigateur
supprimer
variable
de
session
.
•
à
noter
site
conserver
variable
de
session
(
connexion
)
avoir
fermer
navigateur
.
dans
cas
,
utiliser
cookies
.
revenir
.
:
session_destroy
(
)
;
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
fonction
bloquer
l
’
effet
session_start
(
)
sans
supprimer
donnée
.
nouveau
session_start
(
)
permettre
d
’
réaccéder
.
base
PHP
–
environnement
de
développement
–
page
/
TP
:
synthèse
:
site
user
objectif
:
consulter
utilisateur
connecter
admin
pour
pouvoir
ajouter
utilisateur
.
coder
en
séparer
PHP
HTML
.
reprendre
corriger
exercice
tableau
user
étape
2-fonction
étape
3-tri
.
Etape
:
affichage
utilisateur
avec
Header
Nav
L
’
objectif
être
d
’
obtenir
page
suivant
:
dns-remplacer
CSS
pour
obtenir
résultat
,
CSS
être
fournir
.
header
-
nav
pour
qu
’
fonctionner
,
gérer
header
HTML
contenir
nav
avec
lien
«
user
»
.
nav
avoir
id
=
nav
.
base
PHP
–
environnement
de
développement
–
page
/
être
de
mettre
header
dans
fichier
séparer
:
dns-remplacer
,
tout
dans
dossier
«
include
»
.
initLesUsers
(
)
,
printLesUsers
(
)
tableau
utilisateur
être
obtenir
en
utiliser
fonction
initLesUsers
(
)
printLesUsersHTML
être
fournir
dans
fichier
dns-remplacé
qu
’
falloir
inclure
.
triParNomDesc
(
)
,
triParNomAsc
(
)
ajouter
deux
bouton
:
«
tri
par
nom
desc
»
«
tri
par
nom
asc
»
.
aller
utiliser
fonction
triParNomDesc
(
)
triParNomAsc
(
)
être
définir
dans
fichier
dns-remplacé
.
après
avoir
utiliser
fonction
initLesUsers
(
)
,
devoir
vérifier
s
’
avoir
tri
à
faire
.
affichage
débug
debut
fichier
,
écrire
:
echo'POST
:
'
;
print_r
(
$
_POST
)
;
echo
'
<
br
/
>
'
;
echo'GET
:
'
;
print_r
(
$
_GET
)
;
echo
'
<
br
/
>
'
;
echo'URL
:
'
;
print_r
(
$
_SERVER
[
'
PHP_SELF
'
]
)
;
echo
'
<
br
/
>
'
;
structure
code
:
impotant
!
!
!
dossier
:
doter
d
’
dossier
css
d
’
dossier
include
.
laisser
à
racine
dns-remplacer
.
dans
fichier
dns-remplacé
,
commencer
par
code
php
:
debug
L
’
initialisation
tableau
tri
tableau
,
mettre
code
HTML
:
<
!
DOCTYPE
html
>
etc
.
base
PHP
–
environnement
de
développement
–
page
/
Etape
:
ajout
formulaire
admin-mot
de
passe
objectif
:
ajouter
formulaire
de
connexion
à
page
d
’
administration
permettre
de
saisir
nouveau
utilisateur
.
formulaire
pour
obtenir
résultat
avec
CSS
,
ajouter
dans
nav
formulaire
«
admin
,
password
,
ok
»
.
formulaire
id
=
admin
.
bouton
ok
amener
sur
page
dns-remplacer
,
qu
’
aller
écrire
à
page
suivant
.
variable
formulaire
s
’
appeler
«
admin
»
«
password
»
.
base
PHP
–
environnement
de
développement
–
page
/
Etape
:
page
d
’
administration
L
’
objectif
être
d
’
obtenir
page
suivant
:
dns-remplacer
Ø
header
de
doter
d
’
nouveau
header
:
dns-remplacer
(
dupliquer
dns-remplacer
)
.
faire
mise
à
jour
en
ajouter
lien
:
«
Admin
user
»
modifier
formulaire
de
saisie
.
pour
gérer
l
’
utilisateur
connecter
,
avoir
enregistrer
valeur
admin
mot
de
passe
dans
$
_SESSION
.
Ø
fichier
dns-remplacé
dupliquer
fichier
dns-remplacer
supprimer
concerner
tri
.
Ø
formulaire
de
saisi
base
PHP
–
environnement
de
développement
–
page
/
pour
afficher
formulaire
de
saisie
d
’
nouveau
utilisateur
,
utiliser
l
’
exercice
de
l
’
étape
:
03exercice-tableau-users-formulaire
Ø
gérer
entrée
dans
deux
page
dans
premier
temps
,
gérer
conséquence
bouton
autre
l
’
accès
à
page
:
vérifier
mot
de
passe
,
n
’
enregistrer
nouveau
user
.
base
PHP
–
environnement
de
développement
–
page
/
Etape
:
vérifier
login
objectif
:
vérifier
de
mot
de
passe
.
en
cas
d
’
erreur
,
afficher
page
d
’
erreur
.
en
cas
de
réussite
,
faire
en
sorte
l
’
utilisateur
rester
connecter
s
’
cliquer
sur
menu
«
user
»
.
gérer
déconnexion
.
page
d
’
erreur
pour
obtenir
page
d
’
erreur
,
créer
nouveau
page
:
dns-remplacer
C
’
être
page
HTML
inclure
dns-remplacé
affiche
message
d
’
erreur
.
pouvoir
tester
page
.
vérification
login
–
mot-de-passe
dans
page
d
’
admin
,
vérifier
début
avoir
recevoir
bon
login
–
motDePasse
.
vérifier
deux
champ
être
settés
qu
’
contenir
,
par
exemple
«
admin
»
«
admin
»
.
c
’
être
cas
,
enregistrer
valeur
de
$
_SESSION
[
‘
admin
’
]
.
commencer
par
faire
session_start
(
)
en
début
de
page
.
tester
$
_SESSION
[
‘
admin
’
]
être
setté
.
n
’
être
cas
,
include
dns-remplacer
quitter
page
.
ajouter
echo'SESSION
:
'
;
print_r
(
$
_SESSION
)
;
echo
'
<
br
/
>
'
;
pour
debug
.
gestion
de
déconnexion
dans
page
user
,
tester
$
_POST
[
'
deconnexion
'
]
être
setté
(
venir
bouton
déconnexion
)
.
c
’
être
cas
,
unset
$
_SESSION
[
'
admin
'
]
dans
page
d
’
admin
,
cliquer
sur
user
,
revenir
à
page
user
.
falloir
rester
sur
admin
.
pour
,
afficher
page
admin
,
falloir
selectionner
header
headerAdmin
selon
$
_SESSION
[
‘
admin
’
]
être
setté
.
base
PHP
–
environnement
de
développement
–
page
/
Etape
:
enregistrer
nouveau
user
objectif
:
reprendre
l
’
exercice
de
l
’
étape
:
03-exercice-tableau-users-formulaire
exercice
permettre
d
’
ajouter
utilisateur
dans
tableau
en
gérer
champ
hidden
fonction
serialize
(
)
.
solution
:
dans
exercice
,
falloir
faire
circuler
tableau
utilisateur
entre
page
,
dans
cas
.
simple
être
de
mettre
dans
$
_SESSION
.
avoir
instruction
:
$
_SESSION
[
'
lesUsers
'
]
=
serialize
(
$
lesUsers
)
;
dans
page
dns-remplacer
avant
d
’
initialiser
tableau
$
lesUsers
,
tester
$
_SESSION
[
'
lesUsers
'
]
être
setté
.
c
’
être
cas
,
$
lesUsers
valoir
contenu
de
$
_SESSION
[
'
lesUsers
'
]
.
$
lesUsers
=
unserialize
(
$
_SESSION
[
'
lesUsers
'
]
)
;
dans
page
dns-remplacer
pour
initialiser
tableau
$
lesUsers
,
récupérer
dans
$
_SESSION
:
$
lesUsers
=
unserialize
(
$
_SESSION
[
'
lesUsers
'
]
)
;
faire
l
’
insertion
nouveau
user
,
s
’
avoir
lieu
mettre
à
jour
$
_SESSION
:
$
_SESSION
[
'
lesUsers
'
]
=
serialize
(
$
lesUsers
)
;
insertion
nouveau
user
pouvoir
reprendre
l
’
exercice
de
l
’
étape
:
03-exercice-tableau-users-formulaire
en
l
’
adapter
.
base
PHP
–
environnement
de
développement
–
page
/
Etape
:
création
d
’
fichier
dns-remplacer
–
fonction
header
(
URL
)
objectif
vouloir
projet
démarrer
seul
arriver
dans
dossier
.
idée
pouvoir
choisir
de
renommer
page
dns-remplacer
en
dns-remplacé
de
mettre
à
jour
appel
à
page
dans
code
.
être
long
à
refaire
changer
de
page
d
’
accueil
!
solution
:
fonction
header
(
URL
)
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Header
permettre
de
demander
URL
,
href
.
pouvoir
passer
paramètre
,
pour
URL
.
être
utile
passer
MVC
.
devoir
être
utiliser
avant
code
HTML
.
Ø
exemple
de
fichier
avec
header
<
?
php
header
(
'
location
:
dns-remplacer
'
)
;
?
>
base
PHP
–
environnement
de
développement
–
page
/
variable
SUPERGLOBALES
présentation
être
tableau
associatif
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
variable
superglobale
être
tableau
associatif
.
être
accessible
à
moment
dans
page
,
être
contexte
(
dans
fonction
)
.
S_GET
-
$
_POST
-
$
_SESSION
avoir
aborder
variable
superglobale
.
$
_COOKIE
$
_REQUEST
$
_COOKIE
être
variable
utiliser
pour
conserver
information
sur
avoir
machine
client
via
cookies
.
Cf
.
chapitre
suivre
.
$
_REQUEST
contenir
par
défaut
$
_COOKIE
,
$
_GET
$
_POST
.
S_FILE
$
_FILES
:
être
variable
utiliser
pour
téléchargement
de
fichier
via
HTTP
par
méthode
POST
.
Cf
.
chapitre
suivre
.
$
_SERVER
$
_
ENV
$
_SERVER
:
variable
concerner
serveur
programme
.
trouver
par
exemple
:
$
_SERVER
[
‘
REMOTE_ADDR
’
]
être
l
’
adresse
IP
client
demander
page
courant
.
$
_ENV
:
variable
concerner
variable
d
’
environnement
serveur
.
superglobale
être
utiliser
.
afficher
superglobale
:
print_r
(
)
var_dump
(
)
fonction
print_r
var_dump
afficher
tableau
associatif
en
ligne
.
avec
balise
<
PRE
>
<
/
PRE
>
,
pouvoir
avoir
affichage
avec
ligne
par
couple
key-value
.
base
PHP
–
environnement
de
développement
–
page
/
$
_FILE
objectif
:
upload
transmettre
fichier
à
script
PHP
.
Ø
gestion
chargement
de
fichier
•
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Ø
chargement
de
fichier
par
méthode
POST
•
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
Ø
$
_FILES
•
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
•
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
transmettredes-donnees-avec-les-formulaire
technique
:
formulaire
spécial
•
balise
FORM
avec
attribut
method
=
'
'
POST
'
'
attriubt
enctype
=
'
'
multipart
/
formdata
'
'
•
balise
input
avec
attribut
typer
=
'
'
file
'
'
attribut
name
=
'
'
clé
nom
fichier
dans
$
_FILES
'
'
exemple
:
$
_FILE
fichier
de
balise
<
FORM
>
contenir
formulaire
suivre
:
<
form
method
=
'
'
post
'
'
action
=
'
'
dns-remplacer
'
'
enctype
=
'
'
multipart
/
form-data
'
'
>
sélectionner
fichier
:
<
input
type
=
'
'
file
'
'
name
=
'
'
userfile
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
>
<
/
form
>
L
’
attribut
name
donner
nom
de
clé
dans
tableau
associatif
$
_FILES
avoir
valeur
fichier
qu
’
avoir
uploadé
.
input
typer
=
«
file
»
générer
interface
de
sélection
de
fichier
sur
l
’
ordinateur
client
.
fichier
d
’
action
Ø
résultat
-
$
_FILE
dans
page
dns-remplacé
,
variable
$
_FILE
[
‘
userfile
’
]
être
définir
,
avec
champ
suivant
:
name
,
type
,
size
,
tmp_name
,
error
.
Array
(
[
userfile
]
=
>
Array
(
[
name
]
=
>
dns-remplacé
base
PHP
–
environnement
de
développement
–
page
/
[
type
]
=
>
text
/
php
[
tmp_name
]
=
>
/
application
/
MAMP
/
tmp
/
php
/
phpYpRqlW
[
error
]
=
>
[
size
]
=
>
)
)
Ø
move_uploaded_file
dans
page
action
,
aller
mettre
fichier
charger
dans
répertoire
qu
’
vouloir
.
fichier
être
charger
dans
répertoire
temporaire
:
$
_FILE
[
‘
userfile
’
]
[
‘
tmp_name
]
.
pour
mettre
vouloir
,
utiliser
fonction
:
move_uploaded_file
(
$
nomDuFichierTmpSurLeServeur
,
$
nomDuFichierSurLeSite
)
$
nomFile
=
$
_FILES
[
'
userfile
'
]
[
'
name
'
]
;
echo
'
fichier
charger
:
'
.
$
nomFile
.
'
<
br
>
'
;
$
tmpDir
=
$
_FILES
[
'
userfile
'
]
[
'
tmp_name
'
]
;
echo
'
fichier
stocker
:
'
.
$
tmpDir
.
'
<
br
>
'
;
/
/
uploade
fichier
temporaire
$
tmpDir
:
nouveau
fichier
/
/
s
’
appeler
$
nomFile
,
trouver
dans
repertoire
courant
,
/
/
repertoire
fichier
php
s
’
exécuter
$
res
=
move_uploaded_file
(
$
tmpDir
,
$
uploadDir
.
$
nomFile
)
;
if
(
$
res
)
echo
'
Upload
réussi
<
br
>
'
;
else
echo
'
L\'upload
avoir
échouer
<
br
>
'
;
test
tester
avec
upload
d
’
fichier
pouvoir
trouver
n
’
importer
sur
machine
navigateur
.
pouvoir
uploader
n
’
importer
fichier
.
programme
de
test
afficher
contenu
fichier
texte
,
fichier
php
sql
,
image
.
base
PHP
–
environnement
de
développement
–
page
/
fichier
présentation
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
lire-et-ecrire-dansun-fichier-5
fichier
permettre
d
’
enregistrer
information
sur
serveur
pour
consulter
modifier
.
fonctionnement
général
être
langage
C
.
autoriser
l
’
écriture
de
fichier
sur
serveur
:
CHMOD
CHMOD
être
commande
linux
pour
donner
droit
en
lecture
,
écriture
exécution
sur
fichier
dossier
.
pour
écrire
dans
fichier
sur
serveur
,
falloir
dossier
contenir
fichier
donner
droit
utilisateur
de
lire
d
’
écrire
(
d
’
exécuter
)
.
C
’
être
valeur
.
manipulation
faire
sur
serveur
,
à
travers
à
logiciel
FTP
par
exemple
.
syntaxe
général
de
manipulation
fichier
avoir
étape
dans
manipulation
fichier
:
:
créer
ouvrir
fichier
•
fopen
(
)
:
traitement
Ø
Ø
Ø
Ecrire
dans
fichier
:
•
fputs
(
)
pour
écrire
ligne
,
•
fputc
(
)
pour
écrire
caractère
,
•
fprintf
(
)
pour
écrire
chaîne
formater
,
•
etc
.
lire
dans
fichier
:
•
fgets
(
)
pour
lire
ligne
,
•
fgetc
(
)
pour
lire
caractère
,
fseek
pour
déplacer
dans
fichier
,
•
fscanf
(
)
pour
lire
chaîne
formater
,
•
etc
.
déplacer
dans
fichier
,
•
fseek
(
)
:
fermer
fichier
•
fclose
(
)
base
PHP
–
environnement
de
développement
–
page
/
algorithmique
fichier
type
fichier
type
être
pointeur
donner
adresse
de
élément
fichier
(
de
abord
adresse
premier
élément
fichier
.
aller
contenir
de
autre
information
:
être
faire
structure
un
champ
contenir
adresse
de
élément
courir
fichier
.
falloir
comprendre
dans
programme
,
avoir
variable
habituel
(
structure
importer
structure
)
contenir
adresse
de
élément
de
fichier
.
ptfich
fichier
programmer
ROM
ouvrir
fichier
créer
nécessaire
:
fopen
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
$
ptfich
=
fopen
(
`
`
nomDuFichierSurLeDisque
'
'
,
`
`
mode
d
’
ouverture
'
'
)
;
nom
fichier
sur
disque
pouvoir
être
absoudre
relatif
.
avoir
mode
d
’
ouverture
fichier
:
r
,
r+
,
w
,
w+
,
a+
,
etc
.
«
r
»
permettre
lecture
seul
,
«
r+
»
lecture
l
’
écriture
,
«
w
»
l
’
écriture
seul
avec
création
fichier
n
’
exister
,
«
w+
»
,
lecture
l
’
écriture
avec
création
fichier
n
’
exister
,
etc
.
voir
documentation
de
référence
pour
détail
.
fermer
fichier
:
fclore
falloir
fermer
fichier
qu
’
utiliser
pour
permettre
à
d
’
autre
de
utiliser
.
$
booléen
fclose
(
$
ptFich
)
;
lire
dans
fichier
$
string
fgets
(
$
ptFich
)
;
fgets
permettre
de
lire
ligne
courant
.
avoir
d
’
autre
fonction
fgetc
,
fscanf
,
fread
,
etc
.
voir
par
exemple
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
voir
.
écrire
dans
fichier
$
int
fwrite
(
$
ptFich
,
$
string
)
;
fwrite
écrire
$
string
passer
en
paramètre
.
fputs
être
de
fwrite
.
fonction
retourner
nombre
d
’
octet
écrire
.
=
false
,
octet
écrire
.
fonction
fprintf
être
autre
fonction
permettre
d
’
écrire
dans
fichier
avec
système
de
formatage
.
base
PHP
–
environnement
de
développement
–
page
/
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
déplacer
dans
fichier
pouvoir
déplacer
dans
fichier
d
’
nombre
d
’
octet
préciser
.
nombre
être
négatif
,
partir
de
fin
fichier
.
fseek
(
$
ptFich
,
nombreDOctets
)
;
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
repérer
fin
fichier
pouvoir
vérifier
à
moment
$
ptfich
être
arriver
à
fin
ficher
.
$
booléen
feof
(
$
ptFich
)
;
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
exemple
–
tableau-users-Etape-4
:
codage
avec
fichier
reprendre
l
’
étape
l
’
étape
aller
rajouter
fonction
de
traitement
de
fichier
.
doter
d
’
fonction
d
’
écriture
tableau
$
lesUsers
dans
fichier
:
function
ecrireLesUsersDansFichier
(
$
nomFichier
,
$
lesUsers
)
d
’
fonction
de
lecture
d
’
tableau
$
lesUsers
à
partir
d
’
fichier
:
function
lireLesUsersDansFichier
(
$
nomFichier
,
&
$
lesUsers
)
fonction
ecrireLesUsersDansFichier
function
ecrireLesUsersDansFichier
(
$
nomFichier
,
$
lesUsers
)
{
$
ptfich
=
fopen
(
$
nomFichier
,
`
`
w
'
'
)
;
foreach
(
$
lesUsers
avoir
$
unUser
)
{
foreach
(
$
unUser
avoir
$
element
)
{
echo
$
element
.
'
--
'
;
fprintf
(
$
ptfich
,
`
`
%
s
--
`
`
,
$
element
)
;
}
echo
'
<
br
/
>
'
;
fprintf
(
$
ptfich
,
`
`
\n
'
'
)
;
/
/
\n
seul
pour
saut
de
ligne
}
fclose
(
$
ptfich
)
;
}
fonction
commencer
par
fopen
retourner
$
ptfich
:
chercher
l
’
usage
de
fopen
.
pour
écrire
dans
fichier
,
passer
«
w
»
fopen
.
écrire
dans
fichier
avec
fprintf
:
chercher
l
’
usage
de
fprintf
.
pour
passer
à
ligne
,
écrire
:
fprintf
(
$
ptfich
,
`
`
\n
'
'
)
;
,
fclose
ferme
fichier
.
fonction
lireLesUsersDansFichier
function
lireLesUsersDansFichier
(
$
nomFichier
,
&
$
lesUsers
)
{
$
ptfich
=
fopen
(
$
nomFichier
,
`
`
r
'
'
)
;
while
(
!
feof
(
$
ptfich
)
)
{
/
/
lire
param
prénom
nom
être
chaîne
séparer
/
/
mettre
--
être
dans
fichier
base
PHP
–
environnement
de
développement
–
page
/
/
/
considérer
champ
contenir
de
espace
$
lectureOK
=
fscanf
(
$
ptfich
,
`
`
%
s
%
s
--
%
s
--
%
s
--
%
s
--
`
`
,
$
prenom
,
$
nom
,
$
mail
,
$
motDePasse
,
$
anneeNaissance
)
;
if
(
!
$
lectureOK
)
{
/
/
avoir
pb
.
de
lecture
,
sortir
return
;
/
/
pouvoir
gérer
!
}
$
unUser
=
newUser
(
$
prenom
.
'
'
.
$
nom
,
$
mail
,
$
motDePasse
,
$
anneeNaissance
)
;
printUnUser
(
$
unUser
)
;
$
lesUsers
[
]
=
$
unUser
;
}
fclose
(
$
ptfich
)
;
return
;
}
fonction
commencer
par
fopen
en
mode
«
r
»
.
lire
dans
fichier
avec
fscanf
:
récupérer
champ
d
’
utilisateur
.
créer
l
’
utilisateur
mettre
dans
$
lesUtilisateurs
.
,
fclose
ferme
fichier
.
base
PHP
–
environnement
de
développement
–
page
/
$
_COOKIES
:
exemple
présentation
cookies
être
petit
fichier
(
<
4ko
)
stocker
par
navigateur
sur
poste
client
pour
conserver
information
pour
prochain
fois
.
pouvoir
garder
trace
de
visite
d
’
site
pour
visite
suivant
.
appeler
témoin
de
connexion
.
seul
domaine
avoir
créer
cookie
pouvoir
relire
.
utilisateur
navigateur
pouvoir
désactiver
cookies
pour
domaine
particulier
.
selon
législation
en
vigueur
,
l
’
utilisateur
devoir
donner
accord
pour
recevoir
cookies
(
c
’
être
cas
en
France
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
session-cookies
principe
de
codage
pouvoir
enregistrer
cookies
:
fonction
setcookie
.
pouvoir
lire
cookies
:
dans
variable
$
_COOKIE
.
enregistrer
cookie
sur
machine
client
:
setcookie
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
setcookie
permettre
d
’
enregistrer
cookie
sur
machine
client
.
setcookie
devoir
être
écrire
avant
code
HTML
:
avant
DOCTYPE
.
par
exemple
,
arriver
dans
page
suite
à
validation
d
’
formulaire
POST
avec
variable
nom
variable
prenom
dans
$
_POST
,
pouvoir
enregistrer
cookies
:
nom
prénom
de
l
’
utilisateur
:
<
?
php
if
(
isset
(
$
_POST
[
'
nom
'
]
setcookie
(
'
nom
'
,
$
_POST
[
'
nom
'
]
,
time
(
)
*
*
)
;
if
(
isset
(
$
_POST
[
'
prenom
'
]
setcookie
(
'
prenom
'
,
$
_POST
[
'
prenom
'
]
,
time
(
)
*
*
)
;
?
>
<
!
DOCTYPE
html
>
...
cookie
en
général
minimum
caractéristique
:
•
nom
•
valeur
•
date
d
’
expiration
:
aujourd
’
hui
(
time
)
+
seconde|second
:
semaine
.
accéder
cookie
dans
code
:
$
_COOKIE
vouloir
afficher
«
bonjour
nom
prenom
»
l
’
utilisateur
arriver
sur
site
qu
’
être
venir
qu
’
avoir
enregistrer
cookies
de
nom
de
prenom
,
utiliser
tableau
associatif
$
_COOKIE
.
base
PHP
–
environnement
de
développement
–
page
/
dans
header
,
par
exemple
,
pouvoir
récupérer
nom
prenom
pour
afficher
bonjour
autre
chose
:
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
nom
=
COOKIE
[
'
nom
'
]
;
}
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
prenom
=
COOKIE
[
'
nom
'
]
;
}
/
/
pouvoir
faire
qu
’
vouloir
de
$
nom
$
prenom
Ø
sécuriser
cookies
attention
:
cookies
être
modifiable
par
client
!
falloir
considérer
information
sûr
!
falloir
utiliser
fonction
htmlspecialchars
pour
protéger
contenu
cookie
:
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
nom
=
htmlspecialchar
(
COOKIE
[
'
nom
'
]
)
;
}
if
(
isset
(
$
_COOKIE
[
'
nom
'
]
)
)
{
$
prenom
=
htmlspecialchar
(
COOKIE
[
'
nom
'
]
)
;
}
/
/
pouvoir
faire
qu
’
vouloir
de
$
nom
$
prenom
modifier
supprimer
cookie
pour
modifier
supprimer
cookie
,
reprendre
fonction
setcookie
.
pour
modification
,
garder
même
nom
pouvoir
changer
valeur
/
date
d
’
expiration
.
pour
suppression
,
garder
même
nom
passer
date
d
’
expiration
avant
date
heure
actuel
:
passer
«
time
(
)
–
»
par
exemple
.
précision
consulter
cookies
sur
navigateur
sur
navigateur
,
en
afficher
outil
de
développement
ressource
de
page
pouvoir
accéder
ressource
stockage
visualiser
cookies
.
aller
voir
cookie
.
voir
cookie
PHPSESSID
:
PHP
SESS
ID
:
c
’
être
cookie
créer
par
PHP
avec
valeur
ID
de
session
permettre
de
retrouver
l
’
utilisateur
.
autre
paramètre
setcookie
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
autre
paramètre
à
fonction
setcookie
permettre
de
sécuriser
cookies
.
dernier
,
httponly
,
s
’
être
à
true
pouvoir
limiter
risque
de
faille
XSS
en
interdire
Javascript
pouvoir
accéder
cookie
.
setcookie
(
'
nom
'
,
'
Bertrand
Liaudet
'
,
time
(
)
*
*
,
null
,
null
,
false
,
true
)
;
base
PHP
–
environnement
de
développement
–
page
/
bilan
construction
d
’
site
variable
de
page
•
site
être
constituer
de
«
page
»
correspondre
à
«
main
»
.
•
page
gérer
variable
de
page
,
local
global
.
•
variable
d
’
page
être
visible
dans
autre
page
.
•
page
pouvoir
échanger
information
par
variable
superglobale
,
par
fichier
par
BD
.
Echange
entre
page
•
page
appeler
autre
page
,
pouvoir
fournir
de
l
’
information
dans
tableau
$
_GET
$
_POST
.
•
page
pouvoir
lire
écrire
dans
tableau
$
_SESSION
qu
’
aller
partager
.
•
page
pouvoir
écrire
cookies
lire
cookies
dans
tableau
$
_COOKIES
.
•
page
pouvoir
lire
écrire
dans
fichier
qu
’
pouvoir
partager
.
•
page
pouvoir
lire
écrire
dans
base
de
donnée
qu
’
pouvoir
partager
.
•
page
pouvoir
lire
information
concerner
serveur
client
dans
tableau
$
_ENV
$
_SERVER
base
PHP
–
environnement
de
développement
–
page
/
appel
d
’
page
pouvoir
appeler
page
de
façon
:
<
avoir
href
=
«
url
»
>
dans
cas
,
l
’
information
circuler
par
$
_GET
sur
l
’
url
.
https
:
/
/
dns-remplacer
/
tags
/
tag_a.asp
<
form
action
=
«
url
»
method
=
«
»
>
dans
cas
,
l
’
information
circuler
par
$
_GET
$
_POST
selon
valeur
de
l
’
attribut
method
dans
balise
form
(
GET
POST
)
.
http
:
/
/
dns-remplacer
/
tags
/
att_form_
dns-remplacé
header
(
‘
location
:
url
’
)
dans
cas
l
’
information
circuler
par
$
_GET
sur
l
’
url
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
base
PHP
–
environnement
de
développement
–
page
/
.HTACCESS
.HTPASSWD
présentation
fichier
.htaccess
.htpasswd
permettre
de
protéger
dossier
fichier
sur
site
web
.
«
.
»
début
nom
faire
fichier
être
cacher
sur
os
Linux
.
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
proteger-undossier-avec-un-htaccess
http
:
/
/
dns-remplacer
/
dns-remplacer
http
:
/
/
dns-remplacer
/
dns-remplacer
sur
sécurité
site
web
par
exemple
:
https
:
/
/
dns-remplacer
/
dns-remplacer
.htaccess
fichier
.htaccess
permettre
d
’
interdire
l
’
accès
à
dossier
.
mettre
fichier
.htaccess
dans
dossier
concerner
.
pouvoir
préciser
de
chose
dans
fichier
.
minimum
,
pour
bloquer
l
’
affichage
contenu
:
option
-
indexer
.htpasswd
fichier
.htpasswd
permettre
de
protéger
dossier
par
mot
de
passe
.
être
associer
à
fichier
.htaccess
particulier
contenu
fichier
.htaccess
AuthName
`
`
page
de
administration
protéger
'
'
AuthType
basic
AuthUserFile
`
`
/
C
:
/
wamp
/
www
/
admin
/
.htpasswd
'
'
Require
valid-user
•
AuthName
être
texte
répondre
à
tentative
d
’
accès
.
•
AuthUserFile
être
chemin
vers
fichier
.htpasswd
.
chemin
pouvoir
être
absoudre
relatif
selon
hébergeur
!
en
local
:
absolu
.
en
général
:
absolu
.
pour
connaître
chemin
absolu
d
’
fichier
:
<
?
php
echo
realpath
(
'
dns-remplacer
'
)
;
?
>
contenir
fichier
.htpasswd
user1
:
password1
base
PHP
–
environnement
de
développement
–
page
/
user2
:
password2
sous
WAMP
mot
de
passe
être
spécifé
en
clair
:
bertrand
:
motDePasseBertrand
admin
:
motDePasseAdmin
sur
serveur
en
ligne
mot
de
passe
devoir
être
crypté
:
bertrand
:
$
$
MEqT
/
/
cb
$
dns-remplacer
/
wDlIfQ81
admin
:
$
$
/
lgP8dYa
$
sQNXcCP47KhP1sneRIZoO0
Ø
Crypter
mot
de
passe
<
?
php
echo
crypt
(
'
monpasswd
'
)
;
?
>
base
PHP
–
environnement
de
développement
–
page
/
PHP
–
MYSQL
-
MVC
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
presentation-desbases-de-donnees-2
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
open
class
Room
sommaire
sommaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
-
MySQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
installation
fichier
de
test
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
être
présenter
dans
chapitre
en
vert
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exercice
à
faire
être
présenter
dans
chapitre
en
jaune
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilisation
de
PHPMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Oouvrir
phpMyAdmin
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
créer
table
tuples
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
mettre
à
jour
colonne
BD
à
gauche
:
onglet
flèche
circulaire
vert
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
afficher
contenu
de
table
utilisateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exécuter
select
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exporter
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
importer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
connexion
à
BD
print_r
contenu
d
’
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
utilisation
de
base
de
donnée
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
connexion
à
BD
:
new
PDO
(
exemple
–
connexion
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
explication
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
afficher
contenu
d
’
table
:
query
(
)
,
fetch
(
)
,
print_r
(
exemple
–
select
)
...
...
...
...
...
...
...
...
...
...
...
.
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
explication
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
résultat
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
charger
exemple
tester
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
vocabulaire
de
programmation
orienter
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
classe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
objet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
méthode
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
exception
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
guides
de
style
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
technique
de
programmation
–
PDO
PDOStatement
-
$
bdd
,
$
requete
,
$
reqSQL
...
...
...
...
...
...
...
...
...
...
.
terminologie
:
$
bdd
-
$
reqSQL
-
$
requete
-
$
ligne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
$
bdd
(
PDO
)
–
query
-
prepare
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
$
requete
(
PDOStatement
)
-
execute
-
fetch
-
closeCurseur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
synthèse
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
accès
champ
,
gestion
erreur
,
order
by
,
like
,
limit
(
exemple
–
select
Where
)
...
...
...
...
...
...
...
...
charger
BD
pour
pouvoir
tester
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accéder
champ
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
select
attribut1
,
attribut2
,
Where
,
Order
by
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
select
...
like
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
select
...
Order
by
,
limit
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
requête
variable
:
where
realisateur
=
?
(
exemple
–
select
variable
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
PHP
–
MySQL
–
MVC
-
page
/
solution
basique
à
éviter
:
risque
XSS
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
solution
avec
requête
préparer
:
where
?
,
prepare
execute
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
remplacer
?
par
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Déboguer
:
or
die
bdd-
>
errorInfo
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
créer
$
bdd
avec
gestion
erreur
(
voir
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Aternatif
:
exécuter
requête
(
query
execute
)
«
or
die
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
ajouter
,
modifier
,
supprimer
donnée
dans
table
(
exemple
–
insert-update-delete
)
...
...
...
.
.
via
phpMyAdmin
–
afficher
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
via
phpMyAdmin
–
SQL
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
via
php
-
insert
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
via
php
–
DELETE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
via
php
–
UPDATE
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
bon
usage
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
TP
–
insert
Update
Delete
consultation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
site
artiste
–
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
:
Etape
:
œuvre
–
TP
:
installer
,
tester
regarder
code
...
...
...
.
.
contenu
dossier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
installation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
tester
code
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
TP3
:
Etape
:
œuvre
,
exposition
œuvre
exposer
–
gestion
basique
dans
HTML
...
...
...
...
...
...
...
.
.
)
choisir
«
œuvre
»
,
obtenir
être
page
d
’
accueil
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
)
choisir
«
exposition
»
obtenir
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
)
cliquer
sur
exposition
,
obtenir
liste
œuvre
exposer
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP
:
Etape
–
l
’
étape
avec
séparation
PHP
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
problématique
d
’
organisation
de
base
:
fichier
pour
projet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
question
à
poser
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
schéma
de
synthèse
à
réaliser
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
problématique
:
fichier
,
dossier
pour
projet
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
organisation
non-MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
principe
d
’
organisation
non-MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
défaut
de
l
’
organisation
non-MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
présentation
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
MVC
:
modèle
-
vue
-
contrôleur
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
modèle
(
SQL
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
vue
(
HTML
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
contrôleur
(
PHP
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonctionnement
global
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
MVC
:
design
pattern
tête
premier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
organisation
répertoire
fichier
dans
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
organisation
de
répertoire
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fichier
«
modèle
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fichier
«
contrôleur
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fichier
«
vue
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
faire
contrôleur
=
contrôleur
global
=
routeur
=
indexSwitch
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
problème
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
solution
:
«
front
contrôleur
»
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
fichier
dns-remplacé
:
routeur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
principe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
empty
(
)
isset
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Include
entêter
pied
de
page
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
déconnexion
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Debug
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
variante
sans
switch
:
court
!
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PHP
–
MySQL
–
MVC
-
page
/
fichier
dns-remplacé
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
MVC
–
exemple
:
site
artiste
V1-MVC
-
affichage
œuvre
-
tester
l
’
exemple
...
...
...
...
...
...
...
...
...
.
.
organisation
dossier
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
TP
site
artiste
MVC
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
TP-MVC-V2
:
site
artiste
V2
–
MVC
:
affichage
de
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP-MVC-V3
:
site
artiste
V3
–
MVC
:
administration
œuvre
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
page
d
’
administration
œuvre
pouvoir
ressembler
à
:
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
connexion
administrateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
vérifier
login
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
TP-MVC-V4
:
site
artiste
V4
–
MVC
:
administration
exposition
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
Edition
:
mars
PHP
–
MySQL
–
MVC
-
page
/
PHP
-
MYSQL
PHP-MySQL
:
https
:
/
/
dns-remplacer
/
course
/
concevez-votre-site-web-avec-php-et-mysql
/
presentation-desbases-de-donnees-2
Manuel
de
référence
PHP
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Manuel
de
référence
SQL
:
http
:
/
/
dns-remplacer
/
sql
/
installation
fichier
de
test
exemple
cours|cour
être
dans
fichier
zip
fournir
avec
l
’
article
cours|cour
:
00-Exemples-PHP-
dns-remplacer
charger
fichier
mettez-le
dans
dossier
Partie_4
répertoire
web
«
www
»
serveur
WAMP
.
exemple
être
présenter
dans
chapitre
en
vert
.
exercice
à
faire
être
présenter
dans
chapitre
en
jaune
.
utilisation
de
PHPMyAdmin
Oouvrir
phpMyAdmin
icône
Wamp
/
bouton
droit
/
phpMyAdmin
créer
base
de
donné
onglet
base
de
donnée
dans
champ
«
nom
de
base
de
donnée
»
saisir
:
«
BD_Utilisateur
»
venir
de
créer
BD_Utilisateur
.
apparaître
dans
navigateur
à
gauche
.
créer
table
tuples
aller
dans
l
’
onget
SQL
.
aller
créer
table
suivant
avec
tuples
associer
(
fichier
BD_
dns-remplacer
de
l
’
exercice
.
CREATE
tabler
utilisateur
(
id
int
(
)
primary
key
AUTO_INCREMENT
,
prenomNom
varchar
(
)
NOT
NULL
,
adMail
varchar
(
)
NOT
NULL
,
motDePasse
varchar
(
)
NOT
NULL
,
PHP
–
MySQL
–
MVC
-
page
/
annee
int
(
)
NOT
NULL
)
ENGINE
=
InnoDB
;
insert
into
utilisateur
valoir
(
NULL
,
'
Sia
PEI
'
,
'
ji
@
dns-remplacer
'
,
'
jipei
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Yawei
CAI
'
,
'
jawei
@
dns-remplacer
'
,
'
yaweicai
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Zikeng
PENG
'
,
'
zikeng
@
dns-remplacer
'
,
'
zikeng
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Jiawen
LI
'
,
'
jiawen
@
dns-remplacer
'
,
'
jiawen
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Xiaoyu
LIU
'
,
'
xiowyu
@
dns-remplacer
'
,
'
liu
'
,
)
;
insert
into
utilisateur
valoir
(
NULL
,
'
Olivier
TRAN
'
,
'
tran
@
gmailcom
'
,
'
olivier
'
,
)
;
coller
code
dans
zone
de
saisie
SQL
exécuter
.
table
être
créer
avec
tuples
.
mettre
à
jour
colonne
BD
à
gauche
:
onglet
flèche
circulaire
vert
cliquer
sur
flèche
circulaire
vert
pour
mettre
à
jour
colonne
BD
.
pouvoir
ouvrir
BD
«
BD_Utilisateur
»
.
voir
apparaître
table
«
utilisateur
»
.
afficher
contenu
de
table
utilisateur
en
cliquer
sur
table
dans
colonne
BD
,
voir
apparaître
liste
tuples
.
exécuter
select
en
aller
dans
l
’
onglet
SQL
,
pouvoir
saisir
requête
.
par
exemple
:
select
*
FROM
`
utilisateur
`
WHERE
id
=
exporter
pouvoir
exporter
BD
dans
différent
format
:
SQL
:
Ca
générer
script
SQL
permettre
de
reconstituer
BD
à
l
’
identique
,
sauvegarde
.
exporter
BD
générer
regarder
script
.
CSV
:
Ca
générer
fichier
texte
qu
’
pouvoir
importer
sur
Excel
.
exporter
BD
en
format
CSV
importer
fichier
CSV
dans
Excel
.
importer
commencer
par
créer
BD
.
,
pouvoir
importer
contenu
de
BD
dans
différent
format
:
SQL
:
choisir
fichier
à
importer
.
C
’
être
fichier
avec
code
SQL
(
DDL
DML
:
CREATE
table
insert
INTO
)
.
par
exemple
,
c
’
être
fichier
exporter
de
sauvegarde
.
PHP
–
MySQL
–
MVC
-
page
/
CSV
:
pouvoir
importer
fichier
Excel
avoir
être
enregistrer
format
CSV
.
falloir
préciser
séparateur
de
colonne
(
«
;
»
en
CSV
)
préciser
colonne
avoir
premier
ligne
avec
nom
de
colonne
.
pouvoir
dire
de
s
’
arrêter
en
cas
d
’
erreur
d
’
insert
.
falloir
ajouter
contrainte
d
’
intégrité
dans
table
.
mettre
clé
primaire
étranger
donner
nom
à
table
.
PHP
–
MySQL
–
MVC
-
page
/
connexion
à
BD
print_r
contenu
d
’
table
utilisation
de
base
de
donnée
en
PHP
jeu
de
fonction
(
api
)
permettre
de
connecter
à
BD
de
l
’
utiliser
:
mysql
,
mysqli
PDO
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
jeu
mysql
être
ancien
:
valoir
l
’
éviter
.
pouvoir
utiliser
mysqli
PDO
(
PHP
dater
Object
)
,
PDO_MYSQL
.
L
’
intérêt
PDO
être
c
’
être
interface
d
’
abstraction
permettre
l
’
utilisation
de
n
’
importer
BD
.
de
être
«
orienter
objet
»
.
utiliser
PDO_MYSQL
http
:
/
/
dns-remplacer
/
manual
/
/
dns-remplacer
connexion
à
BD
:
new
PDO
(
exemple
–
connexion
)
code
<
?
php
function
connexionBD
(
$
dbname
)
{
/
/
paramètre
de
base
de
donnée
$
sgbdname
=
'
mysql
'
;
$
host
=
'
localhost
'
;
$
charset
=
'
utf8
'
;
/
/
dsn
:
dater
source
name
$
dsn
=
$
sgbdname
.
'
:
host
=
'
.
$
host
.
'
;
dbname
=
'
.
$
dbname
.
'
;
charset
=
'
.
$
charset
;
/
/
utilisateur
connecter
à
base
de
donnée
$
username
=
'
root
'
;
$
password
=
'
root
'
;
/
/
pour
avoir
erreur
SQL
clair
$
erreur
=
array
(
PDO
:
:
ATTR_ERRMODE
=
>
PDO
:
:
ERRMODE_EXCEPTION
)
;
try
{
/
/
connexion
à
BD
:
new
PDO
$
bdd
=
new
PDO
(
$
dsn
,
$
username
,
$
password
,
$
erreur
)
;
echo
'
<
p
>
connexion
réussir
<
/
p
>
'
;
return
$
bdd
;
}
catch
(
PDOException
$
e
)
{
echo
'
connexion
échouer
:
'
.
$
e-
>
getMessage
(
)
;
return
NULL
;
/
/
die
(
'
connexion
échouer
:
'
.
$
e-
>
getMessage
(
)
)
;
}
}
?
>
explication
Ø
faire
new
PDO
avec
paramètre
PDO
être
classe
.
créer
nouveau
objet
de
classe
qu
’
appeler
$
bdd
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
new
PDO
à
paramètre
:
PHP
–
MySQL
–
MVC
-
page
/
•
$
dsn
(
dater
source
name
)
:
contenir
infos
sur
SGBD
(
mysql
)
,
serveur
(
host
,
:
localhost
)
,
nom
de
BD
,
jeu
de
caractère
utiliser
(
UTF8
être
générique
)
.
•
$
username
:
nom
de
l
’
utilisateur
connecter
à
BD
.
•
$
password
:
password
de
l
’
utilisateur
connecter
à
BD
.
•
$
erreur
:
pour
gérer
message
d
’
erreur
.
Ø
utiliser
variable
pour
rendre
code
générique
utiliser
variable
pour
rendre
code
générique
:
•
$
host
:
machine
serveur
de
SGBD
,
•
$
sgbdname
:
type
de
SGBD
,
•
$
username
:
nom
de
l
’
utilisateur
connecter
sur
BD
,
•
$
password
:
mot
de
passe
de
utilisateur
,
•
$
dbname
:
nom
de
BD
à
accéder
sur
SGBD
.
Ø
$
erreur
:
gestion
erreur
$
erreur
=
array
(
PDO
:
:
ATTR_ERRMODE
=
>
PDO
:
:
ERRMODE_EXCEPTION
)
;
en
ajouter
paramètre
$
erreur
qu
’
être
dans
new
PDO
,
avoir
message
d
’
erreur
SGBD
,
par
exemple
select
être
écrire
.
syntaxe
:
PDO
:
:
ATTR_ERRMODE
PDO
:
:
ERRMODE_EXCEPTION
être
constante
de
classe
définir
dans
classe
PDO
.
avoir
syntaxe
:
array
(
clé
=
>
valeur
)
permettre
de
définir
couple
clé-valeur
dans
tableau
.
PDO
:
:
ATTR_ERRMODE
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
PDO
:
:
ERRMODE_EXCEPTION
:
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Ø
gestion
erreur
avec
try
catch
structure
«
try
»
«
catch
»
être
structure
de
programmation
objet
pour
gérer
erreur
.
die
permettre
d
’
arrêter
l
’
exécution
de
page
en
cas
d
’
erreur
.
afficher
contenu
d
’
table
:
query
(
)
,
fetch
(
)
,
print_r
(
exemple
–
select
)
exemple
/
/
écrire
requête
$
reqSQL
=
'
select
*
FROM
utilisateur
'
;
/
/
récupérer
résultat
$
requete
=
$
bdd-
>
query
(
$
reqSQL
)
;
echo
'
<
pre
>
'
;
print_r
(
$
requete
)
;
echo
'
<
/
pre
>
'
;
/
/
afficher
résultat
ligner
par
ligne
while
(
$
ligne
=
$
requete-
>
fetch
(
)
)
{
echo
'
<
pre
>
'
;
print_r
(
$
ligne
)
;
echo
'
<
/
pre
>
'
;
echo
'
<
p
>
nombre
d
’
élément
de
$
ligne
:
'
.sizeof
(
$
ligne
)
.
'
<
/
p
>
'
;
}
/
/
libérer
table
de
requête
$
requete-
>
closeCursor
(
)
;
/
/
pour
finir
traitement
PHP
–
MySQL
–
MVC
-
page
/
explication
•
écrire
select
dans
$
reqSQL
•
utiliser
méthode
(
fonction
)
query
de
$
bdd
(
-
>
)
en
passer
$
reqSQL
en
paramètre
.
•
résultat
être
dans
$
requete
:
c
’
être
objet
complexe
sur
pouvoir
appliquer
méthode
(
fonction
)
contenir
tableau
de
donnée
select
.
•
afficher
qu
’
pouvoir
de
réponse
:
l
’
occurrence
seul
requête
s
’
affiche
.
•
passer
ligne
de
réponse
en
revue
avec
méthode
fetch
(
)
.
•
$
ligner
retourner
par
fetch
être
tableau
associatif
:
pouvoir
faire
print_r
de
$
ligne
.
•
constater
qu
’
avoir
deux
accès
possible
à
donnée
:
par
nom
champ
(
id
par
exemple
)
par
numéro
(
pour
id
)
:
avoir
fois
d
’
élément
prévoir
dans
ligne
•
avoir
finir
de
travailler
,
faire
closeCursor
,
pour
libérer
table
de
requête
résultat
connexion
réussir
DEBUT
<
pre
>
print_r
(
$
requete
)
;
<
/
pre
>
PDOStatement
Object
(
[
queryString
]
=
>
select
*
FROM
utilisateur
)
while
(
$
ligne
=
$
requete-
>
fetch
(
)
)
{
Array
(
[
id
]
=
>
[
]
=
>
[
prenomNom
]
=
>
Sia
PEI
[
]
=
>
Sia
PEI
[
adMail
]
=
>
ji
@
dns-remplacer
[
]
=
>
ji
@
dns-remplacer
[
motDePasse
]
=
>
jipei
[
]
=
>
jipei
[
annee
]
=
>
[
]
=
>
)
nombre
d
’
élément
de
$
ligne
:
Array
(
[
id
]
=
>
[
]
=
>
[
prenomNom
]
=
>
Yawei
CAI
[
]
=
>
Yawei
CAI
[
adMail
]
=
>
jawei
@
dns-remplacer
[
]
=
>
jawei
@
dns-remplacer
[
motDePasse
]
=
>
yaweicai
[
]
=
>
yaweicai
[
annee
]
=
>
[
]
=
>
)
nombre
d
’
élément
de
$
ligne
:
PHP
–
MySQL
–
MVC
-
page
/
charger
exemple
tester
.
vocabulaire
de
programmation
orienter
objet
classer
classe
,
c
’
être
type
,
entier
,
réel
,
caractère
,
string
booléen
.
en
général
,
classe
correspondre
à
l
’
équivaloir
d
’
tableau
associatif
:
contenir
couple
de
clé-valeur
.
différent
clé
être
appeler
«
attribut
»
.
en
,
associer
fonction
à
classe
:
appeler
«
méthode
»
.
objet
objet
c
’
être
variable
de
type
classe
.
créer
objet
avec
valeur
pour
couple
clé-valeur
(
pour
attribut
)
,
dire
qu
’
instancie
objet
.
Ca
passer
par
commande
«
new
»
.
méthode
méthode
être
fonction
être
attacher
à
classe
.
être
utilisable
par
objet
de
classe
.
écrire
:
objet-
>
methode
(
)
pour
appeler
méthode
pour
l
’
objet
en
question
:
c
’
être
avoir
passer
l
’
objet
en
paramètre
de
méthode
.
exception
en
cas
d
’
erreur
,
en
programmation
objet
passer
par
objet
de
classe
exception
.
Ca
faire
avec
«
try
»
«
catch
»
try
:
essayer
d
’
exécuter
suite
d
’
instruction
catch
:
suite
d
’
instruction
exécuter
à
générer
erreur
sous
forme
d
’
exception
,
passer
dans
bloc
catch
catch
préciser
nom
de
l
’
objet
exception
qu
’
aller
traiter
.
pouvoir
accéder
à
information
par
méthode
getMessage
(
)
par
exemple
.
guides
de
style
https
:
/
/
dns-remplacer
/
wiki
/
CamelCase
https
:
/
/
dns-remplacer
/
php-the-right-way
/
#
code_style_guide
PHP
–
MySQL
–
MVC
-
page
/
gestion
requête
technique
de
programmation
–
PDO
PDOStatement
-
$
bdd
,
$
requete
,
$
reqSQL
pour
manipuler
BD
,
utiliser
deux
classe
:
PDO
PDOStatemenet
terminologie
:
$
bdd
-
$
reqSQL
-
$
requete
-
$
ligner
•
$
bdd
:
objet
de
classe
PDO
être
appeler
$
bdd
.
C
’
être
en
sorte
l
’
objet
permettre
l
’
accès
concret
à
base
de
donnée
,
pour
utilisateur
base
de
donnée
.
•
$
reqSQL
:
texte
de
requête
être
mettre
dans
$
reqSQL
.
C
’
être
simple
chaine
de
caractère
.
devoir
être
confondre
avec
résultat
de
requête
:
$
requete
.
•
$
requete
:
objet
de
classe
PSOStatement
être
appeler
$
requete
(
statement
pouvoir
vouloir
dire
«
requête
»
.
$
requete
être
objet
complexe
contenir
à
fois
$
reqSQL
résultat
de
requête
fois
exécuter
.
•
$
ligne
:
résultat
d
’
fetch
(
)
être
ligne
:
$
ligne
=
$
requete-
>
fetch
(
)
.
C
’
être
tuple
de
table
résulter
de
requête
SQL
.
$
bdd
(
PDO
)
–
query
-
prepare
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
PDO
contenir
méthode
(
contenir
d
’
attribut
)
.
noter
:
•
query
:
renvoyer
$
requete
être
associer
$
reqSQL
passer
en
paramètre
résultat
de
requête
(
résultat
select
)
prêt
à
être
fetché
(
prêt
à
être
parcourir
)
.
•
prepare
:
renvoyer
$
requete
être
associer
$
reqSQL
passer
en
paramètre
.
requête
n
’
avoir
être
exécuter
.
pouvoir
contenir
variable
.
PDO
contenir
méthode
propre
à
un
BD
gestion
transaction
:
commettre
,
rollback
,
etc
.
,
d
’
autre
chose
.
$
requete
(
PDOStatement
)
-
execute
-
fetch
-
closeCurseur
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
PDOStatement
contenir
attribut
:
valeur
$
resSQL
fournir
en
paramètre
avoir
être
créer
.
contenir
méthode
.
noter
:
•
execute
:
permettre
d
’
exécuter
un
requête
avec
variable
.
falloir
fournir
en
paramètre
tableau
de
valeur
pour
variable
.
•
fetch
:
permettre
de
récupérer
ligne
résultat
de
requête
,
un
par
un
.
•
fetchAll
:
permettre
de
récupérer
ligne
résultat
de
requête
,
dans
tableau
.
•
closeCurseur
:
permettre
de
refaire
execute
.
synthèse
$
bdd
:
PDO
$
requete
:
PDOStatement
-
>
query
(
$
reqSQL
)
:
PDOStatement
-
>
fetch
(
)
:
ligne
-
>
prepare
(
$
reqSQL
)
:
PDOStatement
-
>
exectute
(
)
:
bool
-
>
closeCursor
(
)
:
bool
-
>
fetchAll
(
)
:
ligne
PHP
–
MySQL
–
MVC
-
page
/
accès
champ
,
gestion
erreur
,
order
by
,
like
,
limit
(
exemple
–
select
Where
)
charger
BD
pour
pouvoir
tester
code
pour
tester
code
,
falloir
charger
BD
en
d
’
installer
code
dans
répertoire
serveur
WEB
.
accéder
champ
$
ligne
être
tableau
associatif
.
pouvoir
écrire
:
echo
'
<
p
>
<
strong
>
prenom
nom
<
/
strong
>
<
/
p
>
'
;
while
(
$
ligne
=
$
requete-
>
fetch
(
)
)
{
echo
'
<
p
>
'
.
$
ligne
[
prenom
]
.
'
'
.
$
ligne
[
nom
]
.
'
<
/
p
>
'
;
}
select
attribut1
,
attribut2
,
Where
,
Order
by
$
reqSQL
=
'
select
realistateur
,
titre
,
annee
from
film
where
realisateur
=
'
\King
Vidor\
'
order
by
annee
'
;
/
/
precise
champ
:
realisateur
,
titre
annee
/
/
attention
\
'
/
/
trier
par
annee
select
...
like
$
reqSQL
=
'
select
*
FROM
film
WHERE
realisateur
like
\
'
%
manki
%
\
'
order
by
realisateur
,
annee
'
;
/
/
like
%
manki
%
:
n
’
importer
de
manki
/
/
order
by
realisateur
,
annee
:
realisateurs
possible
/
/
dans
resultat
:
j
’
ordonner
résultat
select
...
Order
by
,
limit
$
reqSQL
=
'
select
realistateur
,
titre
,
annee
from
film
where
annee
=
order
by
annee
limit
,
'
)
;
/
/
prendre
premier
(
de
à
)
/
/
limit
,
pour
suivant
/
/
limite
,
pour
suivant
,
etc
.
PHP
–
MySQL
–
MVC
-
page
/
requête
variable
:
where
realisateur
=
?
(
exemple
–
select
variable
)
objectif
:
mettre
variable
dans
requête
(
par
exemple
,
information
saisir
par
l
’
utilisateur
)
solution
basique
à
éviter
:
risque
XSS
pouvoir
mettre
$
_GET
dans
$
reqSQL
:
$
reqSQL
=
'
select
...
where
auteur
=
\
'
'
.
$
_GET
[
'
realisateur
'
]
.
'
\
'
'
)
;
à
éviter
!
!
!
$
_GET
contenir
‘
toto
\
'
or
\
'
a\
'
=
\
'
avoir
,
select
renvoyer
table
!
solution
avec
requête
préparer
:
where
?
,
prepare
execute
$
reqSQL
=
'
select
...
where
realisateur
=
?
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
$
requete-
>
execute
(
array
(
$
_GET
[
'
realisateur
'
]
)
)
;
séparer
argument
par
«
,
»
dans
array
remplacer
?
par
:
solution
être
lisible
qu
’
aller
privilégier
.
$
reqSQL
=
'
select
...
where
realisateur
=
:
realisateur
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
$
requete-
>
execute
(
array
(
'
realisateur
'
=
>
$
_GET
[
'
realisateur
'
]
)
)
;
PHP
–
MySQL
–
MVC
-
page
/
Déboguer
:
or
die
bdd-
>
errorInfo
(
)
créer
$
bdd
avec
gestion
erreur
(
voir
)
pour
afficher
détail
d
’
erreur
,
créer
$
bdd
avec
gestion
erreur
:
$
erreur
=
array
(
PDO
:
:
ATTR_ERRMODE
=
>
PDO
:
:
ERRMODE_EXCEPTION
)
;
$
bdd
=
new
PDO
(
$
dsn
,
$
username
,
$
password
,
$
erreur
)
;
C
’
être
suffisant
pour
obtenir
message
d
’
erreur
propre
.
Aternatif
:
exécuter
requête
(
query
execute
)
«
or
die
»
n
’
utiliser
$
erreur
dans
new
PDO
,
pouvoir
ajouter
«
or
die
»
query
execute
pour
afficher
détail
d
’
erreur
.
c
$
requete
=
$
bdd-
>
query
(
$
reqSQL
)
or
die
(
print-r
(
$
bdd
>
errorInfo
(
)
)
)
;
$
requete-
>
execute
(
array
(
...
)
)
or
die
(
print-r
(
$
bdd
>
errorInfo
(
)
)
)
;
«
or
die
»
être
inutile
avec
connexion
PDO
en
ERRMODE
.
«
or
die
»
s
’
utiliser
travailler
avec
jeu
«
mysql
»
de
fonction
fonction
mysql_connect
(
...
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Ø
limite
«
or
die
»
:
confidentialité
user
friendly
«
or
die
»
pouvoir
être
pratique
en
phase
de
développement
.
en
production
,
mettre
jour
information
pouvoir
être
confidentiel
n
’
être
userfriendly
.
http
:
/
/
dns-remplacer
/
tuto
/
lire
/
dns-remplacé
PHP
–
MySQL
–
MVC
-
page
/
ajouter
,
modifier
,
supprimer
donnée
dans
table
(
exemple
–
insert-update-delete
)
via
phpMyAdmin
–
afficher
interface
graphique
via
phpMyAdmin
–
SQL
pouvoir
entrer
commande
SQL
:
insert
,
UPDATE
DELETE
.
système
proposer
pré-remplissage
commande
.
via
php
-
insert
pouvoir
entrer
commande
SQL
:
insert
,
UPDATE
DELETE
.
$
reqSQL
=
'
insert
INTO
film
(
titre
,
realisateur
,
annee
)
valoir
(
:
titre
,
:
realisateur
,
:
annee
)
'
;
/
/
exemple
(
'
L\'homme
irrationnel
'
,
'
Woody
Allen
'
,
'
'
)
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
$
resultat
=
$
req-
>
execute
(
array
(
'
titre
'
=
>
$
_GET
[
'
titre
'
]
,
'
realisateur
'
=
>
$
_GET
[
'
realisateur
'
]
,
'
annee
'
=
>
$
_GET
[
'
annee
'
]
)
)
;
/
/
or
die
(
print-r
(
$
bdd-
>
errorInfo
(
)
)
)
;
/
*
or
die
être
inutile
avec
connexion
en
ERRMODE
*
/
/
*
$
resultat
pour
traiter
erreur
,
sans
ERRMODE
*
/
via
php
–
DELETE
$
reqSQL
=
'
DELETE
FROM
film
WHERE
titre
=
:
titre
AND
realisateur
=
:
realisateur
'
;
$
requete
=
$
bdd-
>
prepare
(
$
reqSQL
)
;
$
resultat
=
$
requete-
>
execute
(
array
(
'
titre
'
=
>
$
_GET
[
'
titre
'
]
,
'
realisateur
'
=
>
$
_GET
[
'
realisateur
'
]
)
)
;
/
*
pour
tester
résultat
:
de
DELETE
*
/
if
(
$
requete-
>
rowCount
(
)
)
{
/
/
rowCount
compter
nombre
de
delete
echo
'
<
br
/
>
DELETE
effectuer
'
.
$
requete-
>
rowCount
(
)
.
'
fois
'
;
}
else
{
echo
'
<
br
/
>
DELETE
avoir
échouer
'
;
}
rowCount
permettre
de
savoir
de
delete
être
effectuer
.
http
:
/
/
dns-remplacer
/
page
/
mysql-pdo
PHP
–
MySQL
–
MVC
-
page
/
Ø
attention
DELETE
!
!
attention
delete
:
donnée
être
supprimer
,
pouvoir
récupérer
être
en
mode
validation
(
autocommettre
)
être
fréquent
!
falloir
faire
vérification
,
par
exemple
:
if
(
!
isset
(
$
_GET
[
'
realisateur
'
]
)
or
!
isset
(
$
_GET
[
'
titre
'
]
)
or
$
_GET
[
'
realisateur
'
]
=
=
'
'
or
$
_GET
[
'
titre
'
]
=
=
'
'
)
{
echo
'
<
br
/
>
n\'avez
saisir
paramètre
'
;
}
via
php
–
UPDATE
$
reqSQL
=
'
UPDATE
film
set
duree
=
:
duree
WHERE
titre
=
:
titre
AND
realisateur
=
:
realisateur
'
;
Ø
attention
à
l
’
UPDATE
!
!
attention
à
l
’
UPDATE
:
donnée
être
modifier
,
pouvoir
récupérer
être
en
mode
validation
(
autocommettre
)
être
fréquent
!
bon
usage
à
place
de
:
'
titre
'
=
>
$
_GET
[
'
titre
'
]
avoir
'
titre
'
=
>
$
titre
variable
$
titre
,
$
realisateur
,
etc
.
être
récupérer
via
$
_POST
$
_GET
.
TP
–
insert
Update
Delete
consultation
travailler
avec
base
CINEMA
.
.
changer
paramètre
de
connexion
un
par
un
pour
voir
message
d
’
erreur
correspondre
.
.
ajouter
film
.
vérifier
qu
’
être
présent
dans
BD
en
utiliser
script
de
consultation
.
.
supprimer
film
venir
d
’
ajouter
.
vérifier
qu
’
être
absent
dans
BD
en
utiliser
script
de
consultation
.
.
rajouter
film
.
vérifier
qu
’
être
présent
dans
BD
en
utiliser
script
de
consultation
.
.
modifier
l
’
année
film
venir
de
rajouter
.
vérifier
modification
avoir
être
faire
dans
BD
en
utiliser
script
de
consultation
.
PHP
–
MySQL
–
MVC
-
page
/
TP
site
artiste
–
MVC
exemple
:
Etape
:
œuvre
–
TP
:
installer
,
tester
regarder
code
contenir
dossier
dossier
de
l
’
exemple
contenir
:
code
de
BD
:
BD_
dns-remplacer
dossier
d
’
image
.
fichier
de
connexion
à
BD
.
page
pour
l
’
affichage
œuvre
.
installation
installer
BD
sur
WAMP
.
parcourir
contenu
de
BD
pour
comprendre
.
regarder
page
d
’
affichage
œuvre
:
dns-remplacer
tester
code
obtenir
l
’
affichage
suivre
:
PHP
–
MySQL
–
MVC
-
page
/
TP3
:
Etape
:
œuvre
,
exposition
œuvre
exposer
–
gestion
basique
dans
HTML
vouloir
pouvoir
afficher
exposition
œuvre
exposer
.
considérer
«
site
artiste
»
«
nav
»
être
dans
header
HTML
.
)
choisir
«
œuvre
»
,
obtenir
être
page
d
’
accueil
:
)
choisir
«
exposition
»
obtenir
:
PHP
–
MySQL
–
MVC
-
page
/
)
cliquer
sur
exposition
,
obtenir
liste
œuvre
exposer
:
PHP
–
MySQL
–
MVC
-
page
/
TP
:
Etape
–
l
’
étape
avec
séparation
PHP
HTML
aller
organiser
code
en
séparer
maximum
code
PHP
code
HTML
.
pour
,
aller
utiliser
fonction
fetchAll
(
)
:
$
lesOeuvres
=
$
requete-
>
fetchAll
(
)
;
,
récupérer
tableau
complet
œuvre
issu
select
.
pouvoir
parcourir
tableau
dans
PHP
avec
classique
«
foreach
»
:
foreach
(
$
lesOeuvres
avoir
$
ligne
)
{
echo
'
<
h@card@
>
[
'
.
$
ligne
[
'
id
'
]
.
'
]
:
'
.
$
ligne
[
'
titre
'
]
.
'
-
'
.
$
ligne
[
'
annee
'
]
.
'
-
'
.
$
ligne
[
'
prix
'
]
.
'
euro
<
/
h3
>
'
;
etc
.
}
PHP
–
MySQL
–
MVC
-
page
/
problématique
d
’
organisation
de
base
:
fichier
pour
projet
but
être
d
’
afficher
œuvre
,
exposition
œuvre
exposer
.
question
à
poser
:
fichier
devoir
créer
?
avoir
fichier
par
page
.
circule-t
de
page
en
page
?
a-t-il
élément
commun
côté
HTML
?
côté
HTML
,
header
être
partager
.
a-t-il
de
élément
commun
côté
PHP
?
côté
PHP
,
connexion
à
BD
être
partager
.
schéma
de
synthèse
à
réaliser
PHP
–
MySQL
–
MVC
-
page
/
MVC
https
:
/
/
dns-remplacer
/
course
/
votre-site-php-presque-complet-architecture-mvc-et-bonnespratique
/
avant-propos-comment-fonctionne-ce-tutoriel
https
:
/
/
dns-remplacer
/
course
/
adopter-un-style-de-programmation-clair-avec-le-modele-mvc
problématique
:
fichier
,
dossier
pour
projet
MVC
s
’
intéresser
à
problématique
d
’
organisation
fichier
répertoire
.
à
noter
problème
suivant
:
•
•
•
•
•
dossier
devoir
créer
?
devoir
organiser
fichier
?
passe-t
d
’
fichier
à
autre
?
être
inclusion
à
envisager
?
a-t-il
besoin
de
dossier
admin
?
organisation
non-MVC
principe
d
’
organisation
non-MVC
aller
avoir
page
php
par
page
de
site
.
page
c
’
être
«
main
»
recevoir
paramètre
(
$
_GET
,
$
_POST
)
.
liste
paramètre
être
variable
selon
l
’
entrée
(
href
,
autre
href
,
formulaire
de
saisie
,
autre
,
header
)
.
avoir
variable
global
partager
par
page
dans
$
_SESSION
.
page
réagir
en
fonction
paramètre
qu
’
recevoir
.
selon
cas
,
faire
en
totalité
en
partie
:
•
récupérer
contenu
de
$
_GET
,
$
_POST
,
$
_SESSION
•
mettre
à
jour
$
_SESSION
•
inclure
fichier
:
header
,
footer
,
connexion
à
BD
,
etc
.
•
gérer
donnée
de
BD
:
insert
,
UPDATE
,
DELETE
select
associé
nécessaire
.
•
construction
de
page
HTML
à
afficher
(
select
associé
nécessaire
)
défaut
de
l
’
organisation
non-MVC
•
être
mélanger
:
SQL
,
PHP
HTML
,
séparer
PHP
HTML
.
•
page
pouvoir
devenir
gros
.
•
maintenance
n
’
être
facile
.
•
travail
à
être
rendre
difficile
.
PHP
–
MySQL
–
MVC
-
page
/
présentation
MVC
MVC
:
modèle
-
vue
-
contrôleur
.
L
’
architecture
MVC
séparer
logique
code
en
trois
partie
,
trois
ensemble
de
fichier
:
•
modèle
(
correspondre
SQL
)
•
vue
(
correspondre
HTML
)
•
contrôleur
(
correspondre
PHP
faire
lien
entre
deux
précédent
)
.
rendre
code
facile
à
mettre
à
jour
permettre
d
’
organiser
travail
en
partie
de
travailler
en
parallèle
.
L
’
architecture
MVC
être
bon
pratique
de
programmation
.
connaissance
de
l
’
architecturer
MVC
rendre
capable
de
créer
site
web
de
qualité
facile
à
maintenir
.
en
pratique
,
architecture
MVC
mettre
en
œuvre
s
’
appuyer
sur
théorie
l
’
adapter
de
façon
pragmatique
.
avoir
façon
de
mettre
œuvrer
MVC
.
principal
framework
être
développer
en
MVC
:
CodeIgniter
,
CakePHP
,
Symfony
,
Jelix
,
zend
Framework
,
etc
.
modèle
(
SQL
)
modèle
gérer
donnée
site
.
accès
à
BD
.
gestion
de
fichier
.
proposer
fonction
pour
faire
insert
,
Update
,
Delete
,
select
.
fonction
pouvoir
renvoyer
tableau
de
donnée
.
résultat
être
exploiter
par
contrôleur
par
HTML
.
C
’
être
page
pur
PHP
.
L
’
idée
général
être
dans
application
,
base
de
donnée
être
central
.
BD
être
concevoir
,
l
’
application
être
facile
à
maintenir
à
faire
évoluer
.
BD
être
concevoir
,
l
’
application
être
complexe
à
maintenir
.
vue
(
HTML
)
vue
afficher
page
HTML
.
récupérer
variable
contrôleur
/
modèle
pour
savoir
qu
’
devoir
afficher
.
C
’
être
page
HTML
avec
boucle
condition
PHP
simple
,
pour
afficher
tableau
de
donnée
issu
modèle
.
vue
contenir
DOCTYPE
.
pouvoir
fonctionner
qu
’
avec
contexte
contrôleur
.
PHP
–
MySQL
–
MVC
-
page
/
contrôleur
(
PHP
)
contrôleur
être
page
appelé
(
véritable
index
,
dire
,
«
main
»
)
.
fonctionner
en
trois
étape
:
.
utiliser
fonction
modèle
(
include
appel
fonction
)
.
.
analyser
traiter
donnée
issu
modèle
passée
en
paramètre
à
l
’
appel
de
page
(
$
_GET
,
$
_POST
,
$
_SESSION
)
.
déterminer
par
exemple
visiteur
avoir
droit
de
voir
page
.
.
en
fonction
de
calcul
,
appeler
vue
correspondant
par
include
.
C
’
être
page
pur
PHP
.
contrôleur
être
«
chef
d
’
orchestre
»
:
récupérer
demande
de
l
’
utilisateur
à
travers
vue
(
page
HTML
)
par
href
,
formulaire
header
.
échanger
donnée
avec
modèle
,
faire
calcul
(
pouvoir
être
complexe
)
choisir
vue
à
afficher
en
fournir
variable
.
rôle
contrôleur
pouvoir
limiter
à
faire
lien
entre
modèle
vue
:
de
colle
!
fonctionnement
global
utilisateur
,
à
travers
vue
,
faire
appel
à
page
:
contrôleur
(
par
href
formulaire
)
.
contrôleur
«
include
»
modèle
utiliser
fonction
modèle
.
faire
calcul
.
selon
résultat
,
include
vue
autre
à
afficher
à
l
’
utilisateur
.
de
suite
.
PHP
–
MySQL
–
MVC
-
page
/
MVC
:
design
pattern
tête
premier
l
’
modèle
-
être
essentiel
vue
-
être
magnifique
J
’
être|suivre
p
’
têt
feindre
-
oui
c
’
être
fou
ligne
de
code
-
être
d
’
colle
c
’
coder
n
’
faire
rien
-
d
’
magique
n
’
faire
qu
’
transmettre
-
valeur
colle
,
c
’
être
contrôleur
.
dire
MCV
être
design
pattern
(
DP
)
.
C
’
être
en
réalité
assemblage
de
DP
élémentaire
(
un
par
lettre
)
:
DP
«
stratégie
»
,
«
composite
»
«
observateur
»
(
DP
avoir
nom
)
.
coder
DP
,
avoir
mise
à
jour
automatique
notification
(
DP
observateur
)
.
PHP
–
MySQL
–
MVC
-
page
/
organisation
répertoire
fichier
dans
MVC
organisation
de
répertoire
MVC
à
racine
site
,
créer
répertoire
:
•
modele
•
vue
•
controleur
dans
de
répertoire
,
créer
sous-répertoire
par
«
module
»
site
(
par
exemple
:
forum
,
blog
,
chat
,
admin
,
etc
.
)
.
fichier
«
modèle
»
modèle
être
fichier
PHP
contenir
appel
à
BD
renvoyer
par
exemple
tableau
résultat
(
fetchAll
(
)
fetch
(
)
un
par
un
)
.
fichier
PHP
n
’
avoir
de
balise
fermant
(
?
>
)
:
éviter
problème
!
L
’
objet
bdd
être
déclarer
en
global
pour
avoir
à
refaire
connexion
à
opération
.
dans
l
’
idéal
,
falloir
utiliser
DP
singleton
permettre
de
recréer
objet
s
’
n
’
avoir
être
créer
.
dans
sous-repertoire
de
module
,
créer
fichier
par
fonction
avoir
nom
de
fonction
.
faire
include
fichier
appel
à
fonction
.
fichier
«
contrôleur
»
contrôleur
être
fichier
PHP
.
inclure
modèle
début
(
include_once
pour
éviter
de
l
’
inclure
fois
)
.
à
fin
inclure
vue
.
dire
,
en
réalité
contenir
code
,
séparer
code
en
partie
(
modèle
,
contrôle
,
vue
)
partie
être
dans
propre
fichier
.
contrôleur
faire
calcul
avant
l
’
appel
de
vue
.
demander
fichier
dans
barre
de
adresse
,
c
’
être
contrôleur
qu
’
appeler
.
fichier
«
vue
»
vue
être
fichier
HTML
faire
simple
affichage
jeu
de
donnée
fournir
par
contrôleur
.
pouvoir
avoir
boucle
PHP
pour
parcourir
tableau
test
pour
choisir
qu
’
vouloir
afficher
.
avoir
fichier
voir
par
page
utilisateur
.
PHP
–
MySQL
–
MVC
-
page
/
faire
contrôleur
=
contrôleur
global
=
routeur
=
indexSwitch
problème
avec
l
’
organisation
précédent
,
avoir
«
main
»
par
page
(
par
contrôleur
)
.
problème
majeur
aller
être
de
faire
lien
entre
page
:
en
effet
,
href
partir
d
’
page
(
contrôleur
)
pour
aller
à
autre
page
(
autre
contrôleur
)
.
problème
être
obliger
à
parcourir
l
’
arborescence
fichier
avec
href
type
:
Href
=
«
.
.
/
admin
/
dns-remplacer
»
avoir
href
dans
fichier
«
includé
»
,
être
de
même
.
avec
un
organisation
,
risquer
d
’
avoir
problème
de
«
routage
»
(
trouver
route
pour
page
à
ouvrir
)
complexe
.
changer
structure
fichier
répertoire
,
changer
nom
d
’
répertoire
,
falloir
retrouver
href
être
référence
à
répertoire
pour
mettre
à
jour
:
c
’
être
long
pénible
!
solution
:
«
front
contrôleur
»
doter
d
’
contrôleur
global
permettre
l
’
entrée
dans
site
permettre
de
choisir
contrôleur
à
appeler
page
à
afficher
.
C
’
être
«
front
contrôleur
»
«
routeur
»
.
retrouver
terme
de
«
routeur
»
dans
frameworks
.
autre
contrôleur
être
appeler
backContoller
.
rôle
«
front
contrôleur
»
être
de
déterminer
contrôleur
appeler
de
faire
initialisation
général
(
connexion
à
BD
,
affichage
d
’
en-tête
de
pied
de
page
,
etc
.
)
.
fichier
dns-remplacé
appeler
routeur
avec
route
particulier
,
c
’
contrôleur
particulier
,
page
particulier
à
afficher
.
,
aller
centraliser
problème
«
routage
»
:
changer
nom
de
répertoire
,
falloir
faire
modification
dans
«
front-contrôleur
»
.
fichier
dns-remplacé
:
routeur
principe
IndexSwitch
être
front
contrôleur
choisir
contrôleur
à
exécuter
.
front
controleur
,
c
’
être
qu
’
appeler
«
routeur
»
dans
framework
php
.
regarder
index
être
setté
pour
savoir
contrôleur
appeler
.
tester
sur
$
_GET
$
_POST
pouvoir
venir
d
’
header
,
d
’
href
d
’
formulaire
.
exemple
<
?
php
session_start
(
)
;
/
/
démarrer
session
include
(
'
modele
/
connexion_
dns-remplacé
'
)
;
/
/
connexion
à
BD
include
'
voir
/
dns-remplacer
'
;
/
/
HTML
de
l
’
entêter
site
/
/
grand
SWITCH
de
accès
page
/
/
elseif
if
(
isset
(
$
_GET
[
'
indexOeuvres
'
]
)
or
isset
(
$
_POST
[
'
indexOeuvres
'
]
)
)
{
PHP
–
MySQL
–
MVC
-
page
/
include
(
'
controleur
/
public
/
'
indexOeuvres'.php
'
)
;
}
elseif
(
isset
(
$
_GET
[
'
indexExposition
'
]
)
or
isset
(
$
_POST
[
'
indexExposition
'
]
)
)
{
include
(
'
controleur
/
public
/
'
indexExpositions'.php
'
)
;
}
/
/
etc
.
empty
(
)
isset
(
)
C
’
être
même
chose
.
empty
(
)
être
vrai
définir
,
=
=
null
.
isset
(
)
être
faux
définir
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Include
entêter
pied
de
page
pouvoir
faire
include
d
’
entêter
de
pied
de
page
dans
front
contrôleur
être
même
pour
page
déconnexion
pour
libérer
BD
.
en
PDO
,
déconnexion
n
’
être
utile
avoir
faire
clore
cursor
include
(
'
modele
/
deconnexion_
dns-remplacé
'
)
;
/
/
deconnexion
à
BD
Debug
afficher
$
_
session
,
POST
GET
pour
suivre
passer
pour
page
.
n
’
avoir
besoin
nom
fichier
c
’
être
même
:
front
controleur
!
pouvoir
mettre
dans
test
:
,
suffire
de
passer
debut
à
pour
arrêter
l
’
affichage
superglogabes
.
$
debug
=
;
if
(
$
debug
=
=
)
{
print_r
(
$
_SESSION
)
;
echo
'
<
br
/
>
'
;
echo'POST
:
'
;
print_r
(
$
_POST
)
;
echo
'
<
br
/
>
'
;
echo'GET
:
'
;
print_r
(
$
_GET
)
;
echo
'
<
br
/
>
'
;
}
variante
sans
switch
:
court
!
$
_GET
$
_POST
arriver
dans
front
controleur
pouvoir
contenir
nom
contrôleur
qu
’
vouloir
appeler
(
avec
chemin
)
.Par
exemple
:
«
public
/
œ
dns-remplacé
»
.
«
admin
/
œ
dns-remplacé
»
.
à
partir
de
,
front
controleur
vérifier
$
_GET
$
_POST
être
setté
fichier
correspondre
controleur
qu
’
vouloir
appeler
exister
(
is_file
(
)
)
.
c
’
être
cas
,
pouvoir
faire
include
controleur
back
.
,
revenir
à
page
d
’
accueil
.
n
’
avoir
besoin
de
swich
!
...
/
/
inclure
contrôleur
exister
être
spécifier
if
(
!
empty
(
$
_GET
[
'
page
'
]
)
&
&
is_file
(
'
controleurs
/
'
.
$
_GET
[
'
page
'
]
.
'
.php
'
)
)
PHP
–
MySQL
–
MVC
-
page
/
include
'
controleurs
/
'
.
$
_GET
[
'
page
'
]
.
'
.php
'
;
else
include
'
controleurs
/
dns-remplacer
'
;
/
/
controleur
accueil
...
fichier
dns-remplacer
fichier
dns-remplacé
appeler
avec
fonction
header
(
)
front
contrôleur
:
fichier
indexSwitch
.
passer
paramètre
à
l
’
URL
:
par
exemple
,
indexOeuvres
:
être
page
d
’
accueil
site
.
donner
n
’
importer
valeur
paramètre
.
faire
tester
s
’
être
setté
.
<
?
php
/
/
appeler
indexSwith
en
settant
indexArticle
avec
importer
valeur
header
(
'
location
:
dns-remplacer
?
indexOeuvre
=
set
'
)
;
?
>
PHP
–
MySQL
–
MVC
-
page
/
MVC
–
exemple
:
site
artiste
V1-MVC
-
affichage
œuvre
-
tester
l
’
exemple
organisation
dossier
fichier
L
’
organisation
MVC
être
suivant
:
PHP
–
MySQL
–
MVC
-
page
/
TP
site
artiste
MVC
TP-MVC-V2
:
site
artiste
V2
–
MVC
:
affichage
de
table
à
partir
SiteArtisteV1-MVC-base
,
faire
V2
prendre
compter
gestion
exposition
œuvre
exposer
.
L
’
étape
MVC
suivre
même
logique
l
’
étape
non-MVC
.
TP-MVC-V3
:
site
artiste
V3
–
MVC
:
administration
œuvre
ajouter
possibilité
de
connecter
administrateur
:
entrée
dans
back-office
.
L
’
administrateur
pouvoir
déconnecter
pour
retourner
site
public
.
L
’
entrée
dans
l
’
administration
faire
sur
page
d
’
administration
œuvre
.
afficher
liste
œuvre
dans
tableau
permettre
pour
œuvre
de
consulter
en
détail
,
de
modifier
de
supprimer
.
page
d
’
administration
œuvre
pouvoir
ressembler
à
:
pour
charger
image
,
falloir
utiliser
superglobal
$
_FILE
.
PHP
–
MySQL
–
MVC
-
page
/
connexion
administrateur
pour
connecter
administrateur
,
falloir
créer
formulaire
par
exemple
(
dans
page
de
partie
publique
)
:
vérifier
login
Ø
objectif
dans
premier
temps
vérifier
de
mot
de
passe
.
en
cas
d
’
erreur
,
afficher
page
d
’
erreur
.
en
cas
de
réussite
,
afficher
page
d
’
administration
œuvre
.
gérer
déconnexion
.
Ø
objectif
dans
second
temps
prendre
compter
possibilité
de
modifier
,
consulter
,
supprimer
œuvre
.
Ø
vérification
login
–
mot-de-passe
if
(
isset
(
$
_POST
[
'
admin
'
]
)
AND
htmlspecialchar
(
$
_POST
[
'
admin
'
]
)
=
=
'
admin
'
AND
isset
(
$
_POST
[
'
password
'
]
)
AND
htmlspecialchar
(
$
_POST
[
'
password
'
]
)
=
=
'
admin
'
)
{
$
_SESSION
[
'
admin
'
]
=
$
_POST
[
'
admin
'
]
;
}
dans
contrôleur
d
’
administration
,
vérifier
début
avoir
recevoir
bon
login
–
motDePasse
.
vérifier
deux
champ
être
settés
qu
’
contenir
,
par
exemple
«
admin
»
«
admin
»
.
PHP
–
MySQL
–
MVC
-
page
/
c
’
être
cas
,
enregistrer
valeur
de
$
_SESSION
[
‘
admin
’
]
.
commencer
par
faire
session_start
(
)
en
début
de
page
.
Ø
affichage
de
bon
vue
selon
$
_SESSION
[
'
admin
'
]
)
être
setté
,
choisir
vue
à
afficher
.
/
/
n
'
avoir
droit
de
administration
if
(
!
isset
(
$
_SESSION
[
'
admin
'
]
)
)
{
include
(
'
vue
/
admin
/
dns-remplacer
'
)
;
}
else
{
include
(
'
vue
/
admin
/
dns-remplacer
'
)
;
}
Ø
gestion
de
déconnexion
déconnecter
,
passer
$
_POST
[
'
deconnexion
'
]
à
page
de
retour
:
l
’
occurrence
œuvre
.
de
,
dans
page
œuvre
,
tester
$
_POST
[
'
deconnexion
'
]
être
setté
(
venir
bouton
déconnexion
)
.
c
’
être
cas
,
unset
$
_SESSION
[
'
admin
'
]
Ø
page
d
’
erreur
créer
nouveau
vue
pour
gérer
l
’
erreur
l
’
admin
n
’
avoir
mot
de
passe
.
vue
garder
header
utilisateur
public
:
pouvoir
retourner
sur
œuvre
exposition
.
PHP
–
MySQL
–
MVC
-
page
/
TP-MVC-V4
:
site
artiste
V4
–
MVC
:
administration
exposition
fois
connecter
en
qu
’
administrateur
,
pouvoir
administrer
exposition
:
ajouter
,
supprimer
modifier
.
ajouter
exposition
,
falloir
pouvoir
préciser
liste
œuvre
exposer
.
supprimer
exposition
,
falloir
supprimer
œuvre
exposer
.
modifier
exposition
,
falloir
pouvoir
ajouter
supprimer
œuvre
modifier
prix
œuvre
dans
l
’
exposition
.
l
’
utilisateur
être
connecter
administrateur
,
faire
en
sorte
qu
’
rester
connecter
qu
’
ailler
,
sauf
s
’
déconnecter
.
PHP
–
MySQL
–
MVC
-
page
/
