PHP
,
initiation
Dominique
Gonzalez
université
Lille3-Charles
de
Gaulle
PHP
,
initiation
par
Dominique
Gonzalez
publier
mercredi
novembre
à
13h58
copyright
©
D.Gonzalez
document
être
soumettre
à
licence
GNU
FDL
.
permission
être
donner
de
distribuer
,
modifier
copie
de
page
note
apparaître
.
table
matière
I
.
cours|cour
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.vii
.
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
introduction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
document
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
a-t-il
être
construire
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
trouver
document
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
QBullets
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
généralité
sur
langage
informatique
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
Qu
’
appelle-t
langage
informatique
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
langage
interpréter
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
langage
compiler
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
langage
intermédiaire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
langage
particulier
:
langage
web
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
programmer
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
langage
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
avantage
inconvénient
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
choisir
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
FAQ
élémentaire
sur
PHP
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Qu
’
être
PHP
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
différence
avec
Javascript
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
choisir
PHP
lieu
de
Javascript
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
passe-t-il
à
l
’
affichage
d
’
page
PHP
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
intégrer
PHP
dans
HTML
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
premier
exemple
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
premier
programme
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
deuxième
programme
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
rappel
(
?
)
d
’
algorithmique
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
variable
expression
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
à
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
formulaire
en
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
principal
contrôle
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
traitement
d
’
formulaire
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
traitement
donnée
d
’
formulaire
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
chaîne
de
caractère
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Qu
’
être
qu
’
chaîne
de
caractère
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
choisir
?
guillemet
apostrophe
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
principal
utilisation
backslash
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
principal
opération
sur
chaîne
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
principal
fonction
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
conversion
de
type
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
tableau
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Qu
’
être
qu
’
tableau
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
exemple
d
’
utilisation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
tableau
associatif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
parcours
d
’
tableau
associatif
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
PDO
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Qu
’
être
PDO
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilité
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
connecter
à
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exécuter
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
nombre
de
ligne
colonne
d
’
requête
select
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accéder
résultat
d
’
requête
select
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
gestion
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
programmation
séparer
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
programmation
séparer
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonction
require
include
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
iii
.
identification
en
PHP
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
préliminaire
:
fonction
header
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
contrôle
mot
de
passe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
amélioration
:
utilisateur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
séparer
donnée
traitement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
cacher
mot
de
passe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Crypter
mot
de
passe
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
session
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
préambule
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
application
:
identification
visiteur
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
II
.
hors
programme
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utiliser
PHP
sur
base
de
donnée
PostgreSQL
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
connexion
à
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exécution
d
’
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
obtention
résultat
d
’
requête
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
requête
autre
select
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
suppression
message
d
’
erreur
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
gestion
erreur
message
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
@ord@
peardb
,
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
Qu
’
être
pear
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
utilité
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utiliser
peardb
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
connecter
à
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
gestion
erreur
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
exécuter
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
accéder
résultat
d
’
requête
select
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
setfetchmode
(
)
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
peardb
,
information
sur
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
@ord@
dbx
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
Qu
’
être
dbx
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
utilité
?
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
connecter
à
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exécuter
requête
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
nombre
de
ligne
colonne
d
’
requête
select
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
accéder
résultat
d
’
requête
select
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exploration
contenu
d
’
répertoire
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
notion
nécessaire
en
PHP
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
notion
nécessaire
en
HTML
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
News
...
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
travail
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
avoir
temps
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
fichier
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
manipulation
de
base
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
exemple
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
III
.
corriger
exercice
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
premier
exercice
d
’
algorithmique
,
corriger
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
premier
formulaire
en
PHP
,
corriger
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
chaîne
de
caractère
,
corriger
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
exercice
sur
tableau
,
corriger
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
exercice
sur
fichier
,
corriger
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
exploration
d
’
répertoire
,
corriger
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
News
...
,
corriger
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
accueil
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
liste
nom
de
fichier
de
nouveau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
liste
lien
vers
fichier
de
nouveau
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
affichage
de
nouveau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
affichage
titre
nouveau
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
affichage
titre
faire
lien
vers
nouveau
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
affichage
de
nouveau
,
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
iv
.
choix
sujet
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
IV
.
étude
de
cas
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
étude
de
cas
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
projet
disque
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
projet
inscription
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
projet
Teniraq
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
projet
camping
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
présentation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
information
à
conserver
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
traitement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
projet
association
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
contenir
site
web
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
condition
de
travail
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
base
de
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
MLD
projet
association
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
création
table
de
base
association
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
évaluation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
dernier
conseil
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
projet
généalogie
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
généralité
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
donnée
à
conserver
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
traitement
donnée
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
optimisation
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
import-export
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
MCD
projet
généalogie
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
différent
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
différent
contrainte
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
projet
Brazil
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
description
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
table
entité
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
table
relation
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
contrainte
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
projet
service
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
but
de
projet
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
fonctionnement
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
information
technique
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
question
subsidiaire
:
gérer
l
’
historique
de
base
?
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
vocabulaire
utiliser
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
premier
ébauche
de
structure
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
structure
table
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
création
table
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
remplir
table
de
paramètre
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
projet
disque
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
approche
naïf
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
analyse
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
.
dernier
remarque
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
autre
analyse
projet
disque
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
.
création
table
.
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
travail
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
index
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
...
.
v
vi
I
.
cours|cour
chapitrer
.
?
.
introduction
page
être
destiner
à
personne
avoir
programmer
.
s
’
agir
d
’
cours|cour
d
’
algorithmique
.
en
particulier
:
notion
de
base
de
l
’
algorithmique
(
séquence
,
alternatif
,
itération
)
être
supposer
connaître
comprendre
.
traiter
de
traduction
en
PHP
.
notion
aborder
être
:
•
langage
informatique
,
en
particulier
langage
web
,
répondre
à
question
«
programmer
pour
web
?
»
.
•
notion
classique
en
programmation
,
aborder
sous
l
’
angle
PHP
:
structure
de
contrôle
,
chaîne
de
caractère
,
tableau
,
etc
.
•
particularité
de
programmation
pour
web
:
formulaire
traitement
,
l
’
identification
.
•
terminer
par
mise
en
relation
de
page
web
avec
base
de
donnée
(
PostgreSQL
)
.
.
document
?
page
avoir
pour
origine
cours|cour
destiner
étudiant
de
2ème
année
de
l
’
IUP
IIES
de
l
’
université
de
Lille
III-Charles
de
Gaulle
,
à
Villeneuve
d
’
Ascq
,
pour
année
universitaire
.
avoir
être
à
remanier
augmenter
à
l
’
occasion
d
’
cours|cour
destiner
étudiant
de
3ème
année
de
licence
MIASHS
.
page
être
destiner
à
être
cours|cour
autonome
:
être
qu
’
support
de
cours|cour
,
de
chose
,
être
transmettre
à
l
’
oral
pendant
cours|cour
,
être
écrire
.
L
’
environnement
technique
cours|cour
être
constituer
de
machine
sous
linux
.
L
’
installation
de
logiciel
être
aborder
faire
partir
contenu
cours|cour
.
.
a-t-il
être
construire
?
polycopié
avoir
être
rédiger
format
DocBook
:
•
texte
source
avoir
être
écrire
format
XML
avec
emacs
quanta
,
en
respecter
DTD
de
DocBook
.
•
code
source
avoir
être
compiler
format
PDF
avec
openjade
format
HTML
avec
xsltproc
.
•
version
avoir
devant
œil
avoir
être
compiler
mercredi
novembre
à
13h58
.
.
trouver
document
?
document
être
disponible
sous
format
sur
web
:
•
seul
document
HTML
:
http
:
/
/
dns-remplacer
/
polys
/
php
/
dns-remplacer
(
lourd
à
charger
,
facile
à
sauvegarder
à
imprimer
)
•
page
HTML
:
http
:
/
/
dns-remplacer
/
polys
/
php
/
dns-remplacer
(
facile
à
consulter
)
•
version
HTML
sans
feuille
de
style
:
http
:
/
/
dns-remplacer
/
polys
/
php
/
dns-remplacer
(
idée
?
tenir
...
)
•
PDF
:
http
:
/
/
dns-remplacer
/
polys
/
php
/
dns-remplacer
chapitre
.
?
.
QBullets
petit
image
animer
illustrer
lien
de
version
web
de
document
provenir
de
QBullets
http
:
/
/
dns-remplacer
/
chapitre
.
généralité
sur
langage
informatique
noter
:
document
issu
de
dns-remplacé
être
soumettre
à
licence
GNU
FDL
.
permission
être
donner
de
distribuer
,
modifier
copie
de
page
note
apparaître
.
.
Qu
’
appelle-t
langage
informatique
?
appeler
langage
informatique
langage
destiner
à
décrire
l
’
ensemble
action
consécutif
qu
’
or-
dinateur
devoir
exécuter
.
langage
naturel
(
l
’
anglais
,
français
)
représenter
l
’
ensemble
façon
qu
’
avoir
groupe
d
’
individu
de
communiquer
.
langage
servir
ordinateur
à
communiquer
n
’
avoir
à
voir
avec
langage
informatique
,
parler
dans
cas
de
protocole
,
être
deux
notion
différent
.
langage
informatique
être
façon
pratique
pour
(
humain
)
de
donner
instruction
à
ordinateur
.
langage
informatique
être
rigoureux
:
à
instruction
correspondre
action
processeur
.
langage
utiliser
par
processeur
,
c
’
donnée
qu
’
arriver
,
être
appeler
langage
machine
.
s
’
agir
d
’
suite
de
de
(
binaire
)
pour
de
«
clarté
»
pouvoir
être
décrire
en
hexadécimal
.
langage
machiner
n
’
être
compréhensible
par
l
’
humain
moyen
.
être
pratique
de
trouver
langage
intermédiaire
,
compréhensible
par
l
’
homme
,
être
transformer
en
langage
machiner
pour
être
exploitable
par
processeur
.
L
’
assembleur
être
premier
langage
informatique
avoir
être
utiliser
.
être
proche
langage
machiner
permettre
d
’
être
compréhensible
.
langage
être
proche
langage
machiner
qu
’
dépendre
type
de
processeur
utiliser
(
type
de
processeur
pouvoir
avoir
propre
langage
machine
)
.
programme
développer
pour
machine
pouvoir
être
porter
sur
autre
type
de
machine
(
désigner
par
portable
programme
pouvoir
être
utiliser
sur
grand
nombre
de
machine
)
.
pour
pouvoir
l
’
utiliser
sur
autre
machine
falloir
réécrire
programme
!
langage
informatique
avoir
avantage
:
•
être
compréhensible
langage
machiner
,
•
permettre
grand
portabilité
,
c
’
grand
facilité
d
’
adaptation
sur
machine
de
type
différent
.
langage
informatique
pouvoir
classer
en
deux
catégorie
:
langage
interpréter
langage
compiler
.
.
langage
interpréter
langage
informatique
être
par
définition
différent
langage
machine
.
falloir
traduire
pour
rendre
intelligible
point
de
vue
processeur
.
programme
écrire
dans
langage
interpréter
avoir
besoin
d
’
programme
auxiliaire
(
l
’
interpréteur
)
pour
traduire
fur
à
mesure
instruction
programme
.
.
langage
compiler
programme
écrire
dans
langage
dire
«
compiler
»
aller
être
traduire
fois
pour
par
programme
annexe
(
compilateur
)
de
générer
nouveau
fichier
être
autonome
,
c
’
n
’
avoir
besoin
d
’
programme
autre
pour
s
’
exécuter
(
dire
d
’
fichier
être
exécutable
)
.
programme
écrire
dans
langage
compiler
avoir
avantage
de
avoir
besoin
,
fois
compiler
,
de
programme
annexe
pour
s
’
exécuter
.
de
,
traduction
être
faire
fois
pour
,
être
rapide
à
l
’
exécution
.
être
souple
programme
écrire
avec
langage
interpréter
à
modification
fichier
source
(
fichier
intelligible
par
l
’
homme
:
aller
être
compiler
)
falloir
recompiler
programme
modification
prendre
effet
.
D
’
autre
part
,
programme
compiler
avoir
pour
avantage
de
garantir
sécurité
code
source
.
en
effet
,
langage
interpréter
,
être
intelligible
(
lisible
)
,
permettre
à
n
’
importer
de
connaître
secret
de
http
:
/
/
dns-remplacer
/
chapitre
.
généralité
sur
langage
informatique
fabrication
d
’
programme
de
copier
code
de
modifier
.
avoir
risque
de
non-respect
droit
d
’
auteur
.
D
’
autre
part
,
application
sécuriser
nécessiter
confidentialité
code
pour
éviter
piratage
(
transaction
bancaire
,
paiement
en
ligne
,
communication
sécuriser
,
etc
.
)
.
.
langage
intermédiaire
langage
appartenir
en
sorte
deux
catégorie
(
LISP
,
java
,
python
,
etc
.
)
pro-
grammer
écrire
avec
langage
pouvoir
dans
condition
subir
phase
de
compilation
intermédiaire
vers
fichier
écrire
dans
langage
n
’
être
intelligible
(
différent
fichier
source
)
exé-
cutable
(
nécessiter
d
’
interpréteur
)
.
applets
java
,
petit
programme
insérer
dans
page
Web
,
être
fichier
être
compiler
l
’
pouvoir
exécuter
qu
’
à
partir
d
’
navigateur
internet
(
être
fichier
l
’
extension
être
«
class
»
)
.
chapitre
.
langage
particulier
:
langage
web
.
programmer
?
réponse
général
s
’
imposer
:
pour
obtenir
page
web
dynamique
.
attention
,
parler
de
«
page
web
dynamique
»
signifier
qu
’
parler
de
page
bouge
dans
sens|sen
.
s
’
agir
de
page
n
’
avoir
d
’
existence
statique
,
être
construire
à
volée
,
momment
être
demander
serveur
.
utilité
faire
sentir
devoir
écrire
page
devoir
s
’
adapter
(
besoin
de
l
’
heure
,
accès
à
base
de
donnée
,
réponse
personnaliser
,
traitement
de
formulaire
,
etc
.
)
,
pour
faciliter
gestion
d
’
site
(
de
grand
taille
par
exemple
)
,
séparation
contenu
(
structure
)
traitement
(
présentation
)
.
.
langage
?
.
langage
de
programmation
pouvoir
être
utiliser
,
exister
langage
spécifique
à
programmation
web
.
classe
en
deux
catégorie
:
•
exécution
côté
serveur
:
PHP
(
syntaxe
de
type
C
)
,
ASP
(
serveur
Microsoft
)
,
JSP
(
syntaxe
java
)
,
CGI
(
langage
,
plateforme
)
,
etc
.
•
exécution
côté
client
:
Javascript
(
syntaxe
java
)
,
applet
java
,
flash
,
etc
.
.
avantage
inconvénient
exécution
côté
serveur
exécution
côté
client
coder
source
visible
:
n
’
obtenir
résultat
pour
Javascript
:
code
source
visible
de
l
’
exécution
dans
source
de
page
(
confier
à
javascript
contrôle
mot
de
passe
:
devoir
être
écrire
en
clair
dans
code
source
de
page
web
)
.
pour
Applet
:
précompiler
,
lisible
.
rapidité
dans
dépendre
de
vitesse
de
charge
dépendre
de
vitesse
de
charge
l
’
exécution
serveur
.
client
.
compatibilité
total
:
client
recevoir
HTML
.
problématique
:
client
devoir
posséder
logiciel
capable
d
’
exécuter
script
(
par
exemple
bon
version
de
flash
de
java
)
.
désactivation
par
impossible
,
client
n
’
avoir
contrôle
simple
,
suffire
de
désactiver
clientt
serveur
.
logiciel
.
contrôle
de
sécurité
parfaire
:
passer
sur
serveur
inexistant
:
passer
sur
client
(
confier
seul
javascript
contrôle
de
validité
donnée
d
’
formulaire
,
quelconque
contrôle
de
sécurité
)
.
.
choisir
choisir
?
bof
!
dépendre
de
qu
’
vouloir
faire
.
seul
chose
c
’
être
fonction
important
(
vital
pour
l
’
affichage
mettre
en
jeu
sécurité
site
)
devoir
être
confier
à
script
chapitre
.
langage
particulier
:
langage
web
s
’
exécuter
côté
client
.
à
ressembler
?
trouver
de
tester
dans
page
de
Fabien
Torre1
.
http
:
/
/
dns-remplacer
/
~
torre
/
dns-remplacer
?
id
=
tpprogweb
chapitre
.
FAQ
élémentaire
sur
PHP
noter
:
suivre
être
extrait
condenser
provenir
de
deux
source
:
•
FAQ
PHP
,
maintenir
par
Armand
Delcros1
•
à
brief
PHP
Tutorial2
.
Qu
’
être
PHP
?
PHP
être
langage
de
scripting
embarquer
dans
page
HTML
traiter
par
serveur
.
PHP
permettre
de
construire
page
HTML
contenir
résultat
de
calcul
de
requête
SQL
adresser
à
système
de
gestion
de
base
de
donnée
(
SGBD
)
.
.
différence
avec
Javascript
?
Javascript
être
en
effet
intégrer
dans
page
HTML
Javascript
être
intéprêtre
par
client
Web
PHP
être
interpréter
par
serveur
Web
(
s
’
être
inclure
être
module
serveur
web
)
.
client
web
recoit
HTML
voir
apparaître
code
PHP
.
.
choisir
PHP
lieu
de
Javascript
?
n
’
avoir
à
choisir
entre
PHP
Javascript
.
en
réalité
utilisation
être
différent
:
Javascript
être
adapter
à
l
’
aspect
présentation
manipulation
client
Web
.
PHP
être
adapter
à
création
de
page
HTML
dynamique
rapide
.
PHP
permettre
de
faire
page
HTML
dynamique
,
dans
sens|sen
deux
appel
consécutif
à
URL
pouvoir
donner
deux
page
HTML
différent
.
de
page
être
statique
.
pouvoir
dire
qu
’
niveau
serveur
page
être
dynamique
qu
’
apparaître
être
statique
niveau
client
Web
.
Javascript
permettre
de
générer
page
dynamique
pour
client
Web
,
c
’
être
principal
différence
entre
deux
outil
de
développement
.
.
passe-t-il
à
l
’
affichage
d
’
page
PHP
?
L
’
interpréteur
intégré
fonctionner
de
manière
suivant
:
•
serveur
HTTP
reconnaître
fichier
intégrer
code
PHP
parcourir
avant
de
l
’
expédier
client
.
•
S
’
rencontrer
instruction
PHP
,
transmettre
à
l
’
interpréteur
.
•
L
’
interpréteur
exécuter
l
’
instruction
transmettre
sortie
serveur
.
•
rediriger
sortie
vers
client
.
importer
de
signaler
programme
PHP
être
transmettre
client
exécuter
sur
serveur
.
poste
client
faire
de
différence
entre
page
statique
générer
.
n
’
avoir
lieu
de
configurer
navigateur
pour
supporter
PHP
.
.
intégrer
PHP
dans
HTML
?
serveur
HTTP
reconnaître
code
PHP
falloir
:
•
nom
document
HTML
terminer
par
suffixe
«
php
»
«
html
»
.
http
:
/
/
dns-remplacer
/
adelcros
/
doc
/
php
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
article
/
devl
/
php3
/
tut
/
php3_
dns-remplacer
chapitre
.
FAQ
élémentaire
sur
PHP
•
code
PHP
être
délimiter
par
balise
«
<
?
php
»
«
?
>
»
.
possibilité
langage
PHP
être
étendre
,
suffire
d
’
connaissance
élémentaire
langage
pour
réaliser
application
Web
courant
.
langage
disposer
d
’
bibliothèque
de
fonction
étendre
.
fournir
en
particulier
interface
avec
principal
système
de
gestion
de
base
de
donnée
avec
système
de
gestion
de
fichier
serveur
.
reporter
à
documentation
langage3
pour
description
de
fonction
.
http
:
/
/
dns-remplacer
chapitre
.
premier
exemple
en
PHP
corriger
exercice
de
chapitre
trouver
chapitre
.
.
premier
programme
<
html
>
<
body
>
<
?
php
echo
`
`
hello
world
!
`
`
;
?
>
<
/
body
>
<
/
html
>
remarque
«
echo1
»
servir
à
produire
affichage
.
remarque
«
echo
»
afficher
texte
,
texte
devoir
être
entourer
de
guillemet
«
`
`
»
.
«
echo
»
essayer
de
comprendre
.
par
exemple
«
echo
;
»
provoquer
l
’
affichage
de
«
»
.
«
echo
`
`
'
'
;
»
provoquer
l
’
affichage
de
«
»
.
pour
voir
résultat
produire
:
dns-remplacer
en
aller
voir
code
source
de
page
produire
(
sur
navigateur
)
voir
:
<
html
>
<
body
>
hello
world
!
<
/
body
>
<
/
html
>
C
’
être
normal
:
souvenir
serveur
exécuter
programme
n
’
envoyer
client
résultat
,
programme
même
.
.
deuxième
programme
<
html
>
<
body
>
<
?
php
phpinfo
(
)
;
?
>
<
/
body
>
<
/
html
>
remarquer
obtenir
renseignement
possible
sur
version
de
PHP
installer
sur
machine
.
remarque
«
phpinfo3
»
être
fonction
:
seul
instruction
permettre
à
PHP
d
’
effectuer
de
chose
.
voir
écrire
propre
fonction
.
reconnaître
fonction
parenthèse
suivre
.
pour
voir
résultat
produire
:
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exemple
en
PHP
.
rappel
(
?
)
d
’
algorithmique
.
structure
de
base
d
’
programme
être
séquence
:
instruction
être
exécuter
un
après
autre
,
dans
l
’
ordre
être
écrire
.
intructions
être
terminer
par
point-virgule
(
«
;
»
)
.
n
’
être
séparateur
d
’
instruction
.
.
exister
structure
permettre
de
rompre
séquence
.
trouver
princi-
pale
.
avoir
d
’
autre
...
.
L
’
alternative5
:
test
être
exécuter
;
selon
résultat
oui
,
partie
programme
autre
être
exécuter
.
syntaxe
en
PHP
être
:
if
(
test
)
{
instruction
à
exécuter
réponse
être
oui
}
else
{
instruction
à
exécuter
réponse
être
}
.
L
’
itération6
(
)
:
partie
programme
être
exécuter
résultat
d
’
test
être
oui
(
calcul
être
faire
avant
entrée
dans
boucle
)
.
syntaxe
en
PHP
être
:
while
(
test
)
{
instruction
à
exécuter
réponse
être
oui
}
.
boucle
POUR7
:
n
’
être
qu
’
cas
particulier
de
boucle
.
forme
général
être
:
for
(
avant
d
’
entrer
;
test
;
action
de
fin
de
boucle
)
{
instruction
à
exécuter
rréponse
test
être
oui
}
«
avant
d
’
entrer
»
«
action
de
fin
de
boucle
»
être
action
quelconque
.
forme
être
équivalent
à
:
avant
d
’
entrer
;
while
(
test
)
{
instruction
à
exécuter
réponse
test
être
oui
;
action
de
fin
de
boucle
;
}
l
’
utiliser
sous
forme
:
for
(
initialiser
compteur
;
test
compteur
;
incrémenter
compteur
)
{
instruction
à
exécuter
réponse
test
être
oui
}
dans
l
’
exemple
suivre
provoquer
l
’
affichage
:
«
»
:
for
(
$
i
=
;
$
i
<
;
$
i
=
$
i+2
)
{
echo
$
i
;
}
.
variable
expression
.
nom
variable
être
préfixer
par
$
.
n
’
être
nécessaire
de
déclarer
variable
avant
de
utiliser
.
contrôle
type
être
souple
...
.
L
’
affectation
être
noter
«
=
»
.
.
opérateur
classique
sur
nombre
être
disponible
:
«
+
»
(
addition
)
,
«
-
»
(
soustraction
)
,
«
*
»
(
multiplication
)
,
«
/
»
(
division
)
.
.
seul
opérateur
sur
chaîne
être
concaténation
,
symboliser
par
point
(
«
.
»
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
#
dns-remplacer
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
premier
exemple
en
PHP
.
opérateur
de
comparaison
être
(
)
classique
:
«
<
»
(
inférieur
)
,
«
<
=
»
(
inférieur
égal
)
,
«
>
»
(
supérieur
)
,
«
>
=
»
(
supérieur
égal
)
,
«
=
=
»
(
égal
)
,
«
!
=
»
(
différent
)
.
.
opérateur
logique
de
base
être
«
|
|
»
(
)
«
&
&
»
(
)
.
.
fonction
fonction
sans
paramètre
définir
par
:
function
nom_de_la_fonction
(
)
{
corps_de_la_fonction
}
fonction
avec
paramètre
définir
par
:
function
nom_de_la_fonction
(
paramètre
)
{
corps_de_la_fonction
}
paramètre
être
passer
par
valeur
.
résultat
de
fonction
être
valeur
trouver
derrière
premier
instruction
return
rencontrer
.
par
exemple
«
return
;
»
.
n
’
avoir
de
procédure
:
vouloir
qu
’
un
de
fonction
comporter
procédure
,
suffire
de
faire
renvoyer
valeur
,
par
exemple
avec
«
return
;
»
.
.
à
dans
exercice
suivre
faire
en
sorte
résultat
être
présenter
(
laisser
libre
choix
sur
sens|sen
exact
de
mot
...
)
.
.
écrire
programme
PHP
afficher
nombre
impair
entre
,
par
ordre
croître
:
«
...
»
.
exemple
:
dns-remplacer
.
écrire
programme
écrire
fois
«
devoir
faire
sauvegarde
régulier
de
fichier
.
»
exemple
:
dns-remplacer
.
écrire
programme
afficher
table
de
multiplication
par
.
exemple
:
dns-remplacer
:
dns-remplacer
.
.
écrire
programme
calculer
!
.
exemple
:
dns-remplacer
.
écrire
programme
affiche
:
exemple
:
dns-remplacé
.
écrire
programme
afficher
table
de
multiplication
total
de
{
,
...
,
}
par
{
,
...
,
}
.
exemple
:
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exemple
en
PHP
.
écrire
fonction
renvoyer
n
!
.
utiliser
fonction
pour
construire
table
factoriel
.
exemple
:
dns-remplacer
.
.
écrire
fonction
afficher
triangle
admettre
paramètre
nombre
de
ligne
triangle
:
*
*
*
*
*
*
utiliser
fonction
pour
dessiner
demi-sapin
(
de
en
)
:
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
exemple
:
dns-remplacer
.
coefficient
binôme
:
avoir
.
écrire
fonction
renvoyer
n
!
.
b
.
utiliser
fonction
précédent
pour
écrire
fonction
renvoyer
c
.
utiliser
fonction
précédent
dans
programme
afficher
coefficient
binôme
pour
valeur
de
n
dans
{
,
,
.
.
,
}
:
exemple
:
dns-remplacer
.
suite
de
Fibonnacci
être
définir
par
relation
suivant
:
•
F
=
,
•
F
=
,
•
F
=
F
+
F
n
>
.
n
n-1
n-2
F
=
,
F
=
,
F
=
=
,
F
=
=
,
F
=
=
,
F
=
=
,
F
=
=
,
F
=
=
...
écrire
programme
afficher
premier
valeur
de
F
.
n
exemple
:
dns-remplacer
.
Fibonnacci
,
retour
:
afficher
rapport
différence
avec
nombre
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exemple
en
PHP
exemple
:
dns-remplacer
.
afficher
cadre
10x10
.
exemple
:
dns-remplacer
dns-remplacer
.
tableau
d
’
addition
:
faire
réaliser
par
page
PHP
tableau
d
’
addition
à
compléter
(
pour
l
’
entraînement
d
’
enfant
calcul
)
.
exemple
:
dns-remplacer
dns-remplacer
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exemple
en
PHP
chapitre
.
formulaire
en
HTML
.
présentation
formulaire
de
saisie
permettre
à
l
’
utilisateur
de
fournir
information
d
’
obtenir
réponse
personnaliser
.
information
contenir
dans
champ
remplir
par
l
’
utilisateur
être
transmettre
par
programme
client
serveur
transmettre
à
tour
à
programme
de
traitement
,
CGI
(
Common
Gateway
interface
)
,
script
de
type
PHP
.
structure
d
’
formulaire
de
saisie
être
simple
,
composer
d
’
élément
FORM
contenir
essentielle-
mentir
suite
de
contrôle
(
élément
input
,
textarea
,
select
,
button
,
etc
.
)
élément
de
structuration
de
document
d
’
aligner
champ
d
’
entrée
.
formulaire
présenter
sous
forme
:
<
form
method
=
'
'
(
)
'
'
action
=
'
'
(
)
'
'
>
texte
,
bouton
,
zone
de
saisie
...
<
input
type
=
'
'
submit
'
'
value
=
'
'
(
)
'
'
/
>
<
/
form
>
:
(
)
désigner
méthode
à
utiliser
pour
envoyer
information
;
c
’
être
«
GET
»
(
par
défaut
;
donnée
formulaire
être
envoyer
dans
l
’
URL
)
«
POST
»
(
donnée
être
envoyer
dans
corps
message
,
être
visible
dans
l
’
URL
)
.
(
)
désigner
l
’
URL
programme
(
CGI
,
PHP
,
etc
.
)
aller
traiter
donnée
.
(
pouvoir
être
mail
,
c
’
être
déconseiller
...
marche
navigateur
de
l
’
utilisateur
être
configurer
.
de
façon
falloir
traiter
donnée
,
stocker
dans
boîte
lettre
faciliter
l
’
automatisation
de
tâche
.
)
(
)
désigner
texte
aller
apparaître
dans
bouton
d
’
envoi
.
dans
l
’
affichage
de
page
,
rien
distinguer
formulaire
reste
texte
.
être
conseiller
de
séparer
reste
par
balise
«
<
hr
/
>
»
avant
,
mettre
dans
tableau
bordure
visible
.
.
principal
contrôle
principal
contrôle
être
:
•
input
:
zone
de
saisie
,
bouton
radio
case
à
cocher
être
définir
par
contrôle
;
syntaxe
(
simplifier
)
être
:
<
input
type
=
'
'
type
'
'
name
=
'
'
nom
'
'
value
=
'
'
valeur
'
'
/
>
:
•
type
pouvoir
être
:
text
pour
zone
de
saisie
sens|sen
habituel
terme
(
zone
rectangulaire
l
’
utilisateur
écrire
don-
naître
,
sur
seul
ligne
)
;
c
’
être
être
dans
zone
être
envoyer
programme
de
traitement
;
password
pour
zone
de
saisie
de
mot
de
passe
(
identique
à
text
,
texte
saisi
n
’
apparaître
à
l
’
écran
sous
forme
d
’
astérisque
,
pour
éviter
d
’
être
lisible
par
tierce
personne
)
;
checkbox
pour
case
à
cocher
;
chapitre
.
formulaire
en
HTML
radio
pour
bouton
radio
(
bouton
radio
de
même
nom
être
exclusif
)
;
submit
pour
bouton
d
’
envoi
;
c
’
être
clic
sur
bouton
envoyer
contenu
formulaire
programme
de
traitement
;
hidden
pour
variable
cacher
;
permettre
de
cacher
valeur
nécessaire
traitement
qu
’
vouloir
voir
afficher
à
l
’
écran
;
attention
,
cacher
vouloir
dire
secret
:
valeur
être
visible
dans
code
source
de
page
;
reset
pour
remettre
zone
de
saisie
à
valeur
par
défaut
(
valeur
qu
’
avoir
chargement
de
page
)
;
•
nom
être
nom
de
variable
être
envoyer
programme
;
n
’
avoir
avoir
de
sens|sen
pour
bouton
submit
reset
,
c
’
être
nécessaire
pour
autre
;
zone
devoir
en
principe
avoir
nom
différent
,
sauf
pour
bouton
radio
:
bouton
radio
de
même
nom
être
exclusif
;
•
value
être
valeur
contrôle
:
•
pour
text
password
s
’
agir
d
’
valeur
permettre
de
pré-remplir
zone
;
•
pour
checkbox
radio
c
’
être
valeur
être
donner
à
variable
case
être
sélectionner
;
•
pour
submit
reset
c
’
être
texte
être
écrire
dans
bouton
;
•
pour
hidden
c
’
être
valeur
être
donner
à
variable
.
•
select
:
pour
créer
liste
déroulant
;
exemple
d
’
utilisation
:
<
select
name
=
'
'
menu
'
'
>
<
option
>
premier
choix
<
/
option
>
<
option
>
deuxième
choix
<
/
option
>
<
option
>
troisième
choix
<
/
option
>
<
/
select
>
zone
permettre
d
’
envoyer
variable
de
nom
menu
avoir
pour
valeur
choix
sélectionner
.
pour
pré-sélectionner
choix
dans
liste
suffire
d
’
ajouter
l
’
attribut
selected
=
'
'
selected
'
'
dans
balise
<
option
>
correspondant
.
pouvoir
avoir
besoin
d
’
envoyer
valeur
différent
de
être
afficher
(
par
exemple
demander
à
l
’
utilisateur
de
choisir
personne
par
nom
prénom
,
envoyer
l
’
identifier
de
personne
dans
table
d
’
base
de
donnée
)
.
utiliser
l
’
attribut
valoir
dans
balise
<
option
>
par
exemple
:
<
select
name
=
'
'
responsable
'
'
>
<
option
valoir
=
'
'
'
'
>
marcel
durand
<
/
option
>
<
option
valoir
=
'
'
'
'
>
georges
dupont
<
/
option
>
<
option
valoir
=
'
'
'
'
>
pierre
martin
<
/
option
>
<
/
select
>
dans
exemple
choisir
georges
dupont
variable
responsable
avoir
valeur
.
•
textarea
:
pour
zone
de
saisie
grand
qu
’
avec
input
;
exemple
d
’
utilisation
:
<
textarea
name
=
'
'
nom
'
'
rows
=
'
'
'
'
col
=
'
'
'
'
>
texte
par
défaut
...
<
/
textarea
>
.
exemple
pouvoir
trouver
deux
exemple
(
identique
,
sauf
pour
méthode
d
’
envoi
:
GET
pour
l
’
un
,
POST
pour
l
’
autre
)
adresse
suivant
:
http
:
/
/
dns-remplacer
/
~
gonzalez
/
prog
/
dns-remplacer
http
:
/
/
dns-remplacer
/
~
gonzalez
/
prog
/
dns-remplacer
pouvoir
tester
propre
formulaire
en
suivre
instruction
de
page
:
chapitre
.
formulaire
en
HTML
http
:
/
/
dns-remplacer
/
~
torre
/
enseignement
/
TPs
/
formulaire
formulaire
devoir
contenir
attribut
cacher
identifier
champ
action
devoir
contenir
valeur
:
http
:
/
/
dns-remplacer
/
~
torre
/
enseignement
/
TPs
/
formulaire
/
dns-remplacer
chapitre
.
formulaire
en
HTML
chapitre
.
traitement
d
’
formulaire
en
PHP
corriger
exercice
de
chapitre
trouver
chapitre
.
.
traitement
donnée
d
’
formulaire
en
PHP
programme
PHP
pouvoir
recevoir
variable
.
connaître
par
avance
nom
variable
être
passer
programme
,
suffire
de
appeler
par
nom
(
avec
syntaxe
PHP
,
c
’
précéder
d
’
$
)
.
par
exemple
l
’
appel
de
l
’
URL
suivant
http
:
/
/
dns-remplacer
/
~
gonzalez
/
prog
/
dns-remplacer
?
x
=
&
=
autoriser
l
’
emploi
variable
«
$
x
»
(
valoir
)
«
$
»
(
valoir
)
dans
programme
«
dns-remplacé
»
.
attention
!
être
de
en
courant
de
rencontrer
serveur
configurer
en
safe
mode
,
c
’
avec
réglage
destiner
à
protéger
détournement
de
page
par
d
’
éventuel
pirate
.
c
’
être
cas
avoir
accès
paramètre
truc
par
$
truc
par
:
•
$
_GET
[
`
`
truc
'
'
]
$
HTTP_GET_VARS
[
`
`
truc
'
'
]
pour
envoi
par
méthode
GET
:
•
$
_POST
[
`
`
truc
'
'
]
(
choix
)
par
$
HTTP_POST_VARS
[
`
`
truc
'
'
]
pour
envoi
par
méthode
POST
.
dans
suite
supposer
être
en
safe
mode
.
question
être
:
variable
(
avec
valeur
)
être
transmettre
par
formulaire
?
nom
variable
être
champ
formulaire
.
pour
zone
de
saisie
,
texte
tapé
être
transmettre
.
pour
case
à
cocher
,
valeur
être
«
»
case
avoir
être
cocher
,
chaîne
vide
.
pour
bouton
radio
c
’
être
valeur
affecter
à
«
value
»
pour
bouton
sélectionner
.
pour
liste
déroulant
,
c
’
être
valeur
affecter
à
«
option
»
pour
choix
sélectionner
.
.
exercice
.
écrire
formulaire
demander
nom
l
’
âge
de
l
’
utilisateur
.
bouton
submit
de
formulaire
provoquer
l
’
affichage
d
’
page
saluer
l
’
utilisateur
avec
phrase
:
«
bonjour
machin
,
avoir
xx
an
...
»
(
avec
bon
valeur
,
entendre
)
.
exemple
:
dns-remplacer
.
deux
vacancier
avoir
abandonner
à
Montpellier
bébé
de
mois|moi
,
n
’
avoir
être
sage
.
être
surprise
mois|moi
,
rentrer
chez
à
Lille
,
avoir
voir
arriver
enfant
avoir
faire
à
quatre
patte
trajet
Montpellier-Lille
par
l
’
autoroute
.
écrire
formulaire
PHP
permettre
de
saisir
distance
parcourir
par
bébé
,
nombre
d
’
heure
marcher
par
jour
,
nombre
de
jour
qu
’
avoir
passer
sur
route
.
formulaire
afficher
vitesse
bébé
.
exemple
:
dns-remplacer
.
écrire
formulaire
demander
nom
sexe
de
l
’
utilisateur
(
M
madame
)
.
formulaire
appeler
page
afficher
«
bonjour
monsieur
truc
»
«
bonjour
madame
bidule
»
suivre
cas
(
avec
vrai
nom
de
personne
,
entendre
!
)
:
exemple
:
dns-remplacer
.
permis
de
chasse
à
point
remplacer
permis
de
chasse
traditionnel
.
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
traitement
d
’
formulaire
en
PHP
chasseur
posséder
départ
capital
de
point
.
S
’
tuer
poule
perdre
point
,
point
pour
chien
,
point
pour
vache
point
s
’
tuer
meilleur
ami
.
permis
coûter
franc
.
écrire
formulaire
PHP
permettre
de
saisir
liste
victime
chasseur
calculer
prix
à
payer
pour
permis
supplémentaire
nécessaire
.
exemple
:
dns-remplacer
.
écrire
formulaire
«
calculateur
»
:
case
pour
saisie
opérande
,
groupe
de
case
à
cocher
(
liste
déroulant
)
pour
choix
de
l
’
opération
,
affichage
résultat
de
l
’
opération
.
exemple
:
dns-remplacer
.
écrire
formulaire
demander
deux
nombre
avoir
b
.
afficher
table
de
multiplication
par
avoir
sur
b
ligne
.
formulaire
devoir
souvenir
valeur
choisir
.
exemple
:
dns-remplacer
.
écrire
formulaire
demander
mot
de
passe
.
deux
mot
de
passe
différent
être
accepter
.
saluer
l
’
utilisateur
en
fonction
mot
de
passe
utiliser
.
exemple
:
dns-remplacer
.
addition
à
compléter
:
formulaire
proposer
addition
incomplet
l
’
utilisateur
devoir
terminer
.
exemple
:
dns-remplacer
.
devinette
n◦1
:
devoir
deviner
nombre
programme
avoir
choisir
.
proposer
solution
,
programme
répondre
«
petit
»
«
grand
»
suivre
cas
,
jusqu
’
à
trouver
bon
nombre
.
exemple
:
dns-remplacer
.
devinette
n◦2
:
même
chose
l
’
exercice
précédent
,
rôle
être
inverser
(
c
’
être
programme
deviner
)
.
exemple
:
dns-remplacer
.
pipotron
:
l
’
ordinateur
aider
à
écrire
n
’
importer
.
exemple
:
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
chaîne
de
caractère
corriger
exercice
de
chapitre
trouver
chapitre
.
création
de
page
web
nécessiter
plupart
temps
manipulation
de
chaîne
de
caractère
.
aller
en
explorer
principal
fonction
disponible
en
PHP
.
.
Qu
’
être
qu
’
chaîne
de
caractère
?
trois
chose
à
savoir
:
.
mot
anglais
désigner
chaîne
de
caractère
être
«
string
»
(
utile
,
documentation
être
en
anglais
)
.
.
avoir
à
portée
de
main
documentation
de
PHP
.
,
d
’
après
point
précédent
,
aller
voir
chapitre
String1
.
.
chaîne
,
c
’
être
n
’
importer
entourer
de
guillemet
(
«
`
`
»
)
d
’
apostrophe
(
«
’
»
)
.
deux
exemple
:
'
'
être|suivre
chaîne
de
caractère
.
'
'
’
être|suivre
chaîne
de
caractère
.
’
.
choisir
?
guillemet
apostrophe
?
C
’
être
pareil
,
sauf
:
•
commencer
par
l
’
un
,
finir
par
même
.
deux
exemple
être
chaîne
de
caractère
:
'
'
être|suivre
chaîne
de
caractère
.
’
’
être|suivre
chaîne
de
caractère
.
'
'
•
chaîne
contenir
apostrophe
,
utiliser
guillemet
,
chaîne
contenir
guillemet
,
utiliser
apostrophe
.
par
exemple
:
'
'
J
’
révais
...
'
'
’
avoir
dire
`
`
bonjour
'
'
.
’
remarque
chaîne
devoir
contenir
deux
,
pouvoir
utiliser
caractère
backslash
(
«
\
»
)
:
’
J\
’
révais
...
m\
’
avoir
dire
`
`
bonjour
'
'
.
’
'
'
J
’
révais
...
m
’
avoir
dire
\
'
'
Bonjour\
'
'
.
'
'
•
variable
être
interpréter
dans
guillemet
,
dans
apostrophe
.
par
exemple
variable
$
avoir
valoir
,
l
’
instruction
«
echo
`
`
$
avoir
'
'
;
»
afficher
«
»
,
«
echo
’
$
avoir
’
;
»
afficher
«
$
avoir
»
.
être
de
caractère
précéder
caractère
backslash
(
sauf
«
\
’
»
)
.
.
principal
utilisation
backslash
caractère
backslash
(
«
\
»
)
permettre
d
’
introduire
dans
chaîne
caractère
pouvoir
être
(
par
exemple
guillemet
dans
chaîne
entourer
de
guillemet
,
retour
à
ligne
,
etc
...
)
.
être
de
faire
caractère
spécial
,
falloir
façon
particulier
de
noter
pour
qu
’
être
inclure
dans
chaîne
.
être
«
\\
»
.
tableau
récapituler
principal
utilisation
backslash
:
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
chaîne
de
caractère
tableau
.
principal
utilisation
backslash
coder
signification
\n
retour
à
ligne
\t
tabulation
\\
backslash
même
(
«
\
»
)
\
'
'
guillemet
(
«
`
`
»
)
dans
chaîne
entourer
de
guillemet
\
’
apostrophe
(
«
’
»
)
dans
chaîne
entourer
d
’
apostrophe
\
$
dollar
(
«
$
»
)
.
principal
opération
sur
chaîne
affectation
:
variable
,
l
’
affectation
d
’
variable
chaîne
faire
par
symbole
«
=
»
:
$
avoir
=
'
'
bla
bla
bla
bla
...
'
'
;
affichage
:
pour
valeur
,
l
’
affichage
faire
par
l
’
instruction
«
echo
»
.
concaténation
:
L
’
opérateur
de
concaténation
être
point
(
«
.
»
)
.
.
principal
fonction
s
’
agir
fonction
principal
,
être
expliquer
,
signifier
qu
’
falloir
aller
voir
dans
documentation
de
PHP2
par
propre
moyen
.
conversion
majuscules-minuscule
:
«
strtolower3
»
.
conversion
minuscules-majuscule
:
«
strtoupper4
»
.
découper
chaîne
:
«
explode5
»
«
split6
»
(
renvoyer
tableau
)
.
fonction
inverse
être
«
implode7
»
«
join8
»
enlever
espace
en
début
fin
d
’
chaîne
:
«
ltrim9
»
,
«
chop10
»
,
«
trim11
»
.
longueur
d
’
chaîne
:
«
strlen12
»
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
chaîne
de
caractère
position
d
’
chaîne
dans
autre
:
«
strpos13
»
remplacer
partie
d
’
chaîne
par
autre
:
«
str_replace14
»
«
substr_replace15
»
extrait
d
’
chaîne
:
«
substr16
»
.
conversion
de
type
PHP
être
extrémement
tolérer
sur
conversion
de
type
essayer
de
faire
possible
.
N
’
profiter
prévoir
(
comprendre
)
comportement
,
évit-
era
sans
doute
déconvenue
...
exemple
de
qu
’
pouvoir
faire
(
éviter
d
’
en
abuser
...
)
:
<
?
php
$
truc
=
`
`
'
'
;
echo
$
truc
.
'
'
`
`
.gettype
(
$
truc
)
.
`
`
<
br
/
>
\n
'
'
;
$
truc
=
$
truc
.
`
`
'
'
;
echo
$
truc
.
'
'
`
`
.gettype
(
$
truc
)
.
`
`
<
br
/
>
\n
'
'
;
$
truc
=
$
truc
*
;
echo
$
truc
.
'
'
`
`
.gettype
(
$
truc
)
.
`
`
<
br
/
>
\n
'
'
;
$
truc
=
$
truc
.
`
`
'
'
;
echo
$
truc
.
'
'
`
`
.gettype
(
$
truc
)
.
`
`
<
br
/
>
\n
'
'
;
$
truc
=
$
truc
/
;
echo
$
truc
.
'
'
`
`
.gettype
(
$
truc
)
.
`
`
<
br
/
>
\n
'
'
;
?
>
programme
afficher
:
string
string
integer
string
double
remarquer
commande
«
echo
$
truc
.
'
'
`
`
.gettype
(
$
truc
)
.
`
`
<
br
/
>
\n
'
'
;
»
provoquer
l
’
affichage
de
valeur
de
$
truc
,
suivre
de
type
,
être
terminer
par
passage
à
ligne
.
.
exercice
écrire
formulaire
devoir
vérifier
l
’
identité
de
l
’
utilisateur
en
demander
nom
,
prénom
mot
de
passe
(
dernier
devoir
apparaître
à
l
’
écran
pendant
frappe
)
.
l
’
utilisateur
n
’
être
reconnaître
,
seul
s
’
afficher
formulaire
.
l
’
utilisateur
être
reconnaître
,
seul
s
’
afficher
message
d
’
accueil
.
casse
valeur
devoir
être
prise
en
compte
(
c
’
fait
être
taper
en
majuscule
en
minuscule
devoir
changer
comportement
page
)
.
espace
taper
en
début
en
fin
de
mot
de
passe
,
de
nom
de
prénom
devoir
être
éliminer
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
chaîne
de
caractère
trouver
exemple
sur
page
dns-remplacer
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
tableau
corriger
exercice
de
chapitre
trouver
chapitre
.
stockage
manipulation
d
’
grand
nombre
de
donnée
nécessiter
l
’
utilisation
de
tableau
.
.
Qu
’
être
qu
’
tableau
?
pour
simplifier
,
définition
équivalent
:
•
c
’
être
variable
pouvoir
stocker
valeur
à
fois
,
être
numéroter
;
•
:
c
’
être
ensemble
de
variable
différent
,
regrouper
sous
même
nom
,
être
différencier
autre
par
numéro
;
•
:
c
’
être
représentation
informatique
d
’
vecteur
(
d
’
matrice
)
,
composante
être
connaître
par
indice
.
D
’
manière
général
:
•
tableau
être
d
’
abord
variable
,
nom
commencer
par
dollar
(
«
$
»
)
.
•
syntaxe
pour
accéder
case
d
’
tableau
être
même
dans
plupart
langage
:
«
$
x
[
]
»
désigner
5ème
élément
tableau
«
$
x
»
.
remarque
en
PHP
numérotation
élément
d
’
tableau
commencer
à
zéro
.
.
exemple
d
’
utilisation
.
remplir
afficher
contenu
tableau
pouvoir
remplir
,
par
exemple
,
case
d
’
tableau
un
par
un
:
$
t
[
]
=
'
'
bonjour
'
'
;
$
t
[
]
=
'
'
bonsoir
'
'
;
$
t
[
]
=
'
'
bla
bla
bla
'
'
;
pouvoir
utiliser
boucle
for
pour
remplir
série
de
case
:
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
$
t
[
$
i
]
=
$
i
*
;
}
pour
de
l
’
affichage
,
être
obliger
de
passer
par
case
un
par
un
:
l
’
utilisation
de
«
echo
$
t
;
»
permettre
d
’
afficher
contenu
tableau
.
echo
`
`
caser
numéro
:
`
`
.
$
t
[
]
.
`
`
<
br
/
>
\n
'
'
;
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
echo
`
`
caser
numéro
$
i
:
`
`
.
$
t
[
$
i
]
.
`
`
<
br
/
>
\n
'
'
;
}
chapitre
.
tableau
.
exemple
complet
en
regrouper
ligne
précédent
(
en
habiller
)
obtenir
programme
suivre
(
dns-remplacer
)
:
<
html
>
<
body
>
<
h@card@
>
remplissage
tableau
<
/
h2
>
(
passer
à
l
’
écran
dans
partie
:
normal
,
c
’
être
travail
sur
modification
variable
,
par
sur
affichage
.
)
<
?
php
$
t
[
]
=
'
'
bonjour
'
'
;
$
t
[
]
=
'
'
bonsoir
'
'
;
$
t
[
]
=
'
'
bla
bla
bla
'
'
;
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
$
t
[
$
i
]
=
$
i
*
;
}
?
>
<
h@card@
>
affichage
de
case
particulier
<
/
h2
>
<
?
php
echo
`
`
caser
numéro
:
`
`
.
$
t
[
]
.
`
`
<
br
/
>
\n
'
'
.
`
`
caser
numéro
:
`
`
.
$
t
[
]
.
`
`
<
br
/
>
\n
'
'
;
?
>
<
h@card@
>
affichage
d
’
suite
de
case
<
/
h2
>
<
?
php
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
echo
`
`
caser
numéro
$
i
:
`
`
.
$
t
[
$
i
]
.
`
`
<
br
/
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
.
tableau
associatif
s
’
agir
d
’
généralisation
tableau
,
lieu
d
’
utiliser
nombre
pour
indice
pouvoir
utiliser
n
’
importer
...
programme
(
dns-remplacer
)
permettre
de
choisir
prénom
dans
liste
déroulant
d
’
afficher
renseignement
correspondant
.
<
html
>
<
body
>
<
form
action
=
'
'
dns-remplacer
'
'
>
<
select
name
=
'
'
prenom
'
'
>
<
option
valoir
=
'
'
Thècle
'
'
>
Thècle
<
/
option
>
<
option
valoir
=
'
'
Édith
'
'
>
Édith
<
/
option
>
<
option
valoir
=
'
'
Kelly
'
'
>
Kelly
<
/
option
>
<
option
valoir
=
'
'
mélusine
'
'
>
mélusine
<
/
option
>
<
option
valoir
=
'
'
Elmer
'
'
>
Elmer
<
/
option
>
<
/
select
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
renseignement
'
'
/
>
<
/
form
>
<
?
php
$
nom
[
`
`
Thècle
'
'
]
=
'
'
Assicmonpote
'
'
;
$
nom
[
`
`
Édith
'
'
]
=
'
'
Avuleur
'
'
;
$
nom
[
`
`
Kelly
'
'
]
=
'
'
Diocy
'
'
;
$
nom
[
`
`
mélusine
'
'
]
=
'
'
Enfaillite
'
'
;
$
nom
[
`
`
Elmer
'
'
]
=
'
'
Hitmieux
'
'
;
$
adresse
[
`
`
Thècle
'
'
]
=
'
'
rue
Alex
KUZBIDON
'
'
;
$
adresse
[
`
`
Édith
'
'
]
=
'
'
rue
ondin
OUCESOIR
'
'
;
$
adresse
[
`
`
Kelly
'
'
]
=
'
'
boulevard
roser
REMECITOYENS
'
'
;
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
tableau
$
adresse
[
`
`
mélusine
'
'
]
=
'
'
rue
Jean
TANLAMER
'
'
;
$
adresse
[
`
`
Elmer
'
'
]
=
'
'
avenu
Dino
ZORE
'
'
;
$
ville
[
`
`
Thècle
'
'
]
=
'
'
Rennes
'
'
;
$
ville
[
`
`
Édith
'
'
]
=
'
'
Douarnenez
'
'
;
$
ville
[
`
`
Kelly
'
'
]
=
'
'
Auchel
'
'
;
$
ville
[
`
`
mélusine
'
'
]
=
'
'
Chamonix
'
'
;
$
ville
[
`
`
Elmer
'
'
]
=
'
'
Langres
'
'
;
if
(
isset
(
$
prenom
)
)
{
echo
`
`
prénom
:
$
prenom
<
br
/
>
\nNom
:
`
`
.
$
nom
[
$
prenom
]
.
`
`
<
br
/
>
\nAdresse
:
`
`
.
$
adresse
[
$
prenom
]
.
`
`
<
br
/
>
\nVille
:
`
`
.
$
ville
[
$
prenom
]
;
}
?
>
<
/
body
>
<
/
html
>
.
parcours
d
’
tableau
associatif
travailler
avec
tableau
classique
(
à
indice
numérique
)
,
être
facile
d
’
en
parcourir
case
avec
boucle
for
.
pour
parcourir
tableau
associatif
,
c
’
être
direct
.
méthode
classique
marcher
:
fonction
count3
donner
résultat
exploitable
dans
cas
d
’
tableau
associatif
.
être
difficile
d
’
imaginer
,
par
exemple
pour
l
’
exemple
précédent
,
boucle
construire
suite
«
Thècle
,
Édith
,
Kelly
,
mélusine
,
Elmer
»
.
valeur
,
falloir
aller
chercher
dans
tableau
même
.
énerver
,
PHP
fournir
qu
’
falloir
.
structure
foreach4
permettre
de
parcourir
tableau
associatif
,
dans
programme
suivre
(
dns-remplacer
)
.
programme
dns-remplacé
parcourir
tableau
$
nom
,
afficher
contenu
,
ligne
d
’
affichage
contenir
couple
clef-valeur
(
clef
correspondre
à
qu
’
avoir
l
’
habitude
d
’
appeler
indice
s
’
agir
d
’
nombre
)
:
<
html
>
<
body
>
<
tabler
border
=
'
'
border
'
'
>
<
?
php
$
nom
[
`
`
Thècle
'
'
]
=
'
'
Assicmonpote
'
'
;
$
nom
[
`
`
Édith
'
'
]
=
'
'
Avuleur
'
'
;
$
nom
[
`
`
Kelly
'
'
]
=
'
'
Diocy
'
'
;
$
nom
[
`
`
mélusine
'
'
]
=
'
'
Enfaillite
'
'
;
$
nom
[
`
`
Elmer
'
'
]
=
'
'
Hitmieux
'
'
;
foreach
(
$
nom
avoir
$
clef
=
>
$
valeur
)
{
echo
`
`
<
tr
>
<
td
>
$
clef
<
/
td
>
<
td
>
$
valeur
<
/
td
>
<
/
tr
>
\n
'
'
;
}
?
>
<
/
table
>
<
/
body
>
<
/
html
>
.
.
exercice
.
disposer
fichier
suivre
contenir
adresse
web
(
empêcher
d
’
en
choisir
d
’
autre
)
.
écrire
programme
(
dns-remplacer
)
lire
fichier
pour
construire
page
web
contenir
liste
de
lien
hypertextes
(
dns-remplacer
)
.
http
:
/
/
dns-remplacer
/
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
foreach
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
tableau
http
:
/
/
dns-remplacer
/
faqs
/
dns-remplacer
#
e-mail
http
:
/
/
dns-remplacer
/
JBT
/
http
:
/
/
dns-remplacer
/
http
:
/
/
dns-remplacer
/
dns-remplacer
/
http
:
/
/
dns-remplacer
/
http
:
/
/
dns-remplacer
/
lepoulpe
.
même
exercice
(
dns-remplacer
)
,
fois
ligne
comprendre
description
site
pointé
,
séparation
être
assurer
par
chaîne
«
`
`
*
*
'
'
»
(
dns-remplacer
)
:
http
:
/
/
dns-remplacer
/
*
*
HoaxBuster
,
premier
...
.
http
:
/
/
dns-remplacer
/
faqs
/
dns-remplacer
#
e-mail
*
*
Est-il
...
.
http
:
/
/
dns-remplacer
/
JBT
/
*
*
Nemo
Joe
bar
team
Spirit
http
:
/
/
dns-remplacer
/
*
*
cercle
zététique
http
:
/
/
dns-remplacer
/
dns-remplacer
/
*
*
éthique
toc
http
:
/
/
dns-remplacer
/
*
*
The
Jacky
Touch
http
:
/
/
dns-remplacer
/
lepoulpe
*
*
poulpe
sur
toile
.
même
exercice
(
dns-remplacer
)
,
fois
description
l
’
adresse
correspondant
être
sur
deux
ligne
consécutif
(
dns-remplacer
)
:
HoaxBuster
,
premier
ressource
francophone
sur
hoax
http
:
/
/
dns-remplacer
/
Est-il
possible
d
’
attraper
virus
en
ouvrir|ouvrer
e-mail
?
http
:
/
/
dns-remplacer
/
faqs
/
dns-remplacer
#
e-mail
Nemo
Joe
bar
team
Spirit
http
:
/
/
dns-remplacer
/
JBT
/
cercle
zététique
http
:
/
/
dns-remplacer
/
éthique
toc
http
:
/
/
dns-remplacer
/
dns-remplacer
/
The
Jacky
Touch
http
:
/
/
dns-remplacer
/
poulpe
sur
toile
http
:
/
/
dns-remplacer
/
lepoulpe
.
donner
liste
de
personne
(
dns-remplacer
)
premier
ligne
:
;
Thor
;
Aipaleur
;
tata
;
Dick
;
Sionnaire
;
dsds
;
Debbie
;
Zoudanlkou
;
dzdz
;
Mélanie
;
Zaitofrai
;
mzmz
;
Helmut
;
Ardelpic
;
haha
;
Jacques-André
;
Lejouré-Lanuit
;
jljl
;
Phil
;
Alapate
;
papa
ligne
être
composer
,
dans
l
’
ordre
,
d
’
identifier
(
nombre
)
,
prénom
,
nom
,
mot
de
passe
.
écrire
page
web
(
dns-remplacer
)
donner
à
sélectionner
personne
afficher
mot
de
passe
.
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
PDO
.
Qu
’
être
PDO
texte
être
extraire
de
«
XXVII
.
fonction
PDO1
»
,
chapitre
manuel
PHP
sur
sur
PHP
net2
.
L
’
extension
PHP
dater
Objects
(
PDO
)
définir
excellent
interface
pour
accéder
à
base
de
donnée
depuis
PHP
.
pilote
de
base
de
donnée
implémenter
dans
l
’
interface
PDO
pouvoir
utiliser
fonctionnal-
ités
spécifique
de
base
de
donnée
en
utiliser
extension
de
fonction
.
noter
pouvoir
exécuter
fonction
de
base
de
donnée
en
utiliser
l
’
extension
PDO
par
même
;
devoir
utiliser
driver
PDO
spécifique
à
base
de
données3
pour
accéder
serveur
de
base
de
donnée
.
PDO
fournir
interface
d
’
abstraction
à
l
’
accès
de
donnée
,
signifier
utiliser
même
fonction
pour
exécuter
requête
récupérer
donnée
base
de
donnée
utiliser
.
PDO
fournir
abstraction
de
base
de
donnée
:
réécrire
SQL
,
n
’
émuler
fonctionnalité
manquant
.
devoir
utiliser
interface
d
’
abstraction
complet
avoir
besoin
de
.
PDO
être
fournir
avec
PHP
être
disponible
en
qu
’
extension
PECL
pour
PHP
;
PDO
requérir
nouveau
fonctionnalité
OO
fournir
par
PHP
,
fonctionner
avec
version
antérieur
de
PHP
.
.
utilité
?
L
’
hétérogénéité
moyen
d
’
accès
base
de
donnée
avoir
être
un
problème
gênant
en
PHP
.
problème
venir
fait
,
par
exemple
,
fonction
permettre
l
’
accès
à
base
PostgreSQL
être
différent
de
pour
MySQL
,
être
différent
de
pour
SQLite
,
etc
.
avoir
pour
effet
de
rendre
difficile
migration
d
’
système
vers
autre
:
avoir
écrire
(
par
exemple
en
cours|cour
)
site
utiliser
base
PostgreSQL
vouloir
transférer
chez
hébergeur
n
’
offrir
MySQL
(
c
’
être
par
exemple
cas
pour
Free
avoir
de
temps
)
:
seul
solution
être
de
reprendre
(
corriger
)
dans
page
appel
à
fonction
concernant
PostgreSQL
.
pouvoir
en
avoir
...
couche
d
’
abstraction4
permettre
d
’
éviter
problème
:
accès
à
base
de
donnée
passer
par
(
avec
même
syntaxe
,
être
base
de
donnée
)
c
’
être
débrouiller
pour
s
’
adapter
à
base
de
donnée
utiliser
.
pour
changer
de
base
de
donnée
(
passer
de
PostgreSQL
à
MySQL
par
exemple
)
n
’
avoir
en
général
qu
’
à
modifier
ligne
,
donner
paramètre
de
base
de
donnée
utiliser
.
.
connecter
à
base
de
donnée
texte
être
extraire
de
«
fonction
PDO5
»
,
chapitre
manuel
PHP
sur
sur
PHP
net6
.
connexion
être
établir
en
créer
instance
de
classe
de
base
de
PDO
.
pouvoir
importer
driver
vouloir
utiliser
;
utiliser
nom
de
classe
PDO
.
constructeur
accepter
paramètre
pour
spécifier
source
de
base
de
donnée
(
connaître
en
DSN
)
optionnellement
,
nom
d
’
utilisateur
mot
de
passe
(
s
’
avoir
un
)
.
suffire
pour
d
’
exécuter
commande
$
dbh
=
new
PDO
(
`
`
type_de_base
:
host
=
machine_qui_héberge_la_base
;
dbname
=
nom_de_la_base
'
'
,
'
'
nom_d_utilisateur
'
'
,
'
'
mot_de_passe
)
;
nom
de
variable
$
dbh
être
sans
importance
.
n
’
être
qu
’
variable
,
pouvoir
donner
nom
plaire
.
falloir
garder
à
l
’
esprit
qu
’
falloir
conserver
variable
(
nom
)
,
c
’
être
permettre
d
’
accéder
à
base
de
donnée
avec
fonction
section
suivant
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
#
dns-remplacer
.
exister
d
’
autre
couche
d
’
abstraction
:
dbx
,
PHPLib
,
ADODB
,
MetaData
,
Pear-DB
,
etc
.
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
chapitre
.
PDO
type_de_base
quant
à
être
valeur
parmi
:
•
mssql
(
FreeTDS
/
Microsoft
SQL
Server
/
Sybase
)
,
•
firebird
(
Firebird
/
Interbase
)
,
•
informix
(
IBM
Informix
Dynamic
Server
)
,
•
mysql
(
MySQL
3.x
/
4.x
/
5.x
)
,
•
oci
(
oracle
Call
interface
)
,
•
odbc
(
ODBC
v3
--
IBM
DB@card@
unixODBC
win32
ODBC
--
)
)
,
•
pgsql
(
PostgreSQL
)
,
•
sqlite
(
SQLite
SQLite
)
.
reporter
à
page
«
fonction
PDO7
»
pour
gestion
erreur
de
connexion
.
connexion
à
base
de
donnée
avoir
réussir
,
instance
de
classe
PDO
être
retourner
à
script
.
connexion
être
actif
l
’
objet
PDO
l
’
être
.
pour
clore
connexion
,
devoir
détruire
l
’
objet
en
assurer
référence
être
effacer
.
pouvoir
faire
en
assigner
NULL
à
variable
gérant
l
’
objet
.
faire
,
PHP
fermer
connexion
script
arriver
à
fin
.
.
exécuter
requête
trouver
d
’
information
sur
page
PDO-
>
query
(
)
manuel
PHP
.
avoir
obtenir
identifier
de
connexion
$
dbh
(
instance
de
classe
de
base
de
PDO
)
,
syntaxe
être
simple
:
$
res
=
$
dbh-
>
query
(
votre_requête
)
;
valeur
renvoyer
(
ranger
dans
variable
$
res
)
N
’
être
résultat
de
l
’
exécution
de
requête
,
identifier
(
propre
système
,
valeur
réel
intéresser
pas9
)
permettre
d
’
accéder
résultat
grâce
fonction
décrire
.
.
nombre
de
ligne
colonne
d
’
requête
select
pouvoir
obtenir
nombre
de
ligne
de
colonne
résultat
d
’
requête
de
type
select
:
$
result
=
$
dbh-
>
query
(
’
select
id
FROM
tabler
’
)
;
echo
$
result-
>
rowCount
(
)
;
/
/
nombre
de
ligne
echo
$
result-
>
columnCount
(
)
;
/
/
nombre
de
champ
avertissement
avec
gestionnaire
de
base
de
donnée
(
en
particulier
Sqlite
)
arriver
méthode
rowCount
(
)
fonctionner
.
dans
cas
,
remplacer
$
res-
>
rowCount
(
)
par
count
(
$
dater
)
(
$
dater
être
égal
à
count
(
$
result-
>
fetchAll
(
)
)
,
voir
section
)
,
produire
même
effet
.
d
’
information
sur
PHP
net
pour
rowCount
(
)
columnCount
(
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
.
faire
c
’
être
objet
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
PDO
.
accéder
résultat
d
’
requête
select
$
result
être
résultat
valide
renvoyer
par
$
dbh-
>
query
(
)
,
$
result-
>
fetchAll
(
)
renvoyer
tableau
à
dimension
contenir
résultat
:
premier
indice
concerner
ligne
,
deuxième
concerner
colonne
.
d
’
information
sur
PHP
net
fetchAll
(
)
.
.
accès
par
nom
colonne
exemple
:
$
result
=
$
dbh-
>
query
(
`
`
select
*
FROM
ville
'
'
)
;
$
dater
=
$
result-
>
fetchAll
(
)
;
foreach
(
$
dater
avoir
$
row
)
{
echo
$
row
[
`
`
codepostal
'
'
]
.
'
'
-
`
`
.
$
row
[
`
`
ville
'
'
]
.
`
`
<
br
/
>
\n
'
'
;
}
.
accès
par
numéro
colonne
exemple
:
$
result
=
$
dbh-
>
query
(
`
`
select
*
FROM
ville
'
'
)
;
$
dater
=
$
result-
>
fetchAll
(
)
;
foreach
(
$
dater
avoir
$
row
)
{
for
(
$
i
=
;
$
i
<
$
result-
>
columnCount
(
)
;
$
i++
)
{
echo
$
row
[
$
i
]
.
'
'
*
*
`
`
;
}
echo
`
`
<
br
/
>
\n
'
'
;
}
.
accès
par
numéro
ligne
numéro
colonne
exemple
:
$
result
=
$
dbh-
>
query
(
`
`
select
*
FROM
ville
'
'
)
;
$
dater
=
$
result-
>
fetchAll
(
)
;
for
(
$
l
=
;
$
l
<
$
result-
>
rowCount
(
)
;
$
l++
)
{
for
(
$
i
=
;
$
i
<
$
result-
>
columnCount
(
)
;
$
i++
)
{
echo
$
dater
[
$
l
]
[
$
i
]
.
'
'
*
*
`
`
;
}
echo
`
`
<
br
/
>
\n
'
'
;
}
.
gestion
erreur
instruction
PDO
échouer
,
message
n
’
être
afficher
.
pouvoir
croire
à
tort
s
’
être
passer
.
être
important
de
savoir
obtenir
information
sur
d
’
éventuel
erreur
.
pour
avoir
information
précis
ligne
,
aller
voir
page
être
extraites13
sur
dns-remplacé
.
pour
suite
continuer
à
placer
dans
cas
avoir
obtenir
identifier
de
connexion
$
dbh
(
instance
de
classe
de
base
de
PDO
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
chapitre
.
PDO
.
coder
d
’
erreur
méthode
$
db-
>
errorCode
(
)
renvoyer
code
d
’
erreur
associer
avec
dernier
opération
effectuer
sur
base
de
donnée
.
valeur
être
(
zéro
)
n
’
avoir
avoir
d
’
erreur
.
.
information
associer
à
l
’
erreur
méthode
$
db-
>
errorInfo
(
)
renvoyer
information
associer
à
l
’
erreur
survenir
de
dernier
opération
sur
base
de
donnée
.
s
’
agir
d
’
tableau
contenir
champ
décrire
tableau
.
tableau
.
champ
de
$
db-
>
errorInfo
(
)
élément
information
code
erreur
SQLSTATE
(
identifier
alphanumérique
de
cinq
caractère
définir
dans
standard
ANSI
SQL
)
.
code
erreur
spécifique
driver
.
message
d
’
erreur
spécifique
driver
.
code
erreur
SQLSTATE
n
’
être
définir
s
’
n
’
avoir
d
’
erreur
spécifique
driver
,
l
’
élément
suivant
l
’
élément
être
définir
à
NULL
.
.
exemple
de
traitement
d
’
erreur
pour
gérer
éventuel
erreur
,
méthode
précédent
pouvoir
être
utiliser
de
façon
(
exé-
cute
requête
$
req
définir
par
)
:
$
db-
>
query
(
$
req
)
;
/
/
exécution
de
reqête
if
(
$
db-
>
errorCode
(
)
!
=
)
{
/
/
avoir
erreur
echo
`
`
<
b
>
erreur
<
/
b
>
sur
requête
<
tt
>
$
req
<
/
tt
>
<
br
/
>
\n
'
'
;
$
t
=
$
db-
>
errorInfo
(
)
;
/
/
récupération
information
sur
l
’
erreur
echo
`
`
<
b
>
coder
erreur
SQLSTATE
:
<
/
b
>
`
`
.
$
t
[
]
.
`
`
<
br
/
>
\n
'
'
;
echo
`
`
<
b
>
coder
erreur
spécifique
driver
:
<
/
b
>
`
`
.
$
t
[
]
.
`
`
<
br
/
>
\n
'
'
;
echo
`
`
<
b
>
message
d
’
erreur
:
<
/
b
>
<
blockquote
>
<
p
>
'
'
.
$
t
[
]
.
`
`
<
/
p
>
<
/
blockquote
>
\n
'
'
;
echo
`
`
<
b
>
programme
avoir
être
interrompre
<
/
b
>
'
'
;
die
(
)
;
}
chapitre
.
programmation
séparer
en
PHP
.
programmation
séparer
programmation
séparer
c
’
être
écrire
programme
en
petit
fichier
lieu
d
’
seul
gros
.
avantage
:
•
fichier
petit
être
facile
à
relire
,
comprendre
,
modifier
,
tester
corriger
.
•
permettre
de
faire
travailler
personne
sur
même
programme
en
même
temps
.
•
permettre
de
regrouper
fonction
être
dans
même
domaine
(
fichier
avoir
propre
cohérence
)
.
•
être
facile
de
réutiliser
travail
faire
.
.
fonction
require
include
fonction
«
require1
»
«
include2
»
permettre
d
’
inclure
fichier
dans
autre
.
être
dire
par
exemple
:
commande
require
remplacer
même
par
contenu
fichier
spécifier
.
différent
façon
d
’
utiliser
fonction
:
.
pour
rendre
homogène
présentation
d
’
site
,
écrire
seul
fois
début
(
avec
partie
head
,
couleur
de
fond
,
couleur
de
texte
,
présentation
grand
titre
,
etc
.
)
fin
de
page
(
avec
par
exemple
signature
adresse
mail
)
dans
fichier
séparer
contenter
d
’
ajouter
dans
feuille
require
début
un
à
fin
sur
fichier
.
.
partie
de
code
être
identique
dans
page
,
l
’
écrire
seul
fois
dans
fichier
séparer
l
’
inclure
par
require
à
fois
qu
’
être
nécessaire
.
façon
de
faire
n
’
avoir
l
’
avantager
de
permettre
de
taper
fois
même
chose
pour
éviter
fatigue
inutile
(
copier-coller
marcher
)
.
utilité
être
de
rendre
modification
facile
à
répercuter
:
décider
de
changer
présentation
global
de
site
,
n
’
avoir
qu
’
seul
fichier
à
modifier
;
décider
de
modifier
partie
de
code
commun
(
façon
de
faire
calcul
,
façon
de
connecter
,
etc
.
)
,
n
’
avoir
qu
’
seul
fichier
à
modifier
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
programmation
séparer
en
PHP
chapitre
.
identification
en
PHP
n
’
aborder
l
’
identification
gérer
par
navigateur
.
.
préliminaire
:
fonction
header
fonction
header1
permettre
de
spécifier
en-tête
HTTP
de
l
’
envoi
fichier
HTML
.
reporter
à
HTTP
Specification2
d
’
information
sur
en-tête
HTTP
.
remarquer
fonction
header
devoir
être
appeler
avant
premier
balise
HTML
,
avant
n
’
importer
envoi
de
com-
mander
PHP
.
aller
utiliser
fonction
pour
demander
vérification
d
’
identité
.
pour
suffire
de
faire
commencer
programme
PHP
par
commande
:
header
(
`
`
WWW-Authenticate
:
basic
realm
=
’
private
’
'
'
)
;
avoir
pour
effet
de
faire
demander
(
retenir
)
nom
mot
de
passe
par
navigateur
.
pouvoir
tester
programme
élémentaire
suivre
(
dns-remplacer
)
:
<
?
php
if
(
!
isset
(
$
PHP_AUTH_USER
)
|
|
!
isset
(
$
PHP_AUTH_PW
)
)
{
header
(
`
`
WWW-Authenticate
:
basic
realm
=
’
private
’
'
'
)
;
}
else
{
echo
`
`
<
html
>
<
body
>
'
'
;
echo
`
`
donnée
connaître
être
$
PHP_AUTH_USER
$
PHP_AUTH_PW\n
'
'
;
echo
`
`
<
/
body
>
<
/
html
>
'
'
;
}
?
>
pouvoir
remarquer
demande
n
’
être
faire
de
premier
exécution
de
page
.
seul
façon
,
avec
programme
qu
’
être
écrire
,
de
devoir
répondre
à
nouveau
à
question
être
de
sortir
de
navigateur
(
fermer
fenêtre
navigateur
,
oui
!
)
de
relancer
.
attention
!
serveur
être
configurer
en
safe
mode
n
’
avoir
accès
variable
$
PHP_AUTH_USER
$
PHP_AUTH_PW
à
$
_SERVER
[
`
`
PHP_AUTH_USER
'
'
]
à
$
_SERVER
[
`
`
PHP_AUTH_PW
'
'
]
serveur
être
configurer
en
safe
mode
,
voir
section
.
C
’
être
propriété
aller
utiliser
pour
gérer
l
’
identification
utilisateur
.
.
contrôle
mot
de
passe
manquer
qu
’
seul
chose
(
!
)
programme
précédent
pour
être
parfaire
:
tester
valeur
variable
$
PHP_AUTH_USER
(
contenir
nom
)
$
PHP_AUTH_PW
(
contenir
mot
de
passe
)
pour
vérifier
qu
’
avoir
affaire
à
bon
personne
.
version
simple
pouvoir
ressembler
à
(
dns-remplacer
)
:
<
?
php
if
(
(
$
PHP_AUTH_USER
=
=
'
'
marcel
'
'
)
&
&
(
$
PHP_AUTH_PW
=
=
'
'
bidule
'
'
)
)
{
echo
`
`
<
html
>
<
body
>
'
'
;
echo
`
`
bravo
,
identification
réussie.\n
'
'
;
echo
`
`
<
/
body
>
<
/
html
>
'
'
;
}
else
{
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
Protocols
/
rfc2616
/
rfc2616
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
identification
en
PHP
header
(
`
`
WWW-Authenticate
:
basic
realm
=
’
private
’
'
'
)
;
}
?
>
.
amélioration
:
utilisateur
être
rare
,
l
’
accès
à
page
être
contrôler
par
mot
de
passe
,
utilisateur
avoir
même
droit
.
falloir
pouvoir
détecter
l
’
identité
de
personne
concerner
moment
de
saisie
mot
de
passe
.
pour
donner
mot
de
passe
différent
à
utilisateur
.
permettre
d
’
avoir
l
’
exemple
suivre
(
dns-remplacer
)
dans
renseignement
être
ranger
dans
tableau
de
chaîne
de
caractère
,
chaîne
par
personne
,
présenter
sous
forme
«
vrai
nom
/
nom
d
’
utilisateur
/
mot
de
passe
»
:
<
?
php
/
/
liste
information
$
liste
=
array
(
`
`
Jean
Némar
/
nemar
/
jjjj
'
'
,
'
'
Sophie
Fonfec
/
fonfec
/
ssss
'
'
,
'
'
Yves
Adrouille-Toultan
/
adrouille
/
yyyy
'
'
)
;
/
/
création
tableau
for
(
$
i
=
;
$
i
<
count
(
$
liste
)
;
$
i++
)
{
$
l
=
explode
(
`
`
/
'
'
,
trim
(
$
liste
[
$
i
]
)
)
;
$
nom
[
$
i
]
=
$
l
[
]
;
/
/
identité
réel
de
l
’
utilisateur
n◦i
$
user
[
$
i
]
=
$
l
[
]
;
/
/
identifier
de
l
’
utilisateur
n◦i
sur
système
$
pass
[
$
i
]
=
$
l
[
]
;
/
/
mot
de
passe
de
l
’
utilisateur
n◦i
}
$
nbuser
=
count
(
$
liste
)
;
/
/
contrôle
de
l
’
identité
$
ok
=
;
/
/
démarrer
sans
connaître
l
’
utilisateur
for
(
$
i
=
;
$
i
<
$
nbuser
;
$
i++
)
{
if
(
(
$
PHP_AUTH_USER
=
=
$
user
[
$
i
]
)
&
&
(
$
PHP_AUTH_PW
=
=
$
pass
[
$
i
]
)
)
{
/
/
avoir
reconnaître
utilisateur
-
>
garder
numéro
$
ok
=
$
i
;
}
}
/
/
l
’
identification
avoir
rater
,
$
ok
contenir
/
/
demander
nom
mot
de
passe
if
(
$
ok
=
=
)
{
header
(
`
`
WWW-Authenticate
:
basic
realm
=
’
private
’
'
'
)
;
return
;
/
/
noter
l
’
utilisation
de
l
’
instruction
return
/
/
pour
sortir
programme
.
}
/
/
arriver
,
c
’
être
l
’
identification
avoir
réussir
/
/
$
ok
contenir
numéro
de
l
’
utilisateur
echo
`
`
<
html
>
<
body
>
'
'
;
echo
`
`
bravo
,
identification
réussi
.
<
br
/
>
\n
'
'
;
echo
`
`
être
<
em
>
nom
[
$
ok
]
<
/
em
>
,
\n
'
'
;
echo
`
`
identifier
être
<
em
>
$
user
[
$
ok
]
<
/
em
>
,
\n
'
'
;
echo
`
`
mot
de
passe
être
<
em
>
$
pass
[
$
ok
]
<
/
em
>
.
<
br
/
>
\n
'
'
;
/
/
à
d
’
ajouter
concerner
l
’
utilisateur
/
/
...
/
/
...
echo
`
`
<
/
body
>
<
/
html
>
'
'
;
?
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
identification
en
PHP
.
séparer
donnée
traitement
être
à
fait
raisonnable
d
’
imaginer
qu
’
aller
avoir
besoin
de
changer
mot
de
passe
,
qu
’
ajouter
nouveau
utilisateur
en
supprimer
ancien
.
n
’
être
par
contre
raisonnable
d
’
imaginer
aller
faire
avoir
envie
d
’
aller
manipuler
à
fois
fichier
programme
.
(
n
’
être
d
’
souhaitable
...
)
être
préférable
de
garder
information
dans
fichier
séparer
.
Qu
’
être
change
?
grand
chose
:
suffire
par
exemple
de
remplacer
premier
ligne
:
/
/
liste
information
$
liste
=
array
(
`
`
Jean
Némar
/
nemar
/
jjjj
'
'
,
'
'
Sophie
Fonfec
/
fonfec
/
ssss
'
'
,
'
'
Yves
Adrouille-Toultan
/
adrouille
/
yyyy
'
'
)
;
par
lecture
d
’
fichier
contenir
même
information
:
/
/
lire
liste
information
$
liste
=
file
(
`
`
mettre
chemin
d
’
accès
fichier
'
'
)
;
reste
programme
changer
.
fichier
à
lire
être
simple
fichier
texte
,
contenir
dans
cas
présent
:
Jean
Némar
/
nemar
/
jjjj
Sophie
Fonfec
/
fonfec
/
ssss
Yves
Adrouille-Toultan
/
adrouille
/
yyyy
.
cacher
mot
de
passe
solution
précédent
avoir
inconvénient
placer
fichier
de
mot
de
passe
n
’
importer
...
N
’
oublier
page
web
(
HTML
PHP
)
être
faire
pour
être
voir
par
monde
,
depuis
n
’
importer
.
pour
permettre
droit
d
’
accès
de
l
’
arborescence
web
être
positionner
à
lisible
par
(
«
chmod
a+r
*
»
)
falloir
changer
.
poser
problème
,
n
’
entreposer
de
donnée
confidentiel
.
mot
de
passe
,
c
’
être
confidentiel
!
,
faire
?
suffire
de
mettre
fichier
de
mot
de
passe
dans
l
’
arborescence
web
,
de
choisir
emplacement
quelconque
seul
obligation
être
d
’
être
accessible
pour
l
’
utilisateur
apache
(
c
’
être
exécuter
programme
PHP
)
.
chemin
d
’
accès
dans
l
’
instruction
$
liste
=
file
(
`
`
mettre
chemin
d
’
accès
fichier
'
'
)
;
devoir
être
absoudre
,
c
’
partir
de
racine
commencer
par
slash
(
/
)
.
.
Crypter
mot
de
passe
de
rendre
vie
facile
à
éventuel
pirate
,
pouvoir
être
intéressant
de
crypter
mot
de
passe
être
dans
fichier
.
faire
avec
fonction
crypt
.
n
’
avoir
d
’
algorithme
de
décryptage
.
falloir
croire
pouvoir
être
protection
suffisant
.
en
effet
mot
de
passe
,
crypté
,
être
accessible
,
suffire
de
recopier
chez
version
crypté
,
de
décoder
par
force
brut
.
pouvoir
trouver
exemple
de
signifier
en
exécuter
programme
suivre
dns-remplacer
:
.
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
identification
en
PHP
décrypter
mot
de
passe
fournir
version
crypté
d
’
manière
inintelli-
gent
,
bestial
:
essayer
chaîne
de
caractère
possible
(
commencer
par
caractère
,
,
etc
.
)
en
énumérer
systématiqument
(
par
exemple
pour
caractère
:
aa
,
,
ac
,
,
ae
,
...
,
az
,
ba
,
bc
,
...
)
.
pour
chaîne
calculer
version
crypté
(
avec
fonction
crypt
)
comparer
à
qu
’
avoir
fournir
.
être
identique
,
savoir
qu
’
venir
de
trouver
mot
de
passe
.
idiot
,
d
’
accord
,
marche
.
remarque
pour
encombrer
serveur
temps
de
calcul
avoir
être
limiter
,
permettre
de
trouver
à
coup
sûr
(
serveur
n
’
avoir
de
travail
par
)
n
’
importer
mot
de
passe
de
lettre
.
avec
programme
n
’
être
optimiser
,
dans
langage
n
’
être
rapide
...
falloir
cacher
mot
de
passe
...
chapitre
.
session
.
préambule
texte
suivre
être
partie
de
page
consacrer
sessions1
sur
site
de
http
:
/
/
dns-remplacer
:
support
session
de
PHP
être
moyen
de
préserver
donnée
entre
accès
.
permettre
de
créer
application
personnaliser
,
d
’
augmenter
l
’
attraire
de
site
.
visiteur
accéder
à
page
web
voir
assigner
identifier
unique
,
appeler
«
identifier
de
session
»
.
pouvoir
être
stocker
dans
cookie
,
être
propager
dans
l
’
URL
.
support
session
permettre
d
’
enregistrer
nombre
illimiter
de
variable
devoir
être
préserver
entre
requête
.
Lorsqu
’
visiteur
accéder
à
site
,
PHP
aller
vérifier
(
dns-remplacer
_start
être
activer
)
sur
demande
(
avec
session_start
(
)
avec
session_register
(
)
)
s
’
exister
session
même
nom
.
c
’
être
cas
,
l
’
environnement
sauver
être
recréer
.
seul
fonction
nécessaire
pour
usage
simple
session
être
session_start
(
)
,
pouvoir
encourager
à
aller
voir
autres4
.
application
:
identification
visiteur
principe
:
•
deux
variable
de
session
contenir
login
mot
de
passe
visiteur
(
variable
vide
visiteur
n
’
être
identifier
)
.
•
visiteur
n
’
être
identifier
,
menu
proposer
choix
connecter
envoyer
sur
formulaire
de
saisie
(
pouvoir
inclure
formulaire
dans
menu
)
.
visiteur
être
identifier
,
menu
proposer
choix
déconnecter
vider
variable
de
session
contenir
login
mot
de
passe
visiteur
.
•
page
commencer
par
chose
ressembler
à
:
if
(
visiteur
n
’
avoir
bon
niveau
d
’
autorisation
pour
page
)
{
message
de
refus
fin
de
page
return
;
}
•
L
’
évaluation
niveau
d
’
autorisation
pouvoir
faire
de
manière
:
•
(
solution
être
mauvais
,
compliquer
modification
.
)
coder
en
dur
test
sur
possibilité
:
if
(
(
nom
=
=
'
'
bidule
'
'
)
&
&
(
mot
de
passe
=
=
'
'
truc
'
'
)
)
{
...
}
elseif
(
(
nom
=
=
'
'
chose
'
'
)
&
&
(
mot
de
passe
=
=
'
'
n
’
importer
'
'
)
)
{
...
}
else
etc
.
•
(
.
)
ranger
nom
mot
de
passe
dans
tableau
,
parcourir
tableau
pour
faire
vérifi-
cation
.
•
(
parfait
.
)
même
chose
,
créer
table
spécial
dans
base
de
donnée
lieu
d
’
utiliser
tableau
.
•
pour
être
parfaire
être
être
fonction
afficher
menu
,
fonction
décider
d
’
même
choix
disponible
en
fonction
niveau
d
’
autorisation
visiteur
.
•
exemple
d
’
utilisation
session
:
http
:
/
/
dns-remplacer
/
~
gonzalez
/
session_php
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
#
dns-remplacer
chapitre
.
session
II
.
hors
programme
chapitre
.
utiliser
PHP
sur
base
de
donnée
PostgreSQL
chapitre
figurer
qu
’
en
guise
de
témoignage
:
être
préférable
d
’
utiliser
PDO
pour
accès
base
de
donnée
(
chapitre
)
.
.
connexion
à
base
fonction
à
utiliser
être
«
pg_connect1
»
.
syntaxe
résumer
:
$
www
=
pg_connect
(
`
`
host
=
xxx
dbname
=
ddd
user
=
yyy
password
=
zzz
'
'
)
;
:
$
www
variable
être
utiliser
identifier
de
connexion
à
exécution
d
’
requête
sur
base
.
ddd
base
de
donnée
à
essayer
de
connecter
.
xxx
nom
(
l
’
adresse
)
de
machine
sur
trouver
base
de
donnée
.
yyy
nom
de
l
’
utilisateur
.
zzz
mot
de
passe
de
l
’
utilisateur
.
.
exécution
d
’
requête
fonction
à
utiliser
être
«
pg_query2
»
.
syntaxe
résumer
:
$
rrr
=
pg_query
(
$
www
,
$
requete
)
;
:
$
rrr
variable
être
utiliser
identifier
vouloir
obtenir
résultat
de
l
’
exécution
de
requête
.
$
www
identifier
de
connexion
obtenir
par
pg_connect
(
voir
)
.
$
requete
chaine
de
caractère
contenir
requête
à
exécuter
(
pouvoir
être
chaîne
littéral
,
variable
)
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
utiliser
PHP
sur
base
de
donnée
PostgreSQL
.
obtention
résultat
d
’
requête
fonction
à
utiliser
être
:
•
«
pg_numrows3
»
:
syntaxe
résumer
:
$
nnn
=
pg_numrows
(
$
rrr
)
;
:
$
nnn
variable
contenir
nombre
de
ligne
résultat
.
$
rrr
identifier
d
’
exécution
de
requête
obtenir
par
pg_query
(
voir
)
.
•
«
pg_fetch_array4
»
:
syntaxe
résumer
:
$
lll
=
pg_fetch_array
(
$
rrr
,
$
iii
)
;
:
$
rrr
identifier
d
’
exécution
de
requête
obtenir
par
pg_query
(
voir
)
.
$
iii
numéro
de
ligne
vouloir
obtenir
.
$
lll
variable
contenir
table
constituer
de
champ
de
ligne
demander
.
s
’
agir
d
’
tableau
associatif
clef
être
titre
colonne
.
.
exemple
programme
<
?
php
$
c
=
pg_connect
(
`
`
dbname
=
*
*
*
*
user
=
*
*
*
*
password
=
*
*
*
*
'
'
)
;
$
r
=
pg_query
(
$
c
,
`
`
select
nom
,
prenom
FROM
emp
ORDER
by
nom
'
'
)
;
for
(
$
i
=
;
$
i
<
pg_numrows
(
$
r
)
;
$
i++
)
{
$
l
=
pg_fetch_array
(
$
r
,
$
i
)
;
echo
$
l
[
`
`
prenom
'
'
]
.
'
'
<
em
>
'
'
.
$
l
[
`
`
nom
'
'
]
.
`
`
<
/
em
>
.\n
'
'
;
}
?
>
produire
résultat
suivre
:
Yves
Adrouille-Toultan
.
tex
Ajerre
.
Quentin
Amartakaldire
.
Yvon
Anchier
.
Helmut
Ardelpic
.
Terry
Blaireur
.
Thierry
Chmonfisse
.
mélusine
Enfaillite
.
Odile
Eurktumeme
.
Teddy
Fairant
.
Sophie
Fonfec
.
Olaf
Hotdeugou
.
Xavier
Kaécouté
.
Alex
Kuzbidon
.
Pacôme
Odlavieille
.
Adhémar
Patamob
.
Humphrey
Peursconla
.
Thomas
Phototetedemort
.
Elsa
Riven-busse
.
Armand
Teutmaronne
.
Samira
Traibien
.
Héléna
Vrante
.
Agathe
Zeublouze
.
Debbie
Zoudanlkou
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
utiliser
PHP
sur
base
de
donnée
PostgreSQL
.
requête
autre
select
requête
de
type
insert
,
UPDATE
,
DELETE
être
exécuter
de
même
manière
requête
de
type
select
,
avec
fonction
«
pg_query5
»
.
être
important
de
contrôler
résultat
de
exécution
.
C
’
être
aller
étudier
dans
chapitre
.
.
suppression
message
d
’
erreur
pouvoir
avoir
envie
de
gérer
même
erreur
requête
(
par
exemple
éviter
l
’
affichage
«
warning
»
autre
«
Query
failed
»
)
.
pour
suffire
de
préfixer
fonction
utiliser
avec
«
@
»
(
opérateur
de
contrôle
d
’
erreur6
)
:
opérateur
être
ajouter
en
préfix
d
’
expression
PHP
,
message
d
’
erreur
pouvoir
être
générer
par
expression
être
ignorer
.
par
exemple
lieu
d
’
écrire
$
res
=
pg_query
(
$
c
,
$
req
)
;
écrire
$
res
=
@
pg_query
(
$
c
,
$
req
)
;
remarque
L
’
opérateur
@
fonctionner
qu
’
avec
expression
.
règle
général
de
fonctionnement
être
suivant
:
pouvoir
prendre
valeur
de
chose
,
pouvoir
préfixer
avec
@
.
par
exemple
,
pouvoir
ajouter
@
variable
,
fonction
,
à
include
,
constant
,
etc
.
pouvoir
faire
avec
élément
de
langage
classe
,
if
foreach
,
etc
.
.
gestion
erreur
message
être
impératif
,
supprimer
avertissement
,
de
gérer
même
erreur
pouvoir
survenir
.
dans
cas
d
’
accès
à
base
PostgreSQL
exister
nombre
de
fonctionnalité
pour
.
.
résultat
renvoyer
par
pg_query
en
cas
d
’
échec
«
pg_query7
»
retourne
FALSE
en
cas
d
’
échec
(
c
’
résultat
réel
pouvoir
exister
)
.
pouvoir
traiter
l
’
échec
éventuel
de
requête
:
if
(
$
r
=
@
pg_query
(
$
c
,
$
req
)
)
{
/
/
traitement
cas
de
succès
.
.
.
}
else
{
/
/
traitement
cas
d
’
échec
.
.
.
}
.
obtenir
texte
de
dernier
erreur
fonction
«
pg_last_error8
»
renvoyer
éventuel
message
d
’
erreur
correspondre
à
dernier
exécution
d
’
requête
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacé
_
dns-remplacer
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
utiliser
PHP
sur
base
de
donnée
PostgreSQL
.
obtenir
statut
de
connexion
pouvoir
connaître
l
’
état
de
connexion
en
utiliser
fonction
«
pg_result_status9
»
.
valeur
re-
tournée
possible
être
:
•
PGSQL_EMPTY_QUERY
(
)
•
PGSQL_COMMAND_OK
(
)
•
PGSQL_TUPLES_OK
(
)
•
PGSQL_COPY_TO
(
)
•
PGSQL_COPY_FROM
(
)
•
PGSQL_BAD_RESPONSE
(
)
•
PGSQL_NONFATAL_ERROR
(
)
•
PGSQL_FATAL_ERROR
(
)
.
obtenir
nombre
de
ligne
affecter
par
requête
«
pg_affected_rows10
»
retourner
nombre
de
ligne
affecter
par
requête
de
type
insert
,
UPDATE
,
DELETE
,
exécuter
par
fonction
pg_query
.
ligne
n
’
avoir
être
affecter
,
pg_affected_rows
retourne
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
@ord@
peardb
,
présentation
chapitre
figurer
qu
’
en
guise
de
témoignage
:
être
préférable
d
’
utiliser
PDO
pour
accès
base
de
donnée
(
chapitre
)
.
.
Qu
’
être
pear
texte
être
extraire
de
présentation
de
pear1
,
sur
JDN2
(
journal
net
)
.
pear
(
PHP
extension
and
application
Repository
)
être
archiver
de
composant
PHP
réutilisable
projet
majeur
de
communauté
PHP
.
C
’
être
archiver
stocker
de
façon
exhaustif
possible
programme
,
macros
de
doc-
umentation
.
but
être
de
fournir
développeur
de
bibliothèque
/
module
PHP
moyen
d
’
organiser
code
PHP
C
d
’
manière
définir
partager
par
autre
développeur
,
d
’
offrir
à
communauté
PHP
seul
source
pour
ressource
.
en
bref
,
c
’
être
architecture
système
de
dis-
tribution
pour
composant
PHP
réutilisable
.
.
utilité
?
pear
être
utile
pour
développeur
PHP
.
aller
l
’
utiliser
pour
module
DB
(
DataBase
)
être
couche
d
’
abstraction
pour
accès
base
de
donnée
.
L
’
hétérogénéité
moyen
d
’
accès
base
de
donnée
avoir
être
un
problème
gênant
en
PHP3
.
problème
venir
fait
,
par
exemple
,
fonction
permettre
l
’
accès
à
base
PostgreSQL
être
différent
de
pour
MySQL
,
être
différent
de
pour
SQLite
,
etc
.
avoir
pour
effet
de
rendre
difficile
migration
d
’
système
vers
autre
:
avoir
écrire
(
par
exemple
en
cours|cour
)
site
utiliser
base
PostgreSQL
vouloir
transférer
chez
hébergeur
n
’
offrir
MySQL
(
Free
,
par
exemple
)
:
seul
solution
être
de
reprendre
(
corriger
)
dans
page
appel
à
fonction
concernant
PostgreSQL
.
pouvoir
en
avoir
...
couche
d
’
abstraction4
permettre
d
’
éviter
problème
:
accès
à
base
de
donnée
passer
par
(
avec
même
syntaxe
,
être
base
de
donnée
)
c
’
être
débrouiller
pour
s
’
adapter
à
base
de
donnée
utiliser
.
pour
changer
de
base
de
donnée
(
passer
de
PostgreSQL
à
MySQL
par
exemple
)
n
’
avoir
en
général
qu
’
à
modifier
ligne
,
donner
paramètre
de
base
de
donnée
utiliser
.
trouver
sur
web
de
documentation
en
français
sur
pear5
,
en
particulier
module
peardb6
.
.
utiliser
peardb
fonction
de
peardb
être
utilisable
dans
programme
,
devoir
commencer
par
:
require_once
’
dns-remplacer
’
;
.
connecter
à
base
de
donnée
trouver
de
détail
sur
page
«
introduction
-
DSN7
»
.
premier
action
,
avant
d
’
utiliser
base
de
donnée
,
être
de
s
’
connecter
.
http
:
/
/
dns-remplacer
/
tutoriel
/
php
/
021017php_
dns-remplacer
http
:
/
/
dns-remplacer
/
.
sembler
PHP5
avoir
régler
problème
,
utiliser
PHP4
...
.
exister
d
’
autre
couche
d
’
abstraction
:
PHPLib
,
ADODB
,
MetatData
,
etc
.
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
@ord@
peardb
,
présentation
pour
falloir
définir
DSN
(
dater
source
Name
)
donner
renseignement
sur
base
de
donnée
à
utiliser
:
nom
,
utilisateur
,
mot
de
passe
,
machine
héberger
serveur
,
type
de
SGBD
,
etc
.
syntaxe
(
simplifier
)
être
suivant
:
type_de_BD
:
/
/
utilisateur
:
mot_de_passe
@
machine
/
base_de_donner
?
option
=
valeur
par
exemple
:
•
pour
base
PostgreSQL
:
pgsql
:
/
/
utilisateur
:
mot_de_passe
@
localhost
/
base
•
pour
base
SQLite
,
sous
linux
:
sqlite
:
/
/
/
/
chemin_complet_vers_
dns-remplacé
?
mode
=
•
pour
base
SQLite
,
sous
Windows
:
sqlite
:
/
/
/
c
:
/
chemin_complet_vers_
dns-remplacé
?
mode
=
suffire
d
’
exécuter
commande
$
db
=
&
DB
:
:
connect
(
votre_DSN
)
;
nom
de
variable
$
db
être
sans
importance
.
n
’
être
qu
’
variable
,
pouvoir
donner
nom
plaire
.
falloir
garder
à
l
’
esprit
qu
’
falloir
conserver
variable
(
être
nom
)
,
c
’
être
permettre
d
’
accéder
à
base
de
donnée
avec
fonction
chapitre
suivant
.
.
gestion
erreur
.
en
cas
d
’
erreur
...
après
utilisation
d
’
fonction
de
peardb
,
comprendre
tentative
de
connexion
,
pouvoir
être
utile
de
vérifier
qu
’
erreur
s
’
être
produire
:
if
(
PEAR
:
:
isError
(
$
db
)
)
{
echo
`
`
<
hr
/
>
'
'
.
`
`
message
standard
:
`
`
.
$
db-
>
getMessage
(
)
.
`
`
<
hr
/
>
\n
'
'
.
`
`
message
DBMS
/
utilisateur
:
`
`
.
$
db-
>
getUserInfo
(
)
.
`
`
<
hr
/
>
\n
'
'
'
'
.
`
`
message
DBMS
/
Débogage
:
`
`
.
$
db-
>
getDebugInfo
(
)
.
`
`
<
hr
/
>
\n
'
'
;
exit
;
}
(
à
de
choisir
message
qu
’
paraître
intéresser
d
’
afficher
...
)
.
application
pouvoir
utiliser
gestion
erreur
pour
écrire
programme
portable
.
écrire
programme
PHP
vouloir
utiliser
à
endroit
condition
être
dif-
férentes
(
en
salle
de
TP
,
chez
,
chez
hébergeur
,
etc
.
)
,
devoir
en
principe
modifier
programme
à
fois
transférer
d
’
site
à
l
’
autre
.
l
’
utilisation
de
peardb
réduire
nombre
de
modification
à
faire
,
rester
DSN
à
adapter
.
pouvoir
oublier
manipulation
en
utiliser
gestion
erreur
:
$
db
=
&
DB
:
:
connect
(
DSN_pour_les_salles_de_TP
,
$
option
)
;
if
(
PEAR
:
:
isError
(
$
db
)
)
{
$
db
=
&
DB
:
:
connect
(
$
DSN_pour_votre_machine
,
$
option
)
;
if
(
PEAR
:
:
isError
(
$
db
)
)
{
$
db
=
&
DB
:
:
connect
(
DSN_pour_votre_hébergeur
,
$
option
)
;
if
(
PEAR
:
:
isError
(
$
db
)
)
{
chapitre
@ord@
peardb
,
présentation
echo
`
`
<
hr
/
>
connexion
impossible
<
hr
/
>
\n
'
'
;
exit
;
}
}
}
.
exécuter
requête
syntaxe
être
simple
:
$
res
=
&
$
db-
>
query
(
votre_requête
)
;
valeur
renvoyer
(
ranger
dans
variable
$
res
)
N
’
être
résultat
de
l
’
exécution
de
requête
,
identifier
(
propre
système
,
valeur
réel
intéresser
)
permettre
d
’
accéder
résultat
grâce
fonction
décrire
.
.
accéder
résultat
d
’
requête
select
peardb
fournir
deux
fonction
pour
traiter
ligne
résultant
d
’
requête
:
fetchRow
(
)
fetchInto
(
)
.
.
fetchRow
(
)
fetchRow
(
)
retourner
rangée
.
exemple
d
’
utilisation
en
supposer
mode
par
défaut
de
récupération
être
DB_FETCHMODE_ORDERED
(
voir
setfetchmode
(
)
)
:
while
(
$
row
=
&
$
res-
>
fetchRow
(
)
)
{
echo
$
row
[
]
.
`
`
\n
'
'
;
}
.
fetchInto
(
)
fetchInto
(
)
avoir
besoin
d
’
variable
,
à
assigner
par
référence
contenu
de
rangée
résultat
retourner
DB_OK
.
exemple
d
’
utilisation
en
supposer
mode
par
défaut
de
récupération
être
DB_FETCHMODE_ORDERED
(
voir
setfetchmode
(
)
)
:
while
(
$
res-
>
fetchInto
(
$
row
)
)
{
echo
$
row
[
]
.
`
`
\n
'
'
;
}
.
setfetchmode
(
)
commande
setfetchmode
(
)
configurer
mode
de
récupération
par
défaut
utiliser
par
méthode
fetch
*
(
)
(
get
*
(
)
)
.
l
’
utiliser
deux
manière
(
exister
d
’
autre
,
aller
voir
page
être
consacrée11
)
:
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
@ord@
peardb
,
présentation
•
setfetchmode
(
DB_FETCHMODE_ORDERED
)
:
rangée
être
mettre
en
tableau
ordonner
,
accéder
par
numéro
.
•
setfetchmode
(
DB_FETCHMODE_ASSOC
)
:
rangée
être
mettre
en
tableau
associatif
,
accéder
par
titre
de
colonne
.
comprendre
différence
pouvoir
utiliser
fonction
PHP
«
print_r12
»
(
permettre
d
’
afficher
tableau
en
entier
)
.
programme
$
db-
>
setfetchmode
(
DB_FETCHMODE_ORDERED
)
;
/
/
sortie
en
tableau
ordonner
$
res
=
&
$
db-
>
query
(
`
`
select
*
FROM
personne
'
'
)
;
/
/
requête
$
res-
>
fetchInto
(
$
row
)
;
/
/
récupération
de
1er|1ère
ligne
echo
`
`
<
pre
>
'
'
;
/
/
affichage
«
préformater
»
print_r
(
$
row
)
;
/
/
affichage
de
ligne
en
tableau
echo
`
`
<
/
pre
>
'
'
;
/
/
fin
de
l
’
affichage
«
préformater
»
produire
affichage
Array
(
[
]
=
>
[
]
=
>
Kuzbidon
[
]
=
>
Ginette
[
]
=
>
[
]
=
>
[
]
=
>
[
]
=
>
[
]
=
>
)
$
db-
>
setfetchmode
(
DB_FETCHMODE_ASSOC
)
;
/
/
sortie
en
tableau
associatif
$
res
=
&
$
db-
>
query
(
`
`
select
*
FROM
personne
'
'
)
;
/
/
requête
$
res-
>
fetchInto
(
$
row
)
;
/
/
récupération
de
1er|1ère
ligne
echo
`
`
<
pre
>
'
'
;
/
/
affichage
«
préformater
»
print_r
(
$
row
)
;
/
/
affichage
de
ligne
en
tableau
echo
`
`
<
/
pre
>
'
'
;
/
/
fin
de
l
’
affichage
«
préformater
»
produire
affichage
Array
(
[
codepersonne
]
=
>
[
nom
]
=
>
Kuzbidon
[
prenom
]
=
>
Ginette
[
numerodanslarue
]
=
>
[
refrue
]
=
>
[
]
=
>
[
fax
]
=
>
[
email
]
=
>
)
pouvoir
utiliser
constant
DB_FETCHMODE_ORDERED
DB_FETCHMODE_ASSOC
dans
fonction
fetchRow
(
)
fetchInto
(
)
par
exemple
:
$
row
=
&
$
res-
>
fetchRow
(
DB_FETCHMODE_ASSOC
)
;
$
res-
>
fetchInto
(
$
row
,
DB_FETCHMODE_ORDERED
)
;
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
@ord@
peardb
,
présentation
.
peardb
,
information
sur
requête
chapitre
provenir
de
«
PEAR-DB
-
Résultats13
»
.
avoir
quatre
manière
de
récupérer
information
intéressant
jeu
de
résultat
.
.
numRows
(
)
numRows
(
)
retourne
nombre
de
ligne
disponible
dans
jeu
de
résultat
issu
d
’
requête
select
.
<
?
php
/
/
fois
avoir
objet
DB
valider
nommer
$
db
$
res
=
&
$
db-
>
query
(
’
select
bla
bla
’
)
;
echo
$
res-
>
numRows
(
)
;
?
>
.
numCols
(
)
numCols
(
)
retourne
nombre
de
colonne
disponible
dans
jeu
de
résultat
issu
d
’
requête
select
.
<
?
php
/
/
fois
avoir
objet
DB
valider
nommer
$
db
$
res
=
&
$
db-
>
query
(
’
select
bla
bla
’
)
;
echo
$
res-
>
numCols
(
)
;
?
>
.
affectedRows
(
)
affectedRows
(
)
retourne
nombre
de
ligne
affecter
par
requête
type
insert
,
UPDATE
DELETE
.
<
?
php
/
/
souvenir
requête
retourner
d
’
objet
de
résultat
$
db-
>
query
(
’
DELETE
bla
bla
’
)
;
echo
`
`
J
’
avoir
effacer
`
`
.
$
db-
>
affectedRows
(
)
.
`
`
client
'
'
;
?
>
.
tableInfo
(
)
tableInfo
(
)
retourne
tableau
associatif
contenir
information
sur
colonne
issu
d
’
résultat
de
requête
type
select
.
<
?
php
/
/
fois
avoir
objet
DB
valider
nommer
$
db
$
res
=
&
$
db-
>
query
(
’
select
bla
bla
’
)
;
print_r
(
$
res-
>
tableInfo
(
)
)
;
?
>
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
@ord@
peardb
,
présentation
chapitre
dbx
chapitre
figurer
qu
’
en
guise
de
témoignage
:
être
préférable
d
’
utiliser
PDO
pour
accès
base
de
donnée
(
chapitre
)
.
.
Qu
’
être
dbx
texte
être
extraire
de
«
XXVII
.
fonction
dbx1
»
,
chapitre
manuel
PHP
sur
sur
PHP
net2
.
module
dbx
être
module
d
’
abstraction
de
base
de
donnée
(
db
pour
database
(
base
de
donnée
)
’
X
’
pour
base
supporter
)
.
fonction
dbx
permettre
d
’
accéder
à
base
supporter
,
avec
même
convention
.
fonction
dbx
même
s
’
interfacent
avec
base
de
donnée
,
s
’
interfacent
avec
module
utiliser
pour
supporter
base
.
pour
pouvoir
utiliser
base
de
donnée
avec
module
dbx
,
module
devoir
être
lier
,
charger
dans
PHP
module
de
base
de
donnée
devoir
être
supporter
par
module
dbx
.
base
suivant
être
supporter
,
d
’
autre
suivre
:
•
FrontBase
(
disponible
depuis
PHP
)
,
•
Microsoft
SQL
Server
,
•
MySQL
,
•
ODBC
,
•
PostgreSQL
,
•
Sybase-CT
(
disponible
depuis
PHP
)
,
•
oracle
(
disponible
depuis
PHP
)
,
•
SQLite
(
PHP
)
.
.
utilité
?
L
’
hétérogénéité
moyen
d
’
accès
base
de
donnée
avoir
être
un
problème
gênant
en
PHP
.
problème
venir
fait
,
par
exemple
,
fonction
permettre
l
’
accès
à
base
PostgreSQL
être
différent
de
pour
MySQL
,
être
différent
de
pour
SQLite
,
etc
.
avoir
pour
effet
de
rendre
difficile
migration
d
’
système
vers
autre
:
avoir
écrire
(
par
exemple
en
cours|cour
)
site
utiliser
base
PostgreSQL
vouloir
transférer
chez
hébergeur
n
’
offrir
MySQL
(
Free
,
par
exemple
)
:
seul
solution
être
de
reprendre
(
corriger
)
dans
page
appel
à
fonction
concernant
PostgreSQL
.
pouvoir
en
avoir
...
couche
d
’
abstraction3
permettre
d
’
éviter
problème
:
accès
à
base
de
donnée
passer
par
(
avec
même
syntaxe
,
être
base
de
donnée
)
c
’
être
débrouiller
pour
s
’
adapter
à
base
de
donnée
utiliser
.
pour
changer
de
base
de
donnée
(
passer
de
PostgreSQL
à
MySQL
par
exemple
)
n
’
avoir
en
général
qu
’
à
modifier
ligne
,
donner
paramètre
de
base
de
donnée
utiliser
.
.
connecter
à
base
de
donnée
trouver
de
détail
sur
page
dbx_connect4
manuel
PHP5
.
premier
action
,
avant
d
’
utiliser
base
de
donnée
,
être
de
s
’
connecter
.
suffire
pour
d
’
exécuter
commande
$
db
=
dbx_connect
(
type_de_base
,
machine_qui_héberge_la_base
,
nom_de_la_base
,
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
.
exister
d
’
autre
couche
d
’
abstraction
:
PHPLib
,
ADODB
,
MetaData
,
Pear-DB
,
etc
.
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
dbx
nom_d_utilisateur
,
mot_de_passe
)
nom
de
variable
$
db
être
sans
importance
.
n
’
être
qu
’
variable
,
pouvoir
donner
nom
plaire
.
falloir
garder
à
l
’
esprit
qu
’
falloir
conserver
variable
(
être
nom
)
,
c
’
être
permettre
d
’
accéder
à
base
de
donnée
avec
fonction
chapitre
suivant
.
type_de_base
quant
à
être
valeur
parmi
DBX_MYSQL
,
DBX_ODBC
,
DBX_PGSQL
,
DBX_MSSQL
,
DBX_FBSQL
,
DBX_SYBASECT
,
DBX_OCI8
,
DBX_SQLITE
.
.
exécuter
requête
trouver
d
’
information
sur
page
dbx_query6
manuel
PHP
.
syntaxe
être
simple
:
$
res
=
dbx_query
(
$
db
,
votre_requête
)
;
valeur
renvoyer
(
ranger
dans
variable
$
res
)
N
’
être
résultat
de
l
’
exécution
de
requête
,
identifier
(
propre
système
,
valeur
réel
intéresser
)
permettre
d
’
accéder
résultat
grâce
fonction
décrire
.
.
nombre
de
ligne
colonne
d
’
requête
select
pouvoir
obtenir
nombre
de
ligne
de
colonne
résultat
d
’
requête
de
type
select
:
$
result
=
dbx_query
(
$
db
,
’
select
id
FROM
tabler
’
)
;
echo
$
result-
>
rows
;
/
/
nombre
de
ligne
echo
$
result-
>
col
;
/
/
nombre
de
champ
.
accéder
résultat
d
’
requête
select
$
result
être
résultat
valide
renvoyer
par
dbx_query
(
)
,
$
result-
>
dater
être
tableau
à
dimension
contenir
résultat
:
premier
indice
concerner
ligne
,
deuxième
concerner
colonne
.
.
accès
par
nom
colonne
exemple
:
$
result
=
dbx_query
(
$
db
,
`
`
select
*
FROM
ville
'
'
)
;
foreach
(
$
result-
>
dater
avoir
$
row
)
{
echo
$
row
[
`
`
codepostal
'
'
]
.
'
'
-
`
`
.
$
row
[
`
`
ville
'
'
]
.
`
`
<
br
/
>
\n
'
'
;
}
.
accès
par
numéro
colonne
exemple
:
$
result
=
dbx_query
(
$
db
,
`
`
select
*
FROM
ville
'
'
)
;
foreach
(
$
result-
>
dater
avoir
$
row
)
{
for
(
$
i
=
;
$
i
<
$
result-
>
col
;
$
i++
)
{
echo
$
row
[
$
i
]
.
'
'
*
*
`
`
;
}
echo
`
`
<
br
/
>
\n
'
'
;
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
@ord@
dbx
}
.
accès
par
numéro
ligne
numéro
colonne
exemple
:
$
result
=
dbx_query
(
$
db
,
`
`
select
*
FROM
ville
'
'
)
;
for
(
$
l
=
;
$
l
<
$
result-
>
rows
;
$
l++
)
{
for
(
$
i
=
;
$
i
<
$
result-
>
col
;
$
i++
)
{
echo
$
result-
>
dater
[
$
l
]
[
$
i
]
.
'
'
*
*
`
`
;
}
echo
`
`
<
br
/
>
\n
'
'
;
}
chapitre
@ord@
dbx
chapitre
.
exploration
contenu
d
’
répertoire
corriger
exercice
de
chapitre
trouver
chapitre
.
.
notion
nécessaire
en
PHP
.
exploration
d
’
répertoire
premier
fonction
à
connaître
être
«
opendir1
»
.
être
destiner
à
être
utiliser
avec
fonction
«
readdir2
»
«
closedir3
»
.
programme
suivre
(
dns-remplacer
)
afficher
contenu
répertoire
/
mnt
:
<
?
php
$
dir
=
opendir
(
`
`
/
mnt
'
'
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
echo
`
`
$
file\n
'
'
;
}
closedir
(
$
dir
)
;
?
>
C
’
être
excellent
application
de
l
’
utilisation
de
structure
while
.
.
extraction
d
’
sous-chaîne
de
caractère
être
nécessaire
de
tester
partie
d
’
chaîne
de
caractère
;
falloir
pouvoir
l
’
isoler
.
être
faire
avec
fonction
«
substr4
»
,
exemple
de
résultat
pour
voir
résultat
produire
:
dns-remplacer
:
<
?
php
echo
substr
(
`
`
abcdef
'
'
,
)
.
`
`
<
br
/
>
'
'
;
/
/
retourne
`
`
bcdef
'
'
echo
substr
(
`
`
abcdef
'
'
,
,
)
.
`
`
<
br
/
>
'
'
;
/
/
retourne
`
`
bcd
'
'
echo
substr
(
`
`
abcdef
'
'
,
)
.
`
`
<
br
/
>
'
'
;
/
/
retourne
`
`
f
'
'
echo
substr
(
`
`
abcdef
'
'
,
)
.
`
`
<
br
/
>
'
'
;
/
/
retourne
`
`
ef
'
'
echo
substr
(
`
`
abcdef
'
'
,
,
)
.
`
`
<
br
/
>
'
'
;
/
/
retourne
`
`
d
'
'
echo
substr
(
`
`
abcdef
'
'
,
,
)
.
`
`
<
br
/
>
'
'
;
/
/
retourne
`
`
bcde
'
'
?
>
premier
paramètre
être
chaîne
devoir
extraire
partie
.
deuxième
paramètre
indiquer
position
de
lettre
aller
commencer
l
’
extraction
.
S
’
être
négatif
,
indiquer
qu
’
compter
à
partir
de
fin
de
chaîne
.
troisième
paramètre
n
’
être
mentionner
,
aller
jusqu
’
à
fin
de
chaîne
.
S
’
être
présent
,
indiquer
nombre
de
lettre
à
prendre
.
.
notion
nécessaire
en
HTML
.
image
cliquables
faire
en
sorte
qu
’
en
cliquer
sur
image
obtenir
même
résultat
qu
’
en
cliquer
mot
?
en
faire
même
chose
avec
l
’
imager
qu
’
avec
texte
...
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
exploration
contenu
d
’
répertoire
pour
transformer
mot
en
lien
suffire
de
l
’
inclure
entre
<
avoir
href
=
'
'
...
'
'
>
<
/
avoir
>
.
faire
même
chose
avec
image
...
écrire
<
avoir
href
=
'
'
dns-remplacer
'
'
>
<
img
src
=
'
'
mini
/
dns-remplacer
'
'
/
>
<
/
avoir
>
avoir
pour
effet
d
’
afficher
l
’
image
«
mini
/
dns-remplacer
»
en
faire
en
sorte
cliquer
arriver
sur
page
.
.
pour
qu
’
lien
afficher
image
qu
’
page
HTML
PHP
suffire
de
mettre
dans
lien
l
’
adresse
de
l
’
image
lieu
de
l
’
adresse
d
’
page
.
.
exercice
exercice
suivre
être
à
faire
dans
répertoire
contenir
image
(
d
’
autre
chose
,
)
,
qu
’
sous-répertoire
contenir
même
image
en
réduction
(
en
onglet
,
thumbnails
en
anglais
)
.
.
premier
version
programme6
:
afficher
image
trouver
.
.
deuxième
version
programme7
:
afficher
onglet
,
faire
lien
vers
vrai
image
.
.
troisième
version
programme8
:
afficher
onglet
,
faire
lien
vers
page
contenir
vrai
image
dans
cadre
.
.
version
parfaire
programme9
:
afficher
onglet
en
tableau
régulier
.
faire
lien
vers
page
contenir
vrai
image
dans
cadre
.
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
News
...
corriger
exercice
de
chapitre
trouver
chapitre
.
aller
terminer
tour
d
’
horizon
de
PHP
avec
mini-projet
but
être
d
’
afficher
article
de
presse
,
dans
différent
domaine
.
pouvoir
trouver
exemple
sur
internet1
.
.
présentation
article
être
ranger
dans
fichier
.
nom
fichier
être
composer
de
trois
partie
:
.
lettre
définir
domaine
:
•
inf
informatique
,
•
msc
pour
miscalaneous
(
divers
,
dire
n
’
entre
dans
autre
catégorie
)
,
•
sci
pour
science
.
.
chiffre
former
faire
numéro
d
’
ordre
fichier
:
,
,
,
,
,
etc
.
extension
jnl
.
avoir
par
exemple
:
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
dns-remplacer
,
etc
.
fichier
contenir
texte
,
sans
code
HTML
PHP
.
premier
ligne
devoir
être
titre
de
l
’
article
.
un
fichier
(
dns-remplacer
)
contenir
par
exemple
:
Xenux
site
simple
pour
débutant
dns-remplacé
être
nouveau
site
pour
pressé
de
Linux
sans
chichi
sans
blabla
.
savoir
aller
dès
début
de
lecture
de
l
’
article
.
intéresser
marche
...
.
.
à
.
travail
site
à
réaliser
avoir
caractéristique
suivant
:
.
page
devoir
aller
chercher
même
fichier
nécessaire
dans
répertoire
:
de
liste
faire
article
,
suffire
de
copier
fichier
de
l
’
article
pour
qu
’
être
prendre
en
compte
.
inspirer
de
avoir
être
faire
dans
cours|cour
sur
l
’
exploration
contenu
d
’
répertoire
(
chapitre
)
.
.
devoir
réaliser
page
dns-remplacé
afficher
nom
fichier
.
.
devoir
réaliser
page
identique
à
précédent
nom
fichier
être
lien
vers
l
’
affichage
fichier
même
(
dns-remplacer
)
.
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
chapitre
.
News
...
.
devoir
réaliser
page
afficher
texte
de
article
un
sous
autre
(
dns-remplacer
)
.
n
’
être
obliger
de
soigner
présentation
,
c
’
être
pour
un
exercice
suivant
.
.
devoir
réaliser
page
dns-remplacé
afficher
titre
article
.
.
devoir
réaliser
page
identique
à
précédent
,
dans
titre
afficher
être
lien
vers
article
correspondant
(
dns-remplacer
)
.
.
devoir
réaliser
page
afficher
article
(
affichetout_
dns-remplacé
)
:
•
article
être
séparer
(
par
ligne
horizontal
par
exemple
)
,
•
titre
être
visible
(
utiliser
par
exemple
construction
<
H@card@
>
.
.
<
/
H2
>
)
,
•
fin
de
paragraphe
texte
original
être
respecter
.
.
devoir
réaliser
page
permettre
de
choisir
sujet
intéresser
(
informatique
,
miscala-
neous
,
divers
;
voir
section
description
)
afficher
article
correspondant
(
dns-remplacer
)
.
.
page
de
menu9
permettre
d
’
aller
vers
de
page
,
d
’
en
revenir
.
.
avoir
temps
...
avoir
temps
pouvoir
ajouter
fonction
à
travail
:
@ord@
formulaire
permettre
d
’
écrire
article
(
être
ajouter
autre
)
,
@ord@
moyen
de
corriger
article
existant
,
@ord@
moyen
de
supprimer
article
existant
.
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
affichetout_
dns-remplacer
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
chapitre
.
fichier
corriger
exercice
de
chapitre
trouver
chapitre
.
fichier
(
filer
en
anglais
,
document
dans
monde
Windows
)
être
l
’
objet
permettre
à
système
d
’
exploitation
(
programme
qu
’
supporter
)
d
’
enregister
information
sur
disque
dur
(
disquette
)
.
.
manipulation
de
base
pour
utiliser
fichier
falloir
savoir
écrire
relire
.
.
ouverture
(
fermeture
)
d
’
fichier
avant
accès
à
fichier
falloir
l
’
ouvrir
,
faire
par
fonction
«
fopen1
»
syntaxe
être
:
int
fopen
(
string
fichier
,
string
mode
)
:
•
int
signifier
fonction
renvoyer
valeur
entier
.
•
fichier
être
nom
fichier
à
ouvrir
.
•
mode
décrire
façon
fichier
être
utiliser
.
valeur
courant
être
:
•
’
r
’
:
ouvrir|ouvrer
en
lecture
seul
,
placer
pointeur
de
fichier
début
fichier
.
•
’
w
’
:
ouvrir|ouvrer
en
écriture
seul
;
placer
pointeur
de
fichier
début
fichier
réduire
taille
fichier
à
.
fichier
n
’
exister
,
tenter
de
créer
.
•
’
avoir
’
:
ouvrir|ouvrer
en
écriture
seul
;
placer
pointeur
de
fichier
à
fin
fichier
.
fichier
n
’
exister
,
tenter
de
créer
.
fichier
ouvrir
par
«
fopen
»
être
fermer
par
«
fclose2
»
.
.
écrire
dans
fichier
n
’
étudier
fichier
de
texte
.
trouver
d
’
information
sur
fichier
dans
l
’
aide
de
PHP3
.
pour
écrire
dans
fichier
de
texte
falloir
utiliser
fonction
«
fwrite4
»
(
fonction
«
fputs5
»
être
en
point
identique
)
.
.
lire
contenu
d
’
fichier
deux
solution
différent
:
•
«
file6
»
qu
’
avoir
voir
dans
chapitre
sur
tableau
,
lire
fichier
en
seul
fois
en
ranger
dans
tableau
.
•
«
fgets7
»
lire
fichier
ligner
par
ligne
,
imposer
contrôle
.
exister
d
’
autre
façon
de
lire
information
ranger
dans
fichier
aborder
.
trouver
d
’
information
sur
fichier
dans
l
’
aide
de
PHP8
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
html
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
html
/
dns-remplacer
chapitre
.
fichier
.
exemple
aller
réaliser
mini-site
permettre
d
’
ajouter
ligne
à
fois
dans
fichier
,
qu
’
page
permettre
d
’
afficher
contenu
fichier
.
.
formulaire
:
dns-remplacer
<
html
>
<
body
>
<
form
action
=
'
'
dns-remplacer
'
'
>
saisir
:
<
input
name
=
'
'
ligne
'
'
>
<
input
type
=
'
'
submit
'
'
>
<
/
form
>
<
/
body
>
<
/
html
>
s
’
agir
en
fait
d
’
simple
page
HTML
contenir
formulaire
.
.
traitement
formulaire
(
écriture
dans
fichier
)
:
dns-remplacer
<
html
>
<
body
>
<
?
php
/
/
ouverture
fichier
`
`
dns-remplacer
en
mode
`
`
avoir
'
'
(
appendre
=
ajout
)
/
/
l
’
identifier
renvoyer
être
$
fp
/
/
être
utiliser
pour
l
’
écriture
fermeture
$
fp
=
fopen
(
`
`
dns-remplacer
'
'
,
'
'
avoir
'
'
)
;
/
/
écriture
de
valeur
reçu
(
fin
de
ligne
)
fputs
(
$
fp
,
$
ligne
.
`
`
\n
'
'
)
;
/
/
fermeture
fichier
fclose
(
$
fp
)
?
>
fichier
avoir
être
modifier
.
<
/
body
>
<
/
html
>
remarquer
programme
fonctionner
falloir
qu
’
avoir
droit
en
écriture
sur
fichier
dns-remplacé
.
remarquer
programme
devoir
être
laisser
en
accès
libre
sur
réseau
:
n
’
importer
pouvoir
l
’
utiliser
remplir
disque
en
écrire
dans
fichier
sans
contrôle
.
(
C
’
être
pour
version
proposer
en
exemple
être
désactiver
.
)
.
affichage
contenu
fichier
:
•
premier
solution
,
avec
fonction
«
file11
»
:
dns-remplacer
:
<
html
>
<
body
>
<
?
php
$
f
=
file
(
`
`
dns-remplacer
'
'
)
;
for
(
$
i
=
;
$
i
<
count
(
$
f
)
;
$
i++
)
{
echo
$
f
[
$
i
]
.
`
`
<
br
/
>
'
'
;
}
?
>
<
/
body
>
<
/
html
>
•
Deuxième
solution
,
avec
fonction
«
fgets13
»
:
dns-remplacer
<
html
>
<
body
>
<
?
php
$
fp
=
fopen
(
`
`
dns-remplacer
'
'
,
'
'
r
'
'
)
;
while
(
$
l
=
fgets
(
$
fp
,
)
)
{
echo
$
l
.
`
`
<
br
/
>
'
'
;
}
fclose
(
$
fp
)
;
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
fichier
?
>
<
/
body
>
<
/
html
>
.
exercice
écrire
gestionnaire
d
’
annuaire
téléphonique
.
minimum
à
atteindre
:
.
page
(
formulaire
)
permettre
de
saisir
nom
,
prénom
numéro
de
téléphone
d
’
per-
sonner
.
.
L
’
appui
sur
touche
d
’
envoi
enregistrer
coordonnées
dans
fichier
.
.
page
permettre
de
présenter
liste
contact
.
avoir
choix
sur
sens|sen
à
donner
mot
«
»
:
en
tableau
,
en
liste
,
etc
.
L
’
important
être
être
lisible
.
.
devoir
pouvoir
passer
d
’
page
à
l
’
autre
:
lien
entre
page
,
page
d
’
accueil
.
amélioration
possible
,
être
prendre
en
compte
précéder
être
réaliser
:
.
liste
afficher
pouvoir
être
mettre
dans
l
’
ordre
alphabétique
(
voir
fonction
«
sort15
»
)
.
.
pouvoir
offrir
possibilité
de
supprimer
contact
.
.
pouvoir
offrir
possibilité
de
modifier
contact
.
http
:
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
chapitre
.
fichier
III
.
corriger
exercice
chapitre
.
premier
exercice
d
’
algorithmique
,
corriger
trouver
énoncé
de
exercice
chapitrer
.
.
nombre
impair
:
dns-remplacer
<
html
>
<
body
>
<
?
php
for
(
$
i
=
;
$
i
<
;
$
i
=
$
i+2
)
{
echo
`
`
$
i
`
`
;
}
?
>
<
/
body
>
<
/
html
>
.
punition
:
dns-remplacer
<
html
>
<
body
>
<
?
php
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
echo
`
`
$
i
.
devoir
faire
sauvegarde
régulier
...
<
br
/
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
.
!
:
dns-remplacer
<
html
>
<
body
>
<
?
php
$
f
=
;
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
$
f
=
$
f
*
$
i
;
}
echo
`
`
!
=
$
f\n
'
'
;
?
>
<
/
body
>
<
/
html
>
.
multiplication
par
:
dns-remplacer
<
html
>
<
body
>
<
?
php
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
$
r
=
$
i
*
;
echo
`
`
$
i
*
=
$
r
<
br
/
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
dns-remplacer
<
html
>
<
body
>
<
table
>
<
?
php
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
$
r
=
$
i
*
;
echo
`
`
<
tr
>
<
td
align
=
\
'
'
right\
'
'
>
$
i
<
/
td
>
<
td
>
*
<
/
td
>
<
td
>
<
/
td
>
<
td
>
=
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
\
'
'
right\
'
'
>
$
r
<
/
td
>
<
/
tr
>
\n
'
'
;
}
?
>
<
/
table
>
<
/
body
>
<
/
html
>
.
ligne
:
dns-remplacé
<
html
>
<
body
>
<
?
php
for
(
$
l
=
;
$
l
<
=
;
$
l++
)
{
for
(
$
n
=
;
$
n
<
=
;
$
n++
)
{
echo
$
n
;
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exercice
d
’
algorithmique
,
corriger
}
echo
`
`
<
br
/
>
'
'
;
}
?
>
<
/
body
>
<
/
html
>
.
table
de
multiplication
total
:
dns-remplacer
<
html
>
<
body
>
<
tabler
border
=
'
'
border
'
'
>
<
?
php
/
/
1er|1ère
ligne
echo
`
`
<
tr
>
<
td
>
<
/
td
>
'
'
;
for
(
$
c
=
;
$
c
<
;
$
c++
)
{
echo
`
`
<
th
>
$
c
<
/
th
>
'
'
;
}
echo
`
`
<
/
tr
>
\n
'
'
;
/
/
ligne
for
(
$
l
=
;
$
l
<
;
$
l++
)
{
/
/
ligne
echo
`
`
<
tr
>
<
th
>
$
l
<
/
th
>
'
'
;
for
(
$
c
=
;
$
c
<
;
$
c++
)
{
$
r
=
$
c
*
$
l
;
echo
`
`
<
td
align
=
\
'
'
right\
'
'
>
$
r
<
/
td
>
'
'
;
}
echo
`
`
<
/
tr
>
\n
'
'
;
}
?
>
<
/
table
>
<
/
body
>
<
/
html
>
.
table
factoriel
:
dns-remplacer
<
html
>
<
body
>
<
?
php
/
/
fonction
factoriel
function
fact
(
$
n
)
{
$
f
=
;
/
/
initialisation
de
variable
d
’
accumulation
for
(
$
i
=
;
$
i
<
=
$
n
;
$
i++
)
{
$
f
*
=
$
i
;
}
return
$
f
;
}
for
(
$
x
=
;
$
x
<
=
;
$
x++
)
{
echo
`
`
$
x
!
=
`
`
.fact
(
$
x
)
.
`
`
<
br
/
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
.
Demi-sapin
:
dns-remplacer
<
html
>
<
body
>
<
?
php
function
triangle
(
$
n
)
{
for
(
$
l
=
;
$
l
<
=
$
n
;
$
l++
)
{
for
(
$
i
=
;
$
i
<
=
$
l
;
$
i++
)
{
echo
`
`
*
'
'
;
}
echo
`
`
<
br
/
>
'
'
;
}
}
for
(
$
n
=
;
$
n
<
=
;
$
n+
=
)
triangle
(
$
n
)
;
?
>
<
/
body
>
<
/
html
>
;
.
coefficient
binôme
:
dns-remplacer
<
html
>
<
body
>
<
?
php
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exercice
d
’
algorithmique
,
corriger
function
fact
(
$
n
)
{
$
f
=
;
for
(
$
i
=
;
$
i
<
=
$
n
;
$
i++
)
{
$
f
*
=
$
i
;
}
return
$
f
;
}
function
cnp
(
$
n
,
$
p
)
{
return
fact
(
$
n
)
/
(
fact
(
$
p
)
*
fact
(
$
n-
$
p
)
)
;
}
function
binome
(
$
n
)
{
echo
`
`
<
tr
>
'
'
;
for
(
$
i
=
;
$
i
<
=
$
n
;
$
i++
)
{
echo
`
`
<
td
align
=
\
'
'
right\
'
'
>
'
'
.cnp
(
$
n
,
$
i
)
.
`
`
<
/
td
>
'
'
;
}
echo
`
`
<
/
tr
>
\n
'
'
;
}
echo
`
`
<
table
>
\n
'
'
;
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
binome
(
$
i
)
;
}
echo
`
`
<
/
table
>
\n
'
'
;
?
>
<
/
body
>
<
/
html
>
.
Fibonnacci
:
dns-remplacer
<
html
>
<
body
>
<
?
php
function
fibonnacci
(
$
n
)
{
if
(
$
n
<
)
return
$
n
;
$
fmoins1
=
;
$
fmoins2
=
;
for
(
$
i
=
;
$
i
<
=
$
n
;
$
i++
)
{
$
f
=
$
fmoins1+
$
fmoins2
;
$
fmoins2
=
$
fmoins1
;
$
fmoins1
=
$
f
;
}
return
$
f
;
}
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
echo
`
`
$
i
:
`
`
.fibonnacci
(
$
i
)
.
`
`
<
br
/
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
pouvoir
version
récursif
,
beau
,
sans
doute
facile
à
programmer
,
efficace
(
?
)
:
dns-remplacer
<
html
>
<
body
>
<
?
php
function
fibonnacci
(
$
n
)
{
if
(
$
n
<
)
return
$
n
;
return
(
fibonnacci
(
$
n-1
)
+fibonnacci
(
$
n-2
)
)
;
}
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
echo
`
`
$
i
:
`
`
.fibonnacci
(
$
i
)
.
`
`
<
br
/
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
.
Fibonnacci
,
retour
:
dns-remplacer
<
html
>
<
body
>
<
?
php
function
fibonnacci
(
$
n
)
{
...
l
’
exercice
précédent
...
}
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exercice
d
’
algorithmique
,
corriger
$
=
(
sqrt
(
)
)
/
;
echo
`
`
<
tabler
border
=
\
'
'
border\
'
'
>
<
tr
>
<
th
>
ordre
<
/
th
>
<
th
>
rapport
<
/
th
>
'
'
;
echo
`
`
<
th
>
différence
<
/
th
>
<
/
tr
>
\n
'
'
;
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
$
r
=
fibonnacci
(
$
i
)
/
fibonnacci
(
$
i+1
)
;
echo
`
`
<
tr
>
<
td
>
$
i
<
/
td
>
<
td
>
$
r
<
/
td
>
<
td
>
'
'
.
(
$
r-
$
or
)
.
`
`
<
/
td
>
<
/
tr
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
.
afficher
cadre
10x10
.
avoir
.
avec
<
PRE
>
dns-remplacer
<
html
>
<
body
>
<
pre
>
<
tt
>
<
?
php
$
k
=
'
'
*
'
'
;
$
max
=
;
for
(
$
i
=
;
$
i
<
=
$
max
;
$
i++
)
{
echo
$
k
;
}
echo
`
`
\n
'
'
;
for
(
$
i
=
;
$
i
<
$
max
;
$
i++
)
{
echo
$
k
;
for
(
$
j
=
;
$
j
<
$
max
;
$
j++
)
{
echo
`
`
`
`
;
}
echo
$
k
.
`
`
\n
'
'
;
}
for
(
$
i
=
;
$
i
<
=
$
max
;
$
i++
)
{
echo
$
k
;
}
echo
`
`
\n
'
'
;
?
>
<
/
tt
>
<
/
pre
>
<
/
body
>
<
/
html
>
b
.
avec
tableau
:
dns-remplacer
<
html
>
<
body
>
<
blockquote
>
<
tabler
border
=
'
'
border
'
'
>
<
tr
>
<
?
php
$
k
=
'
'
*
'
'
;
$
max
=
;
for
(
$
i
=
;
$
i
<
=
$
max
;
$
i++
)
{
echo
`
`
\t
<
td
>
$
k
<
/
td
>
\n
'
'
;
}
echo
`
`
<
/
tr
>
\n
'
'
;
for
(
$
i
=
;
$
i
<
$
max
;
$
i++
)
{
echo
`
`
<
tr
>
\n\t
<
td
>
$
k
<
/
td
>
\n
'
'
;
for
(
$
j
=
;
$
j
<
$
max
;
$
j++
)
{
echo
`
`
\t
<
td
>
<
/
td
>
\n
'
'
;
}
echo
`
`
\t
<
td
>
$
k
<
/
td
>
\n
<
/
tr
>
\n
'
'
;
}
echo
`
`
<
tr
>
\n
'
'
;
for
(
$
i
=
;
$
i
<
=
$
max
;
$
i++
)
{
echo
`
`
\t
<
td
>
$
k
<
/
td
>
\n
'
'
;
}
?
>
<
/
tr
>
<
/
table
>
<
/
blockquote
>
<
/
body
>
<
/
html
>
.
tableau
d
’
addition
à
compléter
:
avoir
.
avec
total
fixe
:
dns-remplacer
<
body
>
<
html
>
<
h@card@
>
addition
à
compléter
,
total
fixe
<
/
h@card@
>
<
table
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exercice
d
’
algorithmique
,
corriger
<
?
php
$
nombre
=
;
/
/
nombre
de
ligne
$
total
=
;
/
/
total
à
atteindre
for
(
$
i
=
;
$
i
<
$
nombre
;
$
i++
)
{
$
connaître
=
rand
(
,
$
total
)
;
/
/
nombre
afficher
echo
`
`
\t
<
tr
>
<
th
>
n◦
'
'
.
(
$
i+1
)
.
'
'
:
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
\
'
'
right\
'
'
>
$
connaître
<
/
td
>
'
'
;
echo
`
`
<
td
>
+
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
\
'
'
center\
'
'
>
_________
=
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
\
'
'
right\
'
'
>
$
total
<
/
td
>
<
/
tr
>
\n
'
'
;
}
?
>
<
/
table
>
<
/
body
>
<
/
html
>
b
.
avec
total
variable
:
dns-remplacer
<
body
>
<
html
>
<
h@card@
>
addition
à
compléter
,
total
variable
<
/
h@card@
>
<
table
>
<
?
php
$
nombre
=
;
/
/
nombre
de
ligne
$
min
=
;
/
/
borner
inférieur
total
possible
$
max
=
;
/
/
borner
supérieur
total
possible
for
(
$
i
=
;
$
i
<
$
nombre
;
$
i++
)
{
$
total
=
rand
(
$
min
,
$
max
)
;
$
connaître
=
rand
(
,
$
total
)
;
echo
`
`
\t
<
tr
>
<
th
>
n◦
'
'
.
(
$
i+1
)
.
'
'
:
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
\
'
'
right\
'
'
>
$
connaître
<
/
td
>
'
'
;
echo
`
`
<
td
>
+
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
\
'
'
center\
'
'
>
_________
=
<
/
td
>
'
'
;
echo
`
`
<
td
align
=
\
'
'
right\
'
'
>
$
total
<
/
td
>
<
/
tr
>
\n
'
'
;
}
?
>
<
/
table
>
<
/
body
>
<
/
html
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
exercice
d
’
algorithmique
,
corriger
chapitre
.
premier
formulaire
en
PHP
,
corriger
trouver
énoncé
de
exercice
chapitrer
.
.
bonjour
machin
,
avoir
xx
an
...
formulaire
:
dns-remplacer
<
html
>
<
body
>
<
form
method
=
'
'
get
'
'
action
=
'
'
dns-remplacer
'
'
>
<
table
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
nom
<
/
td
>
<
td
>
<
input
name
=
'
'
nom
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
âge
<
/
td
>
<
td
>
<
input
name
=
'
'
age
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
center
'
'
colspan
=
'
'
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
/
>
<
/
tr
>
<
/
table
>
<
/
form
>
<
/
body
>
<
/
html
>
traitement
:
dns-remplacer
<
html
>
<
body
>
<
?
php
echo
`
`
bonjour
$
nom
,
avoir
$
age
ans.\n
'
'
;
?
>
<
/
body
>
<
/
html
>
.
Montpellier
.
formulaire
:
dns-remplacer
<
html
>
<
body
>
<
form
method
=
'
'
get
'
'
action
=
'
'
dns-remplacer
'
'
>
<
table
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
distance
<
/
td
>
<
td
>
<
input
name
=
'
'
distance
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
heure
/
jour
<
/
td
>
<
td
>
<
input
name
=
'
'
heure
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
jour
<
/
td
>
<
td
>
<
input
name
=
'
'
jour
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
center
'
'
colspan
=
'
'
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
/
>
<
/
tr
>
<
/
table
>
<
/
form
>
<
/
body
>
<
/
html
>
traitement
:
dns-remplacer
<
html
>
<
body
>
<
?
php
echo
`
`
bébé
avoir
parcourir
$
distance
kilomètre
,
`
`
.
`
`
à
raison
de
$
heure
heure
par
jour
,
`
`
.
`
`
pendant
$
jour
jour
.
<
br
/
>
\n
'
'
.
`
`
vitesse
être
de
`
`
.
(
$
distance
/
$
heure
/
$
jour
)
.
'
'
kilomètre
/
h.\n
'
'
;
?
>
<
/
body
>
<
/
html
>
.
bonjour
M
.
truc
.
formulaire
:
dns-remplacer
<
html
>
<
body
>
<
form
method
=
'
'
get
'
'
action
=
'
'
dns-remplacer
'
'
>
<
table
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
formulaire
en
PHP
,
corriger
<
tr
>
<
td
align
=
'
'
right
'
'
>
sexe
<
/
td
>
<
td
>
<
input
name
=
'
'
sexe
'
'
type
=
'
'
radio
'
'
value
=
'
'
M
'
'
checked
=
'
'
checked
'
'
/
>
masculin
<
input
name
=
'
'
sexe
'
'
type
=
'
'
radio
'
'
value
=
'
'
F
'
'
/
>
féminin
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
nom
<
/
td
>
<
td
>
<
input
name
=
'
'
nom
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
center
'
'
colspan
=
'
'
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
/
>
<
/
tr
>
<
/
table
>
<
/
form
>
<
/
body
>
<
/
html
>
traitement
:
dns-remplacer
<
html
>
<
body
>
<
?
php
if
(
$
sexe
=
=
'
'
M
'
'
)
{
echo
`
`
bonjour
Monsieur
$
nom
.
`
`
;
}
else
{
echo
`
`
bonjour
Madame
$
nom
.
`
`
;
}
?
>
<
/
body
>
<
/
html
>
.
permettre
de
chasse
:
formulaire
:
dns-remplacer
<
html
>
<
body
>
<
form
method
=
'
'
get
'
'
action
=
'
'
dns-remplacer
'
'
>
<
table
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
poule
<
/
td
>
<
td
>
<
input
name
=
'
'
poule
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
chien
<
/
td
>
<
td
>
<
input
name
=
'
'
chien
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
vache
<
/
td
>
<
td
>
<
input
name
=
'
'
vache
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
right
'
'
>
ami
<
/
td
>
<
td
>
<
input
name
=
'
'
ami
'
'
/
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
align
=
'
'
center
'
'
colspan
=
'
'
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
/
>
<
/
tr
>
<
/
table
>
<
/
form
>
<
/
body
>
<
/
html
>
traitement
:
dns-remplacer
<
html
>
<
body
>
<
?
php
echo
`
`
avoir
tuer
:
\n
'
'
;
echo
`
`
<
ul
>
\n
'
'
;
echo
`
`
<
li
>
$
poule
poule
,
<
/
li
>
\n
'
'
;
echo
`
`
<
li
>
$
chien
chien
,
<
/
li
>
\n
'
'
;
echo
`
`
<
li
>
$
vache
vache
,
<
/
li
>
\n
'
'
;
echo
`
`
<
li
>
$
ami
ami
.
<
/
li
>
\n
'
'
;
echo
`
`
<
/
ul
>
\n
'
'
;
$
perdre
=
$
poule
*
$
chien
*
$
vache
*
$
ami
*
;
echo
`
`
avoir
perdre
:
`
`
.
`
`
$
poule
*
+
$
chien
*
+
$
vache
*
+
$
ami
*
=
$
perdu
point
.
'
'
.
`
`
\n
<
br
/
>
\n
'
'
;
$
permettre
=
floor
(
$
perdre
/
)
;
if
(
$
permis
<
)
{
echo
`
`
<
b
>
permis
être
valide
,
attention
!
<
/
b
>
\n
'
'
;
}
else
{
echo
`
`
<
b
>
avoir
épuiser
$
permettre
permettre
,
devoir
payer
`
`
.
(
$
permis
*
)
.
'
'
francs.\n
'
'
.
`
`
<
/
b
>
'
'
;
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
formulaire
en
PHP
,
corriger
}
?
>
<
/
body
>
<
/
html
>
.
calculateur
,
formulaire
traitement
:
dns-remplacer
<
html
>
<
body
>
avec
liste
déroulant
:
<
br
/
>
<
form
method
=
'
'
get
'
'
action
=
'
'
dns-remplacer
'
'
>
<
input
name
=
'
'
avoir
'
'
size
=
'
'
'
'
/
>
<
select
name
=
'
'
par
'
'
>
<
option
valoir
=
'
'
+
'
'
>
+
<
/
option
>
<
option
valoir
=
'
'
-
'
'
>
-
<
/
option
>
<
option
valoir
=
'
'
*
'
'
>
*
<
/
option
>
<
option
valoir
=
'
'
/
'
'
>
/
<
/
option
>
<
/
select
>
<
input
name
=
'
'
b
'
'
size
=
'
'
'
'
/
>
<
br
/
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
/
>
<
/
form
>
<
hr
/
>
<
!
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
-
--
>
avec
bouton
radio
:
<
br
/
>
<
form
method
=
'
'
get
'
'
action
=
'
'
dns-remplacer
'
'
>
<
table
>
<
tr
>
<
td
>
<
input
name
=
'
'
avoir
'
'
size
=
'
'
'
'
/
>
<
/
td
>
<
td
>
<
input
type
=
'
'
radio
'
'
name
=
'
'
par
'
'
value
=
'
'
+
'
'
checked
=
'
'
checked
'
'
/
>
+
<
br
/
>
<
input
type
=
'
'
radio
'
'
name
=
'
'
par
'
'
value
=
'
'
-
'
'
/
>
-
<
br
/
>
<
input
type
=
'
'
radio
'
'
name
=
'
'
par
'
'
value
=
'
'
*
'
'
/
>
*
<
br
/
>
<
input
type
=
'
'
radio
'
'
name
=
'
'
par
'
'
value
=
'
'
/
'
'
/
>
/
<
/
td
>
<
td
>
<
input
name
=
'
'
b
'
'
size
=
'
'
'
'
>
<
/
td
>
<
/
tr
>
<
tr
>
<
td
colspan
=
'
'
'
'
align
=
'
'
center
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
envoyer
'
'
/
>
<
/
td
>
<
/
table
>
<
/
form
>
<
hr
/
>
<
!
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
-
--
>
<
?
php
if
(
isset
(
$
par
)
)
{
echo
`
`
résultat
calcul
précédent
être
:
$
avoir
$
par
$
b
=
'
'
;
if
(
$
par
=
=
'
'
+
'
'
)
{
echo
$
a+
$
b
;
}
elseif
(
$
par
=
=
'
'
-
'
'
)
{
echo
$
a-
$
b
;
}
elseif
(
$
par
=
=
'
'
*
'
'
)
{
echo
$
avoir
*
$
b
;
}
else
{
echo
$
avoir
/
$
b
;
}
}
?
>
<
/
body
>
<
/
html
>
.
table
de
multiplication
à
demande
:
dns-remplacer
<
html
>
<
head
>
<
style
type
=
'
'
text
/
css
'
'
>
td
{
text-align
:
right
;
}
<
/
style
>
<
/
head
>
<
body
>
<
form
action
=
'
'
dns-remplacer
'
'
>
choisir
table
:
<
select
name
=
'
'
table
'
'
>
<
?
php
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
echo
`
`
<
option
'
'
;
if
(
$
table
=
=
$
i
)
echo
`
`
selected
=
\
'
'
selected\
'
'
'
'
;
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
formulaire
en
PHP
,
corriger
echo
`
`
>
$
i
<
/
option
>
\n
'
'
;
}
?
>
<
/
select
>
<
br
/
>
choisir
nombre
de
ligne
:
<
select
name
=
'
'
ligne
'
'
>
<
?
php
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
echo
`
`
<
option
'
'
;
if
(
$
ligne
=
=
$
i
)
echo
`
`
selected
=
\
'
'
selected\
'
'
'
'
;
echo
`
`
>
$
i
<
/
option
>
\n
'
'
;
}
?
>
<
/
select
>
<
br
/
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
afficher
table
choisir
'
'
/
>
<
/
form
>
<
p
/
>
<
?
php
if
(
isset
(
$
table
)
)
{
/
/
utiliser
formulaire
...
echo
`
`
<
table
>
\n
'
'
;
for
(
$
l
=
;
$
l
<
=
$
ligne
;
$
l++
)
{
/
/
afficher
ligne
de
table
echo
`
`
<
tr
>
<
td
>
$
l
<
/
td
>
<
td
>
×
<
/
td
>
<
td
>
$
table
<
/
td
>
<
td
>
=
<
/
td
>
<
td
>
'
'
.
(
$
l
*
$
table
)
.
`
`
<
/
td
>
<
/
tr
>
\n
'
'
;
}
echo
`
`
<
/
table
>
\n
'
'
;
}
?
>
<
/
body
>
<
/
html
>
.
mot
de
passe
:
dns-remplacer
<
html
>
<
body
>
<
form
action
=
'
'
dns-remplacer
'
'
>
taper
mot
de
passe
:
<
input
type
=
'
'
password
'
'
name
=
'
'
pass
'
'
/
>
<
input
type
=
'
'
submit
'
'
/
>
<
/
form
>
<
?
php
if
(
isset
(
$
pass
)
)
{
if
(
$
pass
=
=
'
'
un
'
'
)
{
/
/
premier
mot
de
passe
autoriser
echo
`
`
<
h@card@
>
bienvenue
.
être
l
’
utilisateur
principal
.
<
/
h2
>
'
'
;
}
elseif
(
$
pass
=
=
'
'
deux
'
'
)
{
/
/
deuxième
mot
de
passe
autoriser
echo
`
`
<
h@card@
>
bienvenue
.
être
utilisateur
de
base
.
<
/
h4
>
'
'
;
}
else
{
/
/
mot
de
passe
reconnaître
echo
`
`
<
h@card@
style
=
\
'
'
color
:
red
;
background
:
yellow
;
text-align
:
center
;
\
'
'
>
'
'
.
`
`
accès
interdire
<
/
h1
>
'
'
;
}
}
?
>
<
/
body
>
<
/
html
>
.
compléter
addition
:
dns-remplacer
<
html
>
<
body
>
remplir
case
avec
bon
nombre
calcul
être
correct
:
<
?
php
$
ok
=
;
if
(
isset
(
$
avoir
)
)
{
echo
`
`
venir
d
’
essayer
$
a+
$
c
=
$
b
.
<
br
/
>
\n
'
'
;
if
(
$
a+
$
c
=
=
$
b
)
{
echo
`
`
c
’
être
exact
.
bravo
!
`
`
;
$
ok
=
;
}
else
{
echo
`
`
c
’
être
faux
,
essayer
.
`
`
;
}
}
else
{
$
b
=
rand
(
,
)
;
$
avoir
=
rand
(
,
$
b
)
;
}
if
(
$
ok
=
=
)
{
?
>
<
form
method
=
'
'
post
'
'
>
<
?
php
echo
$
avoir
;
?
>
+
<
input
size
=
'
'
'
'
name
=
'
'
c
'
'
/
>
=
<
?
php
echo
$
b
;
?
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
formulaire
en
PHP
,
corriger
<
input
type
=
'
'
submit
'
'
value
=
'
'
verifier
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
avoir
'
'
value
=
'
'
<
?
php
echo
$
avoir
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
b
'
'
value
=
'
'
<
?
php
echo
$
b
;
?
>
'
'
/
>
<
/
form
>
<
?
php
}
echo
`
`
<
form
method
=
\
'
'
post\
'
'
>
'
'
.
`
`
<
input
type
=
\
'
'
submit\
'
'
value
=
\
'
'
recommencer\
'
'
/
>
<
/
form
>
'
'
;
?
>
<
/
body
>
<
/
html
>
.
L
’
ordinateur
choisir
,
deviner
:
dns-remplacer
<
html
>
<
body
>
<
h@card@
>
devinette
n◦1
<
/
h1
>
<
h@card@
>
devoir
deviner
nombre
programme
avoir
choisir
<
/
h2
>
<
?
php
/
/
jeu
être
commencer
if
(
isset
(
$
limite
)
)
{
/
/
c
’
être
premier
fois
if
(
!
isset
(
$
guess
)
)
{
/
/
choisir
nombre
à
deviner
$
guess
=
rand
(
,
$
limite
)
;
/
/
c
’
être
premier
essai
$
nbessai
=
;
}
echo
`
`
nombre
j
’
avoir
choisir
être
entre
$
limite
.
<
br
/
>
\n
'
'
;
/
/
avoir
proposition
à
traiter
if
(
isset
(
$
proposition
)
)
{
$
proposition
=
$
proposition
*
;
echo
`
`
venir
de
proposer
$
proposition
:
`
`
;
/
/
joueur
avoir
trouver
if
(
$
proposition
=
=
$
guess
)
{
echo
`
`
\n
<
h@card@
>
bravo
!
trouver
en
`
`
.
(
$
nbessai-1
)
.
'
'
essai
<
/
h3
>
\n
'
'
;
echo
`
`
<
form
method
=
\
'
'
post\
'
'
>
\n
'
'
;
echo
`
`
<
input
type
=
\
'
'
submit\
'
'
value
=
\
'
'
Recommencer\
'
'
/
>
\n
'
'
;
echo
`
`
<
/
form
>
\n
'
'
;
}
else
{
/
/
$
proposition
!
=
$
guess
:
trouver
if
(
$
proposition
<
$
guess
)
{
/
/
proposition
petit
echo
`
`
petit
.
<
p
/
>
\n
'
'
;
}
if
(
$
proposition
>
$
guess
)
{
/
/
proposition
grand
echo
`
`
grand
.
<
p
/
>
\n
'
'
;
}
}
/
/
fin
de
if
(
$
proposition
=
=
$
guess
)
}
if
(
isset
(
$
guess
)
&
&
(
$
proposition
!
=
$
guess
)
)
{
echo
`
`
C
’
être
`
`
.
$
nbessai
.
'
'
<
sup
>
'
'
.
(
$
nbessai
=
=
?
`
`
er
'
'
:
'
'
ème
'
'
)
.
`
`
<
/
sup
>
essai
.
<
p
/
>
\n
'
'
;
?
>
<
table
>
<
tr
>
<
td
>
<
form
method
=
'
'
post
'
'
>
proposer
?
<
input
name
=
'
'
proposition
'
'
size
=
'
'
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
guess
'
'
value
=
'
'
<
?
php
echo
$
guess
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
limite
'
'
value
=
'
'
<
?
php
echo
$
limite
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
nbessai
'
'
value
=
'
'
<
?
php
echo
$
nbessai+1
;
?
>
'
'
/
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
tester
proposition
'
'
/
>
<
/
form
>
<
/
td
>
<
td
>
<
form
method
=
'
'
post
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
abandonner
'
'
/
>
<
/
form
>
<
/
td
>
<
/
tr
>
<
/
table
>
<
?
php
}
/
/
fin
de
if
(
isset
(
$
guess
)
&
&
(
$
proposition
!
=
$
guess
)
)
}
else
{
/
/
commencer
jeu
?
>
<
form
method
=
'
'
post
'
'
>
choisir
limite
(
difficulté
)
:
<
select
name
=
'
'
limite
'
'
>
<
option
selected
=
'
'
selected
'
'
>
<
/
option
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
formulaire
en
PHP
,
corriger
<
option
>
<
/
option
>
<
option
>
<
/
option
>
<
option
>
<
/
option
>
<
/
select
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
commencer
'
'
/
>
<
/
form
>
<
?
php
}
?
>
<
/
body
>
<
/
html
>
.
choisir
,
l
’
ordinateur
deviner
:
dns-remplacer
<
html
>
<
body
>
<
h@card@
>
devinette
n◦2
<
/
h1
>
<
h@card@
>
programme
aller
deviner
nombre
avoir
choisir
<
/
h2
>
<
?
php
/
/
c
’
être
premier
exécution
if
(
!
isset
(
$
_POST
[
`
`
min
'
'
]
)
)
{
/
/
demander
à
selectionner
limite
?
>
sélectionner
limite
supérieur
,
avoir
choisir
nombre
nul
devoir
deviner
(
sans
dire
)
cliquer
sur
<
em
>
commencer
<
/
em
>
.
<
p
/
>
<
form
method
=
'
'
post
'
'
>
limite
supérieur
?
<
select
name
=
'
'
max
'
'
>
<
option
selected
=
'
'
selected
'
'
>
<
option
>
<
/
option
>
<
option
>
<
/
option
>
<
option
>
<
/
option
>
<
/
select
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
min
'
'
value
=
'
'
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
nbessai
'
'
value
=
'
'
'
'
/
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
commencer
'
'
/
>
<
/
form
>
<
?
php
}
else
{
$
nbessai
=
$
_GET
[
`
`
nbessai
'
'
]
;
if
(
$
_POST
[
`
`
result
'
'
]
=
=
'
'
=
'
'
)
{
/
/
nombre
être
trouver
echo
`
`
<
h@card@
>
gagner
en
.
`
`
$
_POST
[
`
`
nbessai
'
'
]
.
'
'
essai
.
<
/
h3
>
\n
'
'
;
}
elseif
(
$
_POST
[
`
`
result
'
'
]
=
=
'
'
+
'
'
)
{
/
/
grand
,
réduire
borne
supérieur
$
max
=
$
_POST
[
`
`
test
'
'
]
;
}
elseif
(
$
_POST
[
`
`
result
'
'
]
=
=
'
'
-
'
'
)
{
/
/
petit
,
réduire
borne
inférieur
$
min
=
$
_POST
[
`
`
test
'
'
]
;
}
/
/
n
’
avoir
trouver
if
(
$
_POST
[
`
`
result
'
'
]
!
=
'
'
=
'
'
)
{
if
(
$
_POST
[
`
`
min
=
=
$
_POST
[
`
`
max
'
'
]
)
{
/
/
borne
être
égal
:
avoir
avoir
triche
echo
`
`
<
h@card@
>
avoir
tricher
<
/
h3
>
\n
'
'
;
}
else
{
/
/
nouveau
proposition
$
test
=
floor
(
(
$
_POST
[
`
`
min
'
'
]
+
$
_POST
[
`
`
max
'
'
]
)
/
)
;
if
(
$
_POST
[
`
`
max
'
'
]
-
$
_POST
[
`
`
min
'
'
]
=
=
)
{
$
test
=
$
_POST
[
`
`
max
'
'
]
;
}
echo
`
`
<
table
>
<
tr
>
<
td
align
=
\
'
'
center\
'
'
colspan
=
\
'
'
3\
'
'
>
'
'
;
echo
`
`
`
`
.
$
_POST
[
`
`
nbessai
'
'
]
.
'
'
<
sup
>
'
'
.
(
$
_POST
[
`
`
nbessai
'
'
]
=
=
?
'
'
er
'
'
:
'
'
ème
'
'
)
.
`
`
<
/
sup
>
essai
'
'
;
echo
`
`
être
nombre
<
b
>
$
_POST
[
`
`
test
'
'
]
<
/
b
>
<
/
td
>
<
/
tr
>
\n
'
'
;
?
>
<
td
>
<
form
method
=
'
'
post
'
'
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
result
'
'
value
=
'
'
-
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
test
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
test
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
min
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
min
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
max
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
max
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
nbessai
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
nbessai
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
petit
'
'
/
>
<
/
form
>
<
/
td
>
<
td
>
<
form
method
=
'
'
post
'
'
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
formulaire
en
PHP
,
corriger
<
input
type
=
'
'
hidden
'
'
name
=
'
'
result
'
'
value
=
'
'
=
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
test
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
test
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
min
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
min
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
max
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
max
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
nbessai
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
nbessai
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
G
à
G
N
É
!
!
`
`
/
>
<
/
form
>
<
/
td
>
<
td
>
<
form
method
=
'
'
post
'
'
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
test
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
test
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
result
'
'
value
=
'
'
+
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
min
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
min
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
max
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
max
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
hidden
'
'
name
=
'
'
nbessai
'
'
value
=
'
'
<
?
php
echo
$
_POST
[
`
`
nbessai
'
'
]
;
?
>
'
'
/
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
grand
'
'
/
>
<
/
form
>
<
/
td
>
<
/
tr
>
<
/
table
>
<
?
php
}
}
}
if
(
isset
(
$
_POST
[
`
`
min
'
'
]
)
)
{
?
>
<
form
method
=
'
'
post
'
'
>
<
input
type
=
'
'
submit
'
'
value
=
'
'
recommencer
'
'
/
>
<
/
form
>
<
?
php
}
?
>
<
/
body
>
<
/
html
>
.
pipotron
:
dns-remplacer
<
html
>
<
body
>
<
?
php
if
(
isset
(
$
_POST
[
`
`
pipo1
'
'
]
)
)
{
echo
stripslashes
(
`
`
<
hr
/
>
'
'
.
$
_POST
[
`
`
$
pipo1
'
'
]
.
'
'
`
`
.
$
_POST
[
`
`
$
pipo2
'
'
]
.
'
'
`
`
.
$
_POST
[
`
`
pipo3
'
'
]
.
'
'
`
`
.
$
_POST
[
`
`
$
pipo4
'
'
]
.
'
'
$
'
'
.
$
_POST
[
`
`
pipo5
'
'
]
.
'
'
`
`
.
$
_POST
[
`
`
$
pipo6
'
'
]
.
'
'
`
`
.
$
_POST
[
`
`
$
pipo7
'
'
]
.
'
'
$
_POST
[
`
`
$
pipo8
'
'
]
.
`
`
.
<
hr
/
>
'
'
)
;
}
?
>
<
form
method
=
'
'
post
'
'
>
<
select
name
=
'
'
pipo1
'
'
>
<
option
>
avec
<
/
option
>
<
option
>
considérer
<
/
option
>
<
option
>
mener
<
/
option
>
<
option
>
avoir
égard
à
<
/
option
>
<
option
>
voir
<
/
option
>
<
option
>
en
concerner
<
/
option
>
<
option
>
dans
cas
particulier
de
<
/
option
>
<
option
>
être
<
/
option
>
<
option
>
fait
de
<
/
option
>
<
option
>
durer
<
/
option
>
<
/
select
>
<
select
name
=
'
'
pipo2
'
'
>
<
option
>
situation
<
/
option
>
<
option
>
conjoncture
<
/
option
>
<
option
>
crise
<
/
option
>
<
option
>
l
’
inertie
<
/
option
>
<
option
>
l
’
impasse
<
/
option
>
<
option
>
l
’
extrémité
<
/
option
>
<
option
>
dégradation
mœurs
<
/
option
>
<
option
>
sinistrose
<
/
option
>
<
option
>
dualité
de
situation
<
/
option
>
<
option
>
baisse
de
confiance
<
/
option
>
<
/
select
>
<
select
name
=
'
'
pipo3
'
'
>
<
option
>
présenter
<
/
option
>
<
option
>
actuel
<
/
option
>
<
option
>
occuper
<
/
option
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
premier
formulaire
en
PHP
,
corriger
<
option
>
être
<
/
option
>
<
option
>
induire
<
/
option
>
<
option
>
conjoncturel
<
/
option
>
<
option
>
contemporain
<
/
option
>
<
option
>
de
fin
de
siècle
<
/
option
>
<
option
>
de
société
<
/
option
>
<
option
>
de
dernier
temps
<
/
option
>
<
/
select
>
<
select
name
=
'
'
pipo4
'
'
>
<
option
>
convenir|convier
de
<
/
option
>
<
option
>
falloir
<
/
option
>
<
option
>
devoir
de
<
/
option
>
<
option
>
être
préférable
de
<
/
option
>
<
option
>
être
intéresser
de
<
/
option
>
<
option
>
falloir
négliger
de
<
/
option
>
<
option
>
pouvoir
passer
de
<
/
option
>
<
option
>
être
nécessaire
de
<
/
option
>
<
option
>
être
bon
de
<
/
option
>
<
option
>
falloir
de
urgence
<
/
option
>
<
/
select
>
<
select
name
=
'
'
pipo5
'
'
>
<
option
>
étudier
<
/
option
>
<
option
>
examiner
<
/
option
>
<
option
>
négliger
<
/
option
>
<
option
>
prendre
en
considération
<
/
option
>
<
option
>
anticiper
<
/
option
>
<
option
>
imaginer
<
/
option
>
<
option
>
préoccuper
de
<
/
option
>
<
option
>
s
’
intéresser
à
<
/
option
>
<
option
>
avoir
à
l
’
esprit
<
/
option
>
<
option
>
remémorer
<
/
option
>
<
/
select
>
<
select
name
=
'
'
pipo6
'
'
>
<
option
>
<
/
option
>
<
option
>
<
/
option
>
<
option
>
majorité
<
/
option
>
<
option
>
<
/
option
>
<
option
>
l
’
ensemble
<
/
option
>
<
option
>
somme
<
/
option
>
<
option
>
totalité
<
/
option
>
<
option
>
globalité
<
/
option
>
<
option
>
<
/
option
>
<
option
>
<
/
option
>
<
/
select
>
<
select
name
=
'
'
pipo7
'
'
>
<
option
>
solution
<
/
option
>
<
option
>
issu
<
/
option
>
<
option
>
problématique
<
/
option
>
<
option
>
voie
<
/
option
>
<
option
>
alternatif
<
/
option
>
<
option
>
solution
<
/
option
>
<
option
>
issu
<
/
option
>
<
option
>
problématique
<
/
option
>
<
option
>
voie
<
/
option
>
<
option
>
alternatif
<
/
option
>
<
/
select
>
<
select
name
=
'
'
pipo8
'
'
>
<
option
>
envisageable
<
/
option
>
<
option
>
possible
<
/
option
>
<
option
>
en
possession
<
/
option
>
<
option
>
s
’
offrir
à
<
/
option
>
<
option
>
de
bon
sens|sen
<
/
option
>
<
option
>
envisageable
<
/
option
>
<
option
>
possible
<
/
option
>
<
option
>
en
possession
<
/
option
>
<
option
>
s
’
offrir
à
<
/
option
>
<
option
>
de
bon
sens|sen
<
/
option
>
<
/
select
>
<
input
type
=
'
'
submit
'
'
/
>
<
/
form
>
<
/
body
>
<
/
html
>
chapitre
.
chaîne
de
caractère
,
corriger
trouver
l
’
énoncer
de
exercice
chapitrer
dns-remplacer
:
<
html
>
<
body
>
<
h@card@
>
premier
essai
de
contrôle
d
’
identité
<
/
h2
>
<
?
php
if
(
(
trim
(
strtolower
(
$
nom
)
)
=
=
trim
(
strtolower
(
`
`
atte
'
'
)
)
)
&
&
(
trim
(
strtolower
(
$
prenom
)
)
=
=
trim
(
strtolower
(
`
`
tom
'
'
)
)
)
&
&
(
trim
(
strtolower
(
$
password
)
)
=
=
trim
(
strtolower
(
`
`
Rouge
'
'
)
)
)
)
{
echo
`
`
bienvenir
chez
,
tom
atte
...
<
br
/
>
\n
'
'
;
}
else
{
/
/
sortie
provisoire
mode
php
(
pour
écrire
texte
html
pur
)
?
>
<
hr
/
>
Veuillez
identifier
SVP
:
<
p
/
>
<
form
method
=
'
'
post
'
'
action
=
'
'
dns-remplacer
'
'
/
>
nom
:
<
input
name
=
'
'
nom
'
'
/
>
<
br
/
>
prénom
:
<
input
name
=
'
'
prenom
'
'
/
>
<
br
/
>
mot
de
passe
:
<
input
type
=
'
'
password
'
'
name
=
'
'
password
'
'
/
>
<
br
/
>
<
input
type
=
'
'
submit
'
'
/
>
<
br
/
>
<
/
form
>
<
hr
/
>
<
?
php
/
/
retour
dans
mode
php
(
pour
fermer
`
`
else
'
'
)
}
?
>
<
/
body
>
<
/
html
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
chaîne
de
caractère
,
corriger
chapitre
.
exercice
sur
tableau
,
corriger
trouver
énoncé
de
exercice
chapitrer
.
.
écrire
programme
lire
fichier
pour
construire
page
web
contenir
liste
de
lien
hypertextes
:
dns-remplacer
<
html
>
<
head
>
<
title
>
utilisation
tableaux-6
<
/
title
>
<
/
head
>
<
body
>
<
ul
>
<
?
php
$
lien
=
file
(
`
`
dns-remplacer
'
'
)
;
for
(
$
i
=
;
$
i
<
count
(
$
lien
)
;
$
i++
)
{
echo
`
`
<
li
>
<
avoir
href
=
\
'
'
'
'
.
$
lien
[
$
i
]
.
'
'
\
'
'
>
'
'
.
$
lien
[
$
i
]
.
`
`
<
/
avoir
>
<
/
li
>
\n
'
'
;
}
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
.
même
exercice
,
fois
ligne
comprendre
description
site
pointé
(
sépara-
tion
être
assurer
par
chaîne
«
`
`
*
*
'
'
»
)
:
dns-remplacer
<
html
>
<
body
>
<
ul
>
<
?
php
$
lien
=
file
(
`
`
dns-remplacer
'
'
)
;
for
(
$
i
=
;
$
i
<
count
(
$
lien
)
;
$
i++
)
{
$
partir
=
explode
(
`
`
*
*
'
'
,
$
lien
[
$
i
]
)
;
echo
`
`
<
li
>
<
avoir
href
=
\
'
'
'
'
.
$
partie
[
]
.
'
'
\
'
'
>
'
'
.
$
partie
[
]
.
`
`
<
/
avoir
>
<
/
li
>
\n
'
'
;
}
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
.
même
exercice
,
fois
description
l
’
adresse
correspondant
être
sur
deux
ligne
consécutif
:
dns-remplacer
<
html
>
<
body
>
<
ul
>
<
?
php
$
lien
=
file
(
`
`
dns-remplacer
'
'
)
;
for
(
$
i
=
;
$
i
<
count
(
$
lien
)
;
$
i
=
$
i+2
)
{
echo
`
`
<
li
>
<
avoir
href
=
\
'
'
'
'
.
$
lien
[
$
i+1
]
.
'
'
\
'
'
>
'
'
.
$
lien
[
$
i
]
.
`
`
<
/
avoir
>
<
/
li
>
\n
'
'
;
}
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
.
donner
liste
de
personne
ligne
être
composer
,
dans
l
’
ordre
,
d
’
identifier
(
nombre
)
,
prénom
,
nom
,
mot
de
passe
.
écrire
page
web
donner
à
sélectionner
personne
afficher
mot
de
passe
:
dns-remplacer
<
html
>
<
body
>
<
?
php
$
personne
=
file
(
`
`
dns-remplacer
'
'
)
;
for
(
$
i
=
;
$
i
<
count
(
$
personne
)
;
$
i++
)
{
$
partir
=
explode
(
`
`
;
'
'
,
$
personne
[
$
i
]
)
;
$
code
=
$
partie
[
]
;
$
prenom
[
$
code
]
=
$
partie
[
]
;
$
nom
[
$
code
]
=
$
partie
[
]
;
$
password
[
$
code
]
=
$
partie
[
]
;
}
?
>
<
form
action
=
'
'
dns-remplacer
'
'
method
=
'
'
post
'
'
>
<
select
name
=
'
'
'
'
>
<
?
php
reset
(
$
nom
)
;
while
(
list
(
$
code
,
$
n
)
=
each
(
$
nom
)
)
{
echo
`
`
<
option
valoir
=
\
'
'
$
code\
'
'
>
'
'
.
$
prenom
[
$
code
]
.
'
'
`
`
.strtoupper
(
$
n
)
.
`
`
<
/
option
>
\n
'
'
;
}
?
>
<
/
select
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
exercice
sur
tableau
,
corriger
<
input
type
=
'
'
submit
'
'
value
=
'
'
mot
de
passe
?
'
'
/
>
<
/
form
>
<
?
php
if
(
isset
(
$
)
)
{
echo
`
`
<
br
/
>
<
hr
/
>
mot
de
passe
de
`
`
.
$
prenom
[
$
]
.
'
'
`
`
.strtoupper
(
$
nom
[
$
]
)
.
'
'
être
`
`
.
$
password
[
$
]
;
}
?
>
<
/
body
>
<
/
html
>
chapitre
.
exercice
sur
fichier
,
corriger
trouver
énoncé
de
exercice
chapitrer
.
dns-remplacer
:
page
d
’
accueil
.
(
s
’
agir
en
fait
d
’
page
en
HTML
pur
,
sans
PHP
.
)
<
html
>
<
<
body
>
>
<
h@card@
>
Premier
projet
en
licence
AES
<
/
h1
>
<
h@card@
>
accueil
<
/
h@card@
>
<
ul
>
<
li
>
<
avoir
href
=
'
'
dns-remplacer
'
'
>
liste
<
/
avoir
>
contact
(
autre
<
avoir
href
=
'
'
dns-remplacer
'
'
>
présentation
<
/
avoir
>
contact
)
<
/
li
>
<
li
>
saisir
<
avoir
href
=
'
'
dns-remplacer
'
'
>
nouveau
contact
<
/
avoir
>
<
/
li
>
<
/
ul
>
<
/
<
body
>
>
<
/
HTML
>
@ord@
dns-remplacer
:
liste
contact
.
<
html
>
<
<
body
>
>
<
h@card@
>
Premier
projet
en
licence
AES
<
/
h1
>
<
h@card@
>
liste
contact
<
/
h@card@
>
<
ul
>
<
?
php
/
/
lecture
fichier
$
f
=
file
(
`
`
dns-remplacer
'
'
)
;
/
/
pour
trier
sur
nom
sortir
(
$
f
)
;
/
/
parcours
de
liste
for
(
$
i
=
;
$
i
<
count
(
$
f
)
;
$
i++
)
{
/
/
découpage
d
’
ligne
suivre
`
`
;
'
'
$
l
=
explode
(
`
`
;
'
'
,
$
f
[
$
i
]
)
;
/
/
affichage
après
découpage
echo
`
`
<
li
>
nom
:
$
l
[
]
<
br
/
>
prénom
:
$
l
[
]
<
br
/
>
téléphone
:
$
l
[
]
\n
'
'
;
}
?
>
<
/
ul
>
<
avoir
href
=
'
'
dns-remplacer
'
'
>
accueil
<
/
avoir
>
<
/
<
body
>
>
<
/
html
>
@ord@
dns-remplacer
:
autre
liste
contact
<
html
>
<
<
body
>
>
<
h@card@
>
Premier
projet
en
licence
AES
<
/
h1
>
<
h@card@
>
liste
contact
<
/
h2
>
<
tabler
border
=
'
'
border
'
'
>
<
tr
>
<
th
>
nom
<
/
th
>
<
th
>
prénom
<
/
th
>
<
th
>
téléphoner
<
/
th
>
<
/
tr
>
<
?
php
/
/
lecture
fichier
$
f
=
file
(
`
`
dns-remplacer
'
'
)
;
/
/
pour
trier
sur
nom
sortir
(
$
f
)
;
/
/
parcours
de
liste
for
(
$
i
=
;
$
i
<
count
(
$
f
)
;
$
i++
)
{
/
/
découpage
d
’
ligne
suivre
`
`
;
'
'
$
l
=
explode
(
`
`
;
'
'
,
$
f
[
$
i
]
)
;
/
/
affichage
après
découpage
echo
`
`
<
tr
>
<
td
>
$
l
[
]
<
/
td
>
<
td
>
$
l
[
]
<
/
td
>
<
td
>
$
l
[
]
<
/
td
>
<
/
tr
>
\n
'
'
;
}
?
>
<
/
table
>
<
avoir
href
=
'
'
dns-remplacer
'
'
>
accueil
<
/
avoir
>
<
/
<
body
>
>
<
/
html
>
@ord@
dns-remplacer
:
formulaire
de
saisie
.
(
s
’
agir
en
fait
d
’
page
en
HTML
pur
,
sans
PHP
.
)
<
html
>
<
<
body
>
>
<
h@card@
>
Premier
projet
en
licence
AES
<
/
h1
>
<
h@card@
>
saisir
d
’
nouveau
contact
<
/
h@card@
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
exercice
sur
fichier
,
corriger
<
form
action
=
'
'
dns-remplacer
'
'
>
nom
:
<
input
name
=
'
'
nom
'
'
/
>
<
br
/
>
prénom
:
<
input
name
=
'
'
prenom
'
'
/
>
<
br
/
>
téléphone
:
<
input
name
=
'
'
telephone
'
'
/
>
<
br
/
>
<
input
type
=
'
'
submit
'
'
/
>
<
/
form
>
<
avoir
href
=
'
'
dns-remplacer
'
'
>
accueil
<
/
avoir
>
<
/
<
body
>
>
<
/
html
>
@ord@
dns-remplacer
:
enregistrer
nouveau
contact
<
html
>
<
<
body
>
>
<
h@card@
>
Premier
projet
en
licence
AES
<
/
h1
>
<
h@card@
>
enregistrement
d
’
nouveau
contact
<
/
h2
>
<
?
php
/
/
ouverture
fichier
en
ajout
$
fp
=
fopen
(
`
`
dns-remplacer
'
'
,
'
'
avoir
'
'
)
;
/
/
écriture
de
nouveau
ligne
fputs
(
$
fp
,
'
'
$
nom
;
$
prenom
;
$
telephone\n
'
'
)
;
/
/
fermeture
fichier
fclose
(
$
fp
)
;
/
/
affichage
pour
vérification
echo
`
`
nouveau
contact
avoir
être
enregistrer
:
\n
'
'
.
`
`
<
ul
>
<
/
li
>
\n
'
'
.
`
`
<
li
>
nom
:
$
nom
<
/
li
>
\n
'
'
.
`
`
<
li
>
prénom
:
$
prenom
<
/
li
>
\n
'
'
.
`
`
<
li
>
téléphone
:
$
telephone
<
/
li
>
\n
'
'
.
`
`
<
/
ul
>
\n
'
'
;
?
>
<
avoir
href
=
'
'
dns-remplacer
'
'
>
accueil
<
/
avoir
>
<
/
<
body
>
>
<
/
html
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
exploration
d
’
répertoire
,
corriger
trouver
énoncé
de
exercice
chapitrer
.
dns-remplacer
:
<
html
>
<
body
>
<
h@card@
>
afficher
image
trouver
<
/
h2
>
<
?
php
$
dir
=
opendir
(
`
`
.
`
`
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jpg
'
'
)
{
echo
`
`
<
img
src
=
\
'
'
$
file\
'
'
/
>
\n
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
body
>
<
/
html
>
@ord@
dns-remplacer
:
<
html
>
<
body
>
<
h@card@
>
afficher
onglet
,
faire
lien
vers
vrai
image
<
/
h2
>
<
?
php
$
dir
=
opendir
(
`
`
mini
'
'
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jpg
'
'
)
{
echo
`
`
<
avoir
href
=
\
'
'
$
file\
'
'
>
<
img
src
=
\
'
'
mini
/
$
file\
'
'
/
>
<
/
avoir
>
\n
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
body
>
<
/
html
>
@ord@
dns-remplacer
:
<
html
>
<
body
>
<
h@card@
>
afficher
onglet
,
faire
lien
vers
page
contenir
vrai
image
dans
cadre
<
/
h2
>
<
?
php
$
dir
=
opendir
(
`
`
mini
'
'
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jpg
'
'
)
{
echo
`
`
<
avoir
href
=
\
'
'
dns-remplacer
?
image
=
$
file\
'
'
>
'
'
.
`
`
<
img
src
=
\
'
'
mini
/
$
file\
'
'
/
>
<
/
avoir
>
\n
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
body
>
<
/
html
>
@ord@
dns-remplacer
:
<
html
>
<
body
>
<
h@card@
>
afficher
onglet
en
tableau
régulier
.
faire
lien
vers
page
contenir
vrai
image
dans
cadre
<
/
h2
>
<
tabler
border
=
'
'
border
'
'
>
<
?
php
$
nb
=
;
$
i
=
;
$
dir
=
opendir
(
`
`
mini
'
'
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jpg
'
'
)
{
if
(
$
i
=
=
)
{
echo
`
`
<
TR
>
'
'
;
}
echo
`
`
<
td
>
<
avoir
href
=
\
'
'
dns-remplacer
?
image
=
$
file\
'
'
>
'
'
.
`
`
<
img
src
=
\
'
'
mini
/
$
file\
'
'
/
>
<
/
avoir
>
<
/
td
>
\n
'
'
;
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
dns-remplacer
chapitre
.
exploration
d
’
répertoire
,
corriger
$
i++
;
if
(
$
i
>
=
$
nb
)
{
echo
`
`
<
/
tr
>
\n
'
'
;
$
i
=
;
}
}
}
closedir
(
$
dir
)
;
?
>
<
/
table
>
<
/
body
>
<
/
html
>
chapitre
.
News
...
,
corriger
trouver
énoncé
de
exercice
chapitrer
.
.
accueil
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
menu
<
/
h@card@
>
<
ul
>
<
li
>
liste
<
avoir
href
=
'
'
dns-remplacer
'
'
>
nom
<
/
avoir
>
de
fichier
de
nouveau
<
/
li
>
<
li
>
liste
<
avoir
href
=
'
'
dns-remplacer
'
'
>
lien
<
/
avoir
>
vers
fichier
de
nouveau
<
/
li
>
<
li
>
affichage
de
<
avoir
href
=
'
'
dns-remplacer
'
'
>
nouveau
<
/
avoir
>
<
/
li
>
<
li
>
affichage
<
avoir
href
=
'
'
dns-remplacer
'
'
>
titre
<
/
avoir
>
nouveau
<
/
li
>
<
li
>
affichage
<
avoir
href
=
'
'
dns-remplacer
'
'
>
titre
faire
<
/
avoir
>
vers
nouveau
<
/
li
>
<
li
>
affichage
de
<
avoir
href
=
'
'
affichetout_
dns-remplacé
'
'
>
nouveau
<
/
avoir
>
<
/
li
>
<
li
>
<
avoir
href
=
'
'
dns-remplacer
'
'
>
choix
sujet
<
/
avoir
>
<
/
li
>
<
/
ul
>
<
/
body
>
<
/
html
>
.
liste
nom
de
fichier
de
nouveau
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
liste
nom
de
fichier
de
nouveau
<
/
h@card@
>
<
ul
>
<
?
php
$
dir
=
opendir
(
`
`
.
`
`
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jnl
'
'
)
{
echo
`
`
<
li
>
$
file
;
<
/
li
>
\n
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
.
liste
lien
vers
fichier
de
nouveau
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
liste
lien
vers
fichier
de
nouveau
<
/
h@card@
>
<
ul
>
<
?
php
$
dir
=
opendir
(
`
`
.
`
`
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
chapitre
.
News
...
,
corriger
if
(
substr
(
$
file
,
)
=
=
'
'
.jnl
'
'
)
{
echo
`
`
<
li
>
<
avoir
href
=
\
'
'
dns-remplacer
?
f
=
$
file\
'
'
>
$
file
<
/
avoir
>
<
/
li
>
\n
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
page
nécessiter
l
’
existence
d
’
page
dns-remplacé
permettre
d
’
afficher
contenu
d
’
nou-
velle
:
<
html
>
<
body
>
<
?
php
require
(
$
f
)
;
?
>
<
/
body
>
<
/
html
>
.
affichage
de
nouveau
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
affichage
de
nouveau
<
/
h@card@
>
<
hr
/
>
<
?
php
$
dir
=
opendir
(
`
`
.
`
`
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jnl
'
'
)
{
$
f
=
file
(
$
file
)
;
for
(
$
i
=
;
$
i
<
count
(
$
f
)
;
$
i++
)
{
echo
$
f
[
$
i
]
;
}
echo
`
`
<
hr
/
>
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
.
affichage
titre
nouveau
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
affichage
titre
nouveau
<
/
h@card@
>
<
ul
>
<
?
php
$
dir
=
opendir
(
`
`
.
`
`
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jnl
'
'
)
{
$
f
=
file
(
$
file
)
;
echo
`
`
<
li
>
$
f
[
]
<
/
li
>
\n
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
chapitre
.
News
...
,
corriger
.
affichage
titre
faire
lien
vers
nouveau
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
affichage
titre
faire
lien
vers
nouveau
<
/
h@card@
>
<
ul
>
<
?
php
$
dir
=
opendir
(
`
`
.
`
`
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jnl
'
'
)
{
$
f
=
file
(
$
file
)
;
echo
`
`
<
li
>
<
avoir
href
=
\
'
'
$
file\
'
'
>
$
f
[
]
<
/
avoir
>
<
/
li
>
\n
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
ul
>
<
/
body
>
<
/
html
>
page
nécessiter
l
’
existence
de
dns-remplacé
.
.
affichage
de
nouveau
,
affichetout_
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
affichage
de
nouveau
,
<
/
h@card@
>
<
hr
/
>
<
?
php
$
dir
=
opendir
(
`
`
.
`
`
)
;
while
(
$
filer
=
readdir
(
$
dir
)
)
{
if
(
substr
(
$
file
,
)
=
=
'
'
.jnl
'
'
)
{
$
f
=
file
(
$
file
)
;
echo
`
`
<
h@card@
>
$
f
[
]
<
/
h3
>
\n
'
'
;
for
(
$
i
=
;
$
i
<
count
(
$
f
)
;
$
i++
)
{
echo
$
f
[
$
i
]
;
if
(
trim
(
$
f
[
$
i
]
)
=
=
'
'
'
'
)
{
echo
`
`
<
br
/
>
'
'
;
}
}
echo
`
`
<
hr
/
>
'
'
;
}
}
closedir
(
$
dir
)
;
?
>
<
/
body
>
<
/
html
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
affichetout_
dns-remplacer
chapitre
.
News
...
,
corriger
.
choix
sujet
dns-remplacé
:
<
html
>
<
body
>
<
h@card@
>
News
...
<
/
h1
>
<
h@card@
>
choix
sujet
<
/
h@card@
>
<
form
action
=
'
'
dns-remplacer
'
'
>
<
select
name
=
'
'
sujet
'
'
>
<
option
valoir
=
'
'
sci
'
'
>
science
<
/
option
>
<
option
valoir
=
'
'
inf
'
'
>
informatique
<
/
option
>
<
option
valoir
=
'
'
msc
'
'
>
divers
<
/
option
>
<
/
select
>
<
input
type
=
'
'
submit
'
'
>
<
/
form
>
<
/
body
>
<
/
html
>
@ord@
http
:
/
/
dns-remplacer
/
polys
/
php
/
exemple
/
news
/
dns-remplacer
IV
.
étude
de
cas
chapitre
.
étude
de
cas
partie
contenir
étude
de
cas
à
réaliste
,
n
’
être
réel
...
être
projet
avoir
être
demander
étudiant
de
maîtrise
AES-TEG
,
2ème
année
d
’
IUP
IIES
de
3ème
année
de
licence
MIASHS
.
être
pour
plupart
baser
sur
cas
réel
,
avoir
être
modifier
dans
but
pédagogique
(
pour
simplifier
situation
complexe
,
contraire
pour
complexifier
situation
simpliste
pour
exercice
d
’
application
cours|cour
)
.
corriger
de
projet
n
’
être
être
disponible
.
être
inutile
d
’
en
réclamer
...
chapitre
.
étude
de
cas
chapitre
.
projet
disque
licence
MIASHS
3ème
année
,
.
pouvoir
consulter
page
originales1
sur
web
.
.
présentation
aller
devoir
créer
site
web
gére
contenu
d
’
discothèque
.
manipuler
infor-
mater
nom
disque
,
année
de
parution
,
artiste
,
texte
chanson
,
etc
.
information
être
accessible
à
d
’
autre
personne
,
devoir
gérer
droit
d
’
accès
à
site
web
.
.
fonctionnalité
général
•
liste
disque
.
•
liste
chanson
pour
disque
.
•
artiste
/
groupe
pour
disque
,
possibilité
de
préciser
artiste
/
groupe
particulier
pour
chanson
(
compilation
,
duo
,
etc
.
)
.
•
genre
musical
,
langue
(
s
)
pour
artiste
/
groupe
,
langue
(
s
)
pour
chanson
.
•
auteur
(
s
)
chanson
.
•
parole
chanson
.
•
appartenance
(
s
)
d
’
artiste
à
groupe
.
.
fonctionnalité
de
consultation
•
obtenir
liste
disque
(
avec
caractéristique
)
liste
chanson
.
•
obtenir
liste
artiste
.
•
rechercher
chanson
.
•
avoir
accès
à
statistique
de
base
.
.
modification
donnée
,
accès
donnée
sensible
être
indispensable
fonctionnalité
suivant
être
protéger
par
authentification
de
l
’
utilisateur
.
en
fonctionnalité
de
consultation
(
voir
)
pouvoir
être
protéger
par
mot
de
passe
désirer
(
site
être
d
’
accès
privé
,
n
’
être
obligatoire
)
,
distinguer
deux
niveau
d
’
autorisation
,
qu
’
appelera
fort
faible
dans
suite
.
ip-remplacée
>
.
niveau
faible
C
’
être
niveau
être
accessible
donnée
sensible
,
être
modifier
information
vital
.
plupart
membre
de
confiance
avoir
accès
à
niveau
.
•
consultation
parole
chanson
(
accés
priver
nécessaire
pour
raison
de
respect
droit
d
’
auteur
)
.
•
insertion
d
’
information
dans
base
(
créer
artiste
,
genre
musical
,
disque
,
chanson
,
etc
.
)
.
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
bd
/
projetdisques
/
chapitre
.
projet
disque
ip-remplacée
>
.
niveau
fort
C
’
être
niveau
être
modifier
information
vital
pour
fonctionnement
site
.
seul
personne
,
responsable
site
,
avoir
accès
à
niveau
.
•
gérer
utilisateur
droit
(
créer
,
modifier
,
supprimer
)
.
•
modifier
supprimer
donnée
existant
(
parole
de
chanson
,
orthographe
nom
,
etc
.
)
.
.
base
de
donnée
L
’
analyse
être
présenter
.
contenter
de
donner
structure
de
base
.
.
table
•
table
artiste
:
CREATE
table
artiste
(
art_num
INTEGER
NOT
NULL
PRIMARY
KEY
,
art_prenom
CHARACTER
VARYING
,
art_nom
CHARACTER
VARYING
,
art_groupe
CHARACTER
VARYING
,
art_modif
TIMESTAMP
WITHOUT
TIME
zoner
DEFAULT
CURRENT_TIMESTAMP
)
;
•
table
etat
:
CREATE
tabler
etat
(
eta_num
INTEGER
NOT
NULL
PRIMARY
KEY
,
eta_nom
CHARACTER
VARYING
)
;
•
table
genre
:
CREATE
tabler
genre
(
gen_num
INTEGER
NOT
NULL
PRIMARY
KEY
,
gen_nom
CHARACTER
VARYING
,
gen_modif
TIMESTAMP
WITHOUT
TIME
zoner
DEFAULT
CURRENT_TIMESTAMP
)
;
•
table
droit
:
CREATE
tabler
droit
(
dro_num
INTEGER
NOT
NULL
PRIMARY
KEY
,
dro_nom
CHARACTER
VARYING
,
dro_niveau
INTEGER
)
;
•
table
langue
:
CREATE
tabler
langue
(
lan_num
CHARACTER
VARYING
NOT
NULL
PRIMARY
KEY
,
lan_nom
CHARACTER
VARYING
)
;
•
table
langueartiste
:
CREATE
table
langueartiste
(
laa_langue
CHARACTER
VARYING
NOT
NULL
REFERENCES
langue
(
lan_num
)
,
laa_artiste
INTEGER
NOT
NULL
REFERENCES
artiste
(
art_num
)
,
laa_maternelle
BOOLEAN
DEFAULT
true
,
PRIMARY
KEY
(
laa_langue
,
laa_artiste
)
)
;
•
table
autorisation
:
CREATE
tabler
autorisation
(
aut_login
CHARACTER
VARYING
NOT
NULL
PRIMARY
KEY
,
aut_motdepasse
CHARACTER
VARYING
,
aut_nom
CHARACTER
VARYING
,
aut_prenom
CHARACTER
VARYING
,
aut_droit
INTEGER
REFERENCES
droit
(
dro_num
)
)
;
•
table
chanson
:
CREATE
tabler
chanson
(
cha_num
INTEGER
NOT
NULL
PRIMARY
KEY
,
cha_titre
CHARACTER
VARYING
,
chapitre
.
projet
disque
cha_genre
INTEGER
REFERENCES
genre
(
gen_num
)
,
cha_texte
CHARACTER
VARYING
,
cha_libre
BOOLEAN
,
cha_modif
TIMESTAMP
WITHOUT
TIME
zoner
DEFAULT
CURRENT_TIMESTAMP
)
;
•
table
languechanson
:
CREATE
tabler
languechanson
(
lac_langue
CHARACTER
VARYING
NOT
NULL
REFERENCES
langue
(
lan_num
)
,
lac_chanson
INTEGER
NOT
NULL
REFERENCES
chanson
(
cha_num
)
,
lac_principal
BOOLEAN
DEFAULT
true
NOT
NULL
,
PRIMARY
KEY
(
lac_langue
,
lac_chanson
,
lac_principal
)
)
;
•
table
membre
:
CREATE
tabler
membre
(
mem_membre
INTEGER
NOT
NULL
REFERENCES
artiste
(
art_num
)
,
mem_groupe
INTEGER
NOT
NULL
REFERENCES
artiste
(
art_num
)
,
mem_debut
CHARACTER
VARYING
NOT
NULL
,
mem_fin
CHARACTER
VARYING
NOT
NULL
,
PRIMARY
KEY
(
mem_membre
,
mem_groupe
,
mem_debut
,
mem_fin
)
)
;
•
table
disquer
:
CREATE
tabler
disque
(
dis_num
INTEGER
NOT
NULL
PRIMARY
KEY
,
dis_titre
CHARACTER
VARYING
,
dis_artiste
INTEGER
REFERENCES
artiste
(
art_num
)
,
dis_annee
CHARACTER
VARYING
,
dis_cddb
CHARACTER
VARYING
,
dis_anneeachat
CHARACTER
VARYING
,
dis_prixachat
NUMERIC
(
,
)
,
dis_etat
INTEGER
REFERENCES
etat
(
eta_num
)
,
dis_perdu
BOOLEAN
DEFAULT
false
,
dis_modif
TIMESTAMP
WITHOUT
TIME
zoner
DEFAULT
CURRENT_TIMESTAMP
)
;
•
table
interprete
:
CREATE
table
interprete
(
int_artiste
INTEGER
NOT
NULL
(
int_artiste
)
REFERENCES
artiste
(
art_num
)
,
int_chanson
INTEGER
NOT
NULL
REFERENCES
chanson
(
cha_num
)
,
int_disque
INTEGER
NOT
NULL
REFERENCES
disque
(
dis_num
)
,
int_numero
INTEGER
NOT
NULL
,
PRIMARY
KEY
(
int_artiste
,
int_chanson
,
int_disque
,
int_numero
)
)
;
•
table
ecrit
:
CREATE
tabler
ecrit
(
ecr_artiste
INTEGER
NOT
NULL
REFERENCES
artiste
(
art_num
)
,
ecr_chanson
INTEGER
NOT
NULL
REFERENCES
chanson
(
cha_num
)
,
PRIMARY
KEY
(
ecr_artiste
,
ecr_chanson
)
)
;
chapitre
.
projet
disque
.
MLD
chapitre
.
projet
inscription
licence
MIASHS
3ème
année
,
.
pouvoir
consulter
page
originales1
sur
web
.
.
présentation
aller
travailler
pour
Lille
...
Lille
Numérique2
organiser
stage
de
familiarisation
étudiant
avec
ENT3
.
falloir
application
permettre
l
’
inscription
étudiant
Lille
sur
créneau
horaire
précis
.
aller
venir
en
aide
:
c
’
être
aller
réaliser
application
.
.
fonctionnalité
général
•
calendrier
avec
créneau
horaire
sur
pouvoir
cliquer
.
•
possibilité
de
s
’
inscrire
sur
créneau
de
choix
sans
authentification
nécessaire
(
nom
,
prénom
,
UFR
formation
,
numéro
étudier
)
.
•
de
possibilité
de
suppression
d
’
inscription
par
l
’
étudier
.
étudiant
pouvoir
s
’
inscrire
qu
’
à
seul
créneau
horaire
.
en
cas
d
’
erreur
devoir
s
’
adresser
gestionnaire
l
’
adresse
figurer
sur
site
.
(
vérification
par
numéro
d
’
étudier
qu
’
étudiant
n
’
être
inscrire
sur
créneau
pour
éviter
inscription
multiple
.
)
•
notification
sur
calendrier
qu
’
créneau
être
complet
.
.
fonctionnalité
calendrier
•
étendre
calendrier
paramétrée
en
fonction
séance
existant
.
•
créneau
fermer
dès
seuil
être
atteindre
(
seuil
paramétrable
par
gestionnaire
)
.
.
gestion
de
base
•
authentification
indispensable
.
•
créer
,
modifier
supprimer
séance
.
•
lister
créneau
/
imprimer
.
•
lister
inscription
/
imprimer
.
•
pouvoir
fermer
créneau
(
en
ouvrir
nouveau
)
:
mention
«
groupe
complet
»
appa-
raît
sur
calendrier
.
•
modifier
supprimer
inscription
d
’
étudiant
à
créneau
.
•
pouvoir
vider
créneau
,
créneau
pour
utilisation
ultérieur
de
base
.
•
visualiser
liste
de
créneau
avec
tri
par
:
créneau
/
nom
/
numéro
étudier
/
année
/
UFR
.
•
possibilité
de
faire
export
sur
tableur
.
.
base
de
donnée
L
’
analyse
être
présenter
.
contenter
de
donner
structure
de
base
.
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
technoweb
/
projetinscription
/
@ord@
http
:
/
/
dns-remplacer
/
fr
/
lille3-numerique
/
http
:
/
/
dns-remplacer
/
fr
/
lille3-numerique
/
ent
/
chapitre
.
projet
inscription
.
MLD
.
table
table
ufr
contenir
renseignement
sur
UFR
:
CREATE
tabler
ufr
(
ufr_num
INTEGER
PRIMARY
KEY
,
ufr_nom
VARCHAR
(
)
NOT
NULL
)
;
table
moniteur
contenir
renseignement
sur
moniteur
encadrer
séance
:
chapitre
.
projet
inscription
CREATE
tabler
moniteur
(
mon_num
INTEGER
PRIMARY
KEY
,
mon_nom
VARCHAR
(
)
NOT
NULL
,
mon_prenom
VARCHAR
(
)
)
;
table
salle
contenir
renseignement
sur
salle
dérouler
séance
:
CREATE
tabler
salle
(
sal_num
INTEGER
PRIMARY
KEY
,
sal_nom
VARCHAR
(
)
NOT
NULL
,
sal_taille
INTEGER
)
;
table
niveau
contenir
renseignement
sur
niveau
d
’
étude
étudiant
(
licence
1er|1ère
année
,
etc
.
)
:
CREATE
tabler
niveau
(
niv_num
INTEGER
PRIMARY
KEY
,
niv_nom
VARCHAR
(
)
NOT
NULL
,
niv_ordre
INTEGER
NOT
NULL
)
;
table
seance
contenir
renseignement
sur
séance
:
CREATE
tabler
seance
(
sea_num
INTEGER
PRIMARY
KEY
,
sea_jour
INTEGER
NOT
NULL
,
sea_mois
INTEGER
NOT
NULL
,
sea_annee
INTEGER
NOT
NULL
,
sea_debut_h
INTEGER
NOT
NULL
,
sea_debut_m
INTEGER
NOT
NULL
,
sea_fin_h
INTEGER
NOT
NULL
,
sea_fin_m
INTEGER
NOT
NULL
,
sea_moniteur
INTEGER
REFERENCES
moniteur
(
mon_num
)
,
sea_salle
INTEGER
REFERENCES
salle
(
sal_num
)
,
sea_remarque
VARCHAR
(
)
DEFAULT
”
)
;
table
ville
contenir
renseignement
sur
ville
:
CREATE
tabler
ville
(
vil_cp
VARCHAR
(
)
PRIMARY
KEY
,
vil_nom
VARCHAR
(
)
NOT
NULL
)
;
table
typevoirie
contenir
renseignement
sur
type
de
voirie
(
rue
,
boulevard
,
avenue
,
etc
.
)
:
CREATE
tabler
typevoirie
(
tvo_num
INTEGER
PRIMARY
KEY
,
tvo_nom
VARCHAR
(
)
NOT
NULL
)
;
table
voirie
contenir
renseignement
sur
voirie
:
CREATE
tabler
voirie
(
voi_num
INTEGER
PRIMARY
KEY
,
voi_type
INTEGER
NOT
NULL
REFERENCES
typevoirie
(
tvo_num
)
,
voi_nom
VARCHAR
(
)
NOT
NULL
,
voi_cp
VARCHAR
(
)
NOT
NULL
REFERENCES
ville
(
vil_cp
)
)
;
table
etudiant
contenir
renseignement
sur
étudiant
:
CREATE
tabler
etudiant
(
etu_carte
VARCHAR
PRIMARY
KEY
,
etu_nom
VARCHAR
(
)
NOT
NULL
,
etu_prenom
VARCHAR
(
)
,
etu_ufr
INTEGER
REFERENCES
ufr
(
ufr_num
)
,
etu_niveau
INTEGER
REFERENCES
niveau
(
niv_num
)
,
etu_adressenum
VARCHAR
(
)
,
chapitre
.
projet
inscription
etu_voirie
INTEGER
NOT
NULL
REFERENCES
voirie
(
voi_num
)
,
etu_email
VARCHAR
(
)
,
etu_telfixe
VARCHAR
(
)
,
etu_telmobile
VARCHAR
(
)
)
;
table
inscription
contenir
renseignement
sur
inscription
étudiant
séance
:
CREATE
tabler
inscription
(
ins_etudiant
VARCHAR
(
)
REFERENCES
etudiant
(
etu_carte
)
,
ins_seance
INTEGER
REFERENCES
seance
(
sea_num
)
,
PRIMARY
KEY
(
ins_etudiant
,
ins_seance
)
)
;
table
parametre
contenir
renseignement
sur
différent
paramètre
de
l
’
application
(
mot
de
passe
,
etc
.
)
:
CREATE
tabler
parametre
(
par_num
INTEGER
PRIMARY
KEY
,
par_nom
VARCHAR
(
)
,
par_texte
VARCHAR
(
)
,
par_valeur
VARCHAR
(
)
,
par_ordre
INTEGER
)
;
chapitre
.
projet
Teniraq
licence
MIASHS
3ème
année
,
.
pouvoir
consulter
page
originales1
sur
web
.
.
présentation
club
de
tennis
TENIRAQ
(
RAQ
raquette
)
utiliser
base
de
donnée
pour
administrer
fonc-
tionnement
:
adhésion
,
entrer
dans
local
,
réservation
sur
court
(
deux
court
couvrir
à
B
court
extérieur
C
)
,
match
défi
(
match
interne
club
permettre
de
classer
joueur
)
.
adhérent
recevoir
dès
qu
’
être
inscrire
(
c
’
dès
qu
’
avoir
payer
cotisation
annuel
)
badge
posséder
numéro
(
appeler
numéro
d
’
adhérent
)
mot
de
passe
permettre
de
connecter
sur
base
de
donnée
club
par
Internet
.
.
adhésion
adhésion
en
cours|cour
être
mémoriser
dans
table
badge
contenir
pour
personne
numéro
de
badge
,
mot
de
passe
,
nom
,
prénom
,
etc
.
Lorsqu
’
adhérent
régulariser
situation
,
date
limite
de
validité
être
augmenter
d
’
année
,
jour
pour
jour
,
pour
badge
en
cours|cour
de
validité
.
pour
autre
,
date
de
validité
être
date
d
’
inscription
augmenter
d
’
année
,
jour
pour
jour
.
en
joueur
,
autre
personne
recevoir
badge
de
catégorie
logistique
de
pouvoir
entrer
dans
club
.
s
’
agir
de
l
’
adjoindre
sport
de
commune
,
responsable
association
chef
de
travail
.
s
’
agir
personne
assurer
l
’
entretien
matériel
,
nettoyage
de
salle
.
nettoyage
avoir
lieu
mardi
matin
entre
9h
12h
.
durant
créneau
,
réservation
de
terrain
n
’
être
autoriser
pour
joueur
.
personne
être
considérer
adhérent
à
vie
.
cas
personnel
de
mairie
autoriser
être
joueur
,
avoir
deux
badge
:
badge
logistique
badge
joueur
.
badge
donner
droit
différent
à
propriétaire
,
selon
catégorie
:
•
logistique
pour
joueur
:
droit
d
’
entrer
dans
club
,
droit
de
réserver
.
•
jeune
pour
joueur
avoir
de
an
:
droit
d
’
entrée
(
devoir
être
accompagner
d
’
adhérent
âgé
pour
entrer
,
pour
problème
de
responsabilité
civil
)
.
•
ado
pour
joueur
l
’
âge
être
comprendre
entre
an
.
avoir
droit
d
’
entrer
dans
club
de
réserver
excepté
soir
de
semaine
après
17h
(
de
permettre
travailleur
de
réserver
soir
)
.
•
senior
pour
joueur
de
de
an
.
avoir
droit
d
’
entrer
de
réserver
à
moment
.
.
entrer
dans
salle
adhérent
devoir
saisir
,
sur
clavier
situer
de
porte
d
’
entrée
,
numéro
d
’
adhérent
mot
de
passe
pour
ouvrir
porte
.
faire
,
l
’
événement
être
enregistrer
par
l
’
ajout
d
’
ligne
dans
table
acces
.
table
constituer
historique
entrée
dans
club
.
permettre
,
en
cas
de
vol
de
dégradation
de
retrouver
trouver
dans
club
à
moment
.
adhérent
n
’
avoir
renouveler
cotisation
annuel
avoir
droit
de
rentrer
pendant
mois|moi
,
pouvoir
réserver
de
terrain
.
.
réservation
de
court
en
connecter
sur
base
de
donnée
,
adhérent
joueur
avoir
possibilité
:
•
de
valider
réservation
pour
prouver
qu
’
être
venir
jouer
à
moment
,
•
d
’
annuler
réservation
qu
’
avoir
faire
,
•
de
réserver
court
(
à
B
C
)
pour
certain
date
,
à
certain
heure
(
par
exemple
court
B
jeudi
prochain
à
17h
)
,
avec
partenaire
.
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
technoweb
/
projetteniraq
/
chapitre
.
projet
Teniraq
réservation
pouvoir
être
effectuer
pour
semaine
à
venir
,
jour
pour
jour
.
nouveau
ligne
être
ajouter
à
table
reservations
,
mémoriser
l
’
ensemble
réservation
(
numéro
court
,
date
,
heure
)
.
joueur
réserver
enregistrer
réservation
de
partenaire
de
jeu
.
annulation
pouvoir
être
faire
qu
’
heure
avant
de
jouer
,
pour
permettre
à
d
’
autre
joueur
de
prendre
place
libre
.
validation
n
’
être
possible
dans
créneau
[
réservation-15
mn
,
réservation+15
min
]
.
hors
de
créneau
,
considérer
joueur
n
’
avoir
honorer
réservation
,
n
’
avoir
occuper
créneau
au-
raire
pouvoir
être
occuper
avec
de
profit
par
autre
joueur
.
être
mettre
en
prison
pour
jour
,
c
’
qu
’
pouvoir
effectuer
de
réservation
pendant
période
.
date
d
’
entrée
en
prison
être
enregistrer
dans
table
badge
.
seul
réservation
(
à
venir
)
par
badge
joueur
.
badge
logistique
donner
droit
de
réserver
terrain
.
.
match
défaire
joueur
avoir
point
à
début
de
saison
(
début
octobre
)
.
dimanche
,
match
défaire
dérouler
sur
créneau
d
’
heure
.
à
fin
de
l
’
heure
,
compter
nombre
de
jeu
gagner
par
deux
joueur
.
en
cas
d
’
égalité
,
joueur
jeune
être
déclarer
vainqueur
.
joueur
recevoir
point
de
participation
.
vainqueur
recevoir
en
différence
entre
nombre
de
jeu
gagner
.
par
exemple
,
joueur
avoir
gagner
/
recevoir
+
(
)
=
point
défaire
.
.
Paramétrage
valeur
être
modifiable
:
délai
d
’
annulation
d
’
réservation
(
heure
)
,
délai
pour
valider
réservation
(
min
)
,
nombre
de
jour
de
prison
validation
(
jour
)
,
nombre
de
semaine
de
réser-
vation
(
semaine
)
.
valeur
être
enregistrer
dans
table
parametres
être
modifiable
par
possesseur
badge
niveau
d
’
autorisation
être
suffisant
.
.
base
de
donnée
L
’
analyse
être
présenter
.
contenter
de
donner
structure
de
base
.
chapitre
.
projet
Teniraq
.
MLD
.
table
table
ville
contenir
renseignement
sur
ville
:
CREATE
tabler
ville
(
codepostal
VARCHAR
(
)
PRIMARY
KEY
,
ville
VARCHAR
(
)
chapitre
.
projet
Teniraq
)
;
table
typevoiries
contenir
renseignement
sur
type
de
voirie
(
rue
,
boulevard
,
avenue
,
etc
.
)
:
CREATE
tabler
typevoirie
(
codetypevoirie
INTEGER
PRIMARY
KEY
,
typevoirie
VARCHAR
(
)
)
;
table
voirie
contenir
renseignement
sur
voirie
:
CREATE
tabler
voirie
(
codevoirie
INTEGER
PRIMARY
KEY
,
reftypevoirie
INTEGER
NOT
NULL
,
nomvoirie
VARCHAR
(
)
,
codepostal
VARCHAR
(
)
NOT
NULL
,
FOREIGN
KEY
(
reftypevoirie
)
REFERENCES
typevoirie
(
codetypevoirie
)
,
FOREIGN
KEY
(
codepostal
)
REFERENCES
ville
(
codepostal
)
)
;
table
niveauautorisation
contenir
renseignement
sur
niveau
d
’
autorisation
:
CREATE
tabler
niveauautorisation
(
codeniveauautorisation
INTEGER
PRIMARY
KEY
,
niveau
INTEGER
,
autorisation
VARCHAR
(
)
)
;
table
badge
contenir
renseignement
sur
personne
posséder
badge
(
joueur
logistique
)
:
CREATE
tabler
badge
(
numbadge
INTEGER
PRIMARY
KEY
,
motdepasse
VARCHAR
(
)
,
nom
VARCHAR
(
)
,
prenom
VARCHAR
(
)
,
refniveauautorisation
INTEGER
NOT
NULL
,
FOREIGN
KEY
(
refniveauautorisation
)
REFERENCES
niveauautorisation
(
codeniveauautorisation
)
)
;
table
joueur
contenir
renseignement
sur
joueur
:
CREATE
tabler
joueur
(
numbadge
INTEGER
PRIMARY
KEY
,
datenaiss
date
,
sexe
VARCHAR
(
)
,
licence
varchar
(
)
,
inscritjusque
date
,
adressenum
VARCHAR
(
)
,
refvoirie
INTEGER
NOT
NULL
,
telfixe
VARCHAR
(
)
,
telmobile
VARCHAR
(
)
,
classementofficiel
VARCHAR
(
)
,
pointsdefis
INTEGER
,
dernieredateprison
date
,
FOREIGN
KEY
(
refvoirie
)
REFERENCES
voirie
(
codevoirie
)
,
FOREIGN
KEY
(
numbadge
)
REFERENCES
badge
(
numbadge
)
)
;
table
acces
contenir
renseignement
sur
accès
salle
:
CREATE
tabler
acces
(
refbadge
INTEGER
,
instantacces
TIMESTAMP
,
primary
key
(
refbadge
,
instantacces
)
,
FOREIGN
KEY
(
refbadge
)
REFERENCES
badge
(
numbadge
)
)
;
table
reservations
contenir
renseignement
sur
réservation
de
court
:
CREATE
tabler
reservations
(
chapitre
.
projet
Teniraq
codereservations
INTEGER
PRIMARY
KEY
,
refreservant
INTEGER
NOT
NULL
,
refinvite
INTEGER
NOT
NULL
,
court
VARCHAR
(
)
,
datereservation
date
,
heurereservation
INTEGER
,
instantvalidation
TIME
,
FOREIGN
KEY
(
refreservant
)
REFERENCES
joueur
(
numbadge
)
,
FOREIGN
KEY
(
refinvite
)
REFERENCES
joueur
(
numbadge
)
)
;
table
match
contenir
renseignement
sur
match
:
CREATE
tabler
match
(
codematch
INTEGER
PRIMARY
KEY
,
refvainqueur
INTEGER
NOT
NULL
,
refperdant
INTEGER
NOT
NULL
,
datematch
date
,
heurematch
INTEGER
,
scorevainqueur
INTEGER
,
scoreperdant
INTEGER
,
FOREIGN
KEY
(
refvainqueur
)
REFERENCES
joueur
(
numbadge
)
,
FOREIGN
KEY
(
refperdant
)
REFERENCES
joueur
(
numbadge
)
)
;
table
categories
contenir
renseignement
sur
catégorie
de
joueur
:
CREATE
tabler
categories
(
codecategories
VARCHAR
(
)
PRIMARY
KEY
,
nomcategorie
VARCHAR
(
)
,
agemini
INTEGER
,
agemaxi
INTEGER
,
accesautorise
BOOLEAN
,
reservationautorisee
BOOLEAN
,
eclairageautorise
BOOLEAN
)
;
table
bornesreservations
contenir
renseignement
sur
heure
de
réservation
possible
pour
jour
:
CREATE
tabler
bornesreservations
(
refcategories
VARCHAR
(
)
NOT
NULL
,
joursemaine
VARCHAR
(
)
,
heuredebut
INTEGER
,
heurefin
INTEGER
,
PRIMARY
KEY
(
refcategories
,
joursemaine
)
,
FOREIGN
KEY
(
refcategories
)
REFERENCES
categories
(
codecategories
)
)
;
table
parametres
contenir
renseignement
sur
paramètre
de
l
’
application
:
CREATE
tabler
parametres
(
nomparametre
VARCHAR
(
)
PRIMARY
KEY
,
valeur
VARCHAR
(
)
)
;
chapitre
.
projet
Teniraq
chapitre
.
projet
camping
licence
MIASHS
3ème
année
,
.
pouvoir
consulter
page
originales1
sur
web
.
.
présentation
aller
devoir
gérer
camping-gîte
...
s
’
agir
d
’
établissement
offrir
à
client
service
suivant
:
•
emplacement
tente
de
taille
,
•
emplacement
caravane
camping-car
(
différent
précédent
par
présence
de
branchement
électrique
)
,
•
mobilhome
,
•
chambre
à
deux
lit
(
être
possible
d
’
ajouter
un
deux
lit
pliant
pour
enfant
)
,
•
lit
en
dortoir
.
tarif
dépendre
de
durée
de
location
:
à
nuit
,
à
semaine
,
mois|moi
à
l
’
année
,
nombre
de
personne
.
redevance
être
percevoir
sur
véhicule
.
.
information
à
conserver
information
sur
client
location
être
conserver
d
’
année
sur
l
’
autre
,
de
pouvoir
procéder
à
envoi
de
courrier
publicitaire
.
devoir
dans
cas
garder
information
sur
personne
,
sur
avoir
régler
facture
.
avoir
information
suivant
sur
emplacement
:
être
pour
tente
/
caravane
/
camping-
car
?
être
ombrager
?
être
herbeux
?
avoir
information
suivant
sur
mobilhome
:
équiper
d
’
réfrigérateur
?
équiper
d
’
four
?
etc
.
avoir
information
suivant
sur
chambre
dortoir
:
nombre
de
lit
,
présence
de
toilette
,
lavabo
,
douche
.
pour
prestation
(
chambre
,
dortoir
,
emplacement
pour
tente
caravane
,
etc
.
)
avoir
information
suivant
:
prix
à
nuit
,
à
semaine
,
mois|moi
à
l
’
année
,
localisation
géographique
(
référence
sur
plan
camping
)
.
devoir
conserver
information
suivant
sur
client
:
•
état
civil
complet
possible
(
rester
raisonnable
même
dans
respect
de
vie
priver
...
)
:
nom
,
prénom
,
adresse
,
téléphone
,
adresse
électronique
•
l
’
historique
de
présence
camping
:
date
,
avec
personne
,
sur
type
d
’
emplacement
(
tente
,
caravane
,
etc
.
)
.
.
traitement
C
’
être
beau
d
’
avoir
information
,
falloir
pouvoir
utiliser
...
devoir
pouvoir
:
•
entendre
établir
facture
pour
séjour
,
•
faire
réservation
,
•
ajouter
client
potentiel
dans
base
(
c
’
personne
être
client
,
qu
’
espérer
pouvoir
démarcher
)
,
•
faire
statistique
nécessaire
à
gestion
camping
:
recette
par
année
,
recette
par
mois|moi
,
fréquentation
par
année
,
fréquentation
par
mois|moi
,
par
type
d
’
hébergement
,
etc
.
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
technoweb
/
projetcamping
/
chapitre
.
projet
camping
•
etc
.
.
base
de
donnée
L
’
analyse
être
présenter
.
contenter
de
donner
structure
de
base
.
.
MLD
chapitre
.
projet
camping
.
table
table
ville
contenir
renseignement
sur
ville
:
CREATE
tabler
ville
(
codepostal
VARCHAR
PRIMARY
KEY
,
ville
VARCHAR
)
;
table
rue
contenir
information
sur
rue
,
référer
à
table
ville
:
CREATE
tabler
rue
(
coderue
INT
PRIMARY
KEY
,
nomrue
VARCHAR
,
codepostal
VARCHAR
,
CONSTRAINT
rue_codepostal_fk
FOREIGN
KEY
(
codepostal
)
REFERENCES
ville
(
codepostal
)
)
;
table
rassembler
information
sur
personne
,
client
:
CREATE
tabler
personne
(
codepersonne
INT
PRIMARY
KEY
,
nom
VARCHAR
NOT
NULL
,
prenom
VARCHAR
,
numerodanslarue
VARCHAR
,
refrue
INT
,
VARCHAR
,
fax
VARCHAR
,
email
VARCHAR
,
CONSTRAINT
personne_refrue_fk
FOREIGN
KEY
(
refrue
)
REFERENCES
rue
(
coderue
)
)
;
table
confort
lister
élément
de
confort
(
douche
,
four
,
etc
.
)
pouvoir
être
disponible
dans
différent
hébergement
;
c
’
être
table
lien_hebergement_confort
permettre
de
faire
lien
entre
hébergement
élément
de
confort
:
CREATE
tabler
confort
(
codeconfort
INT
PRIMARY
KEY
,
typeconfort
VARCHAR
NOT
NULL
)
;
table
typehebergement
rassembler
différent
type
d
’
hébergement
(
camping
,
dortoir
,
etc
.
)
:
CREATE
tabler
typehebergement
(
codetypehebergement
INT
PRIMARY
KEY
,
typehebergement
VARCHAR
NOT
NULL
)
;
table
typelocation
rassembler
différent
type
de
location
(
à
journée
,
à
semaine
,
etc
.
)
:
CREATE
tabler
typelocation
(
codetypelocation
INT
PRIMARY
KEY
,
typelocation
VARCHAR
NOT
NULL
)
;
table
tariflocation
rassembler
différent
tarif
de
location
en
fonction
de
durée
,
type
d
’
hébergement
,
etc
.
)
:
CREATE
tabler
tariflocation
(
reftypelocation
INT
,
reftypehebergement
INT
,
journee
NUMERIC
(
,
)
,
personne
NUMERIC
(
,
)
,
PRIMARY
KEY
(
reftypelocation
,
reftypehebergement
)
,
CONSTRAINT
tariflocation_reftypehebergement_fk
FOREIGN
KEY
(
reftypehebergement
)
chapitre
.
projet
camping
REFERENCES
typehebergement
(
codetypehebergement
)
,
CONSTRAINT
tariflocation_reftypelocation_fk
FOREIGN
KEY
(
reftypelocation
)
REFERENCES
typelocation
(
codetypelocation
)
)
;
table
tarifvehicule
définir
montant
redevance
en
fonction
véhicule
:
CREATE
tabler
tarifvehicule
(
codevehicule
INT
PRIMARY
KEY
,
vehicule
VARCHAR
,
tarif
NUMERIC
(
,
)
NOT
NULL
)
;
table
hebergement
contenir
liste
de
hébergement
disponible
:
CREATE
tabler
hebergement
(
codehebergement
INT
PRIMARY
KEY
,
positionsurleplan
VARCHAR
NOT
NULL
,
reftypehebergement
INT
NOT
NULL
,
nbreplace
INT
NOT
NULL
,
CONSTRAINT
hebergement_reftypehebergement_fk
FOREIGN
KEY
(
reftypehebergement
)
REFERENCES
typehebergement
(
codetypehebergement
)
)
;
table
lien_hebergement_confort
faire
lien
entre
hébergement
élément
de
confort
disponible
:
CREATE
tabler
lien_hebergement_confort
(
refhebergement
INT
,
refconfort
INT
,
PRIMARY
KEY
(
refhebergement
,
refconfort
)
,
CONSTRAINT
lienhebconfort_refhebergement_fk
FOREIGN
KEY
(
refhebergement
)
REFERENCES
hebergement
(
codehebergement
)
,
CONSTRAINT
lienhebconfort_confort_fk
FOREIGN
KEY
(
refconfort
)
REFERENCES
confort
(
codeconfort
)
)
;
table
sejour
rassembler
renseignement
sur
séjour
effectuer
réserver
par
client
:
CREATE
tabler
sejour
(
codesejour
INT
PRIMARY
KEY
,
debut
date
,
fin
date
,
refhebergement
INT
,
refvehicule
INT
,
CONSTRAINT
sejour_refvehicule_fk
FOREIGN
KEY
(
refvehicule
)
REFERENCES
tarifvehicule
(
codevehicule
)
,
CONSTRAINT
sejour_refhebergement_fk
FOREIGN
KEY
(
refhebergement
)
REFERENCES
hebergement
(
codehebergement
)
)
;
table
lien_sejour_personne
faire
lien
entre
séjour
(
effectuer
réserver
)
personne
(
client
)
:
CREATE
tabler
lien_sejour_personne
(
refsejour
INT
,
refpersonne
INT
,
PRIMARY
KEY
(
refsejour
,
refpersonne
)
,
CONSTRAINT
liensejourpersonne_refsejour_fk
FOREIGN
KEY
(
refsejour
)
REFERENCES
sejour
(
codesejour
)
,
CONSTRAINT
liensejourpersonne_refpersonne_fk
FOREIGN
KEY
(
refpersonne
)
REFERENCES
personne
(
codepersonne
)
)
;
chapitre
.
projet
association
licence
MIASHS
3ème
année
,
.
pouvoir
consulter
page
originales1
sur
web
.
aller
devoir
construire
site
web
permettre
membre
d
’
association
de
gérer
consulter
diiférents
renseignement
sur
adhésion
.
.
contenir
site
web
site
devoir
permettre
d
’
effectuer
opération
nécessaire
bon
fonctionnement
de
base
,
c
’
est-à-
dire
:
•
devoir
avoir
(
)
trois
niveau
d
’
utilisateur
(
identifier
par
login
mot
de
passe
)
:
niveau
simple
utilisateur
seul
consultation
être
autoriser
(
consultation
pouvoir
être
restreindre
à
donnée
)
;
c
’
être
niveau
par
exemple
accessible
simple
adhérent
de
l
’
association
;
niveau
administrateur
avoir
accès
à
fonction
important
(
par
exemple
de
modification
donnée
d
’
ajout
dans
base
)
,
fonction
vital
;
être
par
exemple
niveau
réserver
trésorier
président
de
l
’
association
;
niveau
gourou
avoir
accès
à
tout
;
c
’
être
niveau
réserver
responsable
de
base
de
donnée
;
c
’
être
par
exemple
à
niveau
de
sécurité
qu
’
pouvoir
supprimer
enregistrement
dans
base
.
•
site
web
permettre
action
dans
base
:
•
consultation
,
•
modification
,
•
ajout
,
•
suppression
.
.
condition
de
travail
pouvoir
travailler
par
groupe
de
deux
(
c
’
être
conseiller
)
,
.
C
’
être
travail
libre
,
dans
condition
réel
(
)
.
juger
pendant
semestre
,
être|suivre
pour
répondre
question
.
.
base
de
donnée
base
de
donnée
contenir
renseignement
être
vue
premier
semestre
:
base
Association2
.
rappel
sur
but
contenu
:
rappel
:
association
vouloir
gérer
adhérent
par
l
’
intermédiaire
d
’
base
de
donnée
.
principal
information
sur
sujet
:
.
devoir
garder
information
sur
adhérent
,
même
sur
ancien
.
.
devoir
connaître
,
pour
personne
de
base
:
avoir
.
nom
;
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
technoweb
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
bd
/
association
chapitre
.
projet
association
b
.
prénom
;
c
.
adresse
;
d
.
s
’
être
membre
C.A.
.
;
e
.
s
’
être
jeune
(
pour
tarif
réduit
)
;
f
.
s
’
être
adhérent
à
titre
gratuit
;
g
.
s
’
être
adhérent
,
être
montant
de
cotisation
,
nombre
de
personne
concerner
par
adhésion
,
pour
année
.
.
devoir
connaître
référent
de
personne
.
s
’
agir
de
l
’
adhérent
être
charger
de
faire
par-venir
différent
courrier
envoyer
par
l
’
association
(
comptes-rendus
,
relance
,
convocation
,
etc
.
)
.
être
possible
courrier
être
transmettre
par
poste
.
.
MLD
projet
association
figurer
.
MCD
projet
association
.
création
table
de
base
association
.
création
table
fichier
être
téléchargeable
sur
web3
.
create
table
personne
(
clef
int
primary
key
,
nom
varchar
,
prenom
varchar
,
numero
varchar
,
refrue
integer
,
ca
boolean
,
jeune
boolean
,
gratuit
boolean
,
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
bd
/
association
/
creation
/
dns-remplacer
chapitre
.
projet
association
inviter
boolean
,
referent
int
)
;
create
table
rue
(
clef
int
primary
key
,
nomrue
varchar
,
codepostal
varchar
)
;
create
table
ville
(
codepostal
varchar
primary
key
,
ville
varchar
)
;
create
table
REFERENT
(
clef
int
primary
key
,
nom
varchar
,
personne
int
)
;
create
table
ADHESION
(
annee
varchar
,
personne
int
,
nbmembre
int
,
monter
numeric
(
,
)
,
euro
boolean
default
’
T
’
,
primary
key
(
annee
,
personne
)
)
;
.
contraindre
fichier
être
téléchargeable
sur
web4
.
ALTER
tabler
ADD
CONSTRAINT
persons_referent_fk
FOREIGN
KEY
(
referent
)
REFERENCES
referent
(
clef
)
;
ALTER
tabler
ADD
CONSTRAINT
persons_rue_fk
FOREIGN
KEY
(
refrue
)
REFERENCES
rue
(
clef
)
;
ALTER
tabler
rue
ADD
CONSTRAINT
rue_ville_fk
FOREIGN
KEY
(
codepostal
)
REFERENCES
ville
(
codepostal
)
;
ALTER
table
referent
ADD
CONSTRAINT
referent_personne_fk
FOREIGN
KEY
(
personne
)
REFERENCES
personne
(
clef
)
;
ALTER
tabler
adhesion
ADD
CONSTRAINT
adhesions_person_fk
FOREIGN
KEY
(
personne
)
REFERENCES
personne
(
clef
)
;
.
évaluation
critère
sur
être
noter
:
•
falloir
marche
,
c
’
être
moindre
chose
...
•
facilité
d
’
utilisattion
site
:
falloir
navigation
être
simple
,
intuitif
efficace
;
falloir
formulaire
être
clair
.
•
confirmité
avec
norme
W3C
.
(
L
’
utilisation
de
feuille
de
style
n
’
être
obligatoire
,
croire
faciliter
travail
.
)
restriction
avoir
n
’
être
faire
sur
HTML
:
suffire
passer
contrôle
W3C
.
être
fanatique
de
javascript
,
,
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
bd
/
association
/
creation
/
dns-remplacer
chapitre
.
projet
association
rien
de
vital
devoir
être
confier
à
javascript
,
devoir
pouvoir
fonctionner
sur
navigateur
sans
javascript
.
•
lisibilité
de
code
source
.
code
illisible
,
présenter
,
commenter
être
préjudicia-ble
.
par
contre
découpage
en
petit
fonction
,
facile
à
comprendre
,
découpage
code
en
bibliothèque
thématique
,
avantager
.
.
dernier
conseil
aphorisme
:
premier
%
d
’
projet
prendre
%
temps
.
%
restant
prendre
%
temps
.
conclusion
:
travailler
possible
,
pendre
n
’
avoir
de
partiel
à
réviser
.
chapitre
.
projet
généalogie
IUP
IIES
2ème
année
maîtrise
AES-TEG
,
.
pouvoir
consulter
page
originales1
sur
web
.
.
généralité
aller
devoir
réaliser
site
de
généalogie
.
réalisation
devoir
être
fonctionnel
:
devoir
,
entre
autre
,
être
capable
d
’
échanger
donnée
avec
d
’
autre
logiciel
de
génalogie
existant
(
logiciel
commercial
logiciel
libre
)
.
.
donnée
à
conserver
trouver
dans
partie
description
information
manipuler
généalogiste
.
.
donnée
de
base
s
’
occuper
personne
,
de
naissance
de
décès
,
de
ascendance
de
descendance
.
devoir
pouvoir
en
partir
de
n
’
importer
produire
liste
ascendant
,
de
descendant
.
devoir
pouvoir
connaître
conjoint
de
personne
;
dans
cas
personne
avoir
avoir
conjoint
,
devoir
pouvoir
connaître
l
’
ordre
dans
couple
avoir
exister
.
devoir
pouvoir
possible
avoir
date
de
début
de
fin
éventuel
union
.
falloir
noter
modèle
européen
n
’
être
seul
exister
monde
:
être
possible
personne
avoir
conjoint
en
même
temps
.
de
enfant
pouvoir
provenir
de
liaison
officialiser
qu
’
falloir
pouvoir
représenter
.
devoir
entendre
conserver
date
lieu
de
naissance
décès
individu
.
entendre
,
partie
de
information
être
fois
difficile
à
obtenir
,
site
devoir
pouvoir
fonctionner
en
l
’
absence
de
.
.
donnée
supplémentaire
avec
l
’
introduction
de
l
’
outil
informatique
pouvoir
ajouter
d
’
autre
type
d
’
information
,
par
exemple
:
•
multimédia
:
photo
,
vidéo
,
enregistrement
audio
,
etc
.
;
•
copier
de
document
officiel
:
acte
de
naissance
,
de
mariage
,
de
décès
,
etc
.
information
pouvoir
être
associer
à
un
personne
(
à
un
événement
,
à
un
famille
)
.
être
bon
document
être
dater
qu
’
conserver
nom
de
propriétaire
.
.
traitement
donnée
donnée
rassembler
n
’
avoir
de
sens|sen
pouvoir
utiliser
...
fonctionnalité
minimal
devoir
avoir
site
web
:
•
ajouter
,
supprimer
,
modifier
individu
;
•
ajouter
,
supprimer
,
modifier
union
(
mariage
autre
)
;
•
lier
individu
à
parents
(
couple
à
enfant
)
;
•
associer
fichier
multimédia
à
individu
,
famille
,
événement
;
•
connaître
individu
,
devoir
pouvoir
obtenir
ascendance
descendance
proche
;
être
parfait
d
’
avoir
ascendance
descendance
;
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
commun
/
genealogie
/
chapitre
.
projet
généalogie
•
pour
individu
devoir
pouvoir
avoir
album
de
photo
être
associéees
(
être
parfait
d
’
avoir
même
chose
pour
type
de
document
)
.
.
optimisation
éviter
de
dupliquer
information
multimédia
,
même
être
lier
à
personne
.
pouvoir
avoir
choix
d
’
effacer
information
multimédia
être
associer
à
rien
.
façon
être
représenter
relation
de
descendance
d
’
ascendance
à
l
’
écran
être
laisser
à
libre
choix
,
falloir
noter
classique
être
arborescent
.
C
’
être
coller
de
structure
réel
.
.
import-export
site
devoir
être
capable
d
’
exporter
donnée
format
GEDCOM
.
Qu
’
être
qu
’
fichier
GEDCOM
?
en
taper
mot
dans
n
’
importer
moteur
de
recherche
obtien-
drez
dizaine
(
centaine
)
de
page
expliquer
c
’
être
.
en
résumé
:
définir
par
mormon
(
sous
nom
complet
:
église
de
Jésus-Christ
saint
dernier
jour
)
,
standard
GEDCOM
avoir
être
créer
pour
permettre
l
’
échange
de
donnée
entre
différent
logiciel
de
généalogie
existant
.
plupart
logiciel
de
généalogie
permettre
d
’
exporter
fruit
de
travail
dans
format
.
page
sur
Internet
:
•
version
original
(
en
anglais
)
•
explication
en
français3
•
autre
explication
en
français4
pouvoir
en
trouver
d
’
autre
.
attention
comprendre
norme
par
même
faire
partie
travail
être
demander
.
partie
de
note
porter
sur
capacité
de
site
à
exporter
donnée
vers
fichier
GEDCOM
.
correction
être
facile
:
faire
lire
fichier
produire
par
logiciel
de
généalogie
,
regarder
avoir
être
exporter
.
L
’
importation
de
donnée
depuis
fichier
GEDCOM
être
demander
(
en
principe
c
’
être
facile
)
,
vouloir
faire
,
être
entendre
tenir
compte
.
http
:
/
/
dns-remplacer
/
gedcom55
/
dns-remplacer
http
:
/
/
dns-remplacer
/
informatique
/
dns-remplacer
@ord@
http
:
/
/
dns-remplacer
/
dns-remplacer
chapitre
.
projet
généalogie
.
MCD
projet
généalogie
figurer
.
MCD
projet
généalogie
.
différent
table
.
table
entité
ip-remplacée
>
.
table
individu
CREATE
tabler
individu
(
numindividu
INTEGER
NOT
NULL
PRIMARY
KEY
,
nom
VARCHAR
,
prenom
VARCHAR
,
sexe
char
(
)
,
parents
INTEGER
,
jour_nais
INTEGER
,
mois_nais
INTEGER
,
annee_nais
INTEGER
,
chapitre
.
projet
généalogie
lieu_nais
INTEGER
,
jour_deces
INTEGER
,
mois_deces
INTEGER
,
annee_deces
INTEGER
,
lieu_deces
INTEGER
,
CONSTRAINT
individu_sexe_ck
CHECK
(
sexe
in
(
’
F
’
,
’
M
’
,
’
f
’
,
’
m
’
)
)
)
;
ip-remplacée
>
.
table
ville
CREATE
tabler
ville
(
codepostal
VARCHAR
NOT
NULL
PRIMARY
KEY
,
ville
VARCHAR
NOT
NULL
)
;
ip-remplacée
>
.
table
lieu
CREATE
tabler
lieu
(
numlieu
INTEGER
NOT
NULL
PRIMARY
KEY
,
nom
VARCHAR
,
numero
VARCHAR
,
rue
VARCHAR
,
codepostal
VARCHAR
)
;
ip-remplacée
>
.
table
couple
CREATE
tabler
couple
(
numcouple
INTEGER
NOT
NULL
PRIMARY
KEY
,
INTEGER
NOT
NULL
,
INTEGER
NOT
NULL
,
jour_debut
INTEGER
,
mois_debut
INTEGER
,
annee_debut
INTEGER
,
lieu_debut
INTEGER
,
jour_fin
INTEGER
,
mois_fin
INTEGER
,
annee_fin
INTEGER
,
lieu_fin
INTEGER
,
type_couple
INTEGER
)
;
ip-remplacée
>
.
table
type
de
couple
CREATE
tabler
type_couple
(
numtypecouple
INTEGER
NOT
NULL
PRIMARY
KEY
,
description
VARCHAR
)
;
ip-remplacée
>
.
table
type
de
document
CREATE
tabler
type_document
(
numtype
INTEGER
NOT
NULL
PRIMARY
KEY
,
descr_courte
VARCHAR
NOT
NULL
,
descr_longue
VARCHAR
)
;
chapitre
.
projet
généalogie
ip-remplacée
>
.
table
document
CREATE
tabler
document
(
numdocument
INTEGER
NOT
NULL
PRIMARY
KEY
,
titre
VARCHAR
,
fichier
VARCHAR
NOT
NULL
,
type
INTEGER
NOT
NULL
,
taille
INTEGER
,
date_creation
date
,
date_inclusion
date
)
;
.
table
relation
ip-remplacée
>
.
table
lier
document
couple
CREATE
tabler
doc_couple
(
couple
INTEGER
NOT
NULL
,
document
INTEGER
NOT
NULL
,
descr_courte
VARCHAR
,
descr_longue
VARCHAR
,
CONSTRAINT
docCouple_pk
PRIMARY
KEY
(
couple
,
document
)
)
;
ip-remplacée
>
.
table
lier
document
lieu
CREATE
tabler
doc_lieu
(
lieu
INTEGER
NOT
NULL
,
document
INTEGER
NOT
NULL
,
descr_courte
VARCHAR
,
descr_longue
VARCHAR
,
CONSTRAINT
docLieu_pk
PRIMARY
KEY
(
lieu
,
document
)
)
;
ip-remplacée
>
.
table
lier
document
individu
CREATE
tabler
doc_individu
(
individu
INTEGER
NOT
NULL
,
document
INTEGER
NOT
NULL
,
descr_courte
VARCHAR
,
descr_longue
VARCHAR
,
CONSTRAINT
docIndividu_pk
PRIMARY
KEY
(
individu
,
document
)
)
;
.
différent
contrainte
.
sur
table
individu
ALTER
tabler
individu
ADD
CONSTRAINT
individu_lieuNais_fk
FOREIGN
KEY
(
lieu_nais
)
REFERENCES
lieu
(
numlieu
)
;
ALTER
tabler
individu
ADD
CONSTRAINT
individu_lieuDeces_fk
chapitre
.
projet
généalogie
FOREIGN
KEY
(
lieu_deces
)
REFERENCES
lieu
(
numlieu
)
;
ALTER
tabler
individu
ADD
CONSTRAINT
individu_parents_fk
FOREIGN
KEY
(
parents
)
REFERENCES
couple
(
numcouple
)
;
.
sur
table
ville
de
contrainte
...
.
sur
table
lieu
ALTER
tabler
lieu
ADD
CONSTRAINT
lieu_codepostal_fk
FOREIGN
KEY
(
codepostal
)
REFERENCES
ville
(
codepostal
)
;
.
sur
table
coupler
ALTER
table
couple
ADD
CONSTRAINT
couple_lui_fk
FOREIGN
KEY
(
)
REFERENCES
individu
(
numindividu
)
;
ALTER
tabler
couple
ADD
CONSTRAINT
couple_elle_fk
FOREIGN
KEY
(
)
REFERENCES
individu
(
numindividu
)
;
ALTER
tabler
couple
ADD
CONSTRAINT
individu_lieuDebut_fk
FOREIGN
KEY
(
lieu_debut
)
REFERENCES
lieu
(
numlieu
)
;
ALTER
tabler
couple
ADD
CONSTRAINT
individu_lieuFin_fk
FOREIGN
KEY
(
lieu_fin
)
REFERENCES
lieu
(
numlieu
)
;
.
sur
table
type_coupler
de
contrainte
...
.
sur
table
type_document
de
contrainte
...
.
sur
table
document
ALTER
tabler
document
ADD
CONSTRAINT
document_type_fk
FOREIGN
KEY
(
type
)
REFERENCES
type_document
(
numtype
)
;
.
sur
table
doc_coupler
ALTER
table
doc_couple
ADD
CONSTRAINT
docCouple_couple_fk
FOREIGN
KEY
(
couple
)
REFERENCES
couple
(
numcouple
)
;
ALTER
tabler
doc_couple
ADD
CONSTRAINT
docCouple_document_fk
FOREIGN
KEY
(
document
)
REFERENCES
document
(
numdocument
)
;
chapitre
.
projet
généalogie
.
sur
table
doc_lieu
ALTER
tabler
doc_lieu
ADD
CONSTRAINT
docLieu_lieu_fk
FOREIGN
KEY
(
lieu
)
REFERENCES
lieu
(
numlieu
)
;
ALTER
tabler
doc_lieu
ADD
CONSTRAINT
docLieu_document_fk
FOREIGN
KEY
(
document
)
REFERENCES
document
(
numdocument
)
;
chapitre
.
projet
généalogie
chapitre
.
projet
Brazil
IUP
IIES
2ème
année
maîtrise
AES-TEG
,
.
pouvoir
consulter
page
originales1
sur
web
.
.
description
monde
de
Brazil
être
organiser
de
façon
à
rendre
citoyen
heureux
possible
.
pour
veiller
à
,
renseignement
utile
être
stocker
dans
base
de
donnée
central
centre
de
régulation
bonheur
.
être
charger
de
gestion
de
base
de
donnée
.
citoyen
être
représenter
par
numéro
d
’
enregistrement
universel
,
nom
,
prénom
,
sexe
,
date
de
naissance
,
taille
,
l
’
historique
de
maladie
.
mémoriser
différent
adresse
date
d
’
emménagement
correspondant
.
citoyen
travailler
dans
service
,
contribuer
bonheur
de
.
service
être
re-
grouper
,
pour
grand
efficacité
,
en
différent
ministère
bonheur
.
groupe
de
service
former
ministère
,
l
’
travailler
grâce
échantillon
de
bonheur
produire
par
d
’
autre
ser-
vice
de
divers
ministère
,
sous
contrôle
administratif
d
’
troisième
ensemble
de
service
de
divers
ministère
.
rôle
être
modifier
par
centre
de
régulation
bonheur
,
selon
savant
parfait
calcul
de
maîtrise
de
l
’
aléatoire
.
,
dans
organisation
parfaire
,
défaut
être
dûs
composant
,
i.e.
.
citoyen
.
,
distinguer
trois
type
de
citoyen
:
.
D
’
part
,
avoir
contribuer
à
survie
système
,
par
production
de
futur
citoyen
,
mérite
être
proportionnel
nombre
de
enfant
.
bonheur
produire
être
dis-
tiller
enfant
citoyen
.
tenir
à
conserver
l
’
historique
ancêtre
de
.
.
citoyen
(
adulte
)
n
’
avoir
d
’
enfant
,
faire
partir
de
second
catégorie
:
suspect
.
confirmer
par
fait
qu
’
citoyen
n
’
avoir
d
’
enfant
n
’
être
en
mesure
de
répondre
formulaire
E707
.
suspicion
peser
sur
citoyen
être
proportionnel
nombre
de
formulaire
E707
qu
’
n
’
avoir
pouvoir
remplir
.
.
citoyen
parents
être
inconnu
être
suspect
.
seul
exception
,
confirmer
règle
de
perfection
système
de
Brazil
,
être
fait
seul
citoyen
n
’
avoir
d
’
enfant
dispos
d
’
de
temps
pour
être
dirigeant
d
’
ministère
.
citoyen
décéder
,
pouvoir
contribuer
bonheur
de
société
,
voir
supprimer
de
base
de
donnée
,
référence
à
existence
(
pour
fonction
descendance
,
rendre
entendre
suspect
éventuel
enfant
)
.
.
table
entité
.
table
citoyen
CREATE
tabler
citoyen
(
numuniv
NUMERIC
(
)
NOT
NULL
,
nom
VARCHAR
(
)
,
prenom
VARCHAR
(
)
,
sexe
char
,
naissance
date
,
taille
NUMERIC
(
)
,
pere
NUMERIC
(
)
,
mere
NUMERIC
(
)
)
;
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
commun
/
brazil
/
chapitre
.
projet
Brazil
.
table
ville
CREATE
tabler
ville
(
codepostal
VARCHAR
(
)
NOT
NULL
,
ville
VARCHAR
(
)
)
;
.
table
rue
CREATE
tabler
rue
(
numrue
NUMERIC
(
)
NOT
NULL
,
rue
VARCHAR
(
)
,
codepostal
VARCHAR
(
)
)
;
.
table
maladie
CREATE
tabler
maladie
(
nummaladie
NUMERIC
(
)
NOT
NULL
,
nommaladie
VARCHAR
(
)
,
graviter
numeric
(
)
NOT
NULL
)
;
.
table
service
CREATE
tabler
service
(
numservice
NUMERIC
(
)
NOT
NULL
,
nomservice
VARCHAR
(
)
)
;
.
table
ministere
CREATE
tabler
ministere
(
numministere
NUMERIC
(
)
NOT
NULL
,
nomministere
VARCHAR
(
)
)
;
.
table
relation
.
associer
maladie
à
citoyen
:
listemaladie
CREATE
tabler
listemaladie
(
citoyen
NUMERIC
(
)
NOT
NULL
,
maladie
NUMERIC
(
)
NOT
NULL
,
debut
date
NOT
NULL
,
fin
date
)
;
.
associer
adresse
à
citoyen
:
habiter
CREATE
table
habiter
(
citoyen
NUMERIC
(
)
NOT
NULL
,
numero
NUMERIC
(
)
NOT
NULL
,
rue
NUMERIC
(
)
NOT
NULL
,
debut
date
NOT
NULL
)
;
chapitre
.
projet
Brazil
.
associer
citoyen
service
pour
travailler
:
travaillepour
CREATE
tabler
travaillepour
(
citoyen
NUMERIC
(
)
NOT
NULL
,
service
NUMERIC
(
)
NOT
NULL
,
debut
date
NOT
NULL
,
fin
date
)
;
.
associer
service
ministère
pour
produire
:
serviceproduit
CREATE
tabler
serviceproduire
(
service
NUMERIC
(
)
NOT
NULL
,
ministere
NUMERIC
(
)
NOT
NULL
,
debut
date
NOT
NULL
,
fin
date
)
;
.
associer
service
ministère
appartenir
;
:
serviceappartient
CREATE
table
serviceappartient
(
service
NUMERIC
(
)
NOT
NULL
,
ministere
NUMERIC
(
)
NOT
NULL
,
debut
date
NOT
NULL
,
fin
date
)
;
.
associer
service
ministère
qu
’
contrôler
:
servicecontrole
CREATE
tabler
servicecontrole
(
service
NUMERIC
(
)
NOT
NULL
,
ministere
NUMERIC
(
)
NOT
NULL
,
debut
date
NOT
NULL
,
fin
date
)
;
.
associer
citoyen
ministère
qu
’
diriger
:
tabledirige
CREATE
table
diriger
(
citoyen
NUMERIC
(
)
NOT
NULL
,
ministere
NUMERIC
(
)
NOT
NULL
,
debut
date
NOT
NULL
,
fin
date
)
;
.
contrainte
.
sur
table
ville
ALTER
tabler
ville
ADD
CONSTRAINT
ville_codepostal_pk
PRIMARY
KEY
(
codepostal
)
;
.
sur
table
ruer
ALTER
table
rue
ADD
CONSTRAINT
adresse_numrue_pk
PRIMARY
KEY
(
numrue
)
;
ALTER
tabler
rue
ADD
CONSTRAINT
adresse_codepostal_fk
FOREIGN
KEY
(
codepostal
)
REFERENCES
ville
(
codepostal
)
;
chapitre
.
projet
Brazil
.
sur
table
citoyen
ALTER
tabler
citoyen
ADD
CONSTRAINT
citoyen_numuniv_pk
PRIMARY
KEY
(
numuniv
)
;
ALTER
tabler
citoyen
ADD
CONSTRAINT
citoyen_sexe_ck
CHECK
(
sexe
in
(
’
M
’
,
’
F
’
)
)
;
ALTER
tabler
citoyen
ADD
CONSTRAINT
citoyen_pere_fk
FOREIGN
KEY
(
pere
)
REFERENCES
citoyen
(
numuniv
)
;
ALTER
tabler
citoyen
ADD
CONSTRAINT
citoyen_mere_fk
FOREIGN
KEY
(
mere
)
REFERENCES
citoyen
(
numuniv
)
;
.
sur
table
habiter
ALTER
table
habiter
ADD
CONSTRAINT
habite_citoyen_fk
FOREIGN
KEY
(
citoyen
)
REFERENCES
citoyen
(
numuniv
)
;
ALTER
table
habiter
ADD
CONSTRAINT
habite_rue_fk
FOREIGN
KEY
(
rue
)
REFERENCES
rue
(
numrue
)
;
ALTER
table
habiter
ADD
CONSTRAINT
habite_serv_pk
PRIMARY
KEY
(
citoyen
,
numero
,
rue
)
;
.
sur
table
maladie
ALTER
tabler
maladie
ADD
CONSTRAINT
maladie_nummaladie_pk
PRIMARY
KEY
(
nummaladie
)
;
ALTER
tabler
maladie
ADD
CONSTRAINT
maladie_gravite_ck
CHECK
(
graviter
in
(
,
,
,
,
,
,
,
,
,
,
)
)
;
.
sur
table
listemaladie
ALTER
tabler
listemaladie
ADD
CONSTRAINT
listemaladie_cit_moy_deb_pk
PRIMARY
KEY
(
citoyen
,
maladie
,
debut
)
;
ALTER
tabler
listemaladie
ADD
CONSTRAINT
listemaladie_citoyen_fk
FOREIGN
KEY
(
citoyen
)
REFERENCES
citoyen
(
numuniv
)
;
ALTER
tabler
listemaladie
ADD
CONSTRAINT
listemaladie_maladie_fk
FOREIGN
KEY
(
maladie
)
REFERENCES
maladie
(
nummaladie
)
;
.
sur
table
service
ALTER
tabler
service
ADD
CONSTRAINT
service_numservice_pk
PRIMARY
KEY
(
numservice
)
;
.
sur
table
ministere
ALTER
tabler
ministere
ADD
CONSTRAINT
ministere_numministere_pk
PRIMARY
KEY
(
numministere
)
;
chapitre
.
projet
Brazil
.
sur
table
travaillepour
ALTER
tabler
travaillepour
ADD
CONSTRAINT
travaillepour_cit_serv_pk
PRIMARY
KEY
(
citoyen
,
service
,
debut
)
;
ALTER
tabler
travaillepour
ADD
CONSTRAINT
travaillepour_citoyen_fk
FOREIGN
KEY
(
citoyen
)
REFERENCES
citoyen
(
numuniv
)
;
ALTER
tabler
travaillepour
ADD
CONSTRAINT
travaillepour_service_fk
FOREIGN
KEY
(
service
)
REFERENCES
service
(
numservice
)
;
.
sur
table
serviceproduire
ALTER
table
serviceproduire
ADD
CONSTRAINT
serviceproduit_serv_mini_pk
PRIMARY
KEY
(
service
,
ministere
,
debut
)
;
ALTER
tabler
serviceproduire
ADD
CONSTRAINT
serviceproduit_service_fk
FOREIGN
KEY
(
service
)
REFERENCES
service
(
numservice
)
;
ALTER
tabler
serviceproduire
ADD
CONSTRAINT
serviceproduit_ministere_fk
FOREIGN
KEY
(
ministere
)
REFERENCES
ministere
(
numministere
)
;
.
sur
table
serviceappartient
ALTER
table
serviceappartient
ADD
CONSTRAINT
serviceappartient_serv_mini_pk
PRIMARY
KEY
(
service
,
ministere
,
debut
)
;
ALTER
table
serviceappartient
ADD
CONSTRAINT
serviceappartient_service_fk
FOREIGN
KEY
(
service
)
REFERENCES
service
(
numservice
)
;
ALTER
table
serviceappartient
ADD
CONSTRAINT
serviceappartient_ministere_fk
FOREIGN
KEY
(
ministere
)
REFERENCES
ministere
(
numministere
)
;
.
sur
table
servicecontrole
ALTER
table
servicecontrole
ADD
CONSTRAINT
servicecontrole_serv_mini_pk
PRIMARY
KEY
(
service
,
ministere
,
debut
)
;
ALTER
tabler
servicecontrole
ADD
CONSTRAINT
servicecontrole_service_fk
FOREIGN
KEY
(
service
)
REFERENCES
service
(
numservice
)
;
ALTER
tabler
servicecontrole
ADD
CONSTRAINT
servicecontrole_ministere_fk
FOREIGN
KEY
(
ministere
)
REFERENCES
ministere
(
numministere
)
;
.
sur
table
diriger
ALTER
table
diriger
ADD
CONSTRAINT
dirige_cit_serv_pk
PRIMARY
KEY
(
citoyen
,
ministere
,
debut
)
;
ALTER
table
diriger
ADD
CONSTRAINT
dirige_citoyen_fk
FOREIGN
KEY
(
citoyen
)
REFERENCES
citoyen
(
numuniv
)
;
ALTER
table
diriger
ADD
CONSTRAINT
dirige_ministere_fk
FOREIGN
KEY
(
ministere
)
REFERENCES
ministere
(
numministere
)
;
chapitre
.
projet
Brazil
chapitre
.
projet
service
IUP
IIES
2ème
année
maîtrise
AES-TEG
,
.
pouvoir
consulter
page
originales1
sur
web
.
aller
devoir
réaliser
site
web
dynamique
permettre
de
gérer
service
enseignant
de
l
’
UFR
.
document
aller
permettre
de
définir
caractéristique
de
site
.
.
but
de
projet
but
site
aller
réaliser
être
de
permettre
(
à
)
responsable
administratif
(
ve
)
d
’
UFR
de
gérer
service
enseignant
.
devoir
être
possible
de
enregistrer
,
modifier
,
d
’
en
tirer
récapitulatif
,
synthèse
,
etc
.
projet
devoir
tenter
de
gérer
emploi
temps
,
répartition
cours|cour
par
semaine
.
heure
d
’
enseignement
être
compter
de
même
manière
(
être
payer
même
prix
,
suivre
être
TD
,
CMTD
CM
)
.
affectation
enseignant
à
cours|cour
être
définir
niveau
groupe
(
s
’
avoir
groupe
dans
formation
,
devoir
pouvoir
affecter
à
enseignant
)
.
n
’
être
nécessaire
de
gérer
l
’
affectation
individuel
groupe
(
besoin
de
savoir
enseignant
être
en
charge
groupe
n◦1
,
autre
groupe
n◦2
,
etc
.
suffire
de
savoir
enseignant
avoir
groupe
,
autre
avoir
,
etc
.
)
.
enseignant
devoir
même
service
:
statut
donner
base
,
pouvoir
être
modi-
fier
:
temps
partiel
,
décharge
,
contrat
particulier
,
etc
.
.
fonctionnement
.
utilisateur
n
’
avoir
même
droit
suivre
identité
page
aller
construire
être
en
libre
accès
:
suivre
droit
avoir
être
conférer
,
utilisateur
pouvoir
avoir
accès
qu
’
à
information
traitement
.
falloir
gérer
système
de
mot
de
passe
pour
contrôler
l
’
accès
site
.
.
L
’
utilisateur
de
base
n
’
avoir
droit
de
consulter
contenu
de
base
(
par
requête
prédéfinir
)
.
.
(
)
responsable
administratif
(
ve
)
avoir
droit
de
modifier
contenu
table
(
donnée
sensible
pouvoir
être
interdire
:
(
)
n
’
être
qu
’
utilisateur
privilégier
,
avec
droit
important
l
’
utilisateur
de
base
,
limiter
même
)
.
modification
être
autoriser
devoir
passer
,
pour
l
’
utilisateur
de
base
,
par
requête
prédéfini
.
.
L
’
administrateur
de
base
avoir
droit
de
définir
niveau
de
droit
utilisateur
,
modifier
structure
de
base
(
avoir
droit
)
.
.
fonctionnalité
requérir
pour
consultation
consultation
accessible
à
utilisateur
identifier
.
.
liste
enseignement
(
enseignant
)
d
’
formation
.
.
liste
enseignement
(
enseignant
)
d
’
année
.
.
liste
enseignement
(
enseignant
)
d
’
UFR
.
.
liste
enseignement
(
enseignant
)
d
’
matière
.
.
liste
enseignement
d
’
enseignant
.
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
iies2
/
projet
/
chapitre
.
projet
service
.
pour
enseignant
,
calculer
service
,
afficher
(
avoir
)
nombre
d
’
heure
supplé-
mentaires
,
nombre
d
’
heure
en
sous-service
.
.
pouvoir
avoir
récapitulatif
global
heure
d
’
enseignement
,
regrouper
par
section
CNU
/
par
formation
/
par
statut
.
.
falloir
pouvoir
distinguer
entre
enseignant
permanent
autre
dans
différent
statis-
tique
:
avoir
sens|sen
falloir
avoir
trois
version
de
calcul
:
enseignant
,
permanent
,
vacataire
.
.
fonctionnalité
requérir
pour
mise
à
jour
pour
utilisateur
autoriser
:
responsable
administratif
administrateur
de
base
.
.
créer
/
modifier
/
supprimer
objet
intervenir
dans
gestion
affectation
(
UFR
,
formation
,
filière
,
cours|cour
,
enseigner
,
etc
.
)
.
.
affecter
enseignement
à
enseignant
.
supprimer
affectation
.
.
information
technique
.
message
d
’
alerte
devoir
être
produire
avoir
distribuer
de
groupe
disponible
.
.
information
nécessaire
pour
enseignement
:
désignation
cours|cour
,
nombre
d
’
heure
,
public
concerner
,
type
d
’
enseignement
(
TD
,
CM
,
etc
.
)
,
nombre
de
groupe
disponible
,
section
CNU
concerner
(
l
’
enseignant
être
charger
cours|cour
être
rattacher
à
section
)
.
.
information
nécessaire
pour
enseignant
:
nom
,
prénom
,
statut
administratif
,
UFR
de
rat-
tachement
,
service
devoir
(
nombre
d
’
heure
)
,
type
de
contrat
(
permanent
vacataire
)
,
section
CNU
.
.
être
bon
qu
’
avoir
historique
commande
exécuter
:
•
de
réparer
erreur
grave
,
•
pour
connaître
type
d
’
utilisation
de
base
.
.
question
subsidiaire
:
gérer
l
’
historique
de
base
?
problème
n
’
être
de
conserver
requête
(
pour
voir
section
)
modification
.
question
être
:
«
garder
d
’
année
à
l
’
autre
renseignement
disponible
exploitable
?
»
.
vocabulaire
utiliser
année
par
exemple
2ème
année
de
DEUG
AES
,
3ème
année
d
’
IUP
IIES
,
...
cours|cour
unité
d
’
enseignement
.
correspondre
à
nombre
d
’
heure
de
présence
devant
étudiant
,
sur
sujet
,
donner
à
nombre
de
groupe
d
’
étudiant
.
enseignant
pouvoir
être
concerner
par
même
cours|cour
,
dans
groupe
différent
.
chapitre
.
projet
service
enseignant
permanent
pour
UFR
avoir
deux
catégorie
d
’
enseignant
:
permanent
vacataire
.
premier
dépen-
dent
de
l
’
UFR
(
être
nommer
à
titre
définitif
)
,
être
payer
par
l
’
université
.
second
être
recruter
cas
par
cas
,
pour
année
(
semestre
)
être
payer
sur
ressource
propre
de
l
’
UFR
(
pouvoir
être
permanent
dans
d
’
autre
UFR
,
être
extérieur
à
l
’
université
)
.
formation
par
exemple
AES
,
IUP
IIES
,
MASS
,
...
heure
supplémentaire
heure
d
’
enseignement
faire
en
service
devoir
.
section
CNU
CNU
=
conseil
national
université
.
C
’
être
l
’
organisme
charger
affectation
universitaire
.
universitaire
être
qualifier
dans
section
CNU
(
dépendre
de
domaine
de
recherche
:
informatique
,
économie
,
histoire
,
etc
.
)
,
pouvoir
être
recruter
sur
poste
de
section
.
pouvoir
traduire
pour
projet
l
’
expression
«
section
CNU
»
par
«
matière
enseigner
»
,
être
en
réalité
réducteur
.
service
service
d
’
enseignant
être
nombre
d
’
heure
d
’
enseignement
qu
’
assurer
.
service
devoir
nombre
d
’
heure
d
’
enseignement
devoir
assurer
enseignant
.
nombre
dépendre
de
statut
,
pouvoir
subir
modification
(
par
exemple
maître
de
conférence
devoir
en
principe
heure
eqTD
,
décharge
pour
service
administratif
pouvoir
permettre
d
’
en
faire
,
qu
’
contrat
pédagogique
pouvoir
demander
d
’
en
faire
)
.
Sous-service
dire
enseignant
assurer
d
’
heure
service
devoir
.
statut
d
’
un
enseigner
principal
statut
existant
(
pour
enseignant
titulaire
,
accompagner
de
service
)
être
:
professeur
(
heure
)
,
maître
de
conférence
(
heure
)
,
assistant
(
heure
)
,
PRCE
(
heure
)
,
PRAG
(
heure
)
.
TD
,
CM
,
CTD
dans
décompte
heure
d
’
enseignement
distinguer
TD
(
travail
diriger
)
,
CM
(
cours|cour
magistral
)
,
CMTD
,
intermédiaire
entre
deux
précédent
.
L
’
unité
de
base
être
l
’
heure
équivaloir
TD
(
eqTD
)
.
en
principe
avoir
correspondance
suivant
:
•
TD
=
eqTD
(
!
)
,
•
CM
=
,
eqTD
,
•
CMTD
=
/
eqTD
.
pouvoir
varier
.
.
premier
ébauche
de
structure
entité
être
:
cmtd
|
annees
--
-
cours|cour
--
--
cnu
|
\
|
formation
--
ufr
-
enseignant
--
statut
chapitre
.
projet
service
liaison
,
sauf
entre
cours|cour
enseignant
,
être
de
type
1-n
(
par
exemple
année
faire
partie
d
’
seul
formation
,
formation
pouvoir
correspondre
à
année
)
:
liaison
pouvoir
être
réaliser
avec
référence
externe
(
par
exemple
champ
dans
table
annee
contenir
code
de
formation
année
dépendre
,
parler
de
clef
étranger
)
.
dans
cas
de
liaison
entre
cours|cour
enseignant
s
’
agir
d
’
relation
n-n
:
cours|cour
pouvoir
être
associer
à
enseignant
,
enseignant
pouvoir
avoir
à
assurer
cours|cour
.
pour
réaliser
type
de
liaison
être
obliger
de
faire
intervenir
table
supplémentaire
assurer
liaison
par
deux
liaison
1-n
(
s
’
agir
de
table
affectation
dans
schéma
suivre
)
:
cmtd
|
annees
--
--
--
-
cours|cour
--
--
--
--
cnu
|
|
|
|
affectation
|
|
\
|
formation
--
--
--
ufr
-
enseignant
--
statut
.
structure
table
trouver
pour
table
liste
champ
composer
.
clef
primaire
être
suivre
d
’
étoile
(
«
*
»
)
.
clef
étranger
être
représenter
.
.
cmtd
table
contenir
description
type
de
cours|cour
(
TD
,
CM
,
CMTD
)
.
•
numcmtd
(
*
)
:
identifier
•
intituler
:
intituler
en
lettre
d
’
type
de
cours|cour
(
TD
,
CM
,
CMTD
)
•
coefficient
:
valeur
en
eqTD
(
équivalent
TD
)
d
’
heure
d
’
enseignement
.
ufr
table
contenir
description
UFR
.
•
numufr
(
*
)
:
identifier
•
intituler
:
intituler
en
lettre
de
l
’
UFR
(
MSES
,
philosophie
,
etc
.
)
.
formation
table
contenir
description
formation
(
AES
,
IUP
IIES
,
etc
.
)
.
•
numformation
(
*
)
:
identifier
•
intituler
:
intituler
en
lettre
de
formation
(
AES
,
IUP
IIES
,
etc
.
)
•
ufr
:
code
de
l
’
UFR
dépendre
formation
chapitre
.
projet
service
.
annees
table
contenir
description
année
(
IUP
IIES
2ème
année
,
maîtrise
AES
,
etc
.
)
.
•
numannee
(
*
)
:
identifier
•
intituler
:
intituler
en
lettre
d
’
année
(
IUP
IIES
2ème
année
,
maîtrise
AES
,
etc
.
)
•
niveau
:
équivalence
en
nombre
d
’
année
après
bac
(
pour
licence
,
pour
premier
année
de
DEUG
,
etc
.
)
•
formation
:
code
de
formation
dépendre
année
.
cnu
table
contenir
description
différent
section
CNU
.
•
numcnu
(
*
)
:
identifier
•
intituler
:
intituler
en
lettre
de
section
CNU
correspondant
.
cours|cour
table
contenir
description
cours|cour
(
base
de
donnée
partager
,
système
réseau
,
Macro-
économie
,
etc
.
)
.
•
numcours|cour
(
*
)
:
identifier
•
intituler
:
intituler
en
lettre
cours|cour
(
base
de
donnée
partager
,
système
réseau
,
Macro-
économie
,
etc
.
)
•
numannée
:
code
de
formation
dépendre
cours|cour
•
numcmtd
:
code
type
de
cours|cour
(
CMTD
,
TD
,
etc
.
)
•
numcnu
:
code
de
section
CNU
à
être
rattacher
cours|cour
•
heure
:
nombre
d
’
heure
d
’
enseignement
par
groupe
pour
cours|cour
•
groupe
:
nombre
de
groupe
être
concerner
par
cours|cour
.
statut
table
contenir
description
statut
(
Maître
de
conférence
,
professeur
,
etc
.
)
.
•
numstatut
(
*
)
:
identifier
•
intituler
:
intituler
en
lettre
statut
(
Maître
de
conférence
,
professeur
,
etc
.
)
•
service
:
service
devoir
(
pouvoir
être
modifier
pour
enseignant
)
.
enseignant
table
contenir
description
enseignant
.
•
numenseignant
(
*
)
:
identifier
•
nom
:
nom
de
l
’
enseigner
chapitre
.
projet
service
•
prenom
:
prénom
de
l
’
enseigner
•
service
:
service
devoir
(
exprimer
en
heure
)
•
numstatut
:
code
statut
de
l
’
enseigner
•
numufr
:
code
de
l
’
UFR
dépendre
l
’
enseigner
.
affectation
table
servir
à
représenter
liaison
d
’
affectation
exister
entre
cours|cour
enseignant
.
•
numcours|cour
(
*
)
:
code
cours|cour
concerner
par
affectation
•
numenseigner
(
*
)
:
code
de
l
’
enseigner
concerner
par
affectation
•
nbgroupe
:
nombre
de
groupe
concerner
par
affectation
.
création
table
.
cmtd
CREATE
tabler
cmtd
(
numcmtd
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
intituler
TEXT
,
valeur
NUMERIC
(
,
)
)
;
.
ufr
CREATE
tabler
ufr
(
numufr
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
intituler
TEXT
)
;
.
formation
CREATE
tabler
formation
(
numformation
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
intituler
TEXT
,
numufr
NUMERIC
(
)
NOT
NULL
,
FOREIGN
KEY
(
numufr
)
REFERENCES
ufr
(
numufr
)
)
;
.
annees
CREATE
tabler
annees
(
numannee
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
intituler
TEXT
,
niveau
INT4
,
numformation
NUMERIC
(
)
NOT
NULL
,
FOREIGN
KEY
(
numformation
)
REFERENCES
formation
(
numformation
)
)
;
chapitre
.
projet
service
.
cnu
CREATE
tabler
cnu
(
numcnu
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
intitulé
TEXT
)
;
.
cours|cour
CREATE
tabler
cours|cour
(
numcours|cour
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
intituler
TEXT
,
numannee
NUMERIC
(
)
NOT
NULL
,
numcmtd
NUMERIC
(
)
NOT
NULL
,
numcnu
NUMERIC
(
)
NOT
NULL
,
heure
NUMERIC
(
,
)
,
groupe
NUMERIC
(
,
)
,
FOREIGN
KEY
(
numcmtd
)
REFERENCES
cmtd
(
cnumcmtd
)
,
FOREIGN
KEY
(
numcnu
)
REFERENCES
cnu
(
cnumcnu
)
,
FOREIGN
KEY
(
numannee
)
REFERENCES
annees
(
numannee
)
)
;
.
statut
CREATE
tabler
statut
(
numstatut
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
intitulé
TEXT
,
service
NUMERIC
(
,
)
)
;
.
enseignant
CREATE
tabler
enseignant
(
numenseigner
NUMERIC
(
)
NOT
NULL
PRIMARY
KEY
,
nom
TEXT
,
prenom
TEXT
,
service
NUMERIC
(
,
)
,
numstatut
NUMERIC
(
)
NOT
NULL
,
numufr
NUMERIC
(
)
NOT
NULL
,
FOREIGN
KEY
(
numufr
)
REFERENCES
ufr
(
cnumufr
)
,
FOREIGN
KEY
(
numstatut
)
REFERENCES
statut
(
numstatut
)
)
;
.
affectation
CREATE
tabler
affectation
(
numcours|cour
NUMERIC
(
)
NOT
NULL
,
numenseignant
NUMERIC
(
)
NOT
NULL
,
groupe
INT4
,
PRIMARY
KEY
(
numcours|cour
,
numenseignant
)
,
FOREIGN
KEY
(
numcours|cour
)
REFERENCES
cours|cour
(
cnumcours|cour
)
,
FOREIGN
KEY
(
numenseignant
)
REFERENCES
enseignant
(
numenseignant
)
)
;
.
remplir
table
de
paramètre
.
statut
insert
INTO
statut
valoir
(
,
’
MdC
’
,
)
;
insert
INTO
statut
valoir
(
,
’
professeur
’
,
)
;
insert
INTO
statut
valoir
(
,
’
PRAG
’
,
)
;
insert
INTO
statut
valoir
(
,
’
ATER
’
,
)
;
chapitre
.
projet
service
insert
INTO
statut
valoir
(
,
’
charger
de
cours|cour
’
,
)
;
insert
INTO
statut
valoir
(
,
’
past
’
,
)
;
.
cnu
insert
INTO
cnu
value
(
,
’
droit
privé
science
criminel
’
)
;
insert
INTO
cnu
value
(
,
’
droit
public
’
)
;
insert
INTO
cnu
value
(
,
’
Histoire
droit
institution
’
)
;
insert
INTO
cnu
value
(
,
’
science
politique
’
)
;
insert
INTO
cnu
value
(
,
’
science
économique
’
)
;
insert
INTO
cnu
value
(
,
’
science
de
gestion
’
)
;
insert
INTO
cnu
value
(
,
’
science
langage
:
linguistique
phonétique
’
|
|
’
général
’
)
;
insert
INTO
cnu
value
(
,
’
langue
littérature
ancien
’
)
;
insert
INTO
cnu
value
(
,
’
langue
littérature
français
’
)
;
insert
INTO
cnu
value
(
,
’
littératurer
comparer
’
)
;
insert
INTO
cnu
value
(
,
’
langue
littérature
anglais
anglo-saxon
’
)
;
insert
INTO
cnu
value
(
,
’
langue
littérature
germanique
scandinave
’
)
;
insert
INTO
cnu
value
(
,
’
langue
littérature
slave
’
)
;
insert
INTO
cnu
value
(
,
’
langue
littérature
roman
:
espagnol
,
italien
,
’
|
|
’
portugais
,
autre
langue
roman
’
)
;
insert
INTO
cnu
value
(
,
’
langue
littérature
arabe
,
chinois
,
japonais
,
’
|
|
’
hébraïque
,
d\
’
autre
domaine
linguistique
’
)
;
insert
INTO
cnu
value
(
,
’
psychologie
,
psychologie
clinique
,
psychologie
social
’
)
;
insert
INTO
cnu
value
(
,
’
philosophie
’
)
;
insert
INTO
cnu
value
(
,
’
art
:
plastique
,
spectacle
,
musique
,
musicologie
,
’
|
|
’
esthétique
,
science
de
l\
’
art
’
)
;
insert
INTO
cnu
value
(
,
’
sociologie
,
démographie
’
)
;
insert
INTO
cnu
value
(
,
’
anthropologie
,
éthnologie
,
préhistoire
’
)
;
insert
INTO
cnu
value
(
,
’
Histoire
civilisation
:
histoire
archéologie
’
|
|
’
monde
ancien
monde
médiéval
;
de
l\
’
art
’
)
;
insert
INTO
cnu
value
(
,
’
Histoire
civilisation
:
histoire
monde
moderne
;
’
|
|
’
histoire
monde
contemporain
;
de
l\
’
art
;
de
musique
’
)
;
insert
INTO
cnu
value
(
,
’
géographie
physique
,
humain
,
économique
régional
’
)
;
insert
INTO
cnu
value
(
,
’
aménagement
de
l\
’
espace
,
urbanisme
’
)
;
insert
INTO
cnu
value
(
,
’
mathématique
’
)
;
insert
INTO
cnu
value
(
,
’
mathématique
appliquer
application
mathématique
’
)
;
insert
INTO
cnu
value
(
,
’
informatique
’
)
;
insert
INTO
cnu
value
(
,
’
milieu
dense
matériaux|matériau
’
)
;
insert
INTO
cnu
value
(
,
’
constituant
élémentaire
’
)
;
chapitre
.
projet
service
insert
INTO
cnu
value
(
,
’
milieu
diluer
optique
’
)
;
insert
INTO
cnu
value
(
,
’
chimie
théorique
,
physique
,
analytique
’
)
;
insert
INTO
cnu
value
(
,
’
chimie
organique
,
minéral
,
industriel
’
)
;
insert
INTO
cnu
value
(
,
’
chimie
matériaux|matériau
’
)
;
insert
INTO
cnu
value
(
,
’
astronomie
,
astrophysique
’
)
;
insert
INTO
cnu
value
(
,
’
structure
évolution
de
terre
autre
planète
’
)
;
insert
INTO
cnu
value
(
,
’
terre
solide
:
géodynamique
enveloppe
supérieur
,
’
|
|
’
paléobiosphère
’
)
;
insert
INTO
cnu
value
(
,
’
météorologie
,
océanographie
physique
physique
de
’
|
|
’
l\
’
environnement
’
)
;
insert
INTO
cnu
value
(
,
’
science
physico-chimique
technologie
pharmaceutique
’
)
;
insert
INTO
cnu
value
(
,
’
science
médicament
’
)
;
insert
INTO
cnu
value
(
,
’
science
biologique
’
)
;
insert
INTO
cnu
value
(
,
’
mécanique
,
génie
mécanique
,
génie
civil
’
)
;
insert
INTO
cnu
value
(
,
’
génie
informatique
,
automatique
traitement
signal
’
)
;
insert
INTO
cnu
value
(
,
’
Energétique
,
génie
procédé
’
)
;
insert
INTO
cnu
value
(
,
’
Electronique
,
optronique
système
’
)
;
insert
INTO
cnu
value
(
,
’
biochimie
biologie
moléculaire
’
)
;
insert
INTO
cnu
value
(
,
’
biologie
cellulaire
’
)
;
insert
INTO
cnu
value
(
,
’
physiologie
’
)
;
insert
INTO
cnu
value
(
,
’
biologie
population
écologie
’
)
;
insert
INTO
cnu
value
(
,
’
biologie
organisme
’
)
;
insert
INTO
cnu
value
(
,
’
neuroscience
’
)
;
insert
INTO
cnu
value
(
,
’
science
de
l\
’
éducation
’
)
;
insert
INTO
cnu
value
(
,
’
science
de
l\
’
information
de
communication
’
)
;
insert
INTO
cnu
value
(
,
’
Epistémologie
,
histoire
science
technique
’
)
;
insert
INTO
cnu
value
(
,
’
culture
langue
régional
’
)
;
insert
INTO
cnu
value
(
,
’
science
technique
activité
physique
sportif
’
)
;
insert
INTO
cnu
value
(
,
’
théologie
catholique
’
)
;
insert
INTO
cnu
value
(
,
’
théologie
protestant
’
)
;
.
cmtd
insert
INTO
cmtd
valoir
(
,
’
CM
’
,
)
;
insert
INTO
cmtd
valoir
(
,
’
TD
’
,
)
;
chapitre
.
projet
service
chapitre
.
projet
disque
maîtriser
AES-TEG
,
.
pouvoir
consulter
page
originales1
sur
web
.
.
approche
naïf
souhaiter
mémoriser
contenu
d
’
discothèque
but
être
prêt
de
disque
(
CD
vinyl
)
à
adhérent
.
falloir
connaître
œuvre
,
exemplaire
de
œuvre
,
artiste
correspondant
,
renseignement
sur
adhérent
.
pour
faire
premier
solution
consister
en
un
(
gros
)
tableau
permettre
de
stocker
information
disposer
sur
album
:
nom
de
l
’
album
,
interprète
,
morceau
(
)
,
genre
de
musique
,
type
de
support
(
vinyl
,
CD
)
,
etc
...
disposer
sur
adhérent
.
représentation
de
information
«
à
plat
»
sous
forme
d
’
seul
tableau
montrer
d
’
limite
:
•
en
effet
,
aller
reprendre
information
lier
à
album
fait
colonne
titre
contenir
titre
pour
même
album
.
•
par
,
disposition
privilégier
l
’
approcher
de
information
album
par
album
.
par
con-
séquent
,
être
commode
pour
approche
par
interprète
,
par
emprunteur
.
avec
solution
avoir
difficulté
à
percevoir
séparement
élément
(
entité
)
être
distinct
(
album
,
interprète
,
adhérent
)
.
avoir
par
même
occasion
,
difficulté
à
regrouper
information
:
album
d
’
même
in-
terprète
,
album
d
’
même
genre
,
album
emprunter
par
adhérent
,
etc
.
disposer
dans
tableur
de
possiblité
de
trier
tableau
suivre
colonne
heurter
à
problème
de
choix
(
n
’
avoir
de
raison
de
privilégier
ordre
par
rapport
à
autre
)
.
par
,
dès
qu
’
tableau
être
trier
,
s
’
agir
de
respecter
ordre
de
mise-à-jour
tableau
,
compliquer
procédure
de
saisie
de
nouveau
album
.
tableau
devoir
être
trier
,
recherche
d
’
information
préciser
demeurer
fastidieux
,
recherche
devenir
aisé
s
’
s
’
agir
de
retrouver
croisement
d
’
information
(
X
avoir
t-il
faire
reprise
d
’
titre
interpréter
par
)
.
difficulté
corser
lorsqu
’
s
’
agir
d
’
accéder
à
information
d
’
extraire
série
d
’
information
(
album
de
Jean
ferrat
contenir
texte
d
’
Aragon
)
.
remarquer
,
dans
un
représentation
,
de
nombreux
information
figurer
fois
(
artiste
:
nom
prénom
;
emprunteur
:
adresse
...
)
.
information
être
saisir
,
perte
d
’
efficacité
,
exister
risque
d
’
incohérence
(
même
donnée
saisir
à
deux
endroit
distinct
)
.
répétition
d
’
même
donnée
pouvoir
être
pénalisant
venir
à
changer
,
en
effet
lieu
d
’
avoir
à
procéder
à
seul
mise-à-jour
,
être
obliger
de
reporter
même
modification
donnée
figurer
(
perte
d
’
efficacité
risque
d
’
incohérence
)
.
par
exemple
faire
lorsqu
’
chanteur
décider
de
changer
de
nom2
?
.
analyse
entité
pouvoir
identifier
?
être
nombre
de
:
disque
L
’
entité
central
de
base
de
donnée
.
s
’
agir
de
l
’
œuvre
«
abstrait
»
,
parler
de
l
’
album
blanc
Beatles
,
sans
référer
à
exemplaire
précis
,
à
l
’
œuvrer
même
.
propriété
d
’
disque
être
:
•
intitulé
,
@ord@
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
mait_aes
/
projet
.
idée
bizarre
,
savoir
...
c
’
être
qu
’
avoir
faire
prince
.
(
n
’
enlever
d
’
à
bizarreté
fait
...
)
chapitre
.
projet
disque
•
année
de
parution
,
•
morceau
composer
.
•
genre
de
musique
(
rock
,
classique
,
etc
...
)
artiste
avoir
enregistrer
disque
?
propriété
d
’
artiste
être
:
•
nom
,
•
prénom
,
•
groupe
l
’
accompagner
,
exemplaire
L
’
entité
exemplaire
être
différent
de
l
’
entité
disque
.
s
’
agir
de
l
’
objet
physique
,
l
’
exemplaire
physique
d
’
disque
,
par
exemple
l
’
exemplaire
en
vinyl
de
l
’
album
blanc
Beatles
trouver
dans
discothèque
de
grand-mère
.
pouvoir
avoir
exemplaire
d
’
même
disque
.
propriété
d
’
exemplaire
être
:
•
type
de
support
(
CD
vinyl
)
,
•
prix
(
pour
remboursement
en
cas
de
perte
de
détérioration
)
.
adhérent
s
’
agir
personne
inscrire
club
.
propriété
d
’
adhérent
être
:
•
nom
,
•
prénom
•
adresse3
,
•
date
début
de
adhésion
,
•
nombre
de
personne
avoir
accès
disque
emprunter
par
adhérent4
pour
pouvoir
faire
statistique
sur
pénétration
disque
en
stock
dans
public
.
prêt
adhérent
emprunter
exemplaire5
.
propriété
d
’
prêt
être
:
•
date
de
début
(
date
de
sortie
de
l
’
exemplaire
)
,
•
date
de
fin
(
date
de
rentrée
de
l
’
exemplaire
)
.
relation
exister
entre
entité
être
décrire
dans
figure
:
figurer
.
relation
dans
base
disque
,
premier
version
remarquer
choix
aller
amener
difficulté
:
•
faire
figurer
ville
dans
fiche
d
’
adhérent
,
créer
redondance
donnée
risque
d
’
inconsistance
.
aller
créer
nouveau
entité
:
ville
.
propriété
d
’
ville
être
:
.
par
pur
souci
de
simplification
de
base
,
être|sommer
éloigner
de
réalité
en
décider
de
conserver
ville
de
résidence
pour
l
’
adresse
d
’
adhérent
.
choix
être
à
fait
mauvais
dans
réalité
.
.
être
nombre
de
personne
vivre
même
domicile
.
.
autre
analyse
avoir
pouvoir
amener
à
considérer
prêt
relation
entre
exemplaire
adhérent
,
entité
propre
.
discussion
pouvoir
être
longue
sur
sujet
.
de
façon
,
résultat
avoir
être
identique
,
...
chapitre
.
projet
disque
•
nom
,
•
code
postal
.
•
même
remarque
pour
genre
musical
disque
.
aller
créer
nouveau
entité
genre
.
seul
propriété
d
’
genre
être
nom
.
•
garder
titre
morceau
composer
disque
avec
renseignement
concerner
disque
lui-
même
poser
autre
problème
:
placer
réserver
?
réserver
de
place
,
être
déborder
.
réserver
de
place
(
par
exemple
de
ranger
titre
)
perdre
place
énorme
être
réserver
pour
disque
,
comprendre
contenir
qu
’
dizaine
de
morceau
(
être
cas
pour
plupart
disque
)
;
pouvoir
exister
disque
avoir
de
morceau
avoir
réservé6
.
autre
problème
résulter
choix
d
’
un
structure
:
rendre
impossible
recherche
d
’
morceau
particulier
,
connaître
titre
,
l
’
interprète
,
disque
.
aller
créer
nouveau
entité
pour
«
éclater
»
donnée
:
chanson
.
propriété
d
’
chanson
être
:
•
titre
,
•
numéro
d
’
ordre
sur
disque
.
relation
exister
entre
entité
être
décrire
dans
figure
:
figurer
.
relation
dans
base
disque
,
deuxième
version
n
’
être
question
,
par
exemple
,
de
reporter
sur
ligne
correspondre
à
exemplaire
information
relatif
disque
.
placer
,
sur
ligne
correspondant
,
information
particulier
à
partir
de
pouvoir
retrouver
,
dans
tableau
correspondre
,
concerner
disque
(
type
d
’
information
être
appeler
clef
étranger
)
.
,
avoir
disposer
de
clef
pour
disque
.
par
contre
,
disposer
de
type
d
’
information
pour
ville
,
bureau
distributeur
:
code
postal
.
,
pouvoir
contenter
niveau
de
l
’
adresse
d
’
personne
bureau
distributeur
dès
l
’
disposer
d
’
tableau
(
codePostal
,
bureauDistributeur
)
.
reprendre
idée
code
(
numéro
,
matricule
...
)
pour
album
,
artiste
...
faire
partir
de
vie
:
avoir
numéro
INSEE
,
numéro
de
carte
d
’
étudiant
,
numéro
de
dossier
pour
organisme
logeur
,
numéro
de
compte
en
banque
,
livre
avoir
numéro
ISBN
cote
s
’
appartenir
à
bibliothèque
,
voiture
avoir
numéro
minéralogique
,
produit
commerce
«
code
à
barre
»
,
etc
.
pour
entité
n
’
avoir
de
clef
«
naturel
»
,
devoir
en
créer
de
pièce
.
.
dernier
remarque
avoir
faire
approximation
dans
l
’
analyser
de
base
.
n
’
avoir
par
exemple
prendre
en
compte
faire
qu
’
artiste
pouvoir
enregistrer
album
seul
à
l
’
intérieur
d
’
groupe
.
information
n
’
être
gérer
dans
base
.
être
,
par
exemple
,
impossible
de
trouver
dans
.
monde
savoir
,
d
’
après
axiome
de
N
(
entier
naturel
)
,
l
’
entier
choisir
,
exister
grand
.
connaissance
musical
(
étendre
,
j
’
être|suivre
sûr
)
aller
laisser
supposer
titre
,
proposer
,
c
’
être
.
eh
!
The
commercial
album
Resident
contenir
morceau
.
chapitre
.
projet
disque
base
moindre
lien
entre
disque
Rolling
Stones
de
Mick
Jagger
de
Keith
Richard
.
même
remarque
pour
Beatles
John
Lennon
.
avoir
faire
de
gros
approximation
(
référer
réel
)
sur
adresse
:
avoir
être
mentionner
l
’
garder
ville
;
n
’
avoir
tenir
compte
ville
n
’
avoir
de
bureau
distributeur
propre
;
cas
avoir
être
oublier
pour
conserver
champ
CodePostal
dans
table
ville
fonction
de
clef
.
approximation
avoir
être
faire
en
général
dans
but
pédagogique
,
de
surcharger
base
pour
rendre
compréhension
aisé
.
falloir
souvenir
l
’
analyser
d
’
système
informatique
n
’
être
travail
objectif
qu
’
dépendre
de
vision
(
clair
,
)
qu
’
avoir
futur
utilisateur
.
informaticien
réaliser
analyse
pour
compte
de
quelqu
’
d
’
autre
,
c
’
être
à
de
détecter
problème
éventuel
de
signaler
client
.
dernier
pouvoir
faire
,
en
connaissance
de
cause
,
choix
paraître
réducteur
,
oubli
commettre
concerner
information
l
’
intéresser
.
gros
problème
dans
cas
être
éventuel
changement
d
’
avis
dans
futur
.
être
sans
doute
impossible
d
’
adapter
solution
choisir
.
valoir
sur-abondance
raisonnable7
d
’
information
qu
’
n
’
utiliser
pour
l
’
instant
,
qu
’
oubli
d
’
information
pouvoir
avoir
besoin
.
.
autre
analyse
projet
disque
trouver
dans
ligne
suivre
approche
différent
de
l
’
analyser
faire
dans
chapitre
précédent
.
analyser
être
prendre
en
compte
dans
reste
projet
.
être
présenter
pour
montrer
même
problème
pouvoir
amener
à
deux
structure
différent
suivant
l
’
approcher
qu
’
avoir
.
.
description
disque
être
composer
de
plage
musical
.
pour
avoir
base
performant
,
désirer
distinguer
inter-
prétations
différent
d
’
même
titre
.
par
exemple
falloir
différencier
•
string
quartet
N◦12
de
D.Schostakowitsch
sur
disque
string
quartet
,
&
enregistrer
/
/
par
Borodin
string
quartet
•
string
quartet
N◦12
de
D
.
Schostakowitsch
sur
disque
GIDON
KREMER
dns-remplacer
volume
/
enregistrer
/
/
par
G
.
Kremer
,
.
Horigome
,
K
.
Kashkashian
,
D
.
Geringas
information
suivant
être
à
mémoriser
:
titre
disque
,
référence
d
’
édition
,
code
barrer
,
titre
composer
;
pour
titre
,
compositeur
,
date
d
’
enregistrement
,
lieu
d
’
enregistrement
,
interprète
durée
de
l
’
interprétation
.
pour
compositeur
interprète
,
mémoriser
nom
.
adopter
choix
suivant
:
•
référence
d
’
édition
être
donner
l
’
éditeur
disque
(
exemple
:
ECM
New
Serie
)
.
s
’
occuper
de
l
’
éditeur
.
•
compositeur
d
’
titre
être
considérer
être
unique
.
S
’
avoir
compositeur
(
être
rare
)
,
être
noter
nom
unique
considérer
groupe
.
exemple
.
groupe
string
quartet
N◦12
composer
par
D
.
SCHOSTAKOWITSCH
The
Black
Angel
’
s
Death
song
composer
par
groupe
REED
/
cale
.
compositeur
pouvoir
être
individu
,
groupe
.
.
problème
être
de
définir
mot
raisonnable
.
chapitre
.
projet
disque
•
interprète
varier
selon
interprétation
.
interprète
pouvoir
être
:
compositeur
(
être
interprète
autre
)
,
groupe
,
regroupement
d
’
interprète
,
groupe
interprète
invité
...
dans
cas
,
seul
nom
(
groupe
,
interprète
s
’
s
’
agir
d
’
regroupement
d
’
interprète
)
intéresser
.
,
dans
recherche
approfondir
,
membre
groupe
pouvoir
être
demander
.
pouvoir
considérer
groupe
interprète
particulier
.
exemple
.
groupe
avec
interprète
inviter
The
Black
Angel
’
s
Death
song
,
par
THE
velvet
underground
NICO
,
THE
velvet
underground
être
groupe
(
à
niveau
,
importer
composer
groupe
)
NICO
être
interprète
invité
.
exemple
.
Interprèete
compositeur
Riding
The
Westerleys
composer
interpréter
par
TERRY
RILEY
.
•
même
interprétation
pouvoir
apparaître
sur
disque
.
•
tenir
compte
différent
mouvement
à
l
’
intérieur
d
’
composition
(
classique
)
.
•
probabilité
pour
qu
’
même
titre
enregistrer
par
interprète
différent
,
même
jour
,
être
considérer
nul
.
L
’
égalité
possible
lieu
date
d
’
enregistrement
être
considérer
redondance
.
être
intéresser
de
savoir
être
membre
d
’
groupe
.
pour
,
mémoriser
à
partir
de
dater
interprète
appartenir
à
groupe
à
date
supposer
qu
’
quitter
.
supposer
programme
gérer
validité
de
date
.
.
résultat
obtenir
schéma
conceptuel
de
figure
suivant
:
figurer
.
autre
MCD
pour
base
disquer
chapitre
.
projet
disque
table
être
:
•
table
disque
contenir
code
barrer
,
titre
disque
,
nombre
de
plage
référence
de
l
’
éditeur
.
•
table
morceau
correspondre
interprétation
.
contenir
information
associer
à
l
’
enregistrement
durée
.
même
interprétation
pouvoir
apparaître
sur
disque
.
•
table
œuvre
correspondre
à
création
compositeur
.
•
table
CompInte
(
nom
donner
pour
compositeur
interprète
)
contenir
compositeur
inter-
prètes
.
en
effet
,
compositeur
pouvoir
être
interprète
information
mémoriser
dans
deux
cas
être
même
,
pouvoir
regrouper
deux
entité
en
seul
,
éviter
de
dupliquer
infor-
mater
pour
compositeurs-interprète
.
de
table
contenir
fiche
correspondre
à
groupe
qu
’
à
individu
.
œuvre
être
interpréter
par
groupe
,
trouver
fiche
groupe
,
possible
,
fiche
interprète
appartenir
groupe
.
fiche
d
’
interprétation
,
être
interpréter
par
groupe
,
être
de
préférence
relier
groupe
qu
’
membre
groupe
.
trouver
membre
groupe
par
relation
appartenance
.
permettre
de
traiter
cas
possible
;
en
particulier
,
n
’
avoir
problème
pour
interprétation
par
groupe
inviter
interprète
.
n
’
avoir
difficulté
pour
enregistrer
groupe
sans
connaître
membre
,
pour
ajouter
membre
à
groupe
existant
,
pour
définir
interprétation
effectuer
par
seul
membre
groupe
...
ajouter
champ
logique
,
appeler
EstGroupe
,
permettre
de
différencier
individu
groupe
.
contenir
valeur
vrai
fiche
être
d
’
groupe
,
valeur
faux
s
’
s
’
agir
d
’
individu
.
appartenance
être
relation
entre
table
CompInte
,
vue
contenir
fiche
groupe
,
table
CompInte
,
vue
contenir
fiche
individu
.
à
relation
être
associer
informa-
tions
:
date
de
début
de
fin
d
’
appartenance
à
groupe
.
élément
de
relation
indiquer
qu
’
individu
,
interprète
fiche
être
dans
table
CompInte
,
avoir
appartenir
à
groupe
,
fiche
être
dans
table
CompInte
.
date
être
gérer
de
façon
base
rester
cohérent
.
interprète
référencer
sur
fiche
de
table
membre
être
supposer
avoir
participer
à
enregistrement
effectuer
par
groupe
référencer
,
entre
date
de
début
date
de
fin
d
’
appartenance
à
groupe
.
.
création
table
pour
garnir
de
donnée
aller
pouvoir
laisser
faire
fichier
faire
à
place
.
déconnecter
de
PostgreSQL
(
\q
)
reconnecter
par
commande
suivant
:
psql
-f
/
home
/
enseign
/
aesteg
/
dns-remplacer
aller
faire
exécuter
par
PostgreSQL
fichier
dns-remplacé
contenir
commande
donnée
nécessaire
remplissage
de
base
.
avoir
message
d
’
erreur
,
faire
à
condition
programme
arriver
à
terme
.
table
avoir
être
créer
par
commande
suivant
:
•
table
artiste
:
CREATE
table
artiste
(
codeartiste
INT4
PRIMARY
KEY
,
prenom
VARCHAR
,
nom
VARCHAR
,
groupe
VARCHAR
)
;
•
table
disque
:
l
’
œuvrer
logique
,
parler
de
l
’
album
blanc
Beatles
,
sans
référer
à
ex-
emplaire
précis
,
à
l
’
œuvrer
même
.
plupart
renseignement
trouver
dans
d
’
autre
table
avoir
accès
grâce
clef
étranger
CREATE
tabler
disque
(
codedisque
INT4
PRIMARY
KEY
,
artiste
INT4
,
annee
VARCHAR
,
intituler
VARCHAR
,
chapitre
.
projet
disque
genre
INT4
)
;
•
table
chanson
:
fiche
correspondre
à
chanson
dans
disque
.
connaître
disque
par
code
.
CREATE
tabler
chanson
(
numero
INT4
,
disque
INT4
,
titre
VARCHAR
,
PRIMARY
KEY
(
numero
,
disque
)
)
;
•
table
genre
:
CREATE
tabler
genre
(
codegenre
INT4
PRIMARY
KEY
,
genre
VARCHAR
)
;
•
table
prets
:
fiche
correspondre
à
emprunt
d
’
exemplaire
.
CREATE
tabler
prets
(
codepret
INT4
PRIMARY
KEY
,
exemplaire
INT4
,
adherent
INT4
,
sortie
date
,
retour
date
)
;
•
table
ville
:
CREATE
tabler
ville
(
codepostal
VARCHAR
PRIMARY
KEY
,
ville
VARCHAR
)
;
•
table
adherents
:
CREATE
table
adherents
(
codeadherent
INT4
PRIMARY
KEY
,
nom
VARCHAR
,
prenom
VARCHAR
,
dateadhesion
date
,
codepostal
VARCHAR
,
nbrepersonne
INT4
)
;
•
table
exemplaire
:
exemplaire
physique
d
’
œuvre
,
par
exemple
l
’
exemplaire
en
vinyl
de
l
’
album
blanc
Beatles
trouver
dans
discothèque
de
grand-mère
.
exemplaire
pouvoir
être
sur
vinyl
CD
.
prix
être
indiquer
pour
pouvoir
établir
facture
en
cas
de
perte
.
CREATE
tabler
exemplaire
(
codeexemplaire
INT4
PRIMARY
KEY
,
disque
INT4
,
CDouVinyl
VARCHAR
,
prix
FLOAT4
)
;
.
travail
aller
devoir
réaliser
site
web
de
discothèque
.
être
libre
pour
choix
contenu
de
site
.
seul
chose
important
être
:
•
site
devoir
entendre
utiliser
PHP
PostgreSQL
(
c
’
être
projet
cours|cour
!
)
.
un
deux
formulaire
être
voir
...
•
être
noter
sur
l
’
état
de
site
à
fin
dernier
cours|cour
.
avoir
contrôle
oral
sur
contenu
(
en
d
’
autre
mot
:
vérifier
être
l
’
auteur
de
présenter
...
)
.
•
faire
de
pouvoir
.
n
’
avoir
de
minimum
à
atteindre
.
•
L
’
ergonomie
facilité
d
’
utilisation
site
être
prendre
en
compte
dans
notation
.
•
pouvoir
travailler
par
groupe
de
deux
.
pouvoir
trouver
exemple8
de
à
pouvoir
ressembler
sur
web
.
http
:
/
/
dns-remplacer
/
~
gonzalez
/
enseignement
/
/
mait_aes
/
disque
chapitre
.
projet
disque
index
explode
,
fclose
,
action
,
fgets
,
,
ADODB
,
,
,
file
,
,
affectation
,
,
fopen
,
affectedRows
(
)
,
fputs
,
algorithmique
,
,
fwrite
,
alternative
,
,
gettype
,
analyse
,
header
,
apostrophe
,
implode
,
archiver
,
include
,
assembleur
,
join
,
backslash
,
ltrim
,
base
de
donnée
,
opendir
,
boucle
,
pg_affected_rows
,
bouton
pg_connect
,
d
’
envoi
,
pg_fetch_array
,
radio
,
pg_numrows
,
reset
,
pg_query
,
,
,
submit
,
pg_result_status
,
case
à
cocher
,
phpinfo
,
champ
,
readdir
,
chaîne
de
caractère
,
require
,
opération
sur
-
,
sort
,
checkbox
,
split
,
chop
,
strlen
,
clef
étranger
,
strpos
,
closedir
,
strtolower
,
concaténation
,
,
strtoupper
,
connexion
à
base
de
donnée
,
str_replace
,
contrôle
type
,
substr
,
,
conversion
substr_replace
,
de
type
,
trim
,
majuscules-minuscule
,
fopen
,
minuscules-majuscule
,
for
,
couche
d
’
abstraction
,
foreach
,
count
,
formulaire
,
,
DBX
,
,
fputs
,
DB_FETCHMODE_ASSOC
,
fwrite
,
DB_FETCHMODE_ORDERED
,
,
GEDCOM
,
DELETE
,
,
gestion
erreur
,
DocBook
,
GET
,
,
,
droit
d
’
accès
,
gettype
,
DSN
,
$
_GET
,
echo
,
guillemet
,
emacs
,
header
,
en-tête
HTTP
,
hidden
,
entité
,
HTML
,
,
erreur
,
$
HTTP_GET_VARS
,
explode
,
$
HTTP_POST_VARS
,
FAQ
,
hébergeur
,
,
,
fclose
,
identification
,
,
fermeture
d
’
fichier
,
if
,
fetchInto
(
)
,
image
cliquables
,
fetchRow
(
)
,
implode
,
fgets
,
,
include
,
fichier
,
information
,
fermeture
,
input
,
ouverture
,
insert
,
,
file
,
,
interpréteur
,
,
fonction
,
itération
,
,
chop
,
JDN
,
closedir
,
join
,
echo
,
journal
net
,
langage
protocole
,
compiler
,
quanta
,
de
scripting
,
radio
,
web
,
readdir
,
informatique
,
,
require
,
intermédiaire
,
require_once
,
interpréter
,
requête
,
machine
,
reset
,
naturel
,
return
,
licence
GNU
FDL
,
répertoire
,
longueur
d
’
chaîne
,
safe
mode
,
,
ltrim
,
saisir
de
mot
de
passe
,
MCD
,
select
,
message
d
’
erreur
,
$
_SERVER
,
MetaData
,
,
session
,
MetatData
,
setfetchmode
,
MLD
,
,
,
,
,
SGBD
,
MySQL
,
,
,
sort
,
numCols
(
)
,
split
,
numRows
(
)
,
SQL
,
opendir
,
SQLite
,
,
,
openjade
,
string
,
opérateur
,
strlen
,
de
comparaison
,
strpos
,
de
concaténation
,
,
strtolower
,
logique
,
strtoupper
,
opération
sur
chaîne
,
structure
de
contrôle
,
,
ouverture
d
’
fichier
,
str_replace
,
page
web
dynamique
,
submit
,
password
,
substr
,
,
PDF
,
,
substr_replace
,
PDO
,
,
séparation
contenu
traitement
,
pear
,
séquence
,
,
Pear-DB
,
,
tableau
,
peardb
,
associatif
,
pg_affected_rows
,
tableInfo
(
)
,
pg_connect
,
,
pg_fetch_array
,
text
,
pg_last_error
,
textarea
,
pg_numrows
,
trim
,
pg_query
,
,
UPDATE
,
,
pg_result_status
,
variable
,
,
version
,
phpinfo
,
W3C
,
PHPLib
,
,
,
while
,
$
PHP_AUTH_PW
,
XML
,
$
PHP_AUTH_USER
,
xsltproc
,
$
PHP_AUTH_USER
,
zone
de
saisie
,
point-virgule
,
portable
,
POST
,
,
,
PostgreSQL
,
,
,
,
,
$
_POST
,
procédure
,
programmation
séparer
,
programmer
,
projet
association
,
Brazil
,
camping
,
,
disque
,
disque
,
généalogie
,
inscription
,
service
,
document
Outline
PHP
,
initiation
tabler
matière
I
.
cours|cour
chapitrer
.
?
.
introduction
.
document
?
.
atil
être
construire
?
.
trouver
document
?
.
QBullets
chapitre
.
généralité
sur
langage
informatique
.
appelleton
langage
informatique
?
.
langage
interpréter
.
langage
compiler
.
langage
intermédiaire
chapitre
.
langage
particulier
:
langage
web
.
programmer
?
.
langage
?
.
avantage
inconvénient
.
choisir
chapitre
.
FAQ
élémentaire
sur
PHP
.
être
PHP
?
.
différence
avec
Javascript
?
.
choisir
PHP
lieu
de
Javascript
?
.
passetil
à
affichage
de
page
PHP
?
.
intégrer
PHP
dans
HTML
?
chapitre
.
premier
exemple
en
PHP
.
premier
programme
.
deuxième
programme
.
rappel
(
?
)
de
algorithmique
.
variable
expression
.
fonction
.
à
chapitrer
.
formulaire
en
HTML
.
présentation
.
principal
contrôle
.
exemple
chapitre
.
traitement
de
formulaire
en
PHP
.
traitement
donnée
de
formulaire
en
PHP
.
exercice
chapitre
.
chaîne
de
caractère
.
estce
chaîne
de
caractère
?
.
choisir
?
guillemet
apostrophe
?
.
principal
utilisation
backslash
.
principal
opération
sur
chaîne
.
principal
fonction
.
conversion
de
type
.
exercice
chapitre
.
tableau
.
estce
tableau
?
.
exemple
de
utilisation
.
remplir
afficher
contenu
tableau
.
exemple
complet
.
tableau
associatif
.
parcours
de
tableau
associatif
.
exercice
chapitre
.
PDO
.
estce
PDO
.
utilité
?
.
connecter
à
base
de
donnée
.
exécuter
requête
.
nombre
de
ligne
colonne
de
requête
select
.
accéder
résultat
de
requête
select
.
accès
par
nom
colonne
.
accès
par
numéro
colonne
.
accès
par
numéro
ligne
numéro
colonne
.
gestion
erreur
.
code
de
erreur
.
information
associer
à
erreur
.
exemple
de
traitement
de
erreur
chapitre
.
programmation
séparer
en
PHP
.
programmation
séparer
.
fonction
require
include
chapitre
.
identification
en
PHP
.
préliminaire
:
fonction
header
.
contrôle
mot
de
passe
.
amélioration
:
utilisateur
.
séparer
donnée
traitement
.
cacher
mot
de
passe
.
Crypter
mot
de
passe
chapitre
.
session
.
préambule
.
application
:
identification
visiteur
II
.
hors
programme
chapitre
.
utiliser
PHP
sur
base
de
donnée
PostgreSQL
.
connexion
à
base
.
exécution
de
requête
.
obtention
résultat
de
requête
.
exemple
.
requête
autre
select
.
suppression
message
de
erreur
.
gestion
erreur
message
.
résultat
renvoyer
par
pgquery
en
cas
de
échec
.
obtenir
texte
de
dernier
erreur
.
obtenir
statut
de
connexion
.
obtenir
nombre
de
ligne
affecter
par
requête
chapitrer
peardb
,
présentation
.
estce
pear
.
utilité
?
.
utiliser
peardb
.
connecter
à
base
de
donnée
.
gestion
erreur
.
en
cas
de
erreur
...
.
application
.
exécuter
requête
.
accéder
résultat
de
requête
select
.
fetchRow
(
)
.
fetchInto
(
)
.
setfetchmode
(
)
.
peardb
,
information
sur
requête
.
numRows
(
)
.
numCols
(
)
.
affectedRows
(
)
.
tableInfo
(
)
chapitre
dbx
.
estce
dbx
.
utilité
?
.
connecter
à
base
de
donnée
.
exécuter
requête
.
nombre
de
ligne
colonne
de
requête
select
.
accéder
résultat
de
requête
select
.
accès
par
nom
colonne
.
accès
par
numéro
colonne
.
accès
par
numéro
ligne
numéro
colonne
chapitre
.
exploration
contenu
de
répertoire
.
notion
nécessaire
en
PHP
.
exploration
de
répertoire
.
extraction
de
souschaîne
de
caractère
.
notion
nécessaire
en
HTML
.
image
cliquables
.
lien
afficher
image
page
HTML
PHP
.
exercice
chapitre
.
News
...
.
présentation
.
travail
.
avoir
temps
...
chapitre
.
fichier
.
manipulation
de
base
.
ouverture
(
fermeture
)
de
fichier
.
écrire
dans
fichier
.
lire
contenu
de
fichier
.
exemple
.
exercice
III
.
corriger
exercice
chapitre
.
premier
exercice
de
algorithmique
,
corriger
chapitre
.
premier
formulaire
en
PHP
,
corriger
chapitre
.
chaîne
de
caractère
,
corriger
chapitre
.
exercice
sur
tableau
,
corriger
chapitre
.
exercice
sur
fichier
,
corriger
chapitre
.
exploration
de
répertoire
,
corriger
chapitre
.
News
...
,
corriger
.
accueil
.
liste
nom
de
fichier
de
nouvelle
.
liste
lien
vers
fichier
de
nouvelle
.
affichage
de
nouvelle
.
affichage
titre
nouvelle
.
affichage
titre
faire
lien
vers
nouvelle
.
affichage
de
nouveau
,
.
choix
sujet
IV
.
étude
de
cas
chapitre
.
étude
de
cas
chapitre
.
projet
disque
.
présentation
.
fonctionnalité
général
.
fonctionnalité
de
consultation
.
modification
donnée
,
accès
donnée
sensible
ip-remplacée
>
.
niveau
faible
ip-remplacée
>
.
niveau
fort
.
base
de
donnée
.
table
.
MLD
chapitrer
.
projet
inscription
.
présentation
.
fonctionnalité
général
.
fonctionnalité
calendrier
.
gestion
de
base
.
base
de
donnée
.
MLD
.
table
chapitrer
.
projet
Teniraq
.
présentation
.
adhésion
.
entrer
dans
salle
.
réservation
de
court
.
match
défi
.
Paramétrage
.
base
de
donnée
.
MLD
.
table
chapitrer
.
projet
camping
.
présentation
.
information
à
conserver
.
traitement
.
base
de
donnée
.
MLD
.
table
chapitrer
.
projet
association
.
contenir
site
web
.
condition
de
travail
.
base
de
donnée
.
MLD
projet
association
.
création
table
de
base
association
.
création
table
.
contrainte
.
évaluation
.
dernier
conseil
chapitre
.
projet
généalogie
.
généralité
.
donnée
à
conserver
.
donnée
de
base
.
donnée
supplémentaire
.
traitement
donnée
.
optimisation
.
Importexport
.
MCD
projet
généalogie
.
différent
table
.
table
entité
ip-remplacée
>
.
table
individu
ip-remplacée
>
.
table
ville
ip-remplacée
>
.
table
lieu
ip-remplacée
>
.
table
couple
ip-remplacée
>
.
table
type
de
couple
ip-remplacée
>
.
table
type
de
document
ip-remplacée
>
.
table
document
.
table
relation
ip-remplacée
>
.
table
lier
document
couple
ip-remplacée
>
.
table
lier
document
lieu
ip-remplacée
>
.
table
lier
document
individu
.
différent
contrainte
.
sur
table
individu
.
sur
table
ville
.
sur
table
lieu
.
sur
table
couple
.
sur
table
typecoupler
.
sur
table
typedocument
.
sur
table
document
.
sur
table
doccoupler
.
sur
table
doclieu
chapitre
.
projet
Brazil
.
description
.
table
entité
.
table
citoyen
.
table
ville
.
table
rue
.
table
maladie
.
table
service
.
table
ministere
.
table
relation
.
associer
maladie
à
citoyen
:
listemaladie
.
associer
adresse
à
citoyen
:
habiter
.
associer
citoyen
service
pour
travailler
:
travaillepour
.
associer
service
ministère
pour
produire
:
serviceproduire
.
associer
service
ministère
appartenir
;
:
serviceappartient
.
associer
service
ministère
contrôler
:
servicecontrole
.
associer
citoyen
ministère
diriger
:
tabledirige
.
contrainte
.
sur
table
ville
.
sur
table
rue
.
sur
table
citoyen
.
sur
table
habiter
.
sur
table
maladie
.
sur
table
listemaladie
.
sur
table
service
.
sur
table
ministere
.
sur
table
travaillepour
.
sur
table
serviceproduire
.
sur
table
serviceappartient
.
sur
table
servicecontrole
.
sur
table
diriger
chapitre
.
projet
service
.
but
de
projet
.
fonctionnement
.
utilisateur
avoir
même
droit
suivre
identité
.
fonctionnalité
requérir
pour
consultation
.
fonctionnalité
requérir
pour
mise
à
jour
.
information
technique
.
question
subsidiaire
:
gérer
historique
de
base
?
.
vocabulaire
utiliser
.
premier
ébauche
de
structure
.
structure
table
.
cmtd
.
ufr
.
formation
.
annees
.
cnu
.
cours|cour
.
statut
.
enseignant
.
affectation
.
création
table
.
cmtd
.
ufr
.
formation
.
annees
.
cnu
.
cours|cour
.
statut
.
enseignant
.
affectation
.
remplir
table
de
paramètre
.
statut
.
cnu
.
cmtd
chapitre
.
projet
disque
.
approcher
naïf
.
analyse
.
dernier
remarque
.
autre
analyse
projet
disque
.
description
.
résultat
.
création
table
.
travail
index
