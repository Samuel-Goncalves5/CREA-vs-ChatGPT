programmer
en
PHP
Julien
Gaulmin
dns-remplacé
@
dns-remplacer
version
copyright
c
Julien
Gaulmin
dns-remplacé
@
dns-remplacer
,
alcôve
document
pouvoir
être
reproduire
,
distribuer
/
modifier
selon
terme
de
licence
GNU
de
documentation
libre
(
GNU
Free
documentation
licence
)
dans
version
ultérieur
publier
,
en
anglais
,
par
Free
software
Foundation
;
sans
partie
invariant
,
avec
premier
de
couverture
(
front
cover
texts
)
deux
premier
page
,
sans
partie
considérer
quatrième
de
couverture
(
back
cover
texts
)
copie
de
licence
être
fournir
en
annexe
pouvoir
être
consulter
à
l
’
url
:
http
:
/
/
dns-remplacer
/
copyleft
/
dns-remplacer
alcôve
centre
Paris
Pleyel
bd
Anatole
France
Saint-Denis
,
France
Tél
.
:
Fax
:
E-mail
:
alcove
@
dns-remplacer
,
toile
:
dns-remplacer
table
matière
chapitrer
introduction
langage
programmation
web
présentation
de
PHP
installation
configuration
de
PHP
chapitrer
base
langage
syntaxe
langage
structure
de
contrôle
fonction
programmation
orienter
objet
chapitrer
fonctionnalité
essentiel
connexion
utilisateur
gestion
session
autre
fonctionnalité
chapitrer
utilisation
avancer
interopérabilité
avec
applicatifs
traitement
chaîne
de
caractère
fonctionnalité
utile
conclusion
chapitre
alcôve
-
programmer
en
PHP
introduction
langage
introduction
langage
alcôve
-
programmer
en
PHP
objectif
chapitre
principe
de
programmation
web
;
présentation
de
PHP
;
installation
configuration
.
section
alcôve
-
programmer
en
PHP
programmation
web
programmation
web
alcôve
-
programmer
en
PHP
objectif
de
section
rappel
d
’
HTML
;
web
interactif
;
notion
de
CGI
;
distinction
PHP
/
CGI
.
programmation
web
alcôve
-
programmer
en
PHP
rappel
d
’
HTML
heure
yper
T
ext
M
arkup
L
anguage
;
définir
structure
logique
d
’
document
web
;
composer
d
’
ensemble
de
commande
de
formatage
;
baser
sur
notion
d
’
environnement
posséder
début
fin
-
>
délimiteur
:
tags
marqueur
.
programmation
web
alcôve
-
programmer
en
PHP
marqueur
être
définir
entre
<
>
;
:
<
marqueur
>
...
<
/
marqueur
>
plupart
environnement
pouvoir
être
imbriquer
selon
règle
définir
;
:
<
H@card@
>
<
B
>
titre
<
/
B
>
<
/
H1
>
n
’
être
permettre
de
faire
chevaucher
environnement
.
:
<
H@card@
>
<
B
>
titre
<
/
H1
>
<
/
B
>
programmation
web
alcôve
-
programmer
en
PHP
structurer
général
d
’
page
HTML
:
<
HTML
>
<
HEAD
>
<
TITLE
>
titre
<
/
TITLE
>
<
!
--
commentaire
--
>
<
/
HEAD
>
<
body
>
<
H@card@
>
chapitre
<
/
H@card@
>
<
P
>
paragraphe
<
/
P
>
<
ADDRESS
>
coordonnées
<
/
ADDRESS
>
<
/
body
>
<
/
HTML
>
programmation
web
alcôve
-
programmer
en
PHP
web
interactif
deux
principal
type
d
’
interaction
:
–
côté
serveur
(
Server-side
scripting
)
,
–
côté
client
(
Client-side
scripting
)
.
type
précédent
diviser
en
sous-catégorie
.
programmation
web
alcôve
-
programmer
en
PHP
côté
client
:
–
script
embarquer
dans
page
HTML
(
HTML-embedded
scripting
)
-
>
Javascript
...
,
–
applet
-
>
java
,
ActiveX
...
,
–
plugins
propriétaire
.
programmation
web
alcôve
-
programmer
en
PHP
côté
serveur
:
–
CGI
-
>
Perl
,
C
,
Shell
...
,
–
interpréteur
intégrer
serveur
HTTP
script
embarquer
dans
page
HTML
(
HTTPD
module
,
HTML-embedded
scripting
)
-
>
PHP
,
ASP-VBScript
...
,
script
à
CGI
(
CGI-like
)
-
>
mod_perl
/
apache
–
Servlets
-
>
java
.
programmation
web
alcôve
-
programmer
en
PHP
WWW
interactif
Server-side
scripting
CGI
(
Perl
,
C
,
Shell
...
)
Client-side
scripting
Servlets
(
java
)
Applets
(
java
,
ActiveX
)
HTTPD
module
HTML-embedded
scripting
(
PHP
,
ASP-VBS
)
HTML-embedded
scripting
(
JavaScript
)
CGI-like
(
mod_perl
/
apache
)
programmation
web
alcôve
-
programmer
en
PHP
notion
de
CGI
C
ommon
G
ateway
I
nterface
;
interface
de
communication
pour
création
de
programme
capable
d
’
être
exécuter
par
serveur
HTTP
;
permettre
création
dynamique
de
page
côté
serveur
;
utiliser
pour
servir
requête
en
provenance
d
’
page
de
formulaire
HTML
.
programmation
web
alcôve
-
programmer
en
PHP
principe
de
CGI
:
GET
/
POST
'
'
emballage
'
'
formulaire
HTML
Browser
appel
'
'
variable
'
'
résultat
réponse
programmer
externe
HTTP
serveur
HTTP
CGI
programmation
web
alcôve
-
programmer
en
PHP
if
(
$
want_page
=
=
)
{
$
want_page
=
;
}
scénario
de
génération
dynamique
de
page
via
CGI
:
–
l
’
utilisateur
remplir
formulaire
HTML
valide
,
–
navigateur
ouvrir|ouvrer
connexion
vers
serveur
HTTP
envoyer
requête
correspondant
(
nom
CGI
+
paramètre
)
,
–
serveur
HTTP
invoquer
script
CGI
en
transmettre
paramètre
de
requête
,
–
script
CGI
générer
page
correspondre
paramètre
,
–
serveur
envoyer
page
navigateur
connexion
,
–
navigateur
afficher
page
.
programmation
web
alcôve
-
programmer
en
PHP
distinction
PHP
/
CGI
deux
être
situer
côté
serveur
:
PHP
:
code
PHP
être
contenir
dans
page
HTML
:
<
?
php
$
username
=
`
`
toto
'
'
;
?
>
<
HTML
>
<
body
>
<
H@card@
>
bonjour
monsieur
<
?
php
print
$
username
?
>
<
/
H1
>
<
/
body
>
<
/
HTML
>
CGI
:
code
HTML
être
contenir
dans
code
CGI
:
#
!
/
usr
/
bin
/
perl
-w
$
username
=
`
`
toto
'
'
;
print
`
`
Content-Type
:
text
/
html\n\n
'
'
;
<
HTML
>
<
body
>
<
H@card@
>
bonjour
monsieur
$
username
<
/
H@card@
>
<
/
body
>
<
/
HTML
>
'
'
;
section
alcôve
-
programmer
en
PHP
présentation
de
PHP
présentation
de
PHP
alcôve
-
programmer
en
PHP
objectif
de
section
;
vue
d
’
ensemble
PHP
;
L
’
histoire
langage
;
avantage
;
inconvénient
.
présentation
de
PHP
alcôve
-
programmer
en
PHP
vue
d
’
ensemble
PHP
à
server-side
,
HTML-embedded
scripting
language
langage
de
script
côté
serveur
;
embarquer
dans
page
HTML
;
syntaxe
hériter
C
Perl
;
extensible
(
nombreux
bibliothèque
)
;
supporter
standard
web
;
logiciel
open
source
(
licence
PHP
de
type
BSD
)
.
présentation
de
PHP
alcôve
-
programmer
en
PHP
L
’
histoire
langage
créer
par
Rasmus
Lerdorf
en
besoin
personnel
(
P
ersonnal
heure
ome
P
age
)
;
premier
version
publique
en
sous
nom
de
Personnal
home
pager
Tools
capable
de
gérer
livre
d
’
or
,
compteur
d
’
accès
...
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
Deuxième
version
complet
(
PHP
/
fi
)
en
avec
gestion
formulaire
HTML
base
mSQL
qu
’
nouveau
interpréteur
;
PHP
/
fi
être
utiliser
par
site
web
en
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
en
,
projet
devenir
travail
d
’
équipe
l
’
interpréteur
être
réécrire
par
Zeev
Suraski
Andi
Gutmans
pour
donner
version
PHP3
;
version
de
PHP
s
’
être
imposer
pour
atteindre
environ
site
web
durant
l
’
être
(
source
:
Netcraft
)
devenir
P
HP
:
heure
ypertext
P
reProcessor
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
Aujourd
’
hui
projet
être
chapeauter
par
zend
,
société
privé
créer
par
Suraskyi
Gutmans
,
commercialiser
logiciel
complémentaire
à
PHP
;
dernier
version
en
date
être
PHP4
(
)
.
posséder
interpréteur
optimiser
par
zend
s
’
ouvrir|ouvrer
à
d
’
autre
serveur
HTTP
qu
’
apache
.
présentation
de
PHP
alcôve
-
programmer
en
PHP
présentation
de
PHP
alcôve
-
programmer
en
PHP
avantage
de
PHP
client
n
’
avoir
accès
code
source
être
interpréter
avant
envoi
(
!
=
Javascript
)
;
client
recevoir
résultat
de
l
’
exécution
script
;
pouvoir
configurer
serveur
HTTP
pour
masquer
qualité
dynamique
page
;
code
n
’
être
alourdir
par
commande
destiner
à
générer
page
HTML
(
!
=
CGI
)
;
présentation
de
PHP
alcôve
-
programmer
en
PHP
langage
posséder
de
nombreux
bibliothèque
/
module
:
–
calcul
mathématique
,
–
création
dynamique
d
’
image
,
–
gestion
de
session
,
–
connexion
sécuriser
(
SSL
)
,
–
l
’
accès
à
plupart
SGBD
,
–
l
’
accès
base
LDAP
...
présentation
de
PHP
alcôve
-
programmer
en
PHP
inconvénient
de
PHP
rapide
mod_perl
certain
CGI
portable
;
simple
ASP-VBScript
respectueux
standard
web
sous
licence
open
source
(
-
>
extensible
)
;
d
’
interactivité
niveau
client
(
-
>
devoir
utiliser
Javascript
dans
cas
)
.
section
alcôve
-
programmer
en
PHP
installation
configuration
de
PHP
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
objectif
de
section
installation
de
PHP
;
configuration
via
dns-remplacé
/
dns-remplacer
;
Premier
test
;
ajout
de
nouveau
module
.
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
installation
trois
type
d
’
installation
:
–
module
dynamique
serveur
HTTP
(
:
mod_php
pour
apache
)
,
–
module
statique
serveur
HTTP
(
%
rapide
mod_php
)
nécessiter
de
patcher
serveur
HTTP
de
recompiler
,
–
sous
forme
de
CGI
(
pour
serveur
HTTP
supporter
)
.
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
Télécharger
source
sur
http
:
/
/
dns-remplacer
(
mirroir
français
site
officiel
de
PHP
)
;
installer
source
dans
répertoire
différent
de
serveur
HTTP
(
:
/
usr
/
local
/
src
/
php
/
)
avec
commande
tar
-zxvf
php-
<
version
>
.
dns-remplacé
-C
/
usr
/
local
/
src
/
php
/
;
configuration
de
l
’
installation
:
–
.
/
setup
(
configuration
interactif
)
,
–
.
/
configurer
<
option
>
(
.
/
configurer
--
help
pour
connaître
option
)
.
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
compilation
installation
:
make
;
savoir
;
make
install
association
fichier
contenir
code
PHP
avec
l
’
interpréteur
PHP
dans
configuration
serveur
HTTP
:
serveur
apache
(
dns-remplacé
dns-remplacé
)
PHP3
-
>
AddType
application
/
x-httpd-php3
.php
PHP4
-
>
AddType
application
/
x-httpd-php
.php
sous
Debian
,
être
simplifier
grâce
à
l
’
utilitaire
apt-get
(
remplacer
php3
par
php4
pour
PHP4
)
:
–
apt-get
install
php3
pour
module
dynamique
apache
,
–
apt-get
install
php3-cgi
pour
CGI
.
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
configuration
de
PHP
(
dns-remplacer
/
dns-remplacer
)
dans
/
etc
/
php
<
version
>
/
apache
/
/
usr
/
lib
/
php
<
version
>
/
;
fichier
(
dns-remplacer
pour
PHP3
dns-remplacer
pour
PHP4
)
contrôle
principal
comportement
de
PHP
;
clair
configurable
;
syntaxe
:
–
clef
=
valeur
,
–
clef
=
`
`
valeur
complexe
'
'
,
–
;
commentaire
,
–
booléen
-
>
,
,
True
,
Yes
/
,
,
False
,
No
.
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
segmenter
en
partie
:
–
option
langage
,
–
ressource
maximal
allouer
à
PHP
,
–
gestion
erreur
,
–
gestion
donnée
HTTP
,
–
fichier
répertoire
,
–
extension
dynamique
(
module
)
,
–
configuration
module
.
PHP
prendre
modification
en
compte
falloir
relancer
serveur
HTTP
(
:
serveur
apache
-
>
apachectl
restart
)
.
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
Premier
test
créer
fichier
dns-remplacé
:
<
?
php
phpinfo
(
)
;
?
>
placer
fichier
à
racine
serveur
HTTP
(
dans
répertoire
doc_root
avoir
activer
l
’
option
safe_mode
)
;
charger
l
’
URL
http
:
/
/
localhost
/
dns-remplacer
sur
navigateur
web
;
bravo
!
avoir
créer
premier
page
dynamique
avec
PHP
résumer
fonctionnalité
PHP
être
configurer
sur
machine
.
installation
configuration
de
PHP
alcôve
-
programmer
en
PHP
installer
nouveau
module
PHP
placer
nouveau
fichier
<
nom
>
.so
dans
extension_dir
(
par
défaut
/
usr
/
lib
/
php
<
version
>
/
apache
configurable
dans
dns-remplacé
/
dns-remplacer
)
utiliser
apt-get
install
php
<
version
>
_
<
nom
>
sous
Debian
;
ajouter
ligne
extension
=
<
nom
>
.so
dans
dns-remplacé
/
dns-remplacer
;
configurer
aspect
relatif
module
dans
dns-remplacé
/
dns-remplacer
;
redémarrer
serveur
HTTP
.
chapitre
alcôve
-
programmer
en
PHP
base
langage
base
langage
alcôve
-
programmer
en
PHP
objectif
chapitre
syntaxe
langage
;
structure
de
contrôle
;
fonction
;
programmation
orienter
objet
.
section
alcôve
-
programmer
en
PHP
syntaxe
langage
syntaxe
langage
alcôve
-
programmer
en
PHP
objectif
de
section
syntaxe
de
base
;
type
de
donnée
;
variable
;
constant
;
opérateur
.
syntaxe
langage
alcôve
-
programmer
en
PHP
syntaxe
de
base
quatre
moyen
équivalent
pour
passer
mode
HTML
PHP
:
–
standard
:
<
?
php
...
code
PHP
...
?
>
,
–
option
short_open_tag
:
<
?
...
code
PHP
...
?
>
,
–
option
asp_tags
:
<
%
...
code
PHP
...
%
>
,
–
marqueur
script
HTML
:
<
script
language
=
'
'
php
'
'
>
...
code
PHP
...
<
/
script
>
.
syntaxe
langage
alcôve
-
programmer
en
PHP
base
de
syntaxe
hériter
C
Perl
:
–
séparateur
d
’
instruction
-
>
;
–
commentaire
:
...
code
/
*
...
commentaire
...
*
/
code
...
,
...
code
...
/
/
...
commentaire
...
,
...
code
...
#
...
commentaire
...
.
syntaxe
langage
alcôve
-
programmer
en
PHP
type
de
donnée
PHP
supporter
type
de
donnée
suivant
:
–
nombre
entier
,
–
nombre
à
virgule
flottant
,
–
chaîne
de
caractère
,
–
tableau
,
–
objet
(
développer
dans
section
’
programmation
orienter
objet
’
)
.
nom
de
variable
être
précéder
d
’
$
(
:
$
toto
=
;
)
;
syntaxe
langage
alcôve
-
programmer
en
PHP
être
possible
de
spécifier
variable
de
type
entier
de
façon
suivant
:
–
$
toto
=
;
#
être
entier
en
base
,
–
$
toto
=
;
#
être
entier
négatif
,
–
$
toto
=
;
#
être
entier
en
base
,
–
$
toto
=
0x123
;
#
être
entier
en
base
.
être
possible
de
spécifier
variable
de
type
flottant
double
de
façon
suivant
:
–
$
titi
=
;
#
être
nombre
à
virgule
flottant
,
–
$
titi
=
1.2e3
;
#
être
nombre
à
virgule
flottant
.
syntaxe
langage
alcôve
-
programmer
en
PHP
être
possible
de
spécifier
variable
de
type
chaîne
de
caratère
de
façon
suivant
:
–
$
personne
=
’
M
.
Smith
’
;
#
être
chaîne
de
caractère
,
–
$
personne
=
`
`
M
.
Smith
'
'
;
#
être
chaîne
de
caractère
.
dans
deuxième
cas
,
chaîne
contenir
nom
de
variable
,
être
remplacer
par
valeur
;
:
$
type
=
’
M
.
’
;
$
nom
=
`
`
Smith
'
'
;
$
personne
=
`
`
$
type
$
nom
'
'
;
Equivalent
à
$
personne
=
’
M
.
Smith
’
;
.
syntaxe
langage
alcôve
-
programmer
en
PHP
utiliser
`
`
...
'
'
devoir
échapper
caractère
avec
backslash
(
\
)
pour
pouvoir
afficher
:
–
dollar
(
$
)
:
\
$
,
–
doubler
quotes
(
`
`
)
:
\
'
'
,
–
backslash
(
\
)
:
\\
.
de
,
exister
caractère
spécial
nécessiter
d
’
être
échapper
:
–
nouveau
ligne
:
\n
,
–
retour
à
ligne
:
\r
,
–
tabulation
:
\t
.
autre
caractère
échappé
génèrera
avertissement
(
warning
)
;
syntaxe
langage
alcôve
-
programmer
en
PHP
Lorsqu
’
chaîne
de
caractère
être
évaluer
valeur
numérique
,
règle
suivant
s
’
appliquer
:
–
chaîne
être
de
type
flottant
/
double
contenir
’
.
’
,
e
E
être
de
type
entier
,
–
valeur
être
définir
par
premier
partie
de
chaîne
(
c
’
être
texte
)
,
–
premier
expression
être
chaîne
,
type
de
variable
dépendre
de
second
expression
.
:
$
toto
=
+
`
`
'
'
;
#
$
toto
valoir
$
toto
=
+
`
`
-1e3
'
'
;
#
$
toto
valoir
$
toto
=
+
`
`
titi
+
'
'
;
#
$
toto
valoir
$
toto
=
+
`
`
+
titi
'
'
;
#
$
toto
valoir
syntaxe
langage
alcôve
-
programmer
en
PHP
tableau
de
PHP
ressembler
tableau
associatif
(
hash-tables
)
Perl
;
L
’
index
dans
tableau
être
appeller
clé
pouvoir
être
entier
chaîne
de
caractère
;
valeur
associer
à
clé
être
appeler
valeur
;
pouvoir
utiliser
fonction
array
(
)
pour
créer
tableau
;
pouvoir
affecter
valeur
tableau
;
fonction
list
(
)
permettre
d
’
affecter
variable
constituer
tableau
;
syntaxe
langage
alcôve
-
programmer
en
PHP
:
$
tab
[
]
=
;
$
tab
[
]
=
`
`
toto
'
'
;
#
pouvoir
mélanger
contenu
$
tab
[
`
`
toto
'
'
]
=
`
`
titi
'
'
;
#
pouvoir
mélanger
clé
$
tab
[
`
`
toto
'
'
]
[
]
;
#
tableau
à
deux
dimension
$
tab
[
`
`
toto
'
'
]
[
]
[
`
`
'
'
]
[
]
;
#
quatre
dimension
$
suite
=
array
(
,
,
,
)
;
$
personne
=
array
(
`
`
type
'
'
=
>
`
`
M
.
`
`
,
`
`
nom
'
'
=
>
'
'
Smith
'
'
)
;
list
(
$
num1
,
$
num2
)
=
$
suite
;
#
$
num1
valoir
$
num2
valoir
syntaxe
langage
alcôve
-
programmer
en
PHP
pouvoir
connaître
nombre
d
’
élément
d
’
tableau
grâce
fonction
:
–
sizeof
(
)
:
retourner
nombre
d
’
élément
d
’
tableau
,
–
count
(
)
:
retourner
nombre
d
’
élément
d
’
tableau
s
’
exister
,
variable
n
’
être
tableau
variable
n
’
exister
.
syntaxe
langage
alcôve
-
programmer
en
PHP
tableau
entretenir
pointeur
courant
servir
à
naviguer
en
sein
grâce
fonction
:
–
reset
(
)
:
placer
pointeur
interne
sur
premier
élément
retourner
valeur
,
–
current
(
)
:
retourner
valeur
de
l
’
élément
courant
,
–
next
(
)
:
placer
pointeur
interne
sur
l
’
élément
suivre
retourner
valeur
,
–
prev
(
)
:
placer
pointeur
interne
sur
l
’
élément
précédent
retourner
valeur
,
–
each
(
)
:
retourner
pair
clé
/
valeur
courant
tableau
avance
pointeur
sur
l
’
élément
suivre
(
c
’
être
seul
fonction
retourner
faux
l
’
élément
valoir
`
`
'
'
)
.
syntaxe
langage
alcôve
-
programmer
en
PHP
tableau
pouvoir
être
trier
en
utiliser
fonction
suivant
:
–
asort
(
)
/
arsort
(
)
:
trier
tableau
en
ordre
croître
/
décroître
de
valeur
,
–
ksort
(
)
/
rsort
(
)
:
trier
tableau
en
ordre
croître
/
décroître
de
clé
,
–
sort
(
)
:
trier
tableau
en
ordre
croître
clé
valeur
(
perdre
correspondance
clé
/
valeur
)
,
–
uasort
(
)
/
uksort
(
)
/
usort
(
)
:
trier
tableau
de
même
façon
quasi-homonyme
(
u
pour
user
)
avec
fonction
de
comparaison
fournir
par
l
’
utilisateur
.
syntaxe
langage
alcôve
-
programmer
en
PHP
:
function
cmp
(
$
avoir
,
$
b
)
{
if
(
$
avoir
=
=
$
b
)
return
;
return
(
$
avoir
>
$
b
)
?
:
;
}
$
tab
=
array
(
,
,
,
,
)
;
usort
(
$
tab
,
cmp
)
;
while
(
list
(
$
cle
,
$
valeur
)
=
each
(
$
tab
)
)
{
echo
`
`
tab
[
$
cle
]
=
$
valeur
<
BR
>
\n
'
'
;
}
programme
être
équivalent
à
rsort
(
)
.
syntaxe
langage
alcôve
-
programmer
en
PHP
variable
porté
d
’
variable
dépendre
contexte
dans
être
définir
;
plupart
variable
avoir
portée
s
’
étendre
sur
l
’
intégralité
script
PHP
,
être
global
;
,
variable
être
local
sein
d
’
fonction
;
syntaxe
langage
alcôve
-
programmer
en
PHP
:
$
toto
=
;
#
porter
global
function
affiche
(
)
{
echo
$
toto
;
#
portée
local
}
affiche
(
)
;
exemple
n
’
afficher
rien
echo
(
)
utiliser
variable
local
$
toto
.
syntaxe
langage
alcôve
-
programmer
en
PHP
deux
façon
exister
pour
accéder
à
variable
global
sein
d
’
bloc
:
–
déclarer
variable
global
sein
bloc
,
–
utiliser
tableau
associatif
$
GLOBALS
avec
clé
nom
de
variable
global
.
syntaxe
langage
alcôve
-
programmer
en
PHP
:
$
toto
=
;
#
portée
global
$
titi
=
;
#
porter
global
function
affiche
(
)
{
global
$
toto
;
#
porter
global
echo
`
`
$
toto
$
GLOBALS
[
’
titi
’
]
'
'
;
}
affiche
(
)
;
exemple
afficher
.
syntaxe
langage
alcôve
-
programmer
en
PHP
variable
statique
:
variable
statique
être
variable
local
perdre
valeur
à
fois
bloc
être
exécuter
;
utiliser
,
en
C
,
l
’
attribut
static
pour
déclarer
tel
variable
:
:
static
$
toto
;
type
de
variable
être
utile
pour
création
de
fonction
récursif
;
syntaxe
langage
alcôve
-
programmer
en
PHP
:
compter
récursivement
jusqu
’
à
function
compter
(
)
{
static
$
compteur
=
;
$
compteur++
;
echo
`
`
$
compteur
`
`
;
if
(
$
compteur
<
)
compte
(
)
;
}
compte
(
)
;
affiche
.
syntaxe
langage
alcôve
-
programmer
en
PHP
variable
dynamique
:
variable
dynamique
prendre
valeur
d
’
variable
l
’
utiliser
nom
d
’
autre
variable
;
:
$
toto
=
`
`
hello
'
'
;
#
$
toto
valoir
hello
$
$
toto
=
`
`
World
'
'
;
#
$
hello
valoir
World
echo
`
`
$
toto
$
hello
!
'
'
;
#
affiche
hello
World
!
echo
`
`
$
toto
$
{
$
toto
}
!
'
'
;
#
afficher
hello
World
!
syntaxe
langage
alcôve
-
programmer
en
PHP
nom
d
’
variable
pouvoir
être
placer
entre
accolade
pour
éviter
ambiguïté
;
:
$
avoir
[
]
=
`
`
V1
'
'
;
$
avoir
=
`
`
V2
'
'
;
$
b
=
`
`
avoir
'
'
;
$
b
[
]
=
`
`
avoir
'
'
;
résultat
:
$
{
$
b
}
[
]
=
=
`
`
V1
'
'
résultat
:
$
{
$
b
[
]
}
=
=
`
`
V2
'
'
conclusion
:
$
{
$
b
}
[
]
$
{
$
b
[
]
}
s
’
utiliser
dans
contexte
différent
.
syntaxe
langage
alcôve
-
programmer
en
PHP
variable
extérieur
:
variable
transmettre
par
méthode
POST
GET
être
accessible
via
tableau
associatif
$
HTTP_POST_VARS
$
HTTP_GET_VARS
(
l
’
option
track_vars
être
activer
dans
dns-remplacé
/
dns-remplacer
)
;
variable
d
’
environnement
être
accessible
variable
PHP
classique
(
:
$
home
)
;
pouvoir
utiliser
fonction
getenv
(
)
putenv
(
)
pour
manipuler
variable
d
’
environnement
;
syntaxe
langage
alcôve
-
programmer
en
PHP
variable
prédéfinie
:
variable
être
prédéfinie
par
PHP
,
être
disponible
pendant
l
’
exécution
script
.
PHP_SELF
URI
script
en
cours|cour
d
’
exécution
.
GLOBALS
tableau
variable
global
.
HTTP_GET_VARS
tableau
variable
issue
de
GET
.
HTTP_POST_VARS
tableau
variable
issue
de
POST
.
HTTP_COOKIE_VARS
tableau
variable
issue
cookies
.
syntaxe
langage
alcôve
-
programmer
en
PHP
variable
d
’
environnement
CGI
:
SERVER_SOFTWARE
SERVER_NAME
GATEWAY_INTERFACE
SERVER_PROTOCOL
SERVER_PORT
REQUEST_METHOD
PATH_INFO
PATH_TRANSLATED
SCRIPT_NAME
QUERY_STRING
REMOTE_HOST
REMOTE_ADDR
AUTH_TYPE
REMOTE_USER
REMOTE_IDENT
CONTENT_TYPE
CONTENT_LENGTH
http
:
/
/
dns-remplacer
/
cgi
/
dns-remplacer
syntaxe
langage
alcôve
-
programmer
en
PHP
pour
déterminer
type
d
’
variable
pouvoir
utiliser
fonction
suivant
:
–
gettype
(
)
:
retourner
chaine
décrire
type
de
variable
passée
en
argument
(
integer
,
double
,
string
,
array
,
object
,
unknown
type
)
,
–
is_long
(
)
/
is_int
(
)
/
is_integer
(
)
:
retourne
true
variable
passée
en
argument
être
entier
false
dans
cas
contraire
,
–
is_double
(
)
/
is_float
:
avec
flottant
/
double
,
–
is_string
(
)
:
avec
chaîne
de
caractère
,
–
is_array
(
)
:
avec
tableau
,
–
is_object
(
)
:
avec
objet
.
syntaxe
langage
alcôve
-
programmer
en
PHP
constant
PHP
définir
constant
proposer
mécanisme
en
définir
d
’
autre
durant
l
’
exécution
script
;
définir
constante
en
utiliser
fonction
define
(
)
;
:
define
(
`
`
MA_CONSTANTE
'
'
,
`
`
bonjour
'
'
)
;
echo
MA_CONSTANTE
;
#
afficher
bonjour
syntaxe
langage
alcôve
-
programmer
en
PHP
principal
constant
définir
par
PHP
être
suivant
:
–
__FILE__
:
nom
fichier
exécuter
,
–
__LINE__
:
numéro
de
ligne
être
exécuter
,
–
PHP_VERSION
:
présentation
de
version
PHP
utiliser
(
:
3.0.8-dev
)
,
–
PHP_OS
:
système
d
’
exploitation
utiliser
par
machine
faire
tourner
PHP
(
:
Linux
)
,
–
TRUE
:
vrai
,
–
FALSE
:
faux
,
–
E_
*
:
gestion
erreur
(
cf
.
section
correspondant
)
.
syntaxe
langage
alcôve
-
programmer
en
PHP
opérateur
opérateur
arithmétique
:
–
addition
:
$
avoir
+
$
b
,
–
soustraction
:
$
avoir
-
$
b
,
–
multiplication
:
$
avoir
*
$
b
,
–
division
:
$
avoir
/
$
b
,
–
modulo
(
rester
de
division
entier
)
:
$
avoir
%
$
b
.
syntaxe
langage
alcôve
-
programmer
en
PHP
L
’
opérateur
sur
chaîne
de
caractère
:
–
concaténation
:
chaine1
.
chaine2
:
$
jour
=
`
`
lundi
'
'
;
echo
’
être|sommer
’
.
$
jour
.
`
`
!
'
'
;
affiche
être|sommer
lundi
!
syntaxe
langage
alcôve
-
programmer
en
PHP
opérateur
sur
bit
:
–
bit
à
bit
:
$
avoir
&
$
b
,
–
bit
à
bit
:
$
avoir
|
$
b
,
–
OU-Exclusif
/
XOR
bit
à
bit
:
$
avoir
ˆ
$
b
,
–
bit
à
bit
:
˜
$
avoir
,
–
décalage
à
droit|droite
de
$
b
bit
:
$
avoir
>
>
$
b
,
–
décalage
à
gauche
de
$
b
bit
:
$
avoir
<
<
$
b
.
syntaxe
langage
alcôve
-
programmer
en
PHP
opérateur
logique
:
–
(
vrai
$
avoir
$
b
vrai
)
:
$
avoir
and
$
b
,
$
avoir
&
&
$
b
.
–
(
vrai
$
avoir
$
b
vrai
(
s
)
)
:
$
avoir
or
$
b
,
$
avoir
|
|
$
b
.
–
OU-Exclusif
/
XOR
(
vrai
seul
$
avoir
$
b
vrai
)
:
$
avoir
xor
$
b
,
–
(
vrai
$
avoir
être
faux
)
:
!
$
avoir
.
syntaxe
langage
alcôve
-
programmer
en
PHP
opérateur
d
’
affectation
:
–
l
’
opérateur
d
’
affectation
simple
être
signe
=
,
–
signifier
`
`
égal
à
'
'
l
’
opérande
à
gauche
signe
=
voir
affecter
de
valeur
de
l
’
opérande
de
droit|droite
,
–
valeur
retourner
par
expression
d
’
assignement
être
valeur
assigner
,
:
$
avoir
=
(
$
b
=
)
+
;
#
$
avoir
valoir
$
b
valoir
syntaxe
langage
alcôve
-
programmer
en
PHP
–
exister
en
opérateur
combiner
pour
opérateur
arithmétique
,
opérateur
bit
à
bit
l
’
opérateur
de
concaténation
,
+
=
-
=
*
=
/
=
%
=
.
=
&
=
|
=
ˆ
=
<
<
=
>
>
=
˜
=
–
permettre
d
’
utiliser
valeur
d
’
variable
dans
expression
d
’
affecter
résultat
de
expression
à
variable
,
:
$
toto
+
=
#
équivaloir
à
$
toto
=
$
toto
+
syntaxe
langage
alcôve
-
programmer
en
PHP
–
l
’
opérateur
++
être
équivalent
à
+
=
,
–
l
’
opérateur
--
être
équivalent
à
-
=
,
–
deux
opérateur
pouvoir
être
placer
avant
(
pré-exécution
)
(
post-exécution
)
variable
à
s
’
appliquer
.
:
$
toto
=
;
echo
++
$
toto
;
#
afficher
echo
$
toto++
;
#
afficher
echo
$
toto
;
#
affiche
syntaxe
langage
alcôve
-
programmer
en
PHP
opérateur
de
comparaison
:
–
égal
à
:
$
avoir
=
=
$
b
,
–
différent
de
:
$
avoir
!
=
$
b
,
–
supérieur
à
:
$
avoir
>
$
b
,
–
inférieur
à
:
$
avoir
<
$
b
,
–
supérieur
égal
à
:
$
avoir
>
=
$
b
,
–
inférieur
égal
à
:
$
avoir
<
=
$
b
.
syntaxe
langage
alcôve
-
programmer
en
PHP
L
’
opérateur
ternaire
:
–
issu
langage
C
,
–
(
condition
)
?
(
expression1
)
:
(
expression2
)
;
,
–
renvoyer
expression1
condition
être
vrai
expression2
dans
cas
contraire
.
:
echo
$
toto
=
=
?
`
`
nul
'
'
:
`
`
nul
'
'
;
#
affiche
nul
$
toto
valoir
nul
section
alcôve
-
programmer
en
PHP
structure
de
contrôle
structure
de
contrôle
alcôve
-
programmer
en
PHP
objectif
de
section
introduction
;
instruction
conditionnel
;
boucle
;
inclusion
.
structure
de
contrôle
alcôve
-
programmer
en
PHP
introduction
script
PHP
être
suite
d
’
instruction
;
instruction
pouvoir
être
:
–
assignement
,
–
appel
de
fonction
,
–
instruction
conditionnel
,
–
instruction
faire
(
instruction
vide
)
.
instruction
terminer
par
point
virguler
(
;
)
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
instruction
pouvoir
être
regrouper
en
bloc
,
délimiter
par
accolade
(
{
...
}
)
;
bloc
être
considérer
instruction
;
différent
type
d
’
instruction
être
décrire
dans
chapitre
.
structure
de
contrôle
alcôve
-
programmer
en
PHP
instruction
conditionnel
L
’
instruction
if
être
important
instruction
de
langage
,
PHP
inclure
;
permettre
l
’
exécution
conditionnel
d
’
partie
de
code
;
fonctionnalité
de
l
’
instruction
if
être
même
en
PHP
qu
’
en
C
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
if
(
condition
)
{
#
instruction
à
exécuter
condition
être
vrai
...
}
chaine
de
caractère
contenir
être
évaluer
faux
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
souhaiter
exécuter
instruction
condition
être
remplir
,
autre
instruction
condition
n
’
être
remplir
;
C
’
être
rôle
else
;
prototype
:
if
(
condition
)
{
#
instruction
à
exécuter
condition
être
vrai
...
}
else
{
#
instruction
à
exécuter
condition
être
faux
...
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
elseif
permettre
,
l
’
expression
else
,
d
’
exécuter
instruction
après
if
dans
cas
dernier
être
évaluer
faux
;
à
différence
de
l
’
expression
else
,
n
’
exécuter
instruction
l
’
expression
condionnelle
elseif
être
évaluer
vrai
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
if
(
condition1
)
{
#
instruction
à
exécuter
condition1
être
vrai
...
}
elseif
(
condition2
)
{
#
instruction
à
exécuter
condition2
être
vrai
...
}
elseif
(
condition3
)
{
#
instruction
à
exécuter
condition3
être
vrai
...
...
}
else
{
#
instruction
à
exécuter
condition
n
’
être
vrai
...
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
syntaxe
if
venir
de
voir
être
hériter
langage
C
;
adapter
pour
mélanger
code
PHP
HTML
;
PHP
proposer
autre
syntaxe
pour
if
permettre
d
’
améliorer
lisibilité
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototyper
simplifier
:
if
(
condition1
)
:
#
instruction
à
exécuter
condition1
être
vrai
...
elseif
(
condition2
)
:
#
instruction
à
exécuter
condition2
être
vrai
...
elseif
(
condition3
)
:
#
instruction
à
exécuter
condition3
être
vrai
...
...
else
:
#
instruction
à
exécuter
condition
n
’
être
vrai
...
endif
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
:
if
(
$
type
=
=
`
`
femme
'
'
)
{
echo
`
`
bonjour
Madame
'
'
;
}
elseif
(
$
type
=
=
`
`
Homme
'
'
)
{
echo
`
`
bonjour
Monsieur
'
'
;
}
else
{
echo
`
`
bonjour
,
être
bizarre
!
'
'
;
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
boucler
boucle
while
être
moyen
simple
d
’
implémenter
boucle
en
PHP
;
boucle
comporter
de
même
manière
qu
’
en
C
:
instruction
être
exécuter
l
’
expression
être
vrai
;
valeur
de
l
’
expression
être
vérifier
à
début
de
boucle
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
valeur
changer
durant
l
’
exécution
de
l
’
instruction
,
l
’
exécution
s
’
arrêter
qu
’
à
fin
de
l
’
itération
;
avec
if
,
PHP
définir
syntaxe
simplifier
,
en
de
hériter
langage
C
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
while
(
condition
)
{
#
instruction
à
exécuter
condition
être
vrai
...
}
prototyper
simplifier
:
while
(
condition
)
:
#
instruction
à
exécuter
condition
être
vrai
...
endwhile
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
:
compter
jusqu
’
à
$
i
=
;
while
(
$
i
<
=
)
{
echo
`
`
$
i
`
`
;
$
i++
;
}
affiche
.
structure
de
contrôle
alcôve
-
programmer
en
PHP
boucle
do
.
.
while
ressembler
à
boucle
while
;
différence
être
l
’
expression
être
tester
à
fin
de
itération
lieu
début
;
premier
itération
de
boucle
être
exécuter
;
n
’
avoir
qu
’
syntaxe
possible
pour
boucle
do
.
.
while
être
,
,
hériter
langage
C
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
do
{
#
instruction
à
exécuter
premier
fois
condition
être
vrai
...
}
while
(
condition
)
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
:
compter
jusqu
’
à
$
i
=
;
do
{
echo
`
`
$
i
`
`
;
$
i++
;
}
while
(
$
i
<
=
)
;
affiche
.
structure
de
contrôle
alcôve
-
programmer
en
PHP
boucle
for
être
,
en
PHP
en
C
,
boucle
complexe
puissant
;
fonctionner
boucle
for
langage
C
;
prototype
:
for
(
expression1
;
condition
;
expression2
)
{
#
instruction
à
exécuter
condition
être
vrai
...
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
expression1
être
évaluer
(
exécuter
)
qu
’
arriver
début
de
boucle
;
début
de
itération
,
condition
être
évaluer
;
–
être
vrai
,
boucle
continu
instruction
être
à
nouveau
exécuter
,
–
être
faux
,
l
’
exécution
de
boucle
s
’
arrêter
.
à
fin
de
itération
,
l
’
expression2
être
évaluer
(
exécuter
)
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
expression
/
condition
pouvoir
être
laisser
vide
(
-
>
attention
boucle
infini
)
;
avec
if
while
,
PHP
définir
syntaxe
simplifier
,
en
de
hériter
langage
C
;
prototyper
simplifier
:
for
(
expression1
;
condition
;
expression2
)
:
#
instruction
à
exécuter
condition
être
vrai
...
endfor
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
:
compter
jusqu
’
à
for
(
$
i
=
;
$
i
<
=
;
$
i++
)
{
echo
`
`
$
i
`
`
;
}
Ex2
:
compter
jusqu
’
à
for
(
$
i
=
;
$
i
<
=
;
print
`
`
$
i
`
`
,
$
i++
)
;
Ex3
:
compter
jusqu
’
à
for
(
$
i
=
;
$
i
<
=
;
print
$
i++
)
;
exemple
afficher
.
structure
de
contrôle
alcôve
-
programmer
en
PHP
PHP4
définir
boucle
foreach
,
en
Perl
,
pour
réaliser
boucle
sur
élément
d
’
tableau
;
en
PHP3
pouvoir
réaliser
l
’
équivaloir
avec
boucle
while
fonction
list
(
)
each
(
)
avoir
voir
;
:
afficher
argument
d
’
formulaire
POST
while
(
list
(
$
cle
,
$
valeur
)
=
each
(
$
HTTP_POST_VARS
)
)
{
echo
`
`
$
cle
=
>
$
valeur
,
`
`
;
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
avec
l
’
instruction
foreach
boucle
devenir
:
foreach
(
$
HTTP_POST_VARS
avoir
$
cle
=
>
$
valeur
)
{
echo
`
`
$
cle
=
>
$
valeur
,
`
`
;
}
,
l
’
vouloir
récupérer
valeur
:
foreach
(
$
HTTP_POST_VARS
avoir
$
valeur
)
{
echo
`
`
$
valeur
,
`
`
;
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
break
permettre
de
sortir
d
’
boucle
à
n
’
importer
moment
;
:
compter
jusqu
’
à
for
(
$
i
=
,
,
$
i++
)
{
if
(
$
i
>
)
break
;
echo
`
`
$
i
`
`
;
}
afficher
.
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
continu
permettre
d
’
ignorer
instruction
restant
dans
boucle
de
passer
à
l
’
itération
suivant
;
:
compter
par
jusqu
’
à
for
(
$
i
=
,
$
i
<
=
,
$
i++
)
{
if
(
$
i
%
)
continu
;
#
$
i
impair
echo
`
`
$
i
`
`
;
}
afficher
.
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
switch
équivaloir
à
serie
d
’
instruction
if
.
.
elseif
.
.
elseif
...
.
else
;
être
utiliser
pour
comparer
variable
(
expression
)
avec
grand
nombre
de
valeur
différent
d
’
exécuter
différent
partie
de
code
suivre
valeur
à
être
égal
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
prototype
:
switch
(
expression
)
{
case
resultat1
:
#
instruction
à
exécuter
l
’
expression
valoir
resultat1
...
break
;
case
resultat2
:
#
instruction
à
exécuter
l
’
expression
valoir
resultat2
...
break
;
...
default
:
#
instruction
à
exécuter
en
dernier
recours
...
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
L
’
instruction
switch
exécuter
clause
dans
l
’
ordre
d
’
écriture
;
être
exécuter
ligne
par
ligne
;
code
n
’
être
exécuter
jusqu
’
à
premier
case
être
vérifier
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
Lorsqu
’
trouver
premier
case
vérifier
,
PHP
exécuter
instruction
correspondant
continu
jusqu
’
à
fin
bloc
switch
;
pour
reproduire
fonctionnement
d
’
if
.
.
elseif
.
.
elseif
...
.
else
,
falloir
terminer
case
par
break
;
pouvoir
définir
case
exécuter
par
défaut
(
équivalent
else
)
grâce
à
default
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
:
switch
(
$
type
)
{
case
`
`
femme
'
'
:
echo
`
`
bonjour
Madame
'
'
;
break
;
case
`
`
Homme
'
'
:
echo
`
`
bonjour
Monsieur
'
'
;
break
;
default
:
echo
`
`
bonjour
,
être
bizarre
!
'
'
;
}
structure
de
contrôle
alcôve
-
programmer
en
PHP
inclusion
fonction
require
(
)
substituer
même
avec
contenu
fichier
spécifier
en
argument
;
substitution
s
’
opérer
avant
l
’
interprétation
code
;
ressembler
à
#
include
C
;
l
’
utiliser
sein
d
’
boucle
,
c
’
être
fichier
qu
’
être
à
premier
itération
être
réutiliser
à
itération
(
s
’
avoir
changer
entre
temps
)
;
de
,
être
déconseiller
d
’
utiliser
require
(
)
avec
nom
de
fichier
dynamique
(
contenir
variable
)
;
structure
de
contrôle
alcôve
-
programmer
en
PHP
fonction
include
(
)
inclure
évaluer
fichier
spécifier
en
argument
;
être
faire
à
fois
fonction
être
rencontrer
;
pouvoir
utiliser
fonction
sein
d
’
boucle
pour
inclure
fichier
différent
à
fois
par
exemple
(
:
include
(
`
`
toto_
$
i
'
'
)
;
)
.
section
alcôve
-
programmer
en
PHP
fonction
fonction
alcôve
-
programmer
en
PHP
objectif
de
section
présentation
fonction
PHP
;
valeur
de
retour
;
argument
.
fonction
alcôve
-
programmer
en
PHP
présentation
fonction
PHP
fonction
pouvoir
être
définir
en
utiliser
syntaxe
suivant
:
function
ma_fonction
(
$
arg_1
,
$
arg_2
,
...
,
$
arg_n
)
{
#
corps
de
fonction
...
return
$
valeur_de_retour
;
}
code
PHP
correct
syntaxiquement
pouvoir
apparaître
dans
fonction
dans
définition
de
classe
;
en
PHP3
fonction
devoir
être
définir
avant
d
’
être
utiliser
(
langage
C
)
.
pouvoir
être
définir
n
’
importer
en
PHP4
.
fonction
alcôve
-
programmer
en
PHP
valeur
de
retour
valeur
être
renvoyer
en
utiliser
instruction
de
retour
optionnel
;
type
de
variable
pouvoir
être
renvoyer
(
tableau
objet
comprendre
)
;
:
function
carre
(
$
nombre
)
{
return
$
nombre
*
$
nombre
;
}
echo
carre
(
)
;
#
afficher
valeur
fonction
alcôve
-
programmer
en
PHP
pouvoir
renvoyer
valeur
en
même
temps
pouvoir
obtenir
résultat
identique
en
renvoyer
tableau
;
:
function
couleur
(
)
{
return
array
(
`
`
cœur
'
'
,
`
`
pique
'
'
,
`
`
trèfle
'
'
,
'
'
carreau
'
'
)
;
}
list
(
$
c1
,
$
c2
,
$
c3
,
$
c4
)
=
couleur
(
)
;
fonction
alcôve
-
programmer
en
PHP
PHP4
permettre
retour
de
fonction
par
référence
;
mécanisme
être
utile
l
’
chercher
à
utiliser
fonction
pour
trouver
variable
l
’
vouloir
lier
;
à
différence
passage
par
référence
,
falloir
utiliser
un
&
à
deux
endroit
:
–
pour
indiquer
l
’
retourner
référence
(
copie
à
l
’
habitude
)
,
–
pour
indiquer
qu
’
liaison
à
référence
simple
assignement
de
variable
devoir
avoir
lieu
avec
variable
de
retour
.
fonction
alcôve
-
programmer
en
PHP
:
function
&
trouve_variable
(
$
param
)
{
#
...
recherche
de
variable
$
toto
...
return
$
toto
;
}
$
titi
=
&
trouve_variable
(
$
tata
)
;
$
titi-
>
x
=
;
propriété
de
l
’
objet
retourner
par
fonction
trouve_variable
(
)
être
lier
à
$
titi
.
s
’
agir
d
’
copie
de
$
toto
.
fonction
alcôve
-
programmer
en
PHP
argument
information
pouvoir
être
passer
à
fonction
en
utiliser
tableau
d
’
argument
élément
être
séparer
par
virgule
;
élément
pouvoir
être
variable
constant
;
PHP
supporter
:
–
passage
d
’
argument
par
valeur
(
méthode
par
défaut
)
,
–
passage
d
’
argument
par
référence
,
–
valeur
par
défaut
argument
.
liste
d
’
argument
nombre
être
variable
fonctionner
en
PHP
résultat
similaire
pouvoir
être
obtenir
en
utiliser
tableau
;
fonction
alcôve
-
programmer
en
PHP
passage
d
’
argument
par
valeur
:
C
’
être
méthode
par
défaut
;
variable
être
affecter
par
changement
sein
de
fonction
;
pouvoir
changer
valeur
argument
sein
de
fonction
sans
avoir
répercussion
à
l
’
extérieur
de
;
fonction
alcôve
-
programmer
en
PHP
:
function
ajoute_deux
(
$
nombre
)
{
$
nombre
+
=
;
echo
$
nombre
;
}
$
toto
=
;
ajoute_deux
(
$
toto
)
;
#
afficher
echo
$
toto
;
#
affiche
fonction
alcôve
-
programmer
en
PHP
passage
d
’
argument
par
référence
:
variable
être
affecter
par
changement
sein
de
fonction
;
deux
possibilité
:
–
de
façon
permanent
ajouter
un
&
devant
nom
de
variable
dans
définition
de
fonction
,
–
de
façon
ponctuel
ajouter
un
&
devant
nom
de
variable
de
l
’
appel
à
fonction
.
fonction
alcôve
-
programmer
en
PHP
:
function
retranche_deux
(
&
$
nombre
)
{
$
nombre
-
=
;
echo
$
nombre
;
}
$
toto
=
;
ajoute_deux
(
&
$
toto
)
;
#
afficher
echo
$
toto
;
#
afficher
retranche_deux
(
$
toto
)
;
#
afficher
echo
$
toto
;
#
affiche
fonction
alcôve
-
programmer
en
PHP
valeur
par
défaut
argument
:
PHP
permettre
,
en
C++
,
de
spécifier
valeur
par
défaut
pour
argument
de
type
scalaire
;
suffire
de
spécifier
valeur
par
défaut
avec
=
dans
déclaration
de
fonction
;
valeur
devoir
être
constant
(
de
variable
d
’
attribut
de
classe
)
argument
par
défaut
devoir
être
dernier
dans
liste
;
fonction
alcôve
-
programmer
en
PHP
:
function
annotation
(
$
type
=
`
`
'
'
)
{
echo
`
`
avoir
$
type
travailler
'
'
;
}
annotation
(
`
`
mal
'
'
)
;
#
afficher
avoir
travailler
annotation
(
)
;
#
afficher
avoir
travailler
section
alcôve
-
programmer
en
PHP
programmation
orienter
objet
programmation
orienter
objet
alcôve
-
programmer
en
PHP
objectif
de
section
rappel
sur
programmation
orienter
objet
;
classe
en
PHP
;
objet
en
PHP
;
particularité
de
PHP
.
programmation
orienter
objet
alcôve
-
programmer
en
PHP
rappel
sur
programmation
orienter
objet
POO
-
>
raisonner
en
terme
de
fonctionnalité
de
propriété
en
terme
de
traitement
;
L
’
encapsulation
:
L
’
objet
représenter
abstraction
d
’
entité
abstrait
concret
regrouper
en
même
structure
donnée
traitement
;
objet
posséder
caractéristique
fonctionnalité
l
’
utiliser
sans
savoir
être
implémenter
(
:
téléphone
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
caractéristique
/
fonctionnalité
utile
pour
manipulation
de
l
’
objet
utile
à
fonctionnement
être
masquer
à
l
’
utilisateur
(
:
composant
interne
téléphone
)
;
L
’
héritage
:
objet
pouvoir
dériver
d
’
autre
objet
posséder
caractéristique
/
fonctionnalité
supplémentaire
en
hériter
caractéristique
/
fonctionalités
de
aïeul
(
:
téléphone
sans
fils|fil
être
téléphone
particulier
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
polymorphisme
:
Lorsqu
’
invoquer
méthode
d
’
objet
,
programme
savoir
retrouver
méthode
parmis
aïeux
de
l
’
objet
n
’
être
définir
pour
qu
’
avoir
hériter
(
:
méthode
`
`
décrocher
téléphone
'
'
pour
un
sans
fils|fil
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
à
création
(
instanciation
)
de
l
’
objet
,
méthode
(
porter
même
nom
classe
)
être
appeller
:
c
’
être
constructeur
;
,
à
destruction
de
l
’
objet
,
méthode
(
porter
même
nom
classe
précéder
d
’
˜
)
être
appeller
:
c
’
être
destructeur
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
classe
être
collection
de
variable
(
attribut
)
de
fonction
(
méthode
)
s
’
appliquer
à
variable
;
objet
être
instance
d
’
classe
.
type
de
donnée
être
classe
d
’
objet
à
appartenir
(
$
toto
=
;
être
instance
type
entier
)
.
programmation
orienter
objet
alcôve
-
programmer
en
PHP
classe
en
PHP
en
PHP
,
définir
classe
d
’
objet
de
façon
suivant
:
macler
{
#
attribut
var
$
monAttribut
;
#
méthode
function
maMethode
(
$
argument
)
{
#
...
traitement
de
$
monAttribut
avec
$
argument
...
}
}
programmation
orienter
objet
alcôve
-
programmer
en
PHP
objet
en
PHP
être
possible
de
spécifier
variable
objet
de
façon
suivant
:
$
monObjet
=
new
macler
;
accéder
à
attribut
à
méthode
de
façon
suivant
:
$
monObjet-
>
monAttribut
=
`
`
toto
'
'
;
$
monObjet-
>
maMethode
(
)
;
programmation
orienter
objet
alcôve
-
programmer
en
PHP
particularité
de
PHP
attribut
méthode
être
public
;
objet
être
libérer
être
utiliser
(
Garbage
Collector
)
;
de
destructeur
.
programmation
orienter
objet
alcôve
-
programmer
en
PHP
:
caddie
class
caddie
{
var
$
elements
;
#
élément
de
caddie
#
constructeur
ajouter
cadeau
à
nouveau
caddie
function
caddie
(
)
{
$
this-
>
ajouter
(
,
`
`
cadeau
'
'
)
;
}
#
ajout
de
$
nombre
article
de
type
$
type
caddie
function
ajouter
(
$
nombre
,
$
type
)
{
$
this-
>
elements
[
$
type
]
+
=
$
nombre
;
}
programmation
orienter
objet
alcôve
-
programmer
en
PHP
#
retraire
de
$
nombre
article
de
type
$
type
caddie
function
enleve
(
$
nombre
,
$
type
)
{
if
(
$
this-
>
elements
[
$
type
]
>
$
nombre
)
{
$
this-
>
elements
[
$
type
]
-
=
$
nombre
;
return
true
;
}
else
{
return
false
;
}
}
}
chapitre
alcôve
-
programmer
en
PHP
fonctionnalité
essentiel
fonctionnalité
essentiel
alcôve
-
programmer
en
PHP
objectif
chapitre
gestion
connexion
utilisateur
;
gestion
session
;
autre
fonctionnalité
essentiel
.
section
alcôve
-
programmer
en
PHP
connexion
utilisateur
connexion
utilisateur
alcôve
-
programmer
en
PHP
objectif
de
section
gestion
utilisateur
-
authentification
;
gestion
connexion
.
connexion
utilisateur
alcôve
-
programmer
en
PHP
gestion
utilisateur
-
authentification
fonction
d
’
authentification
HTTP
être
disponible
PHP
être
exécuter
module
apache
(
CGI
)
;
utiliser
fonction
header
(
)
pour
demander
authentification
(
Authentication
Required
)
client
,
générer
l
’
apparition
d
’
fenêtre
de
demande
de
nom
d
’
utilisateur
de
mot
de
passe
;
connexion
utilisateur
alcôve
-
programmer
en
PHP
fois
champ
avoir
être
remplir
,
l
’
URL
être
de
nouveau
appelé
avec
variable
suivant
mettre
à
jour
:
–
$
PHP_AUTH_USER
:
utilisateur
,
–
$
PHP_AUTH_PW
:
mot
de
passe
,
–
$
PHP_AUTH_TYPE
:
type
d
’
authentification
.
,
seul
l
’
authentification
basique
(
basic
)
être
supporter
;
connexion
utilisateur
alcôve
-
programmer
en
PHP
:
page
d
’
authentification
<
?
php
if
(
!
isset
(
$
PHP_AUTH_USER
)
)
{
Header
(
`
`
WWW-Authenticate
:
basic
realm
=
’
titre
’
'
'
)
;
Header
(
`
`
HTTP
/
Unauthorized
'
'
)
;
echo
`
`
texte
à
envoyer
client
en
cas
d
’
annulation
'
'
;
exit
;
}
else
{
echo
`
`
bonjour
$
PHP_AUTH_USER
.
<
br
>
'
'
;
echo
`
`
mot
de
passe
être
$
PHP_AUTH_PW
.
'
'
;
}
?
>
connexion
utilisateur
alcôve
-
programmer
en
PHP
gestion
connexion
statut
connexion
être
conserver
en
interne
par
PHP
;
avoir
trois
état
possible
:
–
/
normal
:
script
PHP
travailler
,
–
/
ABORTED
:
client
distant
s
’
être
déconnecter
,
–
/
TIMEOUT
:
durée
maximal
d
’
exécution
être
dépasser
.
connexion
utilisateur
alcôve
-
programmer
en
PHP
par
défaut
,
script
PHP
terminer
dès
client
déconnecter
pouvoir
changer
politique
de
différent
façon
:
–
continuer
script
client
être
en
activer
l
’
option
:
ignore_user_abort
dans
dns-remplacé
/
dns-remplacer
,
[
php3_ignore_user_abort
/
ignore_user_abort
dans
dns-remplacé
.
–
exécuter
fonction
de
fermeture
enregistrer
grâce
à
fonction
register_shutdown_function
(
)
.
connexion
utilisateur
alcôve
-
programmer
en
PHP
fonction
enregistrer
avec
register_shutdown_function
(
)
être
appeler
à
fin
script
terminer
;
pour
pouvoir
avoir
comportement
différent
suivre
l
’
état
script
de
finalisation
pouvoir
tester
l
’
état
déconnecter
script
avec
fonction
connection_aborted
(
)
;
fonction
connection_status
(
)
permettre
de
retourner
l
’
état
script
(
,
,
)
;
connexion
utilisateur
alcôve
-
programmer
en
PHP
pouvoir
modifier
délai
de
timeout
(
seconde|second
par
défaut
)
de
manière
:
–
fonction
set_time_limit
(
)
,
–
max_execution_time
dans
dns-remplacé
/
dns-remplacer
,
–
php3_max_execution_time
/
max_execution_time
dans
dns-remplacé
.
fonction
enregistrer
avec
register_shutdown_function
(
)
être
appeler
lorsqu
’
timeout
intervenir
;
pouvoir
tester
l
’
état
timeout
script
avec
fonction
connection_timeout
(
)
;
section
alcôve
-
programmer
en
PHP
gestion
session
gestion
session
alcôve
-
programmer
en
PHP
objectif
de
section
principe
;
session
avec
PHPlib
;
session
avec
PHP4
.
gestion
session
alcôve
-
programmer
en
PHP
principe
gestion
session
avec
PHP
être
moyen
de
sauver
information
entre
deux
accès
(
requête
HTTP
)
;
permettre
de
construire
application
personnaliser
,
d
’
accroître
fonctionnalité
de
site
;
,
gestion
session
n
’
être
inclure
dans
fonctionnalité
standard
de
PHP
jusqu
’
à
version
PHP4
;
bibliothèque
complémentaire
avoir
être
développer
pour
gérer
session
avec
PHP3
,
c
’
être
PHPlib
;
gestion
session
alcôve
-
programmer
en
PHP
session
avec
PHPlib
PHPlib
être
bibliothèque
PHP
libre
viser
à
faciliter
création
de
site
avec
PHP
;
être
utilisable
avec
PHP4
présenter
d
’
fonctionnalité
dernier
posséder
en
natif
;
composer
de
classe
de
fonction
permettre
:
–
suivi
session
,
–
l
’
utilisation
de
variable
persistant
niveau
utilisateur
niveau
session
,
–
l
’
authentification
gestion
permission
,
–
génération
rapide
de
code
HTML
...
gestion
session
alcôve
-
programmer
en
PHP
installation
:
–
récupérer
l
’
archiver
(
http
:
/
/
dns-remplacer
)
,
–
décompresser
dans
répertoire
quelconque
(
:
/
usr
/
lib
/
phplib
/
)
,
–
éditer
fichier
dns-remplacer
/
dns-remplacer
fixer
option
de
façon
suivant
:
magic_quotes_gpc
=
off
magic_quotes_runtime
=
off
magic_quotes_sybase
=
off
track_vars
=
auto_prepend_file
=
<
répertoire
contenir
dns-remplacer
>
include_path
=
<
répertoire
d
’
installation
>
gestion
session
alcôve
-
programmer
en
PHP
l
’
utilisation
de
PHPlib
,
falloir
créer
fichier
en
script
PHP
:
–
dns-remplacé
servir
à
définir
librairie
PHPlib
à
inclure
avant
fichier
,
–
dns-remplacé
servir
à
définir
classe
aller
être
utiliser
par
script
.
gestion
session
alcôve
-
programmer
en
PHP
pour
gérer
session
variable
persistant
,
librairie
servir
d
’
base
de
donnée
,
d
’
annuaire
LDAP
d
’
simple
fichier
;
base
de
donnée
différent
table
être
utiliser
par
script
utiliser
PHPlib
devoir
être
créer
par
soin
grâce
fichier
de
configuration
fournir
(
dans
/
usr
/
lib
/
phplib
/
stuff
/
)
;
:
base
de
donnée
MySQL
mysql
-h
<
ma_machine_hote
>
<
ma_base
>
<
create_
dns-remplacer
gestion
session
alcôve
-
programmer
en
PHP
pour
gérer
session
,
PHPlib
utiliser
identifier
être
transmettre
de
script
en
script
cours|cour
de
navigation
;
pour
session
sans
reprise
,
identifier
pouvoir
être
transmettre
dans
l
’
URL
;
pour
gérer
reprise
de
session
,
PHPlib
pouvoir
stocker
l
’
identifier
dans
cookie
qu
’
transmettre
client
à
fin
de
script
(
fonction
page_close
(
)
)
;
gestion
session
alcôve
-
programmer
en
PHP
PHPlib
définir
classe
pour
accéder
base
de
donnée
gérer
session
;
devoir
définir
propre
classe
dériver
classe
générique
de
PHPlib
;
classe
être
stocker
dans
fichier
dns-remplacé
;
gestion
session
alcôve
-
programmer
en
PHP
page
gérer
session
devoir
être
encadrer
par
:
–
page_open
(
array
(
`
`
sess
'
'
=
>
`
`
MaSession
'
'
)
)
,
–
page_close
(
)
;
souhaiter
utiliser
l
’
option
auto_prepend_file
pour
inclure
fichier
dns-remplacé
,
pouvoir
commencer
script
par
include
(
)
de
fichier
;
pour
rendre
variable
persistant
,
utiliser
méthode
register
(
)
de
classe
MaSession
;
gestion
session
alcôve
-
programmer
en
PHP
:
dns-remplacer
<
?
php
page_open
(
array
(
`
`
sess
'
'
=
>
`
`
MaSession
'
'
)
)
;
if
(
!
isset
(
$
toto
)
)
$
toto
=
;
print
++
$
toto
;
$
sess-
>
register
(
`
`
toto
'
'
)
;
page_close
(
)
;
?
>
gestion
session
alcôve
-
programmer
en
PHP
(
suite
)
:
dns-remplacer
<
?
php
MaBaseSql
extends
DB_Sql
{
var
$
host
=
`
`
ma_machine_hote
'
'
;
var
$
Database
=
`
`
ma_base
'
'
;
var
$
user
=
`
`
mon_utilisateur
'
'
;
var
$
Password
=
`
`
mon_password
'
'
;
}
class
MonContainerSql
extends
CT_Sql
{
var
$
database_class
=
`
`
MaBaseSql
'
'
;
var
$
database_table
=
`
`
ma_table
'
'
;
}
gestion
session
alcôve
-
programmer
en
PHP
class
MaSession
extends
session
{
var
$
classname
=
`
`
MaSession
'
'
;
var
$
mode
=
`
`
cookie
'
'
;
var
$
lifetime
=
;
var
$
that_class
=
`
`
MonContainerSql
'
'
;
}
?
>
gestion
session
alcôve
-
programmer
en
PHP
(
fin
)
:
dns-remplacer
<
?
php
if
(
!
is_array
(
$
_PHPLIB
)
)
$
_PHPLIB
[
`
`
libdir
'
'
]
=
`
`
'
'
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
db_
dns-remplacé
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
ct_
dns-remplacé
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
dns-remplacer
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
dns-remplacer
'
'
)
;
require
(
$
_PHPLIB
[
`
`
libdir
'
'
]
.
`
`
dns-remplacer
'
'
)
;
?
>
gestion
session
alcôve
-
programmer
en
PHP
session
avec
PHP4
principe
être
même
qu
’
avec
PHPlib
:
attribuer
à
nouveau
utilisateur
identificateur
de
session
(
SID
)
;
numéro
être
transmettre
sous
forme
de
cookie
dans
URLs
;
visiteur
accéder
à
page
,
PHP4
vérifier
identificateur
de
session
avoir
être
transmettre
avec
requête
;
gestion
session
alcôve
-
programmer
en
PHP
vérification
pouvoir
être
faire
de
trois
manière
différent
:
–
l
’
option
dns-remplacer
_start
être
activer
dans
dns-remplacé
,
–
par
l
’
appel
de
fonction
session_start
(
)
,
–
par
l
’
appel
de
fonction
session_register
(
)
.
dans
cas
numéro
de
session
être
valide
,
l
’
environnement
de
être
restaurer
;
gestion
session
alcôve
-
programmer
en
PHP
L
’
option
register_globals
de
dns-remplacé
autoriser
variable
global
à
être
sauvegarder
dans
session
;
:
<
?
php
session_register
(
`
`
toto
'
'
)
;
$
toto++
;
?
>
L
’
option
track_vars
de
dns-remplacé
(
être
bloquer
à
pour
version
de
PHP4
supérieur
à
)
autoriser
variable
de
$
HTTP_SESSION_VARS
à
être
sauvegarder
dans
session
;
:
<
?
php
session_register
(
`
`
toto
'
'
)
;
$
HTTP_SESSION_VARS
[
`
`
toto
'
'
]
++
;
?
>
gestion
session
alcôve
-
programmer
en
PHP
exister
deux
manière
pour
transmettre
numéro
de
session
sein
de
l
’
URL
:
–
grâce
à
constant
SID
être
chaîne
de
caractère
de
forme
session_name
=
session_id
(
vide
)
,
–
PHP4
avoir
être
compiler
avec
l
’
option
--
enable-trans-sid
.
gestion
session
alcôve
-
programmer
en
PHP
:
compteur
de
visite
<
?
php
session_register
(
`
`
compteur
'
'
)
;
$
compteur++
;
?
>
avoir
voir
page
<
?
echo
$
compteur
;
?
>
fois
.
<
!
--
<
?
=
SID
?
>
servir
à
conserver
numéro
de
session
cas
cookies
être
desactiver
--
>
pour
continuer
cliquer
<
à
href
=
'
'
dns-remplacer
?
<
?
=
SID
?
>
'
'
>
<
/
à
>
gestion
session
alcôve
-
programmer
en
PHP
fonction
utiliser
être
:
–
session_start
(
)
:
créer
restaurer
session
,
–
session_destroy
(
)
:
détruire
session
,
–
session_register
(
)
/
session_unregister
(
)
:
sauvegarde
/
oublier
variable
,
–
session_set_save_handler
(
)
:
permettre
de
définir
propre
fonction
de
sauvegarde
de
session
(
pour
stocker
donnée
dans
base
de
donnée
par
exemple
)
.
section
alcôve
-
programmer
en
PHP
autre
fonctionnalité
autre
fonctionnalité
alcôve
-
programmer
en
PHP
objectif
de
section
récupération
traitement
erreur
;
cookies
.
autre
fonctionnalité
alcôve
-
programmer
en
PHP
récupération
traitement
erreur
exister
type
d
’
erreur
d
’
alerte
PHP
:
–
E_ERROR
(
)
:
erreur
d
’
exécution
–
E_WARNING
(
)
:
alerte
–
E_PARSE
(
)
:
erreur
d
’
analyser
–
E_NOTICE
(
)
:
note
(
alerte
pouvoir
être
ignorer
)
pour
définir
niveau
d
’
erreur
,
ajouter
chiffre
erreur
l
’
souhaiter
prendre
en
compte
(
bitmask
par
défaut
=
+
+
)
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
niveau
pouvoir
être
changer
de
trois
manière
:
–
directif
error_reporting
dans
dns-remplacé
/
dns-remplacer
,
–
directif
php3_error_reporting
/
error_reporting
/
error_reporting
dans
dns-remplacé
,
–
fonction
error_reporting
(
)
.
autre
fonctionnalité
alcôve
-
programmer
en
PHP
expression
PHP
pouvoir
être
appeler
avec
préfixe
@
permettre
d
’
ignorer
rapport
d
’
erreur
pour
fonction
particulier
;
erreur
survenir
dans
un
expression
,
l
’
option
track_errors
être
activer
dans
dns-remplacé
/
dns-remplacer
,
retrouver
message
d
’
erreur
dans
variable
global
$
php_errormsg
;
fonction
error_reporting
(
)
établir
niveau
d
’
erreur
à
prendre
en
compte
renvoyer
l
’
ancien
niveau
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
fonction
error_log
(
)
envoyer
message
d
’
erreur
:
–
dans
logs
serveur
,
–
à
port
TCP
,
–
à
fichier
.
prendre
paramètre
:
–
message
:
message
devoir
être
envoyer
,
–
message_type
:
type
de
transmission
choisir
:
:
système
standard
de
log
de
PHP
,
:
mail
,
:
machine
distant
(
TCP
/
IP
)
,
:
fichier
local
.
:
error_log
(
`
`
alerte
rouge
'
'
,
,
'
'
webmaster
@
dns-remplacer
'
'
)
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
cookies
cookies
être
mécanisme
d
’
enregistrement
d
’
information
sur
disque
client
de
relecture
de
information
;
système
permettre
d
’
authentifier
de
suivre
visiteur
;
PHP
supporter
cookies
de
manière
transparent
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
pour
envoyer
cookie
,
utiliser
commande
setcookie
(
)
;
Cookies
faire
partie
de
l
’
entêter
HTTP
,
imposer
setcookie
(
)
appeler
avant
affichage
sur
client
(
header
(
)
)
;
avec
PHP4
,
pouvoir
contourner
limitation
en
bufferisant
sortie
standard
grâce
à
fonction
ob_start
(
)
en
libérer
grâce
à
fonction
ob_end_flush
;
pouvoir
indiquer
à
PHP4
de
bufferiser
sorti
grâce
à
l
’
option
output_buffering
de
dns-remplacé
ralentir
PHP4
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
cookies
être
envoyer
client
être
retourner
script
PHP
placer
dans
tableau
associatif
$
HTTP_COOKIE_VARS
;
seul
cookies
correspondre
nom
de
domaine
de
page
demander
être
envoyer
serveur
par
navigateur
;
pour
affecter
valeur
à
seul
cookie
falloir
ajouter
[
]
nom
cookie
;
autre
fonctionnalité
alcôve
-
programmer
en
PHP
:
cookie_
dns-remplacer
<
?
php
setcookie
(
`
`
MonCookie
'
'
,
`
`
contenu
'
'
,
time
(
)
+
)
;
?
>
<
HTML
>
<
body
>
<
H@card@
>
,
l
’
avoir
!
<
br
>
aller
sur
page
<
avoir
href
=
`
`
cookie_
dns-remplacé
'
'
>
précédent
<
/
avoir
>
.
<
/
H1
>
<
/
body
>
<
/
HTML
>
autre
fonctionnalité
alcôve
-
programmer
en
PHP
(
suite
)
:
cookie_
dns-remplacer
<
HTML
>
<
body
>
<
H@card@
>
<
?
php
if
(
isset
(
$
HTTP_COOKIE_VARS
[
`
`
MonCookie
'
'
]
)
)
:
?
>
cookie
MonCookie
contenir
:
<
?
php
print
$
HTTP_COOKIE_VARS
[
`
`
MonCookie
'
'
]
;
else
:
?
>
n
’
avoir
cookie
MonCookie
.
<
br
>
aller
chercher
<
avoir
href
=
'
'
cookie_
dns-remplacé
'
'
>
<
/
avoir
>
.
<
?
php
endif
;
?
>
<
/
H1
>
<
/
body
>
<
/
HTML
>
chapitre
alcôve
-
programmer
en
PHP
utilisation
avancer
utilisation
avancer
alcôve
-
programmer
en
PHP
objectif
chapitre
interopérabilité
avec
applicatifs
;
traitement
chaîne
de
caractère
;
fonctionnalité
utile
.
section
alcôve
-
programmer
en
PHP
interopérabilité
avec
applicatifs
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
objectif
de
section
utilisation
SGBDs
;
interfaçage
avec
l
’
api
apache
;
utilisation
de
LDAP
.
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
utilisation
SGBDs
grand
nombre
de
S
ystèmes
de
G
estion
de
B
ases
de
D
onnaître
(
SGBD
)
être
supporter
par
PHP
;
plupart
être
accessible
via
langage
SQL
(
S
tructured
Q
uery
L
angage
)
;
permettre
,
nom
l
’
indique
,
de
réaliser
requête
sur
base
de
donnée
de
façon
structurer
standardiser
;
L
’
utilisation
base
donnée
être
clé
de
voûte
site
dynamique
de
commerce
électronique
;
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
baser
SQL
supporter
:
Adabas
D
Empress
IBM
DB@card@
Informix
Interbase
mSQL
MySQL
ODBC
(
Access
,
MS-SQL
,
iODBC
...
)
oracle
PostgreSQL
Raima
Velocis
Solid
Sybase
autre
SGBD
supporter
:
–
dBase
,
–
filePro
(
lecture
seul
)
,
–
dbm
(
ndbm
,
gdbm
,
Berkeley
db
)
.
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
principal
commande
SQL
:
–
CREATE
table
:
créer
nouveau
table
,
–
DELETE
:
supprimer
ligne
d
’
table
,
–
insert
:
insérer
nouveau
ligne
dans
table
,
–
select
:
récupérer
ligne
d
’
table
d
’
vue
,
–
UPDATE
:
modifier
valeur
dans
champ
.
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
:
création
alimentation
d
’
table
CREATE
tabler
(
Secu
INT8
NOT
NULL
PRIMARY
KEY
,
nom
VARCHAR
(
)
NOT
NULL
,
Prenom
VARCHAR
(
)
NOT
NULL
)
insert
INTO
valoir
(
’
’
,
’
Smith
’
,
’
John
’
)
insert
INTO
valoir
(
’
’
,
’
Gates
’
,
’
bill
’
)
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
(
suite
)
:
affichage
de
table
suppression
d
’
entrée
select
*
FROM
Secu
nom
Prenom
Smith
John
Gates
bill
DELETE
FROM
personne
WHERE
nom
=
’
Gates
’
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
base
SQL
posséder
propre
api
mécanisme
de
consultation
être
même
pour
:
–
connexion
serveur
de
base
de
donnée
(
machine
,
utilisateur
,
mot
de
passe
)
,
–
sélection
de
base
à
utiliser
(
nom
de
base
)
,
–
requêter
SQL
,
–
exploitation
de
requête
(
affichage
...
)
,
–
déconnexion
.
sûr
avant
d
’
utiliser
base
de
donnée
particulier
,
falloir
s
’
assurer
librairie
correspondant
être
charger
dans
PHP
;
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
pour
base
de
donnée
MySQL
,
falloir
ajouter
ligne
extension
=
dns-remplacer
dans
fichier
dns-remplacer
/
dns-remplacer
vérifier
fichier
dns-remplacé
trouver
dans
répertoire
extension_dir
;
fonction
MySQL
utiliser
être
suivant
:
–
mysql_connect
(
)
:
ouvrir|ouvrer
connexion
à
serveur
MySQL
,
–
mysql_list_
*
(
)
:
retourner
liste
base
,
table
champ
disponible
sur
serveur
,
–
mysql_select_db
(
)
:
selectionne
base
de
donnée
sur
serveur
,
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
–
mysql_query
(
)
:
envoyer
requête
SQL
sur
base
de
donnée
actif
sur
serveur
renvoyer
identifier
de
résultat
:
mysql_result
(
)
:
exploiter
résultat
,
mysql_fetch_
*
(
)
:
exploiter
manipuler
résultat
,
mysql_field_
*
(
)
:
permettre
de
naviguer
sein
résultat
.
–
mysql_close
(
)
:
connexion
serveur
MySQL
(
faire
par
défaut
à
fin
script
)
.
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
être
possible
de
réaliser
connection
persistant
à
serveur
MySQL
en
utiliser
fonction
mysql_pconnect
(
)
;
connexion
être
fermer
à
fin
script
;
accélérer
script
connexion
à
base
être
fréquent
;
connexion
être
refermer
après
temps
d
’
inutilisation
;
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
:
<
?
php
mysql_pconnect
(
`
`
dns-remplacer
'
'
,
`
`
username
'
'
,
'
'
password
'
'
)
;
mysql_select_db
(
`
`
ma_base
'
'
)
;
$
resultat
=
mysql_query
(
`
`
select
*
FROM
ma_table
'
'
)
;
if
(
$
resultat
)
:
?
>
<
table
>
<
TR
>
<
TH
>
nom
<
/
TH
>
<
TH
>
description
<
/
TH
>
<
/
TR
>
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
<
?
php
while
(
$
tableau
=
mysql_fetch_array
(
$
resultat
)
)
echo
`
`
<
TR
>
<
TD
>
'
'
,
$
tableau
[
`
`
nom
'
'
]
,
`
`
<
/
TD
>
<
TD
>
'
'
,
$
tableau
[
`
`
descr
'
'
]
,
`
`
<
/
TD
>
<
/
TR
>
\n
'
'
;
?
>
<
/
table
>
<
?
php
else
:
echo
`
`
table
être
vide
'
'
;
endif
;
?
>
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
exister
outil
d
’
administration
de
base
de
donnée
écrire
en
PHP
;
–
PHPMyAdmin
pour
base
MySQL
(
http
:
/
/
dns-remplacer
/
phpMyAdmin
/
)
,
–
PHPPgAdmin
pour
base
PostgreSQL
(
http
:
/
/
dns-remplacer
/
phpPgAdmin
/
)
.
outil
être
utile
pour
créer
base
de
donnée
avant
de
utiliser
dans
script
PHP
;
être
pratique
pour
maintenir
base
;
outil
être
libre
,
coder
source
pouvoir
servir
de
référence
pour
accéder
base
de
donnée
avec
PHP
;
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
interfaçage
avec
l
’
api
apache
fonction
getallheaders
(
)
permettre
de
récupérer
en-tête
HTTP
correspondre
à
requête
courant
;
en-tête
être
stocker
dans
tableau
associatif
;
:
$
headers
=
getallheaders
(
)
;
while
(
list
(
$
header
,
$
valeur
)
=
each
(
$
headers
)
)
{
echo
`
`
$
header
:
$
valeur
<
BR
>
\n
'
'
;
}
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
utilisation
de
LDAP
L
ightweight
D
irectory
à
ccess
P
rotocol
;
protocole
normaliser
d
’
accès
service
d
’
annuaire
;
annuaire
être
équivalent
à
base
de
donnée
information
être
ranger
de
manière
hiérarchique
;
caractéristique
de
LDAP
:
–
organisation
global
,
–
standard
ouvert
,
–
extensible
paramétrable
,
–
stockage
de
donnée
hétérogène
,
–
sécuriser
.
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
LDAP
utiliser
syntaxe
à
nom
distinct
(
dn
:
distinguished
names
)
;
:
dn
signification
dn
=
`
`
cn
=
Linus
Torvalds
,
=
Devel
,
o
=
Transmeta
,
c
=
user
'
'
country
=
user
organization
=
Transmeta
organizationUnit
=
Devel
commonName
=
Linus
Torvalds
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
avant
de
pouvoir
utiliser
LDAP
avec
PHP
,
falloir
ajouter
ligne
extension
=
dns-remplacer
dans
dns-remplacé
/
dns-remplacer
vérifier
librairie
dns-remplacé
trouver
dans
répertoire
extension_dir
;
séquence
type
de
consultation
/
modification
d
’
base
LDAP
avec
PHP
prendre
forme
suivant
:
–
ldap_connect
(
)
:
établir
connexion
avec
serveur
LDAP
,
–
ldap_bind
(
)
:
liaison
authentification
sur
serveur
,
–
ldap_get_
*
(
)
/
ldap_add
(
)
/
ldap_modify
(
)
...
:
consultation
/
modification
de
base
,
–
ldap_close
(
)
:
déconnexion
.
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
:
recherche
de
dn
commançant
par
l
<
?
php
$
ds
=
ldap_connect
(
`
`
dns-remplacer
'
'
)
;
if
(
$
ds
)
{
ldap_bind
(
$
ds
)
;
$
sr
=
ldap_search
(
$
ds
,
`
`
=
Devel
,
o
=
Transmeta
,
c
=
user
'
'
,
`
`
dn
=
l
*
'
'
)
;
$
info
=
ldap_get_entrie
(
$
ds
,
$
sr
)
;
interopérabilité
avec
applicatifs
alcôve
-
programmer
en
PHP
for
(
$
i
=
;
$
i
<
$
info
[
`
`
count
'
'
]
;
$
i++
)
{
echo
`
`
dn
valoir
:
`
`
.
$
info
[
$
i
]
[
`
`
dn
'
'
]
.
`
`
<
br
>
'
'
;
echo
`
`
premier
entrée
cn
valoir
:
`
`
.
$
info
[
$
i
]
[
`
`
cn
'
'
]
[
]
.
`
`
<
br
>
'
'
;
echo
`
`
premier
email
valoir
:
`
`
.
$
info
[
$
i
]
[
`
`
mail
'
'
]
[
]
.
`
`
<
br
>
'
'
;
}
ldap_close
(
$
ds
)
;
}
else
{
echo
`
`
<
H@card@
>
impossible
de
connecter
serveur
LDAP
<
/
H4
>
'
'
;
}
?
>
section
alcôve
-
programmer
en
PHP
traitement
chaîne
de
caractère
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
objectif
de
section
manipulation
chaîne
de
caractère
;
expression
régulier
.
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
manipulation
chaîne
de
caractère
affichage
:
–
echo
(
)
:
affiche
un
chaîne
séparer
par
virgule
,
–
print
(
)
:
afficher
chaîne
,
–
printf
(
)
:
afficher
chaîne
selon
chaîne
de
formatage
(
langage
C
)
.
:
$
nom
=
`
`
toto
'
'
;
echo
`
`
bonjour
'
'
,
$
nom
;
#
afficher
bonjour
toto
print
`
`
bonjour
$
nom
'
'
;
#
afficher
bonjour
toto
printf
(
`
`
bonjour
%
s
'
'
,
$
nom
)
;
#
afficher
bonjour
toto
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
substitution
:
–
addslashes
(
)
:
ajouter
backslash
devant
caractère
spécial
,
–
stripslashes
(
)
:
enlever
backslashs
ajouter
par
fonction
addslashes
,
–
str_replace
(
)
:
remplacer
occurrence
d
’
chaîne
par
autre
,
:
print
addslashes
(
’
\
’
\
`
`
’
)
;
#
affiche
\
’
\
\
'
'
print
str_replace
(
`
`
toto
'
'
,
`
`
titi
'
'
,
`
`
bonjour
toto
!
'
'
)
;
#
afficher
bonjour
titi
!
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
découpage
:
–
explode
(
)
:
scinder
chaîne
en
morceau
grâce
à
délimiteur
,
–
implode
(
)
/
join
(
)
:
regrouper
élément
d
’
tableau
dans
chaîne
en
ajouter
chaîne
de
jointure
,
–
ltrim
(
)
/
chop
(
)
:
enlever
espace
de
début
/
fin
de
chaîne
.
:
$
composant
=
`
`
resistance
,
condensateur
,
transistor
`
`
;
$
composant
=
chop
(
$
composant
)
;
$
tableau
=
explode
(
`
`
,
`
`
,
$
composant
)
;
print
$
tableau
[
]
.
`
`
.
'
'
;
#
afficher
transistor
.
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
Web
:
–
rawurlencode
(
)
/
rawurldecode
(
)
:
encoder
/
décoder
chaîne
en
URL
selon
RFC1738
,
–
htmlspecialchar
(
)
/
htmlentities
(
)
:
convertir
caractère
spécial
en
équivalent
HTML
.
:
$
url
=
rawurlencode
(
’
bonjour
@
/
toto
/
’
)
;
print
$
url
;
#
afficher
bonjour
%
40toi
%
%
2Ftoto
%
2F
$
html
=
htmlentities
(
`
`
<
'
'
)
;
print
$
html
;
#
affiche
<
source
HTML
contenir
<
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
comparaison
:
–
parse_str
(
)
:
analyser
chaîne
déduire
variable
valeur
,
–
strcmp
(
)
:
comparaison
sensible
à
casse
,
–
strlen
(
)
:
retourner
longueur
de
chaîne
.
:
parse_str
(
`
`
toto
=
&
tab
[
]
=
Ceci+fonctionne
&
tab
[
]
=
'
'
)
;
print
`
`
$
toto
,
$
tab
[
]
,
$
tab
[
]
'
'
;
affiche
,
fonctionner
,
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
casse
:
–
strtolower
(
)
/
strtoupper
(
)
:
mettre
caractère
en
minuscule
/
majuscule
,
–
ucfirst
(
)
:
force
premier
caractère
d
’
chaîne
en
majuscule
,
–
ucwords
(
)
:
force
premier
caractère
de
mot
d
’
chaîne
en
majuscule
.
:
$
nom
=
`
`
bill
GaTeZ
'
'
;
print
$
nom
=
strtolower
(
$
nom
)
;
#
afficher
bill
gatez
print
strtolower
(
$
nom
)
;
#
afficher
bill
Gatez
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
expression
régulier
expression
régulier
(
abrv
:
regex
)
être
utiliser
pour
faire
manipulation
complexe
sur
chaîne
de
caractère
(
:
substitution
recherche
complexe
)
;
PHP
gérer
deux
type
d
’
expression
régulier
:
–
expression
régulier
avancer
de
POSIX
,
–
expression
régulier
modifier
langage
Perl
.
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
principe
de
base
expression
régulier
:
–
recherche
de
séquence
de
caractère
sein
d
’
chaîne
,
–
besoin
d
’
expression
pour
décrire
séquence
,
–
utilisation
d
’
syntaxe
puissant
,
–
équivaloir
à
définition
de
condition
de
recherche
.
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
signification
principal
expression
régulier
:
–
c
:
caractère
c
(
sauf
caractère
spécial
)
,
–
\c
:
caractère
spécial
c
(
sauf
chiffre
de
à
)
,
–
ˆ
:
début
de
ligne
,
–
$
:
fin
de
ligne
,
–
.
:
n
’
importer
caractère
,
–
[
s
]
:
caractère
appartenir
à
l
’
s
,
s
être
suite
de
caractère
/
échelle
de
caractère
(
[
c-c
]
)
,
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
–
[
ˆs
]
:
caractère
n
’
appartenir
à
l
’
s
,
–
r
*
:
,
occurrence
successif
de
l
’
expression
régulier
r
,
–
rx
:
r
,
suivre
de
l
’
expression
régulier
x
(
concaténation
)
,
–
r
{
m
,
n
}
:
nombre
(
entre
m
n
)
d
’
occurrence
successif
de
r
,
–
r
{
m
}
:
m
occurrence
successif
de
r
,
–
r
{
m
,
}
:
m
occurrence
successif
de
l
’
expression
régulier
r
.
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
utilisation
avec
PHP
:
–
ereg
(
)
/
eregi
(
)
:
expression
régulier
standard
sensible
/
insensible
à
casse
,
–
ereg_replace
(
)
/
eregi_replace
(
)
:
expression
régulier
de
substitution
sensible
/
insensible
à
casse
,
–
split
(
)
:
découper
chaîne
grâce
à
délimiteur
définir
par
expression
régulier
,
–
sql_regcase
(
)
:
préparer
expression
régulier
insensible
à
casse
(
utile
pour
fonction
supporter
recherche
insensible
à
casse
)
.
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
:
<
?
php
$
personne
=
`
`
nom
:
Smith
,
prénom
:
John
,
age
:
,
divers
:
blond
'
'
;
if
(
ereg
(
`
`
blond
'
'
,
$
personne
)
)
print
`
`
personne
être
blond
.
'
'
;
#
afficher
personne
être
blond
.
if
(
eregi
(
`
`
age
:
*
(
[
]
+
)
'
'
,
$
personne
,
$
resultat
)
)
print
`
`
personne
avoir
$
resultat
[
]
an
.
'
'
;
else
print
`
`
personne
n
’
avoir
d
’
age
.
'
'
;
#
afficher
personne
avoir
an
.
traitement
chaîne
de
caractère
alcôve
-
programmer
en
PHP
print
eregi_replace
(
`
`
(
age
:
)
*
[
]
+
.
*
'
'
,
`
`
\@card@
'
'
,
$
personne
)
;
#
afficher
nom
:
Smith
,
prénom
:
John
,
age
:
print
sql_regcase
(
`
`
John
Smith
'
'
)
;
#
affiche
[
Jj
]
[
Oo
]
[
Hh
]
[
Nn
]
[
Ss
]
[
Mm
]
[
Ii
]
[
Tt
]
[
Hh
]
?
>
section
alcôve
-
programmer
en
PHP
fonctionnalité
utile
fonctionnalité
utile
alcôve
-
programmer
en
PHP
objectif
de
section
manipulation
traitement
fichier
;
argument
gestion
URLs
;
création
dynamique
d
’
image
;
fonction
mathématique
;
PHP
XML
;
Templates
avec
PHPlib
;
utilisation
de
PHP
langage
de
script
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
manipulation
traitement
fichier
être
langage
de
programmation
,
gestion
fichier
être
important
pour
stockage
de
donnée
;
gestion
fichier
en
PHP
être
issu
langage
C
comporter
fonction
supplémentaire
utile
(
gestion
fichier
distant
par
exemple
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
principal
fonction
de
manipulation
de
fichier
être
suivant
:
–
fopen
(
)
:
ouverture
d
’
fichier
(
possibilité
de
fournir
URL
HTTP
FTP
pour
fichier
distant
)
,
–
fclose
(
)
:
fermeture
fichier
,
–
fpassthru
(
)
:
lire
fichier
en
entier
l
’
affiche
,
–
fread
(
)
/
fgets
(
)
:
lire
n
caractère
dans
fichier
,
–
fwrite
(
)
/
fputs
(
)
:
écrire
chaîne
dans
fichier
,
–
rewind
(
)
/
fseek
(
)
/
ftell
(
)
:
positionnement
sein
fichier
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
affichage
de
l
’
imager
dns-remplacer
<
?
php
Header
(
`
`
Content-type
:
image
/
png
'
'
)
;
if
(
!
$
fd
=
fopen
(
`
`
dns-remplacer
'
'
,
`
`
rb
'
'
)
)
echo
`
`
impossible
d
’
ouvrir
fichier
.
'
'
;
else
fpassthru
(
$
fd
)
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
Ex2
:
fichier
de
log
<
?
php
...
if
(
!
$
fd
=
fopen
(
`
`
mon_
dns-remplacé
'
'
,
`
`
avoir
'
'
)
)
echo
`
`
impossible
d
’
ouvrir
fichier
.
'
'
;
else
fputs
(
$
fd
,
`
`
erreur
:
$
errormsg\n
'
'
)
;
#
Ecrit
dernier
message
d
’
erreur
renvoyer
dans
mon_
dns-remplacer
...
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
principal
fonction
de
gestion
de
fichier
être
suivant
:
–
file_exists
(
)
:
test
de
l
’
existence
d
’
fichier
,
–
copy
(
)
:
copier
fichier
,
–
rename
(
)
:
renommer
fichier
,
–
unlink
(
)
:
effacer
fichier
.
:
<
?
php
$
fichier
=
`
`
dns-remplacer
'
'
if
(
file_exists
(
$
fichier
)
)
copy
(
$
fichier
,
`
`
/
tmp
/
'
'
.
$
fichier
)
;
else
echo
`
`
impossible
d
’
ouvrir
fichier
.
'
'
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
principal
fonction
de
manipulation
répertoire
être
suivant
:
–
chdir
(
)
:
changement
de
répertoire
courir
,
–
opendir
(
)
:
ouverture
d
’
répertoire
,
–
closedir
(
)
:
fermeture
répertoire
,
–
readdir
(
)
:
lire
l
’
entrée
suivant
dans
répertoire
,
–
rewinddir
(
)
:
revenir
début
répertoire
,
–
mkdir
(
)
:
créer
nouveau
répertoire
,
–
rmdir
(
)
:
supprimer
répertoire
,
–
dir
(
)
:
instanciation
d
’
objet
répertoire
pour
manipulation
objet
de
,
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
équivaloir
de
commande
ls
<
?
php
chdir
(
`
`
/
tmp
'
'
)
;
$
dir
=
dir
(
`
`
.
'
'
)
;
$
dir-
>
rewind
(
)
;
while
(
$
fichier
=
$
dir-
>
read
(
)
)
echo
`
`
$
fichier
<
br
>
'
'
;
$
dir-
>
clore
(
)
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
argument
gestion
URLs
gestion
URLs
être
important
pour
encoder
/
décoder
information
sein
même
de
;
pouvoir
utiliser
l
’
URL
pour
transmettre
information
(
variable
...
)
d
’
script
à
l
’
autre
;
mécanisme
pouvoir
constituer
mini-gestion
de
session
par
exemple
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
principal
fonction
utiliser
pour
gestion
URLs
être
suivant
:
–
parse_url
:
analyser
URL
retourner
composant
sous
forme
d
’
tableau
associatif
,
–
urlencode
/
urldecode
:
encoder
/
décoder
chaîne
en
remplacer
caractère
spécial
par
%
xx
espace
par
+
(
application
/
x-www-form-urlencode
)
,
–
base64_encode
/
base64_decode
:
encoder
/
décoder
chaîne
en
base64
pour
permettre
à
système
de
manipuler
information
binaire
sur
bit
(
:
corps
de
mail
)
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
transmission
d
’
variable
par
l
’
URL
<
?
php
$
chaine
=
`
`
bonjour
monde
?
'
'
;
?
>
<
à
href
=
'
'
mon-cgi
?
chaine
=
<
?
php
echo
urlencode
(
$
chaine
)
;
?
>
'
'
>
envoyer
<
/
à
>
appeler
script
CGI
mon-cgi
avec
l
’
URL
'
'
mon-cgi
?
chaine
=
Bonjour+tout+le+monde+
%
3F
'
'
fonctionnalité
utile
alcôve
-
programmer
en
PHP
création
dynamique
d
’
image
PHP
n
’
être
limiter
à
création
de
fichier
HTML
,
pouvoir
servir
à
générer
image
(
PNG
,
JPEG
,
GIF
)
;
image
pouvoir
être
émettre
vers
client
sauvegarder
sur
serveur
;
être
pratique
pour
dessiner
graphique
à
partir
de
donnée
dynamique
(
:
statistique
site
,
résultat
d
’
sondage
...
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
pour
générer
image
,
PHP
utiliser
librairie
GD
;
composer
d
’
ensemble
de
fonction
permettre
de
créer
image
dynamique
de
qualité
avec
de
code
;
,
format
GIF
être
premier
à
avoir
être
supporter
aujourd
’
hui
prefère
format
JPEG
PNG
,
format
ouvrir
de
;
sûr
avant
d
’
utiliser
librairie
falloir
préalable
charger
dans
PHP
en
ajouter
ligne
extension
=
dns-remplacer
dans
fichier
dns-remplacer
/
dns-remplacer
vérifier
fichier
dns-remplacé
trouver
dans
extension_dir
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
L
’
api
être
intuitif
:
–
ImageCreate
*
(
)
:
pour
créer
image
blanc
à
partir
d
’
image
existant
,
–
ImageColor
*
(
)
:
pour
définir
couleur
transparence
,
–
ImageString
(
)
:
pour
écrire
texte
,
–
image
<
former
>
(
)
:
pour
dessiner
forme
géométrique
connaître
(
rectangle
,
arc
,
ligne
,
polygone
...
)
,
–
ImageFill
*
(
)
:
pour
colorier
forme
,
–
image
<
attribut
>
(
)
:
pour
connaître
attribut
(
largeur
,
hauteur
,
taille
...
)
de
l
’
image
,
–
image
<
type
>
(
)
:
pour
envoyer
image
de
type
PNG
,
JPEG
GIF
navigateur
,
–
ImageDestroy
(
)
:
pour
détruire
l
’
image
...
fonctionnalité
utile
alcôve
-
programmer
en
PHP
fonction
de
l
’
api
manipuler
pointeur
sur
l
’
image
courant
;
pointeur
être
retourner
par
fonction
ImageCreate
*
(
)
à
création
de
l
’
image
;
,
créer
fichier
PHP
seul
but
être
de
retourner
image
dynamique
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
argument
pour
créer
l
’
image
être
passer
dans
l
’
URL
à
manière
formulaire
en
mode
GET
par
exemple
(
:
<
IMG
src
=
`
`
dns-remplacer
?
texte
=
TITRE+BOUTON
'
'
>
)
fichier
devoir
retourner
en-tête
correspondre
à
l
’
image
retourner
(
:
Header
(
`
`
Content-type
:
image
/
gif
'
'
)
;
)
navigateur
pouvoir
l
’
afficher
;
pouvoir
créer
fonction
générer
l
’
image
technique
être
facile
à
utiliser
falloir
s
’
occuper
de
stocker
l
’
image
de
détruire
par
suite
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
génération
dynamique
de
bouton
,
dns-remplacer
<
?
php
Header
(
`
`
Content-type
:
image
/
gif
'
'
)
;
if
(
!
isset
(
$
texte
)
)
$
texte
=
`
`
'
'
;
$
image
=
ImageCreateFromGif
(
`
`
image
/
dns-remplacer
'
'
)
;
$
couleur
=
ImageColorAllocate
(
$
image
,
,
,
)
;
$
espace
=
(
ImageSX
(
$
image
)
-
*
strlen
(
$
texte
)
)
/
;
ImageString
(
$
image
,
,
$
espace
,
,
$
texte
,
$
couleur
)
;
ImageGif
(
$
image
)
;
ImageDestroy
(
$
image
)
;
?
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
<
IMG
src
=
`
`
dns-remplacer
?
texte
=
Mon+titre
'
'
>
:
fonctionnalité
utile
alcôve
-
programmer
en
PHP
fonction
mathématique
exister
deux
type
de
fonction
mathématique
dans
PHP
:
–
fonction
standard
,
s
’
appliquer
sur
entier
long
(
double
)
,
–
fonction
de
précision
nombre
être
représenter
par
chaîne
de
caractère
.
constant
M_PI
être
définir
pour
nombre
pi
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
fonction
standard
utiliser
être
suivant
:
–
abs
(
)
:
valeur
absolu
,
–
number_format
(
)
:
formater
nombre
par
groupe
de
millier
,
–
round
(
)
/
ceil
(
)
/
floor
(
)
:
arrondir
,
–
max
(
)
/
min
(
)
:
encadrement
,
–
pow
(
)
/
sqrt
(
)
:
puissance
,
–
exp
(
)
/
log
(
)
/
log10
(
)
:
exponentiel
logarithme
,
fonctionnalité
utile
alcôve
-
programmer
en
PHP
–
cos
(
)
/
sin
(
)
/
tan
(
)
/
acos
(
)
/
asin
(
)
/
atan
(
)
:
trigonométrie
,
–
base_convert
(
)
/
BinDec
(
)
/
DecBin
(
)
/
HexDec
(
)
/
DecHex
(
)
/
OctDec
(
)
/
DecOct
(
)
:
changement
de
base
,
–
rand
(
)
/
srand
(
)
/
getrandmax
(
)
:
nombre
pseudo-aléatoire
(
fonction
mt_
*
être
meilleur
rapide
)
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
$
x
=
;
print
sqrt
(
pow
(
$
x
,
)
)
.
`
`
=
`
`
.
abs
(
$
x
)
;
#
afficher
=
print
number_format
(
round
(
)
,
,
`
`
,
'
'
,
'
'
`
`
)
;
#
afficher
,
print
cos
(
M_PI
/
)
.
`
`
=
`
`
.
/
sqrt
(
)
;
#
afficher
=
fonctionnalité
utile
alcôve
-
programmer
en
PHP
PHP
XML
e
X
tensible
M
arkup
L
anguage
;
standard
ouvrir
de
description
de
donnée
;
utiliser
marqueur
,
à
différence
autre
ML
,
décrire
donnée
manière
devoir
être
afficher
(
:
HTML
)
;
L
’
utilisation
de
XML
avec
PHP
nécessiter
l
’
installation
de
librairie
Expat
(
http
:
/
/
dns-remplacer
/
xml
/
)
compilation
de
PHP
avec
l
’
option
--
with-xml
;
depuis
version
d
’
apache
,
librairie
Expat
être
intégrer
serveur
web
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
module
XML
permettre
de
créer
parseur
XML
appeler
fonction
définir
par
l
’
utilisateur
permettre
de
traiter
donnée
inclus
dans
tags
XML
;
fonction
principal
:
–
xml_parser_create
(
)
:
créer
parseur
XML
retourner
descripteur
de
parseur
être
utiliser
par
autre
fonction
,
–
xml_set_element_handler
(
)
:
modifier
option
associer
à
parseur
(
sensibilité
à
casse
,
encodage
caractère
...
)
,
–
xml_set_character_data_handler
(
)
:
définir
fonction
à
appeler
à
l
’
ouverture
à
fermeture
d
’
tag
XML
spécifique
,
–
xml_parse
(
)
:
parseur
XML
,
–
xml_parser_free
(
)
:
élimination
d
’
parseur
XML
de
mémoire
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
pouvoir
manipuler
parseur
XML
à
l
’
intérieur
d
’
objet
PHP
;
falloir
pour
définir
parseur
variable
d
’
instance
de
l
’
objet
passer
l
’
objet
par
référence
à
fonction
xml_set_object
(
)
;
:
xml_set_object
(
parser
,
&
object
)
;
par
suite
,
falloir
utiliser
fonction
xml_set_
*
(
)
avec
$
this-
>
parser
identifier
de
parseur
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
utilisation
template
PHPlib
PHPlib
proposer
classe
Templat
permettre
de
séparer
squelette
HTML
d
’
page
,
traitement
donnée
permettre
de
modifier
page
;
partie
dynamique
de
page
être
représenter
dans
code
HTML
par
identifiants
entourer
d
’
accolade
;
identifiants
être
remplacer
par
valeur
calculer
par
script
PHP
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
template
(
dns-remplacer
)
<
html
>
<
head
>
<
title
>
{
LETITRE
}
<
/
title
>
<
/
head
>
<
body
>
<
br
>
exemple
de
variable
:
{
}
<
/
body
>
<
/
html
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
(
suite
)
:
code
PHP
utiliser
template
dns-remplacer
include
(
`
`
dns-remplacer
'
'
)
$
tmpl
=
new
Template
(
`
`
rep-template
'
'
)
;
$
tmpl-
>
set_file
(
`
`
main
'
'
,
`
`
dns-remplacer
'
'
)
;
$
tmpl-
>
set_var
(
array
(
'
'
LETITRE
'
'
=
>
'
'
exemple
de
titre
'
'
,
'
'
'
'
=
>
'
'
message
'
'
)
)
;
$
tpml-
>
parse
(
`
`
out
'
'
,
`
`
main
'
'
)
;
$
tmpl-
>
p
(
`
`
out
'
'
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
fonction
associer
template
:
–
template
(
)
:
retourner
objet
Template
associer
répertoire
être
stocker
squelette
HTML
,
–
set_file
(
)
:
associer
fichier
template
à
variable
représenter
,
–
set_var
(
)
:
affecter
valeur
à
nom
de
variable
template
,
deux
dernier
fonction
pouvoir
être
appeler
avec
unique
argument
tableau
contenir
pair
clef
/
valeur
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
–
parse
(
)
:
fonction
substituer
valeur
de
variable
définir
dans
variable
de
référence
stocker
(
ajouter
)
résultat
dans
variable
cible
,
–
p
(
)
:
fonction
afficher
valeur
de
variable
passée
en
argument
dans
navigateur
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
de
pouvoir
traiter
élément
répétitif
(
tableau
,
liste
de
sélection
...
)
,
pouvoir
déclarer
bloc
dans
variable
manipuler
par
classe
Templat
;
définition
utiliser
commentaire
HTML
;
:
<
form
action
=
`
`
{
PHPSELF
}
'
'
>
<
select
name
=
`
`
variable
'
'
>
<
!
--
BEGIN
monbloc
-
>
<
option
>
{
MUL
}
<
!
--
END
monbloc
-
>
<
/
select
>
<
br
>
<
input
type
=
'
'
submit
'
'
>
<
/
form
>
fonctionnalité
utile
alcôve
-
programmer
en
PHP
(
suite
)
:
$
tmpl
=
new
Template
(
`
`
rep-template
'
'
)
;
$
tmpl-
>
set_file
(
`
`
main
'
'
,
`
`
dns-remplacer
'
'
)
;
$
tmpl-
>
set_bloc
(
`
`
main
'
'
,
`
`
monbloc
'
'
,
`
`
toto
'
'
)
;
$
tmpl-
>
set_var
(
`
`
PHPSELF
'
'
,
$
PHP_SELF
)
;
for
(
$
i
=
;
$
i
<
;
$
i++
)
{
$
tmpl-
>
set_var
(
`
`
MUL
'
'
,
$
i
)
;
$
tmpl-
>
parse
(
`
`
toto
'
'
,
`
`
monbloc
'
'
,
true
)
;
}
$
tpml-
>
parse
(
`
`
out
'
'
,
`
`
main
'
'
)
;
$
tmpl-
>
p
(
`
`
out
'
'
)
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
fois
bloc
défini
,
pouvoir
répéter
en
spécifier
true
dernier
argument
de
fonction
parse
;
fonction
set_block
(
$
parent
,
$
blocname
,
$
name
)
indique
variable
$
parent
contenir
bloc
nommer
$
blocname
.
fonction
enlever
bloc
de
$
parent
remplacer
par
variable
$
name
.
fonctionnalité
utile
alcôve
-
programmer
en
PHP
utilisation
de
PHP
langage
de
script
pouvoir
utiliser
puissance
richesse
fonction
de
PHP
pour
faire
script
orienter
web
;
falloir
avoir
préalable
compiler
PHP
CGI
(
cohabitation
entre
forme
de
PHP
être
possible
sur
même
machine
)
;
commande
php
donner
accès
à
shell
PHP
commander
PHP
taper
être
interpréter
;
fonctionnalité
utile
alcôve
-
programmer
en
PHP
sûr
,
seul
commande
encadrer
par
<
?
php
...
?
>
être
interpréter
autre
étant
afficher
telles-quelles
;
L
’
option
-q
permettre
d
’
éviter
d
’
avoir
en-tête
HTTP
envoyer
avant
premier
affichage
;
pour
réaliser
script
classique
en
PHP
suffire
de
faire
commencer
fichier
par
ligne
:
#
!
/
usr
/
bin
/
php
<
version
>
-q
fonctionnalité
utile
alcôve
-
programmer
en
PHP
:
script
d
’
invite
login
,
dns-remplacer
#
!
/
usr
/
bin
/
php
<
version
>
-q
bonjour
monsieur
<
?
php
echo
$
user
,
`
`
\n
'
'
?
>
,
être
sur
machine
<
?
php
echo
$
HOSTNAME
,
'
'
\n
'
'
?
>
en
vérifier
variable
$
user
$
HOSTNAME
être
exporter
par
shell
en
rendre
script
dns-remplacer
exécutable
(
chmod
+x
dns-remplacé
)
commande
.
/
dns-remplacé
affiche
:
bonjour
monsieur
nom_login
,
être
sur
machine
nom_machine
.
section
alcôve
-
programmer
en
PHP
conclusion
conclusion
alcôve
-
programmer
en
PHP
objectif
chapitre
conseil
de
programmation
PHP
;
L
’
avenir
de
PHP
;
référence
;
glossaire
.
conclusion
alcôve
-
programmer
en
PHP
conseil
de
programmation
PHP
penser
en
matière
de
réutilisabilité
code
;
lésiner
sur
commentaire
,
aider
autre
à
comprendre
code
(
être
seul
à
travailler
sur
site
web
)
;
segmenter
code
PHP
pour
rendre
clair
:
–
préférer
fonction
court
mono-tâches
,
–
utiliser
fichier
différent
...
conclusion
alcôve
-
programmer
en
PHP
essayer
de
séparer
maximum
aspect
graphique
(
charte
graphique
,
feuille
de
style
...
)
,
contenir
(
gestion
donnée
dynamique
...
)
mettre
en
forme
(
affichage
donnée
dynamique
...
)
:
–
utilisation
de
fichier
d
’
en-tête
,
de
barre
de
navigation
de
pied
de
page
séparer
,
–
utilisation
de
fichier
contenir
classe
manipuler
par
script
...
conclusion
alcôve
-
programmer
en
PHP
L
’
avenir
de
PHP
de
en
utiliser
sur
Internet
(
million
de
domaine
différent
)
;
PHP4
depuis
début
de
l
’
année
;
version
être
contester
(
:
FSF
)
à
cause
de
nouveau
licence
;
apporter
de
rapidité
(
:
analyseur
zend
)
de
nouveau
fonctionnalité
natif
(
:
gestion
session
...
)
;
conclusion
alcôve
-
programmer
en
PHP
référencer
livre
:
–
Professional
PHP
Programming
(
Wrox
)
,
–
programmation
Web
avec
PHP
(
Eyrolle
)
,
–
PHP
,
précis
&
concis
(
O
’
Reilly
)
,
–
programmation
PHP
(
CampusPress
)
...
conclusion
alcôve
-
programmer
en
PHP
URLs
:
–
site
officiel
de
PHP
(
http
:
/
/
dns-remplacer
)
,
–
documentation
officiel
en
anglais
(
http
:
/
/
dns-remplacer
/
manual
)
,
–
traduction
français
de
documentation
officiel
(
http
:
/
/
dns-remplacer
/
doc
)
,
–
site
de
zend
(
http
:
/
/
dns-remplacer
)
,
–
développement
PHP
/
MySQL
chez
Nexen
(
http
:
/
/
dns-remplacer
)
conclusion
alcôve
-
programmer
en
PHP
–
projet
libre
de
PHP
(
http
:
/
/
dns-remplacer
)
,
–
article
technique
sur
PHP
(
http
:
/
/
dns-remplacer
/
)
,
–
site
officiel
de
PHPlib
(
http
:
/
/
dns-remplacer
)
,
–
site
francophone
pour
l
’
aider
à
programmation
en
PHP
(
http
:
/
/
dns-remplacer
)
...
conclusion
alcôve
-
programmer
en
PHP
glossaire
–
apache
:
serveur
web
(
HTTP
)
utiliser
sur
Internet
,
–
Browser
:
navigateur
/
butineur
de
page
web
,
–
CGI
(
Common
Gateway
interface
)
:
interface
de
communication
pour
création
de
programme
capable
d
’
être
exécuter
par
serveur
HTTP
,
permettre
création
dynamique
de
page
côté
serveur
,
–
GET
:
méthode
HTTP
de
transmission
de
formulaire
via
URLs
(
donnée
encoder
dans
l
’
URL
)
,
conclusion
alcôve
-
programmer
en
PHP
–
GIF
(
Graphics
interchanger
format
)
:
format
breveté
d
’
image
compresser
,
utiliser
sur
web
,
–
HTML
(
Hyper
Text
Markup
Language
)
:
langage
de
description
structural
de
document
,
baser
sur
notion
d
’
environnement
de
délimiteur
,
utiliser
pour
créer
page
web
,
–
HTTP
(
HyperText
Transfer
Protocol
)
:
protocole
de
transfert
de
fichier
utiliser
sur
web
,
–
HTTPD
(
HTTP
Daemon
)
:
partie
principal
d
’
serveur
web
échanger
,
via
HTTP
,
fichier
avec
client
web
(
navigateur
)
,
conclusion
alcôve
-
programmer
en
PHP
–
JPEG
:
format
d
’
image
compresser
utiliser
sur
web
,
–
LDAP
(
Lightweight
Directory
Access
Protocol
)
:
protocole
normaliser
d
’
accès
service
d
’
annuaire
,
–
PHP
(
PHP
:
Hypertext
PreProcessor
)
:
langage
de
script
côté
serveur
,
embarquer
dans
page
HTML
,
–
PNG
(
portable
Network
Graphics
)
:
format
libre
d
’
image
compresser
créer
pour
fournir
alternative
libre
format
GIF
,
conclusion
alcôve
-
programmer
en
PHP
–
POST
:
méthode
HTTP
de
transmission
de
formulaire
dans
corps
de
requête
(
alternatif
à
méthode
GET
)
,
–
Regex
:
raccourcir
pour
Regular
expression
,
syntaxe
pour
réaliser
manipulation
complexe
sur
chaîne
de
caractère
,
–
session
PHP
:
mécanisme
de
sauvegarde
d
’
information
entre
deux
accès
(
requête
HTTP
)
,
–
SGBD
:
système
de
gestion
de
base
de
donnée
,
conclusion
alcôve
-
programmer
en
PHP
–
SQL
(
Structured
Query
langage
)
:
langage
structurer
de
requête
pour
interroger
SGBDs
,
–
URL
(
Uniform
Resource
Locator
)
:
syntaxe
utiliser
pour
localiser
ressource
(
fichier
)
sur
web
(
:
http
:
/
/
dns-remplacer
/
dns-remplacer
)
–
WWW
(
World
Wide
Web
)
:
appeller
web
,
c
’
être
nom
donner
réseau
Internet
,
–
XML
(
extensible
Markup
Language
)
:
standard
ouvrir
de
description
de
donnée
baser
sur
l
’
utilisation
de
marqueur
decriver
donnée
qu
’
encapsuler
.
