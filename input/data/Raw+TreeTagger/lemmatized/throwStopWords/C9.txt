base
donner
PHP
and
Mysql
créer
Lamiae
DOUNAS
dns-remplacer
dns-remplacer
plan
cours|cour
rappel
SQL
introduction
web
PHP
variable
constante
opérateur
tableau
structure
contrôle
fonction
gestion
formulaire
programmation
orienter
objet
POO
accès
baser
donner
Mysql
cinq
mini
projet
réaliser
rappel
SQL
•
travail
pratique
révision
opération
CREATE
tabler
insert
UPDATE
ALTER
tabler
ADD
CONSTRAINTS
TP1
introduction
Web
web
Ø
terme
créer
Tim
Berners-Lee
désigner
toile
araignée
anglais
Ø
Enorme
réseau
ordinateur
connecter
héberger
site
web
quel
rapport
entre
web
internet
Ø
Web
application
Internet
juste
comme
messagerie
instantané
introduction
Web
site
web
Ø
Ecrit
langage
html
marquer
contenir
site
Css
gérer
style
javascript
rendre
interactif
Ø
accessible
depuis
dresser
unique
URL
Uniform
Resource
Locator
protocole
mot
passer
nom
port
facultatif
chemin
facultatif
serveur
http
/
/
user
password
dns-remplacer
glossair
/
dns-remplacer
introduction
PHP
Php
php
hypertext
preprocessor
–
langage
interpréter
créer
site
dynamique
–
langage
script
côté
serveur
–
langage
Embedded
HTML
–
open
source
PHP
permettre
créer
grand
nombre
site
web
célèbre
comme
Facebook
Wikipédia
etc
introduction
PHP
site
statique
vs
site
dynamique
-
site
statique
écrire
HTML
éventuel
ement
JavaScript
contenir
tout
utilisateur
-
site
dynamique
contenir
adapter
besoin
utilisateur
nécessiter
temps
traitement
introduction
PHP
relation
client
/
serveur
installation
configuration
PHP
suffire
télécharger
serveur
web
•
WAMP
http
/
/
dns-remplacer
/
•
MAMP
http
/
/
dns-remplacer
/
•
XAMPP
https
/
/
dns-remplacer
/
fr
/
Editeur
texte
•
Sublim
Text
http
/
/
dns-remplacer
/
introduction
PHP
syntaxe
base
DOCTYPE
HTML
public
-
/
/
W3C
/
/
doctype
html
DTD
HTML
/
/
en
http
/
/
html
dns-remplacé
/
TR
/
html4
/
dns-remplacé
head
title
titre
/
title
/
head
body
php
echo
`
`
hello
World
`
`
/
body
/
html
introduction
PHP
commentaire
Ø
commentaire
hériter
langage
Perl
/
/
ceci
commentaire
seul
ligne
/
*
ceci
commentaire
plusieurs
ligne
*
/
Ø
commentaire
styler
shell
#
ceci
commentaire
seul
ligner
type
donner
PHP
supporter
type
donnée
suivant
•
nombre
entier
•
nombre
virguler
flottant
•
chaîne
caractère
•
tableau
•
objet
développer
section
programmation
orienter
objet
fonction
gettype
permettre
connaître
type
variable
variable
ne
être
définir
el
e
renvoyer
string
ex
avoir
=
echo
gettype
/
/
=
integer
typer
donner
tout
nom
variable
précéder
spécifier
variable
type
entier
•
toto
=
#
entier
base
•
toto
=
#
entier
négatif
spécifier
variable
type
chaîner
caractère
•
personne
=
toto
Smith
#
chaîner
caractère
afficher
caractère
spécial
•
personne
=
M
.
Smith
#
aussi
chaîner
caractère
•
chainer
=
chaine1
chaine2
/
/
affiche
chaine1chaine2
•
chaine
=
chaine1
toto
/
/
afficher
chaine1
type
donner
opérateur
chaîne
caractère
–
concaténation
chaine1
Chaine2
opérateur
logique
•
AND
&
&
vrai
b
vrai
•
or
|
|
vrai
b
vrai
opérateur
arithmétique
•
addition
b
•
soustraction
-
b
•
multiplication
*
b
•
division
/
b
•
modulo
reste
division
entier
b
typer
donner
opérateur
arithmétique
•
attention
lorsqu
chainer
caractère
évaluer
comme
valeur
numérique
règle
suivant
appliquer
•
toto
=
#
toto
valoir
•
toto
=
titi
#
toto
valoir
car
chaine
valoir
texte
•
toto
=
titi
#
toto
valoir
car
chaine
valoir
commencer
valeur
numérique
type
donner
opérateur
comparaison
•
égal
=
=
b
•
différent
=
b
•
supérieur
b
•
inférieur
b
•
supérieur
égal
=
b
•
inférieur
égal
=
b
exemple
echo
toto
=
=
vrai
faux
type
donner
dater
déclaration
•
DATETIME
dater
=
new
DateTime
'
'
•
DATE_CREATE
alias
DateTime
:
__construct
date2
=
date_create
'
'
extraction
mois|moi
année
...
...
Ø
style
procédural
utiliser
DATE_FORMAT
echo
date_format
date
Ø
styler
orienter
objet
OO
echo
date-
format
'
'
type
donné
dater
exemple
•
dater
=
date
d-m
y
echo
ceci
date
jour
dater
•
heure
=
date
`
`
heure
i
echo
ce
être
heure
jour
heure
constant
•
constant
variable
valeur
pouvoir
changer
durant
durée
vie
script
•
constant
utiliser
définir
paramètre
application
web
tq
raciner
site
nom
base
donné
...
•
nom
constant
valide
commencer
lettre
souligner
_
suivre
de
un
nombre
quelconque
lettre
chiffrer
souligner
•
définir
constant
utiliser
fonction
define
exemple
define
`
`
MA_CONSTANTE
Hel
o
•
afficher
constant
echo
MA_CONSTANTE
echo
const
`
`
MA_CONSTANTE
exemple
PHP
définir
certain
constant
comme
PHP_OS
indique
système
exploitation
utiliser
machiner
faire
tourner
PHP
ex
Linux
tableau
tableau
PHP
ressembler
tableau
associatif
hash-tables
•
index
appeler
clé
•
valeur
associer
clé
appeler
valeur
déclarer
tableau
deux
façon
•
utiliser
fonction
array
créer
tableau
•
affecter
directement
valeur
tableau
tableau
fonction
tableau
•
sizeof
retourner
nombre
élément
tableau
•
count
retourner
nombre
élément
tableau
exister
variable
tableau
variable
exister
tableau
exemple
•
suite
=
array
•
tab
=
•
tab
=
toto
#
pouvoir
mélanger
contenir
•
tab
`
`
chaine
=
valeur
#
pouvoir
mélanger
clé
•
personne
=
array
`
`
type
=
`
`
nom
=
•
`
`
Smith
tableau
parcourir
tableau
php
/
/
créer
array
prenom
prenom
=
array
'
François
'
'
Michel
'
'
Nicole
'
'
Véronique
'
'
Benoît
'
/
/
puis
faire
boucler
tout
afficher
for
numero
=
numero
numero++
{
echo
prenom
numero
'
br
/
'
}
tableau
parcourir
tableau
associatif
php
personne
=
array
`
`
type
=
`
`
nom
=
Smith
foreach
personne
cle
=
valeur
{
echo
cle
=
cle
“
valeur
=
valeur
}
condition
if
...
else
prototyper
if
condition1
{
#
instruction
exécuter
condition1
vrai
}
elseif
condition2
{
#
instruction
exécuter
condition2
vrai
}
else
{
#
instruction
exécuter
aucun
condition
vrai
}
Ø
fonctionnalité
instruction
if
même
PHP
condition
if
...
else
exemple
if
type
=
=
femme
{
echo
bonjour
Madame
}
elseif
type
=
=
Homme
{
echo
bonjour
Monsieur
}
else
{
echo
bonjour
bizarre
}
condition
switch
prototyper
switch
var
{
caser
val1
#
instruction
exécuter
val1
...
break
caser
val2
#
instruction
exécuter
val2
...
break
default
#
cas
utiliser
lorsque
tout
autre
cas
échouer
break
}
boucle
while
boucle
while
moyen
plus
simple
implémenter
boucler
PHP
Ø
prototyper
while
condition
{
#
instruction
exécuter
tant
condition
vrai
}
prototyper
simplifier
while
condition
#
instruction
exécuter
tant
condition
vrai
endwhile
boucle
while
exemple
i
=
while
i
=
{
echo
i
i++
}
•
afficher
boucle
for
boucler
for
fonctionner
comme
boucler
for
langage
prototyper
for
expression1
condition
expression2
{
#
instruction
exécuter
tant
condition
vrai
}
prototyper
simplifier
for
expression1
condition
expression2
#
instruction
exécuter
tant
condition
vrai
endfor
boucle
for
exemple
for
i
=
i
=
i++
{
echo
i
}
•
afficher
exercice
écrire
script
PHP
afficher
version
PHP
autre
information
configuration
exercice
solution
php
phpinfo
solution
php
echo
pre
print_r
GLOBALS
/
/
affiche
nom
super
global
echo
/
pre
exercice
var
=
'
PHP
Tutorial
'
1-Mettre
variable
var
section
h3
tag
centrer
afficher
couleur
rouge
document
HTML
2-Souligner
titre
ajouter
paragraphe
suivant
“
ceci
paragraphe
”
exercice
solution
php
var
=
'
PHP
Tutorial
'
DOCTYPE
html
html
head
title
php
echo
var
/
title
/
head
body
u
h3
faire
color
=
red
php
echo
var
/
h3
/
u
/
faire
p
ceci
paragraphe
.
/
p
/
body
/
html
exercice
compter
jusqu
exercice
solution
for
i
=
i
=
i++
{
echo
i
}
fonction
fonction
pouvoir
être
définir
mot
clé
function
utiliser
syntaxe
suivant
function
nomd-DelaFonction
arg_1
arg_2
/
*
*
/
arg_n
{
#
instruction
return
valeur_de_retour
/
/
optionnel
}
'
distinction
fonction
/
procédure
PHP
fonction
fonction
ne
avoir
besoin
de
être
définir
avant
de
être
utiliser
sauf
lorsque
un
fonction
défini
conditionnel
ement
intérieur
autre
fonction
fonction
conditionnel
e
/
/
imposible
appeler
foo
car
fonction
exister
if
condition
{
function
foo
{
echo
ne
exister
tant
programme
ne
être
passer
ici.\n
}
}
fonction
fonction
autre
fonction
function
foo
{
function
bar
{
echo
ne
exister
tant
foo
ne
être
appelé.\n
}
}
/
*
impossible
de
appeler
bar
ici
car
ne
exister
*
/
foo
/
*
maintenant
pouvoir
appeler
bar
car
le
utilisation
foo
'
rendre
accessible
*
/
bar
fonction
PHP
supporter
passage
de
argument
•
valeur
comportement
défaut
•
référencer
fonction
pouvoir
changer
valeur
argument
ex
toto
=
function
mafonctionRef
&
titi
{
titi
=
titi+1
echo
titi
}
MafonctionRef
toto
/
/
affiche
echo
toto
/
/
affiche
fonction
•
liste
variable
de
argument
mot
clé
...
indique
fonction
accepter
nombre
variable
argument
ex
Function
sum
var
{
somme
=
foreach
var
i
{
somme
=
i
}
return
somme
}
echo
sum
/
/
affiche
comme
résultat
Echo
sum
,
/
/
affcihe
fonction
•
valeur
défaut
argument
function
servir_cafe
type
=
cappuccino
{
return
servir
type.\n
}
echo
servir_cafe
/
/
afficher
servir
cappuccino
àLes
argument
sans
valeur
défaut
devoir
être
premier
sinon
erreur
function
melangeDargument
typer
=
parDefault
varSansDefault
{
return
`
`
message
type
varSansDefault.\n
}
echo
melangeDargument
test
/
/
affiche
erreur
fonction
•
partir
version
php
supporter
définition
typer
retour
ex
function
maFonction
var
string
{
return
var
}
•
return
omettre
valeur
NULL
retourner
•
renvoyer
plusieurs
valeur
temps
suffire
retourner
tableau
ex
function
couleur
{
return
array
res1
res2
res3
}
}
list
var1
var2
var3
=
couleur
fonction
•
retourner
référence
de
un
fonction
utiliser
le
opérateur
&
aussi
bien
déclaration
fonction
le
assignation
valeur
retour
ex
php
function
&
mafonction
&
var
{
var
=
var+2
return
var
}
toto
=
&
mafonction
var2
propriété
objet
retourner
fonction
mafonction
lier
toto
agir
copie
var
fonction
•
PHP
supporter
surcharge
destruction
redéfinition
fonction
déjà
déclarer
•
possible
de
appeler
fonction
récursif
PHP
noter
que
un
appel
récursif
infini
considérer
comme
erreur
programmation
fonction
utile
PHP
•
gettype
var
retourner
type
variable
•
Addslashes
ajouter
antislash
devant
caractère
spécial
ex
res
=
addslashes
`
`
'
/
/
retourn
L\
•
Strstr
texte
chaineAchercher
trouver
premier
occurrence
chaîner
ex
email
=
'
name
dns-remplacé
'
domain
=
strstr
email
'
'
echo
domain
/
/
afficher
dns-remplacer
fonction
utile
PHP
•
Htmlspecialchars
chainer
flag
convertir
caractère
spécial
entité
HTML
El
e
remplacer
exemple
&
commercial
&
amp
example
flag
ENT_QUOTES
convertir
guil
emets
double
guil
emets
simple
ex
str
=
This
is
some
b
bold
/
b
text
`
`
echo
htmlspecialchars
str
/
/
affiche
This
is
some
&
lt
b
&
gt
bold
&
lt
/
`
b
&
gt
text
•
strip_tags
chainer
allowableTags
supprimer
balise
HTML
PHP
de
un
chaîne
commentaire
HTML
PHP
également
supprimer
comportement
pouvoir
être
modifier
paramètre
allowableTags
ex
text
=
'
p
test
paragraph
.
/
p
comment
href
=
#
fragment
Other
text
/
avoir
'
/
/
autoriser
p
echo
strip_tags
text
'
p
'
/
/
affiche
p
test
paragraph
.
/
p
href
=
#
fragment
Other
text
/
avoir
fonction
utile
PHP
•
strlen
retourner
longueur
chaîne
•
Trim
effacer
espace
blanc
début
fin
chainer
•
Strtolower
passer
tout
caractère
miniscules
•
Strtoupper
passer
tout
caractère
majuscule
•
Strpos
texte
chainer
recherche
position
premier
chainer
trouver
•
Ereg
chainer
texte
rechercher
texte
séquencer
caractère
chainer
retourne
longueur
le
occurrence
trouver
occurrence
trouver
chaîner
string
FALSE
cas
contraire
erreur
survenir
ex
if
ereg
`
`
BCD
ABCDEF
{
echo
oui
}
else
{
echo
non
}
fonction
utile
PHP
•
isset
var1
var2
...
déterminer
variable
plusieurs
définir
différent
NULL
ex
if
isset
var
{
echo
'
ce
variable
exister
pouvoir
l\'afficher
'
•
unset
var1
var2
...
détruire
variable
•
empty
var1
déterminer
variable
vide
•
array_key_exists
key
array
vérifier
clé
exister
tableau
fonction
utile
PHP
•
in_array
valeur
array
indique
valeur
appartenir
tableau
•
array_keys
array
valeur
retourner
tout
clé
ensemble
clé
contenir
valeur
valeur
spécifier
alors
retourner
tout
clé
tableau
•
array_values
array
retourner
tout
valeur
de
un
tableau
exercice
•
Ecrire
script
permettre
afficher
nombre
premier
parmi
utiliser
méthode
différent
While
for
exercice
solution
php
i
=
while
i
=
{
z
=
for
j
=
i
j++
{
if
i
=
=
&
&
i
=
z++
}
if
z
=
=
echo
i
'
'
i++
}
exercice
•
Ecrire
script
permettre
créer
tableau
contenir
coordonner
personne
puis
afficher
élément
utiliser
tableau
numéroté́
puis
tableau
associatif
exercice
solution
•
php
coordonnees
=
array
‘
Camil
e
'
Dupont
'
Paris
'
for
i
=
i
count
coordonnees
i++
echo
coordonnees
i
'
'
•
tableau
associatif
php
coordonnees
=
array
prenom
=
`
`
Camille
nom
=
`
`
Dupont
age
=
ville
=
`
`
Paris
foreach
coordonnees
cle
=
valoir
{
echo
cle
`
`
=
`
`
value
`
`
br
/
}
exercice
•
Ecrire
fonction
'
moisfr
'
permettre
afficher
mois|moi
tout
lettre
français
utiliser
instruction
Switch
caser
afficher
mois|moi
faire
appel
fonction
exercice
solution
php
function
moisfr
date
{
switch
date
{
caser
return
'
janvier
'
break
caser
return
'
Fevrier
'
break
caser
return
'
Mars
'
break
caser
return
'
avril
'
break
caser
return
'
mai
'
break
caser
return
'
juin
'
break
caser
return
'
Juil
'
break
caser
return
'
Aout
'
break
caser
return
'
septembre
'
break
caser
return
'
octobre
'
break
caser
return
'
novembre
'
break
caser
return
'
décembre
'
break
default
return
'
mois|moi
non
valide
'
}
}
echo
moisfr
exercice
Ecrire
script
php
permettre
afficher
résulat
suivant
astuce
utiliser
tableau
associatif
foncion
gettype
test
variable
variable
toto
typer
entier
valeur
@ord@
variable
titi
typer
string
valeur
chainer
exercice
solution
html
body
center
h1
test
variable
/
h1
/
center
php
variable
=
array
toto
=
titi
=
`
`
chaine
foreach
variable
cle
=
valoir
{
echo
`
`
variable
`
`
cle
`
`
type
`
`
gettype
valoir
`
`
valeur
`
`
value
`
`
br
/
}
/
body
/
html
formulaire
définition
formulaire
faire
balise
FORM
utiliser
deux
attribut
suivant
•
METHOD
définir
méthode
transfert
donner
vers
serveur
deux
valeur
possible
POST
GET
donné
formulaire
encoder
URL
•
action
préciser
action
exécuter
lors
envoyer
donner
exemple
utilisation
FORM
METHOD
=
POST
action
=
dns-remplacer
...
/
FORM
formulaire
élément
formulaire
I
.
input
Champs
saisir
texte
différent
type
bouter
II
TEXTAREA
zone
texte
multi-lignes
III
select
liste
déroulant
IV
FIELDSET
regrouper
élément
formulaire
formulaire
I
.
input
Champs
saisir
texte
différent
type
bouter
définir
attribut
type
Text
zoner
texte
seul
ligner
input
type
=
text
id
=
toto
name
=
titi
{
autofocus
/
required
}
/
•
ID
attribut
lire
navigateur
HTML
CSS
Javascript
•
NAME
servir
PHP
lors
validation
de
un
formulaire
coter
PHP
valeur
zoner
texte
récupérer
PHP
variable
_
POST
‘
titi
contre
variable
utiliser
css
donner
style
zoner
#
toto
{
...
}
•
value
permettre
pré-remplir
champ
valeur
défaut
•
Placeholder
permettre
donner
indication
contenir
champ
indication
disparaître
dès
visiteur
cliquer
le
intérieur
champ
formulaire
Password
zoner
mot
passer
caratère
saisir
afficher
écran
input
typer
=
password
name
=
pass
id
=
pass
/
Checkbox
caser
cocher
input
typer
=
checkbox
name
=
choix
id
=
choix
valoir
=
choix1
checked
/
radio
zone
opter
input
type
=
`
`
radio
name
=
choix
id
=
choix
valoir
=
choix1
/
formulaire
bouton
•
Reset
remettre
zéro
formulaire
input
typer
=
reset
valoir
=
effacer
•
Submit
validation
formulaire
input
typer
=
submit
valoir
=
envoyer
/
formulaire
II
TEXTAREA
créer
zone
texte
multi-lignes
textarea
name
=
ameliorer
id
=
ameliorer
/
textarea
deux
façon
modifier
tail
e
zone
•
CSS
utiliser
propriété
CSS
width
height
•
attribut
rows
col
balise
textarea
premier
indique
nombre
ligner
texte
pouvoir
être
afficher
simultanément
second
nombre
colonne
formulaire
III
select
faire
choix
parmi
plusieurs
possibilité
sous
forme
lister
•
attribut
multiple
indique
que
on
pouvoir
sélectionner
plusieurs
option
parmi
cel
offrir
contrôle
défaut
attribut
ne
être
utiliser
seul
option
pouvoir
être
sélectionner
•
intérieur
select
/
select
placer
plusieurs
balise
option
/
option
et
/
ou
grouper
option
baliser
optgroup
/
optgroup
formulaire
•
exemple
select
select
id
=
GID
multiple
optgroup
label
=
groupe
option
option
/
option
/
optgroup
optgroup
label
=
groupe
option
option
/
option
option
option
/
option
/
optgroup
optgroup
label
=
groupe
disabled
option
option
/
option
option
option
/
option
option
option
/
option
/
optgroup
/
select
formulaire
IV
FIELDSET
regrouper
élément
formulaire
rapport
entre
•
attribut
Legend
permettre
donner
titre
groupement
fieldset
legend
coordonner
/
legend
label
for
=
nom
quel
nom
/
label
input
typer
=
text
name
=
nom
id
=
nom
/
label
for
=
prenom
quel
prénom
/
label
input
typer
=
text
name
=
prenom
id
=
prenom
/
/
fieldset
traitement
formulaire
traitement
formulaire
selon
méthode
utiliser
formulaire
spécifier
attribut
method
•
_GET
variable
super-globale
récupérer
donner
formulaire
méthode
GET
•
_POST
variable
super-globale
récupérer
donner
formulaire
méthode
POST
•
élément
formulaire
identifier
php
attribut
name
traitement
formulaire
ex
form
method
=
post
action
=
dns-remplacer
input
type
=
text
id
=
toto
name
=
titi
/
input
type
=
submit
valoir
=
envoyer
/
/
form
php
récupérer
valeur
saisir
zoner
texte
p
savoir
comment
te
appel
hé
hé
te
appel
php
echo
_POST
titi
'
/
p
traitement
formulaire
ex
form
method
=
‘
GET
action
=
dns-remplacé
que
être
ce
aimer
br
/
input
type
=
checkbox
name
=
loisir
valoir
=
shopping
/
faire
shopping
br
/
input
type
=
checkbox
name
=
loisir
valoir
=
sport
/
faire
sport
br
/
input
type
=
submit
valoir
=
réponse
/
/
form
php
récupérer
valeur
cocher
loisir
=
_GET
`
`
loisir
echo
b
aimer
/
b
br
/
for
i
=
i
count
loisir
i++
{
echo
loisir
i
`
`
br
/
}
exercice
•
exercice
transmettre
valeur
saisir
variable
nom
prénom
age
formulaire
fichier
dns-remplacer
autre
page
dns-remplacer
permettre
afficher
exercice
exercice
solution
dns-remplacer
form
method
=
“
post
”
action
=
”
dns-remplacer
”
Prenom
input
type
=
”
text
”
name
=
“
prenom
”
br
/
nom
input
type
=
”
text
”
name
=
“
nom
”
br
/
age
input
type
=
”
text
”
name
=
“
age
”
input
type
=
”
submit
”
valoir
=
“
envoyer
”
dns-remplacer
php
prenom
=
_POST
“
prenom
”
nom
=
_POST
“
nom
”
age
=
_POST
“
age
”
echo
“
bonjour
b
prenom
nom
/
b
age
age
br
”
exercice
exercice
transmettre
travers
lien
valeur
variable
nom
age
fichier
dns-remplacer
autre
page
dns-remplacer
permettre
afficher
sans
utiliser
formulaire
utiliser
plutôt
lien
hypertexte
href
=
‘
nomLien
/
avoir
exercice
exercice
solution
dns-remplacer
html
body
php
nom
=
george
age
=
href
=
'
dns-remplacé
nom
=
php
echo
nom
&
age
=
php
echo
age
'
lien
vers
cible
/
avoir
/
body
/
html
dns-remplacer
html
body
php
nom
=
_GET
'
nom
'
age
=
_GET
'
age
'
echo
'
bonjour
'
nom
'
age
'
age
'
br
'
/
body
/
html
exercice
exercice
Ecrire
script
permettre
protéger
contenir
page
secret
login
mot
passer
utiliser
formulaire
tout
script
devoir
être
écrire
page
exercice
exercice
solution
php
log
=
login
pass
=
motDepass
if
isset
_POST
'
login
'
and
isset
_POST
'
passw
'
login
=
_POST
'
login
'
passw
=
_POST
'
passw
'
Endif
if
login
=
=
log
&
&
passw
=
=
pass
html
body
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
contenu
confidentiel
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
br
/
b
coder
secret
XXXXXYYEYEYEYE
/
b
/
body
/
html
php
else
html
body
form
method
=
post
Login
input
typer
=
text
name
=
login
/
br
mot
passer
input
typer
=
password
name
=
passw
br
/
input
type
=
submit
valoir
=
envoyer
/
/
body
/
html
php
endif
visibilité
variable
•
PHP
exister
niveau
visibilité
variable
selon
contexte
•
variable
superglobale
disponible
ne
importer
programme
•
variable
global
tout
variable
tableau
objet
constant
créer
nous
même
programme
principal
généralement
visible
programme
principal
•
variable
local
tout
variable
de
un
fonction
paramètre
comprendre
visibilité
ne
être
local
programme
principal
pouvoir
agir
variable
portée
variable
global
•
PHP
variable
global
pouvoir
être
utiliser
intérieur
fonction
sans
passer
paramètre
celui
-ci
cela
possible
utiliser
mot
clé
global
cependant
variable
devoir
être
déclarer
le
intérieur
chaque
fonction
afin
pouvoir
être
utiliser
celui
-ci
exemple
php
=
b
=
function
somme
{
global
b
b
=
+
b
echo
b
/
/
exemple
déclarer
b
mot
clé
global
intérieur
sommer
elle
manipuler
celui
-ci
.
}
•
deuxième
méthode
accéder
variable
global
de
utiliser
variable
superglobal
GLOBALS
exemple
php
=
b
=
function
sommer
{
GLOBALS
'
b
'
=
GLOBALS
'
'
+
GLOBALS
'
b
'
}
echo
b
}
variable
superglobal
•
variable
superglobal
générer
automatiquement
PHP
–
el
disponible
quel
contexte
script
intérieur
fonction
sans
être
passer
paramètre
cel
e
-ci
–
el
écrire
majuscule
commencer
underscore
_
–
El
généralement
tableau
associatif
variable
superglobal
noter
•
GLOBALS
rassembler
variable
global
•
_ENV
variable
de
environnement
toujours
donner
serveur
•
_SESSION
variable
session
variable
rester
stocker
serveur
temps
présence
de
un
visiteur
•
_COOKIE
contenir
valeur
cookies
enregistrer
le
ordinateur
visiteur
•
_GET
contenir
donner
envoyer
paramètre
le
URL
•
_POST
contenir
information
venir
de
être
envoyer
formulaire
variable
superglobal
exemple
html
head
title
variable
_SERVER
/
title
/
head
body
php
echo
'
nom
fichier
cours|cour
exécution
partir
racine
'
.
_SERVER
'
PHP_SELF
'
echo
'
br
/
'
echo
'
nom
raciner
script
'
_SERVER
'
DOCUMENT_ROOT
'
echo
'
br
/
'
echo
'
nom
client
HTML
'
_SERVER
'
HTTP_USER_AGENT
'
'
br
'
echo
'
nom
serveur
exécuter
script
'
_SERVER
'
SERVER_NAME
'
echo
'
br
/
br
/
'
echo
‘
adresser
IP
‘
_SERVER
'
REMOTE_ADDR
'
/
body
/
html
inclusion
fichier
inclusion
fichier
PHP
servir
réutiliser
partie
coder
identique
plusieurs
endroit
pager
page
différent
inclusion
fichier
faire
include
require
@ord@
include
fonction
renvoyer
erreur
typer
warning
faire
el
e
arriver
ouvrir
fichier
code
suivre
exécuter
@ord@
require
fonction
identique
include
sauf
lorsque
un
erreur
survenir
erreur
type
fatal
stopper
exécution
script
inclusion
fichier
Lorsqu
fichier
importer
code
trouver
intérieur
exécuter
ainsi
variable
constant
fichier
importer
pouvoir
être
réutiliser
suite
programmer
exemple
fichier1
.php
php
/
/
définition
variable
=
b
=
/
/
affichage
de
un
texte
echo
'
un
peu
mathématique
'
fichier2
réutiliser
code
fichier1
php
/
/
importation
exécution
fichier1
require
dns-remplacer
'
/
/
calcul
produire
produire
=
*
b
/
/
affichage
somme
echo
produire
b
=
'
produit
/
/
afficher
Redirection
vers
page
•
PHP
fonction
header
charge
de
envoyer
serveur
entêter
passer
paramètre
•
créer
redirection
PHP
utiliser
fonction
envoyer
entêter
type
location
adresser
•
règle
important
le
appel
‘
header
devoir
faire
avant
tout
envoi
navigateur
Redirection
vers
page
script
redirection
php
header
'
location
http
/
/
dns-remplacer
/
dns-remplacer
'
variable
session
•
variable
session
servir
stocker
temporairement
information
utilisateur
serveur
•
El
présent
tout
page
site
pendant
présence
visiteur
•
El
accessible
via
superglobal
_SESSION
variable
session
gestion
session
•
visiteur
arriver
site
session
créer
PHP
générer
identifier
unique
appeler
‘
session
ID
•
fois
session
démarrer
automatiquement
session_start
infinité
variable
session
pouvoir
être
créer
selon
besoin
•
session
fermer
session_destroy
visiteur
charge
plus
pager
site
pendant
quelque
minute
visiteur
souhaiter
déconnecter
variable
session
variable
session
accessible
tout
page
site
web
falloir
appeler
session_start
chacun
page
avant
décrire
moindre
code
HTML
avant
doctype
variable
session
•
exemple
php
/
/
démarer
session
session_start
echo
'
bienvenu
page
numéro
/
/
se
amuser
créer
quelque
variable
session
_SESSION
_SESSION
'
prenom
'
=
'
Jean
'
_SESSION
'
motPass
'
=
'
MotDePasse
html
head
title
session
/
title
/
head
body
php
if
isset
_SESSION
'
prenom
'
{
echo
p
salut
savoir
être
tu
te
appel
_SESSION
'
prenom
'
`
`
/
p
echo
p
href
=
\
dns-remplacé
\
cliquer
ici
SVP
/
avoir
/
p
}
else
{
echo
variable
session
déclarer
br
/
}
/
body
/
html
Cookies
•
cookie
mécanisme
stocker
information
visiteur
afin
identifier
plus
tard
•
contrairement
variable
session
cookies
petit
fichier
stocker
ordinateur
utilisateur
durer
vie
pouvoir
définir
•
cookies
accessible
via
superglobal
_COOKIE
Cookies
•
fonction
setcookie
permettre
définir
cookie
envoyer
rester
en-tête
HTTP
àLes
cookies
faire
partir
en-tête
HTTP
imposer
setcookie
appeler
avant
tout
affichage
texte
avant
doctype
fonction
setcookie
pouvoir
prendre
jusqu
'
paramètre
seul
premier
obligatoire
car
définir
nom
cookie
deuxième
définir
valeur
cookie
troisième
définir
durer
vie
cookie
second
exemple
setcookie
nom
'
‘
nomUtilisateur
time
*
echo
_COOKIE
‘
nom
/
/
affichage
cookie
•
fonction
setrawcookie
exactement
setcookie
excepté
valeur
cookie
automatiquement
encoder
URL
lors
le
envoi
navigateur
•
détruire
cookie
appeler
setCookie
dater
expiration
passer
•
ex
setcookie
Nomcookie
valeurCookie
time
Cookies
•
exemple
cookie
sous
forme
tableau
php
setcookie
`
`
cookie
three
cookiethree
time
*
setcookie
`
`
cookie
two
cookietwo
time
*
setcookie
`
`
cookie
one
cookieone
time
*
/
/
affichage
cookies
php
if
isset
_COOKIE
'
cookie
'
{
/
/
exemple
de
appel
cookie
echo
'
le
cokie
two
'
_COOKIE
'
cookie
'
'
two
'
'
sinon
pouvoir
parcourir
foreach
comme
suivre
br
/
'
foreach
_COOKIE
'
cookie
'
name
=
valoir
{
name
=
htmlspecialchar
name
valoir
=
htmlspecialchar
valoir
echo
name
valoir
br
/
}
}
exercice
Ecrire
script
permettre
protéger
contenir
page
secret
login
mot
passer
utiliser
formulaire
noter
1-écrire
page
dns-remplacé
contenir
formulaire
login
/
mot
passer
lien
hypertexte
permettre
afficher
page
secret
variable
session
‘
login
déjà
créer
manipuler
page
donner
formulaire
comme
suivre
2-Diriger
utilisateur
vers
dns-remplacer
contenir
code
secret
ZZZZZZZZZZ
login
=
=
‘
login1
pass
=
=
‘
pass1
début
falloir
vérifier
login
=
=
login1
afficher
bonjour
M
/
madame
valeurdelogin
afficher
code
secret
créer
suite
lien
vers
page
précédent
lien
déconnexion
permettre
rester
page
tout
créer
variable
deconnecter
=
yes
3-Diriger
utilisateur
vers
dns-remplacer
contenir
code
secret
ZZZZZZZZZZ
login
=
=
‘
login2
pass
=
=
‘
pass2
début
falloir
vérifier
login
=
=
login2
afficher
bonjour
M
/
madame
valeurdelogin
afficher
code
secret
créer
suite
lien
vers
page
précédent
lien
déconnexion
permettre
rester
page
tout
créer
variable
deconnecter
=
yes
4-Sinon
afficher
page
message
Veuil
ez
entrer
login
mot
passer
valide
tout
laisser
formulaire
visible
afin
permettre
utilisateur
authentifier
programmation
orienter
objet
POO
classer
objet
•
classe
permettre
définition
nouveau
type
variable
rassembler
plusieurs
attribut
•
El
e
permettre
également
définition
fonction
manipuler
attribut
POO
fonction
appel
ent
‘
méthode
•
objet
instance
classer
objet
alors
assimiler
variable
classe
typer
objet
programmation
orienter
objet
POO
concept
base
POO
deux
but
•
faciliter
réutilisation
coder
déjà
écrire
grâce
le
héritage
–
héritage
permettre
partir
de
un
classe
déjà
existant
de
en
créer
nouveau
e
reprendre
caractéristique
adapter
besoin
sans
modifier
classe
base
–
possible
alors
redéfinir
méthode
classe
hériter
de
un
classe
base
sauf
méthode
défini
comme
final
appel
méthode
de
un
objet
possible
sans
soucier
type
intrinsèque
se
agir
polymorphisme
Ø
polymorphisme
traiter
capacité
le
objet
posséder
plusieurs
forme
•
le
encapsulation
donné
traitement
correspondant
–
encapsulation
permettre
regrouper
ensemble
attribut
ensemble
méthode
classe
permettre
manipuler
POO
PHP
syntaxe
baser
définition
classe
commencer
mot-clé
class
suivre
nom
classer
création
instanciation
objet
méthode
porter
nom
classer
appeler
automatiquement
constructeur
dernier
définir
mot
clé
__construct
lors
définition
méthode
classe
attribut
non
statique
appeler
operateur
objet
this-
nomDePropriêtre
exemple
class
personne
{
/
/
déclaration
attribut
public
nom
age
/
/
déclaration
constructeur
public
function
__construct
nom
age
{
this-
nom
=
nom
/
/
this
représenter
objet
entrain
définir
this-
age
=
age
}
/
/
déclaration
méthode
public
function
afficher
{
echo
this-
nom
echo
this-
age
}
}
POO
PHP
visibilité
de
un
attribut
de
un
méthode
•
public
attribut
méthode
public
alors
pouvoir
avoir
accès
depuis
ne
importer
•
private
imposer
quelque
restriction
accès
attribut
méthode
seulement
possible
depuis
le
intérieur
classe
Ø
mettre
jamais
constructeur
type
visibilité
private
sinon
el
e
pouvoir
jamais
être
appeler
pouvoir
instancier
classe
•
protected
effet
private
exception
tout
classe
fil
accès
attribut
protéger
POO
PHP
mot
clé
static
mot
clé
static
utiliser
après
type
visibilité
déclarer
méthode
attribut
statique
attribut
méthode
statique
pouvoir
être
utiliser
sans
avoir
besoin
de
instancier
classe
pouvoir
accéder
directement
utiliser
nom
classer
attribut
statique
dire
‘
attribut
classer
ainsi
tout
objet
accès
attribut
même
valeur
tout
objet
méthode
statique
classe
servir
manipuler
attribut
statique
ainsi
méthode
statique
pouvoir
manipuler
attribut
non
statique
classe
POO
PHP
opérateur
le
opérateur
résolution
porter
doubler
deux
point
fournir
moyen
de
accéder
membre
statique
constant
ainsi
que
au
attribut
méthode
surcharger
de
un
classe
àLe
mot
clé
self
utiliser
accéder
méthode
attribut
statique
depuis
classe
àLe
mot
clé
parent
utiliser
accéder
propriété
méthode
surcharger
constant
classe
depuis
classe
fil
e
.
àPour
référencer
élément
dehors
classe
utiliser
plutôt
nom
classe
nomClasse
POO
PHP
héritage
classe
pouvoir
hériter
de
un
autre
classe
utiliser
mot-clé
extends
déclaration
accéder
méthode
propriété
statique
classe
mère
le
opérateur
parent
utiliser
exemple
class
ExtendClass
extends
SimpleClass
{
/
/
redéfinition
méthode
parent
et
/
ou
ajout
attribut
function
afficher
{
echo
classer
étendre
parent
:
afficher
}
}
extended
=
new
ExtendClass
/
/
instanciation
extended-
afficher
/
/
polymorphisme
POO
PHP
abstraction
classer
abstraire
classe
pouvoir
instancier
directement
Ø
El
e
définir
mot
clé
abstract
déclaration
Ø
exploiter
classe
abstraire
falloir
créer
classe
hériter
classe
abstraire
classe
abstraire
permettre
définir
comportement
méthode
le
implémentation
coder
méthode
faire
classe
fil
Ø
rendre
méthode
abstrait
utiliser
mot
clé
abstract
avant
visibilité
méthode
alors
tout
classe
fil
forcer
écrire
méthode
POO
PHP
abstraction
exemple
classer
abstraire
abstract
class
NomAbstractClass
{
/
/
force
classe
fil
définir
deux
méthode
suivant
abstract
protected
function
getValue
abstract
protected
function
prefixValue
prefix
/
/
méthode
commun
public
function
printOut
{
print
this-
getValue
`
`
\n
}
}
POO
PHP
constant
classe
possible
définir
valeur
constant
intérieur
classe
modifiable
visibilité
défaut
constant
classer
public
exemple
class
MyClass
{
const
constant
=
'
valeur
constant
'
function
showConstant
{
echo
self
:
constant
`
`
\n
/
/
self
:
constant
=
‘
nouveau
e
valeur
entrainer
erreur
}
}
echo
MyClasse
constant
POO
PHP
constant
classe
attention
confondre
attribut
statique
constant
classe
àun
attribut
statique
pouvoir
tout
faire
changer
valeur
cours|cour
temps
différence
constant
valeur
fixer
POO
PHP
constant
classe
cependant
possible
déclarer
constant
classe
baser
changer
valeur
classer
fil
e
seulement
utiliser
méthode
get_called_class
retourner
nom
classe
depuis
laquel
e
constant
appeler
ainsi
nouveau
e
valeur
constant
propre
classe
fil
e
classe
mère
garder
valeur
initial
constant
POO
PHP
constant
classe
exemple
php
class
personne
{
/
/
déclaration
constant
const
nomClasse
=
personne
public
function
__construct
{
echo
‘
ceci
constructeur
/
*
pouvoir
changer
valeur
constant
ici
self
:
nomClasse
=
‘
test
*
/
}
public
function
afficher
{
c
=
get_called_class
echo
valeur
constante
nomClasse
'
:
nomClasse
'
br
/
'
}
}
class
HPErsonne
extends
personne
{
const
nomClasse
=
HPErsonne
public
function
__construct
{
parent
:
__construct
/
/
parent
:
nomClasse
=
‘
test2
retourner
encore
erreur
}
}
p
=
new
personne
p-
affiche
hp
=
new
HPErsonne
hp-
affiche
POO
PHP
mot
clé
final
mot-clé
final
indique
que
un
élément
pouvoir
être
changer
suite
programme
Ø
se
appliquer
méthode
de
un
classe
ainsi
classe
el
e
même
Ø
attribut
pouvoir
être
déclarer
comme
final
méthode
indiqué
comme
final
pouvoir
être
redéfinir
classer
dériver
Ø
pouvoir
se
en
servir
forcer
comportement
de
un
méthode
sous-classe
•
classe
final
pouvoir
être
dériver
non
possibilité
héritage
POO
PHP
mot
clé
final
exemple
classe
final
final
class
BaseClass
{
public
function
test
{
echo
BaseClass
:
test
appeler
}
/
/
ici
méthode
suivant
finale
final
public
function
moreTesting
{
echo
BaseClass
:
moreTesting
appeler
}
}
class
ChildClass
extends
BaseClass
{
}
/
/
résultat
fatal
error
class
ChildClass
may
not
inherit
from
final
class
BaseClass
SGBS
PHP
•
SGBD
logiciel
système
destiner
stocker
partager
information
base
donné
garantir
qualité
pérennité
confidentialité
information
tout
cacher
complexité
opération
.
WIKIPEDIA
parmi
logiciel
plus
connaître
trouver
MySQL
PostgreSQL
SQLite
oracle
MAriaDB
lister
détail
ée
SGBD
consulter
lien
http
/
/
dns-remplacer
/
sgbdcmp
/
#
LI
SGBS
PHP
système
pouvoir
être
catégoriser
comme
suivre
SGDB
relationnel
système
baser
modèle
relationnel
donner
stocker
table
structurer
colonne
ligner
relation
lier
table
entre
el
–
système
libre
MySQL
PostgreSQL
MariaDB
Firebird
Ingres
HSQLDB
derby
–
système
propriétaire
oracle
Database
Microsoft
SQL
Server
DB2
MaxDB
4D
dBase
Informix
Sybase
SGBD
orienter
objet
ZODB
db4o
embarquer
SQLite
Berkeley
DB
SGBD
NoSQL
Cassandra
redire
MongoDB
SimpleDB
BigTable
CouchDB
HBase
LevelDB
RethinkDB
Memcached
SGBS
PHP
manipulation
baser
donner
mysql
fait
via
interface
graphique
comme
‘
PhpMyAdmin
exécuter
script
php
PhpMyadmin
•
programme
permettre
de
avoir
vue
rapide
ensemble
donner
•
outil
plus
connaître
permettre
manipuler
base
donner
MySQL
•
PhpMyAdmin
livrer
WAMP
presque
tout
hébergeur
permettre
de
utiliser
phpMyAdmin
chemin
accès
http
/
/
localhost
:
/
phpMyAdmin
SGBS
PHP
utilisation
SGBD
via
script
PHP
manipulation
baser
donner
se
effectuer
temps
§
connexion
serveur
donner
§
sélection
baser
donner
§
requêter
§
exploitation
requêter
§
fermeture
connexion
MYSQL
PHP
exemple
SGBD
MYSQL
PHP
offrir
api
connecter
MySQL
1.Mysqli
/
/
connexion
baser
donner
link
=
mysqli_connect
`
`
localhost
root
passwords
dbName
if
mysqli_connect_errno
{
/
*
vérification
connexion
*
/
printf
`
`
échec
connexion
s\n
mysqli_connect_error
exit
}
query
=
select
Name
FROM
tablename
ORDER
by
ID
DESC
if
result
=
mysqli_query
link
query
{
/
*
exécution
requêter
*
/
while
row
=
mysqli_fetch_assoc
result
{
/
*
récupérer
tableau
associatif
*
/
printf
`
`
br
/
row
'
Name
}
mysqli_free_result
result
/
*
libérer
jeu
résultat
*
/
}
/
mysqli_close
link
/
*
fermeture
connexion
*
MYSQL
PHP
Mysql
obsolète
supprimer
depuis
version
PHP.7
=
mysql_connect
`
`
dns-remplacer
user
password
mysql_select_db
`
`
database
result
=
mysql_query
`
`
select
nom
from
tableName
row
=
mysql_fetch_assoc
result
echo
htmlentities
row
nom
'
MYSQL
PHP
PDO
OO
pdo
=
new
PDO
'
mysql
host
=
dns-remplacer
dbname
=
database
'
'
user
'
'
password
statement
=
pdo-
query
`
`
select
nom
from
tableName
row
=
statement-
fetch
PDO
:
FETCH_ASSOC
echo
htmlentities
row
‘
nom
'
RQ
PHP
offrir
possibilité
exploiter
api
mysqli
façon
orienter
objet
OO
mysqli
=
new
mysqli
`
`
localhost
root
password
world
result
=
mysqli-
query
`
`
select
Name
from
tablename
while
row
=
result-
fetch_assoc
{
echo
htmlentities
row
'
Name
'
`
`
br
/
}
MYSQL
PHP
POO
manipulation
résultat
requêter
sous
forme
objet
exemple
php
mysqli
=
new
mysqli
`
`
localhost
root
root
world
/
*
vérification
connexion
*
/
if
mysqli_connect_errno
{
printf
`
`
échec
connexion
s\n
mysqli_connect_error
exit
}
query
=
select
ID
Name
CountryCode
FROM
citoyen
ORDER
by
ID
DESC
LIMIT
,
if
result
=
mysqli-
query
query
{
/
*
récupérer
tableau
de
objet
*
/
while
obj
=
result-
fetch_object
{
printf
`
`
\n
obj-
Name
obj-
CountryCode
}
/
*
free
result
set
*
/
result-
clore
}
/
*
fermeture
connexion
*
/
mysqli-
clore
noter
fetch_object
affecter
attribut
le
objet
avant
de
en
appeler
constructeur
falloir
alors
vérifier
valeur
assigner
attribut
avant
leur
affecter
nouveau
valeur
déclaration
constructeur
MYSQL
PHP
POO
manipulation
résultat
requêter
sous
forme
objet
déclaration
class
exemple
/
/
définition
classe
class
personne
{
/
/
déclaration
attribut
Private
id
nom
age
/
/
déclaration
constructeur
public
function
__construct
id
=
{
if
this-
id
this-
id
=
id
}
public
function
__ToString
{
Return
‘
nom
this-
nom
‘
age
‘
this-
age
‘
br
/
}
}
/
/
connexion
base
donner
...
/
/
affichage
résultat
while
obj
=
result-
fetch_object
‘
personne
{
echo
obj
}
traquer
erreur
PDO
try-catch
PDOException
identifier
source
erreur
lors
exécution
script
PHP
ajouter
6ème
paramètre
PDO
comme
suivre
php
bdd
=
new
PDO
'
mysql
host
=
localhost
dbname
=
world
charset
=
utf8
'
'
root
'
array
PDO
:
ATTR_ERRMODE
=
PDO
:
ERRMODE_EXCEPTION
àDésormais
tout
requête
SQL
comporter
erreur
aller
avoir
message
beaucoup
plus
clair
exercice
PHP
/
MYSQL
exercice
Ecrire
script
PHP
afficher
ligne
tabler
citoyen
afficher
date
format
jj-mm-yyyy
exercice
refaire
exercice
coder
secret
utiliser
base
donner
-login1
/
pass1
aller
devoir
lire
page
dns-remplacer
-login2
.
/
pass2
aller
devoir
lire
page
dns-remplacer
transaction
modèle
ACID
transaction
ensemble
traitement
requêter
exécuter
tout
rien
ACID
=
atomicité
cohérence
isolation
durabilité
atomicité
assurer
que
un
transaction
faire
complet
tout
àCette
règle
devoir
être
respecter
tout
situation
notamment
lors
panne
de
électricité
défaillance
le
ordinateur
début
transaction
start
transaction
requête
select
UPDATE
.
.
validation
transaction
commettre
annulation
transaction
cas
erreur
ROLLBACK
RQ
erreur
intégrité
donner
roolback
faire
automatiquement
transaction
modèle
ACID
cohérence
assurer
chaque
transaction
amener
système
de
un
état
valide
autre
état
valide
t+1
avant
exécution
t+1
après
exécution
transaction
modèle
ACID
isolation
aucun
dépendance
entre
transaction
exemple
utilisation
notion
‘
verrou
bloquer
lecture
/
ou
écriture
accès
baser
donner
durabilité
assurer
lorsque
un
transaction
confirmer
el
e
demeurer
enregistrer
suite
de
un
panne
de
électricité
de
un
panne
le
ordinateur
de
un
autre
problème
transaction
MYSQL
MYSQL
particularité
gérer
plusieurs
moteur
stockage
BD
aussi
appeler
moteur
table
•
moteur
stockage
ensemble
algorithme
permettre
stocker
accéder
donner
SGBD
principe
seul
moteur
utiliser
SGBD
•
lister
tout
moteur
utiliser
requête
show
ENGINES
transaction
MYSQL
•
principal
moteur
stockage
MYSQL
MyISAM
très
populaire
ü
très
simple
utilisation
ü
très
performant
table
fréquemment
ouvrir
très
rapide
opération
count
lecture
ü
offrir
index
FULL-TEXT
permettre
faire
recherche
précis
texte
×
supporter
clé
étranger
transaction
×
gérer
verrouil
age
niveau
table
bloquer
table
entier
lors
opération
insertion
suppression
MAJ
transaction
MYSQL
•
principal
moteur
stockage
MYSQL
Memory
stocker
donner
table
mémoire
ram
ü
rapidité
accès
×
cas
panner
donner
stocker
supprimer
InnoDB
souvent
utiliser
secteur
sensible
ü
gestion
clé
étranger
support
transaction
chaque
requête
considérer
comme
transaction
ü
gérer
verrouil
age
niveau
ligner
×
proposer
index
FULL-TEXT
légèrement
plus
lent
opération
transaction
MYSQL
•
exemple
gestion
transaction
Mysql
achat
ligner
supporter
transaction
falloir
spécifier
moteur
InnoDB
lors
création
table
CREATE
tabler
compte
ID
int
solde
int
not
null
ENGINE
=
InnoDB
set
autocommettre
=
/
/
désactiver
validation
automatique
requête
start
transaction
UPDATE
compter
set
solder
=
solde+100
where
id
=
IDVendeur
UPDATE
compter
set
solder
=
solde-100
where
id
=
IDAcheteur
commettre
transaction
PDO
exemple
•
début
transaction
bdd-
beginTransaction
•
Specification
transaction
bdd-
query
bdd-
query
.
.
validation
/
annulation
transaction
bdd-
commettre
bdd-
rol
back
exercice
écrire
script
php
aller
compter
nombre
visiteur
site
remarquer
avant
écrire
script
penser
choisir
moteur
stockage
adéquat
utiliser
driver
PDO
référence
Manuel
PHP
•
http
/
/
dns-remplacer
cours|cour
ligner
•
https
/
/
dns-remplacer
/
course
/
programmez-en-oriente-objet-en-php
•
http
/
/
dns-remplacer
/
dater
/
livre
/
PHP_
dns-remplacé
