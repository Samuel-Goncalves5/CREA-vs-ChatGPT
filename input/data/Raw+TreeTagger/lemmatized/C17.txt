cours|cour
introductif
PHP
Riad
MOKADEM
que
être
ce
PHP
PHP
langage
interpréter
langage
script
exécuter
côté
serveur
comme
script
CGI
ASP
non
côté
client
script
écrire
Javascript
applet
java
se
exécuter
ordinateur
syntaxe
langage
provenir
celui
langage
Perl
java
principal
atout
•
grand
communauté
développeurs
partager
centaine
millier
de
exemple
script
PHP
•
•
•
gratuité
disponibilité
coder
source
PHP
distribuer
sous
licence
GNU
GPL
•
simplicité
de
interfaçage
baser
donner
nombreux
SGBD
supporter
plus
utiliser
langage
MySQL
SGBD
gratuit
disponible
nombreux
plateforme
Unix
Linux
Windows
MacOs
X
Solaris
etc
•
le
intégration
sein
nombreux
serveur
web
apache
Microsoft
IIS
etc
.
simplicité
de
écriture
script
possibilité
de
inclure
script
PHP
sein
de
un
page
HTML
contrairement
script
CGi
lequel
falloir
écrire
ligne
coder
afficher
chaque
ligne
langage
HTML
origine
PHP
langage
PHP
mettre
point
début
de
automne
Rasmus
Lerdorf
langage
script
permettre
conserver
trace
utilisateur
venir
consulter
CV
site
grâce
le
accès
baser
donner
le
intermédiaire
requête
SQL
ainsi
donner
nombreux
internaute
demander
programme
Rasmus
Lerdorf
mettre
ligne
premier
version
programme
que
il
baptiser
Personal
sommaire
page
Tools
puis
Personal
home
page
v1.0
traduire
page
personnel
version
Etant
donner
succès
PHP
Rasmus
Lerdorf
décider
de
améliorer
langage
intégrer
structure
plus
avancer
tel
boucle
structure
conditionnel
intégrer
package
permettre
de
interpréter
formulaire
que
il
développer
fi
Form
Interpreter
ainsi
support
mSQL
ce
être
façon
version
langage
baptiser
le
occasion
PHP
/
fi
version
vivre
jour
durant
le
été
rapidement
utiliser
nombreux
site
fin
puis
milieu
de
année
partir
Zeev
Suraski
Andi
Gurmans
rejoindre
Rasmus
former
équipe
programmeur
afin
mettre
point
PHP
Stig
Bakken
Shane
Caraveo
Jim
Winstead
rejoindre
suite
ce
être
ainsi
version
PHP
disponible
juin
fin
le
année
version
PHP
baptiser
PHP4
apparaître
PHP
aujourd'hui
cinquième
version
SGBD
supporter
PHP
PHP
permettre
interfaçage
simple
nombreux
système
gestion
baser
donner
SGBD
parmi
lequel
•
•
•
•
•
•
•
•
•
•
Adabas
dBase
Empress
FilePro
Informix
Interbase
mSQL
MySQL
oracle
PostgreSQL
•
•
•
•
Solid
Sybase
Velocis
Unix
dbm
le
interprétation
coder
serveur
script
PHP
simple
fichier
texte
contenir
instruction
écrire
le
aide
caractère
ASCII
bit
caractère
non
accentuer
inclus
code
HTML
le
aide
balise
spécial
stocker
serveur
fichier
devoir
avoir
le
extension
.php
pouvoir
être
interpréter
serveur
ainsi
lorsque
un
navigateur
client
désirer
accéder
page
dynamique
réaliser
PHP
•
•
serveur
reconnaître
le
extension
de
un
fichier
PHP
transmettre
le
interpréteur
PHP
•
•
le
interpréteur
exécuter
le
instruction
puis
envoyer
sortir
éventuel
serveur
dès
le
interpréteur
rencontrer
balise
indiquer
ligne
suivant
coder
PHP
lire
plus
instruction
exécuter
fin
script
serveur
transmettre
résultat
client
navigateur
script
PHP
interpréter
serveur
utilisateur
pouvoir
voir
code
source
coder
PHP
stocker
serveur
ne
être
jamais
visible
directement
client
puisque
dès
que
il
demander
le
accès
serveur
le
interprète
façon
aucun
modification
ne
être
apporter
navigateur
implantation
sein
coder
HTML
script
interpréter
serveur
deux
condition
nécessaire
•
•
fichier
contenir
code
devoir
avoir
le
extension
tel
.php
non
.html
code
PHP
contenir
coder
HTML
devoir
être
délimiter
balise
typer
script
PHP
devoir
•
•
comporter
le
extension
.php
être
imbriquer
entre
délimiteur
raison
conformité
certain
norme
XML
ASP
exemple
plusieurs
balise
pouvoir
être
utiliser
délimiter
code
PHP
php
script
language
=
php
/
script
php
exemple
script
simple
voici
ci-dessous
le
exemple
classique
script
PHP
html
head
title
exemple
/
title
/
head
body
php
echo
`
`
hello
world
/
body
/
html
noter
bien
évidemment
fonction
echo
permettre
de
afficher
navigateur
chainer
délimiter
guillemet
le
interprétation
coder
code
PHP
celui
comprendre
entre
délimiteur
php
ensemble
de
instruction
terminer
chacun
point-virgule
comme
langage
lorsque
coder
interpréter
espace
retour
chariot
tabulation
prendre
compter
serveur
tout
conseiller
de
en
mettre
ne
être
parce
que
il
interpréter
la|le
on
pouvoir
utiliser
afin
rendre
code
plus
lisible
puisque
utilisateur
pouvoir
lire
code
source
interpréter
commentaire
autre
façon
rendre
code
plus
compréhensible
consister
insérer
commentaire
ligner
tout
simplement
ignorer
serveur
lors
le
interprétation
faire
possible
comme
langage
de
utiliser
balise
aller
permettre
délimiter
explication
afin
le
interpréteur
ignorer
passer
directement
suite
fichier
délimiteur
/
*
*
/
commentaire
noter
façon
suivant
/
*
voici
commentaire
*
/
toutefois
quelque
règle
respecter
•
commentaire
pouvoir
être
placer
ne
importer
le
intérieur
délimiteur
script
PHP
•
•
•
•
commentaire
pouvoir
contenir
délimiteur
fin
commentaire
*
/
commentaire
pouvoir
être
imbriquer
commentaire
pouvoir
être
écrire
plusieurs
ligne
commentaire
pouvoir
couper
mot
coder
deux
possible
aussi
de
utiliser
type
commentaire
permettre
mettre
tout
fin
de
un
ligne
commentaire
utiliser
double
slash
/
/
tout
situer
droit
symbole
mettre
commentaire
typologie
manière
de
écrire
chose
langage
PHP
importance
langage
PHP
exemple
sensible
casser
anglais
case
sensitif
cela
signifier
que
un
nom
contenir
majuscule
différent
nom
écrire
minuscule
toutefois
régler
se
appliquer
fonction
spécification
langage
PHP
préciser
fonction
print
pouvoir
être
appeler
print
Print
PRINT
enfin
tout
instruction
terminer
point-virgule
introduction
serveur
web
logiciel
permettre
rendre
accessible
nombreux
ordinateur
client
page
web
stocker
disquer
fiche
pratique
expliquer
comment
installer
serveur
web
apache
système
type
UNIX
typiquement
distribution
Linux
tel
RedHat
Mandrake
ne
importer
quel
autre
cela
quelque
connaissance
Linux
bien
Unix
nécessaire
but
fiche
aller
être
de
être
capable
récupérer
source
différent
élément
nécessaire
compiler
compilateur
nécessaire
généralement
installer
défaut
plupart
distribution
Linux
afin
de
avoir
système
opérationnel
le
installation
suivant
comprendre
le
installation
le
interpréteur
PHP
langage
programmation
permettre
créer
page
créer
dynamiquement
ainsi
SGBD
MySQL
système
gestion
baser
donner
relationnel
puissant
fonctionner
sous
Linux
gratuit
Télécharger
source
•
•
•
source
PHP
pouvoir
être
télécharger
site
http
/
/
dns-remplacé
source
apache
pouvoir
être
télécharger
site
http
/
/
dns-remplacer
source
MySQL
pouvoir
être
télécharger
site
http
/
/
dns-remplacer
installer
apache
PHP
décompresser
archives
@ord@
tar
zxvf
apache_1.3.x
.
dns-remplacé
tar
zxvf
php-3.0.x.tar
configurer
apache
@ord@
cd
apache_1.3.x
.
/
configurer
prefix
=
/
www
configurer
PHP
@ord@
cd
.
.
/
php-3.0.x
.
/
configurer
with-mysql
with-apache
=
.
.
/
apache_1.3.x
-enable-track-vars
préférer
installer
PHP
autre
répertoire
falloir
utiliser
le
option
configuration
-with-config-file-path
=
/
path
compiler
PHP
@ord@
make
make
install
installer
apache
@ord@
cd
.
.
/
apache_1.3.x
.
/
configurer
prefix
=
/
www
activatemodule
=
src
/
module
/
php3
/
libphp3.a
@ord@
make
make
install
modifier
fichier
configuration
PHP
@ord@
cd
.
.
/
php-3.0.x
cp
dns-remplacer
/
usr
/
local
/
lib
/
dns-remplacer
pouvoir
désormais
éditer
fichier
configuration
/
usr
/
local
/
lib
/
dns-remplacer
Editez
fichier
configuration
serveur
apache
généralement
dns-remplacer
dns-remplacer
ajouter
ligne
suivant
AddType
application
/
x-httpd-php3
.php3
se
agir
choisir
le
extension
associer
script
PHP
souci
de
homogénéité
courir
choisir
le
extension
.php3
démarrer
serveur
apache
essentiel
de
arrêter
redémarrer
serveur
non
uniquement
relancer
suffire
généralement
taper
apachectl
stop
puis
apachectl
start
Premier
lancement
vérifier
le
installation
bien
fonctionner
suffire
créer
petit
fichier
raciner
document
serveur
web
appeler
DocumentRoot
fichier
configuration
dns-remplacer
nommer
fichier
dns-remplacer
mettre
code
suivant
fichier
html
head
title
exemple
/
title
/
head
body
php
echo
`
`
PHP
fonctionner
`
`
/
body
/
html
lancer
navigateur
machine
entrer
le
URL
suivant
http
/
/
localhost
/
dns-remplacer
localhost
désigner
machine
lequel
trouver
devoir
logiquement
voir
apparaître
phrase
`
`
PHP
fonctionner
navigateur
introduction
EasyPHP
afin
faire
fonctionner
PHP
nécessaire
base
de
en
télécharger
source
depuis
site
spécialiser
exemple
dns-remplacer
puis
compiler
celui
-ci
ainsi
de
éditer
lien
afin
créer
fichier
exécutable
processus
demander
notion
avancer
informatique
ce
être
pourquoi
trois
adepte
PHP
Emmanuel
Faivre
Laurent
Abbal
Thierry
Murail
mettre
point
package
appeler
EasyPHP
contenir
produit
incontournable
scène
PHP
•
•
•
•
serveur
Web
apache
moteur
script
PHP4
baser
donner
MySQL
outil
gestion
baser
donner
graphique
Phpmyadmin
EasyPHP
ainsi
pack
fonctionner
sous
Windows
permettre
de
installer
clin
de
œil
élément
nécessaire
fonctionnement
de
un
site
web
dynamique
développer
PHP
récupérer
EasyPHP
pack
EasyPHP
disponible
site
suivant
•
•
dns-remplacer
dns-remplacer
suffire
premier
temps
télécharger
version
plus
récent
EasyPHP
pouvoir
télécharger
adresse
pager
téléchargement
EasyPhP
installer
EasyPHP
le
installation
EasyPHP
très
simple
notamment
le
apparition
version
comporter
installeur
automatique
installer
EasyPHP
suffire
premier
temps
double-cliquer
fichier
télécharger
précédemment
le
écran
de
installation
EasyPHP
suivre
devoir
apparaître
cliquer
Next
suivre
/
le
installeur
aller
ensuite
demander
préciser
répertoire
de
installation
puis
aller
demander
création
de
un
groupe
menu
démarrer
enfin
aller
récapituler
élément
le
installation
avant
procéder
copie
fichier
après
copie
fichier
EasyPHP
présenter
le
écran
suivre
indiquer
le
installation
se
être
dérouler
correctement
pouvoir
lors
le
installation
le
installeur
indiquer
le
erreur
suivant
erreur
indique
librairie
dns-remplacer
'
pû
être
copier
raison
erreur
provenir
faire
système
Windows
actuellement
train
de
utiliser
libraire
pouvoir
la|le
écraser
remédier
copier
librairie
exemple
\
disque
dur
cliquer
ici
télécharger
librairie
Windows
9x
puis
redémarrer
mode
MS-DOS
puis
taper
copy
\
dns-remplacer
\windows\system
système
aller
demander
confirmer
écrasement
répondre
`
`
oui
O
redémarrer
Windows
EasyPHP
devoir
fonctionner
démarrage
EasyPHP
démarrer
apache
MySQL
PHP
suffire
lancer
EasyPHP
partir
groupe
créer
menu
démarrer
vérifier
EasyPHP
fonctionner
suffire
taper
navigateur
préférer
•
•
http
/
/
localhost
http
/
/
ip-remplacée
>
deux
adresse
ci-dessus
représenter
machine
local
Editer
site
créer
site
web
dynamique
EasyPHP
suffire
déposer
création
sousrépertoire
/
www
EasyPHP
exemple
créer
fichier
texte
contenir
texte
suivant
phpinfo
puis
renommer
fichier
dns-remplacer
déposez-le
sous-répertoire
/
www
pouvoir
désormais
visualiser
résultat
le
adresse
suivant
http
/
/
localhost
/
dns-remplacer
plus
de
information
plus
de
information
cas
problème
EasyPHP
aller
dns-remplacer
cas
problème
commencer
consulter
FAQ
puis
consulter
Forum
concept
variable
PHP
variable
objet
repérer
nom
pouvoir
contenir
donnée
pouvoir
être
modifier
lors
le
exécution
programmer
variable
langage
PHP
pouvoir
être
trois
type
•
•
•
scalaire
tableau
tableau
associatif
quelque
type
variable
nom
devoir
obligatoirement
être
précéder
caractère
dollar
contrairement
nombreux
langage
programmation
comme
langage
variable
PHP
ne
avoir
besoin
de
être
déclarer
ce
est-à-dire
la|le
on
pouvoir
commencer
utiliser
sans
avoir
avertir
le
interpréteur
précédemment
ainsi
variable
exister
précédemment
contenir
utiliser
sinon
le
interpréteur
affecter
valeur
assigner
défaut
façon
ajouter
nouveau
variable
non
définir
plus
haut
code
valeur
Nommage
variable
PHP
nom
variable
devoir
répondre
certain
critère
•
nom
variable
devoir
commencer
lettre
majuscule
minuscule
`
`
_
chiffre
•
nom
variable
pouvoir
comporter
lettre
chiffrer
caractère
_
espace
autoriser
nom
variable
correct
nom
variable
incorrect
raison
variable
nom
variable
comporter
espace
Nom_De_Variable
123Nom_De_Variable
commencer
chiffre
nom_de_variable
toto
dns-remplacer
caractère
spécial
nom_de_variable_123
Nom-de-variable
signe
-
interdire
nom_de_variable
nom_de_variable
commencer
nom
variable
sensible
casser
langage
PHP
faire
différence
entre
nom
majuscule
nom
minuscule
falloir
veiller
utiliser
nom
comporter
casse
toutefois
nom
fonction
faire
exception
règle
variable
scalaire
langage
PHP
proposer
trois
type
variable
scalaire
•
•
entier
nombre
naturel
sans
décimale
sans
virgule
réel
nombre
décimal
parler
généralement
type
double
car
se
agir
nombre
décimal
double
précision
•
chaine
caractère
ensemble
caractère
ne
être
nécessaire
PHP
typer
variable
ce
est-à-dire
définir
type
suffire
assigner
valeur
définir
type
•
•
•
entier
nombre
sans
virgule
réel
nombre
virguler
réalité
point
chainer
caractère
ensemble
caractère
entre
guillemet
simple
double
instruction
type
variable
variable
=
type
entier
variable
=
type
entier
variable
=
type
réel
variable
=
type
réel
variable
=
`
`
type
chaîner
variable
=
`
`
bonjour
tout
monde
typer
chaîne
exister
caractère
repérer
coder
ASCII
spécial
permettre
de
effectuer
opération
particulier
caractère
pouvoir
être
représenter
plus
simplement
langage
PHP
grâce
caractère
'
\
'
suivre
de
un
lettre
précis
que
il
se
agir
de
un
caractère
contrôler
caractère
description
\
guillemet
\\
barrer
oblique
inverse
antislash
\r
retour
chariot
\n
retour
ligner
\t
tabulation
effet
certain
caractère
pouvoir
être
représenter
autrement
retour
ligne
pouvoir
être
représenter
le
écran
de
autre
part
caractère
\
`
`
pouvoir
faire
partie
tant
tel
de
un
chaîne
caractère
raison
évident
de
ambiguité
variable
tableau
variable
tel
vue
permettre
stocker
que
un
seul
donner
fois
or
nombreux
donnée
comme
cela
souvent
cas
variable
distinct
beaucoup
trop
lourd
gérer
heureusement
PHP
proposer
structure
donner
permettre
stocker
le
ensemble
donner
`
`
variable
commune
ainsi
accéder
valeur
suffire
parcourir
variable
type
complexe
composer
variable
type
simple
tableau
stocker
donner
sous
forme
lister
donner
contenir
liste
accessible
grâce
index
numéro
représenter
le
élément
lister
contrairement
langage
tel
langage
possible
stocker
élément
type
différent
tableau
ainsi
désigner
élément
tableau
suffire
faire
suivre
nom
tableau
le
indice
le
élément
entre
crochet
tableau
=
tableau
=
`
`
CCM
PHP
ne
être
nécessaire
préciser
valeur
le
index
lorsque
la|le
on
vouloir
remplir
tableau
car
assigner
valeur
premier
élément
tableau
vide
incrémenter
indice
suivant
façon
facile
remplir
tableau
valeur
code
précédent
équivalent
tableau
=
tableau
=
`
`
CCM
•
•
indicer
tableau
commencer
zéro
tout
type
variable
pouvoir
être
contenir
tableau
lorsque
un
tableau
contenir
de
autre
tableau
parler
tableau
multidimensionnel
possible
créer
directement
tableau
multidimensionnel
utiliser
plusieurs
pair
crochet
index
autant
pair
crochet
dimension
vouloir
exemple
tableau
deux
dimension
pouvoir
être
déclarer
comme
suivre
tableau
tableau
tableau
tableau
=
=
=
=
CCM
revoir
variable
tableau
associatif
PHP
permettre
le
utilisation
chaîner
caractère
lieu
simple
entier
définir
indice
de
un
tableau
parler
alors
tableau
associatif
façon
nommer
indice
pouvoir
parfois
être
plus
agréable
utiliser
toto
`
`
age
=
toto
`
`
adresse
=
`
`
rue
boire
fleurir
toto
`
`
nom
=
`
`
ah
bien
aimer
connaître
nom
famille
toto
porter
visibilité
variable
selon
le
endroit
déclarer
variable
celui
-ci
pouvoir
être
accessible
visible
partout
coder
bien
portion
confiner
celui
-ci
le
intérieur
de
un
fonction
exemple
parler
porter
visibilité
de
un
variable
lorsque
un
variable
déclarer
code
ce
est-à-dire
le
extérieur
tout
fonction
tout
bloc
de
instruction
accessible
partout
coder
ne
importer
quel
fonction
programme
pouvoir
faire
appel
variable
parler
alors
variable
global
lorsque
la|le
on
déclarer
variable
le
intérieur
de
un
bloc
de
instruction
entre
accolade
porter
confiner
le
intérieur
bloc
lequel
déclarer
•
variable
déclarer
début
coder
ce
est-à-dire
avant
tout
bloc
donner
global
pouvoir
alors
utiliser
partir
ne
importer
quel
bloc
de
instruction
•
variable
déclarer
le
intérieur
de
un
bloc
de
instruction
fonction
boucler
exemple
porter
limiter
seul
bloc
de
instruction
ce
est-à-dire
que
elle
inutilisable
ailleurs
parler
alors
variable
local
de
un
manière
général
préférable
donner
nom
différent
variable
local
global
raison
lisibilité
compréhension
coder
définition
constant
constant
variable
valeur
inchangeable
lors
le
exécution
de
un
programme
PHP
constant
définir
grâce
fonction
define
syntaxe
fonction
define
suivant
define
`
`
Nom_de_la_variable
valeur
nom
de
un
constante
définir
le
aide
fonction
define
devoir
commencer
caractère
façon
aucun
affectation
ne
être
possible
que
être
ce
que
un
opérateur
opérateur
symbole
permettre
manipuler
variable
ce
est-à-dire
effectuer
opération
évaluer
distinguer
plusieurs
type
de
opérateur
•
•
•
•
•
•
•
opérateur
calcul
opérateur
de
assignation
opérateur
de
incrémentation
opérateur
comparaison
opérateur
logique
opérateur
bit-à-bit
opérateur
rotation
bit
opérateur
calcul
opérateur
calcul
permettre
modifier
mathématiquement
valeur
de
un
variable
opérateur
dénomination
effet
résultat
x
=
exemple
+
opérateur
de
addition
ajouter
deux
valeur
x+3
-
opérateur
soustraction
soustraire
deux
valeur
x-3
*
opérateur
multiplication
multiplier
deux
valeur
x
*
/
plus
opérateur
division
diviser
deux
valeur
x
/
=
opérateur
de
affectation
affecter
valeur
variable
x
=
mettre
valeur
variable
x
opérateur
modulo
x
donne
rester
division
entier
entre
nombre
opérateur
de
assignation
opérateur
permettre
simplifier
opération
tel
ajouter
valeur
variable
stocker
résultat
variable
tel
opération
se
écrire
habituellement
façon
suivant
exemple
x
=
x+2
opérateur
de
assignation
possible
de
écrire
opération
sous
forme
suivant
x+
=
ainsi
valeur
x
avant
opération
après
autre
opérateur
typer
suivant
opérateur
effet
+
=
addition
deux
valeur
stocker
résultat
variable
gauche
-
=
soustraire
deux
valeur
stocker
résultat
variable
*
=
multiplier
deux
valeur
stocker
résultat
variable
/
=
diviser
deux
valeur
stocker
résultat
variable
=
donner
rester
division
deux
valeur
stocker
résultat
variable
|
=
effectuer
logique
entre
deux
valeur
stocker
résultat
variable
^
=
effectuer
exclusif
entre
deux
valeur
stocker
résultat
variable
&
=
effectuer
logique
entre
deux
valeur
stocker
résultat
variable
.
=
concaténer
deux
chaîne
stocker
résultat
variable
opérateur
de
incrémentation
type
de
opérateur
permettre
facilement
augmenter
diminuer
de
un
unité
variable
opérateur
très
utile
structure
tel
boucle
besoin
de
un
compteur
variable
augmenter
opérateur
type
x++
permettre
remplacer
notation
lourd
tel
x
=
x+1
bien
x+
=
opérateur
dénomination
effet
syntaxe
résultat
x
valoir
++
incrémentation
augmenter
de
un
unité
variable
x++
Décrémentation
diminuer
de
un
unité
variable
x
opérateur
comparaison
opérateur
dénomination
=
=
confondre
opérateur
de
égalité
signe
de
affectation
=
effet
comparer
deux
valeur
vérifier
égalité
exemple
x
=
=
résultat
retourner
x
égal
sinon
opérateur
de
infériorité
strict
vérifier
que
un
variable
strictement
inférieur
x
valeur
retourner
x
inférieur
sinon
=
opérateur
de
infériorité
vérifier
que
un
variable
inférieur
égal
x
=
valeur
retourner
x
inférieur
égaler
sinon
opérateur
supériorité
strict
vérifier
que
un
variable
strictement
supérieur
x
valeur
retourner
x
supérieur
sinon
=
opérateur
supériorité
vérifier
que
un
variable
supérieur
égal
x
=
valeur
retourner
x
supérieur
égal
sinon
=
opérateur
différence
vérifier
que
un
variable
x
=
différent
de
un
valeur
retourner
x
différent
sinon
opérateur
logique
booléen
type
de
opérateur
permettre
vérifier
plusieurs
condition
vrai
opérateur
dénomination
effet
syntaxe
|
|
or
logique
vérifier
que
un
condition
réaliser
condition1
|
|
condition2
&
&
AND
logique
vérifier
tout
condition
réaliser
condition1
&
&
condition2
XOR
exclusif
vérifier
que
un
seul
condition
réaliser
condition1
XOR
condition2
non
logique
inverse
le
état
de
un
variable
booléen
retourner
condition
valeur
variable
valoir
valoir
opérateur
bit-à-bit
comprendre
opérateur
cela
ne
être
important
ne
en
probablement
le
utilité
celui
vouloir
comprendre
rendez-
chapitre
suivant
•
•
•
compréhension
binaire
représentation
donné
instruction
arithmétique
logique
assembleur
type
de
opérateur
traiter
opérande
comme
donner
binaire
plutôt
donné
décimale
hexadécimal
octal
opérateur
traiter
donner
selon
représentation
binaire
retourner
valeur
numérique
standard
format
de
origine
opérateur
suivant
effectuer
opération
bit-à-bit
ce
est-à-dire
bit
poids
opérateur
dénomination
&
bit-à-bit
effet
retourner
deux
bit
poids
syntaxe
&
&
résultat
|
bit-à-bit
retourne
le
un
le
autre
deux
bit
poids
deux
|
|
^
exclusif
retourne
le
un
deux
bit
poids
deux
^
^
~
complément
non
retourner
bit
inversement
~
~
opérateur
rotation
bit
comprendre
opérateur
cela
ne
être
important
ne
en
probablement
le
utilité
celui
vouloir
comprendre
rendez-
chapitre
suivant
•
•
•
compréhension
binaire
représentation
donné
instruction
arithmétique
logique
assembleur
type
de
opérateur
traiter
opérande
comme
donner
binaire
de
un
longueur
bit
plutôt
donné
décimale
hexadécimal
octal
opérateur
traiter
donner
selon
représentation
binaire
retourner
valeur
numérique
standard
format
de
origine
opérateur
suivant
effectuer
rotation
bit
ce
est-à-dire
que
il
décaler
chacun
bit
de
un
nombre
bit
vers
gauche
vers
droit|droite
premier
opérande
désigner
donner
lequel
aller
faire
décalage
second
désigner
nombre
bit
duquel
aller
être
décaler
opérateur
dénomination
effet
syntaxe
décaler
bit
vers
gauche
multiplier
chaque
décalage
zéro
sortir
gauche
perdre
tandis
zéro
insérer
droit
rotation
gauche
décaler
bit
vers
droit|droite
diviser
rotation
droit
chaque
décalage
zéro
sortir
droit
conservation
signer
perdre
tandis
bit
non-nul
poids
plus
fort
recopier
gauche
résultat
autre
opérateur
opérateur
pouvoir
être
classer
catégorie
spécifique
tout
chacun
importance
opérateur
dénomination
effet
syntaxe
concaténation
joindre
deux
chaîne
bouillir
bout
bonjour
`
`
revoir
référencement
variable
permettre
définir
variable
MaVariable
=
-
propriété
de
un
objet
permettre
de
accéder
donner
membre
de
un
classe
MonObjet
Propriete
résultat
BonjourAu
revoir
priorité
lorsque
la|le
on
associer
plusieurs
opérateur
falloir
le
interprêteur
PHP
savoir
quel
ordre
traiter
voici
le
ordre
décroissant
priorité
tout
opérateur
priorité
opérateur
+++++++++++++++
++++++++++++++
++
~
+++++++++++++
*
/
++++++++++++
+
-
+++++++++++
=
=
++++++++++
=
=
=
+++++++++
&
++++++++
^
+++++++
|
-
++++++
&
&
+++++
|
|
++++
+++
=
+
=
-
=
*
=
/
=
=
=
=
=
&
=
^
=
|
=
++
AND
+
XOR
que
être
ce
que
un
structure
conditionnel
appeler
structure
conditionnel
instruction
permettre
tester
condition
vrai
non
ce
est-à-dire
valeur
expression
valoir
PHP
associer
mot
clé
true
false
structure
conditionnel
pouvoir
être
associer
structure
répéter
suivant
réalisation
condition
appeler
structure
structure
boucler
notion
bloc
expression
suivre
de
un
point-virgule
appelé
instruction
exemple
a++
instruction
lorsque
la|le
on
vouloir
regrouper
plusieurs
instruction
pouvoir
créer
le
on
appeler
bloc
ce
est-à-dire
ensemble
de
instruction
suivre
respectivement
point-virgule
comprendre
entre
accolade
{
}
instruction
if
while
for
pouvoir
exemple
être
suivre
de
un
bloc
de
instruction
exécuter
le
instruction
if
le
instruction
if
structurer
test
plus
basique
retrouver
tout
langage
syntaxe
différent
permettre
de
exécuter
série
de
instruction
jamais
condition
réaliser
syntaxe
expression
suivant
if
condition
réaliser
{
liste
de
instruction
}
remarque
•
•
condition
devoir
être
entre
parenthèse
possible
définir
plusieurs
condition
remplir
opérateur
&
&
|
|
exemple
le
instruction
suivant
tester
deux
condition
vrai
if
condition1
&
&
condition2
le
instruction
ci-dessous
exécuter
instruction
le
un
le
autre
deux
condition
vrai
if
condition1
|
|
condition2
•
se
il
'
que
un
instruction
accolader
nécessaire
le
instruction
if
else
le
instruction
if
former
basique
permettre
tester
que
un
condition
or
plupart
temps
aimer
pouvoir
choisir
instruction
exécuter
cas
non
réalisation
condition
le
expression
if
else
permettre
de
exécuter
autre
série
de
instruction
cas
non-réalisation
condition
syntaxe
expression
suivant
if
condition
réaliser
{
liste
de
instruction
}
else
{
autre
série
de
instruction
}
le
instruction
if
elseif
else
le
instruction
if
else
permettre
tester
que
un
condition
or
parfois
nécessaire
tester
plusieurs
condition
façon
exclusif
ce
est-à-dire
tout
condition
seul
réaliser
le
expression
if
elseif
else
permettre
de
enchaîner
série
de
instruction
éviter
de
avoir
imbriquer
instruction
if
syntaxe
expression
suivant
if
condition
réaliser
{
liste
de
instruction
}
elseif
autre
condition
réaliser
{
autre
série
de
instruction
}
else
dernier
condition
réaliser
{
série
de
instruction
}
façon
plus
court
faire
test
opérateur
ternaire
possible
faire
test
structurer
beaucoup
moins
lourd
grâce
structure
suivant
appelé
opérateur
ternaire
condition
instruction
vrai
instruction
faux
remarque
•
•
•
condition
devoir
être
entre
parenthèse
lorsque
condition
vrai
le
instruction
gauche
exécuter
lorsque
condition
fausser
le
instruction
droit
exécuter
le
instruction
switch
le
instruction
switch
permettre
faire
plusieurs
test
valeur
contenir
de
un
variable
branchement
conditionnel
simplifier
beaucoup
test
plusieurs
valeur
de
un
variable
car
opération
compliquer
possible
if
imbriqué
syntaxe
suivant
switch
variable
{
caser
Valeur1
liste
de
instruction
break
caser
Valeur2
liste
de
instruction
break
caser
valeur
liste
de
instruction
break
default
liste
de
instruction
break
}
parenthèse
suivre
mot
clé
switch
indiquer
expression
valeur
tester
successivement
chacun
case
lorsque
le
expression
tester
égal
valeur
suivant
case
liste
de
instruction
suivre
celui
-ci
exécuter
mot
clé
break
indiquer
sortir
structure
conditionnel
mot
clé
default
précéder
liste
de
instruction
exécuter
le
expression
ne
être
jamais
égal
valeur
ne
oublier
de
insérer
instruction
break
entre
chaque
test
genre
de
oubli
difficile
détecter
car
aucun
erreur
ne
être
signaler
boucle
boucler
structure
permettre
de
exécuter
plusieurs
fois
série
de
instruction
jusqu
'
que
un
condition
plus
réaliser
appeler
parfois
structure
instruction
répétitif
bien
itération
façon
plus
commune
faire
boucle
créer
compteur
variable
se
incrémenter
ce
est-à-dire
augmenter
chaque
tour
boucler
faire
arrêter
boucle
lorsque
compteur
dépasser
certain
valeur
boucler
for
le
instruction
for
permettre
de
exécuter
plusieurs
fois
série
de
instruction
ce
être
boucle
syntaxe
suffire
préciser
nom
variable
servir
compteur
éventuellement
valeur
départir
condition
variable
lequel
boucler
se
arrêter
basiquement
condition
tester
valeur
compteur
dépasser
limite
enfin
instruction
incrémenter
décrémente
compteur
syntaxe
expression
suivant
for
compteur
condition
modification
compteur
{
liste
de
instruction
}
exemple
for
i
=
i
i++
{
echo
`
`
i
br
}
boucle
afficher
fois
valeur
i
ce
est-à-dire
,
,
,
,
commencer
i
=
vérifier
i
bien
inférieur
etc
jusqu
'
atteindre
valeur
i
=
lequel
condition
plus
réaliser
boucle
se
interrompre
programme
continuer
cours|cour
de
autre
part
langage
PHP
autoriser
déclaration
variable
boucler
le
instruction
for
elle
même
exemple
for
i
=
i
i++
{
echo
`
`
i
br
}
•
falloir
toujours
vérifier
boucle
bien
condition
sortie
i.e.
compteur
se
incrémenter
correctement
•
instruction
echo
boucle
bon
moyen
vérifier
valeur
compteur
la|le
afficher
•
falloir
bien
compter
nombre
fois
la|le
on
vouloir
faire
exécuter
boucle
o
for
i
=
i
i++
exécuter
fois
boucler
i
o
for
i
=
i
=
i++
exécuter
fois
boucler
i
o
for
i
=
i
i++
exécuter
fois
boucler
i
o
for
i
=
i
=
i++
exécuter
fois
boucler
i
le
instruction
while
le
instruction
while
représenter
autre
moyen
de
exécuter
plusieurs
fois
série
de
instruction
syntaxe
expression
suivant
while
condition
réaliser
{
liste
de
instruction
}
instruction
exécuter
liste
de
instruction
tant
while
mot
anglais
signifier
tant
condition
réaliser
condition
sortir
pouvoir
être
ne
importer
quel
structurer
conditionnel
risque
boucler
infini
boucle
condition
toujours
vrai
grand
ce
est-à-dire
que
elle
risquer
provoquer
plantage
navigateur
saut
inconditionnel
pouvoir
être
nécessaire
faire
sauter
boucler
plusieurs
valeur
sans
autant
mettre
fin
celui
-ci
syntaxe
expression
`
`
continuer
instruction
placer
boucle
la|le
associer
généralement
structure
conditionnel
sinon
ligne
situer
entre
instruction
fin
boucler
obsolète
exemple
imaginer
la|le
on
vouloir
imprimer
x
aller
valeur
/
x-7
évident
x
=
erreur
heureusement
grâce
le
instruction
continu
possible
traiter
valeur
partir
puis
continuer
boucle
x
=
while
x
=
{
if
x
=
=
{
echo
`
`
division
zéro
`
`
continuer
}
=
/
x-7
echo
`
`
br
x++
}
erreur
programmer
peut-être
la|le
avoir
vous
vue
lorsque
x
égal
compteur
se
incrémenter
plus
rester
constamment
valeur
falloir
écrire
x
=
while
x
=
{
if
x
=
=
{
echo
`
`
division
x++
continuer
}
=
/
x-7
echo
`
`
br
x++
}
arrêt
inconditionnel
le
inverse
pouvoir
être
vouloir
de
arrêter
prématurément
boucle
autre
condition
celui
préciser
le
en-tète
boucler
le
instruction
break
permettre
de
arrêter
boucle
for
bien
while
se
agir
tout
comme
continuer
la|le
associer
structure
conditionnel
sans
lequel
boucle
faire
jamais
plus
de
un
tour
le
exemple
tout
le
heure
exemple
la|le
on
savoir
quel
moment
dénominateur
x-7
se
annuler
bon
OK
équation
plus
compliqué
exemple
possible
faire
arrêter
boucle
cas
de
annulation
dénominateur
éviter
division
zéro
for
x
=
x
=
x++
{
=
x-7
if
=
=
{
echo
`
`
division
break
}
echo
`
`
/
br
}
arrêt
de
exécution
script
PHP
autoriser
le
utilisation
commander
exit
permettre
de
interrompre
totalement
le
interprétation
script
signifier
serveur
ne
envoyer
plus
de
information
navigateur
script
figer
état
actuel
instruction
particulièrement
utile
lors
le
apparition
de
erreur
notion
fonction
appeler
fonction
sous-programme
permettre
de
effectuer
ensemble
de
instruction
simple
appel
fonction
corps
programmer
principal
fonction
permettre
de
exécuter
plusieurs
partie
programmer
série
de
instruction
cela
permettre
simplicité
coder
taille
programme
minimal
de
autre
part
fonction
pouvoir
faire
appel
elle
même
parler
alors
fonction
récursif
falloir
oublier
mettre
condition
sortir
risquer
sinon
pouvoir
arrêter
programme
déclaration
de
un
fonction
PHP
receler
nombreux
fonction
intégré
permettre
de
effectuer
action
courant
toutefois
possible
définir
fonction
dire
fonction
utilisateur
afin
simplifier
le
exécution
série
de
instruction
répétitif
contrairement
nombreux
autre
langage
PHP
nécessiter
la|le
on
définir
fonction
avant
celui
-ci
pouvoir
être
utiliser
car
la|le
appeler
corps
programme
falloir
le
interpréteur
connaître
ce
est-à-dire
que
il
connaître
nom
argument
instruction
que
elle
contenir
définition
de
un
fonction
se
appeler
`
`
déclaration
pouvoir
faire
ne
importer
code
déclaration
de
un
fonction
faire
grâce
mot-clé
function
selon
syntaxe
suivant
function
Nom_De_La_Fonction
argument1
argument2
{
liste
de
instruction
}
remarque
•
nom
fonction
suivre
même
règle
nom
variable
o
nom
devoir
commencer
lettre
o
nom
fonction
pouvoir
comporter
lettre
chiffrer
caractère
_
&
espace
autoriser
o
nom
fonction
comme
celui
variable
sensible
casser
différenciation
entre
minuscule
majuscule
•
argument
facultatif
se
il
'
de
argument
parenthèse
devoir
rester
présent
•
falloir
oublier
refermer
accolade
•
nombre
de
accolade
ouvert
fonction
boucler
autre
structure
devoir
être
égal
nombre
de
accolade
fermer
•
chose
se
appliquer
parenthèse
crochet
guillemet
fois
étape
franchir
fonction
se
exécuter
tant
la|le
on
faire
appel
quelque
part
pager
appel
fonction
exécuter
fonction
suffire
faire
appel
écrire
nom
fois
plus
respecter
casse
suivre
de
un
parenthèse
ouvert
éventuellement
argument
puis
de
un
parenthèse
fermé
Nom_De_La_Fonction
remarque
•
point
virgule
signifier
fin
de
un
instruction
permettre
le
interpréteur
distinguer
différent
bloc
de
instruction
•
jamais
définir
argument
déclaration
fonction
falloir
veiller
inclure
lors
le
appel
fonction
nombre
de
argument
séparer
virgule
Nom_De_La_Fonction
argument1
argument2
renvoi
de
un
valeur
fonction
fonction
pouvoir
renvoyer
valeur
terminer
grâce
mot-clé
return
lorsque
le
instruction
return
rencontrer
fonction
évaluer
valeur
suivre
puis
renvoyer
programme
appeler
programme
partir
duquel
fonction
appeler
fonction
pouvoir
contenir
plusieurs
instruction
return
toutefois
premier
instruction
return
rencontrer
provoquer
fin
fonction
renvoi
valeur
suivre
syntaxe
le
instruction
return
simple
return
valeur_ou_variable
argument
de
un
fonction
possible
passer
argument
fonction
ce
est-à-dire
fournir
valeur
nom
de
un
variable
afin
fonction
pouvoir
effectuer
opération
argument
bien
grâce
argument
passage
de
argument
fonction
faire
moyen
de
un
liste
de
argument
séparer
virgule
entre
parenthèse
suivre
immédiatement
nom
fonction
argument
pouvoir
être
simple
variable
aussi
tableau
objet
noter
que
il
possible
donner
valeur
défaut
argument
faire
suivre
nom
variable
signe
`
`
=
puis
valeur
la|le
on
affecter
défaut
variable
lorsque
vouloir
utiliser
argument
corps
fonction
tant
variable
celui
-ci
devoir
être
précéder
signe
function
dire_texte
texte
=
'
bonjour
'
{
if
empty
{
/
/
vide
retourne
faux
return
false
}
else
{
echo
`
`
texte
/
/
affiche
texte
return
true
/
/
fonction
exécuter
succès
}
}
ainsi
fonction
pouvoir
être
appeler
deux
façon
différent
/
/
passage
deux
paramètre
dire_texte
`
`
cher
phpeur
`
`
bienvenu
/
/
affiche
`
`
bienvenir
cher
phpeur
/
/
utilisation
valeur
défaut
deuxième
paramètre
dire_texte
`
`
cher
phpeur
/
/
affiche
`
`
bonjour
cher
phpeur
travailler
variable
fonction
lorsque
manipuler
variable
fonction
arriver
constater
beau
modifier
variable
fonction
celui
-ci
retrouver
valeur
de
origine
dès
le
on
sortir
fonction
cela
portée
variable
ce
est-à-dire
elle
définir
comme
variable
global
local
exister
plusieurs
niveau
définition
variable
•
variable
précéder
mot
clé
global
visible
le
ensemble
coder
ce
est-à-dire
porter
limiter
fonction
seulement
ainsi
tout
fonction
pouvoir
utiliser
modifier
variable
•
niveau
static
permettre
définir
variable
local
fonction
persister
durant
tout
temps
de
exécution
script
•
défaut
variable
posséder
niveau
local
ce
est-à-dire
variable
modifier
'
le
intérieur
fonction
retrouver
valeur
que
elle
juste
avant
le
appel
fonction
sortir
celui
-ci
chainer
=
`
`
nombre
camer
`
`
function
ajoute_camion
mode
=
{
global
chaine
static
nb
=
nb++
/
/
incrémenter
nombre
camer
if
mode
=
=
`
`
affiche
{
echo
chaine
.
nb
/
/
affiche
nombre
camer
}
}
ajoute_camion
/
/
nb
=
=
ajoute_camion
/
/
nb
=
=
ajoute_camion
/
/
nb
=
=
ajoute_camion
`
`
affiche
/
/
affiche
nombre
camer
passage
paramètre
référencer
autre
méthode
modifier
variable
consister
faire
précéder
caractère
&
préciser
que
il
se
agir
alors
de
un
alias
valeur
variable
modifier
sorti
fonction
parler
alors
passage
référencer
cas
passer
référence
adresser
mémoire
variable
fonction
permettre
modifier
valeur
function
dire_texte
&
texte
{
texte
=
`
`
bienvenue
}
chaine
=
`
`
bonjour
`
`
dire_texte
`
`
cher
phpeur
chaine
echo
chaine
/
/
affiche
`
`
bienvenir
cher
phpeur
retourner
plusieurs
variable
lorsque
souhaiter
que
un
fonction
retourner
plusieurs
valeur
plus
simple
de
utiliser
tableau
function
nom_fonction
{
...
.
.
return
array
variable1
variable2
variable3
/
/
retourner
valeur
vouloir
tableau
}
retour
=
nom_fonction
echo
`
`
retour
-
retour
-
retour
récursivité
fonction
récursif
fonction
se
appeler
elle
même
type
fonction
révéle
indispensable
parcourir
arborescence
exemple
voici
exemple
simple
function
fonction_recursif
n
=
{
n++
echo
`
`
br
if
{
/
/
inférieur
continu
fonction_recursive
}
}
fonction_recursif
/
/
affiche
nb
notion
classe
Php3
intégrer
soupçon
caractéristique
emprunter
langage
orienter
objet
ce
est-à-dire
possibilité
de
utiliser
objet
entité
regrouper
donné
fonction
sein
de
un
structure
rendre
programmation
plus
simple
que
en
programmation
habituel
appelé
programmation
procédural
opposition
programmation
orienter
objet
appeler
classe
structure
de
un
objet
ce
est-à-dire
déclaration
le
ensemble
entité
composer
objet
objet
`
`
issu
de
un
classe
ce
être
produire
sortir
de
un
moule
réalité
dire
que
un
objet
instanciation
de
un
classe
ce
être
raison
lequel
pouvoir
parler
indifféremment
de
objet
de
instance
éventuellement
de
occurrence
classer
composer
deux
partie
•
attribut
parfois
appeler
donner
membre
se
agir
donner
représenter
le
état
le
objet
•
méthode
parfois
appelé
fonction
membre
se
agir
opération
applicable
objet
déclaration
de
un
classe
pouvoir
manipuler
objet
essentiel
définir
classe
ce
est-à-dire
définir
structure
de
un
objet
Php
définition
faire
manière
suivant
class
Nom_de_la_classe
{
/
/
déclaration
donné
membre
var
Donnee_Membre_1
var
Donnee_Membre_2
var
/
/
déclaration
méthode
function
Nom_de_la_fonction_membre1
parametres
{
liste
de
instruction
}
}
Nom_de_la_classe
représenter
bien
évidemment
type
de
objet
désigner
classer
moins
nom
attribuer
contrairement
langage
orienter
objet
comme
C++
Php
ne
inclure
version
niveau
visibilité
élément
classe
'
concept
de
encapsulation
concept
majeur
programmation
orienter
objet
contrairement
déclaration
classe
C++
déclaration
classe
finir
point-virgule
Instanciation
classer
après
avoir
déclarer
classe
falloir
instancier
objet
pouvoir
la|le
exploiter
opération
faire
le
aide
mot
clé
new
permettre
faire
objet
découler
de
un
classe
syntaxe
mot
clé
new
suivant
Nom_de_l_objet
=
new
Nom_de_la_classe
partir
moment
le
objet
instancié
posséder
propriété
propre
cela
signifier
instancer
nouveau
objet
modification
propriété
le
un
ne
influer
aucunement
celui
le
autre
exister
méthode
spécial
porter
nom
classe
se
exécuter
automatiquement
lors
le
instanciation
le
objet
méthode
appeler
constructeur
très
utile
initialiser
donner
membre
lors
le
instanciation
accéder
propriété
de
un
objet
le
accès
propriété
de
un
objet
faire
grâce
nom
le
objet
suivre
de
un
flêche
-
représenter
moins
-
signe
supérieur
puis
nom
donner
membre
sans
signe
exemple
Nom_de_l_objet-
Nom_de_la_donnee_membre
=
valeur
accéder
méthode
de
un
objet
le
accès
méthode
de
un
objet
faire
comme
le
accès
propriété
ce
est-à-dire
nom
le
objet
suivre
de
un
flêche
nom
méthode
méthode
suivre
parenthèse
contenir
paramètre
y'en
le
accès
méthode
faire
façon
suivant
Nom_de_l_objet-
Nom_de_la_fonction_membre
parametre1
parametre2
variable
courant
this
mot
clé
this
permettre
désigner
le
objet
lequel
trouver
ce
est-à-dire
lorsque
la|le
on
désirer
faire
référence
fonction
membrer
le
objet
lequel
trouver
utiliser
this
grâce
variable
spécial
possible
fonction
membrer
faire
référence
propriété
situer
objet
fonction
membrer
ainsi
lorsque
la|le
on
désirer
accéder
propriété
de
un
objet
partir
de
un
méthode
objet
suffire
faire
précéder
nom
donner
membrer
this-
exemple
class
toto
{
var
age
var
sexe
var
adresser
function
DefineTotoAge
age
{
this-
age
=
age
}
}
toto_test
=
new
toto
toto_test-
DefineTotoAge
echo
`
`
le
age
toto
`
`
toto_test-
age
`
`
br
/
limitation
le
utilisation
classe
Php
PHP
version
rester
assez
limiter
point
voir
programmation
objet
plupart
aspect
marquant
programmation
objet
présent
langage
•
•
•
le
encapsulation
le
héritage
polymorphisme
boire
PHP
permettre
création
page
web
dynamique
ainsi
but
premier
pouvoir
envoyer
donner
navigateur
trois
fonction
standard
PHP
fournir
fonction
permettre
de
envoyer
texte
navigateur
fonction
particularité
pouvoir
insérer
donner
envoyer
valeur
variable
pouvoir
être
fonction
de
un
valeur
récupérer
exemple
ce
être
rendre
possible
création
page
dynamique
fonction
suivant
•
•
•
echo
print
printf
fonction
echo
fonction
echo
permettre
de
envoyer
navigateur
chaîner
caractère
délimiter
guillemet
suivre
syntaxe
fonction
suivant
echo
expression
le
expression
pouvoir
être
chaîne
caractère
expression
le
interpréteur
évaluer
echo
`
`
chainer
caracteres
echo
*
ainsi
donner
chaîne
caractère
délimiter
guillemet
le
insertion
guillemet
double
chaîne
provoquer
erreur
ce
être
raison
lequel
guillemet
double
ainsi
tout
caractère
spécial
devoir
être
précéder
de
un
antislash
voici
récapitulatif
caractère
spécial
nécessiter
le
ajout
de
un
antislash
caractère
description
TD\
td
TDGUILLEMET
td
TD\
td
TDCARACT
&
EGRAVE
RE
td
TD\\
td
inverse
oblique
TD\R
td
TD\N
td
TD\T
td
TDTABULATION
td
caractère
rôle
particulier
mesurer
le
interpréteur
comprendre
comme
variable
signifier
lorsque
caractère
rencontrer
chaîne
suivre
fonction
echo
le
interpréteur
récupérer
nom
variable
suivre
caractère
remplacer
valeur
le
exemple
suivant
exemple
assigner
date
actuel
variable
appeler
MaDate
puis
le
affiche
navigateur
HTML
HEAD
TITLE
affichage
le
heure
/
TITLE
/
HEAD
body
/
/
récupération
date
/
/
stockage
variable
MaDate
=
date
`
`
echo
`
`
MaDate
/
body
/
HTML
fonction
print
fonction
print
similaire
fonction
echo
différence
près
le
expression
afficher
entre
parenthèse
syntaxe
fonction
print
suivant
print
expression
le
expression
pouvoir
comme
fonction
echo
être
chaîne
caractère
expression
le
interpréteur
évaluer
print
`
`
chainer
caracteres
print
*
fonction
printf
fonction
printf
emprunter
langage
rarement
utiliser
car
syntaxe
plus
lourder
toutefois
contrairement
deux
fonction
précédent
permettre
formatage
donner
cela
signifier
la|le
on
pouvoir
choisir
format
lequel
variable
afficher
le
écran
syntaxe
printf
suivant
printf
chaîne
formatter
chaîner
formatter
chaîne
contenir
code
spécial
permettre
repérer
le
emplacement
de
un
valeur
insérer
format
ce
est-à-dire
représentation
chaque
code
rencontrer
devoir
être
associer
valeur
variable
la|le
on
retrouver
paramètre
fin
fonction
printf
valeur
insérer
chaîner
formatter
séparer
virgule
devoir
apparaître
le
ordre
code
apparaître
chaîne
formatter
code
formatage
type
donner
suivant
code
typer
format
b
entier
notation
binaire
caractère
coder
coder
ASCII
entier
notation
décimal
e
type
double
nombre
virguler
format
scientifique
1.76e+3
f
type
double
nombre
virguler
o
entier
notation
octal
chaîner
caractère
x
entier
notation
hexadécimal
lettre
minuscule
X
entier
notation
hexadécimal
lettre
majuscule
caractère
imaginer
la|le
on
définir
variable
virgule
flottant
afin
de
obtenir
précision
calcul
plus
grand
que
avec
entier
que
on
désirer
la|le
afficher
tant
que
entier
cas
fonction
printf
prendre
tout
importance
pi
=
R
=
Perimetre
=
*
pi
*
R
printf
`
`
périmètre
cercler
Perimetre
le
importance
le
implantation
coder
php
sein
coder
HTML
coder
PHP
pouvoir
être
implanter
sein
coder
HTML
caractéristique
ne
être
négliger
car
faire
de
écrire
uniquement
coder
PHP
là
nécessaire
rendre
programmation
plus
simple
plus
simple
de
écrire
code
HTML
fonction
echo
print
lequel
caractère
spécial
devoir
être
précéder
de
un
antislash
sous
peine
voir
erreur
lors
le
exécution
le
exemple
plus
simple
concerner
page
dynamique
le
en-tête
toujours
cas
coder
PHP
pouvoir
commencer
'
partir
balise
body
moment
page
pouvoir
se
afficher
différemment
selon
variable
exemple
mieux
possible
de
écrire
plusieurs
portion
script
PHP
séparer
coder
HTML
statique
car
variable
/
fonction
déclarer
portion
script
accessible
porter
script
inférieur
notion
variable
de
environnement
variable
de
environnement
comme
nom
le
indique
donnée
stocker
variable
permettre
programme
de
avoir
information
environnement
le
environnement
cas
script
PHP
•
•
serveur
client
variable
créer
serveur
chaque
fois
script
PHP
appeler
serveur
fournir
paramètre
cacher
lors
le
exécution
le
interpréteur
elle
permettre
notamment
de
avoir
information
typer
serveur
administrateur
date
lequel
script
appeler
le
adresse
IP
typer
navigateur
client
variable
de
environnement
pouvoir
classer
variable
de
environnement
deux
catégorie
•
•
variable
de
environnement
dépendre
client
variable
de
environnement
dépendre
serveur
variable
de
environnement
dépendre
client
variable
de
environnement
description
AUTH_TYPE
se
agir
méthode
de
authentification
utiliser
client
accéder
script
PHP
COMSPEC
location
le
interpréteur
commander
machine
sous
Windows
CONTENT_TYPE
typer
donner
contenir
présent
corps
requêter
se
agir
type
mimer
donner
DOCUMENT_ROOT
Racine
document
serveur
DOCUMENT_URI
adresser
script
PHP
relatif
partir
racine
serveur
HTTP_ACCEPT
type
mimer
reconnaître
serveur
séparer
virgule
HTTP_ACCEPT_ENCODING
type
de
encodage
serveur
pouvoir
réaliser
gzip
deflate
HTTP_ACCEPT_LANGUAGE
langue
utiliser
serveur
défaut
en-us
HTTP_CONNECTION
typer
connexion
ouvrir
entre
client
serveur
exemple
KeepAlive
HTTP_HOST
nom
de
hôte
machiner
client
associer
le
adresse
IP
HTTP_REFERER
URL
pager
appeler
script
PHP
variable
permettre
de
avoir
information
typer
navigateur
utiliser
client
ainsi
système
de
exploitation
voici
quelque
exemple
User-Agents
HTTP_USER_AGENT
•
•
•
•
•
•
•
Mozilla
/
compatible
MSIE
Windows
NT
TUCOWS
Network
Mozilla
/
X@card@
I
Linux
2.2.14-15mdk
i686
LAST_MODIFIED
dater
heure
dernier
modification
fichier
PATH
se
agir
chemin
de
accès
différent
répertoire
serveur
PATH_INFO
se
agir
chemin
de
accès
script
PHP
relatif
raciner
serveur
jusque
au
script
PHP
PHP_SELF
nom
script
PHP
REDIRECT_STATUS
se
agir
le
état
redirection
echec
succès
REDIRECT_URL
se
agir
le
URL
vers
lequel
navigateur
client
rediriger
QUERY_STRING
se
agir
partir
le
URL
servir
accéder
script
PHP
situer
après
point
de
interrogation
ce
être
manière
transmettre
donner
de
un
formulaire
cas
méthode
GET
REMOTE_ADDR
variable
contenir
le
adresse
IP
client
appeler
script
CGI
REMOTE_PORT
variable
permettre
savoir
port
lequel
requêter
HTTP
envoyer
serveur
chemin
de
accès
complet
script
PHP
SCRIPT_FILENAME
SCRIPT_NAME
•
sous
windows
forme
/
php
/
dns-remplacer
chemin
de
accès
relatif
rapport
chemin
de
accès
raciner
web
DOCUMENT_ROOT
script
PHP
variable
de
environnement
dépendre
serveur
variable
de
environnement
description
DATE_GMT
date
actuel
format
GMT
DATE_LOCAL
dater
actuel
format
local
DOCUMENT_ROOT
Racine
document
Web
serveur
GATEWAY_INTERFACE
version
spécification
CGI
utiliser
serveur
HTTP_HOST
nom
domaine
serveur
SERVER_ADDR
adresser
IP
serveur
SERVER_ADMIN
adresser
le
administrateur
serveur
SERVER_NAME
nom
donner
serveur
local
SERVER_PORT
numéro
port
associer
protocole
HTTP
serveur
SERVER_PROTOCOL
nom
version
protocole
utiliser
envoyer
requête
script
PHP
typer
logiciel
serveur
web
SERVER_SOFTWARE
•
serveur
apache
sous
Unix
apache
/
Unix
PHP
/
•
serveur
apache
sous
Windows
apache
/
Win32
PHP
/
affichage
variable
de
environnement
possible
créer
script
permettre
visualiser
le
ensemble
variable
de
environnement
premier
façon
consister
utiliser
fonction
phpinfo
afficher
tout
seul
tableau
récapitulatif
paramètre
serveur
le
intepréteur
PHP
ainsi
que
un
tableau
variable
de
environnement
phpinfo
PHP
fournir
fonction
getenv
permettre
retourner
valeur
variable
de
environnement
passer
paramètre
echo
getenv
`
`
HTTP_USER_AGENT
enfin
possible
définir
variable
de
environnement
echo
putenv
`
`
MA_VARIABLE
=
mavaleur
gestion
fichier
PHP
PHP
création
lecture
fichier
fois
plus
assez
simple
exister
multitude
fonction
dédier
le
utilisation
fichier
communication
entre
script
PHP
fichier
repérer
variable
indiquer
le
état
fichier
la|le
on
pouvoir
passer
paramètre
fonction
spécialiser
manipuler
fonction
fopen
fonction
baser
fonction
fopen
ce
être
permettre
de
ouvrir
fichier
lire
créer
écrire
voilà
syntaxe
entier
fopen
chainer
nomdufichier
chainer
mode
mode
indique
type
de
opération
que
il
possible
de
effectuer
fichier
après
ouverture
se
agir
de
un
lettre
réalité
chaîner
caractère
indiquer
le
opération
possible
•
•
r
comme
read
indique
ouverture
lecture
seulement
w
comme
write
indique
ouverture
écriture
seulement
fonction
créer
fichier
si
il
ne
exister
•
comme
appendre
indique
ouverture
écriture
seulement
ajout
contenir
fin
fichier
fonction
créer
fichier
si
il
ne
exister
lorsque
mode
suivre
caractère
+
celui
-ci
pouvoir
être
lire
écrire
enfin
faire
faire
suivre
mode
lettrer
b
entre
crochet
indique
fichier
traiter
façon
binaire
voici
tableau
récapituler
le
ensemble
mode
fichier
possible
Mode
description
r
ouverture
lecture
seulement
w
ouverture
écriture
seulement
fonction
créer
fichier
si
il
ne
exister
ouverture
écriture
seulement
ajout
contenir
fin
fichier
fonction
créer
fichier
si
il
ne
exister
r+
ouverture
lecture
écriture
w+
ouverture
lecture
écriture
fonction
créer
fichier
si
il
ne
exister
a+
ouverture
lecture
écriture
ajout
contenir
fin
fichier
fonction
créer
fichier
si
il
ne
exister
voici
exemple
de
utilisation
possible
fonction
fp
=
fopen
`
`
.
.
/
dns-remplacé
r
/
/
lecture
/
/
écriture
depuis
début
fichier
fp
=
fopen
`
`
ftp
/
/
dns-remplacer
/
pub
/
dns-remplacer
w
/
/
écriture
depuis
fin
fichier
fp
=
fopen
`
`
http
/
/
dns-remplacer
/
dns-remplacer
plus
fonction
fopen
permettre
de
ouvrir
fichier
présent
web
grâce
URL
voici
script
permettre
récupérer
contenir
de
un
page
de
un
site
web
fp
=
fopen
`
`
http
/
/
dns-remplacer
r
/
/
lecture
fichier
while
feof
fp
{
/
/
on
parcourir
tout
ligne
page
.
=
fgets
fp
/
/
lecture
contenir
ligner
}
généralement
utile
tester
le
ouverture
fichier
se
être
bien
dérouler
ainsi
de
éventuellement
stopper
script
PHP
cela
ne
être
cas
if
fp
=
fopen
`
`
http
/
/
dns-remplacé
r
{
echo
`
`
Echec
le
ouverture
fichier
exit
}
else
{
/
/
code
}
fichier
ouvert
fonction
fopen
devoir
être
fermer
fin
utilisation
fonction
fclose
passer
paramètre
le
entier
retourné
fonction
fopen
lecture
écriture
fois
fichier
ouvrir
mode
désirer
possible
lire
contenir
'
écrire
information
grâce
fonction
•
fputs
aussi
parfois
appeler
fwrite
deux
nom
équivalent
parler
de
alias
permettre
de
écrire
chaîne
caractère
fichier
entier
fputs
entier
Etat_du_fichier
chainer
sortir
fonction
fputs
renvoyer
nombre
caractère
effectivement
écrire
fichier
•
fgets
permettre
récupérer
ligne
fichier
chaîner
fgets
entier
Etat_du_fichier
entier
longueur
paramètre
longueur
désigner
nombre
caractère
maximum
fonction
sensé
récupérer
ligne
fonction
fgets
renvoyer
cas
de
échec
chaîner
cas
contraire
Etant
donner
fonction
fgets
récupérer
chaque
appel
nouveau
ligner
fichier
essentiel
récupérer
le
intégralité
contenir
de
un
fichier
la|le
insérer
boucle
while
ainsi
utiliser
fonction
feof
fonction
tester
fin
fichier
'
atteindre
tant
test
boucler
while
façon
tant
fin
fichier
'
atteindre
lit
ligner
suivant
fichier
if
fp
=
fopen
`
`
dns-remplacé
r
{
echo
`
`
Echec
le
ouverture
fichier
exit
}
else
{
while
feof
fp
{
/
/
récupérer
ligne
ligner
=
fgets
fp
,
/
/
affiche
ligner
echo
ligne
/
/
stocker
le
ensemble
ligner
variable
fichier
.
=
ligne
}
fclose
fp
/
/
ferme
fichier
}
stocker
infos
fichier
falloir
premier
temps
ouvrir
fichier
écriture
créer
ne
exister
choix
entre
mode
'
w
'
mode
'
'
préférer
second
puisque
pointeur
trouver
fin
fichier
autrement
dire
écrire
suite
trouver
fichier
lieu
de
écraser
contenir
exister
éventuellement
déjà
fp
=
fopen
`
`
php_8_
dns-remplacé
/
/
ouverture
fichier
écriture
fputs
fp
`
`
\n
/
/
aller
ligne
fputs
fp
`
`
nom
|
email
/
/
écrire
nom
email
fichier
fclose
fp
voici
petit
script
permettre
récupérer
titre
de
un
page
Web
texte
comprendre
entre
balise
TITLE
/
TITLE
utiliser
expression
régulier
localiser
texte
fp
=
fopen
`
`
http
/
/
dns-remplacer
r
/
/
lecture
fichier
while
feof
fp
{
/
/
on
parcourir
tout
ligne
page
.
=
fgets
fp
/
/
lecture
contenir
ligner
}
titre
=
eregi
`
`
title
*
/
title
page
reg
/
/
on
isoler
titre
echo
reg
fclose
fp
test
fichier
PHP
fournir
nombreux
fonction
permettre
faire
test
fichier
connaître
leur
propriété
voici
lister
fonction
test
•
is_dir
permettre
savoir
fichier
nom
passer
paramètre
correspondre
répertoire
booléen
is_dir
chainer
Nom_du_fichier
fonction
is_dir
renvoyer
se
agir
de
un
répertoire
cas
contraire
if
is_dir
`
`
install
{
echo
`
`
se
agir
de
un
répertoire
}
else
{
echo
`
`
se
agir
bien
de
un
répertoire
}
•
is_executable
permettre
savoir
fichier
nom
passé
paramètre
exécutable
booléen
is_executable
chainer
Nom_du_fichier
fonction
is_executable
renvoyer
fichier
exécutable
cas
contraire
•
is_file
permettre
savoir
fichier
nom
passer
paramètre
correspondre
répertoire
lien
symbolique
booléen
is_file
chainer
Nom_du_fichier
fonction
is_file
renvoyer
se
agir
de
un
fichier
cas
contraire
•
is_link
permettre
savoir
fichier
nom
passé
paramètre
correpond
lien
symbolique
booléen
is_link
chainer
Nom_du_fichier
fonction
is_link
renvoyer
se
agir
de
un
lien
symbolique
cas
contraire
de
autre
façon
lire
écrire
certain
cas
pouvoir
être
rébarbatif
devoir
mettre
œuvre
fonction
fopen
fgets
lire
le
intégralité
contenir
de
un
fichier
raison
PHP
fournir
fonction
supplémentaire
permettre
faire
directement
certain
opération
fonction
file
permettre
retourner
tableau
le
intégralité
de
un
fichier
mettre
chacun
ligne
élément
tableau
rappel
premier
élément
de
un
tableau
repérer
le
indice
voilà
syntaxe
tableau
filer
chaine
nomdufichier
le
exemple
suivre
montrer
comment
parcourir
le
ensemble
tableau
afin
de
afficher
fichier
fichier
=
`
`
dns-remplacé
if
is_file
fichier
{
if
TabFich
=
filer
fichier
{
for
i
=
i
count
TabFich
i++
echo
TabFich
i
}
else
{
echo
`
`
fichier
pouvoir
être
lire
br
}
}
else
{
echo
`
`
désoler
fichier
ne
être
valide
br
}
fonction
fpassthru
permettre
de
envoyer
contenir
fichier
fenêtrer
navigateur
syntaxe
fonction
suivant
booléen
fpassthru
entier
etat
fonction
permettre
réalité
de
envoyer
contenir
fichier
partir
position
courant
fichier
ce
est-à-dire
que
il
possible
exemple
lire
quelque
ligne
fgets
puis
de
envoyer
rester
navigateur
script
suivre
permettre
parcourir
tout
fichier
HTML
contenir
site
de
en
afficher
le
arborescence
HTML
HEAD
TITLE
affichage
le
arborescence
/
TITLE
/
HEAD
body
function
ScanDir
Directory
{
if
is_dir
Directory
&
&
is_readable
Directory
{
if
MyDirectory
=
opendir
Directory
{
while
Entry
=
readdir
MyDirectory
{
if
is_dir
Directory
`
`
/
Entry
{
if
Entry
=
`
`
&
&
Entry
=
`
`
.
.
{
echo
`
`
li
b
Repertoire
/
b
Directory
/
Entry
/
li
\n
echo
`
`
ul
ScanDir
Directory
`
`
/
Entry
echo
`
`
/
ul
}
}
else
{
echo
`
`
li
b
fichier
/
b
Directory
/
Entry
/
li
\n
if
eregi
`
`
\.html
|
\.htm
Entry
{
MetaTags
=
get_meta_tags
Directory
`
`
/
Entry
}
}
}
closedir
MyDirectory
}
}
}
open_basedir
=
`
`
echo
`
`
ul
ScanDir
`
`
`
`
echo
`
`
/
ul
/
body
/
HTML
