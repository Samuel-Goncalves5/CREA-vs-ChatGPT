cours|cour
PHP
accélérer
version
Gérard
Rozsavolgyi
septembre
table
matière
cours|cour
format
epub
cours|cour
format
pdf
table
matière
caractéristique
principal
fonctionnement
historique
installation
PHP
configuration
PHP
exemple
simple
imbrication
coder
HTML
PHP
formulaire
HTML
réponse
PHP
variable
PHP
chaîne
PHP
typage
PHP
quelque
particularité
PHP
tableau
PHP
tableau
prédéfinir
PHP
inclusion
fichier
externe
objet
PHP
collection
PHP
connexion
baser
donner
depuis
PHP
requête
préparer
PHP
complément
PDO
-
sécurité
filtrage
PHP
gestion
transaction
PDO
connexion
persistant
PDO
validation
contrôler
entrer
GUMP
Http
conservation
information
client
manipuler
XML
PHP
architecture
type
MVC
PHP
Template
Twig
PHP
i
composer
Symfony
Flex
tester
application
PHP
-
TDD
mettre
place
Web
service
REST
exemple
service
REST
PHP
tester
api
REST
navigateur
curl
tester
api
feuille
TD
Lic
pro
Web
mobile
feuille
TD
2ème
année
IUT
informatique
feuille
TD
Lic
pro
Web
mobile
feuille
TD
CVRH
Tours
Alice
démarrer
git
Bob
travailler
Alice
grâce
git
Alice
mettre
jour
Alice
travailler
branche
git
Bob
brancher
Alice
Alice
récupérer
dernier
version
master
GIT
référence
index
rechercher
index
ii
chapitrer
cours|cour
format
epub
PHP
accélérer
format
epub
cours|cour
PHP
accélérer
version
chapitre
cours|cour
format
epub
chapitrer
cours|cour
format
pdf
PHP
accélérer
pdf
cours|cour
PHP
accélérer
version
chapitre
cours|cour
format
pdf
chapitrer
table
matière
caractéristique
principal
langage
interpréter
—
compilation
—
exécuter
instruction
instruction
—
Multi-plateformes
—
compilateur
AOT
/
ByteCode
PHP7
zend
—
compilateur
JIT
HHVM
Facebook
—
langage
hack
proposer
Facebook
spécialiser
génération
texte
document
—
HTML
—
PDF
—
image
fichier
extension
.php
—
coder
insérer
page
HTML
—
entre
balise
php
cours|cour
PHP
accélérer
version
fonctionnement
interpréteur
lire
fichier
source
.php
puis
générer
flux
sortir
règle
suivant
—
tout
ligner
situer
extérieur
bloc
PHP
entre
php
recopier
inchangé
flux
sorti
—
coder
PHP
interpréter
générer
éventuellement
résultat
intégrer
aussi
flux
sortir
—
erreur
éventuel
donner
lieu
message
erreur
retrouver
également
flux
sortir
selon
configuration
serveur
—
page
html
pur
sauvegarder
extension
.php
non
modifier
ren-
voyée
tel
quel
chapitre
table
matière
cours|cour
PHP
accélérer
version
historique
créateur
Rasmus
Lerdorf
programmeur
Grœnlandais
nationalité
canadien
créer
PHP
analyser
connexion
site
Web
réaliser
premier
mouture
langage
v1
v2
deux
étudiant
Andi
Gutmans
Zeev
Suraski
reprendre
moteur
sortir
PHP
puis
outil
zend
noter
langage
PHP
subir
profond
remaniement
bénéficier
beaucoup
enrichis-sements
depuis
premier
version
premier
version
objet
PHP
version
profondément
remanier
lors
passage
PHP4.0
PHP5.0
inspirer
désormais
largement
modèle
java
version
actuel
PHP
sortie
version
sortie
décembre
jamais
version
PHP
https
/
/
dns-remplacer
/
rfc
/
php7timeline
avertissement
début
développement
version
PHP
date
abandonner
raison
difficulté
intégration
support
Unicode
autre
fonctionnalité
envisager
depuis
intégré
PHP
Ca
empêcher
certain
nombre
livrer
intituler
PHP
sortir
bien
version
exister
jamais
saga
PHP
—
Facebook
publier
HipHop
Virtual
machiner
dire
HHVM
machiner
virtuel
permettre
pré-compiler
coder
PHP
bytecode
manière
java
JIT
Compi-
ler
—
Facebook
sortir
langage
hack
exécuter
grace
HHVM
apporter
fonctionnalité
comme
typage
fort
classe
paramétrables
api
collec-
tions
plus
riche
cohérent
traitement
asynchrone
davantage
sécurité
extension
XHP
—
framework
PHP
Phalcon
extension
PECL
PHP
proposer
Zephir
zend
Engine
PHp
Intermediate
https
/
/
dns-remplacer
/
phalcon
/
zephir
permettre
création
extension
rapide
PHP
coder
manière
simplifier
sans
écrire
directe-
mentir
—
société
zend
réagir
face
HHVM
accélérer
développement
nouveau
mouture
PHP
améliorer
performance
mécanisme
compilation
AOT
Ahead
of
Time
PHP
signifier
abord
Personal
home
page
puis
HypertextPreProcessor
historique
cours|cour
PHP
accélérer
version
syntaxe
structure
—
proche
Perl
—
peu
structuré
début
—
possibilité
définir
fonction
classe
—
très
bon
performance
PHP
amélioration
ordre
vitesse
exécution
utilisation
—
grand
succès
—
utilisation
très
grand
site
—
beaucoup
code
libre
disponible
—
dizaine
million
site
Web
utiliser
travers
monde
—
comme
Monde
http
/
/
dns-remplacer
/
Facebook
http
/
/
dns-remplacer
/
Yahoo
http
/
/
dns-remplacer
/
CMS
grand
CMS
content
management
System
système
gestion
contenir
utiliser
PHP
comme
—
Wordpress
—
Joomla
—
Drupal
CMS
ecommerce
aussi
—
Prestashop
—
Magento
Frameworks
grand
Frameworks
développement
Web
aussi
disponible
PHP
—
Symfony
—
zend
—
Laravel
—
Phalcon
—
CakePHP
—
Yii
—
Slim
noter
plus
million
site
réaliser
PHP
travers
monde
chapitre
table
matière
cours|cour
PHP
accélérer
version
installation
PHP
indication
tout
informaticien
devoir
savoir
LAMP
vouloir
dire
LAMP
—
Linux
—
apache
—
MySQL
—
PHP
exension
logiciel
équivalent
Windows
retrouver
nommer
WAMP
Windows
MAMP
mac
MAMP
mac
indispensable
car
apache
PHP
installer
mac
os
10.xx
peu
plus
simple
configurer
falloir
alors
installer
MySQL
paquet
utiliser
homebrew
macports
tout
plate-forme
pouvoir
aussi
installer
XAMPP
https
/
/
dns-remplacer
/
fr
/
dns-remplacer
revenir
os
référence
présent
sous
Linux
—
installer
Apache2
—
installer
PHP7
—
Télécharger
éventuellement
documentation
paquet
php-doc
—
vérifier
fichier
dns-remplacer
—
installer
MySQL
client
serveur
—
installer
PHPMyAdmin
—
installer
paquet
complémentaire
nom
commencer
php5-
installation
PHP
cours|cour
PHP
accélérer
version
configuration
PHP
fichier
dns-remplacer
fichier
dns-remplacer
contenir
tout
directive
essentiel
réglage
—
tailler
fichier
téléchargeables
—
Safe-Mode
—
affichage
traitement
erreur
—
communication
MySQL
danger
attention
directif
fichier
très
important
sécurité
serveur
production
falloir
veiller
vérifier
minutieusement
cas
sous
certain
distribution
Linux
exister
version
fichier
developpement
autre
serveur
production
oublier
activer
bon
version
selon
contexte
vérifier
tout
cas
directive
principal
dns-remplacer
directif
très
nombreux
retenir
plus
important
fichier
suivre
commenter
rôle
PHP
about
dns-remplacer
fichier
configuration
principal
PHP
permettre
préciser
principal
option
sous
certain
distribution
Linux
exister
version
developpement
autre
serveur
production
Language
opter
activer
PHP
engine
=
pouvoir
mettre
faux
tags
...
.
reconnaître
short_open_tag
=
off
Allow
ASP-style
tags
http
/
/
dns-remplacer
/
asp-tags
asp_tags
=
off
The
number
of
significant
digit
displayed
in
floating
point
˓→numbers
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
http
/
/
dns-remplacer
/
precision
precision
=
compatibilité
an
y2k_compliance
=
tailler
buffers
output_buffering
=
servir
page
compresser
dns-remplacer
_compression
=
off
mettre
forcer
flush
phase
debuggage
implicit_flush
=
off
Safe
Mode
http
/
/
dns-remplacer
/
safe-mode
pouvoir
laisser
désactiver
car
déclarer
OBSOLETE
depuis
PHP
Safe_mode
=
off
désactiver
certain
fonction
PHP
indépendant
safe_mode
http
/
/
dns-remplacer
/
disable-functions
disable_functions
=
meme
chose
classe
disable_classes
=
Colors
for
Syntax
Highlighting
mode
utiliser
fonction
highlight_file
=
show_source
dns-remplacer
=
#
DD0000
dns-remplacer
=
#
FF9900
dns-remplacer
=
#
dns-remplacé
=
#
FFFFFF
dns-remplacer
=
#
0000BB
dns-remplacer
=
#
Miscellaneous
pouvoir
la|le
enlever
serveur
production
ne
être
menacer
sécurité
expose_php
=
suite
page
suivant
configuration
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
Resource
Limits
temps
de
éxécution
max
de
un
script
attention
coder
peu
long
si
éxécuter
max_execution_time
=
traitement
donner
recevoir
laisser
valeur
défaut
max_input_time
=
taille
mémoire
maxi
donner
script
PHP
memory_limit
=
128M
Error
handling
and
logging
serveur
production
E_ALL
&
~
E_DEPRECATED
serveur
développement
error_reporting
=
E_ALL
|
E_STRICT
affichage
erreur
sortir
standard
cad
navigateur
désactiver
serveur
production
utile
développeur
display_errors
=
affichage
erreur
démarrage
PHP
débugger
erreur
plugins
module
complémentaire
PHP
display_startup_errors
=
off
logger
erreur
activer
log_errors
=
set
maximum
length
of
log_errors
in
error_log
information
about
˓→the
source
is
added
The
default
is
and
allows
to
not
apply
any
maximum
˓→length
at
all
http
/
/
dns-remplacer
/
log-errors-max-len
log_errors_max_len
=
répéter
erreur
identique
ignore_repeated_errors
=
sauf
elle
provenir
fichier
différent
ignore_repeated_source
=
off
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
rapporter
fuite
mémoire
activer
phase
dévelopement
report_memleaks
=
variable
php_errormsg
contenir
texte
dernier
message
de
erreur
désactiver
serveur
production
track_errors
=
http
/
/
dns-remplacer
/
html-errors
html_errors
=
faire
pointer
copie
local
documentation
PHP
désactiver
serveur
production
docref_root
=
`
`
/
doc
/
php
/
extension
fichier
documentation
docref_ext
=
.html
chainer
afficher
avant
message
de
erreur
ici
que
il
se
afficher
rouge
réserver
serveur
dévelopement
error_prepend_string
=
`
`
faire
color
=
#
ff0000
fermeture
tag
précédent
error_append_string
=
`
`
/
faire
changer
fichier
logguées
erreur
laisser
inchangé
sauf
cas
particulier
error_log
=
syslog
dater
Handling
The
separator
used
in
PHP
generated
URLs
to
separate
argument
PHP
'
s
default
setting
is
`
`
&
http
/
/
dns-remplacer
/
dns-remplacer
Example
arg_
dns-remplacer
=
`
`
&
amp
List
of
separator
used
by
PHP
to
parse
input
URLs
into
˓→variable
PHP
'
s
default
setting
is
`
`
&
note
Every
character
in
this
directif
is
considered
˓→separator
suite
page
suivant
configuration
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
http
/
/
dns-remplacer
/
dns-remplacer
Example
arg_
dns-remplacer
=
`
`
&
This
directif
determines
which
super
global
arrays
are
˓→registered
when
PHP
start
up
If
the
register_globals
directif
is
enabled
it
also
˓→determines
what
order
variable
are
populated
into
the
global
space
G
P
E
˓→
&
are
abbreviations
for
the
following
respectif
super
globals
GET
˓→POST
COOKIE
ENV
and
SERVER
There
is
performance
penalty
paid
for
the
˓→registration
of
these
arrays
and
because
ENV
is
not
commonly
used
the
˓→others
ENV
is
is
not
recommended
production
servers
You
can
still
get
˓→access
to
the
environment
variable
through
getenv
should
you
need
to
Default
valoir
`
`
EGPCS
Development
valoir
`
`
GPCS
production
valoir
`
`
GPCS
http
/
/
dns-remplacer
/
variables-order
variables_order
=
`
`
GPCS
laisser
valeur
défaut
request_order
=
`
`
GP
Ca
faire
longtemps
que
il
falloir
garder
directive
off
register_globals
=
off
Determines
whether
the
deprecated
long
HTTP_
*
_VARS
type
˓→predefined
variable
are
registered
by
PHP
or
not
they
are
deprecated
we
˓→obviously
don't
recommend
you
user
them
They
are
by
default
for
compatibility
˓→reasons
boire
they
are
not
recommended
production
servers
Default
value
Development
valoir
off
production
valoir
off
http
/
/
dns-remplacer
/
register-long-arrays
register_long_arrays
=
off
activer
seulement
vouloir
utiliser
PHP
ligne
commander
passer
argument
register_argc_argv
=
off
meilleur
performance
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
auto_globals_jit
=
taille
maximal
donner
accepter
POST
http
/
/
dns-remplacer
/
post-max-size
post_max_size
=
8M
éviter
désormais
magic_quotes_gpc
=
off
idem
magic_quotes_runtime
=
off
mimetype
défaut
text
/
html
default_mimetype
=
`
`
text
/
html
jeu
caractère
défaut
laisser
vider
choisir
jeu
caractère
default_charset
=
`
`
iso@card@
default_charset
=
`
`
utf-8
filer
Uploads
autoriser
`
`
uploads
fichier
file_uploads
=
spécifier
répertoire
temporaire
por
fichier
uploadés
upload_tmp_dir
=
/
tmp
/
upload-dir
taille
maxi
fichier
uploadés
upload_max_filesize
=
4M
Nbre
fichier
maxi
pouvoir
être
uploadés
seul
requête
max_file_uploads
=
Fopen
wrappers
Whether
to
allow
the
treatment
of
URLs
like
http
/
/
or
ftp
/
/
˓→as
file
http
/
/
dns-remplacer
/
allow-url-fopen
allow_url_fopen
=
Whether
to
allow
include
/
require
to
open
URLs
like
http
/
/
or
˓→ftp
/
/
file
suite
page
suivant
configuration
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
http
/
/
dns-remplacer
/
allow-url-include
allow_url_include
=
off
Define
the
anonymous
ftp
password
your
email
address
PHP's
˓→default
setting
for
this
is
empty
http
/
/
dns-remplacer
/
from
from
=
john
dns-remplacer
Define
the
User-Agent
string
PHP
'
s
default
setting
for
this
is
˓→empty
http
/
/
dns-remplacer
/
user-agent
user_agent
=
PHP
Timeout
flux
baser
socket
default_socket_timeout
=
Dynamic
extension
sous
Windows
extension
=
dns-remplacer
sous
UNIX
extension
=
dns-remplacer
chemin
extension
=
/
path
/
to
/
extension
/
dns-remplacer
moduler
Settings
dater
fuseau
horaire
utiliser
dns-remplacer
=
Europe
/
Paris
iconv
conversion
de
un
système
de
encodage
autre
dns-remplacer
_encoding
=
ISO-8859-1
dns-remplacer
_encoding
=
ISO-8859-1
dns-remplacer
_encoding
=
ISO-8859-1
Pdo_mysql
cas
de
utilisation
nouveau
moteur
mysqlnd
pdo_
dns-remplacer
_size
=
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
socket
défaut
connexion
MySQL
valeur
défaut
fonctionner
plus
souvent
pdo_
dns-remplacer
_socket
=
/
var
/
mysql
/
dns-remplacé
mail
function
for
Win32
only
http
/
/
dns-remplacer
/
smtp
SMTP
=
localhost
http
/
/
dns-remplacer
/
smtp-port
smtp_port
=
emplacement
logger
appel
fonction
mail
dns-remplacer
=
MySQL
autoriser
connexion
persistant
ne
apporter
aucun
fonctionnalité
supplémentaire
pouvoir
améliorer
performance
dns-remplacer
_persistent
=
If
mysqlnd
is
used
Number
of
cacher
slots
for
the
internal
result
˓→set
cacher
http
/
/
dns-remplacer
/
dns-remplacer
_size
dns-remplacer
_size
=
Nbre
maxi
lien
persistant
dns-remplacer
_persistent
=
nombre
maxi
lien
permanent
vouloir
dire
sans
limitation
dns-remplacer
_links
=
port
défaut
MySQL
dns-remplacer
_port
=
laisser
généralement
valeur
défaut
dns-remplacer
_socket
=
hôte
défaut
mysql_connect
dns-remplacer
_host
=
utilisateur
défaut
mysql_connect
dns-remplacer
_user
=
Passwd
défaut
mysql_connect
ne
être
bonne
choser
garder
passwd
ici
obsolete
dns-remplacer
_password
=
suite
page
suivant
configuration
PHP
cours|cour
PHP
accélérer
version
suite
page
précédent
Timeout
connexion
MySQL
dns-remplacer
_timeout
=
Mode
débuggage
MySQL
dns-remplacer
_mode
=
off
MySQLi
Nbre
maxi
lien
persistant
dns-remplacer
_persistent
=
autoriser
connexion
persistant
ne
apporter
aucun
fonctionnalité
supplémentaire
pouvoir
améliorer
performance
dns-remplacer
_persistent
=
maximum
number
of
links
means
no
limit
http
/
/
dns-remplacer
/
dns-remplacer
dns-remplacer
_links
=
If
mysqlnd
is
used
Number
of
cacher
slots
for
the
internal
result
˓→set
cacher
http
/
/
dns-remplacer
/
dns-remplacer
_size
dns-remplacer
_size
=
Por
mysqli
dns-remplacer
_port
=
socket
défaut
MySQLi
dns-remplacer
_socket
=
/
tmp
/
dns-remplacer
autoriser
interdire
reconnexion
dns-remplacer
=
off
mysqlnd
activation
statistique
mysqlnd
fin
réglage
serveur
BD
dns-remplacer
_statistics
=
chose
opération
mémoire
dns-remplacer
_memory_statistics
=
off
Size
of
pre-allocated
buffer
used
when
sending
command
to
˓→MySQL
in
bytes
http
/
/
dns-remplacer
/
dns-remplacer
_cmd_buffer_size
dns-remplacer
_cmd_buffer_size
=
Size
of
pre-allocated
buffer
used
for
reading
dater
sentir
by
the
˓→server
in
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
bytes
http
/
/
dns-remplacer
/
dns-remplacer
_read_buffer_size
dns-remplacer
_read_buffer_size
=
bcmath
Number
of
decimal
digit
for
all
bcmath
functions
http
/
/
dns-remplacer
/
dns-remplacer
dns-remplacer
=
session
/
session
devoir
elle
utiliser
cookies
dns-remplacer
_cookies
=
envoyer
cookies
travers
connexion
sécuriser
défaut
off
dns-remplacer
_secure
=
PHP
maintenir
cookie
le
identifier
session
ce
être
précaution
viser
éviter
vol
session
ne
être
parader
absoudre
dns-remplacer
_only_cookies
=
nom
session
dns-remplacer
=
PHPSESSID
démarrage
automatique
session
désactiver
défaut
dns-remplacer
_start
=
durée
vie
cookie
placer
temps
navigateur
redémarrer
dns-remplacer
_lifetime
=
domaine
validité
cookie
dns-remplacer
_domain
=
interdire
javascript
de
accéder
cookie
dns-remplacer
_httponly
=
HTTP_REFERER
devoir
contenir
sous-chaine
être
considérer
comme
valide
dns-remplacer
_check
=
suite
page
suivant
configuration
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
durée
de
expiration
document
minute
dns-remplacer
_expire
=
choix
de
un
fonction
hachage
session
comme
MD@card@
bit
SHA-1
bit
dns-remplacer
_function
=
assertion
asserter
actif
défaut
dns-remplacer
=
Emettre
warning
cas
de
assertion
non
vérifier
dns-remplacer
=
se
arrêter
cas
de
assertion
non
satisfaire
désactiver
défaut
dns-remplacer
=
off
fonction
utilisateur
appeller
cas
de
assertion
non
satisfaire
dns-remplacer
=
exemple
simple
bonjour
doctype
html
html
head
meta
charset
=
utf-8
/
title
bonjour
depuis
PHP
/
title
/
head
body
php
echo
'
bonjour
générer
dynamiquement
PHP
'
/
body
/
html
résultat
brut
html
doctype
html
html
head
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
meta
charset
=
utf-8
/
title
bonjour
depuis
PHP
/
title
/
head
body
bonjour
générer
dynamiquement
PHP
/
body
/
html
exécution
bonjour
Infos
PHP
php
phpinfo
exécution
infos
php
user
agent
doctype
html
html
head
title
navigateur
/
title
body
information
navigateur
php
echo
_SERVER
'
HTTP_USER_AGENT
'
/
body
/
html
exemple
résultat
exemple
simple
cours|cour
PHP
accélérer
version
information
navigateur
Mozilla
/
Macintosh
U
Intel
mac
os
X
10_6_4
fr-fr
AppleWebKit
/
˓→533.18.1
KHTML
like
gecko
version
/
safari
/
exécution
User-Agent
pouvoir
consulter
documentation
PHP
doc
php
http
/
/
dns-remplacer
/
manual
/
fr
/
imbrication
coder
HTML
PHP
pouvoir
exemple
—
commencer
page
HTML
—
puis
écrire
peu
PHP
—
reprendre
HTML
—
etc
.
exemple
doctype
html
html
head
title
navigateur
/
title
body
information
navigateur
php
agent
=
_SERVER
'
HTTP_USER_AGENT
'
echo
agent
echo
`
`
\n
P
if
stristr
agent
MSIE
{
b
sembler
utiliser
Internet
explorer
/
b
php
}
elseif
preg_match
`
`
/
Firefox
/
i
agent
{
b
sembler
utiliser
Firefox
/
b
php
}
elseif
preg_match
`
`
/
chrome
/
i
agent
{
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
b
sembler
utiliser
chrome
/
b
php
}
elseif
preg_match
`
`
/
safari
/
agent
{
b
sembler
utiliser
safari
/
b
php
}
else
echo
`
`
navigateur
inconnu
`
`
/
body
/
html
attention
cela
pouvoir
vite
devenir
illisible
exécution
user-agent
php
remède
écrire
genre
coder
quelque
solution
courant
—
utiliser
fonction
PHP
—
utiliser
classe
objet
PHP
—
séparer
modèle
voir
—
séparer
modèle
voir
contrôleur
modèle
MVC
—
utiliser
système
template
comme
Twig
formulaire
HTML
réponse
PHP
coder
ici
—
petit
formulaire
HTML
—
réponse
PHP
formulaire
HTML
doctype
html
html
head
meta
charset
=
utf-8
/
title
formulaire
html
/
title
/
head
body
form
action
=
dns-remplacer
method
=
GET
suite
page
suivant
formulaire
HTML
réponse
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
nom
input
typer
=
text
name
=
nom
âge
input
typer
=
text
name
=
age
p
input
typer
=
submit
valoir
=
envoyer
/
form
/
body
/
html
réponse
doctype
html
html
head
meta
charset
=
utf-8
/
title
test
formulaire
PHP
/
title
/
head
body
h1
bonjour
php
echo
_GET
'
nom
'
/
h1
h2
sembler
avoir
php
echo
_GET
'
age
'
/
h2
php
=
_GET
'
nom
'
=
_GET
'
age
'
nom
stocker
variable
type
php
echo
gettype
âge
stocker
variable
b
/
b
br
/
type
i
php
echo
gettype
/
i
br
/
pouvoir
transformer
i
integer
/
i
faire
php
settype
integer
br
/
type
php
echo
gettype
/
body
/
html
exécution
formulaire
chapitre
table
matière
cours|cour
PHP
accélérer
version
variable
PHP
déclaration
simple
php
variable
=
`
`
variable
PHP
/
/
autre
variable
variable
=
existence
variable
fonction
isset
php
=
`
`
variable
PHP
if
isset
echo
`
`
variable
exister
unset
echo
`
`
variable
supprimer
test
variable
fonction
empty
php
=
`
`
variable
PHP
if
empty
echo
`
`
variable
exister
n\'est
˓→pas
vide
`
`
avertissement
fonction
empty
répondre
vrai
variable
exister
ceci
sans
faire
aucun
warning
outre
avant
PHP
pouvoir
utiliser
autre
chose
variable
impossible
appeller
fonction
argument
passer
test
variable
PHP
opérateur
coalescent
opérateur
Null
coalescent
permettre
simplifier
certain
test
existence
variable
alternatif
comme
exemple
php
/
/
non
initialiser
b
=
suite
page
suivant
variable
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
echo
/
/
affiche
echo
PHP_EOL
echo
b
/
/
affiche
echo
PHP_EOL
permettre
limiter
recours
isset
nombreux
situation
comme
php
/
/
récupérer
valeur
_GET
'
email
'
retourne
'
nobody
˓→
'
/
/
ne
exister
mail
=
_GET
'
email
'
'
nobody
null
'
/
/
Equivaloir
mail
=
isset
_GET
'
email
'
_GET
'
email
'
˓→'nobody
null
'
/
/
Coalescing
pouvoir
être
chainer
/
/
renvoyer
premier
valeur
définir
parmi
/
/
_GET
'
email
'
_POST
'
email
'
'
nobody
dns-remplacer
'
mail
=
_GET
'
email
'
_POST
'
email
'
'
nobody
null
'
echo
`
`
mail\n
portée
variable
—
défaut
tout
variable
local
—
porter
réduire
fonction
bloc
déclaration
—
déclarer
variable
global
pouvoir
utiliser
tableau
_GLOBALS
php
_GLOBALS
'
MaVar
'
=
bonjour
constant
php
define
`
`
user
toto
echo
user
/
/
noter
le
absence
ici
chaîne
PHP
base
chapitre
table
matière
cours|cour
PHP
accélérer
version
guillemet
coter
php
var
=
hello
PHP
machaine
=
contenir
\
var
var
br
echo
machaine
/
/
ou
'
'
mystring
=
'
le
contenu
var
'
.
var
echo
mystring
résultat
toujours
contenir
var
hello
PHP
concaténation
aider
longueur
chainer
php
int
lg
=
strlen
chainer
accéder
caractère
i
chaine
php
echo
chaine
i
chainer
traiter
comme
tableau
indéxé
*
entier
*
plupart
tableau
PHP
indéxés
chainer
mettre
majuscule
/
minuscule
—
strtoupper
obtenir
majuscule
—
strtolower
mettre
minuscule
—
ucfirst
mettre
majuscule
premier
lettre
chainer
—
ucwords
mettre
majuscule
premier
lettre
chaque
mot
chainer
recherche
sous-chaines
motif
chainer
—
strstr
—
stristr
—
ereg
eregi
chaîne
PHP
cours|cour
PHP
accélérer
version
exemple
php
agent
=
_SERVER
'
HTTP_USER_AGENT
'
echo
agent
echo
`
`
\n
P
if
stristr
agent
MSIE
echo
`
`
sembler
utiliser
Internet
explorer
/
b
elseif
ereg
`
`
Firefox
agent
echo
`
`
sembler
utiliser
Firefox
/
b
elseif
eregi
`
`
chromer
agent
echo
`
`
sembler
utiliser
chrome
/
b
indication
variant
fonction
comporter
i
indiquer
insensibilité
casser
dire
majuscule
minuscule
considérer
comme
identique
exemple
test
peu
plus
complet
UserAgent
php
function
getBrowser
userAgent
{
if
preg_match
`
`
/
MSIE
{
}
/
i
userAgent
num
return
num
elseif
preg_match
`
`
/
Firefox
*
/
i
userAgent
num
return
num
elseif
preg_match
`
`
/
chrome
{
}
/
i
userAgent
num
return
num
elseif
preg_match
`
`
/
safari
/
i
userAgent
num
{
preg_match
`
`
/
version
{
}
/
userAgent
num
return
`
`
safari
`
`
num
}
else
return
`
`
navigateur
inconnu
}
if
empty
_SERVER
'
HTTP_USER_AGENT
'
{
echo
`
`
navigateur
sembler
etre
\n
echo
getBrowser
_SERVER
'
HTTP_USER_AGENT
'
}
/
/
test
UserAgent
connaître
FF
=
Mozilla
/
Macintosh
Intel
mac
os
X
rv
:
gecko
/
˓→20100101
Firefox
/
msie
=
Mozilla
/
compatible
MSIE
Windows
NT
trident
/
˓→5.0
InfoPath.2
SLCC1
.NET
CLR
.NET
CLR
˓→@card@
.NET
CLR
3gpp-gba
UNTRUSTED
/
chrome
=
Mozilla
/
Windows
NT
Win64
x64
AppleWebKit
/
˓→36
KHTML
like
gecko
chrome
/
safari
/
safari
=
Mozilla
/
iPad
CPU
os
6_0
like
mac
os
X
AppleWebKit
/
˓→536.26
KHTML
like
gecko
version
/
mobile
/
10A5355d
safari
/
suite
page
suivant
˓→8536.25
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
echo
`
`
br
/
test
Firefox
br
/
\n
echo
getBrowser
FF
`
`
br
/
\n
echo
`
`
br
/
test
MSIE
\n
echo
getBrowser
msie
`
`
br
/
\n
echo
`
`
br
/
test
chromer
\n
echo
getBrowser
chromer
`
`
br
/
\n
echo
`
`
br
/
test
safari
\n
echo
getBrowser
safari
résultat
br
/
test
Firefox
br
/
Firefox
/
br
/
br
/
test
MSIE
MSIE
br
/
br
/
test
chromer
chrome
/
@ord@
br
/
br
/
test
safari
safari
version
/
typage
PHP
fonction
gettype
settype
gettype
renvoyer
résultat
suivant
—
integer
—
doubler
—
string
—
array
—
object
—
class
—
unknown
type
settype
changer
type
élément
php
avoir
=
settype
integer
suite
page
suivant
typage
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
echo
`
`
contenu
variable
`
`
résultat
contenu
variable
fonction
test
—
is_int
—
is_long
—
is_double
—
is_array
—
is_object
—
is_string
attention
oublier
comme
JavaScript
différence
entre
opérateur
=
=
=
=
=
premier
vérifier
égalité
contenir
tenir
compte
éventuel
diffé-
rence
typage
int
string
exemple
tandis
second
vérifier
égalité
strict
autre
terme
=
=
vrai
tandis
=
=
=
faux
quelque
particularité
PHP
valeur
variable
php
toto
=
`
`
bonjour
br
/
\n
var
=
`
`
toto
echo
var
résultat
toujours
résultat
brut
bonjour
br
/
chapitre
table
matière
cours|cour
PHP
accélérer
version
fonction
eval
permettre
évaluation
expression
arithmetiques
directement
PHP
exister
aussi
JavaScript
délicat
manipuler
problématique
terme
sécurité
tableau
PHP
tableau
associatif
-
parcours
boucle
foreach
php
jour
=
array
`
`
lire
=
lundi
=
mardi
=
mercredi
=
jeudi
Ve
=
vendredi
=
samedi
Di
=
dimanche
foreach
jour
key
=
val
echo
key
`
`
val
`
`
br
\n
donner
lire
lundi
mardi
mercredi
jeudi
Ve
vendredi
samedi
Di
dimanche
affichage
print_r
php
print_r
jour
résultat
brut
html
Array
lu
=
lundi
=
mardi
=
mercredi
=
jeudi
Ve
=
vendredi
suite
page
suivant
tableau
PHP
cours|cour
PHP
accélérer
version
suite
page
précédent
=
samedi
Di
=
dimanche
essayer
vous
même
tab
utilisation
fonction
array_walk
php
array_walk
jour
'
aff_tab
'
définir
préalable
php
function
aff_tab
val
key
{
echo
`
`
key-
val
br
/
\n
}
obtenir
résultat
boucler
foreach
tri
simple
tableau
php
sortir
jour
array_walk
jour
'
aff_tab
'
obtenir
0-Dimanche
1-Jeudi
2-Lundi
3-Mardi
4-Mercredi
5-Samedi
6-Vendredi
dire
—
tableau
trier
selon
ordre
valeur
chapitre
table
matière
cours|cour
PHP
accélérer
version
—
clef
effacer
réaffecter
entier
vouloir
préserver
également
clef
tableau
associatif
falloir
utiliser
méthode
suivant
tri
selon
ordre
naturel
natsort
php
jour
=
array
`
`
lire
=
lundi
=
mardi
=
mercredi
=
jeudi
Ve
=
vendredi
=
samedi
Di
=
dimanche
var_dump
jour
natsort
jour
var_dump
jour
résultat
brut
html
array
{
`
`
lire
=
string
`
`
lundi
`
`
=
string
`
`
mardi
`
`
=
string
`
`
mercredi
`
`
=
string
`
`
jeudi
`
`
Ve
=
string
`
`
vendredi
`
`
=
string
`
`
samedi
`
`
Di
=
string
`
`
dimanche
}
array
{
`
`
Di
=
string
`
`
dimanche
`
`
=
string
`
`
jeudi
`
`
lire
=
string
`
`
lundi
`
`
=
string
`
`
mardi
`
`
=
string
`
`
mercredi
`
`
=
string
`
`
samedi
suite
page
suivant
tableau
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
`
`
Ve
=
string
`
`
vendredi
}
exécution
tritabnat
pouvoir
aussi
utiliser
fonction
natcasesort
vouloir
préoccuper
casse
chainer
présent
tableau
peu
près
ordre
dictionnaire
tableau
prédéfinir
PHP
tableau
concernant
protocole
HTTP
—
_GET
_POST
_REQUEST
englober
—
_SERVER
variable
décrire
client
pager
courant
—
_GLOBALS
variable
global
—
_COOKIE
cookies
—
_SESSION
session
exemple
récupération
_SERVER
grâce
fonction
getenv
php
function
infos
{
env
=
array
'
remote_addr
'
'
http_accept_language
'
'
http_
˓→host
'
'
http_user_agent
'
'
script_filename
'
'
server_addr
'
'
server_name
'
'
server_signature
'
'
server_software
'
'
request_method
'
'
query_string
'
'
request_uri
'
'
script_name
˓→
'
/
/
construction
de
un
tableau
associatif
/
/
valeur
lire
le
environnement
retour
=
array
foreach
env
clef
retour
clef
=
getenv
clef
return
retour
}
echo
`
`
voici
infos
disponible
BR
tab
=
infos
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
foreach
tab
clef
=
val
echo
clef
val
`
`
br
\n
résultat
voici
infos
disponible
remote_addr
:
:
http_accept_language
fr-fr
http_host
localhost
http_user_agent
Mozilla
/
Macintosh
U
Intel
mac
os
X
˓→10_6_4
fr-fr
AppleWebKit
/
KHTML
like
gecko
version
/
˓→Safari
/
script_filename
/
user
/
roza
/
site
/
php
/
exemple
/
dns-remplacer
server_addr
:
:
server_name
localhost
server_signature
server_software
apache
/
Unix
mod_ssl
/
OpenSSL
/
0.9.8l
DAV
/
PHP
/
request_method
GET
query_string
request_uri
/
~
roza
/
php
/
exemple
/
dns-remplacer
script_name
/
~
roza
/
php
/
exemple
/
dns-remplacer
Ùser-Agent
http
/
/
localhost
/
~
roza
/
php
/
exemple
/
infospy
˓→php
`
_
exécution
infospy
inclusion
fichier
externe
include
—
semblable
include
C
/
C++
—
réaliser
inclusion
physique
fichier
demander
include_once
—
identique
include
—
protéger
contre
éventuel
inclusion
multiple
inclusion
fichier
externe
cours|cour
PHP
accélérer
version
—
pouvoir
mener
erreur
redéclarater
etc
.
php
include_once
`
`
dns-remplacer
require
require_once
—
fonctionner
comme
include
include_once
respectivement
—
programme
arrêter
fichier
inclure
exister
php
require
`
`
dns-remplacer
require_once
`
`
dns-remplacer
dirname
savoir
quel
répertoire
trouver
pouvoir
utiliser
fonction
PHP
dirname
php
include_once
dirname
__FILE__
'
/
config
/
dns-remplacer
'
indication
Lorsqu
inclus
désigner
fichier
valoir
mieux
utiliser
chemin
relatif
repérer
fichier
comme
ci
dessus
plutôt
donner
chemin
absoudre
rapport
raciner
serveur
style
/
home
/
user
/
www
/
config
/
dns-remplacer
cela
beaucoup
plus
portable
serveur
autre
éviter
bien
déboire
avertissement
utilisation
systématique
version
once
include_once
re-
quire_once
recommander
car
pouvoir
causer
ralentissement
exécution
programmer
objet
PHP
Evolutions
grand
principe
—
objet
exister
PHP
partir
version
—
changement
important
PHP
convergence
vers
modèle
objet
java
—
introduction
comme
java
interface
classe
abstraire
—
emploi
modifieurs
private
public
comme
java
—
retrouver
aussi
__toString
__clone
mécanisme
traitement
excepter
semblable
celui
java
chapitre
table
matière
cours|cour
PHP
accélérer
version
—
constructeur
appeler
désormais
__construct
—
destructeur
__destruct
—
méthode
porter
mot
clef
function
signaler
type
retour
—
commentaire
documentation
faire
manière
java
indication
objet
instancient
mot
clef
new
comme
java
C++
utiliser
-
signifier
appel
méthode
déjà
prendre
concaténation
chaîne
objet
simple
Etudiant
PHP
fabriquer
maintenant
objet
simple
PHP
Ecriver
objet
représenter
étudier
donnée
—
identifier
—
nom
—
dater
naissance
méthode
opérer
donnée
—
constructeur
—
getter
setter
—
equals
—
toString
affichage
donner
code
suivant
php
/
*
*
classe
Etudiant
PHP
*
/
class
Etudiant
{
/
*
*
identification
unique
de
un
etudiant
*
/
protected
etudiant_id
/
*
*
nom
le
etudiant
*
/
protected
nom
/
*
*
date
naissance
le
etudiant
*
/
protected
naissance
public
function
__construct
id
nom
naissance
{
this-
etudiant_id
=
int
id
/
/
cast
vers
integer
this-
nom
=
string
nom
/
/
cast
vers
string
this-
naissance
=
int
naissance
/
/
cast
vers
date
timestamp
}
/
*
*
*
fonction
comparaison
simplifiee
entre
etudiants
*
=
=
comparer
id
nom
naissance
*
/
suite
page
suivant
objet
PHP
cours|cour
PHP
accélérer
version
suite
page
précédent
public
function
equals
etudiant
etudiant
{
return
this-
getId
=
=
etudiant-
getId
}
public
function
getId
{
return
this-
etudiant_id
}
public
function
getNom
{
return
this-
nom
}
public
function
getNaissance
{
return
this-
naissance
}
public
function
__toString
{
setlocal
LC_TIME
`
`
fr_FR
ne
=
strftime
'
B
'
this-
naissance
return
'
etudiant
id
=
'
this-
getId
'
nom
=
'
.
this-
˓→getNom
}
}
/
*
test
*
/
date_default_timezone_set
'
Europe
/
Paris
'
etu
=
new
Etudiant
talon
time
var_dump
etu
echo
`
`
br
/
echo
etu
Resultat
object
Etudiant
#
{
`
`
etudiant_id
protected
=
int
`
`
nom
protected
=
string
`
`
talon
`
`
naissance
protected
=
int
}
br
/
etudiant
id
=
nom
=
talon
mercredi
septembre
Execution
etudiant
php
chapitre
table
matière
cours|cour
PHP
accélérer
version
indication
Lorsqu
utiliser
opérateur
comparaison
=
=
objet
celui
-ci
comparer
utiliser
règle
suivant
deux
objet
égal
instance
classer
même
attribut
valeur
valeur
comparer
opérateur
=
=
lors
utilisation
opérateur
identité
=
=
=
objet
identique
uniquement
faire
référence
instance
classer
avertissement
beaucoup
programmeur
débutant
contenter
utiliser
PHP
comme
langage
purement
procédural
sans
utiliser
côté
objet
ceci
bloquer
tôt
tard
apprentissage
langage
grand
frameworks
PHP
trop
mal
aise
objet
suivre
abord
cours|cour
introduction
programmation
objet
java
python
C++
exemple
collection
PHP
PHP
standard
collecter
=
Arrays
—
content
offrir
PHP
standard
collection
résumer
utilisation
tableau
associatif
PHP
—
framework
collecter
java
beaucoup
plus
riche
DataStructures
ds
falloir
installer
librairie
supplémentaire
ds
DataStructures
avoir
accès
Framework
similaire
PHP
voir
documentation
collecter
php
http
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
aller
utiliser
commande
pecl
installer
ds
comme
extension
pecl
install
ds
puis
charger
extension
ajouter
fichier
.ini
PHP
extension
=
dns-remplacer
extension
donner
accès
classe
similaire
celui
framework
collecter
java
classer
proposer
exemple
—
Sequence
—
Vector
—
Deque
—
Vector
collection
PHP
cours|cour
PHP
accélérer
version
—
pair
—
set
—
Stack
—
queue
—
PriorityQueue
utilisation
Ds
classe
interface
ds
utiliser
espace
nommage
Ds
php
vector
=
new
\Ds\Vector
vector-
push
`
`
vector-
push
`
`
deux
vector-
push
`
`
trois
`
`
quatre
/
/
=
unpacking
vector-
push
`
`
cinq
`
`
six
print_r
vector
exemple
utilisation
classer
set
utiliser
maintenant
concrètement
classe
set
question
HTML
select
multiple
prendre
petit
formulaire
HTML
proposer
choix
couleur
select
p
quel
couleur
maillot
panthère
Fleury
˓→Loiret
Handball
select
name
=
coul
multiple
size
=
option
valoir
=
jaune
jaune
option
valoir
=
rose
Rose
option
valoir
=
bleu
bleu
option
valoir
=
noir
noir
option
valoir
=
blanc
Blanc
option
valoir
=
vert
vert
/
select
/
p
réponse
PHP
collecter
php
if
empty
_GET
'
coul
'
{
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
couleursReponse
=
new
\Ds\Set
_GET
'
coul
'
couleursCorrectes
=
new
\Ds\Set
'
rose
'
'
noir
'
'
blanc
˓→
'
/
/
calculer
différence
ensemble
voir
˓→elle
vide
if
couleursReponse-
diff
couleursCorrectes
-
isEmpty
echo
`
`
bravo
couleur
Fleury
Hand
Ball
˓→bien
Rose
noir
Blanc
`
`
else
echo
`
`
mauvais
réponse
couleur
Fleury
˓→Hand
Ball
Rose
noir
Blanc
`
`
}
sans
collection
utiliser
tableau
sans
Ds
obliger
contenter
tableau
PHP
utiliser
exemple
méthode
array_diff
voir
array_diff
php
http
/
/
dns-remplacer
/
manual
/
fr
/
dns-remplacer
Arrays
pouvoir
ici
sortir
simple
tableau
PHP
vérifier
taille
tableau
réponse
donner
celui
tableau
bon
réponse
puis
contenir
tableau
identique
php
if
empty
_GET
'
coul
'
{
couleursReponse
=
_GET
'
coul
'
couleursCorrectes
=
array
'
rose
'
'
noir
'
'
blanc
'
if
count
couleursReponse
=
=
count
couleursCorrectes
&
&
˓→array_diff
couleursReponse
couleursCorrectes
echo
`
`
bravo
couleur
Fleury
Hand
Ball
bien
Rose
˓→Noir
Blanc
`
`
else
echo
`
`
mauvais
réponse
couleur
Fleury
Hand
Ball
˓→sont
Rose
noir
Blanc
`
`
}
connexion
baser
donner
depuis
PHP
table
simple
SQL
connexion
baser
donner
depuis
PHP
cours|cour
PHP
accélérer
version
CREATE
tabler
`
carnet
`
ÌDìnt
NOT
NULL
AUTO_INCREMENT
`
nom
`
varchar
DEFAULT
NULL
`
PRENOM
`
varchar
DEFAULT
NULL
`
NAISSANCÈ
date
DEFAULT
NULL
`
VILLÈ
varchar
DEFAULT
NULL
PRIMARY
KEY
ÌD
`
ENGINE
=
InnoDB
AUTO_INCREMENT
=
DEFAULT
CHARSET
=
utf8
insert
INTO
`
carnet
`
valoir
'
Smith
'
'
John
'
'
'
'
ORLEANS
'
'
Durand
'
'
jean
'
'
'
'
ORLEANS
'
'
GUDULE
'
'
Jeanne
'
'
'
'
tour
'
'
ZAPATA
'
'
EMILIO
'
'
'
'
ORLEANS
'
'
Jourdain
'
'
Nicolas
'
'
'
'
tour
'
'
DUPUY
'
'
marier
'
'
'
'
Blois
'
'
ANDREAS
'
'
LOU
'
'
'
'
ST
Petersbourg
'
'
Kafka
'
'
Franz
'
'
'
'
Prague
'
'
dalton
'
'
Joe
'
'
'
'
daller
'
insérer
table
MySQL
ligner
commander
aide
PHPMyAdmin
puis
consulter
table
depuis
PHP
utiliser
connecteur
PDO
offrir
interface
connexion
utilisable
tout
SGBD
Systemes
gestion
baser
Donnees
habituel
comme
MySQL
PostgreSQL
oracle
Microsoft
SQL
Server
connexion
simple
PHP
PDO
doctype
html
html
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
/
head
body
h1
interrogation
tabler
carnet
PDO
/
h1
php
require
`
`
dns-remplacer
/
/
oracle
dsn
=
oci
dbname
=
/
/
serveur
:
/
base
/
/
sqlite
dsn
=
sqlite
/
tmp
/
dns-remplacé
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
connexion
=
new
PDO
dsn
user
PASSWD
}
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
catch
PDOException
e
{
printf
`
`
échec
connexion
s\n
e-
getMessage
exit
}
sql
=
select
*
from
carnet
if
connexion-
query
sql
echo
`
`
Pb
de
accès
carnet
else
{
foreach
connexion-
query
sql
row
echo
row
'
PRENOM
'
`
`
row
'
nom
'
`
`
naître
e
`
`
row
'
naissance
'
`
`
br
/
\n
}
/
body
/
html
fichier
dns-remplacé
contenir
information
connexion
serveur
MySQL
php
define
'
user
'
scott
define
'
PASSWD
'
tiger
define
'
SERVER
'
localhost
define
'
base
'
dbscott
Resultat
brut
html
doctype
html
html
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
/
head
body
h1
interrogation
tabler
carnet
PDO
/
h1
John
SMITHné
e
br
/
jean
DURANDné
e
br
/
Jeanne
GUDULEné
e
br
/
EMILIO
ZAPATAné
e
br
/
Nicolas
JOURDAINné
e
br
/
marier
DUPUYné
e
br
/
suite
page
suivant
connexion
baser
donner
depuis
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
LOU
ANDREASné
e
br
/
Franz
Kafkané
e
br
/
Joe
Daltonné
e
br
/
/
body
/
html
Execution
carnet
php
fabrication
tabler
HTML
résultat
html
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
body
h1
interrogation
tabler
carnet
PDO
/
h1
php
require
`
`
dns-remplacé
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
connexion
=
new
PDO
dsn
user
PASSWD
}
catch
PDOException
e
{
printf
`
`
échec
connexion
s\n
e-
getMessage
exit
}
sql
=
select
*
from
carnet
if
connexion-
query
sql
echo
`
`
Pb
de
accès
carnet
else
{
table
tr
td
nom
/
td
td
prénom
/
td
/
tr
php
foreach
connexion-
query
sql
row
echo
`
`
tr
td
row
'
nom
'
/
td
td
row
'
PRENOM
'
`
`
/
td
/
tr
\n
/
table
php
}
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
/
body
/
html
résultat
brut
html
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
body
h1
interrogation
tabler
carnet
PDO
/
h1
table
tr
td
nom
/
td
td
prénom
/
td
/
tr
tr
td
Smith
/
td
td
John
/
td
/
tr
tr
td
Durand
/
td
td
jean
/
td
/
tr
tr
td
GUDULE
/
td
td
Jeanne
/
td
/
tr
tr
td
ZAPATA
/
td
td
EMILIO
/
td
/
tr
tr
td
Jourdain
/
td
td
Nicolas
/
td
/
tr
tr
td
DUPUY
/
td
td
marier
/
td
/
tr
tr
td
ANDREAS
/
td
td
LOU
/
td
/
tr
tr
td
Kafka
/
td
td
Franz
/
td
/
tr
tr
td
dalton
/
td
td
Joe
/
td
/
tr
/
table
/
body
/
html
Execution
carnet
table
pouvoir
faire
petit
refactoring
fonction
établir
connexion
baser
php
require
`
`
dns-remplacé
function
connect_bd
{
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
connexion
=
new
PDO
dsn
user
PASSWD
}
suite
page
suivant
connexion
baser
donner
depuis
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
catch
PDOException
e
{
printf
`
`
échec
connexion
s\n
e-
˓→getMessage
exit
}
return
connexion
}
améliorer
affichage
résultat
html
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
link
rel
=
stylesheet
href
=
dns-remplacer
/
/
head
body
h1
interrogation
tabler
carnet
PDO
/
h1
php
require_once
'
dns-remplacer
'
connexion
=
connect_bd
sql
=
select
*
from
carnet
if
connexion-
query
sql
echo
`
`
Pb
de
accès
carnet
else
{
table
class
=
centre
id
=
joli
tr
td
ID
/
td
td
prénom
/
td
td
nom
/
td
td
naissance
/
˓→td
/
tr
php
foreach
connexion-
query
sql
row
echo
`
`
tr
td
row
'
ID
'
`
`
/
td
td
row
'
PRENOM
'
`
`
/
td
td
row
'
nom
'
`
`
/
td
td
row
'
naissance
'
`
`
/
td
/
tr
br
/
\n
/
table
php
}
/
body
/
html
chapitre
table
matière
cours|cour
PHP
accélérer
version
fichier
CSS
/
*
bordurer
simple
autour
tableau
*
/
table
th
td
{
border
1px
solid
grey
}
table
{
border-collaps
collapse
}
/
*
centrage
tableau
*
/
dns-remplacer
{
margin
auto
}
/
*
centrage
texte
cellule
tableau
*
/
dns-remplacé
td
{
text-align
center
}
table
#
joli
tr
first-child
{
background
LightPink
}
table
#
joli
tr
nth-child
2n
{
background
#
EFD3C9
}
table
#
joli
tr
nth-child
2n+3
{
background
#
BCBCD0
}
/
*
tableau
seul
ligner
le
affiche
rouge
*
/
table
tr
only-child
{
background
red
}
résultat
brut
html
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
link
rel
=
stylesheet
href
=
dns-remplacer
/
/
head
body
h1
interrogation
tabler
carnet
PDO
/
h1
table
class
=
centre
id
=
joli
tr
td
ID
/
td
td
prénom
/
td
td
nom
/
td
td
naissance
/
˓→td
/
tr
tr
td
/
td
td
John
/
td
td
Smith
/
td
td
/
td
/
tr
br
/
tr
td
/
td
suite
page
suivant
connexion
baser
donner
depuis
PHP
cours|cour
PHP
accélérer
version
suite
page
précédent
td
jean
/
td
td
Durand
/
td
td
/
td
/
tr
br
/
tr
td
/
td
td
Jeanne
/
td
td
GUDULE
/
td
td
/
td
/
tr
br
/
tr
td
/
td
td
EMILIO
/
td
td
ZAPATA
/
td
td
/
td
/
tr
br
/
tr
td
/
td
td
Nicolas
/
td
td
Jourdain
/
td
td
/
td
/
tr
br
/
tr
td
/
td
td
marier
/
td
td
DUPUY
/
td
td
/
td
/
tr
br
/
tr
td
/
td
td
LOU
/
td
td
ANDREAS
/
td
td
/
td
/
tr
br
/
tr
td
/
td
td
Franz
/
td
td
Kafka
/
td
td
/
td
/
tr
br
/
tr
td
/
td
td
Joe
/
td
td
dalton
/
td
td
/
td
/
tr
br
/
/
table
/
body
/
html
Execution
carnet
table
Version2
pouvoir
générer
page
différent
liste
déroulant
liste
lien
lister
puce
etc
création
lister
déroulant
doctype
html
html
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
/
head
body
h1
interrogation
tabler
carnet
PDO
/
h1
php
require_once
'
dns-remplacer
'
connexion
=
connect_bd
sql
=
select
*
from
carnet
if
connexion-
query
sql
echo
`
`
Pb
de
accès
carnet
else
{
form
action
=
dns-remplacer
method
=
GET
select
name
=
ID
php
foreach
connexion-
query
sql
row
if
empty
row
'
nom
'
echo
`
`
option
valoir
=
'
row
'
ID
'
`
`
'
row
'
PRENOM
'
`
`
row
'
nom
'
`
`
/
option
\n
/
select
input
typer
=
submit
valoir
=
rechercher
/
form
php
}
/
body
/
html
remarquer
usage
clef
primaire
tabler
comme
valoir
option
assurer
unicité
valeur
éviter
tout
amiguité
résultat
brut
doctype
html
html
head
title
connexion
MySQL
PDO
/
title
meta
charset
=
utf-8
/
head
body
suite
page
suivant
connexion
baser
donner
depuis
PHP
cours|cour
PHP
accélérer
version
suite
page
précédent
h1
interrogation
tabler
carnet
PDO
/
h1
form
action
=
dns-remplacer
method
=
GET
select
name
=
ID
option
valoir
=
'
'
John
Smith
/
option
option
valoir
=
'
'
jean
Durand
/
option
option
valoir
=
'
'
Jeanne
GUDULE
/
option
option
valoir
=
'
'
EMILIO
ZAPATA
/
option
option
valoir
=
'
'
Nicolas
Jourdain
/
option
option
valoir
=
'
'
marier
DUPUY
/
option
option
valoir
=
'
'
LOU
ANDREAS
/
option
option
valoir
=
'
'
Franz
Kafka
/
option
option
valoir
=
'
'
Joe
dalton
/
option
/
select
input
typer
=
submit
valoir
=
rechercher
/
form
/
body
/
html
Execution
carnet
select
requête
préparer
PHP
recherche
simple
PHP
PDO
doctype
html
html
head
title
recherche
de
un
personne
ID
/
title
meta
charset
=
utf-8
/
head
body
php
wanted
=
_GET
'
ID
'
if
empty
wanted
{
echo
`
`
h@card@
recherche
wanted
/
h1
require_once
'
dns-remplacer
'
connexion
=
connect_bd
sql
=
select
*
from
carnet
where
ID
=
'
wanted
`
`
'
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
if
connexion-
query
sql
echo
`
`
Pb
requete
else
{
foreach
connexion-
query
sql
row
echo
row
'
nom
'
`
`
row
'
PRENOM
'
`
`
/
br
\n
}
}
/
body
/
html
appel
paramètre
ID
passé
URL
php
exemple
/
pdo
/
dns-remplacer
ID
=
Execution
rechercher
php
lorsqu
nombreux
paramètre
retrouver
nombreux
concaténation
chainer
entourer
“
cote
”
grand
source
erreur
lenteur
écriture
remédier
cela
pouvoir
utiliser
requête
préparer
permettre
bien
dissocier
requête
paramètre
aller
être
fournir
avant
exécution
PreparedStatement
également
bien
préférable
terme
sécurité
utiliser
systématiquement
recherche
PreparedStatement
doctype
html
html
head
title
recherche
de
un
personne
ID
/
title
meta
charset
=
utf-8
/
head
body
php
wanted
=
_GET
'
ID
'
if
empty
wanted
{
echo
`
`
h@card@
recherche
wanted
/
h1
require_once
'
dns-remplacer
'
connexion
=
connect_bd
sql
=
select
*
from
carnet
where
ID
=
id
stmt
=
connexion-
prepare
sql
stmt-
bindParam
'
id
'
_GET
'
ID
'
stmt-
execute
if
stmt
echo
`
`
Pb
de
accès
carnet
else
{
suite
page
suivant
requête
préparer
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
if
stmt-
rowCount
=
=
echo
`
`
inconnu
br
/
else
foreach
stmt
row
echo
row
'
PRENOM
'
`
`
row
'
nom
'
`
`
naître
e
`
`
row
'
naissance
'
`
`
br
/
}
}
/
body
/
html
requête
préparer
limiter
fortement
possibilité
”
injecter
SQL
comme
ver-ront
plus
tard
complément
PDO
-
sécurité
filtrage
entrer
pouvoir
vouloir
nourrir
requête
directement
donner
provenir
formulaire
php
sql
=
sprintf
'
select
id
FROM
carnet
WHERE
email
=
`
`
'
_GET
'
email
'
voir
bien
valeur
entrer
email
tableau
_GET
absolument
vérfifier
avant
utilisation
pouvoir
essayer
cas
utiliser
filtre
PHP
contrôler
peu
chose
php
sql
=
sprintf
'
select
id
FROM
carnet
WHERE
email
=
`
`
'
filter_input
INPUT_GET
'
email
'
ceci
constituer
manière
peu
sûr
procéder
malgré
utilisation
filtrer
PHP
cela
laisser
effet
possiblilité
insertion
coder
malveillant
non
contrôler
exemple
classique
requêter
SQL
construire
chainer
suivant
php
sql
=
`
`
select
nom
FROM
user
WHERE
login
=
'
_REQUEST
'
login
'
'
AND
PASSWD
=
'
_REQUEST
'
pass
'
`
`
'
chapitre
table
matière
cours|cour
PHP
accélérer
version
donner
lors
exécution
_REQUEST
“
login
”
=
toto
”
–
select
nom
FROM
user
WHERE
login
=
'
toto
'
'
AND
PASSWD
=
'
_
˓→REQUEST
'
pass
'
'
`
`
avertissement
-
-
constituer
début
commentaire
SQL
ceci
constituer
in-
jection
SQL
principal
faille
sécurité
exploiter
Hackers
prémunir
falloir
utiliser
fois
filtrage
entrer
requêter
préparer
php
sql
=
'
select
id
FROM
carnet
WHERE
email
=
email
'
statement
=
pdo-
prepare
sql
email
=
filter_input
INPUT_GET
'
email
'
statement-
bindValue
'
email
'
email
falloir
parfois
préciser
troisième
argument
typer
paramètre
attendre
php
sql
=
'
select
email
FROM
carnet
WHERE
id
=
id
'
statement
=
pdo-
prepare
sql
userId
=
filter_input
INPUT_GET
'
id
'
statement-
bindValue
'
id
'
userId
PDO
:
PARAM_INT
filtrage
PHP
vérification
formulaire
HTML5
JavaScript
valable
uniquement
côté
client
raison
sécurité
falloir
réeffectuer
complètement
tout
vérification
côté
serveur
PHP
mettre
cela
disposition
programmeur
tout
ensemble
filtre
premier
vérification
consister
bien
prendre
compter
caractère
spécial
gestion
caractère
spécial
magic
quotes
avant
PHP
directive
concernant
magic
quotes
exister
fichier
configuration
PHP
directif
magic_quotes_gpc
etait
activer
PHP
modifier
automatiquement
certain
entrée
formulaire
procéder
protection
certain
caractère
spécial
insertion
backslashes
exemple
—
caractère
accentuer
—
apostrophe
—
backslashes
filtrage
PHP
cours|cour
PHP
accélérer
version
peu
manière
fonction
addslashes
protection
destiner
préparer
donner
avant
requête
SQL
empêcher
éventuel
injection
SQL
comportement
automatique
toutefois
parfois
gênant
vouloir
simplement
réafficher
chaine
saisir
non
utiliser
requête
SQL
outre
vouloir
toujours
protéger
chaine
façon
selon
usage
vouloir
faire
suite
pouvoir
vouloir
certain
cas
protéger
chaine
exemple
—
htmlspecialchar
éviter
injection
coder
HTML
—
PDO
quote
protéger
injection
SQL
php
pdo
=
new
PDO
'
sqlite
.
/
tmp
/
dns-remplacer
'
string
=
'
Orléans
'
print
`
`
chaîne
sans
quotes
string\n
print
`
`
chaîne
quotes
`
`
pdo-
quote
string
`
`
\n
cela
dispenser
utiliser
PreparedStatement
voir
précédemment
filtre
PHP
plus
direct
utiliser
formulaire
baser
fonction
filter_input
paramètre
INPUT_GET
INPUT_POST
voici
quelque
exemple
typique
php
entier
=
filter_input
INPUT_POST
'
var1
'
FILTER_SANITIZE_
˓→NUMBER_INT
url
=
filter_input
INPUT_POST
'
var2
'
FILTER_VALIDATE_URL
if
filter_input
INPUT_GET
`
`
email
FILTER_VALIDATE_EMAIL
echo
`
`
Email
non
valide
else
echo
`
`
Email
valide
pouvoir
aussi
filtrer
carctère
spécial
php
search_html
=
filter_input
INPUT_GET
'
search
'
FILTER_SANITIZE_
˓→SPECIAL_CHARS
search_url
=
filter_input
INPUT_GET
'
search
'
FILTER_SANITIZE_
˓→ENCODED
echo
`
`
recherché
search_html
\n
echo
`
`
href
=
'
search
=
search_url
'
nouveau
recherche
.
/
avoir
chapitre
table
matière
cours|cour
PHP
accélérer
version
gestion
transaction
PDO
problème
sérier
requête
SQL
logiquement
lier
entre
elle
vouloir
elle
tout
exécuter
aucun
effet
certain
cas
pris
compter
partir
requête
seulement
pouvoir
conduire
incohérence
système
information
base
donner
pouvoir
ainsi
être
corrompre
très
difficile
rectifier
suite
exemple
requête
suivre
lier
php
require
'
dns-remplacer
'
connexion
=
connect_bd
stmt1
=
pdo-
prepare
'
UPDATE
compter
set
solder
=
solde
-
monter
WHERE
nom
=
nom
'
stmt2
=
pdo-
prepare
'
UPDATE
compter
set
solder
=
solder
+
montant
WHERE
nom
=
nom
'
/
/
retrait
Compte1
cpte1
=
'
Compte1
'
monter
=
stmt1-
bindParam
'
nom
'
cpte1
stmt1-
bindParam
'
solde
'
monter
PDO
:
PARAM_INT
stmt1-
execute
/
/
Credit
Compte2
cpte2
=
'
Compte2
'
depot
=
stmt2-
bindParam
'
nom
'
cpte2
stmt-
bindParam
'
monter
'
depot
PDO
:
PARAM_INT
stmt-
execute
ceci
pouvoir
conduire
problème
cas
interruption
séquencer
particulier
Compte1
pouvoir
avoir
débiter
sans
Compte2
créditer
pouvoir
résoudre
fragilité
utiliser
transaction
php
require
'
dns-remplacer
'
connexion
=
connect_bd
suite
page
suivant
gestion
transaction
PDO
cours|cour
PHP
accélérer
version
suite
pager
précédent
stmt1
=
connexion-
prepare
'
UPDATE
compter
set
solder
=
solde
-
solde
WHERE
nom
=
nom
'
stmt2
=
connexion-
prepare
'
UPDATE
compter
set
solder
=
solder
+
montant
WHERE
nom
=
nom
'
/
/
commencer
transaction
connexion
-
beginTransaction
/
/
retrait
Compte1
cpte1
=
'
Compte1
'
monter
=
stmt1-
bindParam
'
nom
'
cpte1
stmt1-
bindParam
'
solde
'
monter
PDO
:
PARAM_INT
stmt1-
execute
/
/
Credit
Compte2
cpte2
=
'
Compte2
'
depot
=
stmt2-
bindParam
'
nom
'
cpte2
stmt-
bindParam
'
monter
'
depot
PDO
:
PARAM_INT
stmt-
execute
/
/
on
terminer
transaction
connexion
-
commettre
séquence
échouer
PDO
commander
RollBack
automatique
dire
annulation
tout
transaction
connexion
persistant
PDO
créer
connexion
persistant
PDO
suffire
utiliser
attribut
ATTR
persister
instanciation
objet
PDO
lors
appel
ultérieur
paramètre
création
identique
objet
déjà
créer
simplement
réutiliser
php
function
connect_db
{
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
connexion
=
new
PDO
dsn
user
PASSWD
array
PDO
:
ATTR_PERSISTENT
=
true
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
}
catch
PDOException
e
{
printf
`
`
échec
connexion
s\n
e-
getMessage
exit
}
return
connexion
}
validation
contrôler
entrer
GUMP
pouvoir
également
utiliser
librairie
aider
gérer
validation
comme
GUMP
https
/
/
dns-remplacer
/
Wixel
/
GUMP
installer
créer
fichier
dns-remplacer
répertoire
travail
{
require
{
wixel
/
gump
`
`
dev-master
}
}
puis
utiliser
outil
PHP
composer
installer
composant
demander
composer
update
pouvoir
utiliser
Gump
vérifier
entrer
php
require
`
`
vendor
/
wixel
/
gump
/
dns-remplacer
is_valid
=
GUMP
:
is_valid
_POST
array
'
username
'
=
'
required
|
alpha_numeric
'
'
password
'
=
'
required
|
max_len
,
|
min_len
,
'
if
is_valid
{
echo
`
`
valid
username
and
password
`
`
}
else
{
print_r
is_valid
suite
page
suivant
validation
contrôler
entrer
GUMP
cours|cour
PHP
accélérer
version
suite
pager
précédent
}
manière
plus
détailler
php
require
`
`
vendor
/
wixel
/
gump
/
dns-remplacer
if
_SERVER
`
`
REQUEST_METHOD
=
=
`
`
POST
{
validator
=
new
GUMP
name
=
_POST
'
name
'
password
=
_POST
'
password
'
_POST
=
array
'
name
'
=
name
'
password
'
=
password
/
/
néttoie
donné
convertir
chaine
utf-8
besoin
_POST
=
validator-
sanitize
_POST
/
/
définir
règle
filtre
rules
=
array
'
name
'
=
'
required
|
alpha_numeric
|
max_len
,
|
min_len
,
'
'
password
'
=
'
required
|
max_len
,
|
min_len
,
'
filters
=
array
'
name
'
=
'
trim
|
sanitize_string
'
'
password
'
=
'
trim
|
base64_encode
'
/
/
appliquer
filtre
_POST
=
validator-
filter
_POST
filters
/
/
valide
is_valid
=
validator-
validate
_POST
rules
/
/
vérifier
résultat
if
is_valid
=
=
=
true
{
echo
name
echo
password
exit
}
else
{
echo
`
`
erreur
détecter
entrer
\n
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
/
/
affiche
erreur
html
echo
validator-
get_readable_errors
true
}
}
Http
conservation
information
client
problème
protocole
HTTP
protocole
sans
mémoire
requêter
client
information
rattacher
mémoriser
défaut
plusieurs
technique
développer
remédier
manque
—
envoyer
information
URL
—
utiliser
champ
cacher
HTML
—
utiliser
Cookies
—
utiliser
session
envoi
information
URL
considérer
premier
page
dns-remplacer
doctype
html
html
lang
=
fr
head
meta
charset
=
utf-8
/
title
formulaire
/
title
/
head
body
php
if
isset
_GET
'
login
'
{
form
method
=
'
GET
'
action
=
php
echo
_SERVER
'
PHP_SELF
'
p
Login
input
typer
=
text
name
=
login
/
p
input
typer
=
submit
valoir
=
valider
/
form
php
}
else
{
header
'
location
dns-remplacer
login
=
'
.
_GET
'
login
'
}
suite
page
suivant
Http
conservation
information
client
cours|cour
PHP
accélérer
version
suite
page
précédent
/
body
/
html
poursuivre
page2
doctype
html
html
lang
=
fr
head
meta
charset
=
utf-8
/
title
formulaire
/
title
/
head
body
php
if
isset
_GET
'
login
'
{
echo
_GET
'
login
'
}
else
{
header
'
location
dns-remplacé
'
}
/
body
/
html
exécution
passager
info
URL
utiliser
cookies
information
stocker
petit
fichier
texte
navigateur
client
pouvoir
exemple
servir
stocker
identifier
session
login
compteur
visiter
encore
mesurer
temps
connexion
php
if
isset
_COOKIE
'
compteur
'
{
message
=
`
`
etes
deja
venir
`
`
_COOKIE
'
compteur
'
fois
˓→
br
/
\n
valeur
=
_COOKIE
'
compteur
'
+
}
else
{
message
=
`
`
mettre
petit
cookie
br
/
\n
valeur
=
}
setCookie
`
`
compteur
valeur
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
echo
message
exécution
Cookies
PHP
information
plus
grand
nombre
stocker
revètent
caractère
plus
sensible
préférer
stocker
essentiellement
côté
serveur
utiliser
mécanisme
plus
complet
session
celui
-ci
consister
utiliser
tableau
associatif
_SESSION
permettre
stocker
tout
sorte
information
associer
client
donner
typer
nombre
chainer
tableau
objet
PHP
considérer
premier
page
mettre
place
session
php
/
/
dns-remplacer
session_start
if
isset
_SESSION
'
cpt
'
_SESSION
'
cpt
'
=
else
_SESSION
'
cpt
'
++
echo
`
`
voir
page
`
`
_SESSION
'
cpt
'
fois
br
/
\n
echo
`
`
SID
courir
`
`
session_id
echo
`
`
br
/
href
=
\
dns-remplacé
\
aller
page
suivant
˓→
dns-remplacer
/
avoir
puis
aller
relire
information
stocker
variable
session
autre
pager
php
/
/
dns-remplacer
session_start
if
isset
_SESSION
'
cpt
'
_SESSION
'
cpt
'
=
else
_SESSION
'
cpt
'
++
echo
`
`
bonjour
{
_SESSION
'
login
'
}
br
\n
echo
`
`
voir
page
`
`
_SESSION
'
cpt
'
`
`
fois
br
/
\n
echo
`
`
SID
toujours
`
`
session_id
echo
`
`
br
/
href
=
\
dns-remplacer
\
retour
dns-remplacé
/
avoir
exécution
utilisation
variable
session
PHP
Http
conservation
information
client
cours|cour
PHP
accélérer
version
Champs
cacher
quatrième
mécanisme
employer
conserver
information
page
Web
elle
même
comme
utilisation
champ
cacher
input
typer
hidden
champ
pouvoir
exemple
servir
stocker
formulaire
HTML
champ
spécial
dire
csrf
token
contenir
identifier
unique
temporaire
prémunir
attaque
typer
CSRF
cross
site
Request
Forgery
exemple
envoi
mail
contenir
image
quelqu
image
faire
lien
vers
page
administration
lequel
destinataire
mail
droit
particulier
comme
editer
supprimer
ressource
page
pouvoir
déclencher
suppression
modification
contenir
non
souhaiter
principal
Frameworks
Web
comme
Symfony
Laravel
PHP
Django
flask
python
prendre
charge
génération
automatique
token
mise
variable
session
falloir
tout
appeler
formulaire
lors
utilisation
ajax
manipuler
XML
PHP
format
XML
utiliser
façon
très
varier
trouver
service
Web
fichier
configuration
format
comme
SVG
MathML
docx
odt
etc
.
manipulation
langage
comme
PHP
particulièrement
important
pouvoir
manipuler
XML
différent
manière
—
main
—
XMLWriter
/
XMLReader
—
dom
—
SimpleXML
combinaison
méthode
—
dom
document
Object
Model
méthode
recréer
tout
arborescence
document
XML
sous
forme
objet
PHP
utilisation
simple
cou-
teuse
ressource
temps
exécution
peu
verbeux
—
XMLWriter
XMLReader
traiter
fichier
XML
plus
bas
niveau
uti-
lisation
exclusif
rendre
parfois
coder
délicat
implémenter
surtout
lecture
fichier
complexe
—
SimpleXML
représenter
sorte
compromettre
simplicité
/
performance
—
traiter
fichier
xml
main
généralement
éviter
sauf
créer
fichier
très
simple
traitement
fichier
XML
main
observer
abord
comment
créer
fichier
XML
contenir
liste
programme
TV
lecture
fichier
XML
sans
api
peu
recommandé
php
header
'
Content-Type
text
/
xml
'
print
'
xml
version
=
'
`
`
\n
print
`
`
programme
\n
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
programme
=
array
array
'
nom
'
=
'
Simpsons
'
'
chaine
'
=
'
TF18
'
'
debut
'
=
'
:
'
'
duree
'
=
'
'
array
'
nom
'
=
'
Blake
Mortimer
'
'
chaine
'
=
'
M54
'
'
debut
'
=
'
:
'
'
duree
'
=
'
'
foreach
programme
show
{
print
`
`
\t
show
\n
foreach
show
tag
=
dater
{
print
`
`
\t
tag
htmlspecialchars
dater
`
`
\t
/
tag
\n
}
print
`
`
/
show
\n
}
print
`
`
/
programme
\n
exécution
Ecriture
XML
main
Resultat
brut
html
xml
version
=
programme
show
nom
Simpsons
/
nom
chaine
TF18
/
chaine
debut
:
/
debut
duree
/
duree
/
show
show
nom
Blake
Mortimer
/
nom
chaine
M54
/
chaine
debut
:
/
debut
duree
/
duree
/
show
/
programme
Ecriture
XMLWriter
exemple
simple
démarrer
manipuler
XML
PHP
cours|cour
PHP
accélérer
version
php
xml
=
new
XMLWriter
xml-
openURI
'
dns-remplacer
'
xml-
startElement
'
toto
'
xml-
writeElement
'
url
'
'
http
/
/
dns-remplacer
'
xml-
endElement
xml-
flush
Resultat
brut
toto
url
http
/
/
dns-remplacer
/
url
/
toto
récupérer
donner
table
carnet
exporter
XML
php
require_once
'
dns-remplacer
'
connexion
=
connect_bd
sql
=
select
*
from
carnet
dater
=
connexion-
query
sql
xml
=
new
XMLWriter
xml-
openUri
`
`
dns-remplacer
xml-
startDocument
'
'
'
utf-8
'
xml-
startElement
'
mescontact
'
while
pers
=
data-
fetch
{
xml-
startElement
'
contact
'
xml-
writeAttribute
'
id
'
pers
'
ID
'
xml-
writeElement
'
prenom
'
pers
'
PRENOM
'
xml-
writeElement
'
nom
'
pers
'
nom
'
xml-
writeElement
'
naissance
'
pers
'
naissance
'
xml-
endElement
}
xml-
endElement
xml-
endElement
xml-
flush
Resultat
xml
version
=
encoding
=
UTF-8
mescontacts
contact
id
=
prenom
John
/
prenom
nom
Smith
/
nom
naissance
/
naissance
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
/
contact
contact
id
=
prenom
jean
/
prenom
nom
Durand
/
nom
naissance
/
naissance
/
contact
contact
id
=
prenom
Jeanne
/
prenom
nom
GUDULE
/
nom
naissance
/
naissance
/
contact
contact
id
=
prenom
EMILIO
/
prenom
nom
ZAPATA
/
nom
naissance
/
naissance
/
contact
contact
id
=
prenom
Nicolas
/
prenom
nom
Jourdain
/
nom
naissance
/
naissance
/
contact
contact
id
=
prenom
marier
/
prenom
nom
DUPUY
/
nom
naissance
/
naissance
/
contact
contact
id
=
prenom
LOU
/
prenom
nom
ANDREAS
/
nom
naissance
/
naissance
/
contact
contact
id
=
prenom
Franz
/
prenom
nom
Kafka
/
nom
naissance
/
naissance
/
contact
contact
id
=
prenom
Joe
/
prenom
nom
dalton
/
nom
naissance
/
naissance
/
contact
/
mescontact
traitement
dom
Ecriture
fichier
XML
dom
utiliser
donnée
provenir
base
donner
partir
table
film
suivant
manipuler
XML
PHP
cours|cour
PHP
accélérer
version
CREATE
tabler
if
NOT
EXISTS
`
film
`
`
code_filmìnt
NOT
NULL
AUTO_INCREMENT
`
titre_original
`
varchar
DEFAULT
NULL
`
titre_francais
`
varchar
DEFAULT
NULL
`
pays
`
varchar
DEFAULT
NULL
`
dateìnt
DEFAULT
NULL
`
dureeìnt
DEFAULT
NULL
`
couleur
`
varchar
DEFAULT
NULL
`
realisateurìnt
DEFAULT
NULL
ìmagè
varchar
DEFAULT
NULL
PRIMARY
KEY
`
code_film
`
créer
fichier
XML
donné
table
utiliser
dom
php
/
/
fichier
dns-remplacé
utiliser
auparavant
require
`
`
dns-remplacé
connexion
=
connect_bd
sql
=
select
*
from
film
limit
dater
=
connexion-
query
sql
if
dater
{
document
=
new
DomDocument
document-
preserveWhiteSpace
=
false
document-
formatOutput
=
true
/
/
créer
racine
lesfilm
la|le
insérer
document
lesfilm
=
document-
createElement
'
lesfilm
'
document-
appendChild
lesfilm
/
/
boucler
tout
film
trouver
BD
while
unfilm
=
data-
fetch
PDO
:
FETCH_OBJ
{
film
=
document-
createElement
'
film
'
film-
setAttribute
'
idreal
'
unfilm-
realisateur
lesfilms-
appendChild
film
/
/
créer
le
élément
title
la|le
ajouter
film
title
=
document-
createElement
'
titre
'
film-
appendChild
title
/
/
définir
texte
title
text
=
document-
createTextNode
utf8_encoder
unfilm-
titre_
˓→original
title-
appendChild
text
/
/
créer
ajouter
realisateur
film
realisateur
=
document-
createElement
'
date
'
id
=
document-
createTextNode
unfilm-
date
realisateur-
appendChild
id
film-
appendChild
realisateur
}
document-
save
'
dns-remplacer
'
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
echo
`
`
Export
XML
finir
`
`
}
else
{
echo
`
`
aucun
film
base
}
exécution
Creation
XML
dom
Resultat
xml
version
=
lesfilm
film
idreal
=
titre
Pandora
and
the
flying
Dutchman
/
˓→titre
date
/
date
/
film
film
idreal
=
titre
Johnny
Guitar
/
˓→titre
date
/
date
/
film
film
idreal
=
titre
Woman
under
the
influence
/
˓→titre
date
/
date
/
film
film
idreal
=
titre
Apartment
The
/
˓→titre
date
/
date
/
film
film
idreal
=
titre
Victor
/
Victoria
/
˓→titre
date
/
date
/
film
film
idreal
=
titre
Modern
Times
/
˓→titre
date
/
date
/
film
film
idreal
=
suite
page
suivant
manipuler
XML
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
titre
&
#
xC3
&
#
xA9
prendre
˓→
/
titre
date
/
date
/
film
film
idreal
=
titre
jour
f
&
#
xC3
&
#
xAA
˓→
/
titre
date
/
date
/
film
film
idreal
=
titre
Olvidados
los
/
˓→titre
date
/
date
/
film
film
idreal
=
titre
West
Side
Story
/
˓→titre
date
/
date
/
film
/
lesfilm
relecture
SimpleXML
php
lesfilm
=
simplexml_load_file
'
dns-remplacer
'
foreach
lesfilms-
film
film
{
echo
`
`
titre
utf8_decode
film-
titre
`
`
br
/
\n
foreach
film-
attributer
=
b
{
echo
'
=
'
b
`
`
\
\n
}
print
`
`
Annee
{
film-
annee
}
br
/
\n
}
exécution
lecture
XML
SimpleXML
Resultat
brut
chapitre
table
matière
cours|cour
PHP
accélérer
version
titre
Pandora
and
the
flying
Dutchman
˓→
br
/
idreal
=
Annee
br
/
titre
Johnny
Guitar
˓→
br
/
idreal
=
Annee
br
/
titre
Woman
under
the
influence
˓→
br
/
idreal
=
Annee
br
/
titre
Apartment
The
˓→
br
/
idreal
=
Annee
br
/
titre
Victor
/
Victoria
˓→
br
/
idreal
=
Annee
br
/
titre
Modern
Times
˓→
br
/
idreal
=
Annee
br
/
titre
méprendre
˓→
br
/
idreal
=
Annee
br
/
titre
jour
fêter
˓→
br
/
idreal
=
Annee
br
/
titre
Olvidados
los
˓→
br
/
idreal
=
Annee
br
/
titre
West
Side
Story
˓→
br
/
idreal
=
Annee
br
/
architecture
type
MVC
PHP
problème
Lorsqu
projet
augmenter
besoin
organiser
permettre
plus
réutilisabilité
lisibilité
demander
certain
méthode
MVC
=
modeler
voir
Controleur
pouvoir
être
solution
architecture
type
MVC
PHP
cours|cour
PHP
accélérer
version
intéressant
aller
commencer
familiariser
composant
Framework
MVC
voir
utilité
recourir
tel
outil
introduction
général
sujet
trouver
ici
http
/
/
sym-
dns-remplacer
/
doc
/
current
/
book
/
from_flat_php_to_
dns-remplacer
PHP
pur
template
PHP
considérer
code
suivre
interroger
table
carnet
voir
précemment
depuis
PHP
PDO
php
require
`
`
dns-remplacé
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
connexion
=
new
PDO
dsn
user
PASSWD
}
catch
PDOException
e
{
printf
`
`
Echec
connexion
s\n
e-
getMessage
exit
}
sql
=
select
*
from
carnet
if
connexion-
query
sql
echo
`
`
Pb
acceder
carnet
else
{
foreach
connexion-
query
sql
row
{
echo
row
'
nom
'
br
/
\n
}
}
pouvoir
observer
quelque
défaut
coder
ci-dessus
—
Réutilisabilté
coder
très
réduire
—
fabriquer
formulaire
entrer
carnet
devoir
on
mettre
code
correspondre
template
PHP
pouvoir
améliorer
peu
chose
php
require
`
`
dns-remplacé
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
connexion
=
new
PDO
dsn
user
PASSWD
}
catch
PDOException
e
{
printf
`
`
Echec
connexion
s\n
e-
getMessage
exit
}
sql
=
select
*
from
carnet
if
connexion-
query
sql
echo
`
`
Pb
acceder
carnet
else
{
ami
=
Array
foreach
connexion-
query
sql
row
{
ami
=
row
}
require
`
`
template
/
dns-remplacer
}
template
dns-remplacer
placer
template
/
dns-remplacer
DOCTYPE
html
html
head
title
liste
ami
/
title
/
head
body
h1
List
of
friends
/
h1
ul
php
foreach
ami
ami
li
href
=
/
recherche
nom
=
php
echo
ami
'
ID
'
/
avoir
/
li
php
endforeach
/
ul
/
body
/
html
commencer
ainsi
séparer
présentation
codage
métier
isoler
logique
applicative
php
/
/
dns-remplacer
require
`
`
dns-remplacé
suite
page
suivant
architecture
type
MVC
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
function
connect_db
{
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
connexion
=
new
PDO
dsn
user
PASSWD
}
catch
PDOException
e
{
printf
`
`
Echec
connexion
s\n
e-
getMessage
exit
}
return
connexion
}
/
/
puis
function
get_all_friends
{
connexion
=
connect_db
ami
=
Array
sql
=
select
*
from
carnet
foreach
connexion-
query
sql
row
{
ami
=
row
}
return
ami
}
pouvoir
maintenant
avoir
controleur
très
simple
interroger
modèle
puis
passer
donner
template
affichage
php
/
/
dns-remplacer
require_once
'
dns-remplacer
'
ami
=
get_all_friends
require
'
template
/
dns-remplacer
'
Layout
rester
partie
non
réutilisable
coder
savoir
layout
essayer
remédier
cela
template
/
dns-remplacer
DOCTYPE
html
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
html
head
title
php
echo
title
/
title
/
head
body
php
echo
content
/
body
/
html
héritage
template
php
/
/
template
/
dns-remplacer
title
=
'
liste
ami
'
ob_start
h1
List
ami
/
h1
ul
php
foreach
ami
ami
li
href
=
/
recherche
nom
=
php
echo
ami
'
nom
'
php
echo
ami
'
ville
'
/
avoir
/
li
php
endforeach
/
ul
php
content
=
ob_get_clean
include
'
dns-remplacer
'
observer
utilisation
bufferisation
ob_start
ob_get_clean
dernier
fonction
récupérer
contenir
bufferisé
nettoyer
ensuite
buffer
affichage
détail
personne
aller
ajouter
modèle
fonction
afficher
détail
personne
php
function
get_friend_by_id
id
{
connexion
=
connect_bd
sql
=
select
*
from
carnet
where
ID
=
id
stmt
=
connexion-
prepare
sql
stmt-
bindParam
'
id
'
id
PDO
:
PARAM_INT
stmt-
execute
suite
page
suivant
architecture
type
MVC
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
return
stmt-
fetch
}
pouvoir
maintenant
créer
nouveau
controleur
dns-remplacer
php
/
/
dns-remplacer
require_once
'
dns-remplacer
'
pers
=
get_friend_by_id
_GET
'
id
'
require
'
template
/
dns-remplacer
'
utiliser
template
php
/
/
template
/
dns-remplacé
title
=
pers
'
nom
'
ob_start
h1
details
php
echo
pers
'
PRENOM
'
'
'
.
pers
'
nom
'
/
h1
p
php
echo
'
'
.
pers
'
naissance
'
echo
'
br
/
ville
'
.
pers
'
ville
'
content
=
ob_get_clean
include
'
dns-remplacer
'
pouvoir
tester
entrant
URL
dns-remplacé
paramètre
id
coder
similaire
celui
premier
template
pouvoir
réutiliser
template
base
subsister
plusieurs
problème
—
paramètre
id
fournir
application
aller
provoquer
erreur
—
controleur
principal
regrouper
abord
coder
contrôleur
dns-remplacer
dns-remplacé
fichier
unique
dns-remplacer
php
/
/
dns-remplacer
function
list_action
{
ami
=
get_all_friends
require
'
template
/
dns-remplacer
'
}
function
detail_action
id
{
pers
=
get_friend_by_id
id
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
require
'
template
/
dns-remplacer
'
}
pouvoir
enfin
proposer
controleur
principal
front
Controller
dns-remplacer
php
/
/
dns-remplacer
/
/
charge
modeles
controleurs
require_once
'
dns-remplacer
'
require_once
'
dns-remplacer
'
/
/
gestion
route
urire
=
parse_url
_SERVER
'
REQUEST_URI
'
PHP_URL_PATH
if
'
/
dns-remplacer
'
=
=
uri
{
list_action
}
elseif
'
/
dns-remplacer
/
detail
'
=
=
urire
&
&
isset
_GET
'
id
'
{
detail_action
_GET
'
id
'
}
else
{
header
'
status
Not
Found
'
echo
'
html
body
h1
pager
Not
Found
/
h1
/
body
/
html
'
}
maintenant
structure
typer
dns-remplacer
dns-remplacer
dns-remplacer
dns-remplacer
dns-remplacer
template
dns-remplacer
dns-remplacer
pouvoir
améliorer
tout
cela
intégrant
objet
tout
modeler
voir
github
/
roza
/
php-basic-mvc
https
/
/
dns-remplacer
/
roza
/
php-basic-mvc
/
coder
complet
système
routage
encore
très
incomplet
aller
plutôt
utliser
continuer
outil
framework
Web
référencer
Symfony
Template
Twig
PHP
installation
Twig
faire
grâce
outil
composer
Template
Twig
PHP
cours|cour
PHP
accélérer
version
composer
installer
abord
outil
composer
servir
beaucoup
tâche
courant
projet
PHP
aller
abord
créer
répertoire
bin
raciner
home
placer
y
exécutable
dns-remplacé
renommer
composer
cd
mkdir
bin
cd
bin
curl
-s
https
/
/
dns-remplacer
/
installer
|
php
mv
dns-remplacer
composer
vérifier
définition
variable
environnement
http_proxy
https_proxy
.bashrc
ajouter
également
ligne
suivant
.bashrc
export
PATH
=
PATH
~
/
bin
manière
tout
programme
installer
répertoire
bin
home
accessible
importer
installation
installer
Twig
.
.
code-block
none
composer
require
twig
/
twig
~
ceci
créer
répertoire
courir
dossier
vendor
contenir
librairie
demander
définir
abord
template
baser
dns-remplacer
DOCTYPE
html
html
lang
=
fr
head
{
block
head
}
meta
charset
=
utf-8
link
rel
=
stylesheet
href
=
dns-remplacer
/
title
{
block
title
}
{
endblock
}
/
title
{
endblock
}
/
head
body
section
id
=
content
{
block
content
}
{
endblock
}
/
section
footer
id
=
footer
{
block
footer
}
&
copy
copyright
href
=
http
/
/
dns-remplacer
super
site
/
avoir
{
endblock
}
/
footer
/
body
/
html
chapitre
table
matière
cours|cour
PHP
accélérer
version
puis
template
plus
spécialiser
hériter
dns-remplacer
{
extends
`
`
dns-remplacer
}
{
block
title
}
menu
semaine
{
endblock
}
{
block
head
}
{
{
parent
}
}
style
typer
=
text
/
css
.important
{
color
#
}
/
style
{
endblock
}
{
block
content
}
h1
menu
/
h1
p
class
=
importer
voici
menu
semaine
dl
dt
lundi
/
dt
dd
{
{
lundi
}
}
/
dd
dt
mardi
/
dt
dd
{
{
mardi
}
}
/
dd
dt
mercredi
/
dt
dd
{
{
mercredi
}
}
/
dd
dt
jeudi
/
dt
dd
{
{
jeudi
}
}
/
dd
/
dl
/
p
{
endblock
}
enfin
utiliser
template
fichier
dns-remplacé
charger
abord
”
autoloader
php
/
/
inclure
le
autoloader
include
'
vendor
/
dns-remplacer
'
try
{
/
/
définir
dossier
trouver
template
loader
=
new
Twig_Loader_Filesystem
'
template
'
/
/
initialiser
le
environement
Twig
twig
=
new
Twig_Environment
loader
/
/
charger
template
template
=
twig-
loadTemplat
'
dns-remplacer
'
/
/
affecter
variable
template
appeller
rendre
echo
template-
render
array
'
lundi
'
=
'
steak
frit
'
'
mardi
'
=
'
Raviolis
'
'
mercredi
'
=
'
pot
feu
'
'
jeudi
'
=
'
couscous
'
'
vendredi
'
=
'
Poisson
'
}
catch
exception
e
{
die
'
ERROR
'
e-
getMessage
suite
page
suivant
Template
Twig
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
}
affichage
personne
carnet
afficher
présent
personne
carnet
aider
template
Twig
réutiliser
fichier
dns-remplacer
voir
précédemment
php
/
/
dns-remplacer
class
carnet
{
private
static
connexion
function
__construct
{
dsn
=
mysql
dbname
=
.BASE
`
`
host
=
.SERVER
try
{
self
connexion
=
new
PDO
dsn
user
PASSWD
}
catch
PDOException
e
{
printf
`
`
échec
connexion
s\n
e-
˓→getMessage
this-
connexion
=
NULL
}
}
/
*
*
Récupére
lister
contact
sous
forme
de
un
tableau
*
/
function
get_all_friends
{
sql
=
select
*
from
carnet
dater
=
self
connexion-
query
sql
return
dater
}
/
*
*
ajouter
contact
tabler
carnet
*
/
function
add_friend
dater
{
sql
=
`
`
insert
INTO
carnet
nom
PRENOM
naissance
ville
˓→values
stmt
=
self
connexion-
prepare
sql
return
stmt-
execute
array
dater
'
nom
'
dater
'
prenom
'
dater
'
naissance
'
dater
'
ville
'
}
/
*
*
Récupére
contact
partir
ID
*
/
function
get_friend_by_id
id
{
sql
=
select
*
from
carnet
where
ID
=
id
stmt
=
self
connexion-
prepare
sql
stmt-
bindParam
'
id
'
id
PDO
:
PARAM_INT
stmt-
execute
return
stmt-
fetch
PDO
:
FETCH_OBJ
}
php
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
/
/
fichier
dns-remplacé
include
'
vendor
/
dns-remplacer
'
/
/
inclure
modele
include
'
dns-remplacer
'
/
/
instancie
carnet
car
=
new
carnet
try
{
/
/
indiquer
dossier
trouver
template
loader
=
new
Twig_Loader_Filesystem
'
template
'
/
/
initialiser
le
environement
Twig
twig
=
new
Twig_Environment
loader
/
/
récupérer
donner
depuis
base
ami
=
car-
get_all_friends
/
/
charger
template
template
=
twig-
loadTemplat
'
dns-remplacer
'
titre
=
lister
membre
carnet
trier
ville
echo
template-
render
array
'
titre
'
=
titre
'
ami
'
=
ami
}
catch
exception
e
{
die
'
ERROR
'
e-
getMessage
}
template
dns-remplacer
{
extends
`
`
dns-remplacer
}
{
block
title
}
personne
carnet
{
endblock
}
{
block
head
}
{
{
parent
}
}
style
typer
=
text
/
css
.important
{
color
#
}
/
style
{
endblock
}
{
block
content
}
p
align
=
center
class
=
Style1
{
{
titre
}
}
/
p
tabler
border
=
align
=
center
cellspacing
=
cellpadding
=
tr
bgcolor
=
#
CA9999
td
width
=
strong
numero
/
strong
/
td
td
width
=
strong
nom
/
strong
/
td
td
width
=
strong
Prenom
/
strong
/
td
td
width
=
strong
age
/
strong
/
td
suite
page
suivant
Template
Twig
PHP
cours|cour
PHP
accélérer
version
suite
page
précédent
td
width
=
strong
ville
/
strong
/
td
/
tr
{
set
i
=
}
{
for
ami
in
ami
}
{
set
i
=
i@card@
}
{
if
i
is
odd
}
tr
bgcolor
=
#
F0F0F0
{
else
}
tr
bgcolor
=
#
A6A6A6
{
endif
}
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
/
tr
{
endfor
}
/
table
{
endblock
}
template
peu
maladroit
montrer
expressivité
langage
template
Twig
boucler
conditionnel
calcul
variable
etc
pouvoir
bien
sûr
proposer
plus
simple
CSS
adéquat
affichage
personne
template
plus
simple
dns-remplacer
{
extends
`
`
dns-remplacer
}
{
block
title
}
personne
carnet
{
endblock
}
{
block
head
}
{
{
parent
}
}
link
rel
=
stylesheet
href
=
static
/
css
/
dns-remplacer
/
{
endblock
}
{
block
content
}
h@card@
{
{
titre
}
}
/
h2
table
id
=
joli
class
=
centre
tr
td
numero
/
td
td
nom
/
td
td
Prenom
/
td
td
age
/
td
td
ville
/
td
/
tr
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
{
for
ami
in
ami
}
tr
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
td
{
{
dns-remplacer
}
}
/
td
/
tr
{
endfor
}
/
table
{
endblock
}
style
aller
bien
tableau
pouvoir
ainsi
compléter
développement
MVC
effectuer
précédemment
utiliser
template
Twig
voir
github
/
roza
/
php-basic-mvc
https
/
/
dns-remplacer
/
roza
/
php-basic-mvc
/
coder
plus
complet
système
routage
employer
encore
très
rudimentaire
aller
plutôt
utliser
outil
framework
Web
référencer
Symfony
aller
plus
loin
composer
Symfony
Flex
aller
présent
familiariser
outil
composant
Framework
réfé-
rence
Symfony
très
modulaire
permettre
installer
composant
très
riche
comme
SwiftMailer
envoyer
mail
FOSUserBundle
gérer
utilisateur
FOSREST-Bundle
APIPlatform
réaliser
rapidement
api
complet
Framework
Symfony
baser
Micro-noyau
Micro-Kernel
plus
léger
noyau
Symfony
introduction
général
framework
trouver
ici
https
/
/
dns-remplacer
/
gestion
dépendance
faire
présent
grâce
outil
Symfony
Flex
permettre
établir
recette
recipes
décrire
dépendance
configuration
projet
outil
baser
composer
indication
composer
permettre
installer
centaine
package
librement
disponible
trouver
Packagist
https
/
/
dns-remplacer
/
permettre
gérer
dépendance
projet
également
créer
squellette
application
Symfony
composer
installer
abord
outil
composer
servir
beaucoup
tâche
courant
projet
PHP
aller
abord
créer
répertoire
bin
raciner
home
placer
y
exécutable
dns-remplacé
renommer
composer
composer
Symfony
Flex
cours|cour
PHP
accélérer
version
cd
mkdir
bin
cd
bin
curl
-s
https
/
/
dns-remplacer
/
installer
|
php
mv
dns-remplacer
composer
vérifier
définition
variable
environnement
http_proxy
https_proxy
.bashrc
ajouter
également
ligne
suivant
.bashrc
export
PATH
=
PATH
~
/
bin
manière
tout
programme
installer
répertoire
bin
home
accessible
importer
vouloir
juste
installer
composant
simple
comme
HTTP
Foundation
placer
racine
dossier
travail
fichier
*
dns-remplacer
suivant
{
require
{
symfony
/
http-foundation
`
`
~
}
}
ceci
indique
installer
instant
seul
composer
demander
dernier
version
stable
brancher
http-foundation
puis
utiliser
composer
installer
composant
demander
composer
update
-o
noter
utilisation
option
-o
optimize-autoloader
optimiser
mieux
chargement
automatique
classe
HttpFoundation
principal
composant
HttpFoundation
savoir
Request
Response
alors
prêt
emploi
remarquer
usage
espace
nommage
PHP
semblable
celui
C++
import
package
java
éviter
conflit
nommage
entre
différent
vendor
dire
différent
entité
fournir
code
projet
php
/
/
chargement
autoloader
require_once
__DIR__
'
vendor
/
dns-remplacer
'
user
Symfony\Component\HttpFoundation\Request
user
Symfony\Component\HttpFoundation\Response
/
/
Actual
request
/
/
request
=
Request
:
createFromGlobals
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
page
précédent
/
/
fake
request
request
=
Request
:
create
'
/
dns-remplacé
name
=
zozo
'
/
/
URI
demandee
sans
parametres
path
=
request-
getPathInfo
/
/
recup
GET
variable
nom
=
request-
query-
get
'
name
'
'
World
'
prenom
=
request-
query-
get
'
surname
'
'
Joe
'
echo
`
`
bonjour
surname
name
br
/
pouvoir
aussi
récupérer
autre
information
client
fabriquer
réponse
php
/
/
recup
variable
SERVER
host
=
request-
server-
get
'
HTTP_HOST
'
/
/
get
COOKIES
request-
cookies-
get
'
PHPSESSID
'
/
/
HTTP
headers
headers
=
request-
headers-
get
'
host
'
content_type
=
request-
headers-
get
'
content_type
'
method
=
request-
getMethod
/
/
GET
POST
pouvoir
DELETE
HEAD
langs
=
request-
getLanguages
IP
=
=
request-
getClientIp
response
=
new
Response
IP
`
`
host
`
`
path
`
`
headers
`
`
content_type
`
`
method
`
`
nom
`
`
langs
response-
send
Squellette
application
Symfony
créer
répertoire
travail
mvc-sf4
dossier
Web
exemple
~
/
www
~
/
pu-blic_html
utiliser
user_dir
apache
importer
utiliser
serveur
Web
embar-qué
PHP
créer
trame
application
symfony4
aider
composer
composer
create-project
symfony
/
skeleton
hello-sf4
veiller
bien
avoir
version
jour
composer
besoin
composer
self-update
structurer
projet
ainsi
créer
suivant
composer
Symfony
Flex
cours|cour
PHP
accélérer
version
hello-sf4
/
bin
consoler
dns-remplacer
dns-remplacer
config
dns-remplacer
package
dns-remplacer
dns-remplacé
public
dns-remplacer
src
Controller
dns-remplacer
dns-remplacer
var
cacher
log
vendor
dns-remplacer
composer
psr
symfony
répertoire
bin
contenir
outil
console
permettre
effectuer
tâche
routiner
créer
gérer
projet
répertoire
config
contenir
fichier
configuration
répertoire
public
contenir
fichier
index
application
dossie
src
controleurs
Kernel
aussi
entité
etc
dossier
var
contenir
cache
logs
dossier
vendor
classe
Bundles
installer
comme
http-foundation
pouvoir
consulter
fichier
dns-remplacer
trouver
racine
dossier
hello-sf4
voir
liste
dépendance
installer
{
psr
/
cache
{
version
`
`
}
psr
/
container
{
version
`
`
}
psr
/
log
{
version
`
`
}
psr
/
simple-cache
{
version
`
`
}
symfony
/
cache
{
version
`
`
v@card@
}
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
symfony
/
config
{
version
`
`
v@card@
}
symfony
/
console
{
version
`
`
recipe
{
repo
`
`
dns-remplacer
/
symfony
/
recipes
branch
`
`
master
version
`
`
ref
`
`
e3868d2f4a5104f19f844fe551099a00c@card@
}
}
symfony
/
debug
{
version
`
`
v@card@
}
symfony
/
dependency-injection
{
version
`
`
v@card@
}
symfony
/
dotenv
{
version
`
`
v@card@
}
symfony
/
event-dispatcher
{
version
`
`
v@card@
}
symfony
/
filesystem
{
version
`
`
v@card@
}
symfony
/
finder
{
version
`
`
v@card@
}
symfony
/
flex
{
version
`
`
recipe
{
repo
`
`
dns-remplacer
/
symfony
/
recipes
branch
`
`
master
version
`
`
ref
`
`
cc1afd81841db36fbef982fe56b48ade6716fac4
}
}
symfony
/
framework-bundle
{
version
`
`
recipe
{
repo
`
`
dns-remplacer
/
symfony
/
recipes
branch
`
`
master
version
`
`
ref
`
`
c0c0bf94174609d740ca2a61e0201949c5683d50
}
}
symfony
/
http-foundation
{
suite
page
suivant
composer
Symfony
Flex
cours|cour
PHP
accélérer
version
suite
pager
précédent
version
`
`
v@card@
}
symfony
/
http-kernel
{
version
`
`
v@card@
}
symfony
/
lts
{
version
`
`
4-dev
}
symfony
/
polyfill-mbstring
{
version
`
`
v@card@
}
symfony
/
routing
{
version
`
`
recipe
{
repo
`
`
dns-remplacer
/
symfony
/
recipes
branch
`
`
master
version
`
`
ref
`
`
cda8b550123383d25827705d05a42acf6819fe4e
}
}
symfony
/
yaml
{
version
`
`
v@card@
}
}
application
simple
Symfony
compléter
présent
application
Symfony
tester
application
PHP
-
TDD
aller
présent
attaquer
problématique
fondamental
tout
application
Web
mobile
autre
test
TDD
TDD
vouloir
dire
test
Driven
Development
dire
développement
diriger
test
démarcher
mettre
avant
méthodologie
agile
consister
général
application
point
suivant
—
écrire
test
—
vérifier
échouer
car
code
tester
exister
—
écrire
juste
code
suffire
passer
test
—
vérifier
test
passer
chapitre
table
matière
cours|cour
PHP
accélérer
version
—
procéder
refactoring
coder
est-à-dire
améliorer
garder
même
fonctionnalité
intérêt
démarcher
avantage
principal
démarche
—
préciser
mieux
spécification
coder
api
envisager
—
ceci
obliger
faire
choix
conception
rester
parfois
trop
flou
début
développement
—
plus
tard
disposer
large
base
test
riche
application
car
permettre
vérifier
tout
moment
test
installer
mettre
défaut
nouveau
développement
refactoring
coder
tout
langage
programmation
disposer
Frameworks
test
exemple
java
offrir
JUnit
PHP
quand
proposer
PHPUnit
pouvoir
installer
via
composer
{
require
{
phpunir
/
phpunir
`
`
*
}
autoload
{
psr-0
{
exemple
`
`
src
}
}
}
dns-remplacer
install
Ecrivons
présent
premier
test
dossier
test
php
user
Exemple\FileLoader
class
FileLoaderTest
extends
PHPUnit_Framework_TestCase
{
public
function
testFileLoaderClassCanBeCreated
{
f
=
new
FileLoader
}
}
tester
placer
fichier
dns-remplacer
raciner
projet
contenir
xml
version
=
encoding
=
UTF-8
suite
page
suivant
tester
application
PHP
-
TDD
cours|cour
PHP
accélérer
version
suite
page
précédent
PHPUnit
configuration
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
=
fichier
configuration
standard
phpunir
phpunit
backupGlobals
=
false
backupStaticAttribute
=
false
colors
=
true
bootstrap
=
vendor
/
dns-remplacé
convertErrorsToExceptions
=
true
convertNoticesToExceptions
=
true
convertWarningsToExceptions
=
true
processIsolation
=
false
stopOnFailure
=
false
syntaxCheck
=
false
testsuite
testsuite
directory
test
/
directory
/
testsuite
/
testsuite
/
phpunit
prêt
lancer
premier
test
phpunir
Ecriver
maintenant
peu
coder
permettre
passer
premier
test
aller
compléter
test
vérification
fichier
situer
textit
{
fixtures
}
test
bien
charger
php
class
FileLoaderTest
extends
PHPUnit_Framework_TestCase
{
public
function
testFileLoaderClassCanBeCreated
{
f
=
new
FileLoader
}
/
*
*
*
vouloir
récupérer
contenir
de
un
fichier
via
*
méthode
get
*
/
public
function
testFileLoaderCanLoadFileContent
{
f
=
new
FileLoader
r
=
f-
get
__DIR__
'
/
fixtures
/
dns-remplacer
'
this-
assertEquals
`
`
Foo\n
r
}
}
chapitre
table
matière
cours|cour
PHP
accélérer
version
puis
besoin
Mock
Objects
installer
librairie
mockery
composer
require
dev
mockery
/
mockery
mettre
place
Web
service
REST
problème
architecturer
REST
classique
serveur
présenter
donner
table
client
riche
ria
JavaScript
client
mobile
permettre
récupérer
afficher
REST
signifier
Representational
State
Transfer
architecturer
permettre
réaliser
application
typer
onepage
reporter
client
bon
partie
logique
métier
offrir
point
entrer
client
lire
donner
serveur
envoyer
donnée
pouvoir
être
envoyer
XML
plus
plus
aujourd
hui
JSON
JavaScript
Object
notation
dire
objet
directement
utilisable
JS
poser
définition
suivant
—
ria
=
Rich
Internet
application
—
REST
=
Representational
State
Transform
—
logique
métier
déporter
vers
client
—
tâcher
principal
serveur
offrir
service
récupération
stockage
donner
flux
news
pouvoir
ainsi
offrir
exemple
ressourcer
type
/
api
/
v1
/
news
/
permettre
client
récupérer
news
numéro
JSON
XML
employer
méthode
HTTP
GET
version
api
exemple
news
ici
ressourcer
élément
manipuler
api
version
méthode
GET
employer
récupérer
élément
individuellement
collecter
méthode
POST
quand
employer
envoyer
vers
serveur
plusieurs
élé-
ments
autre
méthode
HTTP
créer
modifier
complètement
pouvoir
partiellement
patch
élément
effacer
DELETE
souvent
également
disponible
api
technologie
concurrent
REST
XML-RPC
SOAP
Microsoft
REST
façon
moderne
concevoir
genre
service
posséder
avantage
suivant
—
bon
monter
charge
serveur
—
simplicité
serveur
retour
source
protocole
HTTP
—
Equilibrage
charger
—
serveur
offrir
api
—
service
représenter
URL
simplicité
bon
gestion
cacher
—
possibilité
décomposer
service
complexe
multiple
service
plus
simple
communiquer
entre
principe
REST
théoriser
Roy
Fielding
thèse
http
/
/
dns-remplacer
/
~
fielding
/
pub
/
dissertation
/
rest_arch_
dns-remplacer
séparation
clair
entre
client
serveur
mettre
place
Web
service
REST
cours|cour
PHP
accélérer
version
client
contenir
logique
métier
serveur
sans
Etat
réponse
serveur
pouvoir
non
être
mettre
cache
interface
devoir
être
simple
bien
définir
standardiser
système
pouvoir
avoir
plusieurs
couche
comme
proxys
système
cacher
etc
Eventuellement
client
pouvoir
télecharger
code
serveur
exécuter
contexte
client
mémoire
api
REST
pouvoir
offrir
méthode
suivant
méthode
HTTP
REST
méthode
rôle
coder
retour
HTTP
GET
URL
récupération
Element
GET
URL
récupération
collection
POST
URL
envoi
Elements
DELETE
URL
effacer
Element
pouvoir
URL
modifier
Element
patch
URL
Modif
partiel
Elt
pouvoir
aussi
avoir
erreur
comme
coder
erreur
description
signification
Bad
Request
requêter
mal
former
Not
Found
Resource
demander
inexistant
Unauthorized
authentification
necessaire
accéder
resource
Method
Not
Allowed
méthode
interdire
resource
Conflict
exemple
pouvoir
créer
ressource
fois
Internal
Server
Error
autre
erreur
serveur
ailleurs
serveur
REST
maintenir
état
requêter
indépendant
un
autre
retour
fondamental
protocole
HTTP
doter
beaucoup
capacité
mémorisation
logique
ergonomie
application
gérer
côté
client
méthode
aujourd
hui
plebisciter
faire
dialoguer
client
mobile
Web
serveur
exemple
service
REST
PHP
problème
aller
réaliser
PHP
implémentation
service
REST
exposer
donner
table
contact
appeller
carnet
utiliser
autre
exemple
chapitre
table
matière
cours|cour
PHP
accélérer
version
contact
ainsi
ainsi
accessible
route
type
/
api
/
v1
/
contact
/
permettre
client
récupérer
contact
JSON
employer
méthode
HTTP
GET
version
api
exemple
contact
constituer
ressourcer
manipuler
api
méthode
GET
employer
récupérer
élément
individuellement
collecter
méthode
action
réaliser
URI
GET
Récup
tout
lien
/
api
/
v1
/
GET
Récuperation
Element
/
api
/
v1
/
contact
/
{
id
}
GET
récupération
collection
/
api
/
v1
/
contact
POST
Creation
Elements
/
api
/
v1
/
contact
DELETE
effacer
Element
/
api
/
v1
/
contact
/
{
id
}
pouvoir
modifier
Element
/
api
/
v1
/
contact
/
{
id
}
patch
Modif
partiel
Elt
/
api
/
v1
/
contact
/
{
id
}
route
/
api
/
v1
/
GET
renvoyer
liste
URLs
contact
plutôt
lister
tout
contact
tout
leur
détail
ceci
permettre
avoir
serveur
REST
auto-documenter
récupération
premier
URL
permettre
suivant
obtenir
liste
ressourcer
présent
service
leur
URLs
respectif
pouvoir
également
paginer
réponse
manipuler
trop
donner
simultané-
mentir
assurer
routage
simplement
aller
continuer
silex
http
/
/
dns-remplacer
/
pouvoir
modifier
fichier
dns-remplacer
déjà
mettre
place
comme
suivre
php
require_once
__DIR__
'
/
vendor
/
dns-remplacer
'
require_once
'
dns-remplacer
'
app
=
new
Silex\Application
app
'
debug
'
=
true
app-
get
'
/
contact
'
function
{
content
=
'
ul
'
ami
=
get_all_friends
foreach
ami
ami
{
content
.
=
'
li
'
.
ami
'
nom
'
'
/
li
'
}
content
.
=
'
/
ul
'
return
content
}
app-
get
'
/
api
/
'
function
{
ami
=
get_all_friends_links
return
json_encode
ami
}
app-
get
'
/
api
/
contact
'
function
{
suite
page
suivant
exemple
service
REST
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
ami
=
get_all_friends
return
json_encode
ami
}
nouveau
méthode
dns-remplacer
php
function
get_all_friends_links
{
connexion
=
connect_db
ami
=
Array
sql
=
select
*
from
carnet
dater
=
connexion-
query
sql
while
pers
=
data-
fetch
PDO
:
FETCH_ASSOC
{
res
=
Array
res
'
nom
'
=
pers
'
nom
'
res
'
URL
'
=
_SERVER
`
`
REQUEST_SCHEME
'
/
/
'
_SERVER
'
HTTP_HOST
'
_SERVER
'
CONTEXT_PREFIX
'
'
/
silex
/
api
/
contact
/
'
.
pers
'
ID
'
ami
=
res
}
return
ami
}
indication
voir
base
api
renvoyer
maintenant
liste
lien
contact
quelqu
connecter
pouvoir
décrouvrir
autre
URLs
gérer
api
bon
api
REST
devoir
être
autodocumenter
mesure
possible
puis
assurer
GET
URI
/
api
/
contact
/
id
ajouter
dns-remplacé
php
app-
get
'
/
api
/
contact
/
{
id
}
'
function
id
user
app
{
ami
=
get_friend_by_id
id
if
ami
app-
abort
`
`
contact
inexistant
else
return
json_encode
ami
JSON_PRETTY_PRINT
}
marcher
ajouter
nouveau
méthode
get_friend_by_id
modèle
php
function
get_friend_by_id
id
{
suite
page
suivant
chapitre
table
matière
cours|cour
PHP
accélérer
version
suite
pager
précédent
connexion
=
connect_db
sql
=
select
*
from
carnet
where
ID
=
id
stmt
=
connexion-
prepare
sql
stmt-
bindParam
'
id
'
id
PDO
:
PARAM_INT
stmt-
execute
return
stmt-
fetch
PDO
:
FETCH_OBJ
}
continuer
méthode
http
DELETE
route
ajouter
dns-remplacé
php
app-
delete
'
/
api
/
contact
/
{
id
}
'
function
id
user
app
{
ami
=
get_friend_by_id
id
if
ami
app-
abort
`
`
contact
inexistant
else
{
delete_friend_by_id
id
return
json_encode
ami
JSON_PRETTY_PRINT
}
}
ajouter
modèle
php
function
delete_friend_by_id
id
{
connexion
=
connect_db
sql
=
Delete
from
carnet
where
ID
=
id
stmt
=
connexion-
prepare
sql
stmt-
bindParam
'
id
'
id
PDO
:
PARAM_INT
stmt-
execute
return
stmt-
fetch
PDO
:
FETCH_OBJ
}
enfin
POST
devoir
permettre
envoyer
nouveau
contact
peupler
table
carnet
route
/
api
/
contact
assurer
abord
récupération
contenir
json
sous
forme
tableau
PHP
méthode
before
silex
php
app-
before
function
Request
request
{
if
=
=
=
strpos
request-
headers-
get
'
Content-Type
'
˓→
'
application
/
json
'
{
dater
=
json_decode
request-
getContent
true
request-
request-
replacer
is_array
dater
dater
˓→
array
suite
page
suivant
exemple
service
REST
PHP
cours|cour
PHP
accélérer
version
suite
pager
précédent
}
}
puis
méthode
post
proprement
dit
php
app-
post
'
/
api
/
contact
'
function
Request
request
user
˓→
app
{
dater
=
request-
request-
all
add_friends
dater
return
new
Response
json_encode
dater
array
'
Content-
˓→Type
'
=
'
application
/
json
'
}
oublier
faire
appel
objet
Request
Response
début
fichier
dns-remplacer
php
user
Symfony\Component\HttpFoundation\Request
user
Symfony\Component\HttpFoundation\Response
rester
plus
ajouter
modèle
php
function
add_friends
dater
{
connexion
=
connect_db
sql
=
insert
INTO
carnet
nom
PRENOM
naissance
ville
valoir
˓→
stmt
=
connexion-
prepare
sql
return
stmt-
execute
array
dater
'
nom
'
dater
'
PRENOM
'
˓→
dater
'
naissance
'
dater
'
ville
'
}
plus
implémenter
pouvoir
surtout
tester
tester
api
REST
navigateur
curl
tester
api
pouvoir
premier
temps
utiliser
extension
Postman
chromer
extension
RESTClient
Firefox
chapitre
table
matière
cours|cour
PHP
accélérer
version
avertissement
attention
bien
désactiver
proxys
navigateur
vouloir
utiliser
extension
chrome
pouvoir
lancer
ligne
commander
option
–
no-proxy-server
vouloir
solution
ligner
commande
curl
permettre
manipuler
différent
mé-
thodes
HTTP
syntaxe
idéal
pouvoir
tester
tout
méthode
HTTP
avertissement
déclarer
variable
environnement
http_proxy
https_proxy
valoir
mieux
désactiver
curl
essayer
passer
proxy
problématique
certain
requête
curl
unset
http_proxy
unset
https_proxy
tester
GET
curl
-i
http
/
/
localhost
/
silex
/
api
/
v1
/
contact
/
utiliser
moduler
user_dir
apache
curl
-i
http
/
/
localhost
/
~
login
/
silex
/
api
/
v1
/
contact
/
avertissement
attention
cas
utiliser
user_dir
réglage
utiliser
tout
methodes
protocole
HTTP
/
pouvoir
avérer
délicat
notamment
fichier
/
etc
/
apache2
/
mods-available
/
dns-remplacer
devoir
être
modifier
comme
suivre
user_dir
www
syntaxe
apache
IfModule
mod_userdir.c
UserDir
www
UserDir
disabled
root
Directory
/
home
/
*
/
www
AllowOverride
All
opter
MultiViews
indexer
SymLinksIfOwnerMatch
Limit
GET
POST
pouvoir
DELETE
opter
Require
all
granted
/
Limit
LimitExcept
GET
POST
pouvoir
DELETE
opter
Require
all
denied
/
LimitExcept
/
Directory
/
IfModule
tester
api
REST
navigateur
curl
cours|cour
PHP
accélérer
version
falloir
aussi
dossier
sous
voter
user_dir
exemple
~
/
www
/
silex
avoir
.htaccess
suivant
Limit
GET
POST
DELETE
pouvoir
option
allow
from
all
/
Limit
FallbackResource
/
~
roza
/
silex
/
dns-remplacer
RewriteBase
/
~
roza
/
silex
tout
cas
préciser
besoin
dns-remplacer
fichier
équivalent
always_populate_raw_post_data
=
tester
POST
curl
-i
-H
`
`
Content-Type
application
/
json
-X
POST
-d
'
{
`
`
nom
dalton
`
`
PRENOM
joe
`
`
naissance
˓→
ville
Orleans
}
'
http
/
/
localhost
/
silex
/
api
/
contact
test
pouvoir
curl
-i
-H
`
`
Content-Type
application
/
json
-X
pouvoir
-d
'
{
`
`
done
true
}
˓→
'
http
/
/
localhost
/
silex
/
api
/
contact
/
test
DELETE
curl
-i
-H
`
`
Content-Type
application
/
json
-X
`
`
DELETE
http
/
/
localhost
/
silex
/
api
/
contact
/
tester
api
tester
api
Postman
moyen
plus
simple
tester
api
installer
téléchargeant
App
Postman
https
/
/
dns-remplacer
/
apps
os
pouvoir
alors
constituer
collection
requête
HTTP
tester
api
REST
spécifique
chapitre
table
matière
cours|cour
PHP
accélérer
version
tester
api
REST
Guzzle
test
api
REST
curl
peu
lisible
préférer
disposer
batterie
test
PHP
pouvoir
utiliser
librairie
spécialiser
comme
Guzzle
pouvoir
installer
dernier
composer
composer
require
guzzlehttp
/
guzzle
feuille
TD
Lic
pro
Web
mobile
année
—
TD1
—
TD2
—
TD3
feuille
TD
2ème
année
IUT
informatique
année
—
TD1
—
TP1
—
TD2
—
TP2
—
TP3
—
TD3
—
Git
init
feuille
TD
Lic
pro
Web
mobile
année
—
TD1
—
TD2
—
TD3
—
TD4
—
TD5
—
TD6
—
TD7
feuille
TD
Lic
pro
Web
mobile
cours|cour
PHP
accélérer
version
feuille
TD
CVRH
Tours
formation
juin
—
TD1
—
TD2
—
TD3
Alice
démarrer
git
Paramétrage
initialisation
configurer
abord
paramètre
git
config
global
dns-remplacer
`
`
Alice
Torvalds
git
config
global
dns-remplacer
`
`
alice
dns-remplacer
création
dossier
local
versionné
mkdir
monprojet
cd
monprojet
git
init
déja
contenir
git
add
création
dépot
monprojet
gitlab
—
priver
—
public
—
interne
gitlab
Bitbucket
https
/
/
dns-remplacer
/
offrir
également
possibilité
avoir
dépôt
priver
tailler
limiter
Github
https
/
/
dns-remplacer
/
offrir
dépôt
public
faire
payer
dépôt
priver
connexion
entre
local
gitlab
Eventuellement
git
config
dns-remplacé
simple
chapitre
table
matière
cours|cour
PHP
accélérer
version
git
remote
add
origin
https
/
/
dns-remplacer
/
alice
/
dns-remplacé
git
push
-u
origin
master
simplement
git
push
suite
réalisation
fonctionnalité
Alice
—
Alice
prendre
chose
réaliser
implémente
code
nécessaire
—
Alice
faire
test
vérifier
cela
marche
—
git
commettre
-am
message
commettre
Alice
pousser
master
remote
git
push
-u
origin
master
Bob
travailler
Alice
grâce
git
Bob
faire
abord
comme
Alice
paramétrer
initialiser
dépôt
local
Bob
vérifier
bien
remotes
—
sien
origin
créer
besoin
faire
git
remote
add
origin
https
/
/
dns-remplacer
/
bob
/
dns-remplacer
—
celui
Alice
ajouter
git
remote
add
alice
https
/
/
dns-remplacer
/
alice
/
dns-remplacer
—
tape
git
remote
-v
vérifier
remotes
—
trompe
git
remote
remove
alice
Bob
récupérer
master
Alice
git
fetch
Alice
master
Bob
travailler
Alice
grâce
git
cours|cour
PHP
accélérer
version
Bob
consulter
branche
local
correspondre
master
Alice
git
branch
-av
git
checkout
Alice
/
master
puis
vérifier
code
Alice
correct
Bob
revenir
master
git
checkout
master
Bob
merge
travail
Alice
pousser
modifs
dépôt
distant
git
merge
Alice
/
master
git
push
puis
detruit
branche
local
Alice
git
branch
-d
Alice
/
master
Alice
mettre
jour
—
ajouter
remote
Bob
—
fetche
master
Bob
mettre
jour
git
fetch
Bob
master
—
fusionner
git
merge
Bob
/
master
Alice
travailler
branche
git
Alice
devoir
exemple
intégrer
feature
connexion
base
donner
aller
cela
créer
branche
bd
dédier
réalisation
feature
placer
dedans
chapitre
table
matière
cours|cour
PHP
accélérer
version
création
choix
branche
git
checkout
-b
bd
faire
ensuite
travail
tester
puis
git
commettre
-am
`
`
intégration
BD
Alice
pousser
branche
remote
git
push
origin
bd
Bob
brancher
Alice
Bob
récupérer
branche
Alice
git
fetch
Alice
bd
Bob
consulter
branche
Alice
souhaiter
Bob
consulter
liste
branche
disponible
puis
placer
branche
Alice
faire
petit
revue
coder
collaborateur
git
branch
-av
git
checkout
Alice
/
bd
Bob
revenir
branche
master
git
checkout
master
Bob
merge
branche
Alice
pousser
modifs
git
merge
Alice
/
bd
git
push
Bob
brancher
Alice
cours|cour
PHP
accélérer
version
Alice
récupérer
dernier
version
master
Alice
fetche
master
Bob
mettre
jour
git
fetch
Bob
master
git
merge
Bob
/
master
Alice
effacer
branche
bd
git
branch
-d
bd
chapitre
table
matière
chapitrer
GIT
tout
bon
développeur
devoir
aujourd
hui
savoir
utiliser
système
gestion
version
coder
collaborer
Git
aujourd
hui
plus
répandre
trouver
fin
cours|cour
rappel
principal
commande
git
démarrer
GIT
start
quelque
commande
travailler
plusieurs
projet
branche
git
GIT
branche
cours|cour
PHP
accélérer
version
chapitre
GIT
chapitrer
référence
—
Manuel
PHP
http
/
/
dns-remplacer
/
manual
/
fr
/
—
intro
JS
https
/
/
dns-remplacer
/
iut-orleans
/
informatique
/
intra
/
tuto
/
js-
initiation
/
dns-remplacer
#
/
le-langage-javascript
—
complément
JS
https
/
/
dns-remplacer
/
iut-orleans
/
informatique
/
intra
/
tuto
/
js-initiation
/
dns-remplacer
#
/
versions-de-javascript
cours|cour
PHP
accélérer
version
chapitre
référence
chapitrer
index
rechercher
—
genindex
—
search
cours|cour
PHP
accélérer
version
chapitre
index
rechercher
index
Symbols
csrf
=
=
CURL
=
=
=
cvrh
_GET
_GLOBALS
_POST
DataBase
_SERVER
DB
define
DELETE
2eme
année
directive
dirname
Numbers
dom
E
echo
ensemble
array_walk
equals
associatif
ereg
autoload
eregi
autoloader
eval
B
F
baser
filtrage
BD
filtrage
bundles
foreach
formulaire
G
cacher
chaine
génération
clef
GET
collection
gettype
composer
GUMP
concaténation
GUZZLE
constructeur
heure
controleur
Cookies
hidden
cours|cour
PHP
accélérer
version
HTTP
PHPUnit
Http
pile
HttpFoundation
portée
POST
I
PreparedStatement
imbrication
print
include
print_r
include_once
pouvoir
injection
SQL
Q
installation
interpréteur
queue
is_array
R
is_double
is_int
recherche
is_long
request
is_string
require
IUT
require_once
response
REST
Lamp
route
Lerdorf
route
licence
professionnel
sécurité
méthode
sax
magic
quotes
session
Mamp
set
modele
settype
mvc
SimpleXML
MySQL
sort
SQL
Stack
Namespace
string
stristr
O
strlen
objet
strstr
option
suppression
Orleans
symfony
P
pair
tableau
patch
td
PDO
TDD
persistant
template
PHP
test
dns-remplacé
test
PHP5
test
PHP7
time
phpinfo
timestamp
index
cours|cour
PHP
accélérer
version
toString
Tours
transaction
twig
type
U
URL
user-agent
useragent
V
valeur
validation
variable
variable
PHP
vue
W
Wamp
Web
X
Xampp
XML
XMLReader
XMLWriter
z
zend
index
document
Outline
courir
format
epub
cours|cour
format
pdf
table
matière
caractéristique
principal
fonctionnement
historique
installation
PHP
configuration
PHP
exemple
simple
imbrication
coder
HTML
PHP
formulaire
HTML
réponse
PHP
variable
PHP
chaîne
PHP
typage
PHP
quelque
particularité
PHP
tableau
PHP
tableau
prédéfinir
PHP
inclusion
fichier
externe
objet
PHP
collecter
PHP
connexion
baser
donner
depuis
PHP
requêter
préparer
PHP
complément
PDO
-
sécurité
filtrage
PHP
gestion
transaction
PDO
connexion
persistant
PDO
validation
contrôler
entrer
GUMP
Http
conservation
information
client
manipuler
XML
PHP
architecturer
type
MVC
PHP
Templates
Twig
PHP
composer
Symfony
Flex
tester
application
PHP
-
TDD
mettre
place
Web
service
REST
exemple
service
REST
PHP
tester
api
REST
navigateur
curl
tester
api
feuille
TD
Lic
pro
Web
mobile
feuille
TD
2ème
année
IUT
informatique
feuille
TD
Lic
pro
Web
mobile
feuille
TD
CVRH
Tours
Alice
démarrer
git
Bob
travailler
Alice
grâce
git
Alice
mettre
jour
Alice
travailler
branche
git
Bob
brancher
Alice
Alice
récupérer
dernier
version
master
GIT
référence
index
rechercher
index
