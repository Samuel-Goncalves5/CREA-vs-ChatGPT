php
initiation
dominique
gonzalez
université
lille
charles
gaulle
php
initiation
dominique
gonzalez
publié
mercredi
novembre
h
copyright
gonzalez
document
soumis
licence
gnu
fdl
permission
donnée
distribuer
modifier
copies
page
tant
note
apparaît
clairement
table
matières
i
cours
vii
pourquoi
comment
introduction
pourquoi
document
comment
construit
trouver
document
qbullets
généralités
langages
informatiques
appelle
langage
informatique
langage
interprété
langage
compilé
langages
intermédiaires
langages
particuliers
langages
web
pourquoi
programmer
quels
langages
avantages
inconvénients
choisir
faq
élémentaire
php
php
quelle
différence
javascript
pourquoi
choisir
php
lieu
javascript
passe
affichage
page
php
comment
intégrer
php
html
premiers
exemples
php
premier
programme
deuxième
programme
rappels
algorithmique
variables
expressions
fonctions
formulaires
html
présentation
principaux
contrôles
exemples
traitement
formulaire
php
traitement
données
formulaire
php
exercices
chaînes
caractères
chaîne
caractères
choisir
guillemets
apostrophes
principales
utilisations
backslash
principales
opérations
chaînes
principales
fonctions
conversions
types
exercices
tableaux
tableau
quelques
exemples
utilisation
tableaux
associatifs
parcours
tableau
associatif
exercices
pdo
pdo
quelle
utilité
connecter
base
données
exécuter
requête
nombre
lignes
colonnes
requête
select
accéder
résultats
requête
select
gestion
erreurs
programmation
séparée
php
programmation
séparée
fonctions
require
include
iii
identification
php
préliminaires
fonction
header
contrôle
mots
passe
amélioration
plusieurs
utilisateurs
séparer
données
traitement
cacher
mots
passe
crypter
mots
passe
sessions
préambule
application
identification
visiteurs
ii
hors
programme
utiliser
php
base
données
postgresql
connexion
base
exécution
requête
obtention
résultats
requête
exemple
requêtes
autres
select
suppression
message
erreurs
gestion
erreurs
message
peardb
présentation
pear
quelle
utilité
utiliser
peardb
connecter
base
données
gestion
erreurs
exécuter
requête
accéder
résultats
requête
select
setfetchmode
peardb
informations
requêtes
dbx
dbx
quelle
utilité
connecter
base
données
exécuter
requête
nombre
lignes
colonnes
requête
select
accéder
résultats
requête
select
exploration
contenu
répertoire
notions
nécessaires
php
notions
nécessaires
html
exercices
news
présentation
travail
temps
fichiers
manipulations
base
exemple
exercice
iii
corrigés
exercices
premiers
exercices
algorithmique
corrigés
premiers
formulaires
php
corrigés
chaînes
caractères
corrigé
exercices
tableaux
corrigés
exercices
fichiers
corrigés
exploration
répertoire
corrigés
news
corrigé
accueil
liste
noms
fichiers
nouvelles
liste
liens
vers
fichiers
nouvelles
affichage
toutes
nouvelles
affichage
titres
nouvelles
affichage
titres
faisant
lien
vers
nouvelles
affichage
toutes
nouvelles
proprement
iv
choix
sujet
iv
études
cas
études
cas
projet
disques
présentation
base
données
projet
inscriptions
présentation
base
données
projet
teniraq
présentation
base
données
projet
camping
présentation
informations
conserver
traitements
base
données
projet
association
contenu
site
web
conditions
travail
base
données
mld
projet
association
création
tables
base
association
évaluation
dernier
conseil
projet
généalogie
généralités
données
conserver
traitement
données
optimisations
import
export
mcd
projet
généalogie
différentes
tables
différentes
contraintes
projet
brazil
description
tables
entités
tables
relations
contraintes
projet
services
but
projet
fonctionnement
informations
plus
techniques
question
subsidiaire
comment
gérer
historique
base
vocabulaire
utilisé
première
ébauche
structure
structures
tables
création
tables
remplir
tables
paramètres
projet
disques
approche
naïve
analyse
dernières
remarques
autre
analyse
projet
disques
création
tables
travail
index
v
vi
i
cours
chapitre
pourquoi
comment
introduction
page
destinées
personnes
déjà
programmé
agit
absolument
cours
algorithmique
particulier
notions
base
algorithmique
séquence
alternative
itération
supposées
connues
comprises
traitera
ici
traduction
php
notions
abordées
langages
informatiques
particulier
langages
web
répondant
question
pourquoi
programmer
web
notions
classiques
programmation
abordées
sous
angle
php
structures
contrôle
chaînes
caractères
tableaux
etc
particularités
programmation
web
formulaires
traitement
identification
terminerons
mise
relation
page
web
base
données
postgresql
pourquoi
document
page
origine
cours
destiné
étudiants
ème
année
iup
iies
université
lille
iii
charles
gaulle
villeneuve
ascq
années
universitaires
elles
ensuite
peu
peu
remaniées
augmentées
occasion
cours
destiné
étudiants
ème
année
licence
miashs
page
destinées
être
cours
autonome
elles
support
cours
beaucoup
choses
transmises
oral
pendant
cours
écrites
environnement
technique
cours
constitué
machines
sous
linux
installation
logiciels
abordée
fait
partie
contenu
cours
comment
construit
polycopié
rédigé
format
docbook
texte
source
écrit
format
xml
emacs
quanta
respectant
dtd
docbook
code
source
compilé
format
pdf
openjade
format
html
xsltproc
version
devant
yeux
compilée
mercredi
novembre
h
trouver
document
document
disponible
sous
plusieurs
formats
web
seul
document
html
http
grappa
univ
lille
fr
polys
php
php
html
lourd
charger
facile
sauvegarder
imprimer
plusieurs
page
html
http
grappa
univ
lille
fr
polys
php
index
html
plus
faciles
consulter
version
html
sans
feuilles
style
http
grappa
univ
lille
fr
polys
php
book
htm
quelle
idée
tenez
pdf
http
grappa
univ
lille
fr
polys
php
php
pdf
chapitre
pourquoi
comment
qbullets
petites
image
animées
illustrent
liens
version
web
document
proviennent
qbullets
http
www
matterform
com
chapitre
généralités
langages
informatiques
note
document
issu
commentcamarche
net
soumis
licence
gnu
fdl
permission
donnée
distribuer
modifier
copies
page
tant
note
apparaît
clairement
appelle
langage
informatique
appelle
langage
informatique
langage
destiné
décrire
ensemble
actions
consécutives
or
dinateur
doit
exécuter
langages
naturels
anglais
français
représentent
ensemble
façons
groupe
individu
communiquer
langages
servant
ordinateurs
communiquer
rien
voir
langages
informatiques
parle
cas
protocoles
deux
notions
totalement
différentes
langage
informatique
façon
pratique
humains
donner
instructions
ordinateur
langage
informatique
rigoureux
chaque
instruction
correspond
action
processeur
langage
utilisé
processeur
dire
données
telles
elles
arrivent
appelé
langage
machine
agit
suite
binaire
plus
clarté
peut
être
décrit
hexadécimal
toutefois
langage
machine
compréhensible
facilement
humain
moyen
ainsi
plus
pratique
trouver
langage
intermédiaire
compréhensible
homme
ensuite
transformé
langage
machine
être
exploitable
processeur
assembleur
premier
langage
informatique
utilisé
celui
ci
encore
très
proche
langage
machine
permet
déjà
être
plus
compréhensible
toutefois
tel
langage
tellement
proche
langage
machine
dépend
étroitement
type
processeur
utilisé
chaque
type
processeur
peut
avoir
propre
langage
machine
ainsi
programme
développé
machine
pourra
être
porté
autre
type
machine
désigne
portable
programme
peut
être
utilisé
grand
nombre
machines
pouvoir
utiliser
autre
machine
faudra
alors
parfois
réécrire
entièrement
programme
langage
informatique
plusieurs
avantages
plus
facilement
compréhensible
langage
machine
permet
plus
grande
portabilité
dire
plus
grande
facilité
adaptation
machines
types
différents
langages
informatiques
peuvent
grossièrement
classer
deux
catégories
langages
interprétés
langages
compilés
langage
interprété
langage
informatique
définition
différent
langage
machine
faut
traduire
rendre
intelligible
point
vue
processeur
programme
écrit
langage
interprété
besoin
programme
auxiliaire
interpréteur
traduire
fur
mesure
instructions
programme
langage
compilé
programme
écrit
langage
dit
compilé
va
être
traduit
foi
toutes
programme
annexe
compilateur
afin
générer
nouveau
fichier
autonome
dire
plus
besoin
programme
autre
exécuter
dit
ailleurs
fichier
exécutable
programme
écrit
langage
compilé
comme
avantage
plus
avoir
besoin
foi
compilé
programme
annexe
exécuter
plus
traduction
faite
foi
toute
plus
rapide
exécution
toutefois
moins
souple
programme
écrit
langage
interprété
car
chaque
modification
fichier
source
fichier
intelligible
homme
celui
va
être
compilé
faudra
recompiler
programme
modifications
prennent
effet
autre
part
programme
compilé
avantage
garantir
sécurité
code
source
effet
langage
interprété
directement
intelligible
lisible
permet
importe
connaître
secrets
http
www
commentcamarche
net
chapitre
généralités
langages
informatiques
fabrication
programme
copier
code
voire
modifier
risque
non
respect
droits
auteur
autre
part
certaines
applications
sécurisées
nécessitent
confidentialité
code
éviter
piratage
transaction
bancaire
paiement
ligne
communications
sécurisées
etc
langages
intermédiaires
certains
langages
appartiennent
quelque
sorte
deux
catégories
lisp
java
python
etc
car
pro
gramme
écrit
langages
peut
certaines
conditions
subir
phase
compilation
intermédiaire
vers
fichier
écrit
langage
intelligible
différent
fichier
source
non
exé
cutable
nécessité
interpréteur
applets
java
petits
programmes
insérés
parfois
page
web
fichiers
compilés
peut
exécuter
partir
navigateur
internet
fichiers
extension
class
chapitre
langages
particuliers
langages
web
pourquoi
programmer
réponse
générale
impose
obtenir
page
web
dynamiques
attention
parler
page
web
dynamiques
signifie
parle
nécessairement
page
tout
bouge
tous
sens
agit
simplement
page
existence
statique
construites
volée
momment
elles
demandées
serveur
utilité
fait
sentir
quand
doit
écrire
page
doivent
adapter
besoin
heure
accès
base
données
réponse
personnalisée
traitement
formulaire
etc
aussi
faciliter
gestion
site
grande
taille
exemple
séparation
contenu
structure
traitement
présentation
quels
langages
beaucoup
pratiquement
tous
langages
programmation
peuvent
être
utilisés
existe
langages
spécifiques
programmation
web
classes
deux
catégories
exécution
côté
serveur
php
syntaxe
type
asp
serveur
microsoft
jsp
syntaxe
java
cgi
tout
langage
toute
plateforme
etc
exécution
côté
client
javascript
syntaxe
java
applet
java
flash
etc
avantages
inconvénients
exécution
côté
serveur
exécution
côté
client
code
source
visible
obtient
résultat
javascript
code
source
visible
exécution
source
page
jamais
confier
javascript
contrôle
mots
passe
devraient
alors
être
écrits
clair
code
source
page
web
applet
précompilé
non
lisible
rapidité
dépend
vitesse
charge
dépend
vitesse
charge
exécution
serveur
client
compatibilité
totale
client
reçoit
html
problématique
client
doit
posséder
logiciel
capable
exécuter
script
exemple
bonne
version
flash
java
désactivation
impossible
client
contrôle
très
simple
suffit
désactiver
clientt
serveur
logiciel
contrôles
sécurité
parfaits
tout
passe
serveur
inexistants
tout
passe
client
jamais
confier
seul
javascript
contrôle
validité
données
formulaire
quelconque
contrôle
sécurité
choisir
lequel
choisir
bof
ça
dépend
veut
faire
seule
chose
certaine
fonctions
importantes
vitales
affichage
mettant
jeu
sécurité
site
doivent
être
confiées
script
chapitre
langages
particuliers
langages
web
exécute
côté
client
quoi
ça
ressemble
trouverez
quoi
tester
tout
ça
page
fabien
torre
http
grappa
univ
lille
fr
torre
guide
php
id
tpprogweb
chapitre
faq
élémentaire
php
note
suit
extrait
condensé
provenant
deux
sources
faq
php
maintenue
armand
delcros
brief
php
tutorial
php
php
langage
scripting
embarqué
page
html
traité
serveur
php
permet
construire
dynamiquement
page
html
contenant
résultats
calculs
requêtes
sql
adressées
système
gestion
base
données
sgbd
quelle
différence
javascript
javascript
aussi
effet
intégré
page
html
javascript
intéprété
client
web
alors
php
directement
interprété
serveur
web
inclus
comme
module
serveur
web
client
web
recoit
directement
html
voit
jamais
apparaître
code
php
pourquoi
choisir
php
lieu
javascript
choisir
entre
php
javascript
réalité
utilisation
différente
javascript
très
bien
adapté
aspect
présentation
manipulation
client
web
php
adapté
création
page
html
dynamique
rapide
php
permet
faire
page
html
dynamiques
sens
deux
appels
consécutifs
url
peuvent
donner
deux
page
html
différentes
chacune
page
statique
peut
dire
niveau
serveur
page
dynamique
alors
apparait
comme
statique
niveau
client
web
javascript
permet
générer
page
dynamique
client
web
principales
différences
entre
deux
outils
développement
passe
affichage
page
php
interpréteur
intégré
fonctionne
manière
suivante
lorsque
serveur
http
reconnait
fichier
comme
intégrant
code
php
parcourt
avant
expédier
client
rencontre
instruction
php
transmet
interpréteur
interpréteur
exécute
instruction
transmet
éventuellement
sorties
serveur
celui
ci
redirige
sorties
vers
client
importe
signaler
programmes
php
transmis
client
exécutés
serveur
poste
client
fera
différence
entre
page
statiques
celles
générées
dynamiquement
lieu
configurer
spécialement
navigateurs
supporter
php
comment
intégrer
php
html
serveur
http
reconnaisse
code
php
faut
nom
document
html
termine
suffixe
php
non
html
http
perso
cybercable
fr
adelcros
docs
php
php
html
http
www
linux
france
org
article
devl
php
tut
php
tut
html
chapitre
faq
élémentaire
php
code
php
délimité
balises
php
bien
possibilités
langage
php
étendues
suffit
connaissance
élémentaire
langage
réaliser
applications
web
courantes
langage
dispose
bibliothèque
fonctions
très
étendue
fournit
particulier
interface
principaux
systèmes
gestion
base
données
système
gestion
fichier
serveur
reportera
documentation
langage
description
fonctions
http
php
net
chapitre
premiers
exemples
php
corrigés
exercices
chapitre
trouvent
chapitre
premier
programme
html
body
php
echo
hello
world
body
html
remarque
echo
sert
produire
affichage
remarque
echo
affiche
texte
tel
quel
texte
doit
être
entouré
guillemets
sinon
echo
essaie
comprendre
exemple
echo
provoque
affichage
tandis
echo
provoque
affichage
voir
résultat
produit
helloworld
php
allant
voir
code
source
page
produite
navigateur
verrez
cela
html
body
hello
world
body
html
normal
souvenez
serveur
exécute
programme
envoie
client
résultat
programme
deuxième
programme
html
body
php
phpinfo
body
html
remarque
obtenez
tous
renseignements
possibles
version
php
installée
machine
remarque
phpinfo
fonction
seule
instruction
permet
php
effectuer
beaucoup
choses
verrons
plus
tard
comment
écrire
propres
fonctions
reconnait
fonction
parenthèses
suivent
voir
résultat
produit
phpinfo
php
http
grappa
univ
lille
fr
polys
php
exemples
helloworld
php
http
grappa
univ
lille
fr
polys
php
exemples
phpinfo
php
chapitre
premiers
exemples
php
rappels
algorithmique
structure
base
programme
séquence
instructions
exécutées
unes
après
autres
ordre
elles
écrites
intructions
toujours
terminées
point
virgule
séparateur
instructions
existe
structures
permettent
rompre
séquence
trouverez
ci
dessous
princi
pales
autres
alternative
test
exécuté
selon
résultat
oui
non
partie
programme
autre
exécutée
syntaxe
php
if
test
instructions
exécuter
quand
réponse
oui
else
instructions
exécuter
quand
réponse
non
itération
tant
partie
programme
exécutée
tant
résultat
test
oui
calcul
fait
avant
chaque
entrée
boucle
syntaxe
php
while
test
instructions
exécuter
tant
réponse
oui
boucle
cas
particulier
boucle
tant
forme
générale
for
avant
entrer
test
action
fin
boucle
instructions
exécuter
quand
rréponse
test
oui
avant
entrer
action
fin
boucle
actions
quelconques
forme
totalement
équivalente
celle
ci
avant
entrer
while
test
instructions
exécuter
quand
réponse
test
oui
action
fin
boucle
utilisera
plus
souvent
sous
forme
for
initialiser
compteur
test
compteur
incrémenter
compteur
instructions
exécuter
quand
réponse
test
oui
comme
exemple
suivant
provoque
affichage
for
i
i
i
i
echo
çi
variables
expressions
noms
variables
préfixés
nécessaire
déclarer
variables
avant
utiliser
contrôle
types
plutôt
souple
affectation
notée
opérateurs
classiques
nombres
disponibles
p
addition
soustraction
multiplication
division
seul
opérateur
chaînes
concaténation
symbolisée
point
http
fr
php
net
manual
fr
language
control
structures
php
control
structures
if
http
fr
php
net
manual
fr
control
structures
while
php
http
fr
php
net
manual
fr
control
structures
for
php
chapitre
premiers
exemples
php
opérateurs
comparaison
aussi
presque
tous
classiques
inférieur
çù
inférieur
égal
supérieur
çù
supérieur
égal
çù
égal
différent
opérateurs
logiques
base
çù
fonctions
fonction
sans
paramètres
définit
function
nom
fonction
corps
fonction
fonction
paramètres
définit
function
nom
fonction
paramètres
corps
fonction
paramètres
toujours
passés
valeur
résultat
fonction
valeur
trouve
derrière
première
instruction
return
rencontrée
exemple
return
procédures
voulez
fonctions
comporte
comme
procédure
suffit
faire
renvoyer
aucune
valeur
exemple
return
exercices
suivent
ferez
sorte
résultats
présentés
proprement
laisse
libre
choix
sens
exact
mot
écrire
programme
php
affiche
tous
nombres
impairs
entre
ordre
croissant
exemple
impair
php
écrire
programme
écrit
foi
dois
faire
sauvegardes
régulières
fichiers
exemple
punition
php
écrire
programme
affiche
table
multiplication
exemple
multiplication
php
mieux
multiplicationbis
php
écrire
programme
calcule
exemple
factorielle
php
écrire
programme
affiche
exemple
lignes
php
écrire
programme
affiche
table
multiplication
totale
exemple
multiplicationtotale
php
http
grappa
univ
lille
fr
polys
php
exemples
impair
php
http
grappa
univ
lille
fr
polys
php
exemples
punition
php
http
grappa
univ
lille
fr
polys
php
exemples
multiplication
php
http
grappa
univ
lille
fr
polys
php
exemples
multiplicationbis
php
http
grappa
univ
lille
fr
polys
php
exemples
factorielle
php
http
grappa
univ
lille
fr
polys
php
exemples
lignes
php
http
grappa
univ
lille
fr
polys
php
exemples
multiplicationtotale
php
chapitre
premiers
exemples
php
écrire
fonction
renvoie
pui
utilisez
fonction
construire
table
factorielles
exemple
tablefact
php
écrire
fonction
affiche
triangle
admet
comme
paramètre
nombre
lignes
triangle
çù
çäë
utilisez
fonction
dessiner
demi
sapin
çù
çù
çäë
çäëë
çù
çäë
çäëë
çäëë
çäëçë
exemple
demisapin
php
coefficients
binôme
écrire
fonction
renvoie
b
utiliser
fonction
précédente
écrire
fonction
renvoie
utiliser
fonctions
précédentes
programme
affiche
coefficients
binôme
toutes
valeurs
exemple
binome
php
suite
fibonnacci
définie
relations
suivantes
f
f
f
f
p
f
tout
f
f
f
f
f
f
f
f
écrire
programme
affiche
premières
valeurs
f
exemple
fibonnacci
php
fibonnacci
retour
afficher
rapports
ainsi
leurs
différences
nombre
http
grappa
univ
lille
fr
polys
php
exemples
tablefact
php
http
grappa
univ
lille
fr
polys
php
exemples
demisapin
php
http
grappa
univ
lille
fr
polys
php
exemples
binome
php
http
grappa
univ
lille
fr
polys
php
exemples
fibonnacci
php
chapitre
premiers
exemples
php
exemple
fibonnacci
retour
php
afficher
cadre
x
exemple
cadre
pre
php
cadre
table
php
tableau
additions
faire
réaliser
page
php
tableau
additions
compléter
entraînement
enfant
calcul
exemple
tableauadditionsfixe
php
tableauadditionsvariable
php
http
grappa
univ
lille
fr
polys
php
exemples
fibonnacci
retour
php
http
grappa
univ
lille
fr
polys
php
exemples
cadre
pre
php
http
grappa
univ
lille
fr
polys
php
exemples
cadre
table
php
http
grappa
univ
lille
fr
polys
php
exemples
tableauadditionsfixe
php
http
grappa
univ
lille
fr
polys
php
exemples
tableauadditionsvariable
php
chapitre
premiers
exemples
php
chapitre
formulaires
html
présentation
formulaires
saisie
permettent
utilisateur
fournir
informations
ainsi
obtenir
réponse
personnalisée
informations
contenues
champs
remplis
utilisateur
transmises
programme
client
serveur
transmet
tour
programme
traitement
cgi
common
gateway
interface
script
type
php
structure
formulaire
saisie
simple
compose
élément
form
contenant
essentielle
ment
suite
contrôles
éléments
input
textarea
select
button
etc
aussi
éléments
structuration
document
afin
aligner
correctement
champs
entrée
globalement
formulaire
présente
sous
forme
form
method
action
texte
boutons
zones
saisie
input
type
submit
value
form
désigne
méthode
utiliser
envoyer
informations
get
défaut
données
formulaire
envoyées
url
post
données
envoyées
corps
message
elles
visibles
url
désigne
url
programme
cgi
php
etc
va
traiter
données
peut
être
aussi
mail
déconseillé
cela
marche
navigateur
utilisateur
bien
configuré
toutes
façons
faudra
traiter
données
après
stocker
boîtes
lettres
facilite
automatisation
tâche
désigne
texte
va
apparaître
bouton
envoi
affichage
page
rien
distingue
formulaire
reste
texte
conseillé
séparer
reste
balise
hr
avant
après
mettre
tableau
bordures
visibles
principaux
contrôles
principaux
contrôles
input
zones
saisie
boutons
radios
cases
cocher
définis
contrôle
syntaxe
simplifiée
input
type
type
name
nom
value
valeur
type
peut
être
text
zone
saisie
sens
habituel
terme
zone
rectangulaire
utilisateur
écrit
don
nées
seule
ligne
zone
envoyé
programme
traitement
password
zone
saisie
mot
passe
identique
text
texte
saisi
apparaît
écran
sous
forme
astérisques
éviter
être
lisible
tierce
personne
checkbox
case
cocher
chapitre
formulaires
html
radio
bouton
radio
boutons
radios
nom
mutuellement
exclusifs
submit
bouton
envoi
clic
bouton
envoie
contenu
formulaire
programme
traitement
hidden
variable
cachée
permet
cacher
valeurs
nécessaires
traitement
veut
voir
affichées
écran
attention
caché
veut
dire
secret
valeurs
visibles
code
source
page
reset
remettre
zones
saisie
leurs
valeurs
défaut
valeurs
elles
lors
chargement
page
nom
nom
variable
envoyé
programme
cela
priori
sens
bouton
submit
reset
absolument
nécessaire
autres
zones
doivent
principe
avoir
noms
différents
sauf
boutons
radios
boutons
radios
nom
mutuellement
exclusifs
value
valeur
contrôle
text
password
agit
valeur
permet
pré
remplir
zone
checkbox
radio
valeur
donnée
variable
case
sélectionnée
submit
reset
texte
écrit
bouton
hidden
valeur
donnée
variable
select
créer
listes
déroulantes
exemple
utilisation
select
name
menu
option
premier
choix
option
option
deuxième
choix
option
option
troisième
choix
option
select
zone
permettra
envoyer
variable
nom
menu
valeur
choix
sélectionné
pré
sélectionner
choix
liste
suffit
ajouter
attribut
selected
selected
balise
option
correspondante
peut
avoir
besoin
envoyer
valeur
différente
affichée
exemple
demander
utilisateur
choisir
personne
nom
prénom
envoyer
identifiant
personne
table
base
données
utilisera
alors
attribut
value
balise
option
comme
exemple
select
name
responsable
option
value
marcel
durand
option
option
value
georges
dupont
option
option
value
pierre
martin
option
select
exemple
choisit
georges
dupont
variable
responsable
valeur
textarea
zones
saisie
plus
grandes
input
exemple
utilisation
textarea
name
nom
rows
cols
texte
défaut
textarea
exemples
pourrez
trouver
deux
exemples
presque
identiques
sauf
méthode
envoi
get
post
autre
adresses
suivantes
http
grappa
univ
lille
fr
gonzalez
prog
test
html
http
grappa
univ
lille
fr
gonzalez
prog
test
html
pouvez
tester
propres
formulaires
suivant
instructions
page
chapitre
formulaires
html
http
grappa
univ
lille
fr
torre
enseignement
tps
formulaires
formulaire
doit
contenir
attribut
caché
identifiant
champ
action
doit
contenir
valeur
http
grappa
univ
lille
fr
torre
enseignement
tps
formulaires
universel
php
chapitre
formulaires
html
chapitre
traitement
formulaire
php
corrigés
exercices
chapitre
trouvent
chapitre
traitement
données
formulaire
php
tout
programme
php
peut
recevoir
variables
connaît
avance
nom
variables
passées
programme
suffit
appeler
nom
syntaxe
php
dire
précédé
exemple
appel
url
suivante
http
grappa
univ
lille
fr
gonzalez
prog
form
php
x
autorise
emploi
variables
x
vaut
vaut
programme
form
php
attention
plus
plus
courant
rencontrer
serveurs
configurés
safe
mode
dire
réglages
destinés
protéger
détournement
certaines
page
éventuels
pirates
cas
accès
paramètre
truc
non
truc
get
truc
http
get
vars
truc
envoi
méthode
get
post
truc
choix
http
post
vars
truc
envoi
méthode
post
suite
supposerons
être
safe
mode
question
quelles
variables
quelles
valeurs
transmises
formulaire
noms
variables
ceux
champs
formulaire
zones
saisie
texte
tapé
transmis
tel
quel
cases
cocher
valeur
case
cochée
chaîne
vide
sinon
boutons
radios
valeur
affectée
value
bouton
sélectionné
listes
déroulantes
valeur
affectée
option
choix
sélectionné
exercices
écrire
formulaire
demande
nom
âge
utilisateur
bouton
submit
formulaire
provoquera
affichage
page
saluera
utilisateur
phrase
bonjour
machin
xx
ans
bonnes
valeurs
bien
entendu
exemple
traitement
html
deux
vacanciers
abandonné
montpellier
bébé
mois
sage
quelle
surprise
quand
mois
plus
tard
rentrés
chez
lille
vu
arriver
enfant
fait
quatre
pattes
trajet
montpellier
lille
autoroute
écrire
formulaire
php
permet
saisir
distance
parcourue
bébé
nombre
heures
marchait
jour
nombre
jours
passés
route
formulaire
affichera
alors
vitesse
bébé
exemple
traitement
html
écrire
formulaire
demande
nom
sexe
utilisateur
mme
formulaire
appelle
page
affichera
bonjour
monsieur
truc
bonjour
madame
bidule
suivant
cas
vrai
nom
personne
bien
entendu
exemple
traitement
html
permis
chasse
points
remplace
désormais
permis
chasse
traditionnel
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
chapitre
traitement
formulaire
php
chaque
chasseur
possède
départ
capital
points
tue
poule
perd
point
points
chien
points
vache
points
tue
meilleur
ami
permis
coûte
francs
écrire
formulaire
php
permet
saisir
liste
victimes
chasseur
calcule
prix
payer
permis
supplémentaires
nécessaires
exemple
traitement
html
écrire
formulaire
calculatrice
cases
saisie
opérandes
groupe
cases
cocher
liste
déroulante
choix
opération
affichage
résultat
opération
exemple
traitement
php
écrire
formulaire
demande
deux
nombres
b
affiche
ensuite
table
multiplication
b
lignes
formulaire
doit
souvenir
valeurs
choisies
exemple
traitement
php
écrire
formulaire
demande
mot
passe
deux
mots
passe
différents
acceptés
saluera
utilisateur
différemment
fonction
mot
passe
utilisé
exemple
traitement
php
addition
compléter
formulaire
propose
addition
incomplète
utilisateur
doit
terminer
exemple
addition
php
devinette
devez
deviner
nombre
programme
choisi
proposez
solution
programme
répond
trop
petit
trop
grand
suivant
cas
jusque
trouver
bon
nombre
exemple
devinette
php
devinette
chose
exercice
précédent
rôles
inversés
programme
devine
exemple
devinette
php
pipotron
ordinateur
aide
écrire
importe
quoi
exemple
pipotron
php
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
addition
php
http
grappa
univ
lille
fr
polys
php
exemples
devinette
php
http
grappa
univ
lille
fr
polys
php
exemples
devinette
php
http
grappa
univ
lille
fr
polys
php
exemples
pipotron
php
chapitre
chaînes
caractères
corrigés
exercices
chapitre
trouvent
chapitre
création
page
web
nécessite
plupart
temps
manipulation
chaînes
caractères
allons
explorer
principales
fonctions
disponibles
php
chaîne
caractères
trois
choses
savoir
mot
anglais
désigne
chaînes
caractères
string
utile
car
documentation
souvent
anglais
toujours
portée
main
documentation
php
après
point
précédent
allez
voir
chapitre
string
chaîne
importe
quoi
entouré
guillemets
apostrophes
voici
deux
exemples
chaîne
caractères
aussi
chaîne
caractères
choisir
guillemets
apostrophes
pareil
sauf
commence
finit
voici
deux
exemples
chaînes
caractères
chaîne
caractères
non
plus
chaîne
caractères
chaîne
contient
apostrophes
utilisez
guillemets
chaîne
contient
guillemets
utilisez
apostrophes
exemple
révais
dit
bonjour
remarque
chaîne
doit
contenir
deux
pouvez
utiliser
caractère
backslash
révais
dit
bonjour
révais
dit
bonjour
variables
interprétées
guillemets
apostrophes
exemple
variable
vaut
instruction
echo
affichera
tandis
echo
affichera
caractères
précédés
caractère
backslash
sauf
principales
utilisations
backslash
caractère
backslash
permet
introduire
chaînes
caractères
pourraient
être
sinon
exemple
guillemets
chaîne
entourée
guillemets
retours
ligne
etc
comme
fait
caractère
spécial
faut
façon
particulière
noter
inclus
chaîne
voici
tableau
récapitulant
principales
utilisations
backslash
http
fr
php
net
manual
fr
ref
strings
php
chapitre
chaînes
caractères
tableau
principales
utilisations
backslash
code
signification
retour
ligne
tabulation
çù
backslash
guillemet
chaîne
entourée
guillemets
apostrophe
chaîne
entourée
apostrophes
dollar
principales
opérations
chaînes
affectation
comme
toute
variable
affectation
variable
chaîne
fait
symbole
bla
bla
bla
bla
affichage
comme
toute
valeur
affichage
fait
instruction
echo
concaténation
opérateur
concaténation
point
principales
fonctions
agit
là
fonctions
principales
elles
expliquées
signifie
faudra
aller
voir
documentation
php
propres
moyens
conversion
majuscules
minuscules
strtolower
conversion
minuscules
majuscules
strtoupper
découper
chaîne
explode
split
renvoient
tableau
fonctions
inverses
implode
join
enlever
espaces
début
fin
chaîne
ltrim
chop
trim
longueur
chaîne
strlen
http
fr
php
net
manual
fr
ref
strings
php
http
fr
php
net
manual
fr
function
strtolower
php
http
fr
php
net
manual
fr
function
strtoupper
php
http
fr
php
net
manual
fr
function
explode
php
http
fr
php
net
manual
fr
function
split
php
http
fr
php
net
manual
fr
function
implode
php
http
fr
php
net
manual
fr
function
join
php
http
fr
php
net
manual
fr
function
ltrim
php
http
fr
php
net
manual
fr
function
chop
php
http
fr
php
net
manual
fr
function
trim
php
http
fr
php
net
manual
fr
function
strlen
php
chapitre
chaînes
caractères
position
chaîne
autre
strpos
remplacer
partie
chaîne
autre
str
replace
substr
replace
extrait
chaîne
substr
conversions
types
php
extrémement
tolérant
conversions
types
essaiera
toujours
faire
mieux
plus
naturellement
possible
profitez
quand
trop
prévoyez
comprenez
toujours
comportement
cela
évit
era
sans
doute
déconvenues
exemple
peut
faire
évitez
abuser
php
truc
echo
truc
gettype
truc
br
truc
truc
echo
truc
gettype
truc
br
truc
truc
echo
truc
gettype
truc
br
truc
truc
echo
truc
gettype
truc
br
truc
truc
echo
truc
gettype
truc
br
programme
affichera
string
string
integer
string
double
remarque
commande
echo
truc
gettype
truc
br
provoque
affichage
valeur
truc
suivie
type
tout
ceci
terminé
passage
ligne
exercices
écrire
formulaire
devra
vérifier
identité
utilisateur
demandant
nom
prénom
mot
passe
dernier
devra
apparaître
écran
pendant
frappe
tant
utilisateur
reconnu
seul
affiche
formulaire
utilisateur
reconnu
seul
affiche
message
accueil
casse
valeurs
devra
être
prise
compte
dire
fait
tapé
majuscules
minuscules
devra
changer
comportement
page
espaces
tapés
début
fin
mot
passe
nom
prénom
devront
être
éliminés
http
fr
php
net
manual
fr
function
strpos
php
http
fr
php
net
manual
fr
function
str
replace
php
http
fr
php
net
manual
fr
function
substr
replace
php
http
fr
php
net
manual
fr
function
substr
php
chapitre
chaînes
caractères
trouverez
exemple
page
identite
php
http
grappa
univ
lille
fr
polys
php
exemples
identite
php
chapitre
tableaux
corrigés
exercices
chapitre
trouvent
chapitre
stockage
manipulation
grand
nombre
données
nécessitent
souvent
utilisation
tableaux
tableau
simplifier
voici
définitions
équivalentes
variable
peut
stocker
plusieurs
valeurs
foi
chacune
numérotée
ensemble
variables
différentes
regroupées
sous
nom
chacune
différenciée
autres
numéro
représentation
informatique
vecteur
matrice
chacune
composantes
connue
indice
manière
plus
générale
tableau
abord
variable
nom
commence
dollar
syntaxe
accéder
cases
tableau
plupart
langages
x
désigne
ème
élément
tableau
x
remarque
php
numérotation
éléments
tableau
commence
toujours
zéro
quelques
exemples
utilisation
remplir
afficher
contenu
tableau
peut
remplir
exemple
cases
tableau
bonjour
bonsoir
bla
bla
bla
peut
aussi
utiliser
boucle
for
remplir
série
cases
for
i
i
i
i
i
affichage
obligé
passer
aussi
cases
utilisation
echo
permet
afficher
contenu
tableau
echo
case
numéro
br
for
i
i
çiu
echo
case
numéro
i
i
br
chapitre
tableaux
exemple
complet
regroupant
lignes
précédentes
habillant
peu
obtient
programme
suivant
tableau
php
html
body
h
remplissage
tableau
h
passe
rien
écran
partie
normal
travail
modification
variables
affichage
php
bonjour
bonsoir
bla
bla
bla
for
i
i
çiu
i
i
h
affichage
certaines
cases
particulières
h
php
echo
case
numéro
br
case
numéro
br
h
affichage
suite
cases
h
php
for
i
i
çiu
echo
case
numéro
i
i
br
body
html
tableaux
associatifs
agit
généralisation
tableaux
lieu
utiliser
nombres
indices
peut
utiliser
importe
quoi
programme
tableau
php
permet
choisir
prénom
liste
déroulante
afficher
renseignements
correspondants
html
body
form
action
tableau
php
select
name
prenom
option
value
thècle
thècle
option
option
value
édith
édith
option
option
value
kelly
kelly
option
option
value
mélusine
mélusine
option
option
value
elmer
elmer
option
select
input
type
submit
value
renseignements
form
php
nom
thècle
assicmonpote
nom
édith
avuleur
nom
kelly
diocy
nom
mélusine
enfaillite
nom
elmer
hitmieux
adresse
thècle
rue
alex
kuzbidon
adresse
édith
rue
ondine
oucesoir
adresse
kelly
boulevard
rosa
remecitoyens
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
chapitre
tableaux
adresse
mélusine
rue
jean
tanlamer
adresse
elmer
avenu
dino
zore
ville
thècle
rennes
ville
édith
douarnenez
ville
kelly
auchel
ville
mélusine
chamonix
ville
elmer
langres
if
isset
prenom
echo
prénom
prenom
br
nnom
nom
prenom
br
nadresse
adresse
prenom
br
nville
ville
prenom
body
html
parcours
tableau
associatif
quand
travaille
tableau
classique
indice
numérique
facile
parcourir
toutes
cases
boucle
for
parcourir
tableau
associatif
peu
moins
direct
méthode
classique
marche
fonction
count
donne
résultat
exploitable
facilement
cas
tableau
associatif
alors
difficile
imaginer
exemple
exemple
précédent
boucle
construirait
automatiquement
suite
thècle
édith
kelly
mélusine
elmer
valeurs
faut
aller
chercher
tableau
énervons
php
fournit
tout
faut
structure
foreach
permet
parcourir
tableau
associatif
comme
programme
suivant
tableau
bis
php
programme
tableau
bis
php
parcourt
tableau
nom
affiche
contenu
chaque
ligne
affichage
contenant
couple
clef
valeur
clef
correspondant
habitude
appeler
indice
quand
agit
nombre
html
body
table
border
border
php
nom
thècle
assicmonpote
nom
édith
avuleur
nom
kelly
diocy
nom
mélusine
enfaillite
nom
elmer
hitmieux
foreach
nom
clef
valeur
echo
tr
td
clef
td
td
valeur
td
tr
table
body
html
exercices
dispose
fichier
suivant
contenant
adresses
web
rien
empêche
choisir
autres
écrire
programme
tableau
php
lit
fichier
construire
page
web
contenant
liste
liens
hypertextes
tableau
txt
http
www
hoaxbuster
com
http
fr
php
net
manual
fr
function
count
php
http
fr
php
net
foreach
http
grappa
univ
lille
fr
polys
php
exemples
tableau
bis
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
bis
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
txt
chapitre
tableaux
http
www
gazel
nu
faqs
virus
htm
e
mail
http
www
electriccafe
org
jbt
http
www
zetetique
ldh
org
http
perso
wanadoo
fr
jean
brissonnet
http
www
thejackytouch
com
http
www
multimania
com
lepoulpe
exercice
tableau
php
foi
chaque
ligne
comprend
aussi
description
site
pointé
séparation
assuré
chaîne
tableau
txt
http
www
hoaxbuster
com
hoaxbuster
première
http
www
gazel
nu
faqs
virus
htm
e
mail
http
www
electriccafe
org
jbt
nemo
joe
bar
team
spirit
http
www
zetetique
ldh
org
cercle
zététique
http
perso
wanadoo
fr
jean
brissonnet
éthique
toc
http
www
thejackytouch
com
the
jacky
touch
http
www
multimania
com
lepoulpe
poulpe
toile
exercice
tableau
php
foi
chaque
description
adresse
correspondante
deux
lignes
consécutives
tableau
txt
hoaxbuster
première
ressource
francophone
hoax
http
www
hoaxbuster
com
possible
attraper
virus
ouvrant
e
mail
http
www
gazel
nu
faqs
virus
htm
e
mail
nemo
joe
bar
team
spirit
http
www
electriccafe
org
jbt
cercle
zététique
http
www
zetetique
ldh
org
éthique
toc
http
perso
wanadoo
fr
jean
brissonnet
the
jacky
touch
http
www
thejackytouch
com
poulpe
toile
http
www
multimania
com
lepoulpe
donne
liste
personnes
tableau
txt
voici
premières
lignes
thor
aipaleur
tata
dick
sionnaire
dsds
debbie
zoudanlkou
dzdz
mélanie
zaitofrai
mzmz
helmut
ardelpic
haha
jacques
andré
lejouré
lanuit
jljl
phil
alapate
papa
chaque
ligne
composée
ordre
identifiant
nombre
prénom
nom
mot
passe
écrire
page
web
tableau
php
donne
sélectionner
personnes
affiche
ensuite
mot
passe
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
txt
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
txt
http
grappa
univ
lille
fr
polys
php
exemples
tableau
txt
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
chapitre
pdo
pdo
texte
extrait
xxvii
fonctions
pdo
chapitre
manuel
php
php
net
extension
php
data
objects
pdo
définit
excellente
interface
accéder
base
données
depuis
php
chaque
pilote
base
données
implémenté
interface
pdo
peut
utiliser
fonctionnal
ités
spécifiques
chacune
base
données
utilisant
extensions
fonctions
notez
pouvez
exécuter
aucune
fonction
base
données
utilisant
extension
pdo
devez
utiliser
driver
pdo
spécifique
base
données
accéder
serveur
base
données
pdo
fournit
interface
abstraction
accès
données
signifie
utilisez
mêmes
fonctions
exécuter
requêtes
récupérer
données
quelque
base
données
utilisée
pdo
fournit
abstraction
base
données
réécrit
sql
émule
fonctionnalités
manquantes
devriez
utiliser
interface
abstraction
complète
besoin
cela
pdo
fournit
php
disponible
tant
extension
pecl
php
pdo
requiert
nouvelles
fonctionnalités
oo
fournies
php
fonctionne
versions
antérieures
php
quelle
utilité
hétérogénéité
moyens
accès
base
données
problèmes
plus
gênants
php
problème
vient
fait
exemple
fonctions
permettant
accès
base
postgresql
différentes
celles
mysql
elles
toutes
différentes
celles
sqlite
etc
cela
effet
rendre
plus
difficile
migration
système
vers
autre
écrit
exemple
cours
site
utilisant
base
postgresql
voulez
transférer
chez
hébergeur
offre
mysql
comme
exemple
cas
free
encore
peu
temps
seule
solution
reprendre
corriger
toutes
page
tous
appels
fonctions
concernant
postgresql
peut
avoir
beaucoup
couche
abstraction
permet
éviter
problème
tous
accès
base
données
passent
syntaxe
quelle
base
données
débrouille
adapter
base
données
utilisée
changer
base
données
passer
postgresql
mysql
exemple
général
modifier
ligne
celle
donne
paramètres
base
données
utilisée
connecter
base
données
texte
extrait
fonctions
pdo
chapitre
manuel
php
php
net
connexions
établies
créant
instances
classe
base
pdo
peut
importe
quel
driver
voulez
utiliser
utilisez
toujours
nom
classe
pdo
constructeur
accepte
paramètres
spécifier
source
base
données
connue
tant
dsn
optionnellement
nom
utilisateur
mot
passe
suffit
cela
exécuter
commande
dbh
new
pdo
type
base
host
machine
héberge
base
dbname
nom
base
nom
utilisateur
mot
passe
nom
variable
dbh
sans
importance
variable
pouvez
donner
nom
plaît
faut
seulement
garder
esprit
faut
conserver
variable
quelque
nom
permettra
accéder
base
données
fonctions
sections
suivants
http
fr
php
net
manual
fr
ref
pdo
php
http
fr
php
net
http
fr
php
net
manual
fr
ref
pdo
php
pdo
drivers
existe
autres
couches
abstraction
dbx
phplib
adodb
metadata
pear
db
etc
http
fr
php
net
manual
fr
ref
pdo
php
http
fr
php
net
chapitre
pdo
type
base
quant
valeur
parmi
mssql
freetds
microsoft
sql
server
sybase
firebird
firebird
interbase
informix
ibm
informix
dynamic
server
mysql
mysql
x
x
x
oci
oracle
call
interface
odbc
odbc
v
ibm
db
unixodbc
win
odbc
pgsql
postgresql
sqlite
sqlite
sqlite
reportera
page
fonctions
pdo
gestion
erreurs
connexion
lorsque
connexion
base
données
réussi
instance
classe
pdo
retournée
script
connexion
active
tant
objet
pdo
clore
connexion
devez
détruire
objet
assurant
toutes
références
effacées
pouvez
faire
cela
assignant
null
variable
gérant
objet
faites
explicitement
php
fermera
automatiquement
connexion
lorsque
script
arrivera
fin
exécuter
requête
trouverez
plus
information
page
pdo
query
manuel
php
auparavant
obtenu
identifiant
connexion
dbh
instance
classe
base
pdo
comme
précédemment
syntaxe
simple
res
dbh
query
requête
valeur
renvoyée
rangée
ici
variable
res
résultat
exécution
requête
identifiant
propre
système
valeur
réelle
intéresse
permettra
accéder
résultats
grâce
fonctions
décrites
ci
dessous
nombre
lignes
colonnes
requête
select
peut
facilement
obtenir
nombre
lignes
colonnes
résultat
requête
type
select
result
dbh
query
select
id
from
table
echo
result
rowcount
nombre
lignes
echo
result
columncount
nombre
champs
avertissement
certains
gestionnaires
base
données
particulier
sqlite
arrive
méthode
rowcount
fonctionne
cas
là
remplacez
res
rowcount
count
data
data
égal
count
result
fetchall
voir
section
cela
produira
effet
plus
informations
php
net
rowcount
columncount
http
fr
php
net
manual
fr
ref
pdo
php
http
fr
php
net
manual
fr
function
pdo
query
php
fait
objet
http
fr
php
net
manual
fr
function
pdostatement
rowcount
php
http
fr
php
net
manual
fr
function
pdostatement
columncount
php
chapitre
pdo
accéder
résultats
requête
select
result
résultat
valide
renvoyé
dbh
query
result
fetchall
renvoie
tableau
dimensions
contient
résultats
premier
indice
concerne
lignes
deuxième
concerne
colonnes
plus
informations
php
net
fetchall
accès
nom
colonnes
exemple
result
dbh
query
select
from
villes
data
result
fetchall
foreach
data
row
echo
row
codepostal
row
ville
br
accès
numéro
colonnes
exemple
result
dbh
query
select
from
villes
data
result
fetchall
foreach
data
row
for
i
i
result
columncount
i
echo
row
i
echo
br
accès
numéro
lignes
numéro
colonnes
exemple
result
dbh
query
select
from
villes
data
result
fetchall
for
result
rowcount
for
i
i
result
columncount
çiu
echo
data
i
echo
br
gestion
erreurs
quand
instruction
pdo
échoue
aucun
message
affiché
peut
alors
croire
tort
tout
bien
passé
important
savoir
obtenir
informations
éventuelles
erreurs
avoir
informations
plus
précises
quelques
lignes
allez
voir
page
elles
extraites
php
net
suite
continuerons
placer
cas
auparavant
obtenu
identifiant
connexion
dbh
instance
classe
base
pdo
http
fr
php
net
manual
fr
function
pdostatement
fetchall
php
http
fr
php
net
manual
fr
pdo
error
handling
php
http
fr
php
net
chapitre
pdo
code
erreur
méthode
db
errorcode
renvoie
code
erreur
associé
dernière
opération
effectuée
base
données
valeur
zéro
erreur
informations
associées
erreur
méthode
db
errorinfo
renvoie
informations
associées
erreur
survenue
lors
dernière
opération
base
données
agit
tableau
contient
champs
décrit
tableau
tableau
champs
db
errorinfo
élément
information
code
erreur
sqlstate
identifiant
alphanumérique
cinq
caractères
défini
standard
ansi
sql
code
erreur
spécifique
driver
message
erreur
spécifique
driver
code
erreur
sqlstate
défini
erreur
spécifique
driver
élément
suivant
élément
défini
null
exemple
traitement
erreur
gérer
éventuelles
erreurs
méthodes
précédentes
peuvent
être
utilisée
façon
ici
exé
cute
requête
req
définie
ailleurs
db
query
req
exécution
reqête
if
db
errorcode
erreur
echo
b
erreur
b
requête
tt
req
tt
br
db
errorinfo
récupération
informations
erreur
echo
b
code
erreur
sqlstate
b
br
echo
b
code
erreur
spécifique
driver
b
br
echo
b
message
erreur
b
blockquote
p
p
blockquote
echo
b
programme
interrompu
b
dieçà
chapitre
programmation
séparée
php
programmation
séparée
programmation
séparée
écrire
programme
plusieurs
petits
fichiers
lieu
seul
gros
quelques
avantages
fichiers
plus
petits
plus
faciles
relire
comprendre
modifier
tester
corriger
cela
permet
faire
travailler
plusieurs
personnes
programme
temps
cela
permet
regrouper
plus
facilement
fonctions
domaine
chaque
fichier
propre
cohérence
plus
facile
réutiliser
travail
déjà
fait
fonctions
require
include
fonctions
require
include
permettent
inclure
fichier
autre
dit
exemple
commande
require
remplace
contenu
fichier
spécifié
différentes
façons
utiliser
fonctions
rendre
homogène
présentation
site
écrit
seule
foi
début
partie
head
couleur
fond
couleur
texte
présentation
grand
titre
etc
fin
page
exemple
signature
adresse
mail
fichiers
séparés
contente
ajouter
chaque
feuille
require
début
fin
fichiers
partie
code
identique
plusieurs
page
écrit
seule
foi
fichier
séparé
inclut
require
chaque
foi
nécessaire
façons
faire
seulement
avantage
permettre
taper
plusieurs
foi
chose
éviter
fatigue
inutile
surtout
copier
coller
marche
bien
utilité
surtout
rendre
modifications
faciles
répercuter
décidez
changer
présentation
globale
site
seul
fichier
modifier
décidez
modifier
partie
code
commune
façon
faire
calcul
façon
connecter
etc
également
seul
fichier
modifier
http
fr
php
net
manual
fr
function
require
php
http
fr
php
net
manual
fr
function
include
php
chapitre
programmation
séparée
php
chapitre
identification
php
aborderons
ici
identification
gérée
navigateur
préliminaires
fonction
header
fonction
header
permet
spécifier
tête
http
lors
envoi
fichiers
html
reportez
http
specification
plus
informations
têtes
http
remarque
fonction
header
doit
être
appelée
avant
première
balise
html
avant
importe
quel
envoi
com
mande
php
allons
utiliser
ici
fonction
demander
vérification
identité
cela
suffit
faire
commencer
programme
php
commande
header
www
authenticate
basic
realm
private
effet
faire
demander
retenir
nom
mot
passe
navigateur
pouvez
ainsi
tester
programme
élémentaire
suivant
ident
exple
php
php
if
isset
php
auth
user
çù
isset
php
auth
pw
header
www
authenticate
basic
realm
private
else
echo
html
body
echo
données
connues
php
auth
user
php
auth
pw
echo
body
html
pouvez
remarquer
demande
faite
lors
première
exécution
page
seule
façon
programme
tel
écrit
devoir
répondre
nouveau
question
sortir
navigateur
fermer
toutes
fenêtres
navigateur
oui
relancer
attention
serveur
configuré
safe
mode
accès
variables
php
auth
user
php
auth
pw
server
php
auth
user
server
php
auth
pw
serveur
configuré
safe
mode
voir
aussi
section
propriété
allons
utiliser
gérer
identification
utilisateurs
contrôle
mots
passe
manque
seule
chose
presque
programme
précédent
être
parfait
tester
valeurs
variables
php
auth
user
contient
nom
php
auth
pw
contient
mot
passe
vérifier
affaire
bonne
personne
version
simple
pourrait
ressembler
ça
ident
exple
php
php
if
php
auth
user
marcel
php
auth
pw
bidule
echo
html
body
echo
bravo
identification
réussie
echo
body
html
else
http
fr
php
net
manual
fr
function
header
php
http
www
w
org
protocols
rfc
rfc
http
grappa
univ
lille
fr
polys
php
exemples
ident
exple
php
http
grappa
univ
lille
fr
polys
php
exemples
ident
exple
php
chapitre
identification
php
header
www
authenticate
basic
realm
private
amélioration
plusieurs
utilisateurs
rare
quand
accès
page
contrôlée
mot
passe
tous
utilisateurs
mêmes
droits
faut
pouvoir
détecter
identité
personne
concernée
moment
saisie
mot
passe
cela
donnera
mot
passe
différent
chaque
utilisateur
cela
permet
avoir
exemple
suivant
ident
exple
php
lequel
renseignements
rangés
tableau
chaînes
caractères
chaîne
personne
présentée
sous
forme
vrai
nom
nom
utilisateur
mot
passe
php
liste
informations
liste
array
jean
némar
nemar
jjjj
sophie
fonfec
fonfec
ssss
yves
adrouille
toultan
adrouille
yyyy
création
tableaux
for
i
i
count
liste
çiu
explode
trim
liste
i
nom
i
identité
réelle
utilisateur
i
user
i
identifiant
utilisateur
i
système
pass
i
mot
passe
utilisateur
i
nbusers
count
liste
contrôle
identité
ok
démarre
sans
connaître
utilisateur
for
i
i
nbusers
i
if
php
auth
user
user
i
php
auth
pw
pass
i
reconnu
utilisateur
garde
numéro
ok
i
identification
raté
ok
contient
toujours
demande
nom
mot
passe
if
ok
header
www
authenticate
basic
realm
private
return
notera
utilisation
instruction
return
sortir
programme
arrive
ici
identification
réussi
ok
contient
numéro
utilisateur
echo
html
body
echo
bravo
identification
réussie
br
echo
em
nom
ok
em
echo
identifiant
em
user
ok
em
echo
mot
passe
em
pass
ok
em
br
ajouter
ici
tout
concerne
utilisateur
echo
body
html
http
grappa
univ
lille
fr
polys
php
exemples
ident
exple
php
chapitre
identification
php
séparer
données
traitement
tout
fait
raisonnable
imaginer
va
avoir
besoin
changer
mots
passe
ainsi
ajouter
nouveaux
utilisateurs
supprimer
anciens
contre
raisonnable
tout
imaginer
celui
va
faire
envie
aller
manipuler
chaque
foi
fichier
programme
ailleurs
souhaitable
préférable
garder
informations
fichier
séparé
cela
change
grand
chose
suffit
exemple
remplacer
premières
lignes
liste
informations
liste
array
jean
némar
nemar
jjjj
sophie
fonfec
fonfec
ssss
yves
adrouille
toultan
adrouille
yyyy
lecture
fichier
contenant
mêmes
informations
lire
liste
informations
liste
file
mettre
ici
chemin
accès
fichier
reste
programme
change
fichier
lire
alors
simple
fichier
texte
contiendra
cas
présent
jean
némar
nemar
jjjj
sophie
fonfec
fonfec
ssss
yves
adrouille
toultan
adrouille
yyyy
cacher
mots
passe
solution
précédente
très
gros
inconvénient
placez
fichier
mots
passe
importe
oubliez
page
web
html
php
faites
être
vues
tout
monde
depuis
importe
permettre
cela
droits
accès
arborescence
web
positionnés
lisible
tous
chmod
r
faut
surtout
changer
cela
ça
posera
aucun
problème
tant
entreposez
données
confidentielles
mots
passe
ça
confidentiel
alors
comment
faire
suffit
mettre
fichier
mot
passe
arborescence
web
choisir
emplacement
quelconque
seule
obligation
être
accessible
utilisateur
apache
exécute
programmes
php
chemin
accès
instruction
liste
file
mettre
ici
chemin
accès
fichier
devra
être
absolu
dire
partir
racine
commencer
slash
crypter
mots
passe
afin
rendre
vie
trop
facile
éventuel
pirate
peut
aussi
être
intéressant
crypter
mots
passe
fichier
cela
fait
fonction
crypt
algorithme
décryptage
faut
croire
cela
puisse
être
protection
suffisante
effet
mots
passe
cryptés
accessibles
suffit
recopier
chez
soi
versions
cryptées
décoder
tranquillement
force
brute
pourrez
trouver
exemple
cela
signifie
exécutant
programme
suivant
decrypt
php
http
grappa
univ
lille
fr
polys
php
exemples
decrypt
php
chapitre
identification
php
décrypte
tout
mot
passe
fournissez
version
cryptée
manière
totalement
inintelli
gente
voire
plutôt
bestiale
essaie
toutes
chaînes
caractères
possibles
commençant
caractère
pui
etc
énumérant
systématiqument
exemple
caractères
aa
ab
ac
ad
ae
az
ba
bc
chaque
chaîne
calcule
version
cryptée
fonction
crypt
compare
celle
fournie
quand
elles
identiques
sait
vient
trouver
mot
passe
idiot
accord
ça
marche
remarque
encombrer
inutilement
serveur
temps
calcul
limité
cela
permet
quand
trouver
coup
sûr
serveur
trop
travail
ailleurs
importe
quel
mot
passe
lettres
plus
tout
cela
programme
vraiment
optimisé
langage
plus
rapide
faut
vraiment
cacher
mots
passe
chapitre
sessions
préambule
texte
suit
partie
page
consacrée
sessions
site
http
fr
php
net
support
sessions
php
moyen
préserver
données
entre
plusieurs
accès
cela
permet
créer
applications
personnalisées
augmenter
attrait
site
chaque
visiteur
accédant
page
web
voit
assigner
identifiant
unique
appelé
identifiant
session
peut
être
stocké
cookie
propagé
url
support
sessions
permet
enregistrer
nombre
illimité
variables
doivent
être
préservées
entre
requêtes
lorsqu
visiteur
accède
site
php
va
vérifier
automatiquement
session
auto
start
activé
demande
explicitement
session
start
implicitement
session
register
existe
session
nom
cas
environnement
précédemment
sauvé
recréé
seule
fonction
nécessaire
usage
simple
sessions
session
start
peux
encourager
aller
voir
autres
application
identification
visiteurs
principe
deux
variables
session
contiennent
login
mot
passe
visiteur
variables
vide
visiteur
identifié
visiteur
identifié
menu
propose
choix
connecter
envoie
formulaire
saisie
peut
aussi
inclure
formulaire
directement
menu
visiteur
identifié
menu
propose
choix
déconnecter
vide
variables
session
contiennent
login
mot
passe
visiteur
chaque
page
commence
quelque
chose
ressemblera
if
visiteur
bon
niveau
autorisation
page
message
refus
fin
page
return
évaluation
niveau
autorisation
peut
faire
plusieurs
manières
solution
mauvaise
car
complique
modifications
coder
dur
test
chaque
possibilité
if
nom
bidule
mot
passe
truc
elseif
nom
chose
mot
passe
importe
quoi
else
etc
mieux
ranger
noms
mots
passe
tableau
parcourir
tableau
faire
vérifi
cation
parfait
chose
créer
table
spéciale
base
données
lieu
utiliser
tableau
être
parfait
bien
fonction
affiche
menu
fonction
décide
choix
disponibles
fonction
niveau
autorisation
visiteur
exemple
utilisation
sessions
http
grappa
univ
lille
fr
gonzalez
session
php
http
fr
php
net
manual
fr
ref
session
php
http
fr
php
net
manual
fr
function
session
start
php
http
fr
php
net
manual
fr
ref
session
php
session
customhandler
chapitre
sessions
ii
hors
programme
chapitre
utiliser
php
base
données
postgresql
chapitre
figure
ici
guise
témoignage
préférable
utiliser
pdo
accès
base
données
chapitre
connexion
base
fonction
utiliser
pg
connect
syntaxe
résumée
ëww
pg
connect
host
xxx
dbname
ddd
user
yyy
password
zzz
www
variable
utilisée
comme
identifiant
connexion
chaque
exécution
requête
base
dd
base
données
laquelle
essayez
connecter
xxx
nom
adresse
machine
laquelle
trouve
base
données
yyy
nom
utilisateur
zzz
mot
passe
utilisateur
exécution
requête
fonction
utiliser
pg
query
syntaxe
résumée
rrr
pg
query
www
requete
rrr
variable
utilisée
comme
identifiant
voulez
obtenir
résultats
exécution
requête
www
identifiant
connexion
obtenu
pg
connect
voir
ci
dessus
requete
chaine
caractère
contenant
requête
exécuter
peut
être
chaîne
littérale
variable
http
fr
php
net
manual
fr
function
pg
connect
php
http
fr
php
net
manual
fr
function
pg
query
php
chapitre
utiliser
php
base
données
postgresql
obtention
résultats
requête
fonctions
utiliser
pg
numrows
syntaxe
résumée
nnn
pg
numrows
rrr
nnn
variable
contiendra
nombre
lignes
résultat
rrr
identifiant
exécution
requête
obtenu
pg
query
voir
ci
dessus
pg
fetch
array
syntaxe
résumée
lll
pg
fetch
array
rrr
iii
rrr
identifiant
exécution
requête
obtenu
pg
query
voir
ci
dessus
iii
numéro
ligne
voulez
obtenir
lll
variable
contiendra
table
constituée
tous
champs
ligne
demandée
agit
tableau
associatif
clefs
titres
colonnes
exemple
programme
php
pg
connect
dbname
user
password
r
pg
query
select
nom
prenom
from
emp
order
by
nom
for
i
i
pg
numrows
r
i
pg
fetch
array
r
i
echo
prenom
em
nom
em
produit
résultat
suivant
yves
adrouille
toultan
tex
ajerre
quentin
amartakaldire
yvon
anchier
helmut
ardelpic
terry
blaireur
thierry
chmonfisse
mélusine
enfaillite
odile
eurktumeme
teddy
fairant
sophie
fonfec
olaf
hotdeugou
xavier
kaécouté
alex
kuzbidon
pacôme
odlavieille
adhémar
patamob
humphrey
peursconla
thomas
phototetedemort
elsa
riven
busse
armand
teutmaronne
samira
traibien
héléna
vrante
agathe
zeublouze
debbie
zoudanlkou
http
fr
php
net
manual
fr
function
pg
numrows
php
http
fr
php
net
manual
fr
function
pg
fetch
array
php
chapitre
utiliser
php
base
données
postgresql
requêtes
autres
select
requêtes
type
insert
update
delete
exécutées
manière
requêtes
type
select
fonction
pg
query
cependant
important
contrôler
résultats
exécution
allons
étudier
chapitre
suppression
message
erreurs
pouvez
avoir
envie
gérer
erreurs
requêtes
exemple
éviter
affichage
warning
autres
query
failed
cela
suffit
préfixer
fonctions
utilisez
opérateur
contrôle
erreur
lorsque
opérateur
ajouté
préfixe
expression
php
message
erreur
peuvent
être
générés
expression
ignorés
exemple
lieu
écrire
res
pg
query
req
écrira
res
pg
query
req
remarque
opérateur
fonctionne
expressions
règle
générale
fonctionnement
suivante
pouvez
prendre
valeur
quelque
chose
pouvez
préfixer
exemple
pouvez
ajouter
variables
fonctions
include
constantes
etc
pourrez
faire
éléments
langage
tels
classes
if
foreach
etc
gestion
erreurs
message
impératif
quand
supprimez
avertissements
gérer
erreurs
peuvent
survenir
cas
accès
base
postgresql
existe
certain
nombre
fonctionnalités
cela
résultat
renvoyé
pg
query
cas
échec
pg
query
retourne
false
cas
échec
dire
quand
aucun
résultat
réel
peut
exister
peut
ainsi
traiter
échec
éventuel
requête
if
r
pg
query
req
traitement
cas
succès
else
traitement
cas
échec
obtenir
texte
dernière
erreur
fonction
pg
last
error
renvoie
éventuel
message
erreur
correspondant
dernière
exécution
requête
http
fr
php
net
manual
fr
function
pg
query
php
http
fr
php
net
manual
fr
language
operators
errorcontrol
php
http
fr
php
net
manual
fr
function
pg
query
php
http
fr
php
net
manual
fr
function
pg
last
error
php
chapitre
utiliser
php
base
données
postgresql
obtenir
statut
connexion
peut
connaître
état
connexion
utilisant
fonction
pg
result
status
valeurs
re
tournées
possibles
pgsql
empty
query
pgsql
command
ok
pgsql
tuples
ok
pgsql
copy
to
pgsql
copy
from
pgsql
bad
response
pgsql
nonfatal
error
pgsql
fatal
error
obtenir
nombre
lignes
affectées
requête
pg
affected
rows
retourne
nombre
lignes
affectées
requêtes
type
insert
update
delete
exécutées
fonction
pg
query
aucune
ligne
affectée
pg
affected
rows
retourne
http
fr
php
net
manual
fr
function
pg
connection
status
php
http
fr
php
net
manual
fr
function
pg
affected
rows
php
chapitre
peardb
présentation
chapitre
figure
ici
guise
témoignage
préférable
utiliser
pdo
accès
base
données
chapitre
pear
texte
extrait
présentation
pear
jdn
journal
net
pear
php
extension
and
application
repository
archive
composants
php
réutilisables
projet
majeur
communauté
php
archive
stockant
façon
plus
exhaustive
possible
programmes
macros
doc
umentation
but
fournir
développeurs
bibliothèques
modules
php
moyen
organiser
code
php
manière
définie
partagée
autres
développeurs
ainsi
offrir
communauté
php
seule
source
ressources
bref
architecture
système
dis
tribution
composants
php
réutilisables
quelle
utilité
pear
utile
tout
développeur
php
allons
surtout
utiliser
module
db
database
couche
abstraction
accès
base
données
hétérogénéité
moyens
accès
base
données
problèmes
plus
gênants
php
problème
vient
fait
exemple
fonctions
permettant
accès
base
postgresql
différentes
celles
mysql
elles
toutes
différentes
celles
sqlite
etc
cela
effet
rendre
plus
difficile
migration
système
vers
autre
écrit
exemple
cours
site
utilisant
base
postgresql
voulez
transférer
chez
hébergeur
offre
mysql
free
exemple
seule
solution
reprendre
corriger
toutes
page
tous
appels
fonctions
concernant
postgresql
peut
avoir
beaucoup
couche
abstraction
permet
éviter
problème
tous
accès
base
données
passent
syntaxe
quelle
base
données
débrouille
adapter
base
données
utilisée
changer
base
données
passer
postgresql
mysql
exemple
général
modifier
ligne
celle
donne
paramètres
base
données
utilisée
trouverez
web
documentation
français
pear
particulier
module
peardb
utiliser
peardb
fonctions
peardb
utilisables
programme
doit
commencer
require
once
db
php
connecter
base
données
trouverez
plus
détails
page
introduction
dsn
première
action
avant
utiliser
base
données
connecter
http
developpeur
journaldunet
com
tutoriel
php
php
pear
shtm
http
developpeur
journaldunet
com
semble
php
réglé
problème
utiliserons
php
existe
autres
couches
abstraction
phplib
adodb
metatdata
etc
http
pear
php
net
manual
fr
http
pear
php
net
manual
fr
package
database
php
http
pear
php
net
manual
fr
package
database
db
intro
dsn
php
chapitre
peardb
présentation
cela
faut
définir
ds
data
source
name
donnera
tous
renseignements
base
données
utiliser
nom
utilisateur
mot
passe
machine
hébergeant
serveur
type
sgbd
etc
syntaxe
légèrement
simplifiée
suivante
type
bd
utilisateur
mot
passe
machine
base
données
option
valeur
exemple
base
postgresql
pgsql
utilisateur
mot
passe
localhost
base
base
sqlite
sous
linux
sqlite
chemin
complet
vers
fichier
db
mode
base
sqlite
sous
windows
sqlite
chemin
complet
vers
fichier
db
mode
suffit
ensuite
exécuter
commande
db
çù
db
connect
dsn
nom
variable
db
sans
importance
variable
pouvez
donner
nom
plaît
faut
seulement
garder
esprit
faut
conserver
variable
quel
nom
permettra
accéder
base
données
fonctions
chapitres
suivants
gestion
erreurs
cas
erreur
après
toute
utilisation
fonction
peardb
compris
tentative
connexion
peut
être
utile
vérifier
aucune
erreur
produite
if
pear
iserror
db
echo
hr
mümessage
standard
db
getmessage
hr
message
dbms
utilisateur
db
getuserinfo
hr
message
dbms
débogage
db
getdebuginfo
hr
exit
choisir
message
paraît
intéressant
afficher
application
peut
utiliser
gestion
erreurs
écrire
programme
plus
portable
écrivez
programme
php
voulez
utiliser
plusieurs
endroits
conditions
dif
férentes
salles
tp
chez
chez
hébergeur
etc
devrez
principe
modifier
programme
chaque
foi
transférez
site
autre
utilisation
peardb
réduit
nombre
modifications
faire
reste
toujours
dsn
adapter
cependant
pouvez
oublier
également
manipulation
utilisant
gestion
erreurs
db
db
connect
dsn
salles
tp
options
if
pear
iserror
db
db
db
connect
dsn
machine
options
if
pear
iserror
db
db
db
connect
dsn
hébergeur
options
if
pear
iserror
db
chapitre
peardb
présentation
echo
hr
connexion
impossible
hr
exit
exécuter
requête
syntaxe
simple
res
db
query
requête
valeur
renvoyée
rangée
ici
variable
res
résultat
exécution
requête
identifiant
propre
système
valeur
réelle
intéresse
permettra
accéder
résultats
grâce
fonctions
décrites
ci
dessous
accéder
résultats
requête
select
peardb
fournit
deux
fonctions
traiter
lignes
résultant
requête
fetchrow
fetchinto
fetchrow
fetchrow
retourne
rangée
exemple
utilisation
supposant
mode
défaut
récupération
db
fetchmode
ordered
voir
setfetchmode
while
row
res
fetchrow
echo
row
fetchinto
fetchinto
besoin
variable
assignera
référence
contenu
rangée
résultat
retournera
dbçok
exemple
utilisation
supposant
mode
défaut
récupération
db
fetchmode
ordered
voir
setfetchmode
while
res
fetchinto
row
echo
row
setfetchmode
commande
setfetchmode
configure
mode
récupération
défaut
utilisé
méthodes
fetch
get
utiliserons
deux
manières
existe
autres
allez
voir
page
consacrée
http
pear
php
net
manual
fr
package
database
db
db
result
fetchrow
php
http
pear
php
net
manual
fr
package
database
db
db
result
fetchinto
php
http
pear
php
net
manual
fr
package
database
db
db
common
setfetchmode
php
http
pear
php
net
manual
fr
package
database
db
db
common
setfetchmode
php
chapitre
peardb
présentation
setfetchmode
db
fetchmode
ordered
rangées
mises
tableau
ordonné
accède
numéro
setfetchmode
db
fetchmode
assoc
rangées
mises
tableau
associatif
accède
titre
colonne
bien
comprendre
différence
pouvez
utiliser
fonction
php
print
r
permet
afficher
tableau
entier
ainsi
programme
db
setfetchmode
db
fetchmode
ordered
sortie
tableau
ordonné
res
db
query
select
from
personne
requête
res
fetchinto
row
récupération
ère
ligne
echo
pre
affichage
préformaté
print
r
row
affichage
ligne
tableau
echo
pre
fin
affichage
préformaté
produira
affichage
array
çù
kuzbidon
ginette
çù
çù
çù
çù
tandis
celui
ci
db
setfetchmode
db
fetchmode
assoc
sortie
tableau
associatif
res
db
query
select
from
personne
requête
res
fetchinto
row
récupération
ère
ligne
echo
pre
affichage
préformaté
print
r
row
affichage
ligne
tableau
echo
pre
fin
affichage
préformaté
produira
affichage
array
codepersonne
çù
nom
kuzbidon
prenom
ginette
numerodanslarue
refrue
tel
fax
email
peut
également
utiliser
constantes
db
fetchmode
ordered
db
fetchmode
assoc
directement
fonctions
fetchrow
fetchinto
comme
exemple
row
res
fetchrow
db
fetchmode
assoc
res
fetchinto
row
db
fetchmode
ordered
http
fr
php
net
manual
fr
function
print
r
php
chapitre
peardb
présentation
peardb
informations
requêtes
chapitre
provient
pear
db
résultats
quatre
manières
récupérer
informations
intéressantes
jeu
résultats
numrows
numrows
retourne
nombre
lignes
disponibles
jeu
résultats
issu
requête
select
php
foi
objet
db
valide
nommé
db
res
db
query
select
bla
bla
echo
res
numrows
numcols
numcols
retourne
nombre
colonnes
disponibles
jeu
résultats
issu
requête
select
php
foi
objet
db
valide
nommé
db
res
db
query
select
bla
bla
echo
res
numcols
affectedrows
affectedrows
retourne
nombres
lignes
affectées
requête
type
insert
update
delete
php
souvenez
requête
retourne
objet
résultats
db
query
delete
bla
bla
echo
effacé
db
affectedrows
clients
tableinfo
tableinfo
retourne
tableau
associatif
contenant
informations
colonnes
issues
résultat
requête
type
select
php
foi
objet
db
valide
nommé
db
res
db
query
select
bla
bla
print
r
res
tableinfo
http
pear
php
net
manual
fr
package
database
db
intro
fetch
php
http
pear
php
net
manual
fr
package
database
db
db
result
numrows
php
http
pear
php
net
manual
fr
package
database
db
db
result
numcols
php
http
pear
php
net
manual
fr
package
database
db
db
common
affectedrows
php
http
pear
php
net
manual
fr
package
database
db
db
common
tableinfo
php
chapitre
peardb
présentation
chapitre
dbx
chapitre
figure
ici
guise
témoignage
préférable
utiliser
pdo
accès
base
données
chapitre
dbx
texte
extrait
xxvii
fonctions
dbx
chapitre
manuel
php
php
net
module
dbx
module
abstraction
base
données
db
database
base
données
x
toutes
base
supportées
fonctions
dbx
permettent
accéder
toutes
base
supportées
convention
fonctions
dbx
elles
mêmes
interfacent
directement
base
données
interfacent
modules
utilisées
supporter
base
pouvoir
utiliser
base
données
module
dbx
module
doit
être
lié
chargé
php
module
base
données
doit
être
supporté
module
dbx
actuellement
base
suivantes
supportées
autres
suivront
frontbase
disponible
depuis
php
microsoft
sql
server
mysql
odbc
postgresql
sybase
ct
disponible
depuis
php
oracle
disponible
depuis
php
sqlite
php
quelle
utilité
hétérogénéité
moyens
accès
base
données
problèmes
plus
gênants
php
problème
vient
fait
exemple
fonctions
permettant
accès
base
postgresql
différentes
celles
mysql
elles
toutes
différentes
celles
sqlite
etc
cela
effet
rendre
plus
difficile
migration
système
vers
autre
écrit
exemple
cours
site
utilisant
base
postgresql
voulez
transférer
chez
hébergeur
offre
mysql
free
exemple
seule
solution
reprendre
corriger
toutes
page
tous
appels
fonctions
concernant
postgresql
peut
avoir
beaucoup
couche
abstraction
permet
éviter
problème
tous
accès
base
données
passent
syntaxe
quelle
base
données
débrouille
adapter
base
données
utilisée
changer
base
données
passer
postgresql
mysql
exemple
général
modifier
ligne
celle
donne
paramètres
base
données
utilisée
connecter
base
données
trouverez
plus
détails
page
dbx
connect
manuel
php
première
action
avant
utiliser
base
données
connecter
suffit
cela
exécuter
commande
db
dbx
connect
type
base
machine
héberge
base
nom
base
http
fr
php
net
manual
fr
ref
dbx
php
http
fr
php
net
existe
autres
couches
abstraction
phplib
adodb
metadata
pear
db
etc
http
fr
php
net
manual
fr
function
dbx
connect
php
http
fr
php
net
manual
fr
index
php
chapitre
dbx
nom
utilisateur
mot
passe
nom
variable
db
sans
importance
variable
pouvez
donner
nom
plaît
faut
seulement
garder
esprit
faut
conserver
variable
quel
nom
permettra
accéder
base
données
fonctions
chapitres
suivants
type
base
quant
valeur
parmi
dbx
mysql
dbx
odbc
dbx
pgsql
dbx
mssql
dbx
fbsql
dbx
sybasect
dbx
oci
dbx
sqlite
exécuter
requête
trouverez
plus
information
page
dbx
query
manuel
php
syntaxe
simple
res
dbx
query
db
requête
valeur
renvoyée
rangée
ici
variable
res
résultat
exécution
requête
identifiant
propre
système
valeur
réelle
intéresse
permettra
accéder
résultats
grâce
fonctions
décrites
ci
dessous
nombre
lignes
colonnes
requête
select
peut
facilement
obtenir
nombre
lignes
colonnes
résultat
requête
type
select
result
dbx
query
db
select
id
from
table
echo
result
rows
nombre
lignes
echo
result
cols
nombre
champs
accéder
résultats
requête
select
result
résultat
valide
renvoyé
dbx
query
result
data
tableau
dimensions
contient
résultats
premier
indice
concerne
lignes
deuxième
concerne
colonnes
accès
nom
colonnes
exemple
result
dbx
query
db
select
from
ville
foreach
result
data
row
echo
row
codepostal
row
ville
br
accès
numéro
colonnes
exemple
result
dbx
query
db
select
from
ville
foreach
result
data
row
for
i
i
result
cols
i
echo
row
i
echo
br
http
fr
php
net
manual
fr
function
dbx
query
php
chapitre
dbx
accès
numéro
lignes
numéro
colonnes
exemple
result
dbx
query
db
select
from
ville
for
result
rows
for
i
i
result
cols
i
echo
result
data
i
echo
br
chapitre
dbx
chapitre
exploration
contenu
répertoire
corrigés
exercices
chapitre
trouvent
chapitre
notions
nécessaires
php
exploration
répertoire
première
fonction
connaître
opendir
destinée
être
utilisée
fonctions
readdir
closedir
programme
suivant
opendir
php
affiche
contenu
répertoire
mnt
php
dir
opendir
mnt
while
file
readdir
dir
echo
file
closedir
dir
également
excellente
application
utilisation
structure
while
extraction
sous
chaîne
caractères
souvent
nécessaire
tester
partie
chaîne
caractères
faut
pouvoir
isoler
fait
fonction
substr
voici
quelques
exemples
résultats
voir
résultat
produit
substr
php
php
echo
substr
abcdef
br
retourne
bcdef
echo
substr
abcdef
br
retourne
bcd
echo
substr
abcdef
br
retourne
f
echo
substr
abcdef
br
retourne
ef
echo
substr
abcdef
br
retourne
echo
substr
abcdef
br
retourne
bcde
premier
paramètre
chaîne
doit
extraire
partie
deuxième
paramètre
indique
position
lettre
va
commencer
extraction
négatif
cela
indique
compte
partir
fin
chaîne
troisième
paramètre
mentionné
va
jusque
fin
chaîne
présent
indique
nombre
lettres
prendre
notions
nécessaires
html
image
cliquables
comment
faire
sorte
cliquant
image
obtienne
résultat
cliquant
mot
tout
simplement
faisant
chose
image
texte
http
fr
php
net
manual
fr
function
opendir
php
http
fr
php
net
manual
fr
function
readdir
php
http
fr
php
net
manual
fr
function
closedir
php
http
fr
php
net
manual
fr
function
substr
php
http
grappa
univ
lille
fr
polys
php
exemples
substr
php
chapitre
exploration
contenu
répertoire
transformer
mot
lien
suffit
inclure
entre
ça
href
fera
chose
image
ainsi
écrire
href
simple
php
img
src
mini
rpb
jpg
effet
afficher
image
mini
rpb
jpg
tout
faisant
sorte
clique
dessus
arrive
page
lien
affiche
image
plutôt
page
html
php
suffit
mettre
lien
adresse
image
lieu
adresse
page
exercices
tous
exercices
suivent
faire
répertoire
contiendra
image
autres
choses
aussi
pourquoi
ainsi
sous
répertoire
contiendra
mêmes
image
réduction
onglets
thumbnails
anglais
première
version
programme
affiche
image
trouvées
deuxième
version
programme
affiche
onglets
font
liens
vers
vraies
image
troisième
version
programme
affiche
onglets
font
liens
vers
page
contenant
vraies
image
cadre
version
parfaite
programme
affiche
onglets
tableau
régulier
font
liens
vers
page
contenant
vraies
image
cadre
http
grappa
univ
lille
fr
polys
php
exemples
simple
php
http
grappa
univ
lille
fr
polys
php
exemples
thumb
php
http
grappa
univ
lille
fr
polys
php
exemples
thumbplus
php
http
grappa
univ
lille
fr
polys
php
exemples
parfait
php
chapitre
news
corrigés
exercices
chapitre
trouvent
chapitre
allons
terminer
tour
horizon
php
mini
projet
but
afficher
articles
presse
différents
domaines
pourrez
trouver
exemple
internet
présentation
articles
rangés
chacun
fichier
nom
fichiers
composé
trois
parties
lettres
définissent
domaine
inf
informatique
msc
miscalaneous
divers
autrement
dit
entre
autres
catégories
sci
science
chiffres
forment
fait
numéro
ordre
fichier
etc
extension
jnl
exemple
inf
jnl
inf
jnl
inf
jnl
inf
jnl
inf
jnl
msc
jnl
msc
jnl
sci
jnl
sci
jnl
sci
jnl
etc
chaque
fichier
contiendra
texte
sans
codes
html
php
première
ligne
devra
obligatoirement
être
titre
article
fichiers
inf
jnl
contient
exemple
xenux
site
simple
débutant
xenux
fr
st
nouveau
site
pressés
linux
sans
chichi
sans
blabla
sait
va
dès
début
lecture
article
intéressant
ça
marche
bientôt
travail
site
réaliser
caractéristiques
suivantes
chaque
page
devra
aller
chercher
fichiers
nécessaires
répertoire
liste
toute
faite
articles
suffit
copier
fichier
article
pris
compte
inspirez
fait
cours
exploration
contenu
répertoire
chapitre
devez
réaliser
page
listenoms
php
affiche
noms
fichiers
devez
réaliser
page
identique
précédente
telle
noms
fichiers
liens
vers
affichage
fichiers
listeliens
php
http
grappa
univ
lille
fr
polys
php
exemples
news
http
grappa
univ
lille
fr
polys
php
exemples
news
listenoms
php
http
grappa
univ
lille
fr
polys
php
exemples
news
listeliens
php
chapitre
news
devez
réaliser
page
affiche
texte
tous
articles
uns
sous
autres
affichetout
php
obligés
soigner
présentation
exercices
suivants
devez
réaliser
page
affichetitre
php
affiche
uniquement
titres
articles
devez
réaliser
page
identique
précédente
laquelle
titres
affichés
liens
vers
articles
correspondants
affichetitrelien
php
devez
réaliser
page
affiche
proprement
articles
affichetout
br
php
articles
bien
séparés
ligne
horizontale
exemple
titres
bien
visibles
utilisant
exemple
construction
h
h
fins
paragraphe
texte
original
respectés
devez
réaliser
page
permet
choisir
sujet
intéresse
informatique
miscala
neous
divers
voir
section
description
affiche
articles
correspondants
sujet
php
page
menu
permette
aller
facilement
vers
chacune
page
revenir
tout
aussi
facilement
temps
temps
pourrez
également
ajouter
quelques
fonctions
travail
formulaire
permette
écrire
article
alors
ajouté
automatiquement
autres
moyen
corriger
article
existant
moyen
supprimer
article
existant
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetout
php
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetitre
php
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetitrelien
php
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetout
br
php
http
grappa
univ
lille
fr
polys
php
exemples
news
sujet
php
http
grappa
univ
lille
fr
polys
php
exemples
news
index
php
chapitre
fichiers
corrigés
exercices
chapitre
trouvent
chapitre
fichier
file
anglais
document
monde
windows
objet
permet
système
exploitation
aussi
programmes
supporte
enregister
informations
disque
dur
disquette
manipulations
base
utiliser
fichiers
faut
savoir
écrire
relire
ouverture
fermeture
fichier
avant
tout
accès
fichier
faut
ouvrir
fait
fonction
fopen
syntaxe
int
fopen
string
fichier
string
mode
int
signifie
fonction
renvoie
valeur
entière
fichier
nom
fichier
ouvrir
mode
décrit
façon
fichier
utilisé
valeurs
plus
courantes
r
ouvre
lecture
seule
place
pointeur
fichier
début
fichier
w
ouvre
écriture
seule
place
pointeur
fichier
début
fichier
réduit
taille
fichier
fichier
existe
tente
créer
ouvre
écriture
seule
place
pointeur
fichier
fin
fichier
fichier
existe
tente
créer
fichier
ouvert
fopen
fermé
fclose
écrire
fichier
étudierons
fichiers
texte
trouverez
plus
information
fichiers
aide
php
écrire
fichier
texte
faut
utiliser
fonction
fwrite
fonction
fputs
tous
points
identique
lire
contenu
fichier
deux
solutions
radicalement
différentes
file
déjà
vue
chapitre
tableaux
lit
fichier
seule
foi
rangeant
tableau
fgets
lit
fichier
ligne
ligne
impose
certain
contrôle
existe
autres
façons
lire
informations
rangées
fichier
aborderons
comme
précédemment
trouverez
plus
information
fichiers
aide
php
http
fr
php
net
manual
fr
function
fopen
php
http
fr
php
net
manual
fr
function
fclose
php
http
fr
php
net
manual
fr
html
ref
filesystem
html
http
fr
php
net
manual
fr
function
fwrite
php
http
fr
php
net
manual
fr
function
fputs
php
http
fr
php
net
manual
fr
function
file
php
http
fr
php
net
manual
fr
function
fgets
php
http
fr
php
net
manual
fr
html
ref
filesystem
html
chapitre
fichiers
exemple
allons
réaliser
mini
site
permet
ajouter
ligne
foi
fichier
tandis
page
permettra
afficher
contenu
fichier
formulaire
fichier
php
html
body
form
action
fichier
php
saisie
input
name
ligne
input
type
submit
form
body
html
agit
fait
simple
page
html
contenant
formulaire
traitement
formulaire
écriture
fichier
fichier
php
html
body
php
ouverture
fichier
fichier
txt
mode
append
ajout
identifiant
renvoyé
fp
utilisé
écriture
fermeture
fp
fopen
fichier
txt
écriture
valeur
reçue
plus
fin
ligne
fputs
fp
ligne
fermeture
fichier
fclose
fp
fichier
modifié
body
html
remarque
programme
fonctionne
faut
droits
écriture
fichier
fichier
txt
remarque
programme
devrait
être
laissé
accès
libre
réseau
importe
peut
utiliser
remplir
disque
écrivant
fichier
sans
contrôle
cela
version
proposée
exemple
désactivée
affichage
contenu
fichier
première
solution
fonction
file
fichier
php
html
body
php
f
file
fichier
txt
for
i
i
count
f
çiu
echo
f
i
br
body
html
deuxième
solution
fonction
fgets
fichier
php
html
body
php
fp
fopen
fichier
txt
r
while
fgets
fp
echo
br
fclose
fp
http
grappa
univ
lille
fr
polys
php
exemples
fichier
php
http
grappa
univ
lille
fr
polys
php
exemples
fichier
php
http
fr
php
net
manual
fr
function
file
php
http
grappa
univ
lille
fr
polys
php
exemples
fichier
php
http
fr
php
net
manual
fr
function
fgets
php
http
grappa
univ
lille
fr
polys
php
exemples
fichier
php
chapitre
fichiers
body
html
exercice
écrire
gestionnaire
annuaire
téléphonique
minimum
atteindre
page
formulaire
permet
saisir
nom
prénom
numéro
téléphone
per
sonne
appui
touche
envoi
enregistre
coordonnées
fichier
page
permette
présenter
proprement
liste
contacts
choix
sens
donner
mot
proprement
tableau
liste
etc
important
lisible
doit
pouvoir
passer
facilement
page
autre
liens
entre
page
page
accueil
améliorations
possibles
prises
compte
précède
réalisé
liste
affichée
pourra
être
mise
ordre
alphabétique
voir
fonction
sort
pourra
offrir
possibilité
supprimer
contact
pourra
offrir
possibilité
modifier
contact
http
fr
php
net
manual
fr
function
sort
php
chapitre
fichiers
iii
corrigés
exercices
chapitre
premiers
exercices
algorithmique
corrigés
trouverez
énoncés
exercices
chapitre
nombres
impairs
impair
php
html
body
php
for
i
i
i
i
echo
çi
body
html
punition
punition
php
html
body
php
for
i
i
çiu
echo
i
dois
faire
sauvegardes
régulières
br
body
html
factorielle
php
html
body
php
f
for
i
i
i
f
f
i
echo
f
body
html
multiplication
multiplication
php
html
body
php
for
i
i
i
r
i
echo
i
r
br
body
html
aussi
multiplicationbis
php
html
body
table
php
for
i
i
i
r
i
echo
tr
td
align
right
i
td
td
td
td
td
td
td
echo
td
align
right
r
td
tr
table
body
html
lignes
lignes
php
html
body
php
for
for
echo
http
grappa
univ
lille
fr
polys
php
exemples
impair
php
http
grappa
univ
lille
fr
polys
php
exemples
punition
php
http
grappa
univ
lille
fr
polys
php
exemples
factorielle
php
http
grappa
univ
lille
fr
polys
php
exemples
multiplication
php
http
grappa
univ
lille
fr
polys
php
exemples
multiplicationbis
php
http
grappa
univ
lille
fr
polys
php
exemples
lignes
php
chapitre
premiers
exercices
algorithmique
corrigés
echo
br
body
html
table
multiplication
totale
multiplicationtotale
php
html
body
table
border
border
php
ère
ligne
echo
tr
td
td
for
echo
th
th
echo
tr
toutes
lignes
for
ligne
echo
tr
th
th
for
r
echo
td
align
right
r
td
echo
tr
table
body
html
table
factorielles
tablefact
php
html
body
php
fonction
factorielle
function
fact
f
initialisation
variable
accumulation
for
i
i
çiu
ff
çù
çi
return
ff
for
x
x
x
echo
x
fact
x
br
body
html
demi
sapin
demisapin
php
html
body
php
function
triangle
for
for
i
i
i
echo
echo
br
for
triangle
body
html
coefficients
binôme
binome
php
html
body
php
http
grappa
univ
lille
fr
polys
php
exemples
multiplicationtotale
php
http
grappa
univ
lille
fr
polys
php
exemples
tablefact
php
http
grappa
univ
lille
fr
polys
php
exemples
demisapin
php
http
grappa
univ
lille
fr
polys
php
exemples
binome
php
chapitre
premiers
exercices
algorithmique
corrigés
function
fact
f
for
i
i
i
f
i
return
ff
function
cnp
p
return
fact
fact
p
fact
p
function
binome
echo
tr
for
i
i
i
echo
td
align
right
cnp
i
td
echo
tr
echo
table
for
i
i
çiu
binome
i
echo
table
body
html
fibonnacci
fibonnacci
php
html
body
php
function
fibonnacci
if
return
fmoins
fmoins
for
i
i
i
f
fmoins
fmoins
fmoins
fmoins
fmoins
f
return
ff
for
i
i
i
echo
çi
fibonnacci
i
br
body
html
peut
aussi
version
récursive
plus
belle
sans
doute
plus
facile
programmer
beaucoup
moins
efficace
pourquoi
fibonnacci
rec
php
html
body
php
function
fibonnacci
if
return
return
fibonnacci
fibonnacci
for
i
i
çiu
echo
çi
fibonnacci
i
br
body
html
fibonnacci
retour
fibonnacci
retour
php
html
body
php
function
fibonnacci
comme
exercice
précédent
http
grappa
univ
lille
fr
polys
php
exemples
fibonnacci
php
http
grappa
univ
lille
fr
polys
php
exemples
fibonnacci
rec
php
http
grappa
univ
lille
fr
polys
php
exemples
fibonnacci
retour
php
chapitre
premiers
exercices
algorithmique
corrigés
or
sqrt
echo
table
border
border
tr
th
ordre
th
th
rapport
th
echo
th
différence
th
tr
for
i
i
i
r
fibonnacci
i
fibonnacci
i
echo
tr
td
i
td
td
r
td
td
r
or
td
tr
body
html
afficher
cadre
x
pre
cadre
pre
php
html
body
pre
tt
php
k
max
for
i
i
max
i
echo
k
echo
for
i
i
max
i
echo
k
for
max
echo
echo
k
for
i
i
max
i
echo
k
echo
tt
pre
body
html
b
tableau
cadre
table
php
html
body
blockquote
table
border
border
tr
php
k
max
for
i
i
max
i
echo
td
k
td
echo
tr
for
i
i
max
i
echo
tr
td
k
td
for
max
echo
td
td
echo
td
k
td
tr
echo
tr
for
i
i
max
i
echo
td
k
td
tr
table
blockquote
body
html
tableau
additions
compléter
total
fixe
tableauadditionsfixe
php
body
html
h
additions
compléter
total
fixe
h
table
http
grappa
univ
lille
fr
polys
php
exemples
cadre
pre
php
http
grappa
univ
lille
fr
polys
php
exemples
cadre
table
php
http
grappa
univ
lille
fr
polys
php
exemples
tableauadditionsfixe
php
chapitre
premiers
exercices
algorithmique
corrigés
php
nombre
nombre
lignes
total
total
atteindre
for
i
i
nombre
i
connu
rand
total
nombre
affiché
echo
tr
th
i
td
echo
td
align
right
connu
td
echo
td
td
echo
td
align
center
çäëçëëëëëëë
td
echo
td
align
right
total
td
tr
table
body
html
b
total
variable
tableauadditionsvariable
php
body
html
h
additions
compléter
total
variable
h
table
php
nombre
nombre
lignes
min
borne
inférieure
totaux
possibles
max
borne
supérieure
totaux
possibles
for
i
i
nombre
çiu
total
rand
min
max
connu
rand
total
echo
tr
th
i
td
echo
td
align
right
connu
td
echo
td
td
echo
td
align
center
çäëçëëëëëëë
td
echo
td
align
right
total
td
tr
table
body
html
http
grappa
univ
lille
fr
polys
php
exemples
tableauadditionsvariable
php
chapitre
premiers
exercices
algorithmique
corrigés
chapitre
premiers
formulaires
php
corrigés
trouverez
énoncés
exercices
chapitre
bonjour
machin
xx
ans
formulaire
traitement
html
html
body
form
method
get
action
traitement
php
table
tr
td
align
right
nom
td
td
input
name
nom
td
tr
tr
td
align
right
âge
td
td
input
name
age
td
tr
tr
td
align
center
colspan
input
type
submit
value
envoyer
tr
table
form
body
html
traitement
traitement
php
html
body
php
echo
bonjour
nom
çage
ans
body
html
montpellier
formulaire
traitement
html
html
body
form
method
get
action
traitement
php
table
tr
td
align
right
distance
td
td
input
name
distance
td
tr
tr
td
align
right
heures
jour
td
td
input
name
heures
td
tr
tr
td
align
right
jours
td
td
input
name
jours
td
tr
tr
td
align
center
colspan
input
type
submit
value
envoyer
tr
table
form
body
html
traitement
traitement
php
html
body
php
echo
bébé
parcouru
distance
km
çà
raison
heures
heures
jour
pendant
jours
jours
br
vitesse
distance
heures
jours
km
h
body
html
bonjour
truc
formulaire
traitement
html
html
body
form
method
get
action
traitement
php
table
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
chapitre
premiers
formulaires
php
corrigés
tr
td
align
right
sexe
td
td
input
name
sexe
type
radio
value
checked
checked
masculin
input
name
sexe
type
radio
value
f
féminin
td
tr
tr
td
align
right
nom
td
td
input
name
nom
td
tr
tr
td
align
center
colspan
input
type
submit
value
envoyer
tr
table
form
body
html
traitement
traitement
php
html
body
php
if
sexe
echo
bonjour
monsieur
nom
else
echo
bonjour
madame
nom
body
html
permis
chasse
formulaire
traitement
html
html
body
form
method
get
action
traitement
php
table
tr
td
align
right
poules
td
td
input
name
poules
td
tr
tr
td
align
right
chiens
td
td
input
name
chiens
td
tr
tr
td
align
right
vaches
td
td
input
name
vaches
td
tr
tr
td
align
right
amis
td
td
input
name
amis
td
tr
tr
td
align
center
colspan
input
type
submit
value
envoyer
tr
table
form
body
html
traitement
traitement
php
html
body
php
echo
tué
echo
ul
echo
li
poules
poules
li
echo
li
chiens
chiens
li
echo
li
vaches
vaches
li
echo
li
amis
amis
li
echo
ul
perdu
poules
chiens
vaches
amis
echo
perdu
poules
p
chiens
p
vaches
p
amis
perdu
points
br
permis
floor
perdu
if
permis
echo
b
permis
encore
valide
attention
b
else
echo
b
épuisé
permis
permis
devez
payer
permis
francs
b
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
traitement
html
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
chapitre
premiers
formulaires
php
corrigés
body
html
calculatrice
formulaire
traitement
traitement
php
html
body
liste
déroulante
br
form
method
get
action
traitement
php
input
name
size
select
name
option
value
option
option
value
option
option
value
option
option
value
option
select
input
name
b
size
br
input
type
submit
value
envoyer
form
hr
boutons
radios
br
form
method
get
action
traitement
php
table
tr
td
input
name
size
td
td
input
type
radio
name
value
checked
checked
br
input
type
radio
name
value
br
input
type
radio
name
value
br
input
type
radio
name
value
td
td
input
name
b
size
td
tr
tr
td
colspan
align
center
input
type
submit
value
envoyer
td
table
form
hr
php
if
isset
echo
résultat
calcul
précédent
b
if
echo
b
elseif
echo
b
elseif
echo
b
else
echo
b
body
html
table
multiplication
demande
traitement
php
html
head
style
type
text
css
td
text
align
right
style
head
body
form
action
traitement
php
choisissez
table
select
name
table
php
for
i
i
çiu
echo
option
if
table
i
echo
selected
selected
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
chapitre
premiers
formulaires
php
corrigés
echo
i
option
select
br
choisissez
nombre
lignes
select
name
lignes
php
for
i
i
çiu
echo
option
if
lignes
i
echo
selected
selected
echo
i
option
select
br
input
type
submit
value
afficher
table
choisie
form
àp
php
if
isset
table
utilisé
formulaire
echo
table
for
lignes
afficher
lignes
table
echo
tr
td
td
td
×
td
td
table
td
td
td
td
table
td
tr
echo
table
body
html
mots
passe
traitement
php
html
body
form
action
exocontr
php
tapez
mot
passe
input
type
password
name
pass
input
type
submit
form
php
if
isset
pass
if
pass
premier
mot
passe
autorisé
echo
h
bienvenue
utilisateur
principal
h
elseif
pass
deux
deuxième
mot
passe
autorisé
echo
h
bienvenue
utilisateur
base
h
else
mot
passe
non
reconnu
echo
h
style
color
red
background
yellow
text
align
center
accès
interdit
h
body
html
compléter
additions
addition
php
html
body
remplis
case
bon
nombre
calcul
correct
php
ok
if
isset
echo
viens
essayer
b
br
if
b
echo
exact
bravo
ok
else
echo
faux
essaie
encore
else
b
rand
rand
b
if
ok
form
method
post
php
echo
input
size
name
php
echo
bb
http
grappa
univ
lille
fr
polys
php
exemples
traitement
php
http
grappa
univ
lille
fr
polys
php
exemples
addition
php
chapitre
premiers
formulaires
php
corrigés
input
type
submit
value
verifier
input
type
hidden
name
value
php
echo
çù
input
type
hidden
name
b
value
php
echo
bb
çù
form
php
echo
form
method
post
input
type
submit
value
recommencer
form
body
html
ordinateur
choisit
devinez
devinette
php
html
body
h
devinette
h
h
devez
deviner
nombre
programme
choisi
h
php
jeu
commencé
if
isset
limite
première
foi
if
isset
guess
choisir
nombre
deviner
guess
rand
limite
premier
essai
nbessai
echo
nombre
choisi
entre
limite
br
proposition
traiter
if
isset
proposition
proposition
proposition
echo
venez
proposer
proposition
joueur
trouvé
if
proposition
guess
echo
h
bravo
trouvé
nbessai
essais
h
echo
form
method
post
echo
input
type
submit
value
recommencer
echo
form
else
proposition
çäguess
trouvé
if
proposition
guess
proposition
trop
petite
echo
trop
petit
p
if
proposition
guess
proposition
trop
grande
echo
trop
grand
p
fin
if
proposition
guess
if
isset
guess
proposition
çäguess
echo
nbessai
sup
nbessai
er
ème
sup
essai
p
table
tr
td
form
method
post
proposez
input
name
proposition
size
input
type
hidden
name
guess
value
php
echo
guess
çù
input
type
hidden
name
limite
value
php
echo
limite
çù
input
type
hidden
name
nbessai
value
php
echo
nbessai
çù
input
type
submit
value
tester
proposition
form
td
td
form
method
post
input
type
submit
value
abandonner
form
td
tr
table
php
fin
if
isset
guess
proposition
çäguess
else
commence
jeu
form
method
post
choisissez
limite
difficulté
select
name
limite
option
selected
selected
option
http
grappa
univ
lille
fr
polys
php
exemples
devinette
php
chapitre
premiers
formulaires
php
corrigés
option
option
option
option
option
option
select
input
type
submit
value
commencer
form
php
body
html
choisissez
ordinateur
devine
devinette
php
html
body
h
devinette
h
h
programme
va
deviner
nombre
choisi
h
php
première
exécution
if
isset
post
min
demander
selectionner
limite
sélectionnez
limite
supérieure
pui
quand
choisi
nombre
non
nul
dois
deviner
sans
dire
cliquez
em
commencer
em
p
form
method
post
limite
supérieure
select
name
max
option
selected
selected
option
option
option
option
option
option
select
input
type
hidden
name
min
value
input
type
hidden
name
nbessai
value
input
type
submit
value
commencer
form
php
else
nbessai
get
nbessai
if
post
result
nombre
trouvé
echo
h
gagné
post
nbessai
essais
h
elseif
post
result
trop
grand
réduit
borne
supérieure
max
post
test
elseif
post
result
trop
petit
réduit
borne
inférieure
min
post
test
trouvé
if
post
result
çäë
if
post
min
post
max
bornes
égales
triche
echo
h
triché
h
else
nouvelle
proposition
test
floor
post
min
post
max
if
post
max
post
min
test
post
max
echo
table
tr
td
align
center
colspan
echo
post
nbessai
sup
post
nbessai
er
ème
sup
essai
echo
nombre
b
post
test
b
td
tr
td
form
method
post
input
type
hidden
name
result
value
input
type
hidden
name
test
value
php
echo
post
test
çù
input
type
hidden
name
min
value
php
echo
post
min
çù
input
type
hidden
name
max
value
php
echo
post
max
çù
input
type
hidden
name
nbessai
value
php
echo
post
nbessai
çù
input
type
submit
value
trop
petit
form
td
td
form
method
post
http
grappa
univ
lille
fr
polys
php
exemples
devinette
php
chapitre
premiers
formulaires
php
corrigés
input
type
hidden
name
result
value
input
type
hidden
name
test
value
php
echo
post
test
çù
input
type
hidden
name
min
value
php
echo
post
min
çù
input
type
hidden
name
max
value
php
echo
post
max
çù
input
type
hidden
name
nbessai
value
php
echo
post
nbessai
çù
input
type
submit
value
g
g
é
form
td
td
form
method
post
input
type
hidden
name
test
value
php
echo
post
test
çù
input
type
hidden
name
result
value
input
type
hidden
name
min
value
php
echo
post
min
çù
input
type
hidden
name
max
value
php
echo
post
max
çù
input
type
hidden
name
nbessai
value
php
echo
post
nbessai
çù
input
type
submit
value
trop
grand
form
td
tr
table
php
if
isset
post
min
form
method
post
input
type
submit
value
recommencer
form
php
body
html
pipotron
pipotron
php
html
body
php
if
isset
post
pipo
echo
stripslashes
hr
post
pipo
post
pipo
post
pipo
post
pipo
post
pipo
post
pipo
post
pipo
post
pipo
hr
form
method
post
select
name
pipo
option
option
option
considérant
option
option
mène
option
option
égard
option
option
vu
option
option
concerne
option
option
cas
particulier
option
option
quelle
option
option
fait
option
option
tant
durera
option
select
select
name
pipo
option
situation
option
option
conjoncture
option
option
crise
option
option
inertie
option
option
impasse
option
option
extrémité
option
option
dégradation
moeurs
option
option
sinistrose
option
option
dualité
situation
option
option
baisse
confiance
option
select
select
name
pipo
option
présente
option
option
actuelle
option
option
occupe
option
http
grappa
univ
lille
fr
polys
php
exemples
pipotron
php
chapitre
premiers
formulaires
php
corrigés
option
nôtre
option
option
induite
option
option
conjoncturelle
option
option
contemporaine
option
option
fin
siècle
option
option
société
option
option
derniers
temps
option
select
select
name
pipo
option
convient
option
option
faut
option
option
doit
option
option
préférable
option
option
intéressant
option
option
faut
négliger
option
option
peut
passer
option
option
nécessaire
option
option
bon
option
option
faut
toute
urgence
option
select
select
name
pipo
option
étudier
option
option
examiner
option
option
négliger
option
option
prendre
considération
option
option
anticiper
option
option
imaginer
option
option
préoccuper
option
option
intéresser
option
option
avoir
esprit
option
option
remémorer
option
select
select
name
pipo
option
toutes
option
option
chacune
option
option
majorité
option
option
toutes
option
option
ensemble
option
option
somme
option
option
totalité
option
option
globalité
option
option
toutes
option
option
certaines
option
select
select
name
pipo
option
solutions
option
option
issues
option
option
problématiques
option
option
voies
option
option
alternatives
option
option
solutions
option
option
issues
option
option
problématiques
option
option
voies
option
option
alternatives
option
select
select
name
pipo
option
envisageables
option
option
possibles
option
option
déjà
possession
option
option
offrant
option
option
bon
sens
option
option
envisageables
option
option
possibles
option
option
déjà
possession
option
option
offrant
option
option
bon
sens
option
select
input
type
submit
form
body
html
chapitre
chaînes
caractères
corrigé
trouverez
énoncé
exercice
chapitre
identite
php
html
body
h
premiers
essai
contrôle
identité
h
php
if
trim
strtolower
nom
trim
strtolower
atte
trim
strtolower
prenom
trim
strtolower
tom
trim
strtolower
password
trim
strtolower
rouge
echo
bienvenue
chez
tom
atte
br
else
sortie
provisoire
mode
php
écrire
texte
html
pur
hr
veuillez
identifier
svp
p
àà
form
method
post
action
identite
php
nom
input
name
nom
br
prénom
input
name
prenom
br
mot
passe
input
type
password
name
password
br
input
type
submit
br
form
hr
php
retour
mode
php
fermer
else
body
html
http
grappa
univ
lille
fr
polys
php
exemples
identite
php
chapitre
chaînes
caractères
corrigé
chapitre
exercices
tableaux
corrigés
trouverez
énoncés
exercices
chapitre
écrire
programme
lit
fichier
construire
page
web
contenant
liste
liens
hypertextes
tableau
php
html
head
title
utilisation
tableaux
title
head
body
ul
php
liens
file
tableau
txt
for
i
i
count
liens
i
echo
li
href
liens
i
liens
i
li
ul
body
html
exercice
foi
chaque
ligne
comprend
aussi
description
site
pointé
sépara
tion
assuré
chaîne
tableau
php
html
body
ul
php
liens
file
tableau
txt
for
i
i
count
liens
i
parties
explode
liens
i
echo
li
href
parties
parties
li
ul
body
html
exercice
foi
chaque
description
adresse
correspondante
deux
lignes
consécutives
tableau
php
html
body
ul
php
liens
file
tableau
txt
for
i
i
count
liens
i
i
echo
li
href
liens
i
liens
i
li
ul
body
html
donne
liste
personnes
chaque
ligne
composée
ordre
identifiant
nombre
prénom
nom
mot
passe
écrire
page
web
donne
sélectionner
personnes
affiche
ensuite
mot
passe
tableau
php
html
body
php
personnes
file
tableau
txt
for
i
i
count
personnes
çiu
parties
explode
personnes
i
code
parties
prenom
code
parties
nom
code
parties
password
code
parties
form
action
tableau
php
method
post
select
name
php
reset
nom
while
list
code
each
nom
echo
option
value
code
prenom
code
strtoupper
option
select
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
http
grappa
univ
lille
fr
polys
php
exemples
tableau
php
chapitre
exercices
tableaux
corrigés
input
type
submit
value
quel
mot
passe
form
php
if
isset
echo
br
hr
mot
passe
prenom
strtoupper
nom
password
body
html
chapitre
exercices
fichiers
corrigés
trouverez
énoncés
exercices
chapitre
index
php
page
accueil
agit
fait
page
html
pur
sans
php
html
body
h
premier
projet
licence
aes
h
h
accueil
h
ul
li
href
liste
php
liste
contacts
autre
ça
href
liste
php
présentation
contacts
li
li
saisir
href
saisie
php
nouveau
contact
li
ul
body
html
liste
php
liste
contacts
html
body
h
premier
projet
licence
aes
h
h
liste
contacts
h
ul
php
lecture
fichier
f
file
liste
txt
trier
nom
sort
f
parcours
liste
for
i
i
count
f
çiu
découpage
ligne
suivant
explode
f
i
affichage
après
découpage
echo
li
nom
br
prénom
br
téléphone
ul
href
index
php
accueil
body
html
liste
php
autre
liste
contacts
html
body
h
premier
projet
licence
aes
h
h
liste
contacts
h
table
border
border
tr
th
nom
th
th
prénom
th
th
téléphone
th
tr
php
lecture
fichier
f
file
liste
txt
trier
nom
sort
f
parcours
liste
for
i
i
count
f
çiu
découpage
ligne
suivant
explode
f
i
affichage
après
découpage
echo
tr
td
td
td
td
td
td
tr
table
href
index
php
accueil
body
html
saisie
php
formulaire
saisie
agit
fait
page
html
pur
sans
php
html
body
h
premier
projet
licence
aes
h
h
saisie
nouveau
contact
h
http
grappa
univ
lille
fr
polys
php
exemples
index
php
http
grappa
univ
lille
fr
polys
php
exemples
liste
php
http
grappa
univ
lille
fr
polys
php
exemples
liste
php
http
grappa
univ
lille
fr
polys
php
exemples
saisie
php
chapitre
exercices
fichiers
corrigés
form
action
enregistrer
php
nom
input
name
nom
br
prénom
input
name
prenom
br
téléphone
input
name
telephone
br
input
type
submit
form
href
index
php
accueil
body
html
enregistrer
php
enregistrer
nouveau
contact
html
body
h
premier
projet
licence
aes
h
h
enregistrement
nouveau
contact
h
php
ouverture
fichier
ajout
fp
fopen
liste
txt
écriture
nouvelle
ligne
fputs
fp
nom
prenom
telephone
fermeture
fichier
fclose
fp
affichage
vérification
echo
nouveau
contact
enregistré
ul
li
li
nom
nom
li
li
prénom
prenom
li
li
téléphone
telephone
li
ul
href
index
php
accueil
body
html
http
grappa
univ
lille
fr
polys
php
exemples
enregistrer
php
chapitre
exploration
répertoire
corrigés
trouverez
énoncés
exercices
chapitre
simple
php
html
body
h
affiche
image
trouvées
h
php
dir
opendir
while
file
readdir
dir
if
substr
file
jpg
echo
img
src
file
closedir
dir
body
html
thumb
php
html
body
h
affiche
onglets
font
liens
vers
vraies
images
h
php
dir
opendir
mini
while
file
readdir
dir
if
substr
file
jpg
echo
href
file
img
src
mini
file
closedir
dir
body
html
thumbplus
php
html
body
h
affiche
onglets
font
liens
vers
page
contenant
vraies
image
cadre
h
php
dir
opendir
mini
while
file
readdir
dir
if
substr
file
jpg
echo
href
image
php
image
file
img
src
mini
file
closedir
dir
body
html
parfait
php
html
body
h
affiche
onglets
tableau
régulier
font
liens
vers
page
contenant
vraies
image
cadre
h
table
border
border
php
nb
i
dir
opendir
mini
while
file
readdir
dir
if
substr
file
jpg
if
i
echo
tr
echo
td
href
image
php
image
file
img
src
mini
file
td
http
grappa
univ
lille
fr
polys
php
exemples
simple
php
http
grappa
univ
lille
fr
polys
php
exemples
thumb
php
http
grappa
univ
lille
fr
polys
php
exemples
thumbplus
php
http
grappa
univ
lille
fr
polys
php
exemples
parfait
php
chapitre
exploration
répertoire
corrigés
çiu
if
i
nb
echo
tr
i
closedir
dir
table
body
html
chapitre
news
corrigé
trouverez
énoncés
exercices
chapitre
accueil
index
php
html
body
h
news
h
h
menu
h
ul
li
liste
ça
href
listenoms
php
noms
fichiers
nouvelles
li
li
liste
ça
href
listeliens
php
liens
vers
fichiers
nouvelles
li
li
affichage
href
affichetout
php
toutes
nouvelles
li
li
affichage
ça
href
affichetitre
php
titres
nouvelles
li
li
affichage
href
affichetitrelien
php
titres
faisant
vers
nouvelles
li
li
affichage
href
affichetout
br
php
toutes
nouvelles
proprement
li
li
href
sujet
php
choix
sujet
li
ul
body
html
liste
noms
fichiers
nouvelles
listenoms
php
html
body
h
news
h
h
liste
noms
fichiers
nouvelles
h
ul
php
dir
opendir
while
file
readdir
dir
if
substr
file
jnl
echo
li
file
li
closedir
dir
ul
body
html
liste
liens
vers
fichiers
nouvelles
listeliens
php
html
body
h
news
h
h
liste
liens
vers
fichiers
nouvelles
h
ul
php
dir
opendir
while
file
readdir
dir
http
grappa
univ
lille
fr
polys
php
exemples
news
index
php
http
grappa
univ
lille
fr
polys
php
exemples
news
listenoms
php
http
grappa
univ
lille
fr
polys
php
exemples
news
listeliens
php
chapitre
news
corrigé
if
substr
file
jnl
echo
li
href
unenouvelle
php
f
file
file
li
closedir
dir
ul
body
html
page
nécessite
existence
page
unenouvelle
php
permet
afficher
contenu
nou
velle
html
body
php
require
f
body
html
affichage
toutes
nouvelles
affichetout
php
html
body
h
news
h
h
affichage
toutes
nouvelles
h
hr
php
dir
opendir
while
file
readdir
dir
if
substr
file
jnl
f
file
file
for
i
i
count
f
i
echo
f
i
echo
hr
closedir
dir
ul
body
html
affichage
titres
nouvelles
affichetitre
php
html
body
h
news
h
h
affichage
titres
nouvelles
h
ul
php
dir
opendir
while
file
readdir
dir
if
substr
file
jnl
f
file
file
echo
li
f
li
closedir
dir
ul
body
html
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetout
php
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetitre
php
chapitre
news
corrigé
affichage
titres
faisant
lien
vers
nouvelles
affichetitrelien
php
html
body
h
news
h
h
affichage
titres
faisant
lien
vers
nouvelles
h
ul
php
dir
opendir
while
file
readdir
dir
if
substr
file
jnl
f
file
file
echo
li
href
file
f
li
closedir
dir
ul
body
html
page
nécessite
existence
unenouvelle
php
affichage
toutes
nouvelles
proprement
affichetout
br
php
html
body
h
news
h
h
affichage
toutes
nouvelles
proprement
h
hr
php
dir
opendir
while
file
readdir
dir
if
substr
file
jnl
f
file
file
echo
h
f
h
for
i
i
count
f
i
echo
f
i
if
trim
f
i
echo
br
echo
hr
closedir
dir
body
html
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetitrelien
php
http
grappa
univ
lille
fr
polys
php
exemples
news
affichetout
br
php
chapitre
news
corrigé
choix
sujet
sujet
php
html
body
h
news
h
h
choix
sujet
h
form
action
sujet
php
select
name
sujet
option
value
sci
sciences
option
option
value
inf
informatique
option
option
value
msc
divers
option
select
input
type
submit
form
body
html
http
grappa
univ
lille
fr
polys
php
exemples
news
sujet
php
iv
études
cas
chapitre
études
cas
partie
contient
quelques
études
cas
peu
près
réalistes
réels
projets
demandés
étudiants
maîtrise
aes
teg
ème
année
iup
iies
ème
année
licence
miashs
plupart
basés
cas
réels
plus
souvent
modifiés
but
pédagogique
simplifier
situation
vraiment
trop
complexe
contraire
complexifier
situation
peu
trop
simpliste
exercice
application
cours
aucun
corrigé
projets
disponible
inutile
réclamer
chapitre
études
cas
chapitre
projet
disques
licence
miashs
ème
année
pouvez
consulter
page
originales
web
présentation
allez
devoir
créer
site
web
gére
contenu
discothèque
manipulerez
infor
mations
comme
nom
disque
leurs
années
parution
artistes
textes
chansons
etc
informations
accessibles
autres
personnes
devrez
aussi
gérer
droits
accès
site
web
fonctionnalités
générales
liste
disque
liste
chansons
chaque
disque
artiste
groupe
chaque
disque
possibilité
préciser
artistes
groupes
particuliers
chaque
chanson
compilations
duo
etc
genres
musicaux
langue
chaque
artiste
groupe
langue
chaque
chanson
auteur
chansons
paroles
chansons
appartenance
artiste
groupe
fonctionnalités
consultation
obtenir
liste
disque
caractéristiques
liste
chansons
obtenir
liste
artistes
rechercher
chanson
avoir
accès
quelques
statistiques
base
modification
données
accès
données
sensibles
indispensable
fonctionnalités
suivantes
protégées
authentification
utilisateur
plus
fonctionnalités
consultation
voir
ci
dessus
peuvent
être
protégées
mot
passe
désirez
site
alors
accès
exclusivement
privé
obligatoire
distinguera
deux
niveaux
autorisation
appelera
fort
faible
suite
niveau
faible
niveau
accessibles
données
sensibles
modifiées
informations
non
vitales
plupart
membres
confiance
accès
niveau
consultations
paroles
chansons
accés
privé
nécessaire
raisons
respect
droit
auteur
insertion
information
base
créer
artiste
genre
musical
disque
chanson
etc
http
grappa
univ
lille
fr
gonzalez
enseignement
bd
projetdisques
chapitre
projet
disques
niveau
fort
niveau
modifiées
informations
vitales
fonctionnement
site
seules
quelques
personnes
responsables
site
accès
niveau
gérer
utilisateurs
leurs
droits
créer
modifier
supprimer
modifier
supprimer
données
existantes
paroles
chanson
orthographe
noms
etc
base
données
analyse
présentée
ici
contenterons
donner
structure
base
tables
table
artiste
create
table
artiste
art
num
integer
not
null
primary
key
art
prenom
character
varying
art
nom
character
varying
art
groupe
character
varying
art
modif
timestamp
without
time
zone
default
current
timestamp
table
etat
create
table
etat
eta
num
integer
not
null
primary
key
eta
nom
character
varying
table
genre
create
table
genre
gen
num
integer
not
null
primary
key
gen
nom
character
varying
gen
modif
timestamp
without
time
zone
default
current
timestamp
table
droits
create
table
droits
dro
num
integer
not
null
primary
key
dro
nom
character
varying
dro
niveau
integer
table
langue
create
table
langue
lan
num
character
varying
not
null
primary
key
lan
nom
character
varying
table
langueartiste
create
table
langueartiste
laa
langue
character
varying
not
null
references
langue
lan
num
laa
artiste
integer
not
null
references
artiste
art
num
laa
maternelle
boolean
default
true
primary
key
laa
langue
laa
artiste
table
autorisations
create
table
autorisations
aut
login
character
varying
not
null
primary
key
aut
motdepasse
character
varying
aut
nom
character
varying
aut
prenom
character
varying
aut
droits
integer
references
droits
dro
num
table
chanson
create
table
chanson
cha
num
integer
not
null
primary
key
cha
titre
character
varying
chapitre
projet
disques
cha
genre
integer
references
genre
gen
num
cha
texte
character
varying
cha
libre
boolean
cha
modif
timestamp
without
time
zone
default
current
timestamp
table
languechanson
create
table
languechanson
lac
langue
character
varying
not
null
references
langue
lan
num
lac
chanson
integer
not
null
references
chanson
cha
num
lac
principale
boolean
default
true
not
null
primary
key
lac
langue
lac
chanson
lac
principale
table
membre
create
table
membre
mem
membre
integer
not
null
references
artiste
art
num
mem
groupe
integer
not
null
references
artiste
art
num
mem
debut
character
varying
not
null
mem
fin
character
varying
not
null
primary
key
mem
membre
mem
groupe
mem
debut
mem
fin
table
disque
create
table
disque
dis
num
integer
not
null
primary
key
dis
titre
character
varying
dis
artiste
integer
references
artiste
art
num
dis
annee
character
varying
dis
cddb
character
varying
dis
anneeachat
character
varying
dis
prixachat
numeric
dis
etat
integer
references
etat
eta
num
dis
perdu
boolean
default
false
disämodif
timestamp
without
time
zone
default
current
timestamp
table
interprete
create
table
interprete
int
artiste
integer
not
null
int
artiste
references
artiste
art
num
int
chanson
integer
not
null
references
chanson
cha
num
int
disque
integer
not
null
references
disque
dis
num
int
numero
integer
not
null
primary
key
int
artiste
int
chanson
int
disque
int
numero
table
ecrit
create
table
ecrit
ecr
artiste
integer
not
null
references
artiste
art
num
ecr
chanson
integer
not
null
references
chanson
cha
num
primary
key
ecr
artiste
ecr
chanson
chapitre
projet
disques
mld
chapitre
projet
inscriptions
licence
miashs
ème
année
pouvez
consulter
page
originales
web
présentation
allez
travailler
lille
lille
numérique
organise
stages
familiarisation
étudiants
ent
faut
application
permette
inscription
étudiants
lille
créneaux
horaires
précis
allez
venir
aide
allez
réaliser
application
fonctionnalités
générales
calendrier
créneaux
horaires
lesquels
peut
cliquer
possibilité
inscrire
créneau
choix
sans
authentification
nécessaire
nom
prénom
ufr
formation
numéro
étudiant
possibilité
suppression
inscription
étudiant
étudiant
peut
inscrire
seul
créneau
horaire
cas
erreur
devra
adresser
gestionnaire
adresse
figurera
site
vérification
numéro
étudiant
étudiant
déjà
inscrit
créneau
éviter
inscriptions
multiples
notification
calendrier
créneau
complet
fonctionnalités
calendrier
étendue
calendrier
paramétrée
automatiquement
fonction
séances
existantes
créneau
ferme
automatiquement
dès
seuil
atteint
seuil
paramétrable
gestionnaire
gestion
base
authentification
indispensable
créer
modifier
supprimer
séance
lister
tous
créneaux
imprimer
lister
tous
inscriptions
imprimer
pouvoir
fermer
créneau
éventuellement
ouvrir
nouveau
mention
groupe
complet
appa
raît
calendrier
modifier
supprimer
inscription
étudiant
créneau
pouvoir
facilement
vider
complètement
créneau
voire
tous
créneaux
utilisation
ultérieure
base
visualiser
liste
tous
créneaux
tri
créneau
nom
numéro
étudiant
année
ufr
possibilité
faire
export
tableur
base
données
analyse
présentée
ici
contenterons
donner
structure
base
http
grappa
univ
lille
fr
gonzalez
enseignement
technoweb
projetinscription
http
www
univ
lille
fr
fr
lille
numerique
http
www
univ
lille
fr
fr
lille
numerique
ent
chapitre
projet
inscriptions
mld
tables
table
ufr
contient
renseignements
ufr
create
table
ufr
ufr
num
integer
primary
key
ufr
nom
varchar
not
null
table
moniteur
contient
renseignements
moniteurs
encadrent
séances
chapitre
projet
inscriptions
create
table
moniteur
num
integer
primary
key
nom
varchar
not
null
prenom
varchar
table
salle
contient
renseignements
salles
déroulent
séances
create
table
salle
sal
num
integer
primary
key
sal
nom
varchar
not
null
sal
taille
integer
table
niveau
contient
renseignements
niveaux
études
étudiants
licence
ère
année
etc
create
table
niveau
niv
num
integer
primary
key
niv
nom
varchar
not
null
niv
ordre
integer
not
null
table
seance
contient
renseignements
séances
create
table
seance
sea
num
integer
primary
key
sea
jour
integer
not
null
seaëmois
integer
not
null
sea
annee
integer
not
null
sea
debut
h
integer
not
null
sea
debut
integer
not
null
sea
fin
h
integer
not
null
sea
fin
integer
not
null
sea
moniteur
integer
references
moniteur
num
sea
salle
integer
references
salle
sal
num
sea
remarque
varchar
default
”
table
ville
contient
renseignements
villes
create
table
ville
vil
cp
varchar
primary
key
vil
nom
varchar
not
null
table
typevoirie
contient
renseignements
types
voiries
rue
boulevard
avenue
etc
create
table
typevoirie
tvo
num
integer
primary
key
tvo
nom
varchar
not
null
table
voirie
contient
renseignements
voiries
create
table
voirie
voi
num
integer
primary
key
voi
type
integer
not
null
references
typevoirie
tvo
num
voi
nom
varchar
not
null
voi
cp
varchar
not
null
references
ville
vil
cp
table
etudiant
contient
renseignements
étudiants
create
table
etudiant
etu
carte
varchar
primary
key
etu
nom
varchar
not
null
etu
prenom
varchar
etu
ufr
integer
references
ufr
ufr
num
etu
niveau
integer
references
niveau
niv
num
etu
adressenum
varchar
chapitre
projet
inscriptions
etu
voirie
integer
not
null
references
voirie
voi
num
etu
email
varchar
etu
telfixe
varchar
etu
telmobile
varchar
table
inscription
contient
renseignements
inscriptions
étudiants
séances
create
table
inscription
ins
etudiant
varchar
references
etudiant
etu
carte
ins
seance
integer
references
seance
sea
num
primary
key
ins
etudiant
ins
seance
table
parametre
contient
renseignements
différents
paramètres
application
mots
passe
etc
create
table
parametre
num
integer
primary
key
nom
varchar
texte
varchar
valeur
varchar
ordre
integer
chapitre
projet
teniraq
licence
miashs
ème
année
pouvez
consulter
page
originales
web
présentation
club
tennis
teniraq
raq
comme
raquette
utilise
base
données
administrer
fonc
tionnement
adhésions
entrées
locaux
réservations
courts
deux
courts
couverts
b
court
extérieur
matchs
défis
matchs
internes
club
permettent
classer
joueurs
chaque
adhérent
reçoit
dès
inscrit
dire
dès
payé
cotisation
annuelle
badge
possédant
numéro
appelé
numéro
adhérent
mot
passe
permettant
connecter
base
données
club
internet
adhésions
adhésions
cours
mémorisées
table
badge
contenant
chaque
personne
numéro
badge
mot
passe
nom
prénom
etc
lorsqu
adhérent
régularise
situation
date
limite
validité
augmentée
année
jour
jour
badge
cours
validité
autres
date
validité
date
inscription
augmentée
année
jour
jour
plus
joueurs
plusieurs
autres
personnes
reçoivent
badge
catégorie
logistique
afin
pouvoir
entrer
club
agit
adjoint
sports
commune
responsable
associations
ainsi
chef
travaux
agit
également
personnes
assurent
entretien
matériel
nettoyage
salle
nettoyage
lieu
tous
mardis
matins
entre
h
h
durant
créneau
aucune
réservation
terrain
autorisée
joueurs
personnes
considérées
comme
adhérents
vie
cas
personnel
mairie
autorisé
aussi
joueur
deux
badge
badge
logistique
badge
joueur
badge
donnent
droits
différents
propriétaire
selon
catégorie
logistique
non
joueurs
droit
entrer
club
droit
réserver
jeune
joueurs
moins
ans
droit
entrée
doivent
être
accompagnés
adhérent
plus
âgé
entrer
problèmes
responsabilité
civile
ado
joueurs
âge
compris
entre
ans
droit
entrer
club
réserver
excepté
soirs
semaine
après
h
afin
permettre
travailleurs
réserver
soir
senior
joueurs
plus
ans
droit
entrer
réserver
tout
moment
entrées
salles
chaque
adhérent
doit
saisir
clavier
situé
près
porte
entrée
numéro
adhérent
mot
passe
ouvrir
porte
faisant
évènement
enregistré
ajout
ligne
table
acces
table
constitue
historique
entrées
club
permet
cas
vol
dégradation
retrouver
trouvait
club
moment
là
adhérent
renouvelé
cotisation
annuelle
encore
droit
rentrer
pendant
mois
peut
plus
réserver
terrain
réservations
courts
connectant
base
données
chaque
adhérent
joueur
possibilité
valider
réservation
prouver
venu
jouer
moment
annuler
réservation
faite
réserver
court
b
certaine
date
certaine
heure
exemple
court
b
jeudi
prochain
h
partenaire
http
grappa
univ
lille
fr
gonzalez
enseignement
technoweb
projetteniraq
chapitre
projet
teniraq
réservation
peut
être
effectuée
semaines
venir
jour
jour
nouvelle
ligne
alors
ajoutée
table
reservations
mémorise
ensemble
réservations
numéro
court
date
heure
joueur
réservant
enregistre
également
réservation
partenaire
jeu
annulation
peut
être
faite
moins
heures
avant
jouer
permettre
autres
joueurs
prendre
place
libre
validation
possible
créneau
réservation
mn
réservation
min
hors
créneau
considère
joueur
honoré
réservation
occupé
créneau
rait
pu
être
occupé
plus
profit
autre
joueur
alors
automatiquement
mis
prison
jours
dire
peut
plus
effectuer
réservation
pendant
période
date
entrée
prison
enregistrée
table
badge
seule
réservation
venir
badge
joueur
badge
logistique
donne
droit
réserver
terrain
matchs
défis
joueurs
point
chaque
début
saison
début
octobre
chaque
dimanche
matchs
défis
déroulent
créneau
heure
fin
heure
compte
nombre
jeu
gagnés
chacun
deux
joueurs
cas
égalité
joueur
plus
jeune
déclaré
vainqueur
chaque
joueur
reçoit
point
participation
vainqueur
reçoit
plus
différence
entre
nombres
jeu
gagnés
exemple
joueur
gagné
reçoit
points
défis
paramétrage
certaines
valeur
modifiables
délai
annulation
réservation
heures
délai
valider
réservation
min
nombre
jours
prison
non
validation
jours
nombre
semaines
réser
vation
semaines
valeurs
enregistrées
table
parametres
modifiable
possesseurs
badge
niveau
autorisation
suffisant
base
données
analyse
présentée
ici
contenterons
donner
structure
base
chapitre
projet
teniraq
mld
tables
table
villes
contient
renseignements
villes
create
table
villes
codepostal
varchar
primary
key
ville
varchar
chapitre
projet
teniraq
table
typevoiries
contient
renseignements
types
voiries
rue
boulevard
avenue
etc
create
table
typevoiries
codetypevoirie
integer
primary
key
typevoirie
varchar
table
voiries
contient
renseignements
voiries
create
table
voiries
codevoirie
integer
primary
key
reftypevoirie
integer
not
null
nomvoirie
varchar
codepostal
varchar
not
null
foreign
key
reftypevoirie
references
typevoiries
codetypevoirie
foreign
key
codepostal
references
villes
codepostal
table
niveauautorisations
contient
renseignements
niveaux
autorisation
create
table
niveauautorisations
codeniveauautorisation
integer
primary
key
niveau
integer
autorisation
varchar
table
badge
contient
renseignements
personnes
possédant
badge
joueurs
logistiques
create
table
badge
numbadge
integer
primary
key
motdepasse
varchar
nom
varchar
prenom
varchar
refniveauautorisation
integer
not
null
foreign
key
refniveauautorisation
references
niveauautorisations
codeniveauautorisation
table
joueurs
contient
renseignements
joueurs
create
table
joueurs
numbadge
integer
primary
key
datenaiss
date
sexe
varchar
licence
varchar
inscritjusque
date
adressenum
varchar
refvoirie
integer
not
null
telfixe
varchar
telmobile
varchar
classementofficiel
varchar
pointsdefis
integer
dernieredateprison
date
foreign
key
refvoirie
references
voiries
codevoirie
foreign
key
numbadge
references
badges
numbadge
table
acces
contient
renseignements
accès
salles
create
table
acces
refbadge
integer
instantacces
timestamp
primary
key
refbadge
instantacces
foreign
key
refbadge
references
badges
numbadge
table
reservations
contient
renseignements
réservations
courts
create
table
reservations
chapitre
projet
teniraq
codereservations
integer
primary
key
refreservant
integer
not
null
refinvite
integer
not
null
court
varchar
datereservation
date
heurereservation
integer
instantvalidation
time
foreign
key
refreservant
references
joueurs
numbadge
foreign
key
refinvite
references
joueurs
numbadge
table
matchs
contient
renseignements
matchs
create
table
matchs
codematchs
integer
primary
key
refvainqueur
integer
not
null
refperdant
integer
not
null
datematch
date
heurematch
integer
scorevainqueur
integer
scoreperdant
integer
foreign
key
refvainqueur
references
joueurs
numbadge
foreign
key
refperdant
references
joueurs
numbadge
table
categories
contient
renseignements
catégories
joueurs
create
table
categories
codecategories
varchar
primary
key
nomcategorie
varchar
agemini
integer
agemaxi
integer
accesautorise
boolean
reservationautorisee
boolean
eclairageautorise
boolean
table
bornesreservations
contient
renseignements
heures
réservations
possibles
chaque
jour
create
table
bornesreservations
refcategories
varchar
not
null
joursemaine
varchar
heuredebut
integer
heurefin
integer
primary
key
refcategories
joursemaine
foreign
key
refcategories
references
categories
codecategories
table
parametres
contient
renseignements
paramètres
application
create
table
parametres
nomparametre
varchar
primary
key
valeur
varchar
chapitre
projet
teniraq
chapitre
projet
camping
licence
miashs
ème
année
pouvez
consulter
page
originales
web
présentation
allez
devoir
gérer
camping
gîte
agit
établissement
offre
clients
services
suivants
emplacements
tentes
toutes
tailles
emplacements
caravanes
camping
cars
différents
précédents
présence
branchements
électriques
mobilhomes
chambres
deux
lits
possible
ajouter
deux
lits
pliants
enfants
lits
dortoirs
tarifs
dépendent
durée
location
nuit
semaine
mois
année
ainsi
nombre
personnes
redevance
également
perçue
véhicules
informations
conserver
informations
clients
locations
conservées
année
autre
afin
pouvoir
procéder
envois
courriers
publicitaires
devra
cas
garder
informations
toutes
personnes
seulement
celui
réglé
facture
informations
suivantes
emplacements
tente
caravane
camping
car
ombragé
herbeux
informations
suivantes
mobilhomes
équipé
réfrigérateur
équipé
four
etc
informations
suivantes
chambres
dortoirs
nombre
lits
présence
toilettes
lavabo
douche
toutes
prestations
chambres
dortoir
emplacement
tente
caravane
etc
informations
suivantes
prix
nuit
semaine
mois
année
localisation
géographique
référence
plan
camping
devra
conserver
informations
suivantes
clients
état
civil
plus
complet
possible
restant
raisonnable
quand
respect
vie
privée
nom
prénom
adresse
téléphone
adresse
électronique
historique
toutes
leurs
présences
camping
date
quelles
personnes
quel
type
emplacement
tente
caravane
etc
traitements
bien
beau
avoir
toutes
informations
encore
faut
pouvoir
utiliser
devra
pouvoir
bien
entendu
établir
facture
tout
séjour
aussi
faire
réservations
ajouter
clients
potentiels
base
dire
personnes
réellement
clientes
espère
pouvoir
démarcher
faire
quelques
statistiques
nécessaires
gestion
camping
recettes
année
recettes
mois
fréquentation
année
fréquentation
mois
type
hébergement
etc
http
grappa
univ
lille
fr
gonzalez
enseignement
technoweb
projetcamping
chapitre
projet
camping
etc
base
données
analyse
présentée
ici
contenterons
donner
structure
base
mld
chapitre
projet
camping
tables
table
ville
contient
renseignements
villes
create
table
ville
codepostal
varchar
primary
key
ville
varchar
table
rue
contient
informations
rues
réfère
table
ville
create
table
rue
coderue
int
primary
key
nomrue
varchar
codepostal
varchar
constraint
rue
codepostal
fk
foreign
key
codepostal
references
ville
codepostal
table
personne
rassemble
informations
personnes
clientes
non
create
table
personne
codepersonne
int
primary
key
nom
varchar
not
null
prenom
varchar
numerodanslarue
varchar
refrue
int
tel
varchar
fax
varchar
email
varchar
constraint
personne
refrue
fk
foreign
key
refrue
references
rue
coderue
table
confort
liste
éléments
confort
douche
four
etc
peuvent
être
disponibles
différents
hébergements
table
lien
hebergement
confort
permet
faire
lien
entre
hébergements
éléments
confort
create
table
confort
codeconfort
int
primary
key
typeconfort
varchar
not
null
table
typehebergement
rassemble
différents
types
hébergement
camping
dortoir
etc
create
table
typehebergement
codetypehebergement
int
primary
key
typehebergement
varchar
not
null
table
typelocation
rassemble
différents
types
location
journée
semaine
etc
create
table
typelocation
codetypelocation
int
primary
key
typelocation
varchar
not
null
table
tariflocation
rassemble
différents
tarifs
location
fonction
durée
type
hébergement
etc
create
table
tariflocation
reftypelocation
int
reftypehebergement
int
journee
numeric
personne
numeric
primary
key
reftypelocation
reftypehebergement
constraint
tariflocation
reftypehebergement
fk
foreign
key
reftypehebergement
chapitre
projet
camping
references
typehebergement
codetypehebergement
constraint
tariflocation
reftypelocation
fk
foreign
key
reftypelocation
references
typelocation
codetypelocation
table
tarifvehicule
définit
montant
redevances
fonction
véhicules
create
table
tarifvehicule
codevehicule
int
primary
key
vehicule
varchar
tarif
numeric
not
null
table
hebergement
contient
liste
tous
hébergements
disponibles
create
table
hebergement
codehebergement
int
primary
key
positionsurleplan
varchar
not
null
reftypehebergement
int
not
null
nbreplaces
int
not
null
constraint
hebergement
reftypehebergement
fk
foreign
key
reftypehebergement
references
typehebergement
codetypehebergement
table
lien
hebergement
confort
fait
lien
entre
hébergements
éléments
confort
disponibles
create
table
lien
hebergement
confort
refhebergement
int
refconfort
int
primary
key
refhebergement
refconfort
constraint
lienhebconfort
refhebergement
fk
foreign
key
refhebergement
references
hebergement
codehebergement
constraint
lienhebconfort
confort
fk
foreign
key
refconfort
references
confort
codeconfort
table
sejour
rassemble
tous
renseignements
séjours
effectués
réservés
clients
create
table
sejour
codesejour
int
primary
key
debut
date
fin
date
refhebergement
int
refvehicule
int
constraint
sejour
refvehicule
fk
foreign
key
refvehicule
references
tarifvehicule
codevehicule
constraint
sejour
refhebergement
fk
foreign
key
refhebergement
references
hebergement
codehebergement
table
lien
sejour
personne
fait
lien
entre
séjours
effectués
réservés
personnes
clients
create
table
lien
sejour
personne
refsejour
int
refpersonne
int
primary
key
refsejour
refpersonne
constraint
liensejourpersonne
refsejour
fk
foreign
key
refsejour
references
sejour
codesejour
constraint
liensejourpersonne
refpersonne
fk
foreign
key
refpersonne
references
personne
codepersonne
chapitre
projet
association
licence
miashs
ème
année
pouvez
consulter
page
originales
web
allez
devoir
construire
site
web
permettant
membres
association
gérer
consulter
diiférents
renseignements
adhésions
contenu
site
web
site
devra
permettre
effectuer
opérations
nécessaires
bon
fonctionnement
base
dire
devra
avoir
moins
trois
niveaux
utilisateurs
identifiés
login
mot
passe
niveau
simple
utilisateur
seule
consultation
autorisée
consultation
peut
être
restreinte
certaines
données
niveau
exemple
accessible
simples
adhérents
association
niveau
administrateur
alors
accès
fonctions
importantes
exemple
modification
données
ajout
base
fonctions
vitales
exemple
niveau
réservé
trésorier
président
association
niveau
gourou
alors
accès
tout
niveau
réservé
exclusivement
responsable
base
données
exemple
seulement
niveau
sécurité
pourra
supprimer
enregistrements
base
site
web
permettra
toutes
actions
base
consultation
modification
ajout
suppression
conditions
travail
pouvez
travailler
groupe
deux
plutôt
conseillé
plus
travail
libre
conditions
réel
presque
juge
pendant
tout
semestre
là
répondre
questions
base
données
base
données
contenant
renseignements
celle
vue
premier
semestre
base
association
quelques
rappels
buts
contenu
rappel
association
veut
gérer
adhérents
intermédiaire
base
données
voici
principales
informations
sujet
doit
garder
informations
adhérents
anciens
doit
connaître
chaque
personne
base
nom
http
grappa
univ
lille
fr
gonzalez
enseignement
technoweb
projet
php
http
grappa
univ
lille
fr
gonzalez
enseignement
bd
association
chapitre
projet
association
b
prénom
adresse
do
membre
coa
e
jeune
tarif
réduit
f
adhérent
titre
gratuit
go
adhérent
quel
montant
cotisation
nombre
personnes
concernées
adhésion
cela
chaque
année
doit
connaître
référent
chaque
personne
agit
adhérent
chargé
faire
venir
différents
courriers
envoyés
association
comptes
rendus
relance
convocations
etc
également
possible
courriers
transmis
poste
mld
projet
association
figure
mcd
projet
association
création
tables
base
association
création
tables
fichier
téléchargeable
web
create
table
personne
clef
int
primary
key
nom
varchar
prenom
varchar
numero
varchar
refrue
integer
ca
boolean
jeune
boolean
gratuit
boolean
http
grappa
univ
lille
fr
gonzalez
enseignement
bd
association
creation
create
sql
chapitre
projet
association
invite
boolean
referent
int
create
table
rue
clef
int
primary
key
nomrue
varchar
codepostal
varchar
create
table
ville
codepostal
varchar
primary
key
ville
varchar
create
table
referent
clef
int
primary
key
nom
varchar
personne
int
create
table
adhesion
annee
varchar
personne
int
nbmembre
int
montant
numeric
euro
boolean
default
primary
key
annee
personne
contraintes
fichier
téléchargeable
web
alter
table
personne
add
constraint
persons
referent
fk
foreign
key
referent
references
referent
clef
alter
table
personne
add
constraint
persons
rue
fk
foreign
key
refrue
references
rue
clef
alter
table
rue
add
constraint
rue
ville
fk
foreign
key
codepostal
references
ville
codepostal
alter
table
referent
add
constraint
referent
personne
fk
foreign
key
personne
references
personne
clef
alter
table
adhesion
add
constraint
adhesions
person
fk
foreign
key
personne
references
personne
clef
évaluation
critères
lesquels
notés
faut
ça
marche
moindre
choses
facilité
utilisattion
site
faut
navigation
simple
intuitive
efficace
faut
formulaires
clairs
confirmité
normes
w
utilisation
feuilles
style
absolument
obligatoire
crois
ça
faciliterait
quand
travail
aucune
restriction
priori
faite
html
suffit
ça
passe
contrôles
w
fanatique
javascript
pourquoi
http
grappa
univ
lille
fr
gonzalez
enseignement
bd
association
creation
contraintes
sql
chapitre
projet
association
rien
vital
doit
être
confié
javascript
ça
doit
pouvoir
fonctionner
navigateur
sans
javascript
lisibilité
code
source
code
illisible
mal
présenté
non
commenté
très
préjudicia
ble
contre
découpage
petites
fonctions
faciles
comprendre
voire
découpage
code
bibliothèques
thématiques
avantageront
dernier
conseil
aphorisme
premiers
projet
prennent
temps
restant
prennent
aussi
temps
conclusion
travaillez
beaucoup
plus
tôt
possible
pendant
encore
partiels
réviser
chapitre
projet
généalogie
iup
iies
ème
année
maîtrise
aes
teg
pouvez
consulter
page
originales
web
généralités
allez
devoir
réaliser
site
généalogie
réalisation
devra
être
pleinement
fonctionnelle
devra
entre
autres
être
capable
échanger
données
autres
logiciels
génalogie
existant
logiciels
commerciaux
logiciels
libres
données
conserver
trouverez
partie
description
informations
manipulent
généalogistes
données
base
occupe
personnes
naissance
décès
ascendance
descendance
doit
pouvoir
partant
importe
quelle
personne
produire
liste
ascendants
ainsi
celle
descendants
doit
pouvoir
aussi
connaître
conjoints
toute
personne
cas
personne
plusieurs
conjoints
doit
moins
pouvoir
connaître
ordre
lequel
couples
existé
doit
pouvoir
possible
avoir
dates
début
fin
éventuelles
unions
faut
noter
modèle
européen
seul
existe
monde
possible
certaines
personnes
plusieurs
conjoints
temps
plus
enfants
peuvent
provenir
liaisons
non
officialisées
faut
pouvoir
aussi
représenter
devra
bien
entendu
conserver
dates
lieux
naissance
décès
individus
bien
entendu
comme
toute
partie
informations
quelques
foi
difficile
obtenir
site
devra
pouvoir
fonctionner
absence
certaines
données
supplémentaires
introduction
outil
informatique
peut
ajouter
autres
types
information
exemple
multimédia
photo
vidéo
enregistrement
audio
etc
copie
document
officiel
acte
naissance
mariage
décès
etc
informations
peuvent
être
associées
plusieurs
personnes
plusieurs
événements
plusieurs
familles
bon
documents
datés
conserve
nom
propriétaires
traitement
données
données
rassemblées
sens
peut
utiliser
voici
fonctionnalités
minimales
devra
avoir
site
web
ajouter
supprimer
modifier
individu
ajouter
supprimer
modifier
union
mariage
autre
lier
individu
parents
inversement
couple
enfants
associer
fichier
multimédia
individu
famille
événement
connaissant
individu
doit
pouvoir
obtenir
facilement
ascendance
descendance
proche
cependant
parfait
avoir
toute
ascendance
toute
descendance
http
grappa
univ
lille
fr
gonzalez
enseignement
commun
genealogie
chapitre
projet
généalogie
tout
individu
doit
pouvoir
avoir
album
toutes
photos
associéees
parfait
avoir
chose
tous
types
documents
optimisations
évitera
dupliquer
informations
multimédia
elles
liées
plusieurs
personnes
pourra
avoir
choix
effacer
informations
multimédia
plus
associées
rien
façon
représentées
relations
descendance
ascendance
écran
laissée
libre
choix
faut
noter
plus
classique
arborescente
celle
colle
plus
près
structure
réelle
import
export
site
devra
être
capable
exporter
données
format
gedcom
fichier
gedcom
tapant
mot
importe
quel
moteur
recherche
obtien
drez
dizaines
voire
centaines
page
expliqueront
voici
résumé
défini
mormons
sous
nom
complet
église
jésus
christ
saints
derniers
jours
standard
gedcom
créé
permettre
échange
données
entre
différents
logiciels
généalogie
existants
ainsi
plupart
logiciels
généalogie
permettent
exporter
fruit
travail
format
quelques
page
internet
version
originale
anglais
explication
français
autre
explication
français
pourrez
facilement
trouver
autres
attention
comprendre
norme
fait
partie
travail
demandé
partie
note
portera
capacité
site
exporter
données
vers
fichier
gedcom
correction
facile
ferai
lire
fichier
produit
logiciel
généalogie
regarderai
vraiment
exporté
importation
données
depuis
fichier
gedcom
demandée
principe
moins
facile
voulez
faire
bien
entendu
tenu
compte
http
www
gendex
com
gedcom
gctoc
htm
http
www
amicale
genealogie
org
informatique
infoged
htm
http
www
weinland
nom
fr
gedc
php
chapitre
projet
généalogie
mcd
projet
généalogie
figure
mcd
projet
généalogie
différentes
tables
tables
entités
table
individus
create
table
individu
numindividu
integer
not
null
primary
key
nom
varchar
prenom
varchar
sexe
char
parents
integer
jour
nais
integer
mois
nais
integer
annee
nais
integer
chapitre
projet
généalogie
lieu
nais
integer
jour
deces
integer
mois
deces
integer
annee
deces
integer
lieu
deces
integer
constraint
individu
sexe
ck
check
sexe
in
çäfç
müëëëëëëë
table
villes
create
table
ville
codepostal
varchar
not
null
primary
key
ville
varchar
not
null
table
lieux
create
table
lieu
numlieu
integer
not
null
primary
key
nom
varchar
numero
varchar
rue
varchar
codepostal
varchar
table
couples
create
table
couple
numcouple
integer
not
null
primary
key
integer
not
null
integer
not
null
jour
debut
integer
mois
debut
integer
annee
debut
integer
lieu
debut
integer
jour
fin
integer
mois
fin
integer
annee
fin
integer
lieu
fin
integer
type
couple
integer
table
types
couple
create
table
type
couple
numtypecouple
integer
not
null
primary
key
description
varchar
table
types
document
create
table
type
document
numtype
integer
not
null
primary
key
descr
courte
varchar
not
null
descr
longue
varchar
chapitre
projet
généalogie
table
documents
create
table
document
numdocument
integer
not
null
primary
key
titre
varchar
fichier
varchar
not
null
type
integer
not
null
taille
integer
date
creation
date
date
inclusion
date
tables
relations
table
lie
documents
couples
create
table
doc
couple
couple
integer
not
null
document
integer
not
null
descr
courte
varchar
descr
longue
varchar
constraint
doccouple
pk
primary
key
couple
document
table
lie
documents
lieux
create
table
doc
lieu
lieu
integer
not
null
document
integer
not
null
descr
courte
varchar
descr
longue
varchar
constraint
doclieu
pk
primary
key
lieu
document
table
lie
documents
individus
create
table
doc
individu
individu
integer
not
null
document
integer
not
null
descr
courte
varchar
descr
longue
varchar
constraint
docindividu
pk
primary
key
individu
document
différentes
contraintes
table
individu
alter
table
individu
add
constraint
individu
lieunais
fk
foreign
key
lieu
nais
references
lieu
numlieu
alter
table
individu
add
constraint
individu
lieudeces
fk
chapitre
projet
généalogie
foreign
key
lieu
deces
references
lieu
numlieu
alter
table
individu
add
constraint
individu
parents
fk
foreign
key
parents
references
couple
numcouple
table
ville
contraintes
table
lieu
alter
table
lieu
add
constraint
lieu
codepostal
fk
foreign
key
codepostal
references
ville
codepostal
table
couple
alter
table
couple
add
constraint
couple
fk
foreign
key
references
individu
numindividu
alter
table
couple
add
constraint
couple
fk
foreign
key
references
individu
numindividu
alter
table
couple
add
constraint
individu
lieudebut
fk
foreign
key
lieu
debut
references
lieu
numlieu
alter
table
couple
add
constraint
individu
lieufin
fk
foreign
key
lieu
fin
references
lieu
numlieu
table
type
couple
contraintes
table
type
document
contraintes
table
document
alter
table
document
add
constraint
document
type
fk
foreign
key
type
references
type
document
numtype
table
doc
couple
alter
table
doc
couple
add
constraint
doccouple
couple
fk
foreign
key
couple
references
couple
numcouple
alter
table
doc
couple
add
constraint
doccouple
document
fk
foreign
key
document
references
document
numdocument
chapitre
projet
généalogie
table
doc
lieu
alter
table
doc
lieu
add
constraint
doclieu
lieu
fk
foreign
key
lieu
references
lieu
numlieu
alter
table
doc
lieu
add
constraint
doclieu
document
fk
foreign
key
document
references
document
numdocument
chapitre
projet
généalogie
chapitre
projet
brazil
iup
iies
ème
année
maîtrise
aes
teg
pouvez
consulter
page
originales
web
description
monde
brazil
organisé
façon
rendre
citoyens
plus
heureux
possible
veiller
cela
tous
renseignements
utiles
stockés
base
données
centrale
centre
régulation
bonheur
chargés
gestion
base
données
chaque
citoyen
représenté
numéro
enregistrement
universel
nom
prénom
sexe
date
naissance
taille
historique
maladies
mémorise
également
différentes
adresses
ainsi
dates
emménagement
correspondantes
chaque
citoyen
travaille
service
contribuant
ainsi
bonheur
tous
tous
services
re
groupés
plus
grande
efficacité
différents
ministères
bonheur
ainsi
groupe
plusieurs
services
forme
ministère
travaille
grâce
échantillons
bonheur
produits
autres
ser
vices
divers
ministères
sous
contrôle
administratif
troisième
ensemble
services
divers
ministères
aussi
rôles
régulièrement
modifiés
centre
régulation
bonheur
selon
savant
parfait
calcul
maîtrise
aléatoire
malheureusement
comme
toute
organisation
parfaite
défauts
toujours
dûs
composants
i
e
citoyens
ainsi
distingue
trois
types
citoyens
part
ceux
contribuent
survie
système
production
futurs
citoyens
mérites
proportionnels
nombre
leurs
enfants
bonheur
produit
dis
tillé
enfants
citoyens
tient
particulièrement
conserver
historique
ancêtres
chacun
tout
citoyen
adulte
enfant
fait
partie
seconde
catégorie
suspects
cela
confirme
fait
citoyen
enfant
mesure
répondre
formulaire
e
suspicion
pèse
citoyen
proportionnelle
nombre
formulaires
e
pu
remplir
tout
citoyen
parents
inconnus
également
suspect
seule
exception
confirme
règle
perfection
système
brazil
fait
seul
citoyen
enfants
dispose
assez
temps
être
dirigeant
ministère
tout
citoyen
décédé
pouvant
plus
contribuer
bonheur
société
verra
immédiatement
supprimé
base
données
ainsi
toute
référence
existence
fonctions
descendance
rendra
bien
entendu
immédiatement
suspects
éventuels
enfants
tables
entités
table
citoyen
create
table
citoyen
numuniv
numeric
not
null
nom
varchar
prenom
varchar
sexe
char
naissance
date
taille
numeric
pere
numeric
mere
numeric
ç
çë
http
grappa
univ
lille
fr
gonzalez
enseignement
commun
brazil
chapitre
projet
brazil
table
ville
create
table
ville
codepostal
varchar
not
null
ville
varchar
table
rue
create
table
rue
numrue
numeric
not
null
rue
varchar
codepostal
varchar
ç
ë
table
maladie
create
table
maladie
nummaladie
numeric
not
null
nommaladie
varchar
gravite
numeric
not
null
table
service
create
table
service
numservice
numeric
not
null
nomservice
varchar
table
ministere
create
table
ministere
numministere
numeric
not
null
nomministere
varchar
tables
relations
associer
maladie
citoyen
listemaladie
create
table
listemaladie
citoyen
numeric
not
null
maladie
numeric
not
null
debut
date
not
null
fin
date
associer
adresse
citoyen
habite
create
table
habite
citoyen
numeric
not
null
numero
numeric
not
null
rue
numeric
not
null
debut
date
not
null
chapitre
projet
brazil
associer
citoyen
service
lequel
travaille
travaillepour
create
table
travaillepour
citoyen
numeric
not
null
service
numeric
not
null
debut
date
not
null
fin
date
associer
service
ministère
lequel
produit
serviceproduit
create
table
serviceproduit
service
numeric
not
null
ministere
numeric
not
null
debut
date
not
null
fin
date
associer
service
ministère
auquel
appartient
serviceappartient
create
table
serviceappartient
service
numeric
not
null
ministere
numeric
not
null
debut
date
not
null
fin
date
associer
service
ministère
contrôle
servicecontrole
create
table
servicecontrole
service
numeric
not
null
ministere
numeric
not
null
debut
date
not
null
fin
date
associer
citoyen
ministère
dirige
tabledirige
create
table
dirige
citoyen
numeric
not
null
ministere
numeric
not
null
debut
date
not
null
fin
date
contraintes
table
ville
alter
table
ville
add
constraint
ville
codepostal
pk
primary
key
codepostal
table
rue
alter
table
rue
add
constraint
adresse
numrue
pk
primary
key
numrue
alter
table
rue
add
constraint
adresse
codepostal
fk
foreign
key
codepostal
references
ville
codepostal
chapitre
projet
brazil
table
citoyen
alter
table
citoyen
add
constraint
citoyen
numuniv
pk
primary
key
numuniv
alter
table
citoyen
add
constraint
citoyen
sexe
ck
check
sexe
in
f
alter
table
citoyen
add
constraint
citoyen
pere
fk
foreign
key
pere
references
citoyen
numuniv
alter
table
citoyen
add
constraint
citoyen
mere
fk
foreign
key
mere
references
citoyen
numuniv
table
habite
alter
table
habite
add
constraint
habite
citoyen
fk
foreign
key
citoyen
references
citoyen
numuniv
alter
table
habite
add
constraint
habite
rue
fk
foreign
key
rue
references
rue
numrue
alter
table
habite
add
constraint
habite
serv
pk
primary
key
citoyen
numero
rue
table
maladie
alter
table
maladie
add
constraint
maladie
nummaladie
pk
primary
key
nummaladie
alter
table
maladie
add
constraint
maladie
gravite
ck
check
gravite
in
table
listemaladie
alter
table
listemaladie
add
constraint
listemaladie
cit
moy
deb
pk
primary
key
citoyen
maladie
debut
alter
table
listemaladie
add
constraint
listemaladie
citoyen
fk
foreign
key
citoyen
references
citoyen
numuniv
alter
table
listemaladie
add
constraint
listemaladie
maladie
fk
foreign
key
maladie
references
maladie
nummaladie
table
service
alter
table
service
add
constraint
service
numservice
pk
primary
key
numservice
table
ministere
alter
table
ministere
add
constraint
ministere
numministere
pk
primary
key
numministere
chapitre
projet
brazil
table
travaillepour
alter
table
travaillepour
add
constraint
travaillepour
cit
serv
pk
primary
key
citoyen
service
debut
alter
table
travaillepour
add
constraint
travaillepour
citoyen
fk
foreign
key
citoyen
references
citoyen
numuniv
alter
table
travaillepour
add
constraint
travaillepour
service
fk
foreign
key
service
references
service
numservice
table
serviceproduit
alter
table
serviceproduit
add
constraint
serviceproduit
serv
mini
pk
primary
key
service
ministere
debut
alter
table
serviceproduit
add
constraint
serviceproduit
service
fk
foreign
key
service
references
service
numservice
alter
table
serviceproduit
add
constraint
serviceproduit
ministere
fk
foreign
key
ministere
references
ministere
numministere
table
serviceappartient
alter
table
serviceappartient
add
constraint
serviceappartient
serv
mini
pk
primary
key
service
ministere
debut
alter
table
serviceappartient
add
constraint
serviceappartient
service
fk
foreign
key
service
references
service
numservice
alter
table
serviceappartient
add
constraint
serviceappartient
ministere
fk
foreign
key
ministere
references
ministere
numministere
table
servicecontrole
alter
table
servicecontrole
add
constraint
servicecontrole
serv
mini
pk
primary
key
service
ministere
debut
alter
table
servicecontrole
add
constraint
servicecontrole
service
fk
foreign
key
service
references
service
numservice
alter
table
servicecontrole
add
constraint
servicecontrole
ministere
fk
foreign
key
ministere
references
ministere
numministere
table
dirige
alter
table
dirige
add
constraint
dirige
cit
serv
pk
primary
key
citoyen
ministere
debut
alter
table
dirige
add
constraint
dirige
citoyen
fk
foreign
key
citoyen
references
citoyen
numuniv
alter
table
dirige
add
constraint
dirige
ministere
fk
foreign
key
ministere
references
ministere
numministere
chapitre
projet
brazil
chapitre
projet
services
iup
iies
ème
année
maîtrise
aes
teg
pouvez
consulter
page
originales
web
allez
devoir
réaliser
site
web
dynamique
permettra
gérer
services
enseignants
ufr
document
va
permettre
définir
caractéristiques
site
but
projet
but
site
allez
réaliser
permettre
responsable
administratif
ve
ufr
gérer
services
enseignants
devra
être
possible
enregistrer
modifier
tirer
récapitulatifs
synthèses
etc
projet
doit
tenter
gérer
emplois
temps
répartition
cours
semaine
heures
enseignements
toutes
comptées
manière
elles
payées
prix
suivant
td
cmtd
cm
affectations
enseignants
cours
définies
niveau
groupes
groupes
formation
doit
pouvoir
affecter
enseignants
nécessaire
gérer
affectation
individuelle
groupes
besoin
savoir
tel
enseignant
charge
groupe
tel
autre
groupe
etc
suffit
savoir
tel
enseignant
groupes
tel
autre
etc
enseignants
doivent
tous
service
statut
donne
base
peut
être
modi
fiée
temps
partiel
décharges
contrats
particuliers
etc
fonctionnement
utilisateurs
mêmes
droits
suivant
identité
page
allez
construire
libre
accès
suivant
droits
conférés
chaque
utilisateur
pourra
avoir
accès
certaines
informations
certains
traitements
faudra
gérer
système
mots
passe
contrôler
accès
site
utilisateur
base
droit
consulter
contenu
base
seulement
requêtes
prédéfinies
responsable
administratif
ve
droit
modifier
contenu
tables
certaines
données
sensibles
peuvent
être
interdites
utilisateur
privilégié
droits
plus
importants
utilisateur
base
limités
quand
modifications
autorisées
devront
passer
comme
utilisateur
base
requêtes
prédéfinies
administrateur
base
droit
définir
niveaux
droits
utilisateurs
modifier
structure
base
tous
droits
fonctionnalités
requises
consultation
consultations
accessibles
tous
utilisateurs
identifiés
liste
enseignements
enseignants
formation
liste
enseignements
enseignants
année
liste
enseignements
enseignants
ufr
liste
enseignements
enseignants
matière
liste
enseignements
enseignant
http
grappa
univ
lille
fr
gonzalez
enseignement
iies
projet
chapitre
projet
services
chaque
enseignant
calculer
service
afficher
quand
nombre
heures
supplé
mentaires
nombre
heures
sous
service
pouvoir
avoir
récapitulatif
global
heures
enseignement
regrouper
section
cnu
formation
statut
faut
pouvoir
distinguer
entre
enseignants
permanents
autres
différentes
statis
tiques
quand
cela
sens
faudra
avoir
trois
versions
chaque
calcul
tous
enseignants
permanents
vacataires
fonctionnalités
requises
mise
jour
utilisateurs
autorisés
seulement
responsable
administratif
administrateur
base
créer
modifier
supprimer
tout
objet
intervenant
gestion
affectations
ufr
formations
filière
cours
enseignant
etc
affecter
enseignement
enseignant
supprimer
affectation
informations
plus
techniques
message
alerte
doit
être
produit
quand
distribué
plus
groupes
disponibles
informations
nécessaires
chaque
enseignement
désignation
cours
nombre
heures
public
concerné
type
enseignement
td
cm
etc
nombre
groupes
disponibles
section
cnu
concernée
bien
enseignant
chargé
cours
obligatoirement
rattaché
section
informations
nécessaires
chaque
enseignant
nom
prénom
statut
administratif
ufr
rat
tachement
service
dû
nombre
heures
type
contrat
permanent
vacataire
section
cnu
bon
historique
commandes
exécutées
afin
réparer
toute
erreur
grave
connaître
type
utilisation
base
question
subsidiaire
comment
gérer
historique
base
problème
conserver
requêtes
cela
voir
section
modifications
question
comment
garder
année
autre
renseignements
disponibles
exploitables
vocabulaire
utilisé
année
exemple
ème
année
deug
ae
ème
année
iup
iies
cours
unité
enseignement
cela
correspond
certain
nombre
heures
présence
devant
étudiants
certain
sujet
donnés
certain
nombre
groupes
étudiants
plusieurs
enseignants
peuvent
être
concernés
cours
groupes
différents
chapitre
projet
services
enseignants
permanents
ufr
deux
catégories
enseignants
permanents
vacataires
premiers
dépen
dent
directement
ufr
nommés
titre
définitif
payés
université
seconds
recrutés
cas
cas
année
semestre
payés
ressources
propres
ufr
peuvent
être
permanents
autres
ufr
être
complètement
extérieurs
université
formation
exemple
aes
iup
iies
mass
heures
supplémentaires
heures
enseignements
faites
plus
service
dû
section
cnu
cnu
conseil
national
universités
organisme
chargé
affectations
universitaires
chaque
universitaire
qualifié
section
cnu
dépend
domaine
recherche
informatique
économie
histoire
etc
peut
être
recruté
poste
section
pourra
traduire
projet
expression
section
cnu
matière
enseignée
bien
réalité
réducteur
service
service
enseignant
nombre
heures
enseignements
assure
service
dû
nombre
heures
enseignement
doit
assurer
enseignant
nombre
dépend
directement
statut
peut
subir
modifications
exemple
maître
conférences
doit
principe
heures
eqtd
décharge
services
administratifs
peut
permettre
faire
moins
tandis
contrat
pédagogique
peut
demander
faire
plus
sous
service
dit
quand
enseignant
assure
moins
heures
service
dû
statut
enseignant
principaux
statuts
existants
enseignants
titulaires
accompagnés
leurs
services
professeur
heures
maître
conférences
heures
assistant
heures
prce
heures
prag
heures
td
cm
ctd
décomptes
heures
enseignement
distingue
td
travaux
dirigés
cm
cours
magistraux
cmtd
intermédiaires
entre
deux
précédents
unité
base
heure
équivalent
tf
eqtd
principe
correspondances
suivantes
td
eqtd
heureusement
cm
eqtd
cmtd
eqtd
cela
peut
varier
première
ébauche
structure
entités
cmtd
annees
cours
cnu
formations
ufr
enseignants
statuts
chapitre
projet
services
toutes
liaisons
sauf
celle
entre
cours
enseignants
type
exemple
année
fait
partie
seule
formation
formation
peut
correspondre
plusieurs
années
liaisons
peuvent
être
réalisées
référence
externe
exemple
champ
table
annee
contient
code
formation
année
dépend
parle
alors
clef
étrangère
cas
liaison
entre
cours
enseignants
agit
relation
chaque
cours
peut
être
associé
plusieurs
enseignants
chaque
enseignant
peut
avoir
assurer
plusieurs
cours
réaliser
type
liaison
obligé
faire
intervenir
table
supplémentaire
assurera
liaison
deux
liaisons
agit
table
affectations
schéma
suivant
cmtd
annees
cours
cnu
affectations
formations
ufr
enseignants
statuts
structures
tables
trouvera
chaque
table
liste
champs
composent
clefs
primaires
suivies
étoile
clefs
étrangères
représentées
ainsi
cmtd
table
contient
descriptions
types
cours
td
cm
cmtd
numcmtd
identifiant
intitule
intitulé
toutes
lettres
type
cours
td
cm
cmtd
coefficient
valeur
eqtd
équivalent
td
heure
enseignement
ufr
table
contient
descriptions
ufr
numufr
identifiant
intitule
intitulé
toutes
lettres
ufr
mses
philosophie
etc
formations
table
contient
descriptions
formations
ae
iup
iies
etc
numformation
identifiant
intitule
intitulé
toutes
lettres
formation
aes
iup
iies
etc
ufr
code
ufr
dépend
formation
chapitre
projet
services
annees
table
contient
descriptions
années
iup
iies
ème
année
maîtrise
aes
etc
numannee
identifiant
intitule
intitulé
toutes
lettres
année
iup
iies
ème
année
maîtrise
aes
etc
niveau
équivalence
nombre
années
après
bac
licence
première
année
deug
etc
formation
code
formation
dépend
année
cnu
table
contient
descriptions
différentes
section
cnu
numcnu
identifiant
intitulé
intitulé
toutes
lettres
section
cnu
correspondante
cours
table
contient
descriptions
cours
base
données
partagées
système
réseaux
macro
économie
etc
numcours
identifiant
intitule
intitulé
toutes
lettres
cours
base
données
partagées
système
réseaux
macro
économie
etc
numannée
code
formation
dépend
cours
numcmtd
code
type
cours
cmtd
td
etc
numcnu
code
section
cnu
laquelle
rattaché
cours
heures
nombre
heures
enseignement
groupe
cours
groupes
nombre
groupes
concernés
cours
statut
table
contient
descriptions
statuts
maître
conférences
professeur
etc
numstatut
identifiant
intitulé
intitulé
toutes
lettres
statut
maître
conférences
professeur
etc
service
service
dû
statutairement
peut
ensuite
être
modifié
chaque
enseignant
enseignants
table
contient
descriptions
enseignants
numenseignant
identifiant
nom
nom
enseignant
chapitre
projet
services
prenom
prénom
enseignant
service
service
dû
exprimé
heures
numstatut
code
statut
enseignant
numufr
code
ufr
dépend
enseignant
affectations
table
sert
représenter
liaison
affectation
existant
entre
cours
enseignants
numcours
code
cours
concerné
affectation
numenseignant
code
enseignant
concerné
affectation
nbgroupes
nombre
groupes
concernés
affectation
création
tables
cmtd
create
table
cmtd
numcmtd
numeric
not
null
primary
key
intitule
text
valeur
numeric
ufr
create
table
ufr
numufr
numeric
not
null
primary
key
intitule
text
formations
create
table
formations
numformation
numeric
not
null
primary
key
intitule
text
numufr
numeric
not
null
foreign
key
numufr
references
ufr
numufr
annees
create
table
annees
numannee
numeric
not
null
primary
key
intitule
text
niveau
int
numformation
numeric
not
null
foreign
key
numformation
references
formations
numformation
chapitre
projet
services
cnu
create
table
cnu
numcnu
numeric
not
null
primary
key
intitulé
text
cours
create
table
cours
numcours
numeric
not
null
primary
key
intitule
text
numannee
numeric
not
null
numcmtd
numeric
not
null
numcnu
numeric
not
null
heures
numeric
groupes
numeric
foreign
key
numcmtd
references
cmtd
cnumcmtd
foreign
key
numcnu
references
cnu
cnumcnu
foreign
key
numannee
references
annees
numannee
statut
create
table
statuts
numstatut
numeric
not
null
primary
key
intitulé
text
service
numeric
enseignants
create
table
enseignants
numenseignant
numeric
not
null
primary
key
nom
text
prenom
text
service
numeric
numstatut
numeric
not
null
numufr
numeric
not
null
foreign
key
numufr
references
ufr
cnumufr
foreign
key
numstatut
references
statuts
numstatut
affectations
create
table
affectations
numcours
numeric
not
null
numenseignant
numeric
not
null
groupes
int
primary
key
numcours
numenseignant
foreign
key
numcours
references
cours
cnumcours
foreign
key
numenseignant
references
enseignants
numenseignant
remplir
tables
paramètres
statut
insert
into
statuts
values
mdc
insert
into
statuts
values
professeur
insert
into
statuts
values
prag
insert
into
statuts
values
ater
chapitre
projet
services
insert
into
statuts
values
chargé
cours
insert
into
statuts
values
past
cnu
insert
into
cnu
values
droit
privé
sciences
criminelles
insert
into
cnu
values
droit
public
insert
into
cnu
values
histoire
droit
institutions
insert
into
cnu
values
science
politique
insert
into
cnu
values
sciences
économiques
insert
into
cnu
values
sciences
gestion
insert
into
cnu
values
sciences
langage
linguistique
phonétique
générales
insert
into
cnu
values
langues
littératures
anciennes
insert
into
cnu
values
langue
littérature
françaises
insert
into
cnu
values
littératures
comparées
insert
into
cnu
values
langues
littératures
anglaises
anglo
saxonnes
insert
into
cnu
values
langues
littératures
germaniques
scandinaves
insert
into
cnu
values
langues
littératures
slaves
insert
into
cnu
values
langues
littératures
romanes
espagnol
italien
portugais
autres
langues
romanes
insert
into
cnu
values
langues
littératures
arabes
chinoises
japonaises
hébraïques
autres
domaines
linguistiques
insert
into
cnu
values
psychologie
psychologie
clinique
psychologie
sociale
insert
into
cnu
values
philosophie
insert
into
cnu
values
arts
plastiques
spectacle
musique
musicologie
esthétique
sciences
art
insert
into
cnu
values
sociologie
démographie
insert
into
cnu
values
anthropologie
éthnologie
préhistoire
insert
into
cnu
values
histoire
civilisations
histoire
archéologie
mondes
anciens
mondes
médiévaux
art
insert
into
cnu
values
histoire
civilisations
histoire
mondes
modernes
histoire
monde
contemporain
art
musique
insert
into
cnu
values
géographie
physique
humaine
économique
régionale
insert
into
cnu
values
aménagement
espace
urbanisme
insert
into
cnu
values
mathématiques
insert
into
cnu
values
mathématiques
appliquées
applications
mathématiques
insert
into
cnu
values
informatique
insert
into
cnu
values
milieux
denses
matériaux
insert
into
cnu
values
constituants
élémentaires
chapitre
projet
services
insert
into
cnu
values
milieux
dilués
optique
insert
into
cnu
values
chimie
théorique
physique
analytique
insert
into
cnu
values
chimie
organique
minérale
industrielle
insert
into
cnu
values
chimie
matériaux
insert
into
cnu
values
astronomie
astrophysique
insert
into
cnu
values
structure
évolution
terre
autres
planètes
insert
into
cnu
values
terre
solide
géodynamique
enveloppes
supérieures
paléobiosphère
insert
into
cnu
values
météorologie
océanographie
physique
physique
environnement
insert
into
cnu
values
sciences
physico
chimiques
technologies
pharmaceutiques
insert
into
cnu
values
sciences
médicament
insert
into
cnu
values
sciences
biologiques
insert
into
cnu
values
mécanique
génie
mécanique
génie
civil
insert
into
cnu
values
génie
informatique
automatique
traitement
signal
insert
into
cnu
values
energétique
génie
procédés
insert
into
cnu
values
electronique
optronique
systèmes
insert
into
cnu
values
biochimie
biologie
moléculaire
insert
into
cnu
values
biologie
cellulaire
insert
into
cnu
values
physiologie
insert
into
cnu
values
biologie
populations
écologie
insert
into
cnu
values
biologie
organismes
insert
into
cnu
values
neurosciences
insert
into
cnu
values
sciences
éducation
insert
into
cnu
values
sciences
information
communication
insert
into
cnu
values
epistémologie
histoire
sciences
techniques
insert
into
cnu
values
cultures
langues
régionales
insert
into
cnu
values
sciences
techniques
activités
physiques
sportives
insert
into
cnu
values
théologie
catholique
insert
into
cnu
values
théologie
protestante
cmtd
insert
into
cmtd
values
cm
insert
into
cmtd
values
td
chapitre
projet
services
chapitre
projet
disques
maîtrise
aes
teg
pouvez
consulter
page
originales
web
approche
naïve
souhaite
mémoriser
contenu
discothèque
but
prêt
disque
cd
vinyl
adhérents
faut
connaître
œuvres
exemplaires
chaque
œuvre
artistes
correspondants
renseignements
adhérents
faire
première
solution
consisterait
gros
tableau
permettant
stocker
toutes
informations
dispose
album
nom
album
interprète
morceaux
plusieurs
genre
musique
type
support
vinyl
cd
etc
ainsi
celles
dispose
adhérents
représentation
informations
plat
sous
forme
seul
tableau
montre
emblée
limites
effet
va
reprendre
systématiquement
toutes
informations
liées
album
fait
colonne
titres
contient
plusieurs
titres
album
ailleurs
disposition
privilégie
approche
informations
album
album
con
séquent
moins
commode
approche
interprète
emprunteur
solution
difficultés
percevoir
séparement
éléments
entités
pourtant
bien
distinctes
albums
interprètes
adhérents
occasion
difficultés
regrouper
certaines
informations
albums
in
terprète
albums
genre
albums
empruntés
adhérent
etc
dispose
bien
tableur
possiblité
trier
tableau
suivant
telle
telle
colonne
là
heurte
problème
choix
raison
privilégier
ordre
rapport
autre
ailleurs
dès
lors
tableau
trié
agit
respecter
ordre
lors
toute
mise
jour
tableau
complique
procédure
saisie
nouveaux
albums
tableau
devait
être
trié
recherche
information
précise
demeurerait
assez
fastidieuse
recherche
devient
encore
moins
aisée
agit
retrouver
croisements
information
x
fait
reprise
titre
déjà
interprété
difficulté
corse
encore
lorsqu
agit
plus
accéder
information
extraire
série
informations
albums
jean
ferrat
contiennent
textes
aragon
remarque
également
telle
représentation
nombreuses
informations
figurent
plusieurs
foi
artiste
nom
prénom
emprunteur
adresse
informations
saisies
individuellement
outre
perte
efficacité
existe
risques
incohérence
donnée
saisie
différemment
deux
endroits
distincts
répétition
donnée
peut
être
également
pénalisante
celle
ci
vient
changer
effet
lieu
avoir
procéder
seule
mise
jour
obligé
reporter
modification
partout
donnée
figure
là
encore
perte
efficacité
risque
incohérence
exemple
faire
lorsqu
chanteur
décide
changer
nom
analyse
quelles
entités
peut
identifier
elles
nombre
disque
entité
centrale
base
données
agit
œuvre
abstraite
comme
parle
album
blanc
beatles
sans
référer
exemplaire
précis
seulement
œuvre
propriétés
disque
intitulé
http
grappa
univ
lille
fr
gonzalez
enseignement
mait
aes
projet
idée
bizarre
sais
quand
fait
prince
enlève
ailleurs
rien
bizarreté
fait
chapitre
projet
disques
année
parution
morceaux
composent
genre
musique
rock
classique
etc
artistes
enregistré
tel
disque
propriétés
artiste
nom
prénom
éventuellement
groupe
accompagne
exemplaires
entité
exemplaires
totalement
différente
entité
disques
agit
objet
physique
exemplaire
physique
disque
exemple
exemplaire
vinyl
album
blanc
beatles
trouve
discothèque
grand
mère
peut
avoir
plusieurs
exemplaires
disque
propriétés
exemplaire
type
support
cd
vinyl
prix
remboursement
cas
perte
détérioration
adhérents
agit
personnes
inscrites
club
propriétés
adhérent
nom
prénom
adresse
date
début
adhésion
nombre
personnes
accès
disque
empruntés
adhérent
pouvoir
faire
quelques
statistiques
pénétration
disque
stock
public
prêts
tel
adhérent
emprunte
tel
exemplaire
propriétés
prêt
date
début
date
sortie
exemplaire
date
fin
date
rentrée
exemplaire
relations
existant
entre
entités
décrites
figure
ci
dessous
figure
relations
base
disques
première
version
remarque
assez
vite
choix
vont
amener
difficultés
fait
figurer
villes
chaque
fiche
adhérent
crée
redondance
données
risque
inconsistance
va
créer
nouvelle
entité
villes
propriétés
ville
pur
souci
simplification
base
peu
éloignés
réalité
décidant
conserver
ville
résidence
adresse
adhérent
choix
tout
fait
mauvais
réalité
souvent
nombre
personnes
vivant
domicile
autre
analyse
pu
amener
considérer
prêts
comme
relation
entre
exemplaires
adhérents
non
comme
entité
propre
discussion
peut
être
très
longue
sujet
toutes
façons
résultat
identique
presque
chapitre
projet
disques
nom
code
postal
remarque
genre
musical
disque
va
créer
nouvelle
entité
genres
seule
propriété
genre
nom
garder
titres
morceaux
composant
disque
renseignements
concernant
disque
pose
autre
problème
quelle
place
réserver
réserve
peu
place
vite
débordé
réserve
beaucoup
place
exemple
quoi
ranger
titres
perdra
place
énorme
réservée
tous
disque
compris
ceux
contiennent
dizaine
morceaux
cas
plupart
disque
pourra
quand
exister
disque
plus
morceaux
réservé
autre
problème
résultant
choix
telle
structure
rend
presque
impossible
recherche
morceau
particulier
connait
titre
interprète
disque
allons
créer
nouvelle
entité
éclater
données
chansons
propriétés
chanson
titre
numéro
ordre
disque
relations
existant
entre
entités
décrites
figure
ci
dessous
figure
relations
base
disques
deuxième
version
plus
question
maintenant
exemple
reporter
ligne
correspondant
exemplaire
toutes
informations
relatives
disque
placera
ligne
correspondante
information
particulière
partir
laquelle
pourra
retrouver
tableau
correspondant
concerne
disque
type
information
appelé
clef
étrangère
priori
dispose
clef
disque
contre
dispose
type
information
villes
plus
exactement
bureaux
distributeurs
code
postal
ainsi
pourra
contenter
niveau
adresse
personne
bureau
distributeur
dès
lors
dispose
tableau
codepostal
bureaudistributeur
reprenons
idée
code
numéro
matricule
albums
artistes
cela
fait
partie
vie
numéro
insee
numéro
carte
étudiant
numéro
dossier
organisme
logeur
numéro
compte
banque
livres
numéro
isbn
cote
appartiennent
bibliothèque
voitures
numéro
minéralogique
produits
commerce
codes
barres
etc
entités
clef
naturelle
devrons
créer
toutes
pièces
dernières
remarques
fait
certaines
approximations
analyse
base
exemple
pris
compte
fait
artiste
peut
enregistrer
album
seul
intérieur
groupe
information
gérée
base
exemple
impossible
trouver
tout
monde
sait
après
axiome
ns
ensemble
entiers
naturels
quelque
entier
choisi
existera
toujours
plus
grand
ainsi
connaissances
musicales
étendues
sûr
vont
laisser
supposer
titres
comme
proposé
déjà
beaucoup
eh
non
the
commercial
album
residents
contient
morceaux
chapitre
projet
disques
base
moindre
lien
entre
disque
rolling
stones
ceux
mick
jagger
keith
richard
remarque
beatles
john
lennon
également
fait
grosses
approximations
réfère
réel
adresses
déjà
mentionné
garde
ville
non
plus
tenu
compte
certaines
villes
bureau
distributeur
propre
cas
volontairement
oublié
conserver
champ
codepostal
table
villes
fonction
clef
toutes
approximations
faites
général
but
pédagogique
afin
surcharger
base
rendre
compréhension
plus
aisée
faut
bien
souvenir
analyse
système
informatique
travail
objectif
dépend
surtout
vision
plus
moins
claire
souvent
futurs
utilisateurs
quand
informaticien
réalise
analyse
compte
quelqu
autre
détecter
problèmes
éventuels
signaler
client
cependant
dernier
peut
parfaitement
faire
toute
connaissance
cause
choix
paraissent
réducteurs
peu
oublis
ainsi
commis
concernent
informations
intéressent
gros
problème
tel
cas
éventuel
changement
avis
futur
alors
sans
doute
impossible
adapter
solution
choisie
mieux
vaut
abondance
raisonnable
informations
utilise
instant
plutôt
oubli
informations
pourrait
avoir
besoin
plus
tard
autre
analyse
projet
disques
trouverez
lignes
suivent
approche
fondamentalement
différente
analyse
faite
chapitre
précédent
analyse
prise
compte
reste
projet
seulement
présentée
montrer
problème
peut
amener
deux
structures
complètement
différentes
suivant
approche
description
disque
composé
plages
musicales
avoir
base
performante
désire
distinguer
inter
prétations
différentes
titre
exemple
faut
différencier
string
quartet
schostakowitsch
disque
string
quartets
enregistré
borodin
string
quartet
string
quartet
do
schostakowitsch
disque
gidon
kremer
ed
lockenhaus
vol
enregistré
go
kremer
yo
horigome
ko
kashkashian
do
geringas
informations
suivantes
mémoriser
titre
disque
références
édition
code
barre
titres
composent
pui
chaque
titre
compositeur
date
enregistrement
lieu
enregistrement
interprètes
durée
interprétation
compositeurs
interprètes
mémorise
nom
adoptera
choix
suivants
références
édition
celles
donne
éditeur
disque
exemple
ecm
new
serie
occupera
éditeur
compositeur
titre
considéré
comme
unique
plusieurs
compositeurs
relativement
rare
notés
comme
nom
unique
considérés
comme
groupe
exemple
groupe
string
quartet
composé
do
schostakowitsch
the
black
angel
death
song
composé
groupe
reed
cale
compositeur
peut
être
individu
groupe
problème
bien
définir
mot
raisonnable
chapitre
projet
disques
interprètes
varient
selon
interprétations
interprètes
peuvent
être
compositeur
alors
interprète
comme
autre
groupe
regroupement
interprètes
groupe
interprètes
invités
tous
cas
seuls
noms
groupe
interprètes
agit
regroupement
interprètes
intéressent
pui
recherche
plus
approfondie
membres
groupe
pourront
être
demandés
pouvez
considérer
groupe
comme
interprète
particulier
exemple
groupe
interprète
invité
the
black
angel
death
song
the
velvet
underground
nico
the
velvet
underground
groupe
niveau
peu
importe
composait
groupe
nico
interprète
invitée
exemple
interprèete
compositeur
riding
the
westerleys
composé
interprété
terry
riley
interprétation
peut
apparaître
plusieurs
disque
tiendra
compte
différents
mouvements
intérieur
composition
classique
probabilité
titre
enregistré
interprètes
différents
jour
considérée
comme
nulle
égalité
possible
lieux
dates
enregistrements
considérée
comme
redondance
intéressant
savoir
quels
membres
groupe
cela
mémorisera
partir
quelle
date
interprète
appartient
groupe
quelle
date
suppose
quitte
supposera
programme
gère
validité
dates
résultat
obtient
schéma
conceptuel
figure
suivante
figure
autre
mcd
base
disques
chapitre
projet
disque
tables
table
disques
contient
code
barre
titre
disque
nombre
plages
références
éditeur
table
morceaux
correspond
interprétations
contient
informations
associées
enregistrement
durée
interprétation
peut
apparaître
plusieurs
disque
table
œuvres
correspond
création
compositeur
table
compinte
nom
donné
compositeurs
interprètes
contient
compositeurs
inter
prètes
effet
compositeur
pouvant
être
interprète
informations
mémorisées
deux
cas
mêmes
peut
regrouper
deux
entités
seule
évitant
ainsi
dupliquer
infor
mations
tous
compositeurs
interprètes
plus
table
contient
fiches
correspondant
aussi
bien
groupes
individus
quand
œuvre
interprétée
groupe
trouvera
fiche
groupe
plus
souvent
possible
fiches
interprètes
appartiennent
groupe
fiche
interprétation
interprétée
groupe
préférence
reliée
groupe
plutôt
membres
groupe
trouvera
membres
groupe
relation
appartenance
cela
permettra
traiter
tous
cas
possibles
particulier
aucun
problème
interprétation
groupe
invitant
interprète
aucune
difficulté
enregistrer
groupe
sans
connaître
membres
ajouter
membre
groupe
existant
définir
interprétation
effectuée
seul
membre
groupe
ajoute
champ
logique
appelé
estgroupe
permettra
différencier
individus
groupes
contiendra
valeur
vrai
fiche
celle
groupe
valeur
faux
agit
individu
appartenance
relation
entre
table
compinte
vue
comme
contenant
fiches
groupes
table
compinte
vue
comme
contenant
fiches
individus
relation
associées
informa
tions
dates
début
fin
appartenance
groupe
élément
relation
indique
individu
interprète
fiche
table
compinte
appartenu
groupe
fiche
aussi
table
compinte
dates
gérées
telle
façon
base
reste
cohérente
interprète
référencé
fiche
table
membres
supposé
avoir
participé
tous
enregistrements
effectués
groupe
référencé
entre
date
début
date
fin
appartenance
groupe
création
tables
garnir
données
allez
pouvoir
laisser
faire
fichier
fera
tout
place
cela
déconnectez
postgresql
q
reconnectez
commande
suivante
psql
f
home
enseign
aesteg
creerdisques
sql
va
faire
exécuter
postgresql
fichier
creerdisques
sql
contenant
commandes
données
nécessaires
remplissage
base
quelques
message
erreur
faites
trop
condition
programme
arrive
terme
tables
créées
commandes
suivantes
table
artistes
create
table
artistes
codeartiste
int
primary
key
prenom
varchar
nom
varchar
groupe
varchar
table
disque
œuvre
logique
comme
parle
album
blanc
beatles
sans
référer
ex
emplaire
précis
seulement
œuvre
plupart
renseignements
trouvent
autres
tables
auxquelles
accès
grâce
clefs
étrangères
create
table
disque
codedisque
int
primary
key
artiste
int
annee
varchar
intitule
varchar
chapitre
projet
disques
genre
int
table
chansons
fiche
correspond
chanson
disque
connait
disque
code
create
table
chansons
numero
int
disque
int
titre
varchar
primary
key
numero
disque
table
genres
create
table
genres
codegenre
int
primary
key
genre
varchar
table
prets
fiche
correspond
emprunt
exemplaire
create
table
prets
codepret
int
primary
key
exemplaire
int
adherent
int
sortie
date
retour
date
table
villes
create
table
villes
codepostal
varchar
primary
key
ville
varchar
table
adherents
create
table
adherents
codeadherent
int
primary
key
nom
varchar
prenom
varchar
dateadhesion
date
codepostal
varchar
nbrepersonnes
int
table
exemplaires
exemplaire
physique
œuvre
exemple
exemplaire
vinyl
album
blanc
beatles
trouve
discothèque
grand
mère
chaque
exemplaire
peut
être
vinyl
cd
prix
indiqué
pouvoir
établir
facture
cas
perte
create
table
exemplaires
codeexemplaire
int
primary
key
disque
int
cdouvinyl
varchar
prix
float
travail
allez
devoir
réaliser
site
web
discothèque
totalement
libre
choix
contenu
site
seules
choses
importantes
site
devra
bien
entendu
utiliser
php
postgresql
quand
projet
cours
deux
formulaires
trop
mal
vus
noté
état
site
fin
dernier
cours
contrôle
oral
contenu
autres
mots
vérifierai
bien
auteur
présenterez
faites
mieu
pouvez
minimum
atteindre
ergonomie
facilité
utilisation
site
prises
compte
notation
pouvez
travailler
groupe
deux
pourrez
trouver
exemple
quoi
cela
peut
ressembler
web
http
grappa
univ
lille
fr
gonzalez
enseignement
mait
aes
disques
chapitre
projet
disques
index
explode
fclose
action
fgets
adodb
file
affectation
fopen
affectedrows
fputs
algorithmique
fwrite
alternative
gettype
analyse
header
apostrophe
implode
archive
include
assembleur
join
backslash
ltrim
base
données
opendir
boucle
pg
affected
rows
bouton
pg
connect
envoi
pg
fetch
array
radio
pg
numrows
reset
pg
query
submit
pg
result
status
case
cocher
phpinfo
champs
readdir
chaînes
caractères
require
opération
sort
checkbox
split
chop
strlen
clef
étrangère
strpos
closedir
strtolower
concaténation
strtoupper
connexion
base
données
str
replace
contrôle
types
substr
conversion
substr
replace
types
trim
majuscules
minuscules
fopen
minuscules
majuscules
for
couche
abstraction
foreach
count
formulaires
dbx
fputs
db
fetchmode
assoc
fwrite
db
fetchmode
ordered
gedcom
delete
gestion
erreurs
docbook
get
droits
accès
gettype
dsn
get
echo
guillemet
emacs
header
tête
http
hidden
entité
html
erreur
http
get
vars
explode
http
post
vars
faq
hébergeur
fclose
identification
fermeture
fichier
if
fetchinto
image
cliquables
fetchrow
implode
fgets
include
fichier
informations
fermeture
input
ouverture
insert
file
interpréteur
fonction
itération
chop
jdn
closedir
join
echo
journal
net
langage
protocole
compilé
quanta
scripting
radio
web
readdir
informatique
require
intermédiaire
require
once
interprété
requête
machine
reset
naturel
return
licence
gnu
fdl
répertoire
longueur
chaîne
safe
mode
ltrim
saisie
mot
passe
mcd
select
message
erreurs
server
metadata
sessions
metatdata
setfetchmode
mld
sgbd
mysql
sort
numcols
split
numrows
sql
opendir
sqlite
openjade
string
opérateur
strlen
comparaison
strpos
concaténation
strtolower
logique
strtoupper
opérations
chaînes
structures
contrôle
ouverture
fichier
str
replace
page
web
dynamique
submit
password
substr
pdf
substr
replace
pdo
séparation
contenu
traitement
pear
séquence
pear
db
tableau
peardb
associatif
pg
affected
rows
tableinfo
pg
connect
tant
pg
fetch
array
text
pg
last
error
textarea
pg
numrows
trim
pg
query
update
pg
result
status
variable
version
phpinfo
w
phplib
while
php
auth
pw
xml
php
auth
user
xsltproc
php
auth
user
zone
saisie
point
virgule
portable
post
postgresql
post
procédure
programmation
séparée
programmer
projet
association
brazil
camping
disque
disque
généalogie
inscriptions
services
document
outline
php
initiation
table
matières
i
cours
chapitre
pourquoi
comment
introduction
pourquoi
document
comment
atil
construit
trouver
document
qbullets
chapitre
généralités
langages
informatiques
appelleton
langage
informatique
langage
interprété
langage
compilé
langages
intermédiaires
chapitre
langages
particuliers
langages
web
pourquoi
programmer
quels
langages
avantages
inconvénients
choisir
chapitre
faq
élémentaire
php
php
quelle
différence
javascript
pourquoi
choisir
php
lieu
javascript
passetil
affichage
page
php
comment
intégrer
php
html
chapitre
premiers
exemples
php
premier
programme
deuxième
programme
rappels
algorithmique
variables
expressions
fonctions
chapitre
formulaires
html
présentation
principaux
contrôles
exemples
chapitre
traitement
formulaire
php
traitement
données
formulaire
php
exercices
chapitre
chaînes
caractères
estce
chaîne
caractères
choisir
guillemets
apostrophes
principales
utilisations
backslash
principales
opérations
chaînes
principales
fonctions
conversions
types
exercices
chapitre
tableaux
estce
tableau
quelques
exemples
utilisation
remplir
afficher
contenu
tableau
exemple
complet
tableaux
associatifs
parcours
tableau
associatif
exercices
chapitre
pdo
estce
pdo
quelle
utilité
connecter
base
données
exécuter
requête
nombre
lignes
colonnes
requête
select
accéder
résultats
requête
select
accès
nom
colonnes
accès
numéro
colonnes
accès
numéro
lignes
numéro
colonnes
gestion
erreurs
code
erreur
informations
associées
erreur
exemple
traitement
erreur
chapitre
programmation
séparée
php
programmation
séparée
fonctions
require
include
chapitre
identification
php
préliminaires
fonction
header
contrôle
mots
passe
amélioration
plusieurs
utilisateurs
séparer
données
traitement
cacher
mots
passe
crypter
mots
passe
chapitre
sessions
préambule
application
identification
visiteurs
ii
hors
programme
chapitre
utiliser
php
base
données
postgresql
connexion
base
exécution
requête
obtention
résultats
requête
exemple
requêtes
autres
select
suppression
message
erreurs
gestion
erreurs
message
résultat
renvoyé
pgquery
cas
échec
obtenir
texte
dernière
erreur
obtenir
statut
connexion
obtenir
nombre
lignes
affectées
requête
chapitre
peardb
présentation
estce
pear
quelle
utilité
utiliser
peardb
connecter
base
données
gestion
erreurs
cas
erreur
application
exécuter
requête
accéder
résultats
requête
select
fetchrow
fetchinto
setfetchmode
peardb
informations
requêtes
numrows
numcols
affectedrows
tableinfo
chapitre
dbx
estce
dbx
quelle
utilité
connecter
base
données
exécuter
requête
nombre
lignes
colonnes
requête
select
accéder
résultats
requête
select
accès
nom
colonnes
accès
numéro
colonnes
accès
numéro
lignes
numéro
colonnes
chapitre
exploration
contenu
répertoire
notions
nécessaires
php
exploration
répertoire
extraction
souschaîne
caractères
notions
nécessaires
html
image
cliquables
lien
affiche
image
plutôt
page
html
php
exercices
chapitre
news
présentation
travail
temps
chapitre
fichiers
manipulations
base
ouverture
fermeture
fichier
écrire
fichier
lire
contenu
fichier
exemple
exercice
iii
corrigés
exercices
chapitre
premiers
exercices
algorithmique
corrigés
chapitre
premiers
formulaires
php
corrigés
chapitre
chaînes
caractères
corrigé
chapitre
exercices
tableaux
corrigés
chapitre
exercices
fichiers
corrigés
chapitre
exploration
répertoire
corrigés
chapitre
news
corrigé
accueil
liste
noms
fichiers
nouvelles
liste
liens
vers
fichiers
nouvelles
affichage
toutes
nouvelles
affichage
titres
nouvelles
affichage
titres
faisant
lien
vers
nouvelles
affichage
toutes
nouvelles
proprement
choix
sujet
iv
études
cas
chapitre
études
cas
chapitre
projet
disques
présentation
fonctionnalités
générales
fonctionnalités
consultation
modification
données
accès
données
sensibles
niveau
faible
niveau
fort
base
données
tables
mld
chapitre
projet
inscriptions
présentation
fonctionnalités
générales
fonctionnalités
calendrier
gestion
base
base
données
mld
tables
chapitre
projet
teniraq
présentation
adhésions
entrées
salles
réservations
courts
matchs
défis
paramétrage
base
données
mld
tables
chapitre
projet
camping
présentation
informations
conserver
traitements
base
données
mld
tables
chapitre
projet
association
contenu
site
web
conditions
travail
base
données
mld
projet
association
création
tables
base
association
création
tables
contraintes
évaluation
dernier
conseil
chapitre
projet
généalogie
généralités
données
conserver
données
base
données
supplémentaires
traitement
données
optimisations
importexport
mcd
projet
généalogie
différentes
tables
tables
entités
table
individus
table
villes
table
lieux
table
couples
table
types
couple
table
types
document
table
documents
tables
relations
table
lie
documents
couples
table
lie
documents
lieux
table
lie
documents
individus
différentes
contraintes
table
individu
table
ville
table
lieu
table
couple
table
typecouple
table
typedocument
table
document
table
doccouple
table
doclieu
chapitre
projet
brazil
description
tables
entités
table
citoyen
table
ville
table
rue
table
maladie
table
service
table
ministere
tables
relations
associer
maladie
citoyen
listemaladie
associer
adresse
citoyen
habite
associer
citoyen
service
lequel
travaille
travaillepour
associer
service
ministère
lequel
produit
serviceproduit
associer
service
ministère
auquel
appartient
serviceappartient
associer
service
ministère
contrôle
servicecontrole
associer
citoyen
ministère
dirige
tabledirige
contraintes
table
ville
table
rue
table
citoyen
table
habite
table
maladie
table
listemaladie
table
service
table
ministere
table
travaillepour
table
serviceproduit
table
serviceappartient
table
servicecontrole
table
dirige
chapitre
projet
services
but
projet
fonctionnement
utilisateurs
mêmes
droits
suivant
identité
fonctionnalités
requises
consultation
fonctionnalités
requises
mise
jour
informations
plus
techniques
question
subsidiaire
comment
gérer
historique
base
vocabulaire
utilisé
première
ébauche
structure
structures
tables
cmtd
ufr
formations
annees
cnu
cours
statut
enseignants
affectations
création
tables
cmtd
ufr
formations
annees
cnu
cours
statut
enseignants
affectations
remplir
tables
paramètres
statut
cnu
cmtd
chapitre
projet
disques
approche
naïve
analyse
dernières
remarques
autre
analyse
projet
disques
description
résultat
création
tables
travail
index
