cours
php
versions
x
x
sébastien
rohaut
table
matières
introduction
définition
historique
utilisation
pratique
page
statiques
vs
page
dynamiques
scripts
cgi
page
dynamiques
php
pourquoi
préférer
php
autres
langages
comme
asp
devez
déjà
connaître
nécessaire
serveur
nécessaire
client
respect
standards
bases
présentation
syntaxe
base
intégration
html
séparateur
instructions
bloc
instructions
commentaires
travailler
variables
déclarer
variable
portée
variables
variables
prédéfinies
variables
dynamiques
types
variables
booléens
entiers
virgule
flottante
chaînes
caractères
tableaux
variable
objet
constantes
obtenir
type
variable
définir
supprimer
variable
opérateurs
précédence
opérateurs
opérateurs
arithmétiques
opérateurs
assignation
opérateurs
bits
opérateurs
comparaison
opérateur
erreur
opérateur
exécution
opérateurs
incrémentation
décrémentation
opérateurs
logiques
opérateurs
chaînes
opérateur
tableaux
notion
expression
structures
contrôle
if
while
so
rohaut
cours
programmation
php
page
while
classique
do
while
for
foreach
break
continue
switch
return
require
include
once
fonctions
syntaxe
portée
arguments
valeur
retour
fonctions
internes
gestion
formulaires
php
get
post
récupération
tableau
récupération
directe
utiliser
tableaux
date
heure
localisation
récupérer
date
heure
date
date
locale
strftime
retour
tableau
getdate
heure
localtime
récupérer
importe
quelle
date
mysql
présentation
outils
phpmyadmin
mysqlcc
créer
base
utilisateurs
droits
créer
modifier
tables
types
numériques
types
entiers
types
réels
flottants
types
booléens
types
caractères
types
char
types
text
type
enum
type
set
types
date
formats
supportés
type
datetime
type
date
type
timestamp
type
time
type
year
création
syntaxe
sql
so
rohaut
cours
programmation
php
page
types
tables
myisam
innodb
index
fulltext
création
recherche
recherche
booléenne
mysql
php
connexion
base
données
connexion
serveur
choix
base
fermeture
connexion
séquence
complète
base
requêtes
exécuter
requête
nombre
lignes
affectées
nombre
lignes
retournées
récupérer
résultats
insertion
auto
incrément
récupération
erreurs
système
fichiers
travail
fichiers
ouverture
lecture
fgets
fread
fscanf
fgetc
fgetss
fgetcsv
renvoyer
fichier
sortie
standard
ecriture
déplacement
fseekçë
ftell
rewind
fin
fichier
fermeture
travail
répertoires
répertoire
actuel
déplacer
ouvrir
lister
fermer
récupérer
toutes
entrées
travail
système
fichiers
informations
fichier
actions
fichiers
répertoires
upload
fichiers
travail
chaînes
fonctions
code
html
mysql
gestion
caractères
verrouillés
balises
caractères
spéciaux
html
fonctions
texte
générales
découper
chaîne
so
rohaut
cours
programmation
php
page
rechercher
comparer
sessions
cookies
cookies
création
accès
suppression
identification
http
connexion
déconnexion
sessions
php
principe
utilisation
ouverture
variables
session
expiration
session
changer
accès
défaut
image
pré
requis
importants
créer
image
types
possibles
création
nouvelle
image
dynamique
récupération
image
existante
publication
chargement
via
autre
page
travailler
image
récupérer
informations
couleurs
dessin
remplissage
point
ligne
rectangle
cercle
ellipse
polygones
texte
simple
programmation
objet
structure
création
objet
accès
membres
php
php
opérateur
variables
protection
php
x
php
x
protection
variables
fonctions
attributs
méthodes
statiques
constantes
classe
héritage
polymorphisme
mots
clés
parent
self
rohaut
cours
programmation
php
page
constructeurs
php
php
constructeurs
classes
dérivées
php
php
destructeur
php
php
affectation
objets
code
commun
php
php
comparaison
objets
php
php
nouveautés
php
objets
fonction
autoload
classes
abstraites
classes
méthodes
variables
finales
interfaces
objet
gestion
dynamique
méthodes
attributs
itérations
objets
type
hinting
exceptions
try
catch
déclenchement
throw
classe
exception
classes
personnalisées
php
erreur
exception
exception
défaut
sauvegarder
objets
cas
session
autres
cas
rohaut
cours
programmation
php
page
introduction
définition
php
langage
script
html
exécuté
côté
serveur
veut
dire
php
hypertext
preprocessor
syntaxe
largement
inspirée
langage
java
perl
améliorations
spécifiques
but
langage
écrire
rapidement
page
html
dynamiques
historique
origine
php
remonte
quand
rasmus
lerdorf
créé
phpfifi
librairie
scripts
perl
utilisés
publication
cv
site
personnel
fur
mesure
évolutions
librairie
portée
agrémentée
nouvelles
fonctionnalités
créer
page
dynamiques
simples
web
accéder
quelques
sources
données
phpfifi
signifie
personal
home
page
forms
interpreter
phpfifi
sort
toujours
développé
seule
personne
succès
sites
noms
domaines
disent
utiliser
supporter
contributeurs
affluent
php
sort
juin
première
version
développée
conjointement
rasmus
lerdorf
andi
gutmans
zeev
suraski
entièrement
réécrite
versions
précédentes
trop
lentes
application
commerciale
outre
performances
php
modulaire
extensible
permettant
greffer
api
supplémentaires
manqué
support
nombreuses
base
données
formats
protocoles
syntaxe
plus
cohérente
support
basique
objet
installé
parc
mondial
serveurs
web
dizaines
milliers
développeurs
centaines
milliers
sites
moteur
php
repensé
afin
améliorer
performances
applications
complexes
augmenter
encore
modularité
nouveau
moteur
vu
jour
appelé
zend
engine
contraction
zeev
andi
php
sort
officiellement
mai
apporte
performances
accrues
supports
plusieurs
serveurs
web
sessions
sécurité
accrue
actuellement
dernière
version
stable
comptons
php
actuellement
version
beta
cycle
peut
durer
plusieurs
mois
but
php
amélioration
performances
moteur
zend
zend
engine
modèle
objet
étendu
très
proche
compatibilité
accrue
nouveaux
standards
anciens
rpc
xml
net
utilisation
pratique
forums
messageries
commerce
électronique
banque
comptes
ligne
publication
ligne
moteurs
recherche
tout
voulez
sauf
jeu
résumons
quelques
sigles
allons
utiliser
suite
html
hypertext
markup
language
php
people
hate
perl
non
php
hypertext
preprocessor
so
rohaut
cours
programmation
php
page
sql
structured
query
language
mysql
serveur
base
données
outils
accéder
lamp
linux
apache
mysql
php
quatuor
gagnant
serveurs
web
apache
php
mysql
linux
page
statiques
vs
page
dynamiques
page
statique
page
écrite
directement
html
peut
éventuellement
incorporer
code
javascript
donnant
semblant
e
dynamisme
uniquement
côté
navigateur
données
locales
traitements
plus
lourds
nécessitant
accès
base
données
formatage
tableau
fonction
résultats
recherche
poussée
graphisme
faut
passer
page
dynamiques
langage
exécuté
côté
serveur
asp
serveurs
microsoft
iis
perl
php
scripts
cgi
php
peut
être
utilisé
comme
langage
cgi
rappel
script
programme
cgi
programme
comme
autre
sortie
dédiée
navigateur
exemple
programme
shell
perl
sort
html
php
langage
script
comme
autre
peut
utiliser
cas
forcément
mieux
page
dynamiques
php
php
langage
server
side
côté
serveur
lors
chargement
page
php
serveur
va
lire
interpréter
exécuter
code
pui
renvoie
résultat
généralement
sous
forme
code
html
navigateur
ainsi
navigateur
utilisateur
voient
jamais
véritable
code
php
exécuté
plus
résultat
page
web
classique
html
besoin
installer
client
composants
spécifiques
java
notion
vitesse
exécution
côté
client
celle
serveur
prépondérante
pourquoi
préférer
php
autres
langages
comme
asp
asp
entièrement
langage
puisque
asp
veut
dire
active
server
page
asp
dispose
bien
entendu
propres
api
peuvent
être
accessibles
via
autre
langage
agit
utiliser
langage
quelconque
créer
page
dynamiques
nativement
disponible
iis
sous
windows
défaut
autres
systèmes
serveurs
web
comme
apache
existe
cependant
modules
compatibilité
asp
apache
comme
apache
asp
reprend
api
asp
étendant
programmation
perl
sous
windows
code
asp
fait
généralement
vbscript
jscript
aussi
possible
sous
unix
linux
apache
faut
alors
tourner
vers
solutions
commerciales
sun
one
asp
instant
asp
sous
so
rohaut
cours
programmation
php
page
windows
asp
vbscript
utilisés
accès
activex
composants
bien
pratiques
véritables
gruyères
sécurité
existe
jour
portage
activex
autres
systèmes
windows
php
disponible
toutes
plate
formes
permet
faire
chose
sinon
plus
asp
vbscript
oublions
php
dispose
plus
api
devez
déjà
connaître
devez
connaître
html
ainsi
langage
programmation
procédural
exemple
connaissance
basique
sql
peut
être
nécessaire
abordée
nécessaire
serveur
php
sert
seulement
faire
page
dynamiques
langage
interprété
titre
perl
python
tcl
capable
lancer
scripts
intéractifs
non
peut
utiliser
php
créer
interfaces
graphiques
extension
gtk
minimum
nécessaire
vital
apprendre
php
interpréteur
php
environnement
supporté
unix
windows
mac
parle
lamp
voit
bien
référence
système
linux
serveur
web
apache
serveur
base
données
mysql
interpréteur
php
version
php
permet
fonctionner
iis
mysql
existe
aussi
windows
peut
utiliser
architecture
wimp
windows
iis
mysql
php
wamp
windows
apache
mysql
php
ajouter
php
iis
laisser
porte
ouverte
tous
vents
préférera
seconde
solution
distributions
linux
disposent
déjà
nécessaire
architecture
lamp
paramétrage
assez
simple
plus
mode
user
mod
apache
permet
chaque
utilisateur
créer
site
web
répertoire
spécifique
répertoire
personnel
sous
windows
déjà
peu
plus
complexe
mettre
oeuvre
manuellement
emploie
distributions
toutes
faites
meilleure
nommant
easyphp
versions
meilleures
développer
peut
ainsi
développer
site
sous
windows
porter
tel
quel
serveur
unix
nécessaire
client
développer
suffit
simple
éditeur
vaut
mieux
préférer
éditeur
plus
évolué
supportant
coloration
syntaxique
quelques
fonctions
évoluées
éditeur
hapedit
parfait
développer
php
accès
base
mysql
peut
faire
depuis
navigateur
phpmyadmin
depuis
interface
mysqlcc
encore
dbdesigner
conception
tests
simple
navigateur
respectant
standards
web
respect
standards
w
organisme
international
faisant
loi
monde
standards
web
défini
série
normes
html
xml
xhtml
css
etc
pourquoi
respecter
standard
garantie
bon
fonctionnement
bon
affichage
manière
identique
page
so
rohaut
cours
programmation
php
page
tous
navigateurs
supportant
standard
bonne
déclaration
entête
html
navigateurs
ie
mozilla
opera
galeon
konqueror
etc
compatibles
standards
utilisation
balises
propriétaires
navigateur
blink
exemple
vbscript
sous
ie
proscrire
dernière
norme
html
valide
html
strict
xhtml
terme
remplacera
définitivement
html
aussi
bien
supporté
dernière
norme
css
cependant
cas
préférez
css
car
seul
opera
supporte
css
prenez
habitude
quand
possible
tester
site
deux
trois
navigateurs
ie
car
plus
répandu
opera
car
extrêmement
respectueux
standards
mozilla
car
challenger
probablement
remplaçant
terme
ie
plus
évolution
version
avant
longhorn
so
rohaut
cours
programmation
php
page
bases
présentation
php
langage
très
souple
prenant
sources
divers
langages
comme
perl
possible
avoir
plusieurs
styles
scripts
programmation
classique
dite
procédurale
programmation
objet
programmation
bordélique
souplesse
permet
très
grande
liberté
peu
comme
perl
inconvénient
peut
très
vite
obtenir
code
illisible
bordélique
ça
marche
très
bien
prenez
habitude
commenter
code
indenter
placer
instruction
ligne
syntaxe
base
intégration
html
page
php
porte
extension
php
page
php
peut
être
entièrement
programmée
php
mélangée
code
html
php
langage
embedded
html
dire
apparaît
importe
quel
endroit
page
html
ça
place
balises
particulières
php
peut
aussi
utiliser
balises
script
language
php
script
première
forme
préférable
plus
simplicité
compatibilité
xhtml
écrit
page
html
laquelle
intègre
code
php
html
head
title
titre
title
head
body
php
echo
hello
world
body
html
code
html
généré
suivant
html
head
title
titre
title
head
body
hello
world
body
html
utilisation
balises
intégration
code
page
web
très
souple
permet
jongler
facilement
code
php
code
html
php
if
expression
strong
ceci
vrai
strong
php
else
strong
ceci
faux
strong
php
so
rohaut
cours
programmation
php
page
séparateur
instructions
comme
instruction
termine
point
virgule
notez
balise
fermante
implique
fin
instruction
php
echo
ceci
test
php
echo
ceci
test
bloc
instructions
bloc
instructions
place
entre
accolades
bloc
instructions
peut
contenir
code
importe
quelle
longueur
considéré
reste
code
comme
instruction
unique
expression
valeur
peut
assigner
bloc
faire
calculs
commentaires
commentaires
utilisent
comme
notez
balise
fermante
ferme
commentaire
cours
php
echo
salut
commentaire
ligne
so
rohaut
cours
programmation
php
page
travailler
variables
déclarer
variable
variable
commence
dollar
suivi
nom
variable
variables
typées
moment
création
attention
php
sensible
casse
var
var
mêmes
variables
voici
règles
respecter
variable
peut
commencer
lettre
variable
peut
commencer
souligné
underscore
variable
doit
commencer
chiffre
déclaration
règles
var
var
var
var
toto
salut
ok
petitscochons
invalide
commence
chiffre
type
dépend
valeur
contexte
utilisation
peut
forcer
cast
ponctuellement
variable
type
données
appelle
transtypage
comme
type
variable
peut
changer
fonction
utilisation
contexte
php
effectue
automatiquement
transtypage
peut
parfois
fournir
résultats
surprenants
affecte
valeur
variable
signe
égal
sans
espace
avant
après
déclaration
transtypage
var
chaîne
var
var
maintenant
entier
var
var
var
maintenant
réel
type
double
var
p
petits
cochons
var
entier
vaut
défaut
variables
assignées
valeur
valeur
assignée
variable
recopiée
variable
php
peut
aussi
travailler
référence
variable
peut
référencer
autre
variable
dit
alors
variable
devient
alias
pointe
autre
variable
assigne
référence
utilisant
signe
devant
variable
assignée
var
ref
var
ref
devient
référence
var
echo
ref
affiche
var
echo
ref
affiche
ref
echo
var
affiche
attention
valeur
constante
null
insensible
casse
affecter
valeur
null
variable
signifie
pui
affecter
valeur
portée
variables
portée
variable
dépend
contexte
variable
déclarée
script
hors
fonction
globale
défaut
portée
limitée
script
courant
ainsi
code
éventuellement
inclus
include
require
accessible
fonctions
autres
scripts
so
rohaut
cours
programmation
php
page
globale
défaut
function
foo
echo
variable
locale
fonction
affiche
rien
accéder
variable
globale
fonction
faut
utiliser
mot
clé
global
globale
défaut
b
idem
function
foo
global
b
récupère
variables
globales
b
b
echo
bb
affiche
php
accepte
variables
statiques
comme
variable
statique
perd
valeur
quand
sort
fonction
function
test
static
static
echo
chaque
passage
fonction
variables
prédéfinies
php
dispose
grand
nombre
variables
prédéfinies
variables
généralement
type
scalaires
tableaux
elles
souvent
type
superglobales
dire
accessible
depuis
importe
sans
notion
portée
voici
quelques
tableaux
prédéfinis
voir
point
tableaux
comprendre
utilisation
globals
tableau
variables
globales
clé
nom
variable
server
variables
fournies
serveur
web
exemple
server
name
get
variables
fournies
http
méthode
get
formulaires
post
idem
méthode
post
cookie
variables
fournies
cookie
files
variables
téléchargement
fichier
upload
env
accès
variables
environnement
serveur
session
variables
session
voir
cours
sessions
note
avant
version
php
variables
passées
méthode
get
post
formulaires
url
ainsi
suite
automatiquement
créées
script
destination
http
www
toto
fr
page
php
action
enr
créait
automatiquement
variable
action
prenait
valeur
enr
input
type
hidden
name
cache
value
toto
créait
page
cible
action
form
variable
cache
valeur
toto
plus
automatique
depuis
php
faut
passer
tableaux
superglobaux
ci
dessus
peut
cependant
passer
outre
modifiant
valeur
register
globals
php
ini
so
rohaut
cours
programmation
php
page
variables
dynamiques
variable
dynamique
utilise
valeur
variable
comme
nom
autre
variable
utilise
variables
dynamiques
rajoutant
devant
nom
première
variable
var
equivaut
fait
var
echo
affiche
var
echo
affiche
echo
var
affiche
attention
tableaux
éviter
toute
ambiguïté
préférable
placer
variable
entre
accolades
types
variables
booléens
booléen
peut
prendre
deux
valeurs
true
false
deux
constantes
true
false
peuvent
être
utilisées
sans
aucune
distinction
casse
différences
entre
majuscules
minuscules
var
false
false
false
false
var
true
true
true
true
tous
types
peuvent
être
convertis
booléens
voici
cas
variable
retournera
false
booléen
suivant
type
booléen
false
entier
zéro
nombre
flottant
zéro
chaîne
chaîne
vide
zéro
tableau
tableau
vide
sans
aucun
élément
objet
objet
vide
sans
aucun
élément
constante
spéciale
null
tous
autres
cas
valeur
retournée
true
attention
considéré
comme
vrai
true
comme
tests
conditions
structures
contrôles
effectuent
convertion
booléenne
condition
if
var
true
echo
ok
if
var
echo
ok
identique
entiers
entier
ensemble
nombres
naturels
dire
virgule
positifs
négatifs
entiers
généralement
codés
bits
cela
dépend
architecture
affecte
nombre
entier
dépasse
capacité
variable
celle
ci
transformée
réel
float
enfin
notion
entier
non
signé
lors
conversion
booléen
entier
false
devient
true
devient
lors
conversion
nombre
virgule
flottante
nombre
arrondi
valeur
inférieure
so
rohaut
cours
programmation
php
page
positif
supérieure
négatif
conversion
vers
zéro
conversion
depuis
chaînes
voir
type
virgule
flottante
parte
ici
nombres
réels
double
float
dire
nombres
virgules
virgule
spécifiée
point
puissance
exprime
e
e
var
var
e
chaînes
caractères
chaîne
séquence
caractères
php
travaille
ascii
caractères
supporte
encore
format
unicode
prévu
version
limite
théorique
taille
chaîne
distingue
trois
syntaxes
utiliser
chaîne
guillemets
simples
apostrophes
comme
shell
tous
caractères
inclus
chaîne
sortis
tels
quels
sans
interprétation
devez
afficher
guillemet
simple
faudra
échapper
guillemets
doubles
certaines
séquences
caractères
interprétées
variables
substituées
remplacées
valeur
heredoc
identique
herescripts
shell
texte
saisi
jusque
délimiteur
spécifié
placé
variable
voici
tableau
issu
documentation
php
séquences
pouvant
être
utilisés
guillemets
doubles
séquence
valeur
nouvelle
ligne
linefeed
lf
x
ascii
r
retour
ligne
carriage
return
cr
x
ascii
tabulation
horizontale
ht
x
ascii
çù
antislash
caractère
guillemets
doubles
séquence
caractères
permet
rechercher
nombre
notation
octale
x
fa
séquence
caractères
permet
rechercher
nombre
f
notation
hexadécimale
echo
attention
abus
alcool
dangereux
var
echo
valeur
var
var
toto
fin
so
rohaut
cours
programmation
php
page
salut
ami
comment
ça
va
fin
echo
toto
importe
quelle
variable
peut
être
affichée
chaîne
comme
ci
dessus
attention
deux
variables
nom
proche
faut
alors
utiliser
accolades
comme
shell
enfin
peut
accéder
importe
quel
caractère
chaîne
indiquant
position
commence
zéro
entre
deux
accolades
collées
juste
après
nom
variable
fic
toto
fic
fics
riri
fifi
loulou
echo
fics
fic
affiche
riri
fifi
loulou
toto
fics
echo
fic
affiche
o
peut
facilement
concaténer
deux
chaînes
opérateur
point
peut
ajouter
texte
chaîne
opérateur
point
égal
str
salut
ami
str
comment
ça
va
salut
amis
ncomment
ça
va
str
str
salut
amis
ncomment
ça
va
devez
utiliser
chaîne
caractères
comme
valeur
numérique
addition
exemple
attention
contenu
chaîne
type
double
réel
contient
e
e
sinon
entier
valeur
numérique
ensuite
définie
début
chaîne
chaîne
commence
valeur
numérique
utilisée
sinon
égale
zéro
première
expression
chaîne
type
variable
dépend
seconde
expression
val
float
val
toto
p
val
petits
cochons
p
premier
chaîne
tableaux
tableau
php
association
ordonnée
association
fait
correspondre
valeurs
clés
tableaux
très
souples
peuvent
avoir
multiples
dimensions
être
indexés
clé
numérique
texte
être
utilisés
comme
table
hachage
pile
queue
valeur
tableau
peut
être
tableau
créer
arbres
exemple
tableau
créé
fonction
array
prend
comme
arguments
paires
key
value
séparées
virgules
clé
peut
être
entier
texte
attention
entier
chaîne
clé
absente
alors
dernière
clé
entière
plus
choisie
première
zéro
accède
éléments
tableau
aide
crochets
place
entre
crochets
clé
entière
chaîne
var
array
echo
var
echo
var
tab
array
nom
toto
pipo
echo
tab
pipo
echo
tab
echo
tab
echo
tab
nom
toto
so
rohaut
cours
programmation
php
page
utilisation
fonction
array
obligatoire
peut
déclarer
tableau
volée
tab
tab
equivaut
tab
tab
test
chaîne
peut
aussi
créer
tableaux
multidimensionnels
aide
deux
méthodes
précédentes
tab
array
array
riri
fifi
loulou
array
array
e
deux
trois
echo
tab
riri
echo
tab
echo
tab
trois
tab
deux
test
créé
tableau
deux
dimensions
existe
fonction
très
pratique
lister
contenu
tableau
modifier
éléments
foreach
tab
array
deux
trois
foreach
tab
valeur
echo
valeur
affiche
deux
trois
foreach
tab
cle
valeur
echo
cle
çù
valeur
affiche
çù
deux
çù
trois
variable
objet
objets
créent
instruction
class
créer
instace
objet
faut
utiliser
mot
clé
new
class
test
function
affiche
hello
echo
hello
obj
new
test
obj
affiche
hello
constantes
constantes
nom
prend
valeur
pouvant
être
modifiée
foi
fixée
constante
accessible
lecture
seule
elles
sensibles
casse
doivent
convention
être
écrites
majuscules
définit
constante
fonction
define
doit
respecter
certaines
règles
constante
commence
constante
accessible
depuis
importe
quel
endroit
code
constante
peut
être
redéfinie
constante
peut
contenir
scalaire
entier
booléen
chaîne
double
define
constante
valeur
echo
constante
affiche
valeur
so
rohaut
cours
programmation
php
page
obtenir
type
variable
obtenir
type
variable
utilise
fonction
gettype
retourne
chaîne
texte
indiquant
type
attention
rien
garantit
résultat
version
php
autre
types
retournés
boolean
integer
double
raisons
historiques
double
retournée
lorsqu
valeur
type
float
fournie
lieu
chaîne
float
string
array
object
resource
depuis
php
null
depuis
php
unknown
type
souhaitez
réellement
tester
type
variable
préférable
utiliser
fonctions
type
isçë
is
array
is
bool
is
double
is
float
is
int
is
integer
is
long
is
null
is
numeric
is
object
is
real
is
resource
is
string
is
callable
fonction
définir
supprimer
variable
souhaitez
savoir
variable
définie
dire
affectée
utilise
isset
enfin
souhaitez
supprimer
variable
faut
utiliser
unset
so
rohaut
cours
programmation
php
page
opérateurs
précédence
opérateurs
ordre
lequel
valeurs
doivent
être
analysées
ainsi
expression
p
lue
gauche
droite
retourne
voici
tableau
priorités
opérateurs
ordre
croissant
priorité
associativité
opérateurs
gauche
gauche
or
gauche
xor
gauche
and
droite
print
gauche
çù
çù
çù
gauche
gauche
gauche
gauche
gauche
gauche
non
associative
çùë
çù
non
associative
çù
gauche
çù
gauche
p
gauche
droite
uu
int
double
string
array
object
droite
non
associative
new
opérateurs
arithmétiques
opérateurs
p
modulo
reste
division
opérateurs
assignation
principal
aussi
comme
opérateurs
combinés
uà
opérateurs
bits
opérateurs
and
or
xor
not
b
décalage
bb
bits
so
rohaut
cours
programmation
php
page
gauche
ça
çù
b
décalage
bb
bits
droite
décalage
bits
gauche
équivaut
multiplication
deux
décalage
droite
division
deux
opérateurs
comparaison
opérateurs
b
valeur
b
valeur
type
différent
aussi
opérateur
ternaire
expr
expr
expr
expr
vrai
alors
expr
sinon
expr
opérateur
erreur
dispose
opérateur
spécial
appliqué
expression
empêche
sortie
message
erreur
cas
problème
peut
toujours
récupérer
message
erreur
éventuel
aide
variable
php
errormsg
uniquement
option
track
errors
php
ini
retour
tab
toto
retourne
erreurs
index
toto
existe
opérateur
exécution
peut
exécuter
commandes
externes
php
comme
shell
opérateurs
guillemts
inverses
altgr
attention
option
safeëmode
doit
être
php
ini
peut
aussi
utiliser
fonction
shell
exec
fait
exécuter
commande
shell
opérateurs
incrémentation
décrémentation
dispose
comme
opérateurs
uu
utiliser
avant
après
nom
variable
çauu
retourne
ça
pui
incrémente
incrémente
ça
pui
retourne
ça
ça
retourne
pui
décrémente
ça
décrémente
ça
pui
retourne
attention
opérateurs
réagissent
types
variables
php
réagit
comme
perl
ainsi
z
echo
retourne
aa
çauu
echo
retourne
ab
opérateurs
logiques
opérateurs
logiques
and
and
b
bb
vrai
b
vrais
or
or
bb
çù
bb
vrai
b
vrais
xor
xor
bb
vrai
b
vrais
deux
temps
ça
vrai
ça
faux
attention
and
or
priorité
priorité
plus
faible
çù
so
rohaut
cours
programmation
php
page
opérateurs
chaînes
deux
opérateurs
chaînes
concatène
deux
chaînes
entre
elles
déjà
vu
opérateur
assignation
bonjour
b
ami
b
contient
bonjour
ami
b
salut
b
contient
bonjour
ami
salut
opérateur
tableaux
peut
additionner
deux
tableaux
entre
p
tableau
droite
ajouté
tableau
gauche
so
rohaut
cours
programmation
php
page
notion
expression
php
expression
peut
être
résumée
tout
valeur
ceci
dit
remarque
vite
php
tout
presque
expression
variable
constante
voient
affectés
valeurs
valeur
expression
variable
constante
pouvons
résumer
disant
expression
représente
tout
peut
être
évalué
peut
évaluer
valeurs
fonction
peut
aussi
être
expression
retourne
valeur
dit
généralement
fonction
retourné
telle
valeur
comparaison
aussi
expression
retourne
valeur
booléenne
calcul
aussi
expression
puisque
valeur
retournée
affectée
calculée
php
orienté
expression
fait
tout
presque
php
expression
php
cherche
décomposer
tout
possible
expressions
évaluer
optimiser
traitements
voici
quelques
exemples
distingue
premier
coup
oeil
deux
valeurs
variable
ça
valeur
variable
ça
mise
jour
valeur
or
interne
troisième
valeur
rentre
jeu
valeur
assignation
ici
assignée
ligne
signifie
fait
expression
vaut
b
assignations
analysées
droite
gauche
ici
expression
vaut
bb
vaut
aussi
plus
rapide
écrire
exécuter
b
php
évalue
abord
expression
valeur
ça
incrémentée
assigne
nouvelle
valeur
résultat
plus
rapide
car
évalué
seule
foi
peut
arriver
avoir
expressions
surprenantes
b
variable
ça
incrémentée
vaut
expression
vaut
bb
voit
assigné
valeur
expression
vaut
dernière
chose
ça
b
expression
vrai
expression
b
évaluée
sinon
expression
évaluée
so
rohaut
cours
programmation
php
page
true
b
echo
b
affiche
so
rohaut
cours
programmation
php
page
structures
contrôle
if
if
expression
commande
bloc
commandes
else
commande
bloc
commandes
aussi
elseif
combinaison
if
else
elseif
mot
peut
aussi
écrire
deux
mots
résultat
peut
écrire
elseif
chaîne
premier
expression
vrai
exécuté
if
expression
commande
bloc
commandes
elsif
expression
commande
bloc
commandes
elsif
expression
commande
bloc
commandes
peut
placer
html
comme
commande
bloc
commande
php
if
php
peut
aussi
utiliser
syntaxe
alternative
ouvre
bloc
juste
après
if
else
elseif
deux
points
ferme
instruction
endif
php
if
print
print
elseif
print
print
else
print
vaut
endif
while
while
classique
boucle
tant
simple
tant
condition
vraie
continue
boucle
expression
placée
début
boucle
expression
fausse
avant
rentrer
boucle
boucle
exécutée
while
expression
commande
bloc
commandes
peut
aussi
utiliser
syntaxe
alternative
while
expression
commande
bloc
commandes
endwhile
do
while
seconde
possibilité
cas
commande
bloc
commande
exécutée
so
rohaut
cours
programmation
php
page
moins
foi
car
expression
conditionnelle
testée
fin
boucle
do
bloc
commandes
while
expression
for
for
php
identique
for
co
for
expr
expr
expr
commande
bloc
commandes
expr
exécutée
première
entrée
boucle
expr
exécutée
chaque
début
itération
jusque
expression
fausse
auquel
cas
sort
boucle
expr
exécutée
fin
itération
usage
habituel
telle
boucle
placer
état
initial
expr
condition
sortie
expr
calcul
expr
peu
effectuer
toutes
sortes
choses
for
çi
çi
çù
print
çi
çiu
infini
for
for
çi
çi
çù
print
çi
çiu
peut
employer
syntaxe
alternative
endfor
for
expr
expr
expr
commande
bloc
commandes
endfor
foreach
boucle
foreach
peut
être
plus
intéressantes
manipulation
tableaux
résultats
requêtes
sql
permet
lister
tableaux
dispose
deux
syntaxes
foreach
array
expression
value
commandes
foreach
array
expression
key
value
commandes
première
syntaxe
récupère
éléments
tableau
séquentiellement
valeur
élément
courant
tableau
placée
value
seconde
syntaxe
presque
identique
sauf
plus
clé
index
élément
actuel
placée
key
attention
modifier
valeur
value
key
modifie
tableau
car
boucle
travaille
copie
référence
contre
second
cas
comme
dispose
clé
rien
empêche
assigner
quoi
élément
courant
remarque
appel
foreach
rembobine
automatiquement
tableau
premier
élément
autres
boucles
faut
alors
utiliser
reset
reset
arr
while
list
value
each
arr
echo
valeur
value
br
so
rohaut
cours
programmation
php
page
foreach
arr
value
echo
valeur
value
br
array
deux
çù
trois
çù
dix
sept
çù
foreach
k
v
print
k
v
break
continue
instruction
break
permet
sortir
for
while
foreach
switch
peut
indiquer
combien
structures
souhaite
sortir
elles
emboîtées
instruction
continue
permet
passer
itération
suivante
attention
php
conside
switch
comme
boucle
cas
réévalue
switch
peut
indiquer
continue
combien
structures
emboîtées
relancer
switch
switch
équivalent
série
if
permet
comparer
grand
nombre
valeurs
switch
çi
case
print
i
egale
break
case
print
i
egale
break
case
print
i
egale
break
default
print
i
inférieur
supérieur
switch
arrête
première
expression
case
vraie
pui
exécute
code
suivant
ordre
indiqué
jusque
première
instruction
break
break
tout
code
jusque
fin
switch
exécuté
exemple
suivant
i
vaut
tous
print
affichés
switch
çi
case
print
i
egale
case
print
i
egale
case
print
i
egale
notez
aussi
default
doit
intervenir
dernier
sinon
aucun
intérêt
enfin
peut
employer
syntaxe
alternative
endswitch
so
rohaut
cours
programmation
php
page
switch
çi
case
print
i
egale
break
case
print
i
egale
break
endswitch
return
contrairement
autres
langages
return
fonction
instruction
fonction
return
sert
sortir
celle
ci
retourner
valeur
script
sort
celui
ci
attention
cependant
scripts
inclus
voir
require
include
return
type
code
considère
sort
fonction
require
include
sort
script
fonction
lesquels
code
inclus
comme
return
élément
langage
fonction
besoin
utiliser
parenthèses
require
include
once
require
include
incluent
endroit
actuel
exécutent
fichier
php
identiques
fonctionnement
exception
traitement
erreurs
include
produit
warning
code
continue
principe
exécuter
tandis
require
produit
erreur
fatale
exécution
arrête
comme
require
include
éléments
langage
fonctions
besoin
utiliser
parenthèses
require
once
include
once
ressemblent
leurs
homologues
cependant
différence
quoi
arrive
fichier
inclus
seule
foi
second
require
once
apparaît
fichier
instruction
exécutée
so
rohaut
cours
programmation
php
page
fonctions
syntaxe
portée
voici
syntaxe
fonction
function
fonc
arg
arg
arg
argn
bloc
commandes
return
valeur
fonction
besoin
être
déclarée
avant
être
utilisée
sauf
voulez
rester
compatible
php
moment
apparaît
script
cependant
deux
exceptions
fonction
conditionnelle
dire
déclarée
if
fonction
déclarée
autre
fonction
premier
cas
inconnue
reste
code
tant
condition
if
vraie
second
cas
connue
quand
première
fonction
exécutée
voici
exemple
tiré
manuel
premier
cas
makefoo
true
impossible
appeler
foo
ici
car
fonction
existe
pouvons
utiliser
bar
bar
if
makefoo
function
foo
echo
existe
tant
programme
passé
ici
maitenant
pouvons
appeler
foo
car
makefoo
maintenant
vrai
if
makefoo
foo
function
bar
echo
existe
dès
début
programme
second
cas
function
foo
function
bar
echo
existe
tant
foo
appelé
impossible
appeler
bar
ici
car
existe
foo
maintenant
pouvons
appeler
bar
car
utilisation
foo
rendu
accessible
bar
arguments
peut
passer
autant
arguments
souhaité
fonction
php
tous
types
arguments
so
rohaut
cours
programmation
php
page
séparés
virgules
défaut
passés
copie
function
affiche
msg
echo
msg
possible
passer
arguments
référence
peut
changer
valeur
intérieur
fonction
cela
rajoute
devant
argument
peut
passer
ponctuellement
variable
référence
plaçant
devant
nom
lors
appel
fonction
function
modifëëm
msg
coucou
msg
salut
modifëmsgë
echo
msg
coucou
peut
aussi
définir
valeurs
défaut
attention
liste
paramètres
valeurs
défaut
doivent
être
dernier
function
affiche
nom
prenom
toto
echo
nom
prenom
enfin
peut
utiliser
nombre
variable
arguments
fonctions
func
num
args
func
get
arg
func
get
args
function
foo
numargs
func
num
args
echo
nombre
arguments
numargs
foo
affiche
nombre
arguments
valeur
retour
retourne
valeur
instruction
return
peut
retourner
tout
type
valeurs
plusieurs
temps
cependant
rien
empêche
cas
retourner
tableau
fonction
peut
aussi
retourner
référence
cas
doit
être
déclarée
devant
nom
function
carre
num
return
num
num
echo
carre
affiche
e
fonctions
internes
plus
fonctions
définies
utilisateur
php
propose
grand
nombre
fonctions
internes
couvrant
multitude
domaines
accéder
fonctions
faut
simplement
appeler
nom
module
correspondant
compilé
php
verrons
chapitres
suivants
comment
utiliser
certaines
so
rohaut
cours
programmation
php
page
gestion
formulaires
php
get
post
but
récupérer
contenu
champs
formulaire
html
code
php
pouvoir
traiter
lorsqu
formulaire
envoyé
script
php
toutes
variables
disponibles
automatiquement
script
formulaires
peuvent
être
type
get
post
rappel
formulaire
type
get
informations
passées
directement
url
clair
peut
poser
problèmes
limitations
suivant
serveur
octets
selon
cas
méthode
post
genre
limitation
car
informations
transmises
conteneur
variables
globales
entête
plus
cachées
php
peut
gérer
deux
méthodes
manière
transparente
récupération
tableau
chaque
champ
formulaire
php
défini
nom
valeur
script
php
va
récupérer
noms
valeurs
tableaux
spéciaux
dit
superglobaux
accessibles
depuis
partout
méthode
get
tableau
get
méthode
post
tableau
post
souhaitez
soucier
méthode
pouvez
utiliser
tableau
request
index
nom
champ
formulaire
variable
passée
url
valeur
valeur
champ
exemple
form
action
foo
php
method
post
name
input
type
text
name
username
br
email
input
type
text
name
email
br
input
type
submit
name
submit
value
submit
form
page
php
foo
php
php
echo
post
username
echo
request
email
imaginons
appel
page
test
php
url
comme
ceci
http
www
monsite
com
test
php
id
ici
transmet
variable
via
url
méthode
implicite
get
récupérer
id
code
php
peut
faire
php
echo
get
id
echo
request
id
get
contiendra
variables
type
get
post
contiendra
variables
type
post
request
contient
variables
type
post
get
aussi
variables
cookies
aussi
possible
procéder
autrement
récupérant
nom
champ
directement
tant
variable
sans
passer
tableau
cela
faut
vérifier
fichier
php
ini
valeur
register
globals
cas
noms
champs
formulaire
so
rohaut
cours
programmation
php
page
noms
variables
php
echo
username
echo
email
récupération
directe
valeur
off
diverses
raisons
sécurité
droit
etc
souhaitez
pouvez
modifier
existe
tout
méthode
fonction
import
request
variables
permet
effectuer
explicitement
chose
fonction
prend
deux
paramètres
second
optionnel
après
exécution
récupère
variables
sans
passer
tableau
premier
paramètre
type
variables
souhaite
récupérer
p
p
variables
type
post
g
g
variables
type
get
variables
type
cookie
peut
cumuler
ensemble
attention
ordre
second
paramètre
préfixe
souhaite
donner
nom
variables
va
récupérer
voici
deux
exemples
php
import
request
variables
p
echo
username
php
import
request
variables
p
post
echo
post
username
peut
aussi
passer
fonction
extract
permet
exporter
tableau
variables
ainsi
tableau
post
php
extract
post
echo
username
utiliser
tableaux
formulaires
permettent
utiliser
listes
choix
multiples
php
doit
récupérer
ensemble
choix
utilisateur
ça
faut
utiliser
tableaux
form
action
php
echo
http
server
vars
php
self
method
post
name
input
type
text
name
personal
name
br
email
input
type
text
name
personal
email
br
beer
br
select
multiple
name
vin
option
value
bordeaux
bordeaux
option
option
value
beaujolais
beaujolais
option
option
value
loire
loire
option
select
br
so
rohaut
cours
programmation
php
page
input
type
hidden
name
action
value
submitted
input
type
submit
name
submit
value
submit
form
exemple
précédent
exemple
sélectionne
plusieurs
vins
ex
bordeaux
beaujolais
vin
bordeaux
vin
beaujolais
so
rohaut
cours
programmation
php
page
date
heure
localisation
format
date
heure
format
langue
dépendant
environnement
exécution
code
php
généralement
plupart
serveurs
web
incorporant
php
configurés
langue
anglaise
gestion
informations
localisation
anglais
peut
être
préférable
passer
français
site
francophone
simplifie
largement
tâche
peut
effectuer
cela
fonction
setlocale
voici
deux
exemples
sous
nt
autre
sous
linux
if
substr
php
uname
windows
setlocale
lc
time
fr
fr
euro
else
setlocale
lc
time
fr
exemple
vérifions
abord
quel
système
faire
fonction
php
uname
pui
fonction
résultat
passons
localisation
française
selon
deux
méthodes
après
changement
appels
fonctions
retournant
jours
semaine
mois
feront
français
récupérer
date
heure
date
plus
simple
utiliser
fonction
date
retourne
heure
locale
sous
forme
chaîne
caractères
préciser
premier
paramètre
second
paramètre
peut
préciser
timestamp
souhaite
heure
actuelle
récupérer
date
jour
echo
date
voici
caractères
utilisables
documentation
php
am
matin
pm
après
midi
am
matin
pm
après
midi
b
heure
internet
swatch
jour
mois
deux
chiffres
éventuellement
zéro
jour
semaine
trois
lettres
anglais
exemple
fri
vendredi
f
mois
textuel
version
longue
anglais
i
e
january
janvier
g
heure
format
h
sans
zéros
initiaux
i
e
g
heure
format
h
sans
zéros
initiaux
i
e
h
heure
format
h
h
heure
format
h
i
minutes
i
i
majuscule
heure
activée
heure
hiver
jour
mois
sans
zéros
initiaux
so
rohaut
cours
programmation
php
page
minuscule
jour
semaine
textuel
version
longue
anglais
i
e
friday
vendredi
booléen
savoir
année
bissextile
mois
i
e
mois
trois
lettres
anglais
exemple
apr
avril
mois
sans
zéros
initiaux
i
e
o
différence
heures
heure
greenwich
exprimée
heures
i
e
r
format
date
rfc
i
e
thu
dec
ajouté
php
secondes
i
e
suffixe
ordinal
nombre
anglais
deux
lettres
i
e
th
nd
nombre
jours
mois
donné
i
e
fuseau
horaire
machine
i
e
met
u
secondes
depuis
époque
w
jour
semaine
numérique
i
e
dimanche
to
samedi
w
numéro
semaine
année
iso
semaines
commencent
lundi
ajouté
php
année
chiffres
i
e
année
chiffres
i
e
z
jour
année
i
e
z
décalage
horaire
secondes
i
e
tout
autre
caractère
peut
être
employé
interprété
désirez
employer
caractères
faut
verrouiller
antislash
attention
fonction
resultat
anglais
peut
récupérer
timestamp
actuel
fonction
time
commande
suivante
effet
précédente
echo
date
time
date
locale
strftime
formater
résultat
local
tenir
compte
localisation
faut
utiliser
fonction
strftime
tient
compte
langue
résultat
français
premier
paramètre
chaîne
formatage
second
éventuel
timestamp
nom
abrégé
jour
semaine
local
ça
nom
complet
jour
semaine
local
bb
nom
abrégé
mois
local
bb
nom
complet
mois
local
représentation
préférée
dates
heures
local
numéro
siècle
année
divisée
arrondie
entre
so
rohaut
cours
programmation
php
page
jour
mois
numérique
intervalle
identique
e
numéro
jour
mois
chiffres
précédés
espace
héh
identique
bb
h
heure
journée
numérique
heures
intervalle
çi
heure
journée
numérique
heures
intervalle
jour
année
numérique
intervalle
mois
numérique
intervalle
minute
numérique
newline
character
p
àm
e
oùpm
fonction
heure
absolue
fonction
valeurs
enregistrées
local
r
heure
format
p
r
heure
format
h
secondes
numérique
tabulation
heure
actuelle
égal
h
çu
numéro
jour
semaine
représente
lundi
çu
numéro
semaine
année
considérant
premier
dimanche
année
comme
premier
jour
première
semaine
v
numéro
semaine
comme
défini
iso
sous
forme
décimale
semaine
première
semaine
plus
jours
année
courante
lundi
premier
jour
w
numéro
semaine
année
considérant
premier
lundi
année
comme
premier
jour
première
semaine
w
jour
semaine
numérique
dimanche
x
format
préféré
représentation
date
sans
heure
x
format
préféré
représentation
heure
sans
date
çy
année
numérique
deux
chiffres
çy
année
numérique
quatre
chiffres
z
fuseau
horaire
nom
abréviation
caractèrè
littéral
retour
tableau
getdate
fonction
getdate
permet
aussi
récupérer
date
heure
actuels
éventuellement
timestamp
paramètre
sous
forme
tableau
indexé
selon
valeurs
suivantes
seconds
secondes
minutes
minutes
so
rohaut
cours
programmation
php
page
hours
heures
mday
jour
mois
wday
jour
semaine
numérique
dimanche
jusque
samedi
mois
numérique
year
année
numérique
yday
jour
année
numérique
i
e
weekday
jour
semaine
texte
complet
anglais
i
e
friday
month
mois
texte
complet
anglais
i
e
january
aujourdhui
getdate
mois
aujourdhui
month
mjour
aujourdhui
mday
annee
aujourdhui
year
echo
mjour
mois
annee
heure
localtime
heure
peut
utiliser
fonctions
localtime
peut
aussi
prendre
paramètre
timestamp
retourne
tableau
indexé
selon
valeurs
suivantes
tm
sec
secondes
tm
min
minutes
tm
hour
heure
tm
mday
jour
mois
tm
mois
année
tm
year
année
incompatible
an
tm
wday
jour
semaine
tm
yday
jour
année
tm
isdst
heure
hiver
pris
effet
récupérer
importe
quelle
date
peut
récupérer
importe
quelle
date
timestamp
chaîne
peut
cela
utiliser
fonction
strtotime
prend
comme
paramètre
chaîne
texte
anglais
essaie
convertir
timestamp
voici
quelques
exemples
echo
strtotime
now
timestamp
actuel
echo
strtotime
day
hier
echo
strtotime
day
demain
echo
strtotime
september
septembre
echo
strtotime
year
week
day
an
semaines
jours
so
rohaut
cours
programmation
php
page
mysql
présentation
mysql
sgbdr
système
gestion
base
données
relationnel
définit
comme
base
données
open
source
plus
populaire
monde
rien
ça
vrai
edité
société
mysql
ab
mysql
produit
open
source
libre
utilisation
sous
licence
gpl
projets
libres
cependant
licence
commerciale
nécessaire
autres
cas
notamment
souhaite
redistribuer
mysql
produit
non
libre
souhaite
support
technique
version
production
actuelle
mysql
version
écriture
support
grande
majorité
serveurs
hébergeurs
encore
dernières
versions
mysql
future
version
actuellement
développement
surtout
utiliser
production
principales
qualités
mysql
simplicité
rapidité
principale
défaut
manque
fonctionnalités
dites
avancées
versions
précédentes
clé
étrangères
procédures
stockées
triggers
selects
imbriqués
notamment
cela
doit
occulter
puissance
ajout
fonctionnalités
avancées
comme
syntaxe
sql
étendue
replace
limit
delete
index
recherche
fulltext
permettant
créer
moteurs
recherche
prochaine
version
stable
comblera
lacunes
précédentes
versions
support
complet
syntaxe
sql
ansi
outils
phpmyadmin
reste
bien
entendu
possible
utiliser
mysql
ligne
commande
peu
comme
sqlplus
oracle
bien
plus
aise
environnement
plus
intuitif
ainsi
outil
phpmyadmin
interface
web
mysql
permettant
effectuer
plupart
tâches
maintenance
utilisation
solution
fonctionne
depuis
importe
quel
navigateur
indépendante
machine
accède
phpmyadmin
généralement
url
http
server
name
mysql
so
rohaut
cours
programmation
php
page
mysqlcc
mysqlcc
mysql
control
center
front
end
graphique
officiel
mysql
développé
société
basé
e
toolkit
qt
disponible
sous
windows
unix
linux
bientôt
macos
permet
administration
serveur
gestion
base
tables
exécution
requêtes
sql
interactives
coloration
syntaxique
créer
base
partir
écran
accueil
phpmyadmin
saisit
nom
base
créer
base
données
faut
préférence
choisir
nom
simple
intuitif
pui
clique
créer
après
création
nouvelle
page
affiche
page
principale
administration
base
haut
toujours
présents
après
exécution
commande
résultats
celle
ci
écran
permet
notamment
exécution
commandes
sql
travail
tables
utilisateurs
droits
menu
gauche
choisit
tiret
correspond
racine
administration
serveur
mysql
nouvelle
page
choisit
utilisateurs
privilèges
page
suivante
permet
ajouter
utilisateur
faut
faire
attention
chose
serveur
effet
suivant
configuration
initiale
linux
exemple
droits
dépendent
façon
accédée
base
ainsi
localhost
identiques
base
appelée
depuis
autre
ip
autre
nom
utilisateur
tous
droits
cas
doute
suffit
choisir
tout
serveur
créer
administrateur
mieu
donner
tous
privilèges
utilisateur
standard
requêtes
sélection
ajout
mise
jour
suppression
enregistrements
choisira
privilèges
select
insert
update
delete
so
rohaut
cours
programmation
php
page
foi
utilisateur
créé
plusieurs
base
présentes
peut
affiner
droits
chacune
base
liste
utilisateurs
leurs
droits
base
affiché
haut
choisissant
modifier
peut
affiner
sélection
notamment
passant
autres
privilèges
droits
base
tables
colonnes
créer
modifier
tables
retourne
menu
gauche
base
existante
écran
administration
saisit
bas
page
nom
table
nombre
champs
colonnes
possible
après
coup
rajouter
supprimer
pui
choisit
créer
étape
suivante
consiste
définir
table
intéressons
différents
types
champs
possibles
types
numériques
types
entiers
chaque
entier
peut
ajouter
mot
clé
unsigned
non
signé
attention
type
bigint
limitations
voir
documentation
mysql
entre
parenthèses
valeurs
unsigned
possible
fournir
précision
affichage
nombre
chiffres
exemple
taille
tinyint
équivaut
valeur
tinyint
smallint
mediumint
int
integer
bigint
types
réels
flottants
float
nombre
virgule
flottante
double
double
precision
real
nombre
virgule
flottante
double
précision
decimal
dec
numeric
spécial
valeurs
unpacked
chaîne
texte
types
booléens
bit
bool
boolean
depuis
bit
équivaut
tinyint
types
caractères
types
méritent
peu
plus
explications
so
rohaut
cours
programmation
php
page
types
char
char
chaîne
caractère
taille
peut
être
caractères
taille
définie
création
table
table
champ
prend
effectivement
nombre
caractères
indiqué
taille
réelle
inférieure
varchar
chaîne
caractère
taille
maximale
peut
être
caractères
longueur
peut
être
variable
mysql
stocke
plus
octet
contenant
longueur
chaîne
optimisation
chaîne
caractères
va
prendre
octets
place
table
peut
rajouter
définition
binary
défaut
champs
char
varchar
triés
sans
tenir
compte
casse
attribut
binary
permet
trier
tenant
compte
casse
selon
machine
champs
espaces
finaux
supprimés
types
text
types
text
blob
permettent
stocker
quantités
variables
texte
selon
leurs
définitions
ici
longueur
texte
tiny
blob
text
octets
blob
text
octets
medium
blob
text
octets
long
blob
text
octets
text
blob
utilisent
manière
identique
faut
respecter
rêgles
suivantes
lors
tris
champ
blob
tient
compte
casse
champ
text
peut
faire
recherche
fulltext
champ
type
blob
faudra
utiliser
champs
text
champs
type
text
blob
prennent
valeurs
défaut
espaces
finaux
supprimés
type
enum
champ
type
enum
peut
contenir
chaîne
texte
plusieurs
prédéfinies
création
table
voici
exemple
create
table
test
id
int
not
null
auto
increment
enum
enum
oui
non
primary
key
id
so
rohaut
cours
programmation
php
page
champ
enum
pourra
prendre
deux
valeurs
oui
non
tente
mettre
autre
chose
insert
into
text
enum
values
toto
cas
chaîne
vide
insérée
place
champ
déclaré
not
null
valeur
défaut
devient
première
liste
énumération
type
set
type
set
ressemble
peu
type
enum
sauf
champ
peut
avoir
plusieurs
valeurs
parmi
liste
prédéfinie
création
table
type
enum
seule
valeur
autorisée
champ
type
set
plusieurs
valeurs
séparées
espaces
autorisées
create
table
test
id
int
not
null
auto
increment
set
set
oui
non
primary
key
id
insert
into
test
set
values
oui
non
insert
into
test
set
values
non
oui
insert
into
test
set
values
oui
effectue
recherche
élément
set
like
fonction
find
in
set
select
from
test
where
set
like
oui
select
from
test
where
find
in
set
oui
set
types
date
attention
dates
logique
mysql
laisser
développeurs
soin
contrôler
validité
leurs
dates
ainsi
mysql
autorisera
enregistrement
date
type
seuls
tests
effectués
validité
mois
entre
validité
jour
entre
zéro
autorisé
raisons
pratiques
stockage
année
année
mois
seulement
exemple
voici
quelques
autres
informations
mysql
comparaisons
notamment
essaie
interpréter
format
date
passe
cas
comparaisons
entre
champs
type
date
champs
texte
plupart
cas
résultat
celui
attendu
attention
tout
formalisme
dates
doivent
être
données
préférence
format
année
mois
jour
année
doit
toujours
apparaître
premier
cas
année
jour
mois
attention
mysql
peut
deviner
février
mai
date
utilisée
calcul
numérique
convertie
nombre
timestamp
valeur
illégale
transmise
valeur
zéro
retenue
valeur
zéro
dépend
type
champ
gestion
an
fait
ainsi
cas
années
chiffres
aucun
souci
vaut
mieux
toujours
utiliser
so
rohaut
cours
programmation
php
page
années
chiffres
cas
année
deux
chiffes
converties
converties
formats
supportés
aaaa
mm
jj
hh
mm
ss
aa
mm
jj
hh
mm
ss
séparateurs
peuvent
être
importe
quoi
aaaa
mm
jj
hhmmmss
valable
aaaa
mm
jj
aa
mm
jj
remarque
séparateurs
aaaammjjhhmmss
aammjjhhmmss
chaîne
nombre
signification
tant
date
aaaammjj
aammjj
remarque
type
datetime
type
datetime
permet
stocker
date
heure
sous
format
aaaa
mm
jj
hh
mm
ss
zéro
type
date
type
seule
date
stockée
format
aaaa
mm
jj
zéro
type
timestamp
type
timestamp
permet
stocker
implicitement
automatiquement
timestamp
heure
courante
lors
enregistrement
données
insert
update
table
dispose
champ
timestamp
lors
ajout
mise
jour
celui
ci
automatiquement
mis
jour
ligne
enregistrement
colonne
besoin
être
explicitement
spécifiée
spécifie
alors
peut
mettre
importe
quelle
valeur
create
table
test
id
int
not
null
auto
increment
ts
timestamp
not
null
txt
varchar
not
null
default
primary
key
id
insert
into
test
txt
values
toto
select
ts
from
test
update
test
set
txt
truc
select
ts
from
test
remarque
résultat
retourné
mysql
colonne
timestamp
valeur
timestamp
unix
bien
telle
interne
valeur
formatée
défaut
timestamp
so
rohaut
cours
programmation
php
page
retourne
valeur
numérique
caractères
peut
choisir
taille
création
table
timestamp
timestamp
aaaammjjhhmmss
timestamp
aammjjhhmmss
timestamp
aammjjhhmm
timestamp
aaaammjj
timestamp
aammjj
timestamp
aamm
timestamp
aa
tous
formats
spécifiez
toujours
année
mois
jour
timestamp
sinon
date
invalide
type
time
type
time
peut
être
utilisé
stocker
information
horaire
format
hh
mm
ss
hhh
mm
ss
valeur
peut
être
négative
valeurs
maximales
possibles
vont
time
sert
stocker
heure
journée
intervalle
durée
explique
plage
horaire
accède
comme
ceci
hh
mm
ss
fraction
jour
fraction
stockée
encore
hh
mm
ss
hh
mm
hh
mm
ss
hh
mm
hh
ss
hhmmss
ssss
mmss
type
year
type
year
stocke
uniquement
année
plage
allant
interprétation
valeurs
deux
chiffres
soumise
interprétation
gestion
an
création
syntaxe
sql
utilise
commande
sql
create
create
table
if
not
exist
nom
table
champ
type
not
null
null
default
valeur
defaut
auto
increment
primary
key
primary
key
nom
champ
key
nom
col
col
index
nom
col
col
unique
index
nom
col
col
fultext
index
nom
col
col
type
type
table
notez
so
rohaut
cours
programmation
php
page
key
index
synonymes
primary
key
index
unique
toutes
colonnes
doivent
être
not
null
primary
key
peut
contenir
plusieurs
colonnes
cas
primary
key
doit
apparaître
niveau
définition
colonne
syntaxe
primary
key
cols
doit
être
utilisée
peut
avoir
seul
index
primary
key
plusieurs
index
unique
application
veut
obtenir
primary
key
table
existe
alors
mysql
retournera
premier
index
unique
trouvé
donne
noms
index
celui
ci
généré
automatiquement
prenant
nom
première
colonne
index
suivi
suffixe
numérique
col
col
bien
cela
déconseillé
peut
établir
index
colonne
text
blob
cas
faut
obligatoirement
spécifier
longueur
index
exemple
create
table
fämessage
idämessage
int
unsigned
not
null
auto
increment
id
msg
initial
int
unsigned
not
null
default
id
msg
prec
int
unsigned
not
null
default
id
forum
int
not
null
default
login
varchar
not
null
default
date
datetime
not
null
default
e
sujet
varchar
not
null
default
texte
text
primary
key
idämessage
key
precedent
id
msg
prec
key
login
login
key
forum
id
forum
key
initial
id
msg
initial
fulltext
key
ft
sujet
texte
typeëmyisam
types
tables
myisam
innodb
type
table
particulier
mysql
type
défaut
myisam
gestionnaire
tables
originel
mysql
simple
rapide
correspondant
majorité
besoins
second
type
principal
innodb
permet
gestion
transactions
verrouillage
données
commit
rollback
restauration
après
crash
surtout
contraintes
intégrité
clés
étrangères
possibles
create
table
parent
id
int
not
null
primary
key
çidçë
type
innodb
create
table
child
id
int
parent
id
int
index
ind
parent
id
foreign
key
parent
id
references
parent
id
delete
set
null
type
innodb
peut
aussi
utiliser
clauses
delete
cascade
delete
set
null
quelques
règles
respecter
utilisation
so
rohaut
cours
programmation
php
page
delete
cascade
ligne
table
parente
supprimée
lignes
correspondantes
clé
étrangère
automatiquement
supprimées
table
fille
exemple
suppression
enregistrement
table
parent
supprime
tous
enregistrements
table
child
parent
id
égal
id
enregistrement
table
parent
supprimé
delete
set
null
enregistrements
fils
supprimés
colonnes
clé
étrangère
ici
parent
id
prennent
valeur
null
index
doit
exister
clé
parente
clé
fille
index
fulltext
création
dernières
versions
supérieures
mysql
permet
indexation
recherche
plusieurs
champs
type
text
peut
ainsi
créer
moteurs
recherches
très
rapidement
ça
faut
créer
index
fulltext
texte
entier
chaque
mot
champ
texte
fait
indexé
index
fulltext
fonctionnent
champs
type
text
blob
varchar
tables
type
myisam
uniquement
voici
comment
créer
index
fulltext
table
existe
déjà
create
fulltext
index
ft
fämessage
sujet
texte
création
table
rajoute
ligne
création
index
fulltext
key
ft
sujet
texte
peut
préciser
plusieurs
colonnes
genre
index
attention
lors
recherche
créé
index
deux
colonnes
peut
rechercher
seule
deux
colonnes
temps
cas
faudra
créer
plusieurs
index
fulltext
recherche
effectue
recherche
fonctions
match
against
fonction
match
permet
préciser
quelles
colonnes
effectue
recherche
fonction
against
mots
recherchés
select
idämessage
from
fämessage
where
match
sujet
texte
against
linux
nvidia
requête
va
effectuer
recherche
mots
linux
nvidia
colonnes
sujet
texte
va
retourner
id
message
correspondants
plus
pertinents
premier
ceux
correspondent
mieux
recherche
cela
dû
fait
match
clause
where
pertinence
déterminée
mysql
selon
critères
peu
opaques
tout
comme
nombre
mots
ligne
nombre
mots
uniques
ligne
longueur
ligne
fonction
match
retourne
pertinence
sous
forme
flottant
supérieur
égale
so
rohaut
cours
programmation
php
page
zéro
zéro
signifie
pertinence
nulle
correspondance
plus
valeur
élevée
plus
résultat
pertinent
select
idämessage
match
sujet
texte
against
linux
nvidia
from
fämessage
requête
récupère
seconde
colonne
valeur
pertinence
celle
ci
classée
car
where
order
by
voici
dernière
méthode
permettant
récupérer
champs
pertinence
triés
ordre
pertinence
select
id
message
sujet
match
sujet
texte
against
linux
nvidia
from
fämessage
where
match
sujet
texte
against
linux
nvidia
recherche
booléenne
versions
x
mysql
introduit
notion
recherche
booléenne
permet
affiner
recherches
select
idämessage
from
fämessage
where
match
sujet
texte
against
linux
nvidia
ati
e
in
boolean
mode
voici
signification
caractères
supplémentaires
p
mot
doit
obligatoirement
être
présent
chaque
enregistrement
retourné
mot
doit
être
présent
enregistrements
retournés
valorisation
mot
toto
titi
valorise
plus
toto
titi
recherche
grouper
série
mots
négation
mot
contrairement
mot
tout
pris
compte
pertinence
négative
tronquage
mot
bon
çù
bonjour
bonsoir
guillemets
chaîne
recherchée
telle
quelle
mysql
php
connexion
base
données
deux
étapes
généralement
nécessaires
plus
simplicité
seconde
obligatoire
bien
pratique
cas
travaille
seule
base
données
toute
page
connexion
serveur
utilise
fonction
mysql
connect
fonction
prend
minimum
trois
paramètres
serveur
hostname
utilisateur
mot
passe
b
host
sql
tf
data
net
b
user
toto
b
pass
cret
so
rohaut
cours
programmation
php
page
cnx
mysql
connect
b
host
b
user
b
pass
ifà
cnx
die
erreur
connexion
mysql
choix
base
choisit
base
données
défaut
fonction
mysql
select
db
prend
minimum
paramètre
nom
base
second
paramètre
optionnel
ressource
retournée
mysql
connect
cas
connexion
plusieurs
serveurs
mysql
défaut
fonction
prend
dernière
connexion
ouverte
celle
dernier
mysql
connect
exécuté
b
base
slyunix
db
msql
select
db
b
base
ifà
db
die
erreur
connexion
base
b
base
fermeture
connexion
ferme
connexion
mysql
fonction
mysql
close
cependant
cas
connexion
non
persistantes
voir
point
fonction
obligatoire
car
php
ferme
automatiquement
connexions
fin
script
mysql
close
cnx
séquence
complète
base
b
host
sql
tf
data
net
b
user
toto
b
pass
cret
b
base
slyunix
mysql
connect
b
host
b
user
b
pass
or
die
erreur
connexion
mysql
mysql
select
db
b
base
or
die
erreur
selection
b
base
mysql
close
requêtes
exécuter
requête
exécute
requête
sql
fonction
mysql
query
fonction
prend
moins
paramètre
requête
sql
sous
forme
chaîne
fonction
retourne
false
cas
échec
colonne
table
invalide
droits
insuffisants
connexion
etc
attention
parce
appel
mysql
query
retourné
erreur
fonction
retourne
lignes
résultats
cas
select
exemple
enfin
requête
sql
doit
finir
point
virgule
requête
peut
être
importe
quel
type
selection
mise
jour
destruction
etc
cas
select
show
explain
describe
mysql
query
retourne
ressource
ensuite
utilisée
lire
résultat
result
mysql
query
select
idämessage
sujet
from
fämessage
so
rohaut
cours
programmation
php
page
nombre
lignes
affectées
cas
delete
insert
replace
update
peut
connaître
nombre
lignes
affectées
modifiées
requête
aide
fonction
mysql
affected
rows
result
mysql
query
delete
from
fämessage
where
login
toto
if
result
echo
mysql
affected
rows
enregistrements
supprimés
nombre
lignes
retournées
cas
select
nombre
enregistrements
lignes
retourné
obtenu
fonction
mysql
num
rows
result
mysql
query
select
from
fämessage
where
idämessage
if
result
echo
mysql
num
rows
enregistrements
retournés
récupérer
résultats
fonction
plus
sympathique
récupérer
enregistrements
après
exécution
sélection
mysql
fetch
array
prend
minimum
paramètre
ressource
résultat
résultat
mysql
query
retourne
ligne
résultat
sous
forme
tableau
associatif
tableau
indexé
deux
défaut
tableau
retourné
foi
associatif
indexé
tableau
associatif
index
tableau
nom
champ
correspondant
colonne
tableau
indexé
colonnes
numérotées
partir
zéro
notez
mysql
fetch
array
retourne
seule
ligne
résultat
passer
suivante
faut
exécuter
fonction
nouveau
retournera
false
quand
plus
lignes
lire
result
mysql
query
select
sujet
texte
from
fämessage
where
login
toto
tab
mysql
fetch
array
result
première
ligne
résultat
echo
tab
sujet
tab
texte
affiche
champs
sujet
texte
echo
tab
tab
idem
plusieurs
colonnes
portent
nom
dernière
colonne
prioritaire
requête
affichant
noms
colonnes
identiques
mieu
renommer
select
nom
col
nom
col
from
second
paramètre
mysql
fetch
array
peut
être
mysql
assoc
résultat
uniquement
tableau
associatif
index
nom
colonne
mysql
num
résultat
uniquement
tableau
indexé
numériquement
mysql
both
défaut
deux
voici
comment
récupérer
tous
résultats
result
mysql
query
select
sujet
texte
from
fämessage
where
login
toto
while
result
tab
mysql
fetch
array
result
echo
tab
sujet
tab
texte
affiche
champs
sujet
texte
so
rohaut
cours
programmation
php
page
notez
expression
while
rentrer
faut
résultat
requête
result
false
requête
fonctionné
reste
lignes
lire
autrement
dit
requête
retourne
rien
rentre
boucle
notez
enfin
existe
deux
autres
fonctions
possibles
mysql
fetch
row
équivaut
mysql
fetch
array
var
mysql
num
mysql
fetch
assoc
équivaut
mysql
fetch
array
var
mysql
assoc
insertion
auto
incrément
identifiant
unique
table
souvent
entier
auto
incrémenté
avantage
besoin
gérer
identifiant
mysql
détermine
tout
seul
certains
cas
peut
être
nécessaire
récupérer
valeur
champ
auto
incrémenté
après
insertion
exemple
mettre
jour
autre
enregistrement
liste
chaînée
jointure
etc
utilise
ça
fonction
mysql
insert
id
result
mysql
query
insert
into
fämessage
sujet
texte
values
test
test
id
mysql
insert
id
result
mysql
query
select
sujet
texte
from
fämessage
where
idämessageçd
tab
mysql
fetch
array
result
echo
tab
sujet
tab
texte
test
test
récupération
erreurs
cas
erreur
lors
manipulation
mysql
peut
récupérer
numéro
erreur
mysql
fonction
mysql
errno
peut
récupérer
message
erreur
fonction
mysql
error
peut
trouver
liste
codes
erreurs
ici
http
www
mysql
com
doc
error
returns
html
so
rohaut
cours
programmation
php
page
système
fichiers
travail
fichiers
ouverture
fonction
fopen
permet
ouvrir
créer
fichier
selon
divers
mode
prend
premier
pramètre
nom
fichier
chemin
nom
fichier
peut
être
url
faut
cela
directive
allow
url
fopen
activée
php
ini
second
paramètre
mode
ouverture
r
lecture
seule
début
fichier
r
lecture
écriture
début
fichier
w
écriture
seule
taille
fichier
ancien
contenu
effacé
créé
existe
wu
lecture
écriture
taille
fichier
créé
existe
écriture
seule
fin
fichier
créé
existe
lecture
écriture
fin
fichier
créé
existe
peut
sous
windows
rajouter
lettre
b
type
binaire
inutile
sous
unix
enfin
fopen
admet
troisième
paramètre
cas
fichier
ouvrir
recherché
include
path
voir
php
ini
valeur
retournée
ressource
fichier
identifiant
fichier
valeur
false
cas
échec
file
fopen
server
log
lecture
fgets
fonction
fgets
permet
lire
ligne
fichier
mode
texte
fonction
arrête
lorsqu
arrive
fin
fichier
retour
chariot
peut
préciser
second
paramètre
longueur
texte
octet
défaut
paramètre
obligatoire
avant
versions
premier
paramètre
identifiant
fichier
false
retourné
cas
erreur
attention
fgets
retourne
false
fin
fichier
ligne
fgets
file
fread
fonction
fread
permet
lire
fichier
mode
binaire
second
paramètre
longueur
souhaitée
sous
windows
faut
penser
placer
b
fopen
lecture
arrête
lorsque
octets
longueur
lus
fin
fichier
atteinte
erreur
survenue
so
rohaut
cours
programmation
php
page
file
fopen
monimage
gif
rb
img
fread
file
filesize
nomimage
gif
fclose
file
fscanf
fonction
fscanf
lit
lignes
fichier
fonction
formatage
particulier
file
fopen
users
txt
r
while
ligne
fscanf
file
echo
ligne
fgetc
fonction
fgetc
lit
seul
caractère
fichier
contrairement
fgets
retourne
false
fin
fichier
premier
paramètre
identifiant
fichier
fgetss
fonction
fgetss
fonction
identique
fgets
ligne
retournée
débarrassée
éventuelles
balises
php
html
peut
préciser
troisième
paramètre
liste
balises
autorisées
fgetcsv
fonction
fgetcsv
fonction
très
puissante
car
permet
lire
fichier
type
csv
dire
champs
délimités
récupérer
champs
tableau
lesond
paramètre
longueur
maximale
ligne
fichier
troisième
paramètre
séparateur
virgule
défaut
voici
exemple
permettant
lire
fichier
csv
afficher
résultat
sous
forme
tableau
html
filename
book
csv
çid
fopen
filename
r
while
data
fgetcsv
id
filesize
filename
table
data
fclose
id
echo
table
foreach
table
row
echo
tr
foreach
row
data
echo
td
data
td
echo
tr
echo
table
renvoyer
fichier
sortie
standard
fonction
readfile
prend
comme
paramètre
nom
fichier
renvoie
contenu
sortie
standard
fonction
readgzfile
effectue
chose
fichier
format
compressé
gzip
zlib
so
rohaut
cours
programmation
php
page
ecriture
deux
fonctions
fwrite
fputs
identiques
car
fputs
alias
fwrite
elles
écrivent
chaîne
fichier
peut
limiter
longueur
chaîne
troisième
paramètre
défaut
toute
chaîne
écrite
valeur
retournée
nombre
octets
écrits
false
cas
erreur
file
fopen
monfic
txt
ret
fwrite
file
ligne
fichier
fclose
file
cas
travail
fichier
binaire
faut
oublier
sous
windows
rajouter
option
b
déplacement
fseekçë
fonction
fseekçë
permet
déplacer
fichier
second
paramètre
offset
nombre
octets
déplacement
peut
être
négatif
défaut
déplacement
calculé
partir
début
fichier
troisième
paramètre
peut
modifier
état
valeur
retournée
zéro
cas
réussite
sinon
positionnement
après
fin
fichier
erreur
seek
set
calcul
partir
début
fichier
position
finale
début
offset
seek
cur
calcul
partir
emplacement
actuel
position
finale
actuelle
offset
seek
end
calcul
partir
fin
fichier
position
finale
fin
offset
ret
fseek
file
seek
end
fin
fichier
ftell
fonction
fseekçë
renvoie
position
actuelle
pointeur
fichier
pos
ftell
file
rewind
fonction
rewind
permet
retourner
début
fichier
retourne
true
cas
réussite
false
sinon
fin
fichier
fonction
feofçë
indique
fin
fichier
non
retourne
true
fin
fichier
atteinte
false
sinon
äfd
fopen
tmp
inputfile
txt
r
while
feof
çäfdëë
buffer
fgets
fd
echo
buffer
fclose
äfd
so
rohaut
cours
programmation
php
page
fermeture
ferme
fichier
fonction
fclose
retourne
true
cas
réussite
false
sinon
travail
répertoires
répertoire
actuel
fonction
getcwd
retourne
nom
dossier
travail
courant
dire
là
attention
sous
windows
fonction
fait
distinctions
entre
majuscules
minuscules
chemin
getcwd
echo
chemin
srv
www
site
déplacer
déplace
fonction
chdir
argument
peut
être
absolu
relatif
cas
erreur
false
retourné
if
chdir
rep
getcwd
else
die
impossible
déplacer
ouvrir
lister
fermer
ouvre
répertoire
lecture
fonction
opendir
prend
comme
unique
paramètre
nom
chemin
répertoire
cas
échec
fonction
retourne
false
sinon
identifiant
handler
répertoire
lit
entrée
fonction
readdir
prend
comme
paramètre
identifiant
répertoire
quand
plus
rien
lire
fonction
retourne
false
sinon
retourne
nom
entrée
actuellement
lue
attention
entrées
lues
comme
autres
ferme
répertoire
cours
lecture
fonction
closedir
prend
comme
paramètre
identifiant
répertoire
handle
opendir
while
file
readdir
handle
if
file
file
echo
file
closedir
handle
peut
retourner
début
répertoire
fonction
rewinddir
prend
comme
paramètre
identifiant
répertoire
prochaine
lecture
première
répertoire
récupérer
toutes
entrées
possible
récupérer
ensemble
entrées
répertoire
fonctions
so
rohaut
cours
programmation
php
page
précédentes
boucle
fonction
scandir
propose
chose
ligne
plaçant
tous
noms
fichiers
chemin
indiqué
tableau
premier
paramètre
chemin
répertoire
second
optionnel
définit
ordre
tri
alphabétique
défaut
indique
tri
alphabétique
décroissant
files
scandir
rep
print
r
files
travail
système
fichiers
informations
fichier
peut
obtenir
diverses
informations
fichier
aide
commandes
type
is
x
is
dir
true
nom
fichier
répertoire
is
file
true
nom
fichier
véritable
fichier
normal
is
executable
true
fichier
exécutable
sous
windows
faut
php
x
is
readable
true
sir
fichier
lisible
is
writeable
is
writable
true
fichier
accessible
écriture
is
link
true
fichier
lien
peut
obtenir
détails
fichier
fonctions
filexxx
file
exists
true
fichier
existe
fileatime
retourne
sous
forme
timestamp
dernière
date
accès
sous
windows
dernière
date
modification
filectime
retourne
date
création
filemtime
retourne
date
modification
filegroup
retourne
gid
fichier
récupère
nom
réel
groupe
fonction
posix
getgrgid
fileowner
retourne
uid
fichier
récupère
nom
réel
utilisateur
fonction
posix
getpwuid
fileinode
retourne
inode
fichier
fileperms
retourne
permissions
fichier
attention
résultat
base
faudra
convertir
base
fonction
base
convert
filesize
retourne
taille
fichier
octets
so
rohaut
cours
programmation
php
page
filetype
retourne
type
fichier
attention
agit
types
fichiers
disque
contenu
image
etc
fifo
char
dir
block
link
file
unknown
fichier
déjà
ouvert
peut
obtenir
informations
fonction
fstat
prend
comme
paramètre
identifiant
fichier
retourné
fopen
retourne
tableau
indexé
numériquement
associatif
fonction
stat
retourne
chose
précise
chemin
nom
fichier
fonction
lstat
quasi
identique
sauf
cadre
lien
informations
lien
fichier
pointé
retournées
volume
encore
dev
inode
encore
ino
droits
accès
fichier
mode
protection
inode
convertir
octal
voir
aussi
fileperms
encore
mode
nombre
liens
encore
nlink
id
utilisateur
propriétaire
encore
uid
id
groupe
propriétaire
encore
gid
type
volume
inode
encore
rdev
taille
octets
encore
size
date
dernier
accès
encore
atime
date
dernière
modification
encore
mtime
date
dernier
changement
encore
ctime
taille
bloc
système
entrées
sorties
encore
blksize
nombre
blocs
alloués
encore
blocks
actions
fichiers
répertoires
retrouve
ici
fonctions
portent
souvent
nom
leurs
équivalents
sous
shell
unix
dirname
basemane
isolent
chemin
nom
fichier
chown
chgrp
changent
propriétaire
groupe
fichier
premier
paramètre
fichier
second
groupe
propriétaire
uid
gid
toutes
lettres
chmod
modifie
droits
premier
paramètre
nom
fichier
second
droits
octal
attention
sous
windows
résultats
peuvent
surprendre
so
rohaut
cours
programmation
php
page
copy
copie
fichier
source
destination
link
créé
lien
hard
link
cible
nom
lien
symlink
créé
lien
symbolique
cible
nom
lien
mkdir
créé
répertoire
second
paramètre
mode
droits
défaut
avant
application
masque
rename
renomme
déplace
fichier
orgine
destination
rmdir
supprime
répertoire
doit
être
vide
unlink
supprime
fichier
umaskçë
modifie
umask
défaut
upload
fichiers
upload
fichiers
permet
envoyer
depuis
poste
client
fichier
serveur
opération
nécessite
navigateur
sachant
prendre
charge
balise
spéciale
appel
script
php
côté
page
html
faut
modifier
définition
formulaire
placer
champ
formulaire
type
file
indiquer
taille
maximale
fichier
téléchargé
nom
hidden
bom
max
file
size
taille
précisée
octets
champ
doit
être
placé
avant
apparition
champ
type
file
formulaire
doit
être
type
post
bien
get
possible
voir
documentation
php
type
encodage
enctype
multipart
form
data
doit
être
précisé
form
enctype
multipart
form
data
action
page
php
method
post
input
type
hidden
name
max
file
size
value
input
name
avatar
type
file
sizeë
ù
input
type
submit
value
enregistrer
form
notes
certains
navigateurs
fichent
totalement
poid
taille
fichiers
envoyés
réagissant
variable
max
file
size
cas
vérification
doit
être
faite
côté
serveur
pire
peut
limiter
côté
serveur
taille
maximale
aide
paramètre
upload
max
filesize
php
ini
choisit
fichier
via
boite
dialogue
gestionnaire
fichiers
quand
clique
bouton
parcourir
foi
formulaire
validé
données
formulaire
fichier
envoyés
page
php
côté
php
récupère
informations
fichier
uploadé
via
tableau
file
index
suivants
file
nom
propiete
nom
nom
champ
formulaire
file
propriété
files
userfile
name
nom
original
fichier
tel
machine
client
web
so
rohaut
cours
programmation
php
page
files
userfile
type
type
mime
fichier
navigateur
fourni
information
exemple
cela
pourra
être
image
gif
files
userfile
size
taille
octets
fichier
téléchargé
files
userfile
tmp
name
nom
temporaire
fichier
chargé
machine
serveur
files
userfile
error
code
erreur
associé
téléchargement
fichier
php
défaut
fichier
téléchargé
attente
déplacement
placé
répertoire
temporaire
système
variable
système
temp
tmpdir
répertoire
précisé
paramètre
configuration
upload
tmp
dir
fichier
php
ini
conseillé
initialiser
utiliser
paramètre
chemin
fichier
temporaire
uploadé
tmp
file
ini
get
upload
tmp
dir
file
userfile
tmp
name
savoir
fichier
correctement
uploadé
méthode
post
peut
utiliser
fonction
is
uploaded
file
prend
comme
paramètre
nom
fichier
uploadé
if
is
uploaded
file
file
userfile
name
tmp
name
echo
files
userfile
size
sachant
position
fichier
temporaire
uploadé
correctement
uploadé
peut
utiliser
fonction
copy
mieux
utiliser
fonction
move
uploaded
file
teste
réussite
upload
déplace
fichier
premier
paramètre
nom
fichier
uploadé
peut
être
nom
champ
file
nom
réel
fichier
nom
fichier
temporaire
if
move
uploaded
file
files
avatar
tmp
name
server
document
root
forum
avatars
login
files
avatar
name
avatar
login
files
avatar
name
chmod
server
document
root
forum
avatars
avatar
so
rohaut
cours
programmation
php
page
travail
chaînes
fonctions
code
html
mysql
gestion
caractères
verrouillés
fonction
addslashes
rajoute
slashes
backslashes
devant
tous
caractères
doivent
être
verrouillés
caractères
caractère
nul
null
ainsi
chaîne
résultante
peut
être
utilisée
être
placée
base
données
via
commandes
sql
fonction
stripslashes
effectue
opération
inverse
supprime
anti
slash
sauf
cas
doubles
anti
slash
çù
supprime
chaine
oreille
cassée
addslashes
chaine
echo
oreille
cassée
echo
stripslashes
oreille
cassée
balises
caractères
spéciaux
html
fonction
strip
tags
permet
filtrer
chaîne
contenant
balises
tags
html
autorisant
certains
interdisant
autres
premier
paramètre
chaîne
html
second
liste
tags
autorisés
attention
fonction
modifie
contenu
balises
autorisées
laissant
ainsi
attributs
class
style
appels
javascript
chaine
u
i
b
bonjour
amis
b
i
u
echo
strip
tags
chaine
u
i
b
bonjour
ami
echo
strip
tags
chaine
b
b
bonjour
amis
b
gras
fonction
htmlspecialchars
convertit
certains
caractères
spéciaux
entités
html
caractères
amp
quot
ent
noquotes
utilisé
ent
quotes
utilisé
lt
gt
second
paramètre
ent
xxx
définit
fonctionnement
rapport
quotes
fonction
htmlentities
va
plus
loin
remplaçant
tous
caractères
équivalents
html
décoder
telle
chaîne
faut
alors
utiliser
fonction
html
entity
decode
fonction
nl
br
remplace
tous
retour
chariots
chaîne
retours
ligne
html
br
fonction
urlencode
formate
chaîne
utilisation
url
espaces
so
rohaut
cours
programmation
php
page
remplacés
p
tous
caractères
non
alphanumériques
sauf
remplacés
équivalent
hexadécimal
xx
telle
chaîne
décodée
fonction
urldecode
fonctions
texte
générales
découper
chaîne
fonction
explode
permet
découper
chaîne
selon
séparateur
retourne
tableau
contenant
divers
éléments
découpés
premier
paramètre
séparateur
second
chaîne
troisième
paramètre
permet
limiter
nombre
valeurs
retournées
chaine
login
pwd
uid
gid
tab
explode
chaine
foreach
tab
value
echo
value
login
pwd
uid
gid
fonction
inverse
nomme
implode
premier
paramètre
colle
caractères
séparation
placés
entre
divers
éléments
chaîne
reconstituée
second
paramètre
tableau
suite
exemple
précédent
newchaine
implode
tab
echo
chaine
login
pwd
uid
gid
fonction
join
alias
implode
peut
aussi
effectuer
découpage
tous
caractères
fonction
chunk
split
découpe
premier
paramètre
morceaux
longueur
second
paramètre
défaut
caractères
comme
séparateur
troisième
paramètre
r
défaut
chaine
ff
eb
chaine
chunk
split
chaine
echo
chaine
ff
e
b
fonction
wordwrap
effectue
césure
chaîne
chaîne
résultante
texte
découpé
tenant
compte
mots
défaut
longueur
second
paramètre
caractères
peut
préciser
chaîne
coupure
ligne
troisième
paramètre
dernier
paramètre
force
coupure
milieu
mot
affichage
html
faut
encapsuler
résultat
nl
br
chaine
bonjour
ami
bienvenus
merveilleux
monde
langage
php
echo
nl
br
wordwrap
chaine
retourne
bonjour
ami
bienvenus
merveilleux
monde
langage
php
fonction
str
split
découpe
chaîne
caractère
tableau
défaut
longueur
peut
choisir
second
paramètre
so
rohaut
cours
programmation
php
page
peut
découper
partie
chaîne
fonction
substr
premier
paramètre
chaîne
second
début
depuis
dernier
longueur
début
chaîne
peut
être
valeur
négative
cas
compte
partant
fin
chaîne
chaine
abcdef
echo
substr
chaine
abcdef
echo
substr
chaine
cde
echo
substr
chaine
f
echo
substr
chaine
fonctions
trim
rtrim
ltrim
suppriment
caractères
invisibles
droite
trim
rtrim
gauche
trim
ltrim
chaîne
rechercher
comparer
fonction
strcmp
effectue
comparaison
deux
chaînes
retourne
chaine
inférieure
chaine
égale
sinon
fonction
strncmp
effetmais
longueur
donnée
troisième
paramètre
fonctions
strcasecmp
strncasecmp
versions
insensibles
casse
fonction
strstr
recherche
première
occurrence
second
paramètre
premier
retourne
chaîne
depuis
position
jusque
fin
fonction
strchr
alias
strstr
fonction
stristr
insensible
casse
fonction
strrchr
effectue
quasiment
chose
sauf
retourne
fin
chaîne
depuis
dernier
caractère
trouvé
fonction
strpos
recherche
chaîne
premier
paramètre
chaîne
second
paramètre
retourne
position
peut
placer
troisième
paramètre
position
départ
recherche
so
rohaut
cours
programmation
php
page
sessions
cookies
cookies
création
cookie
envoie
fonction
setcookie
arguments
suivants
nom
valeur
date
expiration
timestamp
unix
chemin
validité
cookie
suivant
chemin
url
domaine
pare
défaut
vôtre
secure
flag
sécurité
cookie
accessible
via
connexion
sécurisée
seul
premier
argument
obligatoire
spécifier
valeur
suffit
rien
mettre
attention
quelques
limitations
cookie
envoyé
entêtes
http
peut
être
envoyé
sortie
déjà
lieu
html
texte
cookie
disponible
page
créé
faut
recharger
page
pointer
autre
cookie
peut
être
supprimé
mêmes
paramètres
servi
création
navigateur
supprime
cookie
setcookie
testcookie
session
id
time
if
isset
cookie
testcookie
echo
cookie
testcookie
exemple
précédent
premier
chargement
rien
affiché
car
contenu
cookie
encore
accessible
deuxième
chargement
valeur
réellement
affichée
attention
décalage
entre
mise
jour
accès
ifà
isset
cookie
testcookie
setcookie
testcookie
toto
time
header
location
http
server
http
host
server
request
uri
exemple
regarde
cookie
existe
sinon
créé
rappelle
page
accès
accède
cookie
grâce
variable
globale
cookie
tableau
index
tableau
nom
cookie
so
rohaut
cours
programmation
php
page
valeur
cookie
testcookie
echo
valeur
rapport
exemple
précédent
toto
note
peut
placer
tableaux
cookies
suffit
nommer
cookie
notation
crochets
setcookie
testcookie
toto
time
setcookie
testcookie
titi
time
setcookie
testcookie
tata
time
page
suivante
foreach
cookie
tab
if
is
array
tab
foreach
tab
key
value
echo
key
value
suppression
supprimer
cookie
suffit
donner
date
antérieure
date
actuelle
celui
ci
ifà
isset
cookie
testcookie
setcookie
testcookie
toto
time
else
setcookie
testcookie
time
if
isset
cookie
testcookie
echo
ok
else
echo
cookie
exemple
précédent
appels
script
vont
provoquer
successivement
affichage
cookie
ok
identification
http
connexion
possibilité
disponible
php
utilisé
comme
module
apache
tant
script
cgi
identification
http
permet
via
envoi
header
http
demander
identification
client
cas
navigateur
va
ouvrir
fenêtre
connexion
demandant
saisie
login
mot
passe
php
récupère
bien
entendu
valeurs
voici
exemple
issu
documentation
php
if
isset
server
php
auth
user
header
www
authenticate
basic
realm
slyunix
header
http
unauthorized
echo
texte
utilisé
visiteur
utilise
bouton
annulation
exit
else
echo
p
bonjour
server
php
auth
user
p
echo
p
mot
passe
server
php
auth
pw
p
exemple
passe
entête
demande
authentification
cas
échec
bouton
annuler
message
annulation
affiché
sinon
peut
récupérer
valeurs
via
variables
server
php
auth
user
login
so
rohaut
cours
programmation
php
page
server
php
auth
pw
mot
passe
déconnexion
déconnexion
évidente
ça
car
foi
connecté
identifiants
placés
session
méthode
plus
simple
consiste
fermer
navigateur
relancer
sessions
php
principe
sessions
permettent
préserver
données
lors
visite
site
chaque
personne
voit
attribué
identifiant
unique
appelé
identifiant
session
sid
sid
stocké
cookie
passé
url
peut
ainsi
définir
nombre
infini
variables
accessibles
durant
toute
durée
session
notez
fermez
relancez
navigateur
changez
identifiant
précédente
session
perdue
nommée
peut
connaître
sid
grâce
constante
nom
fonction
session
id
utilisation
ouverture
php
ini
valeur
session
auto
start
activée
sessions
démarrées
manière
automatique
lors
accès
page
sinon
faut
utiliser
explicitement
fonction
session
start
appel
créé
session
restaure
session
précédemment
stockée
serveur
attention
ouverture
session
doit
obligatoirement
apparaître
avant
toute
sortie
affichage
script
php
balises
html
ligne
vide
peut
créer
récupérer
session
nommée
précisant
session
name
prend
comme
paramètre
nom
session
doit
être
créée
premier
appel
accédée
appels
suivants
session
défaut
nomme
phpsessid
celle
là
chargée
session
name
appelée
faut
appeler
session
name
avant
session
start
accéder
session
nommée
session
peut
aussi
être
indirectement
créée
ouverte
utilisation
fonction
session
register
variables
session
deux
moyens
créer
variables
session
accessibles
depuis
importe
quelle
page
visitée
partir
moment
session
start
appelée
premier
moyen
fonctionne
fonctionne
register
globals
off
php
ini
méthode
déconseillée
so
rohaut
cours
programmation
php
page
fonction
session
register
prend
comme
paramètre
nom
variable
définit
comme
variable
session
variable
peut
ensuite
être
accédée
nom
txt
bonjour
ami
session
register
txt
txt
devient
variable
session
savoir
variable
enregistrée
session
courante
utilise
session
is
registered
if
session
is
registered
txt
echo
txt
supprimer
variable
session
faut
utiliser
session
unregister
contre
faut
oublier
utiliser
unset
supprimer
variable
globale
car
précédente
fonction
supprime
empêche
seulement
sauvegarde
fin
script
if
session
is
registered
txt
session
unregister
txt
unset
txt
méthode
meilleure
utiliser
utilise
tout
simplement
tableau
global
session
ainsi
session
txt
bonjour
ami
crée
variable
session
txt
echo
session
txt
affiche
unset
session
txt
efface
effacer
toutes
variables
sessions
suffit
faire
session
array
expiration
session
durée
vie
session
php
dépend
trois
paramètres
configuration
fichier
php
ini
session
gc
maxlifetime
session
cookie
lifetime
session
cache
expire
premier
concerne
durée
vie
données
serveur
nombre
secondes
défaut
secondes
minutes
delà
données
supprimées
elles
rechargées
via
cookie
session
lors
prochain
appel
second
durée
vie
cookie
session
exprimé
secondes
défaut
valeur
zéro
signifie
jusque
navigateur
éteind
troisième
durée
vie
données
session
minutes
valeur
défaut
minutes
trois
heures
veut
dire
session
peut
rester
trois
heures
page
valeurs
perdues
delà
faut
rouvrir
nouvelle
session
so
rohaut
cours
programmation
php
page
restaurer
nouvelles
valeurs
chaque
chargement
page
ouverture
session
recommence
décompte
peut
modifier
délai
expiration
session
grâce
fonction
session
cache
expire
prend
comme
valeur
nouvelle
durée
minutes
sans
paramètre
retourne
valeur
actuelle
changer
accès
défaut
php
sait
très
bien
débrouiller
tout
seul
peut
remplacer
prise
charge
défaut
sessions
propres
fonctions
but
gérer
ouverture
fermeture
encore
sauvegarde
données
session
fichier
base
données
autre
utilisation
peut
être
traçage
via
php
toutes
ouvertures
fermetures
sessions
ça
utilise
fonction
session
set
save
handler
étude
dépasse
cadre
cours
voici
exemple
tiré
documentation
php
ifà
mysql
table
exists
sessions
db
query
create
table
sessions
sessionid
char
not
null
lastupdated
datetime
not
null
datavalue
text
primary
key
sessionid
index
lastupdated
mysql
query
query
function
sessao
open
asavapath
asessionname
global
atime
sessao
gc
atime
return
true
function
sessao
close
return
true
function
sessao
read
akey
query
select
datavalue
from
sessions
where
sessionid
akey
busca
mysql
query
query
if
mysql
num
rows
busca
r
mysql
fetch
array
busca
return
r
datavalue
else
query
insert
into
sessions
sessionid
lastupdated
datavalue
values
akey
now
mysql
query
query
return
function
sessao
write
akey
aval
aval
addslashes
aval
query
update
sessions
set
datavalue
aval
lastupdated
now
where
sessionid
akey
mysql
query
query
return
true
so
rohaut
cours
programmation
php
page
function
sessao
destroy
akey
query
delete
from
sessions
where
sessionid
akey
mysql
query
query
return
true
function
sessao
gc
amaxlifetime
query
delete
from
sessions
where
unix
timestamp
now
unix
timestamp
lastupdated
amaxlifetime
mysql
query
query
return
true
session
set
save
handler
sessao
open
sessao
close
sessao
read
sessao
write
sessao
destroy
sessao
gc
image
pré
requis
importants
ceci
concerne
versions
php
avant
easyphp
certaines
fonctions
comme
gd
info
encore
imagecreatetruetype
toujours
disponibles
car
php
fait
appel
bibliothèque
externe
appelée
gdi
version
delà
trouve
patches
adresse
http
www
boutell
com
gd
avant
versions
version
gd
linkée
php
ceci
concerne
utilisateurs
php
easyphp
windows
configuration
défaut
easyphp
inclut
support
image
cela
faut
modifier
fichier
php
ini
retirant
commentaire
extension
php
gd
dll
créer
image
types
possibles
faut
tout
abord
choisir
type
image
souhaitez
créer
cela
peut
tester
quels
types
php
peut
générer
fonction
imagetypes
constantes
associées
img
png
format
png
imgüjpg
format
jpeg
imgügif
format
gif
imgüwmp
format
windows
bitmap
bmp
if
imagetypes
img
png
echo
type
png
supporté
pui
début
script
envoie
header
spécifiant
type
image
so
rohaut
cours
programmation
php
page
header
content
type
image
png
image
gif
image
jpeg
création
nouvelle
image
dynamique
enfin
créé
image
fonction
imagecreate
basée
table
couleurs
indexée
imagecreatetruecolor
truecolor
comme
paramètres
largeur
hauteur
seconde
conseillée
documentation
php
fonctions
retournent
ressource
identifiant
image
défaut
image
noire
img
createimage
or
die
php
supporte
image
récupération
image
existante
php
peut
charger
image
existante
lieu
créer
toutes
pièces
cas
image
chargée
depuis
fichier
peut
ensuite
retravailler
comme
souhaite
peut
utiliser
fonctions
imagecreatefromgif
charge
image
gif
imagecreatefromjpeg
charge
image
jpeg
imagecreatefrompng
charge
image
png
imagecreatefromstring
charge
image
depuis
chaîne
texte
exemple
champ
publication
enfin
publie
image
fonctions
imagexxx
fonction
utilisée
sans
paramètre
image
créée
redirigée
vers
sortie
standard
peut
toutefois
préciser
comme
paramètre
nom
fichier
cas
image
sauvée
disque
format
spécifié
imagepng
créé
image
format
png
imagegif
créé
image
format
gif
imagejpeg
créé
image
format
jpeg
foi
image
crée
peut
supprimer
imagedestroy
décharge
mémoire
voici
code
page
php
image
php
retournant
image
header
content
type
image
png
img
imagecreatetruecolor
or
die
impossible
crée
flux
image
gd
ici
place
commandes
dessin
manipulation
imagepng
img
imagedestroy
img
so
rohaut
cours
programmation
php
page
chargement
via
autre
page
appeler
image
dynamique
depuis
page
html
php
suffit
placer
balise
img
img
src
image
php
travailler
image
récupérer
informations
fonction
getimagesize
permet
récupérer
informations
image
passe
nom
fichier
ressource
image
retourne
tableau
indexé
list
width
height
type
attr
getimagesize
toto
gif
width
largeur
x
height
hauteur
type
gif
jpg
png
psd
bmp
tiff
ordre
octets
intel
tiff
ordre
octets
motorola
jpc
jpi
jpx
jbi
swc
iff
attr
chaine
width
height
html
travaille
image
créé
imagesx
largeur
x
image
imagesyçë
hauteur
image
couleurs
possible
voir
toutes
fonctions
cependant
chose
retenir
notion
palette
indexée
createimage
notion
truetype
premier
cas
couleurs
indexées
via
numéro
second
cas
couleur
composante
rvb
fonction
imagecolorallocate
permet
définir
couleur
utilisée
image
premier
paramètre
ressource
image
trois
autres
niveaux
rouge
vert
bleu
couleur
attention
image
créée
createimage
palette
indexée
premier
index
couleur
fond
premier
appel
imagecolorallocate
cas
modifie
couleur
fond
white
imagecolorallocate
img
fonction
imagecolorat
retourne
valeur
exacte
index
palette
entier
rvb
point
coordonnées
x
image
so
rohaut
cours
programmation
php
page
color
imagecolorextact
img
fonction
imagecolortransparent
permet
définir
couleur
transparence
image
palette
indexée
premier
paramètre
ressource
image
obligatoirement
créée
imagecreate
second
valeur
retournée
imagecolorallocate
fonction
imagecolorstotal
retourne
nombre
total
couleurs
utilisées
image
donnée
dessin
remplissage
utilise
fonction
imagefill
background
imagecolorallocate
img
imagefill
img
background
fonction
imagefilltoborder
permet
remplissage
zone
délimitée
couleur
donnée
cas
deux
derniers
paramètres
couleur
bordure
couleur
remplissage
point
utilise
imagesetpixel
green
imagecolorallocate
img
imagesetpixel
img
green
ligne
utilise
imageline
imageline
img
blue
rectangle
utilise
imagerectangle
rectangle
simple
imagefilledrectangle
rectangle
rempli
blue
imagecolorallocate
img
imagerectangle
img
blue
imagefilledrectangle
img
green
cercle
ellipse
utilise
imageellipse
imagefilledellipse
attention
deux
premiers
paramètres
coordonnées
centre
ellipse
deux
autres
largeur
hauteur
ellipse
imageellipse
img
red
peut
aussi
faire
arcs
cercles
fonctions
imagearc
imagefilledarc
juste
so
rohaut
cours
programmation
php
page
avant
couleur
précise
début
fin
arc
degrés
polygones
utilise
fonctions
imagepolygone
imagefilledpolygone
sommets
polygone
définis
tableau
tab
x
tab
tab
x
tab
doit
aussi
préciser
nombre
sommets
imagepolygon
img
array
blue
texte
simple
utilise
imagestring
imagestring
img
simple
chaîne
texte
text
color
second
paramètre
numéro
police
défaut
page
actuelle
navigateur
programmation
objet
structure
classe
collection
variables
attributs
fonctions
méthodes
fonctionnent
variables
ensemble
forme
membres
propriétés
objet
classe
définie
utilisant
mot
clé
class
class
panier
eléments
panier
var
contenu
ajout
qte
articles
type
code
panier
function
ajout
article
code
qte
if
isset
this
contenu
code
this
contenu
code
uà
qte
else
this
contenu
code
qte
suppression
num
articles
type
artnr
panier
function
suppr
article
code
qte
if
this
contenu
code
qte
this
contenu
code
qte
return
true
else
return
false
création
objet
utilise
mot
clé
new
caddie
new
panier
constructeur
existe
voir
plus
loin
peut
bien
entendu
passer
valeurs
création
so
rohaut
cours
programmation
php
page
o
new
obj
riri
accès
membres
php
utilise
caractères
accède
membres
syntaxe
suivante
notez
utilise
devant
nom
attribut
caddie
contenu
array
ref
ref
sein
objet
accède
attributs
classe
précisant
variable
this
précise
utilise
fait
variable
localz
méthode
this
contenu
ref
php
php
étend
possibilités
accès
membres
variables
fonctions
via
variables
dynamiques
ex
class
panier
eléments
panier
public
etat
false
false
vide
function
bidon
return
etat
caddie
new
panier
pipo
etat
echo
caddie
pipo
affiche
this
etat
fonction
affiche
panier
caddie
fonction
echo
nom
caddie
bidon
opérateur
opérateur
permet
faire
référence
membres
classe
base
voir
héritage
utiliser
méthodes
alors
classe
instanciée
class
function
example
echo
fonction
originale
br
objets
classe
ao
affichage
fonction
originale
example
cas
appel
méthode
classe
non
instanciée
objets
méthode
doit
appeler
attributs
classe
puisque
existent
raison
faut
employer
variable
this
méthodes
appelées
so
rohaut
cours
programmation
php
page
variables
protection
php
x
déclare
attributs
mot
clé
var
attributs
considérés
comme
tous
publics
php
possède
aucun
mécanisme
protection
variables
ainsi
attribut
accessible
depuis
toute
classes
dérivées
depuis
extérieur
classe
var
mavariable
interdit
initialiser
variable
lors
déclaration
var
toto
salut
marche
php
x
protection
variables
fonctions
php
rajoute
notion
protection
données
manquait
php
appelle
ça
trois
p
public
protected
private
mots
clés
correspondants
voici
tableau
récapitulatif
effet
accès
public
protected
private
classe
ü
ü
ü
depuis
classe
dérivée
ü
ü
û
depuis
extérieur
ü
û
û
note
mots
clés
public
private
protected
peuvent
bien
entendu
être
utilisés
méthodes
fonctions
auquel
cas
protection
étend
manière
mot
clé
var
toujours
utilisable
php
cas
attributs
considérés
comme
publics
possible
initialiser
variables
création
importe
quelle
valeur
class
panier
eléments
panier
privé
private
contenu
array
attributs
méthodes
statiques
peut
aussi
définir
attributs
méthodes
statiques
accessibles
dehors
classe
objet
forcément
déclaré
rajoute
mot
clé
static
après
définition
visibilité
attribut
static
portée
définie
considéré
comme
public
exemple
voici
compteur
permettant
savoir
combien
foi
classe
instanciée
notez
utilisation
self
place
this
this
peut
être
utilisé
ici
fait
référence
objet
attribut
statique
fait
référence
classe
so
rohaut
cours
programmation
php
page
class
public
static
compteur
function
aùà
self
compteur
incrémente
function
affiche
echo
self
compteur
br
self
o
new
o
affiche
o
new
o
affiche
çohà
new
o
affiche
echo
compteur
constantes
classe
peut
créer
constantes
classe
aide
mot
clé
const
déclaration
constante
doit
être
précédée
indicateur
visibilité
constante
toujours
publique
peut
non
plus
assigner
constante
valeur
dynamique
comme
retour
fonction
comme
variables
statiques
utilise
self
accéder
valeur
class
const
classname
function
construct
echo
self
classname
o
new
affiche
héritage
polymorphisme
héritage
permet
définir
classes
génériques
réutilisables
peut
alors
faire
extensions
classe
faire
dériver
classe
autre
classe
dérivée
hérite
toutes
méthodes
variables
classe
base
peut
redéfinir
propres
fonctions
variables
classe
peut
hériter
seule
autre
classe
héritage
multiple
supporté
php
php
contre
rien
empêche
faire
héritages
cascade
polymorphisme
permet
redéfinir
méthode
nom
classe
dérivée
autres
paramètres
éventuels
note
polymorphisme
surcharge
surcharge
consiste
définir
plusieurs
méthodes
nom
prototypes
différents
php
supporte
forme
surcharge
polymorphisme
remplace
méthode
autre
classe
dérivée
créer
héritage
utilise
mot
clé
extends
so
rohaut
cours
programmation
php
page
class
panier
nomme
extends
panier
var
proprietaire
function
nom
proprietaire
nom
this
proprietaire
nom
créé
classe
panier
nomme
hérite
panier
possède
mêmes
propriétés
classe
panier
laquelle
rajoute
nouvel
attribut
nouvelle
méthode
ncart
new
panier
nomme
ncart
nom
proprietaire
slyce
print
ncart
proprietaire
ncart
ajout
article
ref
polymorphisme
peut
redéfinir
classe
dérivée
méthodes
classe
héritée
class
function
affiche
echo
classe
br
class
b
extends
function
affiche
echo
classe
b
br
test
new
b
test
affiche
affiche
classe
b
mots
clés
parent
self
mot
clé
parent
représente
classe
base
celle
présente
après
extends
permet
faire
référence
variables
fonctions
classe
base
class
function
example
echo
example
fonctionnalité
base
br
class
b
extends
function
example
echo
b
example
fonctionnalité
supplémentaire
br
parent
example
bb
new
b
appelle
b
example
tour
appelle
example
b
example
mot
clé
self
représente
classe
peut
être
utilisée
préciser
accès
membre
précis
comme
attribut
statique
so
rohaut
cours
programmation
php
page
constructeurs
php
constructeur
méthode
automatiquement
appelée
lors
création
objet
new
méthode
devient
constructeur
porte
nom
classe
laquelle
définie
class
auto
panier
extends
panier
nomme
function
auto
panier
this
proprietaire
session
id
classe
hérite
panier
nomme
constructeur
initialise
nom
propriétaire
comme
identifiant
session
constructeur
peut
prendre
comme
importe
quelle
méthode
paramètres
optionnels
class
auto
panier
extends
panier
nomme
function
auto
panier
nom
anonyme
this
proprietaire
nom
panier
new
auto
panier
constructeur
appelé
valeur
défaut
panier
new
auto
panier
session
id
valeur
passée
php
outre
nom
classe
php
propose
méthode
générique
appelée
construct
deux
underscores
début
lieu
place
première
méthode
vue
ci
dessus
ainsi
function
construct
this
proprietaire
session
id
revient
exactement
constructeurs
classes
dérivées
php
classes
b
suivantes
class
function
echo
classe
br
class
b
extends
function
b
echo
classe
b
br
so
rohaut
cours
programmation
php
page
création
nouvel
objet
type
b
b
new
b
affichera
classe
b
classe
constructeur
constructeur
classe
base
appelé
class
function
echo
classe
br
class
b
extends
var
var
b
new
b
classe
remarque
constructeurs
appelés
cascade
ainsi
cas
classe
b
constructeur
classe
appelé
logique
car
php
peut
savoir
défaut
comment
appeler
constructeur
quels
paramètres
doit
appeler
explicitement
aide
mot
clé
parent
class
function
echo
classe
br
class
b
extends
var
var
function
büë
echo
classe
b
br
parent
b
new
b
affiche
classe
b
classe
php
php
réagit
manière
presque
identique
php
sauf
possible
appeler
constructeur
cascade
toujours
mot
clé
parent
sans
connaître
nom
constructeur
classe
base
utilisant
construct
class
function
echo
classe
br
class
b
extends
var
var
function
construct
so
rohaut
cours
programmation
php
page
echo
classe
b
br
parent
construct
appelle
constructeur
aùà
b
new
b
affiche
classe
b
classe
destructeur
php
destructeur
php
fera
confiance
cas
gestion
mémoire
ramasse
miettes
php
appeler
méthode
particulière
classe
fin
script
chargée
faire
ménage
peut
être
important
exemple
lorsqu
alloué
ressource
image
dynamique
détruire
objet
suffit
réaffecter
variable
détruire
unset
objet
détruit
toute
façon
implicitement
fin
exécution
script
php
destructeur
présent
php
nomme
destruct
automatiquement
appelé
lors
destruction
objet
tout
comme
constructeur
appelé
cascade
doit
être
appelé
explicitement
lors
héritage
class
function
destruct
echo
revoir
classe
br
class
b
extends
function
destruct
echo
revoir
classe
b
br
parent
destruct
b
new
b
unset
b
destruction
objet
affiche
revoir
classe
b
affectation
objets
code
commun
fonctionnement
affectations
objets
php
php
effet
php
affectation
fait
copie
référence
php
peut
induire
grandes
différences
fonctionnement
lorsque
code
objet
php
utilisé
php
allons
voir
exemple
aide
classe
très
simple
class
var
function
aùà
this
salut
so
rohaut
cours
programmation
php
page
function
affiche
echo
this
br
function
modif
objet
objet
coucou
php
php
objets
affectés
copie
nouvel
objet
créé
reprenant
toutes
propriétés
premier
totalement
indépendant
ainsi
voici
résultat
code
suivant
obj
new
obj
obj
affectation
copie
obj
affiche
affiche
salut
obj
affiche
affiche
salut
obj
bonjour
obj
affiche
affiche
bonjour
obj
affiche
affiche
salut
modif
obj
copie
obj
affiche
affiche
bonjour
obj
affiche
affiche
salut
créé
fonction
doit
modifier
objet
comme
passé
défaut
copie
modifie
fait
copie
locale
objet
cas
passe
référence
function
modif
objet
objet
coucou
obj
obj
référence
modif
obj
référence
obj
affiche
affiche
coucou
car
modifié
référence
obj
affiche
affiche
coucou
souhaite
créer
code
objet
php
peu
compatible
objets
php
alors
doit
effectuer
copies
référence
passer
objets
fonctions
référence
code
modifié
ci
dessus
marche
deux
cas
php
php
objets
affectés
référence
défaut
manière
implicite
ainsi
obj
new
obj
obj
affectation
référence
obj
affiche
affiche
salut
obj
affiche
affiche
salut
obj
bonjour
obj
affiche
affiche
bonjour
so
rohaut
cours
programmation
php
page
obj
affiche
affiche
bonjour
modif
obj
référence
obj
affiche
affiche
coucou
obj
affiche
affiche
coucou
simplifie
énormément
tâche
développeurs
cependant
peut
explicitement
demander
copie
objet
aide
méthode
spéciale
clone
instruction
clone
clonage
consiste
recopier
tous
attributs
classe
autre
clonage
peut
être
implicite
copie
directe
mécanisme
interne
php
explicite
via
méthode
clone
obj
clone
obj
copie
implicitement
obj
obj
obj
bonjour
obj
revoir
obj
affiche
affiche
bonjour
obj
affiche
affiche
revoir
méthode
fonctionne
bien
tant
utilise
informations
complexes
comme
ressources
descripteurs
fichiers
exemple
obj
ouvert
connexion
base
données
copié
ressource
base
données
inutilisable
car
ouverte
faudrait
rouvrir
clone
class
base
private
db
function
construct
this
db
mysql
connect
localhost
function
clone
this
db
mysql
connect
localhost
obj
new
base
obj
clone
obj
copie
clone
rouvre
connexion
copie
note
méthode
clone
appelée
implicitement
mot
clé
clone
utilisé
peut
appeler
explicitement
méthode
comparaison
objets
php
peut
effectuer
comparaisons
objets
php
deux
instances
objets
égales
seulement
elles
proviennent
classe
elles
mêmes
attributs
attributs
valeur
peut
employer
indifféremment
comparaison
çäë
function
bool
str
bool
if
bool
çùë
false
return
false
else
so
rohaut
cours
programmation
php
page
return
true
function
compareobjects
o
o
echo
o
o
bool
str
o
o
echo
o
o
bool
str
o
o
echo
o
o
bool
str
o
çùà
o
echo
o
o
bool
str
o
o
class
flag
var
flag
function
flag
flag
true
this
flag
flag
class
switchableflag
extends
flag
function
turnon
this
flag
true
function
turnoff
this
flag
false
ço
new
flag
p
new
flag
false
q
new
flag
r
new
switchableflag
echo
compare
instances
créées
mêmes
paramètres
compareobjects
o
q
echo
ncompare
instances
créées
différents
paramètres
compareobjects
o
p
echo
ncompare
instance
parent
celle
sous
classe
compareobjects
o
r
exemple
va
afficher
compare
instances
créées
mêmes
paramètres
o
o
true
o
o
false
o
o
true
o
o
false
compare
instances
créées
différents
paramètres
o
çà
o
false
o
o
true
o
o
false
o
o
true
compare
instance
parent
celle
sous
classe
o
o
false
o
o
true
o
o
false
o
çà
o
true
so
rohaut
cours
programmation
php
page
php
php
fait
différence
entre
comparaison
simple
complète
çäë
php
retournera
vrai
deux
objets
mêmes
attributs
valeurs
instances
classe
comme
php
php
retournera
vrai
deux
objets
font
référence
objet
classe
o
new
o
o
référence
çohà
new
if
o
o
echo
o
o
br
else
echo
o
o
br
if
o
o
echo
o
o
br
else
echo
o
o
br
if
o
o
echo
o
o
br
else
echo
o
o
br
çfëë
echo
o
o
br
else
echo
o
o
br
va
afficher
o
o
o
o
identiques
classe
mêmes
attributs
props
o
o
o
o
références
objet
o
o
o
o
identiques
classe
mêmes
attributs
props
o
o
o
o
références
objet
so
rohaut
cours
programmation
php
page
nouveautés
php
objets
fonction
autoload
fonction
autoload
indique
php
comment
réagir
quand
tente
créer
objet
depuis
classe
définie
facilité
offerte
substitue
forcément
require
include
peut
être
utile
exemple
éviter
inclure
ensemble
classes
utilisées
projet
préférera
inclure
définition
classe
moment
création
instance
fonction
autoload
prend
paramètre
nom
classe
programmer
ensuite
inclure
code
nécessaire
function
autoload
class
require
once
inc
class
php
classes
abstraites
classes
abstraites
nouveauté
php
classe
abstraite
classe
sans
implémentation
peut
être
instanciée
représentée
moins
fonction
abstraite
virtuelle
pure
sans
code
implémentation
effectuée
classes
dérivées
classes
abstraites
servent
essentiellement
définir
classe
base
normalisée
structure
pourra
être
reprise
développement
autres
classes
effectives
toute
classe
contient
moins
méthode
abstraite
doit
être
définie
comme
abstraite
classe
dérivée
redéfinit
méthode
abstraite
classe
parente
base
devra
être
déclarée
abstraite
tour
pourra
être
instanciée
classe
implémente
méthode
abstraite
doit
être
définie
visibilité
plus
faible
méthode
abstraite
définie
tant
protégée
fonction
implémentant
doit
être
définie
tant
protégée
publique
instruction
définir
classes
méthodes
abstract
classe
abstraite
contient
méthode
abstraite
abstract
class
abstractclass
méthode
abstraite
devra
être
redéfinie
classe
dérivée
abstract
protected
function
getvalue
public
function
prt
print
this
getvalue
class
concreteclass
extends
abstractclass
redéfinition
méthode
abstraite
classe
base
protected
function
getvalue
return
concreteclass
so
rohaut
cours
programmation
php
page
class
concreteclass
extends
abstractclass
redéfinition
méthode
abstraite
classe
base
protected
function
getvalue
return
concreteclass
class
new
concreteclass
class
prt
affiche
concreteclass
class
new
concreteclass
class
prt
affiche
concreteclass
classes
méthodes
variables
finales
php
inclut
nouveau
mécanisme
protection
interdisant
classes
dérivées
réimplémenter
méthode
variable
classe
être
dérivée
mot
clé
final
indique
classe
méthode
variable
définitives
elles
pourront
plus
être
implémentées
voici
cas
erreur
class
protected
val
function
construct
this
val
final
function
affiche
print
this
val
class
b
extends
function
construct
parent
construct
function
affiche
erreur
peut
redefinir
print
this
val
o
new
b
o
affiche
classe
b
tenté
récrire
méthode
affiche
déclarée
final
php
retournera
erreur
interfaces
objet
interfaces
permettent
créer
code
spécifie
quelles
méthodes
attributs
classe
peut
implémenter
sans
avoir
définir
comment
elles
gérées
toutes
méthodes
spécifiées
interface
doivent
être
implémentées
classe
définit
interface
moyen
définir
pré
requis
obligatoires
construction
modèle
classe
donnant
liste
prototypes
créé
interface
mot
clé
interface
exemple
allons
définir
toutes
classes
implémentent
interface
doivent
obligatoirement
définir
fonctions
affiche
incrémente
so
rohaut
cours
programmation
php
page
interface
template
public
function
affiche
public
function
incremente
cpt
attention
déclaration
méthodes
notamment
paramètres
doit
être
rigoureusement
identique
classe
celle
interface
indique
classe
implémente
interface
mot
clé
implements
class
implements
template
protected
val
function
construct
this
val
function
affiche
print
this
val
function
incremente
cpt
this
val
cpt
o
new
o
incremente
o
affiche
classe
peut
implémenter
plusieurs
interfaces
temps
cas
liste
interfaces
doit
être
précisée
après
mot
clé
implements
chaque
interface
séparée
virgules
interface
template
public
function
affiche
public
function
incremente
cpt
interface
template
public
function
decremente
cpt
class
implements
template
template
protected
val
function
construct
this
val
function
affiche
print
this
val
function
incremente
cpt
this
val
cpt
function
decremente
cpt
this
val
cpt
so
rohaut
cours
programmation
php
page
gestion
dynamique
méthodes
attributs
peut
toujours
surcharger
directement
méthodes
attributs
opérateurs
php
comme
cependant
nouvelles
fonctions
permettent
intercepter
appels
méthodes
attributs
non
prévus
note
méthodes
peuvent
uniquement
être
déclenchées
lorsque
objet
hérité
non
contient
attribut
méthode
tentez
accéder
cas
contraire
méthode
attribut
utilisés
méthode
utilise
méthode
call
prend
deux
paramètres
premier
nom
méthode
second
tableau
paramètres
passés
méthode
imaginons
souhaitons
appeler
méthode
test
objet
prévu
cas
suffit
gérer
cas
méthode
call
class
function
call
gère
appels
méthodes
non
définies
if
test
echo
fonction
test
appelée
valeurs
ça
return
o
new
aùà
o
test
true
test
existe
pourtant
print
r
ça
marche
ça
retourne
paramètres
test
attribut
utilise
méthodes
get
set
méthode
get
appelée
implicitement
lorsque
tentez
accéder
valeur
variable
définie
classe
prend
comme
unique
paramètre
nom
attribut
auquel
tentez
accéder
méthode
set
appelée
lorsque
tentez
affecter
valeur
attribut
défini
prend
deux
paramètres
nom
variable
valeur
affectée
class
private
tab
array
function
get
v
ifà
isset
this
tab
v
return
false
else
return
this
tab
v
function
set
v
this
tab
v
o
new
aùà
o
var
membre
var
existe
pourtant
echo
o
var
ça
marche
ça
affiche
itérations
objets
php
indexe
attributs
objets
possible
accéder
liste
attributs
visibilité
permet
aide
simple
boucle
itérative
comme
foreach
so
rohaut
cours
programmation
php
page
class
public
v
salut
public
v
public
v
amis
private
v
privé
o
new
aùà
foreach
o
cle
valeur
echo
cle
valeur
br
code
affiche
v
salut
v
v
ami
attributs
visibles
affichés
existe
interfaces
prédéfinies
permettant
créer
propre
classe
itération
classe
iterator
implémente
cinq
méthodes
suivantes
current
next
key
valid
rewind
peut
créer
classe
implémentant
interface
exemple
naviguer
résultat
requête
base
données
tableau
type
hinting
php
permet
contrôler
type
valeur
passé
paramètre
fonction
prenons
code
suivant
retourne
infos
utilisateur
classe
utilisateur
function
detail
user
return
user
infos
fonction
attend
objet
particulier
classe
utilisateur
tout
fonctionnera
merveille
code
blindé
cependant
passe
entier
ça
marchera
seulement
lors
return
user
infos
php
générera
erreur
type
hinting
indique
php
attend
exactement
fonction
function
detail
utilisateur
user
return
user
infos
foi
php
retournera
erreur
dès
appel
fonction
reçoit
objet
classe
utilisateur
so
rohaut
cours
programmation
php
page
exceptions
try
catch
php
inclut
enfin
support
exceptions
bloc
try
catch
ainsi
peut
placer
code
risque
code
exceptionnel
peut
produire
erreur
bloc
try
gérer
erreur
selon
type
blocs
catch
put
utiliser
plusieurs
blocs
catch
suivant
type
erreur
généré
attention
quand
possible
gérera
erreurs
code
normal
try
code
risque
erreur
catch
exception
e
code
réglant
situation
exceptionnelle
sein
bloc
try
exécution
instruction
erronée
va
déclencher
émission
signal
exception
signal
interrompt
exécution
reste
tout
bloc
fonction
signal
php
exécutera
bloc
catch
approprié
remarque
bloc
catch
php
gère
exceptions
aide
classe
spéciale
appelée
exception
exception
fait
définie
objet
classe
classe
dérivée
peut
créer
propres
gestionnaires
exceptions
comme
peut
écrire
plusieurs
blocs
catch
gérer
exceptions
suivant
type
objet
déclenchement
throw
peut
déclencher
manuellement
exception
aide
instruction
throw
voici
code
provoque
toujours
exception
try
erreur
message
erreur
throw
new
exception
erreur
echo
jamais
exécuté
catch
exception
e
echo
exception
e
getmessage
ligne
e
getline
aide
instruction
throw
provoqué
émission
exception
gérée
classe
exception
cas
php
va
rechercher
bloc
catch
correspondant
type
objet
créé
gérer
exception
ici
catch
exception
e
classe
exception
classes
personnalisées
classe
exception
imposée
php
comme
classe
base
parente
toute
classe
utilisable
catch
classe
base
dispose
méthodes
suivantes
construct
erreur
code
constructeur
message
erreur
code
getmessage
retourne
message
erreur
généré
so
rohaut
cours
programmation
php
page
getcode
code
erreur
exception
getline
numéro
ligne
script
provoqué
exception
getfile
nom
script
php
provoqué
exception
gettrace
gettraceastring
gestion
pile
appels
peu
comme
java
tostring
chaîne
formatée
afficher
méthodes
getxxxx
finales
peut
étendre
constructeur
méthode
tostring
peuvent
être
étendus
peut
créer
propre
classe
dérivée
class
monexception
extends
exception
public
function
construct
message
erreur
défaut
code
parent
construct
message
code
try
switch
case
throw
new
monexception
ouille
break
case
throw
new
exception
break
catch
monexception
e
echo
e
getmessage
catch
exception
e
echo
exception
e
getmessage
ligne
e
getline
vaut
monexception
envoyé
vaut
exception
php
erreur
exception
peut
certains
cas
php
déclenche
naturellement
exception
suivant
exécution
fonction
cas
indiqué
documentation
php
voir
site
php
ligne
plupart
cas
ancien
système
gestion
erreurs
utilisé
ainsi
code
suivant
try
fopen
toto
r
catch
exception
e
echo
exception
e
getmessage
donnera
tout
résultat
escompté
exécution
fopen
provoquera
émission
exception
erreur
php
type
warning
warning
fopen
toto
function
fopen
failed
to
open
stream
no
such
file
or
so
rohaut
cours
programmation
php
page
directory
in
apachefriends
xampp
htdocs
objet
panier
php
line
php
gère
plusieurs
niveau
erreurs
warning
notice
etc
exemple
problème
ouverture
fichier
émet
erreur
type
warning
erreur
syntaxe
parse
utilisation
variable
non
déclarée
notice
peut
régler
modifier
niveaux
erreurs
php
ini
aussi
dynamiquement
via
fonctions
parmi
fonctions
deux
peuvent
intéresser
set
error
handler
permet
modifier
comportement
défaut
php
lorsqu
rencontre
erreur
script
lieu
exécuter
propre
gestionnaire
exécutera
attention
gestionnaire
peut
gérer
certains
types
erreurs
syntaxe
etc
voir
http
www
php
net
manual
function
set
error
handler
php
cas
simple
warning
notice
problème
passe
paramètre
nom
propre
fonction
doit
gérer
erreur
paramètres
assez
parlants
fonction
allons
déclencher
exception
réception
importe
quelle
erreur
function
gest
erreur
errno
errstr
errfile
errline
throw
new
exception
errstr
line
errline
errno
set
error
handler
gest
erreur
exécution
bloc
try
catch
foi
exception
fopen
toto
function
fopen
failed
to
open
stream
no
such
file
or
directory
line
voulions
bien
déclenché
exception
exception
défaut
certaines
instructions
php
génèrent
exceptions
instructions
sein
bloc
try
catch
php
générera
exception
défaut
propre
gestionnaire
exceptions
peut
modifier
état
fonction
set
exception
handler
function
exception
handler
exception
echo
exception
imprévue
exception
getmessage
set
exception
handler
exception
handler
so
rohaut
cours
programmation
php
page
sauvegarder
objets
cas
session
informations
indiquées
ici
fonctionnent
aussi
bien
php
php
faut
distinguer
cas
sessions
faut
passer
objet
page
autre
cas
sauvegarde
objet
disque
premier
cas
sessions
utilisées
objets
peuvent
être
passés
directement
page
autre
respectant
quelques
règles
session
doit
être
ouverte
chaque
page
fonction
session
start
avant
utilisation
objet
classes
doivent
être
définies
avant
ouverture
session
session
start
appel
objet
implique
répéter
déclaration
chaque
page
placer
fichier
inclure
require
require
once
début
script
objet
doit
être
variable
session
stockée
fonction
session
register
aide
tableau
global
session
voici
exemple
objet
inc
class
panier
eléments
panier
var
contenu
ajout
qte
articles
type
code
panier
function
ajout
article
code
qte
if
isset
this
contenu
code
this
contenu
code
uà
qte
else
this
contenu
code
qte
suppression
num
articles
type
artnr
panier
function
suppr
article
code
qte
if
this
contenu
code
qte
this
contenu
code
qte
return
true
else
return
false
function
liste
article
foreach
this
contenu
ref
qte
echo
ref
qte
br
class
panier
nomme
extends
panier
var
proprietaire
function
nom
proprietaire
nom
this
proprietaire
nom
so
rohaut
cours
programmation
php
page
objet
php
php
require
once
objet
inc
session
start
html
head
title
page
title
head
body
session
objet
new
panier
nomme
session
objet
nom
proprietaire
seb
session
objet
ajout
article
ref
session
objet
suppr
article
ref
session
objet
ajout
article
ref
echo
session
objet
proprietaire
br
href
objet
php
page
body
html
objet
php
php
require
once
objet
inc
session
start
html
head
title
page
title
head
body
echo
session
objet
proprietaire
br
session
objet
liste
article
body
html
autres
cas
rien
empêche
conserver
objet
récupérer
plus
tard
après
avoir
fermé
session
ça
peut
stocker
fichier
base
données
récupérer
format
correct
données
stockage
faut
utiliser
fonctions
serialize
unserialize
première
fonction
retourne
chaîne
texte
représentant
variable
forcément
objet
passée
paramètre
format
donnée
peut
ainsi
être
stocké
manière
convient
seconde
fonction
prend
comme
paramètre
chaîne
texte
issue
serialize
retourne
variable
type
originel
cas
objet
classa
inc
php
class
var
one
function
show
one
echo
this
one
so
rohaut
cours
programmation
php
page
page
php
php
include
classa
inc
new
serialize
enregistrez
page
php
pourra
trouver
fp
fopen
store
w
fputs
fp
fclose
fp
page
php
php
ceci
nécessaire
unserialize
fonctionne
correctement
include
classa
inc
implode
file
store
unserialize
maintenant
utilisez
méthode
show
one
objet
show
one
so
rohaut
cours
programmation
php
page
document
outline
introduction
définition
historique
utilisation
pratique
pages
statiques
vs
page
dynamiques
scripts
cgi
pages
dynamiques
php
pourquoi
préférer
php
autres
langages
comme
asp
devez
déjà
connaître
nécessaire
serveur
nécessaire
client
respect
standards
bases
présentation
syntaxe
base
intégration
html
séparateur
instructions
bloc
instructions
commentaires
travailler
variables
déclarer
variable
portée
variables
variables
prédéfinies
variables
dynamiques
types
variables
booléens
entiers
virgule
flottante
chaînes
caractères
tableaux
variable
objet
constantes
obtenir
type
variable
définir
supprimer
variable
opérateurs
précédence
opérateurs
opérateurs
arithmétiques
opérateurs
assignation
opérateurs
bits
opérateurs
comparaison
opérateur
erreur
opérateur
exécution
opérateurs
incrémentation
décrémentation
opérateurs
logiques
opérateurs
chaînes
opérateur
tableaux
notion
expression
structures
contrôle
if
while
while
classique
do
while
for
foreach
break
continue
switch
return
require
include
once
fonctions
syntaxe
portée
arguments
valeur
retour
fonctions
internes
gestion
formulaires
php
get
post
récupération
tableau
récupération
directe
utiliser
tableaux
date
heure
localisation
récupérer
date
heure
date
date
locale
strftime
retour
tableau
getdate
heure
localtime
récupérer
importe
quelle
date
mysql
présentation
outils
phpmyadmin
mysqlcc
créer
base
utilisateurs
droits
créer
modifier
tables
types
numériques
types
entiers
types
réels
flottants
types
booléens
types
caractères
types
char
types
text
type
enum
type
set
types
date
formats
supportés
type
datetime
type
date
type
timestamp
type
time
type
year
création
syntaxe
sql
types
tables
myisam
innodb
index
fulltext
création
recherche
recherche
booléenne
mysql
php
connexion
base
données
connexion
serveur
choix
base
fermeture
connexion
séquence
complète
base
requêtes
exécuter
requête
nombre
lignes
affectées
nombre
lignes
retournées
récupérer
résultats
insertion
auto
incrément
récupération
erreurs
système
fichiers
travail
fichiers
ouverture
lecture
fgets
fread
fscanf
fgetc
fgetss
fgetcsv
renvoyer
fichier
sortie
standard
ecriture
déplacement
fseek
ftell
rewind
fin
fichier
fermeture
travail
répertoires
répertoire
actuel
déplacer
ouvrir
lister
fermer
récupérer
toutes
entrées
travail
système
fichiers
informations
fichier
actions
fichiers
répertoires
upload
fichiers
travail
chaînes
fonctions
code
html
mysql
gestion
caractères
verrouillés
balises
caractères
spéciaux
html
fonctions
texte
générales
découper
chaîne
rechercher
comparer
sessions
cookies
cookies
création
accès
suppression
identification
http
connexion
déconnexion
sessions
php
principe
utilisation
ouverture
variables
session
expiration
session
changer
accès
défaut
images
pré
requis
importants
créer
image
types
possibles
création
nouvelle
image
dynamique
récupération
image
existante
publication
chargement
via
autre
page
travailler
image
récupérer
informations
couleurs
dessin
remplissage
point
ligne
rectangle
cercle
ellipse
polygones
texte
simple
programmation
objet
structure
création
objet
accès
membres
php
php
opérateur
variables
protection
php
x
php
x
protection
variables
fonctions
attributs
méthodes
statiques
constantes
classe
héritage
polymorphisme
mots
clés
parent
self
constructeurs
php
php
constructeurs
classes
dérivées
php
php
destructeur
php
php
affectation
objets
code
commun
php
php
comparaison
objets
php
php
nouveautés
php
objets
fonction
autoload
classes
abstraites
classes
méthodes
variables
finales
interfaces
objet
gestion
dynamique
méthodes
attributs
itérations
objets
type
hinting
exceptions
try
catch
déclenchement
throw
classe
exception
classes
personnalisées
php
erreur
exception
exception
défaut
sauvegarder
objets
cas
session
autres
cas
