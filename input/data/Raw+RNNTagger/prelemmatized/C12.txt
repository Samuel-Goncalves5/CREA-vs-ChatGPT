Programmer	VW	programmer
en	P	en
PHP	N.P.m.s	Php
Julien	N.P.m.s	Julien
Gaulmin	N.P.m.s	Gaulmin
julien.gaulmin@alcove.fr	ET	<unknown>
version	N.C.f.s	version
1.44	D.card.m.p	@card@
Copyright	N.P.m.s	Copyright
c	PONCT.W	c
2000	D.card.m.p	@card@
Julien	N.C.m.s	julien
Gaulmin	N.P.m.s	Gaulmin
julien.gaulmin@alcove.fr	ET	<unknown>
,	PONCT.W	,
Alcôve	N.P.f.s	Alcôve
Ce	D.dem.m.s	ce
document	N.C.m.s	document
peut	V.P.3.s	pouvoir
être	VW	être
reproduit	VK.m.s	reproduire
,	PONCT.W	,
distribué	VK.m.s	distribuer
et/ou	N.C.m.s	<unknown>
modifié	VK.m.s	modifier
selon	P	selon
les	D.def.m.p	le
termes	N.C.m.p	terme
de	P	de
la	D.def.f.s	le
Licence	N.C.f.s	licence
GNU	N.P.f.s	Gnu
de	P	de
Documentation	N.C.f.s	documentation
Libre	N.P.m.s	Libre
(	PONCT.W	(
GNU	N.P.f.s	Gnu
Free	N.P.f.s	Free
Documentation	N.C.f.s	documentation
Licence	N.P.f.s	Licence
)	PONCT.W	)
dans	P	dans
sa	D.poss.f.s	son
version	N.C.f.s	version
1.1	A.card.f.s	@card@
ou	C.C	ou
ultérieure	A.qual.f.s	ultérieur
telle	A.qual.f.s	tel
que	C.S	que
publiée	VK.f.s	publier
,	PONCT.W	,
en	P	en
anglais	N.C.m.s	anglais
,	PONCT.W	,
par	P	par
la	D.def.f.s	le
Free	N.P.f.s	Free
Software	N.P.f.s	Software
Foundation	N.P.f.s	Foundation
;	PONCT.W	;
sans	P	sans
partie	N.C.f.s	partie
invariante	A.qual.f.s	invariant
,	PONCT.W	,
avec	P	avec
comme	P	comme
première	N.C.f.s	première
de	P	de
couverture	N.C.f.s	couverture
(	PONCT.W	(
front	ET	front
cover	ET	cover
texts	N.C.m.p	text
)	PONCT.W	)
les	D.def.f.p	le
deux	A.card.f.p	deux
premières	A.ord.f.p	premier
pages	N.C.f.p	page
,	PONCT.W	,
et	C.C	et
sans	P	sans
partie	N.C.f.s	partie
considérée	VK.f.s	considérer
comme	P	comme
quatrième	A.ord.m.s	quatrième
de	P	de
couverture	N.C.f.s	couverture
(	PONCT.W	(
back	ET	back
cover	ET	cover
texts	N.C.m.p	text
)	PONCT.W	)
Une	D.ind.f.s	un
copie	N.C.f.s	copie
de	P	de
la	D.def.f.s	le
licence	N.C.f.s	licence
est	V.P.3.s	être
fournie	VK.f.s	fournir
en	P	en
annexe	N.C.f.s	annexe
et	C.C	et
peut	V.P.3.s	pouvoir
être	VW	être
consultée	VK.f.s	consulter
à	P	à
l'	D.def.m.s	le
url	N.C.m.s	url
:	PONCT.W	:
http	ET	<unknown>
://www.gnu.org/copyleft/fdl.html	ET	<unknown>
Alcôve	N.P.m.s	Alcôve
Centre	N.P.m.s	Centre
Paris	N.P.m.s	Paris
Pleyel	N.P.m.s	Pleyel
153	A.card.m.s	@card@
bd	ET	<unknown>
Anatole	N.P.m.s	Anatole
France	N.P.f.s	France
93200	N.card.f.s	@card@
Saint-Denis	N.P.f.s	Saint-Denis
,	PONCT.W	,
France	N.P.f.s	France
Tél	N.P.f.s	Tél
.	PONCT.S	.

:	PONCT.W	:
+33	PRO.card.m.p	@card@
1	D.card.m.s	@card@
49	A.card.m.s	@card@
22	A.card.m.s	@card@
68	A.card.m.p	@card@
00	A.card.m.p	@card@
Fax	N.C.m.p	fax
:	PONCT.W	:
+33	A.card.m.s	@card@
1	A.card.m.s	@card@
49	A.card.m.s	@card@
22	A.card.m.s	@card@
68	A.card.m.s	@card@
01	A.card.m.s	@card@
E-mail	N.C.m.s	e-mail
:	PONCT.W	:
alcove@alcove.fr	ET	<unknown>
,	PONCT.W	,
Toile	N.P.m.s	Toile
:	PONCT.W	:
www.alcove.fr	N.C.m.s	wwwaverr
1	D.card.m.s	@card@
Table	N.C.m.s	table
des	P+D.def.f.p	du
matières	N.C.f.p	matière
Chapitre	N.P.m.s	Chapitre
1	A.card.f.s	@card@
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
langage	N.C.m.s	langage
1.1	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
1.2	A.card.m.s	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
1.3	A.card.f.s	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Chapitre	N.C.m.s	chapitre
2	A.card.m.s	@card@
Les	D.def.f.p	le
bases	N.C.f.p	base
du	P+D.def.m.s	du
langage	N.C.m.s	langage
2.1	A.card.m.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
2.2	A.card.m.s	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
2.3	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
2.4	A.card.m.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Chapitre	N.P.m.s	Chapitre
3	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
essentielles	A.qual.f.p	essentiel
3.1	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
3.2	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
3.3	A.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Chapitre	N.P.m.s	Chapitre
4	A.card.f.s	@card@
Utilisation	N.C.f.s	utilisation
avancée	VK.f.s	avancer
3	A.card.m.s	@card@
5	A.card.m.s	@card@
18	A.card.m.p	@card@
29	A.card.m.p	@card@
38	A.card.m.p	@card@
40	A.card.m.p	@card@
78	A.card.m.p	@card@
112	A.card.m.s	@card@
126	A.card.m.p	@card@
138	A.card.m.p	@card@
140	A.card.m.p	@card@
149	A.card.m.p	@card@
169	N.card.f.s	@card@
180	N.card.f.s	@card@
2	A.card.m.s	@card@
4.1	A.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
4.2	D.card.m.p	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
4.3	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
4.4	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
182	N.card.f.s	@card@
202	A.card.m.s	@card@
217	A.card.m.p	@card@
254	A.card.m.p	@card@
3	A.card.m.s	@card@
Chapitre	N.C.m.s	chapitre
1	D.card.m.s	@card@
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
langage	N.C.m.s	langage
4	A.card.f.s	@card@
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
du	P+D.def.m.s	du
chapitre	N.C.m.s	chapitre
Principes	N.P.x.s	Principes
de	P	de
la	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
;	PONCT.W	;
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
;	PONCT.W	;
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
.	PONCT.S	.

5	A.card.f.s	@card@
Section	N.C.f.s	section
1	D.card.m.s	@card@
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
6	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Rappels	N.C.m.p	rappel
d'	P	de
HTML	N.P.m.s	<unknown>
;	PONCT.W	;
Le	D.def.m.s	le
web	N.C.m.s	web
interactif	A.qual.m.s	interactif
;	PONCT.W	;
Notions	N.C.f.p	notion
de	P	de
CGI	N.P.f.s	Cgi
;	PONCT.W	;
Distinction	N.C.f.s	distinction
PHP/CGI	N.C.m.s	<unknown>
.	PONCT.S	.

7	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Rappels	N.C.m.p	rappel
d'	P	de
HTML	N.P.m.s	<unknown>
H	P+D.def.m.s	h
yper	VW	yper
T	D.card.m.p	t
ext	N.C.m.s	ext
M	N.C.m.p	m
arkup	N.C.m.s	arkup
L	D.def.m.s	l
anguage	N.C.m.s	anguage
;	PONCT.W	;
Définit	V.P.3.s	définir
la	D.def.f.s	le
structure	N.C.f.s	structure
logique	A.qual.f.s	logique
d'	P	de
un	D.ind.m.s	un
document	N.C.m.s	document
web	A.qual.m.s	web
;	PONCT.W	;
Composé	VK.m.s	composer
d'	P	de
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
de	P	de
commandes	N.C.f.p	commande
de	P	de
formatage	N.C.m.s	formatage
;	PONCT.W	;
Basé	VK.m.s	baser
sur	P	sur
la	D.def.f.s	le
notion	N.C.f.s	notion
d	P	d
’	N.C.m.s	’
environnement	N.C.m.s	environnement
possédant	VG	posséder
un	D.ind.m.s	un
début	N.C.m.s	début
et	C.C	et
une	D.ind.f.s	un
fin	N.C.f.s	fin
->	D.card.m.p	<unknown>
délimiteurs	N.C.m.p	délimiteur
:	PONCT.W	:
tags	N.C.m.p	tag
ou	C.C	ou
marqueurs	N.C.m.p	marqueur
.	PONCT.S	.

8	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
marqueurs	N.C.m.p	marqueur
sont	V.P.3.p	être
définis	VK.m.p	définir
entre	P	entre
<>	N.C.m.s	
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
<marqueur>	N.P.f.s	<unknown>
...	PONCT.W	<unknown>
</marqueur>	N.C.f.s	<unknown>
La	D.def.f.s	le
plupart	N.C.f.s	plupart
des	P+D.def.m.p	du
environnements	N.C.m.p	environnement
peuvent	V.P.3.p	pouvoir
être	VW	être
imbriqués	VK.m.p	imbriquer
selon	P	selon
des	D.ind.f.p	du
règles	N.C.f.p	règle
bien	ADV.-	bien
définies	VK.f.p	définir
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
<H1><B>Mon	N.P.m.s	<unknown>
titre</B></H1>	N.C.m.s	<unknown>
Il	CL.suj.3.m.s	il
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
permis	VK.m.s	permettre
de	P	de
faire	VW	faire
chevaucher	VW	chevaucher
des	P+D.def.m.p	du
environnements	N.C.m.p	environnement
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
<H1><B>Mon	N.C.m.s	çh1ëëbomon
titre</H1></B>	N.C.m.s	<unknown>
9	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Structure	N.C.f.s	structure
générale	A.qual.f.s	général
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
<HTML>	N.P.m.s	<unknown>
<HEAD>	N.P.x.s	<unknown>
<TITLE>Mon	N.P.m.s	<unknown>
titre</TITLE>	N.C.m.s	<unknown>
<	A.ind.m.s	<
!	PONCT.S	!

--	PONCT.W	--
Mes	N.C.m.p	me
commentaires	N.C.m.p	commentaire
--	PONCT.W	--
>	P+D.def.m.s	c
</HEAD>	N.P.x.s	<unknown>
<BODY>	N.P.x.s	<unknown>
<H1>Mon	N.P.m.s	<unknown>
chapitre</H1>	N.C.m.s	<unknown>
<P>Mon	N.P.m.s	<unknown>
paragraphe</P>	ET	<unknown>
<ADDRESS>Mes	N.P.x.s	<unknown>
coordonnées</ADDRESS>	ET	<unknown>
</BODY>	N.P.x.s	<unknown>
</HTML>	N.P.x.s	<unknown>
10	A.card.f.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	ET	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Le	D.def.m.s	le
web	N.C.m.s	web
interactif	A.qual.m.s	interactif
Deux	D.card.m.p	deux
principaux	A.qual.m.p	principal
types	N.C.m.p	type
d'	P	de
interactions	N.C.f.p	interaction
:	PONCT.W	:
–	P	à
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
(	PONCT.W	(
Server-side	N.C.m.s	server-side
scripting	N.C.m.s	scripting
)	PONCT.W	)
,	PONCT.W	,
–	D.card.m.s	–
côté	N.C.m.s	côté
client	N.C.m.s	client
(	PONCT.W	(
Client-side	N.P.m.s	Client-Side
scripting	N.C.m.s	scripting
)	PONCT.W	)
.	PONCT.S	.

Chacun	PRO.ind.m.s	chacun
des	P+D.def.m.p	du
types	N.C.m.p	type
précédents	A.qual.m.p	précédent
se	CL.refl.3.m.s	se
divise	V.P.3.s	diviser
encore	ADV.-	encore
en	P	en
sous-catégories	N.C.f.p	sous-catégorie
.	PONCT.S	.

11	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Côté	N.C.m.s	côté
client	N.C.m.s	client
:	PONCT.W	:
–	D.card.m.p	–
scripts	N.C.m.p	script
embarqués	VK.m.p	embarquer
dans	P	dans
la	D.def.f.s	le
page	N.C.f.s	page
HTML	N.P.m.s	<unknown>
(	PONCT.W	(
HTML-embedded	N.P.m.s	Html-embedded
scripting	N.C.m.s	scripting
)	PONCT.W	)
->	N.P.m.s	<unknown>
Javascript	N.P.m.s	Javascript
...	PONCT.W	<unknown>
,	PONCT.W	,
–	P	à
applets	N.C.m.p	applet
->	N.P.m.s	<unknown>
Java	N.P.m.s	Java
,	PONCT.W	,
ActiveX	N.P.m.s	Activex
...	PONCT.W	<unknown>
,	PONCT.W	,
–	D.card.m.p	–
plugins	A.qual.m.p	plugin
propriétaires	N.C.m.p	propriétaire
.	PONCT.S	.

12	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
:	PONCT.W	:
–	P+D.def.m.s	c
CGI	N.P.f.s	Cgi
->	A.ind.m.s	-
Perl	N.P.m.s	Perl
,	PONCT.W	,
C	N.P.f.s	C
,	PONCT.W	,
Shell	N.P.f.s	Shell
...	PONCT.W	<unknown>
,	PONCT.W	,
–	D.card.m.p	–
Interpréteurs	N.C.m.p	interpréteur
intégrés	VK.m.p	intégrer
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
scripts	N.C.m.p	script
embarqués	VK.m.p	embarquer
dans	P	dans
la	D.def.f.s	le
page	N.C.f.s	page
HTML	N.P.m.s	<unknown>
(	PONCT.W	(
HTTPD	N.P.m.s	<unknown>
modules	A.qual.m.p	module
,	PONCT.W	,
HTML-embedded	N.P.m.s	Html-embedded
scripting	N.C.m.s	scripting
)	PONCT.W	)
->	N.P.m.s	<unknown>
PHP	N.P.m.s	Php
,	PONCT.W	,
ASP-VBScript	N.P.x.s	Asp-Vbscript
...	PONCT.W	<unknown>
,	PONCT.W	,
scripts	N.C.m.p	script
à	P	à
la	D.def.f.s	le
CGI	N.P.f.s	Cgi
(	PONCT.W	(
CGI-like	N.P.f.s	Cgi-like
)	PONCT.W	)
->	D.card.m.p	<unknown>
mod_perl/Apache	N.P.x.s	<unknown>
–	P	à
Servlets	N.C.m.p	servlet
->	N.P.x.s	<unknown>
Java	N.P.m.s	Java
.	PONCT.S	.

13	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
WWW	N.P.m.s	Www
interactif	A.qual.m.s	interactif
Server-side	N.P.m.s	Server-side
scripting	N.C.m.s	scripting
CGI	N.P.f.s	Cgi
(	PONCT.W	(
Perl	N.P.m.s	Perl
,	PONCT.W	,
C	N.P.f.s	C
,	PONCT.W	,
Shell	N.P.f.s	Shell
...	PONCT.W	<unknown>
)	PONCT.W	)
Client-side	N.P.m.s	Client-Side
scripting	N.C.m.s	scripting
Servlets	N.P.m.s	Servlets
(	PONCT.W	(
Java	N.P.m.s	Java
)	PONCT.W	)
Applets	N.C.m.p	applet
(	PONCT.W	(
Java	N.P.m.s	Java
,	PONCT.W	,
ActiveX	N.P.m.s	Activex
)	PONCT.W	)
HTTPD	N.P.m.s	<unknown>
modules	N.C.m.p	module
HTML-embedded	N.P.m.s	Html-embedded
scripting	N.P.m.s	Scripting
(	PONCT.W	(
PHP	N.P.m.s	Php
,	PONCT.W	,
ASP-VBS	N.P.m.s	Asp-Vbs
)	PONCT.W	)
HTML-embedded	N.P.m.s	Html-embedded
scripting	N.P.m.s	Scripting
(	PONCT.W	(
JavaScript	N.P.m.s	Javascript
)	PONCT.W	)
CGI-like	N.P.m.s	Cgi-like
(	PONCT.W	(
mod_perl	N.C.m.s	<unknown>
/Apache	N.C.m.s	<unknown>
)	PONCT.W	)
14	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	ET	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Notions	N.C.f.p	notion
de	P	de
CGI	N.P.m.s	Cgi
C	PONCT.W	C
ommon	ET	ommon
G	N.P.m.s	G
ateway	ET	ateway
I	A.card.m.s	I
nterface	N.C.m.s	nterface
;	PONCT.W	;
Interface	N.C.f.s	interface
de	P	de
communication	N.C.f.s	communication
pour	P	pour
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
programmes	N.C.m.p	programme
capables	A.qual.m.p	capable
d'	P	de
être	VW	être
exécutés	VK.m.p	exécuter
par	P	par
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
;	PONCT.W	;
Permet	V.P.3.s	permettre
la	D.def.f.s	le
création	N.C.f.s	création
dynamique	A.qual.f.s	dynamique
de	P	de
pages	N.C.f.p	page
du	P+D.def.m.s	du
côté	N.C.m.s	côté
serveur	A.qual.m.s	serveur
;	PONCT.W	;
Généralement	ADV.-	généralement
utilisé	VK.m.s	utiliser
pour	P	pour
servir	VW	servir
les	D.def.f.p	le
requêtes	N.C.f.p	requête
en	P	en
provenance	N.C.f.s	provenance
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
de	P	de
formulaire	N.C.m.s	formulaire
HTML	N.P.m.s	<unknown>
.	PONCT.S	.

15	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Principe	N.C.m.s	principe
de	P	de
la	D.def.f.s	le
CGI	N.P.f.s	Cgi
:	PONCT.W	:
GET/POST	N.P.m.s	Getmpost
"	PONCT.W	"
emballage	V.P.3.s	emballager
"	PONCT.W	"
Formulaire	A.qual.m.s	formulaire
HTML	N.P.m.s	<unknown>
Browser	N.P.m.s	Browser
APPEL	N.P.m.s	Appel
"	PONCT.W	"
variables	A.qual.m.p	variable
"	PONCT.W	"
RÉSULTAT	N.C.m.s	résultat
RÉPONSE	N.C.m.s	réponse
Programme	N.C.m.s	programme
externe	V.P.3.s	externer
HTTP	N.P.m.s	Http
Serveur	N.P.m.s	Serveur
HTTP	N.P.m.s	Http
CGI	N.P.f.s	Cgi
16	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	ET	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
if	ET	if
($want_page==1){	N.P.x.s	<unknown>
$want_page=0	N.P.x.s	<unknown>
;	PONCT.W	;
}	D.card.m.s	}
Scénario	N.C.m.s	scénario
de	P	de
génération	N.C.f.s	génération
dynamique	A.qual.f.s	dynamique
de	P	de
page	N.C.f.s	page
via	P	via
la	D.def.f.s	le
CGI	N.P.f.s	Cgi
:	PONCT.W	:
–	P	à
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
remplit	V.P.3.s	remplir
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
HTML	N.P.m.s	<unknown>
et	C.C	et
le	D.def.m.s	le
valide	N.C.m.s	valide
,	PONCT.W	,
–	P	à
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
ouvre	V.P.3.s	ouvrir
une	D.ind.f.s	un
connexion	N.C.f.s	connexion
vers	P	vers
le	D.def.m.s	le
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
et	C.C	et
lui	CL.obj.3.m.s	lui
envoie	V.P.3.s	envoyer
la	D.def.f.s	le
requête	N.C.f.s	requête
correspondante	A.qual.f.s	correspondant
(	PONCT.W	(
nom	N.C.m.s	nom
du	P+D.def.m.s	du
CGI	N.P.m.s	Cgi
+	P	p
paramètres	N.C.m.p	paramètre
)	PONCT.W	)
,	PONCT.W	,
–	P	à
le	D.def.m.s	le
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
invoque	V.P.3.s	invoquer
le	D.def.m.s	le
script	N.C.m.s	script
CGI	N.P.f.s	Cgi
en	P	en
lui	CL.obj.3.m.s	lui
transmettant	VG	transmettre
les	D.def.m.p	le
paramètres	N.C.m.p	paramètre
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
,	PONCT.W	,
–	P	à
le	D.def.m.s	le
script	N.C.m.s	script
CGI	N.P.m.s	Cgi
génère	V.P.3.s	générer
une	D.ind.f.s	un
page	N.C.f.s	page
correspondant	VG	correspondre
aux	P+D.def.m.p	au
paramètres	N.C.m.p	paramètre
,	PONCT.W	,
–	P	à
le	D.def.m.s	le
serveur	N.C.m.s	serveur
envoie	V.P.3.s	envoyer
la	D.def.f.s	le
page	N.C.f.s	page
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
et	C.C	et
ferme	V.P.3.s	fermer
la	D.def.f.s	le
connexion	N.C.f.s	connexion
,	PONCT.W	,
–	P	à
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
affiche	V.P.3.s	afficher
la	D.def.f.s	le
page	N.C.f.s	page
.	PONCT.S	.

17	A.card.m.s	@card@
La	D.def.f.s	le
programmation	N.C.f.s	programmation
web	N.C.m.s	web
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Distinction	N.C.f.s	distinction
PHP/CGI	N.P.m.s	<unknown>
Tous	A.ind.m.p	tous
les	D.def.m.p	le
deux	A.card.m.p	deux
sont	V.P.3.p	être
situés	VK.m.p	situer
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
mais	C.C	mais
:	PONCT.W	:
PHP	N.C.m.s	php
:	PONCT.W	:
le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
est	V.P.3.s	être
contenu	VK.m.s	contenir
dans	P	dans
les	D.def.f.p	le
pages	N.C.f.p	page
HTML	N.P.m.s	<unknown>
Ex	N.P.m.s	Ex
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$username	A.qual.m.s	çusername
=	PONCT.W	=
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<HTML><BODY><H1>	N.C.m.s	<unknown>
Bonjour	N.P.m.s	Bonjour
monsieur	A.qual.m.s	monsieur
<	A.ind.m.s	<
?	PONCT.S	?

php	ET	<unknown>
print	A.qual.m.s	print
$username	A.qual.m.s	çusername
?	PONCT.S	?

>	P	à
</H1></BODY></HTML>	N.P.x.s	<unknown>
CGI	N.P.f.s	Cgi
:	PONCT.W	:
le	D.def.m.s	le
code	N.C.m.s	code
HTML	N.P.m.s	<unknown>
est	V.P.3.s	être
contenu	VK.m.s	contenir
dans	P	dans
le	D.def.m.s	le
code	N.C.m.s	code
du	P+D.def.m.s	du
CGI	N.P.m.s	Cgi
Ex	N.P.m.s	Ex
:	PONCT.W	:
#	I	à
!	PONCT.S	!

/usr/bin/perl	N.C.m.p	<unknown>
-w	PONCT.W	w
$username	ET	çusername
=	PONCT.W	=
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
;	PONCT.W	;
print	ET	print
"	PONCT.W	"
Content-Type	N.P.m.s	Content-Type
:	PONCT.W	:
text/html\n\n	ET	<unknown>
"	PONCT.W	"
;	PONCT.W	;
<HTML><BODY><H1>Bonjour	N.C.m.s	çhtmlëëbodyçhççbonjour
monsieur	A.qual.m.s	monsieur
$username</H1></BODY></HTML>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
18	D.card.f.p	@card@
Section	N.C.f.s	section
2	A.card.f.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
19	D.card.m.s	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
;	PONCT.W	;
Vue	VK.f.s	voir
d'	P	de
ensemble	N.C.m.s	ensemble
du	P+D.def.m.s	du
PHP	N.C.m.s	php
;	PONCT.W	;
L'	D.def.f.s	le
histoire	N.C.f.s	histoire
du	P+D.def.m.s	du
langage	N.C.m.s	langage
;	PONCT.W	;
Ses	D.poss.m.p	son
avantages	N.C.m.p	avantage
;	PONCT.W	;
Et	C.C	et
ses	D.poss.m.p	son
inconvénients	N.C.m.p	inconvénient
.	PONCT.S	.

20	D.card.f.p	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Vue	VK.f.s	voir
d'	P	de
ensemble	N.C.m.s	ensemble
du	P+D.def.m.s	du
PHP	N.C.m.s	php
A	P	à
server-side	N.C.m.s	server-side
,	PONCT.W	,
HTML-embedded	N.P.m.s	Html-embedded
scripting	ET	scripting
language	ET	language
Langage	N.C.m.s	langage
de	P	de
script	N.C.m.s	script
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
;	PONCT.W	;
Embarqué	VK.m.s	embarquer
dans	P	dans
les	D.def.f.p	le
pages	N.C.f.p	page
HTML	N.P.m.s	<unknown>
;	PONCT.W	;
Syntaxe	N.P.m.s	Syntaxe
héritée	VK.f.s	hériter
du	P+D.def.m.s	du
C	N.P.m.s	C
et	C.C	et
du	P+D.def.m.s	du
Perl	N.P.m.s	Perl
;	PONCT.W	;
Extensible	N.P.m.s	Extensible
(	PONCT.W	(
nombreuses	A.qual.f.p	nombreux
bibliothèques	N.C.f.p	bibliothèque
)	PONCT.W	)
;	PONCT.W	;
Supporte	V.P.3.s	supporter
pratiquement	ADV.-	pratiquement
tous	A.ind.m.p	tous
les	D.def.m.p	le
standards	N.C.m.p	standard
du	P+D.def.m.s	du
web	N.C.m.s	web
;	PONCT.W	;
Logiciel	N.P.m.s	Logiciel
Open	N.P.m.s	Open
Source	N.P.f.s	Source
(	PONCT.W	(
Licence	N.C.f.s	licence
PHP	N.C.m.s	php
de	P	de
type	N.C.m.s	type
BSD	N.P.m.s	Bsd
)	PONCT.W	)
.	PONCT.S	.

21	A.card.f.s	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
histoire	N.C.f.s	histoire
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Créé	VK.m.s	créer
par	P	par
Rasmus	N.P.m.s	Rasmus
Lerdorf	N.P.m.s	Lerdorf
en	P	en
1994	N.card.f.s	@card@
pour	P	pour
des	D.ind.m.p	du
besoins	N.C.m.p	besoin
personnels	A.qual.m.p	personnel
(	PONCT.W	(
P	N.P.m.s	P
ersonnal	A.qual.m.s	ersonnal
H	P	h
ome	ET	ome
P	PONCT.W	p
age	N.C.m.s	age
)	PONCT.W	)
;	PONCT.W	;
Première	A.ord.f.s	premier
version	N.C.f.s	version
publique	A.qual.f.s	publique
en	P	en
1995	N.card.f.s	@card@
sous	P	sous
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
Personnal	N.P.m.s	Personnal
Home	N.P.m.s	Home
Page	N.P.m.s	Page
Tools	N.P.m.s	Tools
capable	A.qual.m.s	capable
de	P	de
gérer	VW	gérer
un	D.ind.m.s	un
livre	N.C.m.s	livre
d'	P	de
or	N.C.m.s	or
,	PONCT.W	,
un	D.ind.m.s	un
compteur	N.C.m.s	compteur
d'	P	de
accès	N.C.m.s	accès
...	PONCT.W	<unknown>
;	PONCT.W	;
22	D.card.f.p	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Deuxième	A.ord.f.s	deuxième
version	N.C.f.s	version
plus	ADV.-	plus
complète	A.qual.f.s	complet
(	PONCT.W	(
PHP/FI	N.P.m.s	Phpfifi
)	PONCT.W	)
en	P	en
1995	N.card.f.s	@card@
avec	P	avec
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
formulaires	N.C.f.p	formulaire
HTML	N.P.m.s	<unknown>
et	C.C	et
des	P+D.def.f.p	du
bases	N.C.f.p	base
mSQL	N.P.m.s	<unknown>
ainsi	ADV.-	ainsi
qu'	C.S	que
un	D.ind.m.s	un
nouvel	A.qual.m.s	nouveau
interpréteur	N.C.m.s	interpréteur
;	PONCT.W	;
PHP/FI	N.P.m.s	Phpfifi
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
par	P	par
environ	ADV.-	environ
50000	D.card.m.p	@card@
sites	N.C.m.p	site
web	N.C.m.s	web
en	P	en
1997	N.card.f.s	@card@
;	PONCT.W	;
23	D.card.f.p	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
En	P	en
1997	N.card.f.s	@card@
,	PONCT.W	,
le	D.def.m.s	le
projet	N.C.m.s	projet
devient	V.P.3.s	devenir
un	D.ind.m.s	un
travail	N.C.m.s	travail
d'	P	de
équipe	N.C.f.s	équipe
et	C.C	et
l'	D.def.m.s	le
interpréteur	N.C.m.s	interpréteur
est	V.P.3.s	être
réécrit	VK.m.s	réécrire
par	P	par
Zeev	N.P.m.s	Zeev
Suraski	N.P.f.s	Suraski
et	C.C	et
Andi	N.P.m.s	Andi
Gutmans	N.P.m.s	Gutmans
pour	P	pour
donner	VW	donner
la	D.def.f.s	le
version	N.C.f.s	version
PHP3	N.P.m.s	<unknown>
;	PONCT.W	;
La	D.def.f.s	le
version	N.C.f.s	version
3	A.card.f.s	@card@
de	P	de
PHP	N.P.m.s	Php
s'	CL.refl.3.f.s	se
est	V.P.3.s	être
rapidement	ADV.-	rapidement
imposée	VK.f.s	imposer
pour	P	pour
atteindre	VW	atteindre
environ	ADV.-	environ
150000	D.card.m.p	@card@
sites	N.C.m.p	site
web	N.C.m.s	web
durant	P	durant
l'	D.def.m.s	le
été	N.C.m.s	été
1999	N.card.f.s	@card@
(	PONCT.W	(
source	N.C.f.s	source
:	PONCT.W	:
Netcraft	N.P.m.s	Netcraft
)	PONCT.W	)
et	C.C	et
devenir	VW	devenir
P	N.P.m.s	P
HP	N.P.m.s	Hp
:	PONCT.W	:
H	D.card.m.s	H
ypertext	N.C.m.s	ypertext
P	PONCT.W	p
reProcessor	N.C.m.s	reprocessor
;	PONCT.W	;
24	D.card.f.p	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Aujourd’hui	ADV.-	aujourdçhui
le	D.def.m.s	le
projet	N.C.m.s	projet
est	V.P.3.s	être
chapeauté	VK.m.s	chapeauter
par	P	par
Zend	N.P.m.s	Zend
,	PONCT.W	,
une	D.ind.f.s	un
société	N.C.f.s	société
privée	A.qual.f.s	privé
créée	VK.f.s	créer
par	P	par
Suraskyi	N.P.m.s	Suraskyi
et	C.C	et
Gutmans	N.P.m.s	Gutmans
,	PONCT.W	,
qui	PRO.rel.f.s	qui
commercialise	V.P.3.s	commercialiser
des	D.ind.m.p	du
logiciels	N.C.m.p	logiciel
complémentaires	A.qual.m.p	complémentaire
à	P	à
PHP	N.P.m.s	Php
;	PONCT.W	;
La	D.def.f.s	le
dernière	A.qual.f.s	dernier
version	N.C.f.s	version
en	P	en
date	N.C.f.s	date
est	V.P.3.s	être
la	D.def.f.s	le
PHP4	N.P.f.s	Php4
(	PONCT.W	(
2000	N.card.f.s	@card@
)	PONCT.W	)
.	PONCT.S	.

Elle	CL.suj.3.f.s	elle
possède	V.P.3.s	posséder
un	D.ind.m.s	un
interpréteur	N.C.m.s	interpréteur
optimisé	VK.m.s	optimiser
par	P	par
Zend	N.P.m.s	Zend
et	C.C	et
s'	CL.refl.3.m.s	se
ouvre	V.P.3.s	ouvrir
à	P	à
d'	D.ind.m.p	de
autres	A.ind.m.p	autre
serveurs	N.C.m.p	serveur
HTTP	N.P.m.s	Http
qu'	C.S	que
Apache	N.P.m.s	Apache
.	PONCT.S	.

25	D.card.f.p	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
26	D.card.f.p	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
avantages	N.C.m.p	avantage
de	P	de
PHP	N.P.m.s	Php
Le	D.def.m.s	le
client	N.C.m.s	client
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
accès	N.C.m.s	accès
au	P+D.def.m.s	au
code	N.C.m.s	code
source	N.C.f.s	source
puisque	C.S	puisque
celui	PRO.dem.m.s	celui
-ci	CL.suj.3.m.s	ci
est	V.P.3.s	être
interprété	VK.m.s	interpréter
avant	P	avant
envoi	N.C.m.s	envoi
(	PONCT.W	(
!	PONCT.S	!

=	PONCT.W	=
Javascript	N.P.m.s	Javascript
)	PONCT.W	)
;	PONCT.W	;
Le	D.def.m.s	le
client	N.C.m.s	client
ne	ADV.neg	ne
reçoit	V.P.3.s	recevoir
que	ADV.neg	que
le	D.def.m.s	le
résultat	N.C.m.s	résultat
de	P	de
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
du	P+D.def.m.s	du
script	N.C.m.s	script
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
configurer	VW	configurer
le	D.def.m.s	le
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
pour	P	pour
masquer	VW	masquer
complètement	ADV.-	complètement
la	D.def.f.s	le
qualité	N.C.f.s	qualité
dynamique	A.qual.f.s	dynamique
des	P+D.def.f.p	du
pages	N.C.f.p	page
;	PONCT.W	;
Le	D.def.m.s	le
code	N.C.m.s	code
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
alourdi	VK.m.s	alourdir
par	P	par
des	D.ind.f.p	du
commandes	N.C.f.p	commande
destinées	VK.f.p	destiner
à	P	à
générer	VW	générer
la	D.def.f.s	le
page	N.C.f.s	page
HTML	N.P.m.s	<unknown>
(	PONCT.W	(
!	PONCT.S	!

=	PONCT.W	=
CGI	N.P.f.s	Cgi
)	PONCT.W	)
;	PONCT.W	;
27	A.card.f.s	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Le	D.def.m.s	le
langage	N.C.m.s	langage
possède	V.P.3.s	posséder
de	D.ind.f.p	de
nombreuses	A.qual.f.p	nombreux
bibliothèques/modules	N.C.f.p	<unknown>
pour	P	pour
:	PONCT.W	:
–	P	à
le	D.def.m.s	le
calcul	N.C.m.s	calcul
mathématique	A.qual.m.s	mathématique
,	PONCT.W	,
–	P	à
la	D.def.f.s	le
création	N.C.f.s	création
dynamique	A.qual.f.s	dynamique
d'	P	de
images	N.C.f.p	image
,	PONCT.W	,
–	P	à
la	D.def.f.s	le
gestion	N.C.f.s	gestion
de	P	de
sessions	N.C.f.p	session
,	PONCT.W	,
–	P	à
les	D.def.f.p	le
connexions	N.C.f.p	connexion
sécurisées	VK.f.p	sécuriser
(	PONCT.W	(
SSL	N.P.m.s	Ssl
)	PONCT.W	)
,	PONCT.W	,
–	P	à
l'	D.def.m.s	le
accès	N.C.m.s	accès
à	P	à
la	D.def.f.s	le
plupart	N.C.f.s	plupart
des	P+D.def.m.p	du
SGBD	N.P.x.s	Sgbd
,	PONCT.W	,
–	P	à
l'	D.def.m.s	le
accès	N.C.m.s	accès
aux	P+D.def.f.p	au
bases	N.C.f.p	base
LDAP	N.P.m.s	Ldap
...	PONCT.W	<unknown>
28	A.card.m.s	@card@
Présentation	N.C.f.s	présentation
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
inconvénients	N.C.m.p	inconvénient
de	P	de
PHP	N.P.m.s	Php
Pas	ADV.neg	pas
aussi	ADV.-	aussi
rapide	A.qual.f.s	rapide
que	C.S	que
mod_perl	N.C.m.s	<unknown>
ou	C.C	ou
certains	D.ind.m.p	certain
CGI	N.P.f.s	Cgi
mais	C.C	mais
plus	ADV.-	plus
portable	A.qual.m.s	portable
;	PONCT.W	;
Pas	ADV.neg	pas
aussi	ADV.-	aussi
simple	A.qual.m.s	simple
que	C.S	que
ASP-VBScript	N.P.x.s	Asp-Vbscript
mais	C.C	mais
plus	ADV.-	plus
respectueux	A.qual.m.p	respectueux
des	P+D.def.m.p	du
standards	N.C.m.p	standard
web	N.C.m.s	web
et	C.C	et
sous	P	sous
licence	N.C.f.s	licence
Open	N.P.m.s	Open
Source	N.P.f.s	Source
(	PONCT.W	(
->	N.P.m.s	<unknown>
plus	ADV.-	plus
facilement	ADV.-	facilement
extensible	A.qual.m.s	extensible
)	PONCT.W	)
;	PONCT.W	;
Pas	ADV.neg	pas
d'	P	de
interactivité	N.C.f.s	interactivité
au	P+D.def.m.s	au
niveau	N.C.m.s	niveau
du	P+D.def.m.s	du
client	N.C.m.s	client
(	PONCT.W	(
->	A.ind.m.s	-
on	CL.suj.3.m.s	on
doit	V.P.3.s	devoir
quand	C.S	quand
même	ADV.-	même
utiliser	VW	utiliser
du	P+D.def.m.s	du
Javascript	N.P.m.s	Javascript
dans	P	dans
ces	D.dem.m.p	ce
cas	N.C.m.p	cas
là	ADV.-	là
)	PONCT.W	)
.	PONCT.S	.

29	D.card.f.p	@card@
Section	N.C.f.s	section
3	A.card.f.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
30	D.card.f.p	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Installation	N.C.f.s	installation
de	P	de
PHP	N.P.m.s	Php
;	PONCT.W	;
Configuration	N.C.f.s	configuration
via	P	via
php3.ini/php.ini	N.C.m.s	<unknown>
;	PONCT.W	;
Premier	A.ord.m.s	premier
test	N.C.m.s	test
;	PONCT.W	;
Ajout	N.P.m.s	Ajout
de	P	de
nouveaux	A.qual.m.p	nouveau
modules	N.C.m.p	module
.	PONCT.S	.

31	A.card.m.s	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Installation	N.C.f.s	installation
Trois	D.card.m.p	trois
types	N.C.m.p	type
d'	P	de
installation	N.C.f.s	installation
:	PONCT.W	:
–	D.card.m.s	–
module	N.C.m.s	module
dynamique	A.qual.m.s	dynamique
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
mod_php	N.C.m.s	modçphp
pour	P	pour
Apache	N.P.m.s	Apache
)	PONCT.W	)
,	PONCT.W	,
–	P	à
module	N.C.m.s	module
statique	A.qual.m.s	statique
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
(	PONCT.W	(
20	D.card.m.p	@card@
%	N.C.m.p	%
plus	ADV.-	plus
rapide	A.qual.m.s	rapide
que	C.S	que
mod_php	N.C.m.s	modçphp
)	PONCT.W	)
qui	PRO.rel.m.s	qui
nécessite	V.P.3.s	nécessiter
de	P	de
patcher	VW	patcher
le	D.def.m.s	le
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
et	C.C	et
de	P	de
tout	PRO.ind.m.s	tout
recompiler	VW	recompiler
,	PONCT.W	,
–	N.C.m.s	–
sous	P	sous
forme	N.C.f.s	forme
de	P	de
CGI	N.P.f.s	Cgi
(	PONCT.W	(
pour	P	pour
les	D.def.m.p	le
serveurs	N.C.m.p	serveur
HTTP	N.P.m.s	Http
non	ADV.neg	non
supportés	VK.m.p	supporter
)	PONCT.W	)
.	PONCT.S	.

32	A.card.m.s	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Télécharger	VW	télécharger
des	D.ind.f.p	du
sources	N.C.f.p	source
sur	P	sur
http	N.C.m.s	<unknown>
://fr.php.net	N.P.x.s	<unknown>
(	PONCT.W	(
mirroir	N.C.m.s	mirroir
français	A.qual.m.s	français
du	P+D.def.m.s	du
site	N.C.m.s	site
officiel	A.qual.m.s	officiel
de	P	de
PHP	N.P.m.s	Php
)	PONCT.W	)
;	PONCT.W	;
Installer	VW	installer
les	D.def.f.p	le
sources	N.C.f.p	source
dans	P	dans
un	D.ind.m.s	un
répertoire	N.C.m.s	répertoire
différent	A.qual.m.s	différent
de	P	de
celui	PRO.dem.m.s	celui
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
/usr/local/src/php/	N.C.m.s	<unknown>
)	PONCT.W	)
avec	P	avec
la	D.def.f.s	le
commande	N.C.f.s	commande
tar	P	tar
-zxvf	ET	<unknown>
php-<version>.tar.gz	N.P.x.s	<unknown>
-C	PONCT.W	c
/usr/local/src/php/	N.C.m.s	<unknown>
;	PONCT.W	;
Configuration	N.C.f.s	configuration
de	P	de
l'	D.def.f.s	le
installation	N.C.f.s	installation
:	PONCT.W	:
–	D.card.m.s	–
./setup	N.C.m.s	<unknown>
(	PONCT.W	(
configuration	N.C.f.s	configuration
interactive	A.qual.f.s	interactif
)	PONCT.W	)
,	PONCT.W	,
ou	C.C	ou
–	P+D.def.m.s	c
./configure	N.P.x.s	<unknown>
<options>	N.P.x.s	<unknown>
(	PONCT.W	(
./configure	N.C.m.s	<unknown>
--	PONCT.W	--
help	ADV.-	help
pour	P	pour
connaître	VW	connaître
toutes	A.ind.f.p	tout
les	D.def.f.p	le
options	N.C.f.p	option
)	PONCT.W	)
.	PONCT.S	.

33	D.card.f.p	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Compilation	N.C.f.s	compilation
et	C.C	et
installation	N.C.f.s	installation
:	PONCT.W	:
make	N.C.f.s	make
;	PONCT.W	;
su	VK.m.s	savoir
;	PONCT.W	;
make	ET	make
install	ET	install
Association	N.C.f.s	association
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
contenant	VG	contenir
du	P+D.def.m.s	du
code	N.C.m.s	code
PHP	N.P.m.s	Php
avec	P	avec
l'	D.def.m.s	le
interpréteur	N.C.m.s	interpréteur
PHP	N.P.m.s	Php
dans	P	dans
la	D.def.f.s	le
configuration	N.C.f.s	configuration
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
Ex	N.P.m.s	Ex
:	PONCT.W	:
serveur	N.C.m.s	serveur
Apache	N.P.m.s	Apache
(	PONCT.W	(
srm.conf	ET	<unknown>
ou	C.C	ou
httpd.conf	N.C.m.s	<unknown>
)	PONCT.W	)
PHP3	N.P.m.s	<unknown>
->	ET	-
AddType	N.P.m.s	Addtype
application/x-httpd-php3	ET	<unknown>
.php	ET	<unknown>
PHP4	N.P.m.s	Php4
->	ET	-
AddType	N.P.m.s	Addtype
application/x-httpd-php	ET	<unknown>
.php	ET	<unknown>
Sous	P	sous
Debian	N.P.m.s	Debian
,	PONCT.W	,
tout	ADV.-	tout
ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
simplifié	VK.m.s	simplifier
grâce	N.C.f.s	grâce
à	P	à
l'	D.def.m.s	le
utilitaire	A.qual.m.s	utilitaire
apt-get	N.C.m.s	apt-get
(	PONCT.W	(
remplacer	VW	remplacer
php3	N.C.f.p	<unknown>
par	P	par
php4	N.C.m.p	<unknown>
pour	P	pour
PHP4	N.P.m.s	Php4
)	PONCT.W	)
:	PONCT.W	:
–	D.card.m.s	–
apt-get	N.C.m.s	apt-get
install	ET	install
php3	N.C.f.p	<unknown>
pour	P	pour
le	D.def.m.s	le
module	N.C.m.s	module
dynamique	A.qual.m.s	dynamique
Apache	N.P.m.s	Apache
,	PONCT.W	,
ou	C.C	ou
–	D.card.m.s	–
apt-get	N.C.m.s	apt-get
install	A.qual.m.s	install
php3-cgi	N.C.m.s	<unknown>
pour	P	pour
le	D.def.m.s	le
CGI	N.P.m.s	Cgi
.	PONCT.S	.

34	D.card.f.p	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
(	PONCT.W	(
php3.ini/php.ini	N.C.m.s	<unknown>
)	PONCT.W	)
Généralement	ADV.-	généralement
dans	P	dans
/etc/php<version>/apache/	N.P.x.s	<unknown>
ou	C.C	ou
/usr/lib/php<version>/	N.P.x.s	<unknown>
;	PONCT.W	;
Ce	D.dem.m.s	ce
fichier	N.C.m.s	fichier
(	PONCT.W	(
php3.ini	VK.m.s	<unknown>
pour	P	pour
PHP3	N.P.m.s	<unknown>
et	C.C	et
php.ini	VK.m.s	<unknown>
pour	P	pour
PHP4	N.P.m.s	Php4
)	PONCT.W	)
contrôle	V.P.3.s	contrôler
les	D.def.m.p	le
principaux	A.qual.m.p	principal
comportements	N.C.m.p	comportement
de	P	de
PHP	N.P.m.s	Php
;	PONCT.W	;
Très	ADV.-	très
clair	A.qual.m.s	clair
et	C.C	et
facilement	ADV.-	facilement
configurable	A.qual.m.s	configurable
;	PONCT.W	;
Syntaxe	N.P.m.s	Syntaxe
:	PONCT.W	:
–	P	à
clef	N.C.m.s	clef
=	P	à
valeur	N.C.f.s	valeur
,	PONCT.W	,
–	P	à
clef	N.C.m.s	clef
=	PONCT.W	=
"	PONCT.W	"
valeur	N.C.f.s	valeur
complexe	A.qual.m.s	complexe
"	PONCT.W	"
,	PONCT.W	,
–	N.C.m.s	–
;	PONCT.W	;
commentaire	A.qual.m.s	commentaire
,	PONCT.W	,
–	N.C.m.s	–
booléen	A.qual.m.s	booléen
->	A.ind.m.s	-
1	N.card.m.s	@card@
,	PONCT.W	,
On	CL.suj.3.m.s	on
,	PONCT.W	,
True	N.C.f.s	true
,	PONCT.W	,
Yes	N.P.m.s	Yes
/	PONCT.W	@card@
0	PRO.card.m.s	@card@
,	PONCT.W	,
Off	N.P.x.s	Off
,	PONCT.W	,
False	N.P.f.s	False
,	PONCT.W	,
No	N.P.m.s	No
.	PONCT.S	.

35	D.card.m.p	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Segmenté	VK.m.s	segmenter
en	P	en
parties	N.C.f.p	partie
:	PONCT.W	:
–	D.card.f.p	–
options	N.C.f.p	option
du	P+D.def.m.s	du
langage	N.C.m.s	langage
,	PONCT.W	,
–	D.card.f.p	–
ressources	N.C.f.p	ressource
maximales	A.qual.f.p	maximal
allouées	VK.f.p	allouer
à	P	à
PHP	N.P.m.s	Php
,	PONCT.W	,
–	P	à
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
erreurs	N.C.f.p	erreur
,	PONCT.W	,
–	P	à
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
données	N.C.f.p	donnée
HTTP	N.P.m.s	Http
,	PONCT.W	,
–	D.card.m.p	–
fichiers	N.C.m.p	fichier
et	C.C	et
répertoires	N.C.m.p	répertoire
,	PONCT.W	,
–	D.card.f.p	–
extensions	N.C.f.p	extension
dynamiques	A.qual.f.p	dynamique
(	PONCT.W	(
modules	N.C.m.p	module
)	PONCT.W	)
,	PONCT.W	,
–	P	à
configuration	N.C.f.s	configuration
des	P+D.def.m.p	du
modules	N.C.m.p	module
.	PONCT.S	.

Pour	P	pour
que	C.S	que
PHP	N.P.m.s	Php
prenne	V.S.3.s	prendre
les	D.def.f.p	le
modifications	N.C.f.p	modification
en	P	en
compte	N.C.m.s	compte
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
relancer	VW	relancer
le	D.def.m.s	le
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
serveur	N.C.m.s	serveur
Apache	N.P.m.s	Apache
->	A.ind.m.s	-
apachectl	N.C.m.s	<unknown>
restart	A.qual.m.s	restart
)	PONCT.W	)
.	PONCT.S	.

36	A.card.m.s	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Premier	A.ord.m.s	premier
test	V.P.3.s	tenir
Créer	VW	créer
le	D.def.m.s	le
fichier	N.C.m.s	fichier
test.php	N.C.m.s	<unknown>
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
phpinfo()	N.C.m.s	phpinfoëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Placer	VW	placer
ce	D.dem.m.s	ce
fichier	N.C.m.s	fichier
à	P	à
la	D.def.f.s	le
racine	N.C.f.s	racine
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
(	PONCT.W	(
ou	C.C	ou
dans	P	dans
le	D.def.m.s	le
répertoire	N.C.m.s	répertoire
doc_root	A.qual.m.s	doc-root
si	C.S	si
vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
activé	VK.m.s	activer
l'	D.def.f.s	le
option	N.C.f.s	option
safe_mode	A.qual.f.s	safeëmode
)	PONCT.W	)
;	PONCT.W	;
Charger	VW	charger
l'	D.def.m.s	le
URL	N.P.m.s	Url
http	ET	<unknown>
://localhost/test.php	N.P.x.s	<unknown>
sur	P	sur
votre	D.poss.m.s	votre
navigateur	N.C.m.s	navigateur
web	N.C.m.s	web
;	PONCT.W	;
Bravo	N.P.m.s	Bravo
!	PONCT.S	!

Vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
créé	VK.m.s	créer
votre	D.poss.f.s	votre
première	A.ord.f.s	premier
page	N.C.f.s	page
dynamique	A.qual.f.s	dynamique
avec	P	avec
PHP	N.P.m.s	Php
et	C.C	et
en	P	en
plus	ADV.-	plus
elle	CL.suj.3.f.s	elle
vous	CL.obj.2.m.p	vous
résume	V.P.3.s	résumer
toutes	A.ind.f.p	tout
les	D.def.f.p	le
fonctionnalités	N.C.f.p	fonctionnalité
PHP	N.P.m.s	Php
qui	PRO.rel.f.p	qui
sont	V.P.3.p	être
configurées	VK.f.p	configurer
sur	P	sur
votre	D.poss.f.s	votre
machine	N.C.f.s	machine
.	PONCT.S	.

37	A.card.f.s	@card@
Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Installer	VW	installer
un	D.ind.m.s	un
nouveau	A.qual.m.s	nouveau
module	N.C.m.s	module
PHP	N.P.m.s	Php
Placer	VW	placer
le	D.def.m.s	le
nouveau	A.qual.m.s	nouveau
fichier	N.C.m.s	fichier
<nom>.so	N.P.m.s	<unknown>
dans	P	dans
extension_dir	VW	extensionädir
(	PONCT.W	(
par	P	par
défaut	N.C.m.s	défaut
/usr/lib/php<version>/apache	N.C.m.s	<unknown>
mais	C.C	mais
configurable	A.qual.m.s	configurable
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
)	PONCT.W	)
ou	C.C	ou
utiliser	VW	utiliser
apt-get	ET	apt-get
install	ET	install
php<version>_<nom>	ET	php-versionççnç
sous	P	sous
Debian	N.P.m.s	Debian
;	PONCT.W	;
Ajouter	VW	ajouter
la	D.def.f.s	le
ligne	N.C.f.s	ligne
extension=<nom>.so	ET	extensionçnomo
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
;	PONCT.W	;
Configurer	VW	configurer
les	D.def.m.p	le
aspects	N.C.m.p	aspect
relatifs	A.qual.m.p	relatif
au	P+D.def.m.s	au
module	N.C.m.s	module
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
;	PONCT.W	;
Redémarrer	VW	redémarrer
le	D.def.m.s	le
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
.	PONCT.S	.

38	D.card.m.p	@card@
Chapitre	N.C.m.s	chapitre
2	A.card.m.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	VW	programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
bases	N.C.f.p	base
du	P+D.def.m.s	du
langage	N.C.m.s	langage
39	A.card.f.p	@card@
Les	D.def.f.p	le
bases	N.C.f.p	base
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
du	P+D.def.m.s	du
chapitre	N.C.m.s	chapitre
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
;	PONCT.W	;
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
;	PONCT.W	;
Fonctions	N.C.f.p	fonction
;	PONCT.W	;
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
.	PONCT.S	.

40	D.card.f.p	@card@
Section	N.C.f.s	section
1	D.card.m.s	@card@
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
41	A.card.m.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Syntaxe	A.qual.f.s	syntaxe
de	P	de
base	N.C.f.s	base
;	PONCT.W	;
Les	D.def.m.p	le
types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
;	PONCT.W	;
Les	D.def.f.p	le
variables	N.C.f.p	variable
;	PONCT.W	;
Les	D.def.f.p	le
constantes	N.C.f.p	constante
;	PONCT.W	;
Les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
.	PONCT.S	.

42	D.card.m.p	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Syntaxe	N.P.m.s	Syntaxe
de	P	de
base	N.C.f.s	base
Quatre	D.card.m.p	quatre
moyens	N.C.m.p	moyen
équivalents	A.qual.m.p	équivalent
pour	P	pour
passer	VW	passer
du	P+D.def.m.s	du
mode	N.C.m.s	mode
HTML	N.P.m.s	<unknown>
au	P+D.def.m.s	au
PHP	N.P.m.s	Php
:	PONCT.W	:
–	D.card.m.s	–
standard	N.C.m.s	standard
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
...	PONCT.S	<unknown>
mon	D.poss.m.s	mon
code	N.C.m.s	code
PHP	N.P.m.s	Php
...	PONCT.W	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
,	PONCT.W	,
–	P	à
option	N.C.f.s	option
short_open_tag	N.C.m.s	shortçopençtag
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

...	PONCT.S	<unknown>
mon	D.poss.m.s	mon
code	N.C.m.s	code
PHP	N.P.m.s	Php
...	PONCT.W	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
,	PONCT.W	,
–	P	à
option	N.C.f.s	option
asp_tags	N.C.m.p	aspçtag
:	PONCT.W	:
<	D.card.m.p	<
%	N.C.m.p	%
...	PONCT.S	<unknown>
mon	D.poss.m.s	mon
code	N.C.m.s	code
PHP	N.P.m.s	Php
...	PONCT.W	<unknown>
%>	N.C.m.s	<unknown>
,	PONCT.W	,
–	P+D.def.m.s	c
marqueur	N.C.m.s	marqueur
script	A.qual.m.s	script
du	P+D.def.m.s	du
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
<script	ET	<unknown>
language="php">	ET	languageçphpçë
...	PONCT.S	<unknown>
mon	D.poss.m.s	mon
code	N.C.m.s	code
PHP	N.P.m.s	Php
...	PONCT.W	<unknown>
</script>	N.P.x.s	<unknown>
.	PONCT.S	.

43	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Bases	N.P.m.s	Bases
de	P	de
la	D.def.f.s	le
syntaxe	N.C.f.s	syntaxe
héritées	VK.f.p	hériter
du	P+D.def.m.s	du
C	N.P.m.s	C
et	C.C	et
du	P+D.def.m.s	du
Perl	N.P.m.s	Perl
:	PONCT.W	:
–	P+D.def.m.s	c
séparateur	N.C.m.s	séparateur
d'	P	de
instructions	N.C.f.p	instruction
->	PONCT.W	<unknown>
;	PONCT.W	;
–	D.card.m.p	–
commentaires	N.C.m.p	commentaire
:	PONCT.W	:
...	PONCT.W	<unknown>
code	P	code
/*	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
mes	D.poss.m.p	mon
commentaires	N.C.m.p	commentaire
...	PONCT.W	<unknown>
*/	PONCT.W	<unknown>
code	N.C.f.s	code
...	PONCT.W	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
code	N.C.m.s	code
...	PONCT.W	<unknown>
//	PONCT.W	@card@
...	PONCT.W	<unknown>
mes	D.poss.m.p	mon
commentaires	N.C.m.p	commentaire
...	PONCT.W	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
code	N.C.m.s	code
...	PONCT.W	<unknown>
#	N.C.m.s	#
...	PONCT.W	<unknown>
mes	D.poss.m.p	mon
commentaires	N.C.m.p	commentaire
...	PONCT.S	<unknown>
.	PONCT.S	.

44	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
PHP	N.P.m.s	Php
supporte	V.P.3.s	supporter
les	D.def.m.p	le
types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
suivants	A.qual.m.p	suivant
:	PONCT.W	:
–	D.card.m.p	–
nombres	N.C.m.p	nombre
entiers	A.qual.m.p	entier
,	PONCT.W	,
–	D.card.m.p	–
nombres	N.C.m.p	nombre
à	P	à
virgule	N.C.f.s	virgule
flottante	A.qual.f.s	flottant
,	PONCT.W	,
–	D.card.f.p	–
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
,	PONCT.W	,
–	D.card.m.p	–
tableaux	N.C.m.p	tableau
,	PONCT.W	,
–	D.card.m.p	–
objets	N.C.m.p	objet
(	PONCT.W	(
développés	VK.m.p	développer
dans	P	dans
la	D.def.f.s	le
section	N.C.f.s	section
’	P	à
programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
’	N.C.m.s	’
)	PONCT.W	)
.	PONCT.S	.

Tous	A.ind.m.p	tous
les	D.def.m.p	le
noms	N.C.m.p	nom
de	P	de
variables	N.C.f.p	variable
sont	V.P.3.p	être
précédés	VK.m.p	précéder
d'	P	de
un	D.ind.m.s	un
$	N.C.m.s	$
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
5	N.card.m.s	@card@
;	PONCT.W	;
)	PONCT.W	)
;	PONCT.W	;
45	D.card.m.p	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
de	P	de
spécifier	VW	spécifier
une	D.ind.f.s	un
variable	N.C.f.s	variable
de	P	de
type	N.C.m.s	type
entier	A.qual.m.s	entier
de	P	de
la	D.def.f.s	le
façon	N.C.f.s	façon
suivante	A.qual.f.s	suivant
:	PONCT.W	:
–	P	à
$toto	N.P.x.s	<unknown>
=	PONCT.W	=
123	PRO.card.m.p	@card@
;	PONCT.W	;
#	N.card.m.p	#
est	V.P.3.s	être
un	D.ind.m.s	un
entier	N.C.m.s	entier
en	P	en
base	N.C.f.s	base
10	N.card.f.s	@card@
,	PONCT.W	,
–	P	à
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
-123	PRO.card.m.p	@card@
;	PONCT.W	;
#	N.P.x.s	#
est	V.P.3.s	être
un	D.ind.m.s	un
entier	N.C.m.s	entier
négatif	A.qual.m.s	négatif
,	PONCT.W	,
–	P	à
$toto	N.C.m.s	<unknown>
=	V.P.3.s	être
0123	PRO.card.m.p	@card@
;	PONCT.W	;
#	N.card.m.p	#
est	V.P.3.s	être
un	D.ind.m.s	un
entier	N.C.m.s	entier
en	P	en
base	N.C.f.s	base
8	N.card.m.s	@card@
,	PONCT.W	,
–	P	à
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
0x123	PRO.card.m.p	@card@
;	PONCT.W	;
#	N.card.m.p	#
est	V.P.3.s	être
un	D.ind.m.s	un
entier	N.C.m.s	entier
en	P	en
base	N.C.f.s	base
16	A.card.f.s	@card@
.	PONCT.S	.

Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
de	P	de
spécifier	VW	spécifier
une	D.ind.f.s	un
variable	N.C.f.s	variable
de	P	de
type	N.C.m.s	type
flottant	A.qual.m.s	flottant
ou	C.C	ou
double	A.qual.f.s	double
de	P	de
la	D.def.f.s	le
façon	N.C.f.s	façon
suivante	A.qual.f.s	suivant
:	PONCT.W	:
–	P	à
$titi	N.P.x.s	<unknown>
=	V.P.3.s	être
1.234	PRO.card.m.p	@card@
;	PONCT.W	;
#	N.card.m.p	#
est	V.P.3.s	être
un	D.ind.m.s	un
nombre	N.C.m.s	nombre
à	P	à
virgule	N.C.f.s	virgule
flottante	A.qual.f.s	flottant
,	PONCT.W	,
–	P	à
$titi	N.P.x.s	<unknown>
=	V.P.3.s	être
1.2e3	N.card.f.s	<unknown>
;	PONCT.W	;
#	N.P.x.s	#
est	V.P.3.s	être
aussi	ADV.-	aussi
un	D.ind.m.s	un
nombre	N.C.m.s	nombre
à	P	à
virgule	N.C.f.s	virgule
flottante	A.qual.f.s	flottant
.	PONCT.S	.

46	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
de	P	de
spécifier	VW	spécifier
une	D.ind.f.s	un
variable	N.C.f.s	variable
de	P	de
type	N.C.m.s	type
chaîne	A.qual.f.s	chaîn
de	P	de
caratères	N.C.m.p	caratère
de	P	de
la	D.def.f.s	le
façon	N.C.f.s	façon
suivante	A.qual.f.s	suivant
:	PONCT.W	:
–	P	à
$personne	N.P.x.s	<unknown>
=	V.P.3.s	être
’	P+D.def.m.s	c
M.	N.C.m.s	monsieur
Smith	N.P.m.s	Smith
’	N.C.m.s	’
;	PONCT.W	;
#	N.P.m.s	#
est	V.P.3.s	être
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
caractères	N.C.m.p	caractère
,	PONCT.W	,
–	P	à
$personne	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
M.	N.C.m.s	monsieur
Smith	N.P.m.s	Smith
"	PONCT.W	"
;	PONCT.W	;
#	N.P.x.s	#
est	V.P.3.s	être
aussi	ADV.-	aussi
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
caractères	N.C.m.p	caractère
.	PONCT.S	.

Dans	P	dans
le	D.def.m.s	le
deuxième	A.ord.m.s	deuxième
cas	N.C.m.s	cas
,	PONCT.W	,
si	C.S	si
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
contient	V.P.3.s	contenir
des	D.ind.m.p	du
noms	N.C.m.p	nom
de	P	de
variables	N.C.f.p	variable
,	PONCT.W	,
celles	PRO.dem.f.p	celui
-ci	CL.suj.3.m.s	ci
seront	V.F.3.p	être
remplacées	VK.f.p	remplacer
par	P	par
leur	D.poss.f.s	leur
valeur	N.C.f.s	valeur
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
$type	N.C.m.s	<unknown>
=	PONCT.W	=
’	P+D.def.m.s	c
M.	N.C.m.s	monsieur
’	N.P.m.s	’
;	PONCT.W	;
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
Smith	N.P.m.s	Smith
"	PONCT.W	"
;	PONCT.W	;
$personne	ET	<unknown>
=	PONCT.W	=
"	PONCT.W	"
$type	N.C.m.s	<unknown>
$nom	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
Equivalent	N.P.m.s	Equivalent
à	P	à
$personne	N.P.x.s	<unknown>
=	PONCT.W	=
’	P+D.def.m.s	c
M.	N.C.m.s	monsieur
Smith	N.P.m.s	Smith
’	N.C.m.s	’
;	PONCT.W	;
.	PONCT.S	.

47	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Quand	C.S	quand
on	CL.suj.3.m.s	on
utilise	V.P.3.s	utiliser
les	D.def.m.p	le
"	PONCT.W	"
...	PONCT.W	<unknown>
"	PONCT.W	"
on	CL.suj.3.m.s	on
doit	V.P.3.s	devoir
donc	ADV.-	donc
échapper	VW	échapper
certains	D.ind.m.p	certain
caractères	N.C.m.p	caractère
avec	P	avec
un	D.ind.m.s	un
backslash	N.C.m.s	backslash
(	PONCT.W	(
\	N.C.m.s	\
)	PONCT.W	)
pour	P	pour
pouvoir	VW	pouvoir
les	CL.obj.3.m.p	le
afficher	VW	afficher
comme	P	comme
tels	A.qual.m.p	tel
:	PONCT.W	:
–	D.card.m.s	–
dollar	N.C.m.s	dollar
(	PONCT.W	(
$	N.C.m.s	$
)	PONCT.W	)
:	PONCT.W	:
\$	N.C.m.s	<unknown>
,	PONCT.W	,
–	D.card.m.s	–
double	A.qual.m.s	double
quotes	N.C.f.p	quote
(	PONCT.W	(
"	PONCT.W	"
)	PONCT.W	)
:	PONCT.W	:
\	N.C.m.s	\
"	PONCT.W	"
,	PONCT.W	,
–	D.card.m.s	–
backslash	ET	backslash
(	PONCT.W	(
\	N.C.m.s	\
)	PONCT.W	)
:	PONCT.W	:
\\	N.P.x.s	<unknown>
.	PONCT.S	.

De	P	de
même	ADV.-	même
,	PONCT.W	,
il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
des	D.ind.m.p	du
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
qui	PRO.rel.m.p	qui
nécessitent	V.P.3.p	nécessiter
d'	P	de
être	VW	être
échappés	VK.m.p	échapper
:	PONCT.W	:
–	D.card.f.p	–
nouvelle	A.qual.f.s	nouveau
ligne	N.C.f.s	ligne
:	PONCT.W	:
\n	N.C.m.s	<unknown>
,	PONCT.W	,
–	D.card.m.s	–
retour	N.C.m.s	retour
à	P	à
la	D.def.f.s	le
ligne	N.C.f.s	ligne
:	PONCT.W	:
\r	N.C.m.s	cr
,	PONCT.W	,
–	P	à
tabulation	N.C.f.s	tabulation
:	PONCT.W	:
\t	N.C.m.s	<unknown>
.	PONCT.S	.

Tout	A.ind.m.s	tout
autre	A.ind.m.s	autre
caractère	N.C.m.s	caractère
échappé	VK.m.s	échapper
génèrera	V.F.3.s	générer
un	D.ind.m.s	un
avertissement	N.C.m.s	avertissement
(	PONCT.W	(
warning	N.C.m.s	warning
)	PONCT.W	)
;	PONCT.W	;
48	D.card.m.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Lorsqu'	C.S	lorsque
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
caractères	N.C.m.p	caractère
est	V.P.3.s	être
évaluée	VK.f.s	évaluer
comme	P	comme
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
numérique	A.qual.f.s	numérique
,	PONCT.W	,
les	D.def.f.p	le
règles	N.C.f.p	règle
suivantes	A.qual.f.p	suivant
s'	CL.refl.3.f.p	se
appliquent	V.P.3.p	appliquer
:	PONCT.W	:
–	P	à
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
est	V.P.3.s	être
de	P	de
type	N.C.m.s	type
flottant/double	V.I.3.s	<unknown>
si	C.S	si
elle	CL.suj.3.f.s	elle
contient	V.P.3.s	contenir
’	N.C.m.s	’
.	PONCT.S	.
’	N.C.m.s	’
,	PONCT.W	,
e	PONCT.W	e
ou	C.C	ou
E	P	e
sinon	C.C	sinon
elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
de	P	de
type	N.C.m.s	type
entier	A.qual.m.s	entier
,	PONCT.W	,
–	P	à
la	D.def.f.s	le
valeur	N.C.f.s	valeur
est	V.P.3.s	être
définie	VK.f.s	définir
par	P	par
la	D.def.f.s	le
première	A.ord.f.s	premier
partie	N.C.f.s	partie
de	P	de
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
(	PONCT.W	(
0	PRO.card.m.s	@card@
si	C.S	si
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
du	P+D.def.m.s	du
texte	N.C.m.s	texte
)	PONCT.W	)
,	PONCT.W	,
–	C.S	–
lorsque	C.S	lorsque
la	D.def.f.s	le
première	A.ord.f.s	premier
expression	N.C.f.s	expression
est	V.P.3.s	être
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
,	PONCT.W	,
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
la	D.def.f.s	le
variable	A.qual.f.s	variable
dépend	V.P.3.s	dépendre
de	P	de
la	D.def.f.s	le
seconde	A.ord.f.s	second
expression	N.C.f.s	expression
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
1	D.card.m.s	@card@
+	P	p
"	PONCT.W	"
4.5	N.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	ET	<unknown>
vaut	V.P.3.s	valoir
5.5	D.card.m.p	@card@
$toto	N.C.m.p	<unknown>
=	PONCT.W	=
1	D.card.m.s	@card@
+	P	p
"	PONCT.W	"
-1e3	N.C.f.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
-999	N.card.f.s	@card@
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
1	D.card.m.s	@card@
+	P	p
"	PONCT.W	"
titi	N.C.m.s	titi
+	P	p
149	N.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
#	D.card.m.s	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
1	D.card.m.s	@card@
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
1	D.card.m.s	@card@
+	P	p
"	PONCT.W	"
149	PRO.card.m.p	@card@
+	P	p
titi	N.C.m.s	titi
"	PONCT.W	"
;	PONCT.W	;
#	D.card.m.s	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
150	PRO.card.f.p	@card@
49	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
tableaux	N.C.m.p	tableau
de	P	de
PHP	N.P.m.s	Php
ressemblent	V.P.3.p	ressembler
aux	P+D.def.m.p	au
tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
(	PONCT.W	(
hash-tables	A.qual.m.p	hash-table
)	PONCT.W	)
du	P+D.def.m.s	du
Perl	N.P.m.s	Perl
;	PONCT.W	;
L'	D.def.m.s	le
index	N.C.m.s	index
dans	P	dans
le	D.def.m.s	le
tableau	N.C.m.s	tableau
est	V.P.3.s	être
appellé	VK.m.s	appeller
clé	A.qual.m.s	clé
et	C.C	et
peut	V.P.3.s	pouvoir
être	VW	être
indifféremment	ADV.-	indifféremment
un	D.ind.m.s	un
entier	N.C.m.s	entier
ou	C.C	ou
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
caractères	N.C.m.p	caractère
;	PONCT.W	;
La	D.def.f.s	le
valeur	N.C.f.s	valeur
associée	VK.f.s	associer
à	P	à
une	D.ind.f.s	un
clé	N.C.f.s	clé
est	V.P.3.s	être
appelée	VK.f.s	appeler
valeur	N.C.f.s	valeur
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
utiliser	VW	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
array()	N.C.m.s	arrayçë
pour	P	pour
créer	VW	créer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
affecter	VW	affecter
directement	ADV.-	directement
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
au	P+D.def.m.s	au
tableau	N.C.m.s	tableau
;	PONCT.W	;
La	D.def.f.s	le
fonction	N.C.f.s	fonction
list()	V.P.3.s	listcer
permet	V.P.3.s	permettre
d'	P	de
affecter	VW	affecter
des	D.ind.f.p	du
variables	N.C.f.p	variable
comme	C.S	comme
si	C.S	si
elles	CL.suj.3.f.p	elle
constituaient	V.I.3.p	constituer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
;	PONCT.W	;
50	D.card.f.p	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
$tab[0	N.P.m.s	<unknown>
]	PONCT.W	]
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
$tab[1	N.C.m.s	<unknown>
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
;	PONCT.W	;
#	C.S	#
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
mélanger	VW	mélanger
les	D.def.m.p	le
contenus	N.C.m.p	contenu
$tab["toto	N.P.m.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
titi	VK.m.s	titir
"	PONCT.W	"
;	PONCT.W	;
#	C.S	#
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
mélanger	VW	mélanger
les	D.def.f.p	le
clés	N.C.f.p	clé
$tab["toto"][8	N.P.m.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
#	D.card.m.s	#
tableau	N.C.m.s	tableau
à	P	à
deux	D.card.f.p	deux
dimensions	N.C.f.p	dimension
$tab["toto"][8]["encore"][2	N.C.m.s	<unknown>
]	PONCT.W	]
;	PONCT.W	;
#	D.card.f.p	#
quatre	D.card.f.p	quatre
dimensions	N.C.f.p	dimension
$suite	N.C.f.s	-suite
=	PONCT.W	=
array(1	N.C.m.s	<unknown>
,	PONCT.W	,
2	N.card.m.s	@card@
,	PONCT.W	,
3	N.card.m.s	@card@
,	PONCT.W	,
4	N.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
$personne	N.P.x.s	<unknown>
=	PONCT.W	=
array("type	N.C.m.s	arrayççtype
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
M.	N.C.m.s	monsieur
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	ET	çù
"	PONCT.W	"
Smith	N.P.m.s	Smith
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
list($num1	N.C.m.s	<unknown>
,	PONCT.W	,
$num2	N.C.m.s	<unknown>
)	PONCT.W	)
=	V.P.3.s	être
$suite	N.C.f.s	-suite
;	PONCT.W	;
#	P+D.def.m.s	c
$num1	N.C.m.s	<unknown>
vaut	V.P.3.s	valoir
1	A.card.m.s	@card@
et	C.C	et
$num2	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
2	A.card.m.s	@card@
51	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.x.s	Programmer
en	P	en
PHP	N.P.m.s	Php
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
connaître	VW	connaître
le	D.def.m.s	le
nombre	N.C.m.s	nombre
d'	P	de
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
grâce	N.C.f.s	grâce
aux	P+D.def.f.p	au
fonctions	N.C.f.p	fonction
:	PONCT.W	:
–	D.card.m.s	–
sizeof()	N.C.m.s	sizeofçë
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
nombre	N.C.m.s	nombre
d'	P	de
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
,	PONCT.W	,
ou	C.C	ou
–	P	à
count()	N.C.m.s	countçë
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
nombre	N.C.m.s	nombre
d'	P	de
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
s'	PRO.rel.m.s	se
il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
,	PONCT.W	,
1	N.card.m.s	@card@
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
et	C.C	et
0	PRO.card.m.s	@card@
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
.	PONCT.S	.

52	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Chaque	D.ind.m.s	chaque
tableau	N.C.m.s	tableau
entretient	V.P.3.s	entretenir
un	D.ind.m.s	un
pointeur	N.C.m.s	pointeur
courant	A.qual.m.s	courant
qui	PRO.rel.m.s	qui
sert	V.P.3.s	servir
à	P	à
naviguer	VW	naviguer
en	P	en
son	D.poss.m.s	son
sein	N.C.m.s	sein
grâce	N.C.f.s	grâce
aux	P+D.def.f.p	au
fonctions	N.C.f.p	fonction
:	PONCT.W	:
–	D.card.m.s	–
reset()	N.C.m.s	resetçë
:	PONCT.W	:
place	N.C.f.s	place
le	D.def.m.s	le
pointeur	N.C.m.s	pointeur
interne	A.qual.m.s	interne
sur	P	sur
le	D.def.m.s	le
premier	A.ord.m.s	premier
élément	N.C.m.s	élément
et	C.C	et
retourne	V.P.3.s	retourner
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
,	PONCT.W	,
–	N.C.m.s	–
current()	N.C.m.s	currentçë
:	PONCT.W	:
retourne	V.P.3.s	retourner
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
l	D.def.m.s	l
’	N.C.m.s	’
élément	N.C.m.s	élément
courant	A.qual.m.s	courant
,	PONCT.W	,
–	P	à
next()	N.C.m.s	nextçë
:	PONCT.W	:
place	N.C.f.s	place
le	D.def.m.s	le
pointeur	N.C.m.s	pointeur
interne	A.qual.m.s	interne
sur	P	sur
l	D.def.m.s	l
’	N.C.m.s	’
élément	N.C.m.s	élément
suivant	A.qual.m.s	suivant
et	C.C	et
retourne	V.P.3.s	retourner
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
,	PONCT.W	,
–	P	à
prev()	N.C.m.s	preväë
:	PONCT.W	:
place	N.C.f.s	place
le	D.def.m.s	le
pointeur	N.C.m.s	pointeur
interne	A.qual.m.s	interne
sur	P	sur
l	D.def.m.s	l
’	N.C.m.s	’
élément	N.C.m.s	élément
précédent	A.qual.m.s	précédent
et	C.C	et
retourne	V.P.3.s	retourner
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
,	PONCT.W	,
–	P	à
each()	N.C.m.s	eachëë
:	PONCT.W	:
retourne	V.P.3.s	retourner
la	D.def.f.s	le
paire	A.qual.f.s	pair
clé/valeur	N.C.f.s	<unknown>
courante	A.qual.f.s	courant
du	P+D.def.m.s	du
tableau	N.C.m.s	tableau
et	C.C	et
avance	V.P.3.s	avancer
le	D.def.m.s	le
pointeur	N.C.m.s	pointeur
sur	P	sur
l'	D.def.m.s	le
élément	N.C.m.s	élément
suivant	A.qual.m.s	suivant
(	PONCT.W	(
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
la	D.def.f.s	le
seule	A.ind.f.s	seul
fonction	N.C.f.s	fonction
qui	PRO.rel.f.s	qui
ne	ADV.neg	ne
retourne	V.P.3.s	retourner
pas	ADV.neg	pas
faux	A.qual.m.p	faux
si	C.S	si
l'	D.def.m.s	le
élément	N.C.m.s	élément
vaut	V.P.3.s	valoir
0	D.card.m.s	@card@
ou	C.C	ou
"	PONCT.W	"
"	PONCT.W	"
)	PONCT.W	)
.	PONCT.S	.

53	D.card.m.p	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Un	D.ind.m.s	un
tableau	N.C.m.s	tableau
peut	V.P.3.s	pouvoir
être	VW	être
trié	VK.m.s	trier
en	P	en
utilisant	VG	utiliser
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
suivantes	A.qual.f.p	suivant
:	PONCT.W	:
–	D.card.m.s	–
asort()/arsort()	N.C.m.s	<unknown>
:	PONCT.W	:
trient	V.P.3.p	trier
le	D.def.m.s	le
tableau	N.C.m.s	tableau
en	P	en
ordre	N.C.m.s	ordre
croissant/décroissant	VG	<unknown>
de	P	de
valeurs	N.C.f.p	valeur
,	PONCT.W	,
–	P	à
ksort()/rsort()	N.C.m.s	<unknown>
:	PONCT.W	:
trient	V.P.3.p	trier
le	D.def.m.s	le
tableau	N.C.m.s	tableau
en	P	en
ordre	N.C.m.s	ordre
croissant/décroissant	VG	<unknown>
de	P	de
clés	N.C.f.p	clé
,	PONCT.W	,
–	P	à
sort()	N.C.m.s	sortçë
:	PONCT.W	:
trie	N.C.f.s	trie
le	D.def.m.s	le
tableau	N.C.m.s	tableau
en	P	en
ordre	N.C.m.s	ordre
croissant	A.qual.m.s	croissant
clés	N.C.f.p	clé
et	C.C	et
valeurs	N.C.f.p	valeur
(	PONCT.W	(
on	CL.suj.3.m.s	on
perd	V.P.3.s	perdre
la	D.def.f.s	le
correspondance	N.C.f.s	correspondance
clé/valeur	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P+D.def.m.s	c
uasort()/uksort()/usort()	N.C.m.s	<unknown>
:	PONCT.W	:
trient	V.P.3.p	trier
le	D.def.m.s	le
tableau	N.C.m.s	tableau
de	P	de
la	D.def.f.s	le
même	A.ind.f.s	même
façon	N.C.f.s	façon
que	C.S	que
leurs	D.poss.m.p	leur
quasi-homonymes	N.C.m.p	quasi-homonymes
(	PONCT.W	(
u	PONCT.W	u
pour	P	pour
user	VW	user
)	PONCT.W	)
mais	C.C	mais
avec	P	avec
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
de	P	de
comparaison	N.C.f.s	comparaison
fournie	VK.f.s	fournir
par	P	par
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
.	PONCT.S	.

54	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
cmp($a	N.C.m.s	<unknown>
,	PONCT.W	,
$b	N.C.m.s	bb
)	PONCT.W	)
{	P	à
if	N.C.m.s	if
(	PONCT.W	(
$a	N.P.x.s	<unknown>
==	V.P.3.s	cevoir
$b	N.C.m.s	bb
)	PONCT.W	)
return	N.C.m.s	return
0	A.card.m.s	@card@
;	PONCT.W	;
return	N.C.m.s	return
(	PONCT.W	(
$a	N.C.f.s	ça
>	N.C.m.s	>
$b	N.C.m.s	bb
)	PONCT.W	)
?	PONCT.S	?

-1	CL.suj.3.m.s	@card@
:	PONCT.W	:
1	N.card.m.s	@card@
;	PONCT.W	;
}	N.C.m.s	}
$tab	N.C.m.s	<unknown>
=	PONCT.W	=
array(3,2,5,6,1)	N.C.m.s	<unknown>
;	PONCT.W	;
usort($tab	N.P.m.s	Usortçëtab
,	PONCT.W	,
cmp	N.C.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
while(list($cle	N.C.m.s	whileçlistëëcle
,	PONCT.W	,
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
=	V.P.3.s	être
each($tab))	N.C.m.s	eachëëtabë
{	P	à
echo	ET	echo
"	PONCT.W	"
tab[$cle	A.qual.m.s	tabçcle
]	PONCT.W	]
=	PONCT.W	=
$valeur<BR>\n	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.card.m.s	}
Ce	D.dem.m.s	ce
programme	N.C.m.s	programme
est	V.P.3.s	être
équivalent	A.qual.m.s	équivalent
à	P	à
rsort(	N.C.m.s	<unknown>
)	PONCT.W	)
.	PONCT.S	.

55	D.card.m.p	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.f.p	le
variables	N.C.f.p	variable
La	D.def.f.s	le
portée	N.C.f.s	portée
d'	P	de
une	D.ind.f.s	un
variable	A.qual.f.s	variable
dépend	V.P.3.s	dépendre
du	P+D.def.m.s	du
contexte	N.C.m.s	contexte
dans	P	dans
lequel	PRO.rel.m.s	lequel
elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
définie	VK.f.s	définir
;	PONCT.W	;
La	D.def.f.s	le
plupart	N.C.f.s	plupart
des	P+D.def.f.p	du
variables	N.C.f.p	variable
ont	V.P.3.p	avoir
une	D.ind.f.s	un
portée	N.C.f.s	portée
qui	PRO.rel.f.s	qui
s'	CL.refl.3.f.s	se
étend	V.P.3.s	étendre
sur	P	sur
l'	D.def.f.s	le
intégralité	N.C.f.s	intégralité
du	P+D.def.m.s	du
script	N.C.m.s	script
PHP	N.P.m.s	Php
,	PONCT.W	,
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
globales	A.qual.f.p	global
;	PONCT.W	;
Cependant	ADV.-	cependant
,	PONCT.W	,
les	D.def.f.p	le
variables	N.C.f.p	variable
sont	V.P.3.p	être
locales	A.qual.f.p	local
au	P+D.def.m.s	au
sein	N.C.m.s	sein
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
;	PONCT.W	;
56	A.card.m.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
#	D.ind.f.s	#
portée	VK.f.s	porter
globale	A.qual.f.s	global
function	N.C.f.s	function
affiche	A.qual.f.s	affiche
(	PONCT.W	(
)	PONCT.W	)
{	P	à
echo	ET	echo
$toto	N.P.m.s	<unknown>
;	PONCT.W	;
#	P	à
portée	N.C.f.s	portée
locale	A.qual.f.s	local
}	P+D.def.m.s	c
affiche()	N.C.m.s	afficheëù
;	PONCT.W	;
Cet	D.dem.m.s	ce
exemple	N.C.m.s	exemple
n'	ADV.neg	ne
affichera	V.F.3.s	afficher
rien	PRO.neg.m.s	rien
car	C.C	car
echo()	N.C.m.s	echoëë
utilise	V.P.3.s	utiliser
la	D.def.f.s	le
variable	N.C.f.s	variable
locale	A.qual.f.s	local
$toto	N.P.m.s	<unknown>
.	PONCT.S	.

57	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Deux	D.card.f.p	deux
façons	N.C.f.p	façon
existent	V.P.3.p	exister
pour	P	pour
accéder	VW	accéder
à	P	à
une	D.ind.f.s	un
variable	N.C.f.s	variable
globale	A.qual.f.s	global
au	P+D.def.m.s	au
sein	N.C.m.s	sein
d'	P	de
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
:	PONCT.W	:
–	P	à
déclarer	VW	déclarer
la	D.def.f.s	le
variable	N.C.f.s	variable
comme	P	comme
global	A.qual.m.s	global
au	P+D.def.m.s	au
sein	N.C.m.s	sein
du	P+D.def.m.s	du
bloc	N.C.m.s	bloc
,	PONCT.W	,
–	P	à
utiliser	VW	utiliser
le	D.def.m.s	le
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
$GLOBALS	N.P.x.s	<unknown>
avec	P	avec
comme	P	comme
clé	N.C.f.s	clé
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
globale	A.qual.f.s	global
.	PONCT.S	.

58	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
1	A.card.f.s	@card@
;	PONCT.W	;
#	D.ind.f.s	#
portée	VK.f.s	porter
globale	A.qual.f.s	global
$titi	N.P.x.s	<unknown>
=	V.P.3.s	être
2	N.card.m.s	@card@
;	PONCT.W	;
#	A.card.f.s	#
portée	VK.f.s	porter
globale	A.qual.f.s	global
function	N.C.f.s	function
affiche	A.qual.f.s	affiche
(	PONCT.W	(
)	PONCT.W	)
{	P	à
global	A.qual.m.s	global
$toto	N.P.m.s	<unknown>
;	PONCT.W	;
#	P	à
portée	VK.f.s	porter
globale	A.qual.f.s	global
echo	ET	echo
"	PONCT.W	"
$toto	N.P.m.s	<unknown>
et	C.C	et
$GLOBALS[’titi	N.P.x.s	<unknown>
’	N.C.m.s	’
]	PONCT.W	]
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
affiche()	N.C.m.s	afficheëù
;	PONCT.W	;
Cet	D.dem.m.s	ce
exemple	N.C.m.s	exemple
affichera	V.F.3.s	afficher
1	A.card.m.s	@card@
et	C.C	et
2	PRO.card.m.p	@card@
.	PONCT.S	.

59	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Variables	N.C.f.p	variable
statiques	N.C.f.p	statique
:	PONCT.W	:
Une	D.ind.f.s	un
variable	N.C.f.s	variable
statique	A.qual.f.s	statique
est	V.P.3.s	être
une	D.ind.f.s	un
variable	N.C.f.s	variable
locale	A.qual.f.s	local
qui	PRO.rel.f.s	qui
ne	ADV.neg	ne
perd	V.P.3.s	perdre
pas	ADV.neg	pas
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
à	P	à
chaque	D.ind.f.s	chaque
fois	N.C.f.s	foi
que	C.S	que
le	D.def.m.s	le
bloc	N.C.m.s	bloc
est	V.P.3.s	être
exécuté	VK.m.s	exécuter
;	PONCT.W	;
On	CL.suj.3.m.s	on
utilise	V.P.3.s	utiliser
,	PONCT.W	,
comme	P	comme
en	P	en
C	CL.suj.3.m.s	c
,	PONCT.W	,
l'	D.def.m.s	le
attribut	N.C.m.s	attribut
static	A.qual.m.s	static
pour	P	pour
déclarer	VW	déclarer
une	D.ind.f.s	un
telle	A.qual.f.s	tel
variable	N.C.f.s	variable
:	PONCT.W	:
Ex	N.P.m.s	Ex
:	PONCT.W	:
static	N.C.m.s	static
$toto	N.P.x.s	<unknown>
;	PONCT.W	;
Ce	D.dem.m.s	ce
type	N.C.m.s	type
de	P	de
variables	N.C.f.p	variable
est	V.P.3.s	être
très	ADV.-	très
utile	A.qual.m.s	utile
pour	P	pour
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
fonctions	N.C.f.p	fonction
récursives	A.qual.f.p	récursif
;	PONCT.W	;
60	D.card.f.p	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
compter	VW	compter
récursivement	ADV.-	récursivement
jusqu'	P	jusque
à	P	à
10	D.card.f.p	@card@
function	N.C.f.s	function
compte	N.C.m.s	compte
(	PONCT.W	(
)	PONCT.W	)
{	P+D.def.m.s	c
static	N.C.m.s	static
$compteur	N.C.m.s	ccompteur
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
$compteur++	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
$compteur	N.C.m.s	ccompteur
"	PONCT.W	"
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$compteur	N.C.m.s	ccompteur
<	N.C.m.s	<
10	A.card.m.s	@card@
)	PONCT.W	)
compte()	N.C.m.s	compteçà
;	PONCT.W	;
}	P+D.def.m.s	c
compte()	N.C.m.s	compteçà
;	PONCT.W	;
Affiche	V.P.3.s	afficher
1	D.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
5	A.card.m.s	@card@
6	A.card.m.s	@card@
7	A.card.m.s	@card@
8	A.card.m.s	@card@
9	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

61	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Variables	N.P.f.s	Variables
dynamiques	A.qual.f.p	dynamique
:	PONCT.W	:
Une	D.ind.f.s	un
variable	N.C.f.s	variable
dynamique	A.qual.f.s	dynamique
prend	V.P.3.s	prendre
la	D.def.f.s	le
valeur	N.C.f.s	valeur
d'	P	de
une	D.ind.f.s	un
variable	N.C.f.s	variable
et	C.C	et
l'	D.def.f.s	le
utilise	N.C.f.s	utilise
comme	P	comme
nom	N.C.m.s	nom
d'	P	de
une	D.ind.f.s	un
autre	A.ind.f.s	autre
variable	N.C.f.s	variable
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
Hello	N.P.m.s	Hello
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
Hello	N.P.m.s	Hello
$$toto	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
World	N.P.m.s	World
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$Hello	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
World	ET	world
echo	ET	echo
"	PONCT.W	"
$toto	N.P.m.s	<unknown>
$Hello	N.P.m.s	<unknown>
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
Hello	N.P.m.s	Hello
World	N.P.m.s	World
!	PONCT.S	!

echo	ET	echo
"	PONCT.W	"
$toto	N.P.m.s	<unknown>
${$toto	N.P.m.s	<unknown>
}	I	à
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
aussi	ADV.-	aussi
Hello	N.P.m.s	Hello
World	N.P.m.s	World
!	PONCT.S	!

62	A.card.m.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Le	D.def.m.s	le
nom	N.C.m.s	nom
d'	P	de
une	D.ind.f.s	un
variable	N.C.f.s	variable
peut	V.P.3.s	pouvoir
être	VW	être
placé	VK.m.s	placer
entre	P	entre
accolades	N.C.f.p	accolade
pour	P	pour
éviter	VW	éviter
les	D.def.f.p	le
ambiguïtés	N.C.f.p	ambiguïté
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
$a[1	N.C.f.s	<unknown>
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
V1	N.card.m.s	V
"	PONCT.W	"
;	PONCT.W	;
$a	N.P.x.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
V2	N.card.m.s	V
"	PONCT.W	"
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
"	PONCT.W	"
a	V.P.3.s	avoir
"	PONCT.W	"
;	PONCT.W	;
$b[1	N.C.m.s	<unknown>
]	PONCT.W	]
=	N.C.m.s	=
"	PONCT.W	"
a	V.P.3.s	avoir
"	PONCT.W	"
;	PONCT.W	;
Résultat	N.C.m.s	résultat
:	PONCT.W	:
${$b}[1	N.P.m.s	<unknown>
]	PONCT.W	]
==	N.C.m.s	<unknown>
"	PONCT.W	"
V1	N.card.m.s	V
"	PONCT.W	"
Résultat	N.C.m.s	résultat
:	PONCT.W	:
${$b[1	N.P.m.s	<unknown>
]	PONCT.W	]
}	N.C.m.s	}
==	N.C.m.s	<unknown>
"	PONCT.W	"
V2	N.card.m.s	V
"	PONCT.W	"
Conclusion	N.C.f.s	conclusion
:	PONCT.W	:
${$b}[1	N.P.m.s	<unknown>
]	PONCT.W	]
et	C.C	et
${$b[1	N.P.m.s	<unknown>
]	PONCT.W	]
}	N.card.m.s	}
s'	CL.refl.3.m.p	se
utilisent	V.P.3.p	utiliser
dans	P	dans
2	D.card.m.p	@card@
contextes	N.C.m.p	contexte
différents	A.qual.m.p	différent
.	PONCT.S	.

63	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Variables	N.C.f.p	variable
extérieures	A.qual.f.p	extérieur
:	PONCT.W	:
Toutes	A.ind.f.p	tout
les	D.def.f.p	le
variables	N.C.f.p	variable
transmises	VK.f.p	transmettre
par	P	par
les	D.def.f.p	le
méthodes	N.C.f.p	méthode
POST	N.P.m.s	Post
ou	C.C	ou
GET	N.P.m.s	Get
sont	V.P.3.p	être
accessibles	A.qual.f.p	accessible
via	P	via
les	D.def.m.p	le
tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
$HTTP_POST_VARS	N.P.x.s	<unknown>
et	C.C	et
$HTTP_GET_VARS	N.P.x.s	<unknown>
(	PONCT.W	(
si	C.S	si
l'	D.def.f.s	le
option	N.C.f.s	option
track_vars	N.C.m.p	trackçvar
est	V.P.3.s	être
activée	VK.f.s	activer
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
Les	D.def.f.p	le
variables	N.C.f.p	variable
d'	P	de
environnement	N.C.m.s	environnement
sont	V.P.3.p	être
accessibles	A.qual.f.p	accessible
comme	P	comme
des	D.ind.f.p	du
variables	N.C.f.p	variable
PHP	N.C.f.p	php
classiques	A.qual.f.p	classique
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
$HOME	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
utiliser	VW	utiliser
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
getenv()	N.C.m.s	getenvçë
et	C.C	et
putenv()	N.C.m.s	putenvçë
pour	P	pour
manipuler	VW	manipuler
les	D.def.f.p	le
variables	N.C.f.p	variable
d'	P	de
environnement	N.C.m.s	environnement
;	PONCT.W	;
64	D.card.m.p	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Variables	A.qual.f.p	variable
prédéfinies	VK.f.p	prédéfinir
:	PONCT.W	:
Certaines	D.ind.f.p	certain
variables	N.C.f.p	variable
sont	V.P.3.p	être
prédéfinies	VK.f.p	prédéfinir
par	P	par
PHP	N.P.m.s	Php
,	PONCT.W	,
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
disponibles	A.qual.f.p	disponible
pendant	P	pendant
toute	A.ind.f.s	tout
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
du	P+D.def.m.s	du
script	N.C.m.s	script
.	PONCT.S	.

PHP_SELF	N.P.m.s	Phpçself
URI	N.P.m.s	Uri
du	P+D.def.m.s	du
script	N.C.m.s	script
en	P	en
cours	N.C.m.s	cours
d'	P	de
exécution	N.C.f.s	exécution
.	PONCT.S	.

GLOBALS	N.C.m.p	global
Tableau	N.C.m.s	tableau
des	P+D.def.f.p	du
variables	N.C.f.p	variable
globales	A.qual.f.p	global
.	PONCT.S	.

HTTP_GET_VARS	N.P.x.s	Httppgetçvars
Tableau	N.C.m.s	tableau
des	P+D.def.f.p	du
variables	N.C.f.p	variable
issues	VK.f.p	isseoir
de	P	de
GET	N.P.m.s	Get
.	PONCT.S	.

HTTP_POST_VARS	N.P.m.s	Htttppostëvars
Tableau	N.C.m.s	tableau
des	P+D.def.f.p	du
variables	N.C.f.p	variable
issues	VK.f.p	isseoir
de	P	de
POST	N.P.m.s	Post
.	PONCT.S	.

HTTP_COOKIE_VARS	N.P.m.p	Httppcookieçvars
Tableau	N.C.m.s	tableau
des	P+D.def.f.p	du
variables	N.C.f.p	variable
issues	VK.f.p	isseoir
des	P+D.def.f.p	du
cookies	N.C.f.p	cookie
.	PONCT.S	.

65	D.card.m.p	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Variables	N.P.f.s	Variables
d'	P	de
environnement	N.C.m.s	environnement
CGI	N.P.f.s	Cgi
:	PONCT.W	:
SERVER_SOFTWARE	N.C.m.s	serverçsoftware
SERVER_NAME	N.C.m.s	serverçname
GATEWAY_INTERFACE	N.P.f.s	Gateway-interface
SERVER_PROTOCOL	N.C.m.s	serverüprotocol
SERVER_PORT	N.C.m.s	serverçport
REQUEST_METHOD	N.C.m.s	request-method
PATH_INFO	N.P.m.s	Pathçinfo
PATH_TRANSLATED	N.P.m.s	Pathätranslated
SCRIPT_NAME	N.C.m.s	scriptäname
QUERY_STRING	N.P.m.s	Queryëstring
REMOTE_HOST	N.P.m.s	Remoteçhost
REMOTE_ADDR	N.P.m.s	Remoteçaddr
AUTH_TYPE	N.C.f.s	authätype
REMOTE_USER	N.P.m.s	Remoteçuser
REMOTE_IDENT	N.C.m.s	remoteçident
CONTENT_TYPE	N.C.f.s	contentytype
CONTENT_LENGTH	N.P.x.s	Contentçlength
http	ET	<unknown>
://hoohoo.ncsa.uiuc.edu/cgi/env.html	N.P.x.s	<unknown>
66	A.card.f.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Pour	P	pour
déterminer	VW	déterminer
le	D.def.m.s	le
type	N.C.m.s	type
d'	P	de
une	D.ind.f.s	un
variable	N.C.f.s	variable
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
utiliser	VW	utiliser
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
suivantes	A.qual.f.p	suivant
:	PONCT.W	:
–	N.C.m.s	–
gettype()	N.C.m.s	gettypeëë
:	PONCT.W	:
retourne	V.P.3.s	retourner
une	D.ind.f.s	un
chaine	N.C.f.s	chaine
décrivant	VG	décrire
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
passée	VK.f.s	passer
en	P	en
argument	N.C.m.s	argument
(	PONCT.W	(
integer	ET	integer
,	PONCT.W	,
double	N.C.m.s	double
,	PONCT.W	,
string	N.C.m.s	string
,	PONCT.W	,
array	N.C.m.s	array
,	PONCT.W	,
object	N.C.m.s	object
,	PONCT.W	,
unknown	ET	<unknown>
type	N.C.m.s	type
)	PONCT.W	)
,	PONCT.W	,
–	P	à
is_long()/is_int()/is_integer()	N.C.m.s	<unknown>
:	PONCT.W	:
retourne	V.P.3.s	retourner
true	N.C.f.s	true
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
passée	VK.f.s	passer
en	P	en
argument	N.C.m.s	argument
est	V.P.3.s	être
un	D.ind.m.s	un
entier	N.C.m.s	entier
et	C.C	et
false	A.qual.f.s	fals
dans	P	dans
le	D.def.m.s	le
cas	N.C.m.s	cas
contraire	A.qual.m.s	contraire
,	PONCT.W	,
–	P+D.def.m.s	c
is_double()/is_float	N.C.m.s	<unknown>
:	PONCT.W	:
idem	ET	idem
mais	C.C	mais
avec	P	avec
les	D.def.m.p	le
flottants/doubles	N.C.m.p	<unknown>
,	PONCT.W	,
–	P	à
is_string()	N.C.m.s	isästringçë
:	PONCT.W	:
idem	ADV.-	idem
mais	C.C	mais
avec	P	avec
les	D.def.f.p	le
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
,	PONCT.W	,
–	P	à
is_array()	N.C.m.s	isçarrayç-
:	PONCT.W	:
idem	ADV.-	idem
mais	C.C	mais
avec	P	avec
les	D.def.m.p	le
tableaux	N.C.m.p	tableau
,	PONCT.W	,
–	P	à
is_object()	N.C.m.s	isçobjectçë
:	PONCT.W	:
idem	ADV.-	idem
mais	C.C	mais
avec	P	avec
les	D.def.m.p	le
objets	N.C.m.p	objet
.	PONCT.S	.

67	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
constantes	N.C.f.p	constante
PHP	N.P.m.s	Php
définit	V.P.3.s	définir
certaines	D.ind.f.p	certain
constantes	N.C.f.p	constante
et	C.C	et
propose	V.P.3.s	proposer
un	D.ind.m.s	un
mécanisme	N.C.m.s	mécanisme
pour	P	pour
en	CL.obj.3.m.s	en
définir	VW	définir
d'	D.ind.m.p	de
autres	PRO.ind.m.p	autre
durant	P	durant
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
du	P+D.def.m.s	du
script	N.C.m.s	script
;	PONCT.W	;
On	CL.suj.3.m.s	on
définit	V.P.3.s	définir
une	D.ind.f.s	un
constante	N.C.f.s	constante
en	P	en
utilisant	VG	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
define()	N.C.m.s	defineçà
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
define("MA_CONSTANTE	N.C.f.s	defineçmaëconte
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
MA_CONSTANTE	N.P.x.s	Maëconstante
;	PONCT.W	;
#	N.P.x.s	#
affiche	V.P.3.s	afficher
Bonjour	N.P.m.s	Bonjour
68	A.card.m.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
principales	A.qual.f.p	principal
constantes	N.C.f.p	constante
définies	VK.f.p	définir
par	P	par
PHP	N.P.m.s	Php
sont	V.P.3.p	être
les	D.def.f.p	le
suivantes	N.C.f.p	suivante
:	PONCT.W	:
–	P	à
__FILE__	N.P.f.s	<unknown>
:	PONCT.W	:
nom	N.C.m.s	nom
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
actuellement	ADV.-	actuellement
exécuté	VK.m.s	exécuter
,	PONCT.W	,
–	P+D.def.m.s	c
__LINE__	N.P.x.s	<unknown>
:	PONCT.W	:
numéro	N.C.m.s	numéro
de	P	de
la	D.def.f.s	le
ligne	N.C.f.s	ligne
qui	PRO.rel.f.s	qui
est	V.P.3.s	être
actuellement	ADV.-	actuellement
exécutée	VK.f.s	exécuter
,	PONCT.W	,
–	P	à
PHP_VERSION	N.P.x.s	Phpçversion
:	PONCT.W	:
présentation	N.C.f.s	présentation
de	P	de
la	D.def.f.s	le
version	N.C.f.s	version
du	P+D.def.m.s	du
PHP	N.P.m.s	Php
utilisée	VK.f.s	utiliser
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
3.0.8-dev	PRO.card.m.p	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
PHP_OS	N.P.x.s	Phpços
:	PONCT.W	:
système	N.C.m.s	système
d'	P	de
exploitation	N.C.f.s	exploitation
utilisé	VK.m.s	utiliser
par	P	par
la	D.def.f.s	le
machine	N.C.f.s	machine
qui	PRO.rel.f.s	qui
fait	V.P.3.s	faire
tourner	VW	tourner
le	D.def.m.s	le
PHP	N.P.m.s	Php
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
Linux	N.P.m.s	Linux
)	PONCT.W	)
,	PONCT.W	,
–	N.C.m.s	–
TRUE	N.P.f.s	True
:	PONCT.W	:
vrai	N.C.m.s	vrai
,	PONCT.W	,
–	N.C.m.s	–
FALSE	N.P.x.s	False
:	PONCT.W	:
faux	A.qual.m.p	faux
,	PONCT.W	,
–	P	à
E_*	N.P.m.s	Eùë
:	PONCT.W	:
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
erreurs	N.C.f.p	erreur
(	PONCT.W	(
cf	N.C.m.s	<unknown>
.	PONCT.S	.

section	N.C.f.s	section
correspondante	A.qual.f.s	correspondant
)	PONCT.W	)
.	PONCT.S	.

69	D.card.m.p	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
Les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
arithmétiques	A.qual.m.p	arithmétique
:	PONCT.W	:
–	D.ind.f.s	–
addition	N.C.f.s	addition
:	PONCT.W	:
$a	N.C.f.s	ça
+	P	p
$b	N.C.m.s	bb
,	PONCT.W	,
–	P	à
soustraction	N.C.f.s	soustraction
:	PONCT.W	:
$a	N.P.x.s	<unknown>
-	PONCT.W	-
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
multiplication	N.C.f.s	multiplication
:	PONCT.W	:
$a	N.C.f.s	ça
*	N.C.m.s	*
$b	N.C.m.s	bb
,	PONCT.W	,
–	P	à
division	N.C.f.s	division
:	PONCT.W	:
$a	N.P.x.s	<unknown>
/	PONCT.W	@card@
$b	N.C.m.s	bb
,	PONCT.W	,
–	D.card.m.s	–
modulo	N.C.m.s	modulo
(	PONCT.W	(
reste	N.C.m.s	reste
de	P	de
la	D.def.f.s	le
division	N.C.f.s	division
entière	A.qual.f.s	entier
)	PONCT.W	)
:	PONCT.W	:
$a	D.card.m.p	<unknown>
%	N.C.m.p	%
$b	N.C.m.s	bb
.	PONCT.S	.

70	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
sur	P	sur
les	D.def.f.p	le
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
:	PONCT.W	:
–	D.card.f.p	–
concaténation	N.C.f.s	concaténation
:	PONCT.W	:
chaine1	N.C.f.s	<unknown>
.	PONCT.S	.

chaine2	N.C.f.s	<unknown>
Ex	N.C.m.s	ex
:	PONCT.W	:
$jour	N.C.m.s	çjour
=	PONCT.W	=
"	PONCT.W	"
Lundi	N.C.m.s	lundi
"	PONCT.W	"
;	PONCT.W	;
echo	N.C.m.s	echo
’	P	à
Nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
’	P	à
.	PONCT.S	.

$jour	N.C.m.s	çjour
.	PONCT.S	.

"	PONCT.W	"
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
Affiche	V.P.3.s	afficher
Nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
Lundi	N.C.m.s	lundi
!	PONCT.S	!

71	A.card.m.s	@card@
Syntaxe	N.C.f.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
sur	P	sur
les	D.def.m.p	le
bits	N.C.m.p	bit
:	PONCT.W	:
–	N.C.m.s	–
ET	C.C	et
bit	V.P.3.s	bire
à	P	à
bit	N.C.m.s	bit
:	PONCT.W	:
$a	N.P.x.s	<unknown>
&	PONCT.W	&
$b	N.C.m.s	bb
,	PONCT.W	,
–	P	à
OU	CL.suj.3.m.s	ou
bit	V.P.3.s	bire
à	P	à
bit	N.C.m.s	bit
:	PONCT.W	:
$a	D.poss.f.s	con
|	P	à
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
OU-Exclusif/XOR	N.P.m.s	<unknown>
bit	V.P.3.s	bire
à	P	à
bit	N.C.m.s	bit
:	PONCT.W	:
$a	N.C.f.s	ça
ˆ	N.C.m.s	ˆ
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
NON	N.P.f.s	Non
bit	V.P.3.s	bire
à	P	à
bit	N.C.m.s	bit
:	PONCT.W	:
˜$a	N.P.m.s	<unknown>
,	PONCT.W	,
–	P+D.def.m.s	c
décalage	N.C.m.s	décalage
à	P	à
droite	N.C.f.s	droite
de	P	de
$b	N.C.m.s	bb
bits	N.C.m.p	bit
:	PONCT.W	:
$a	N.C.f.s	ça
>	N.C.m.s	>
>	N.C.m.s	>
$b	N.C.m.s	bb
,	PONCT.W	,
–	P	à
décalage	N.C.m.s	décalage
à	P	à
gauche	N.C.f.s	gauche
de	P	de
$b	N.C.m.s	bb
bits	N.C.m.p	bit
:	PONCT.W	:
$a	D.poss.f.s	con
<	N.C.m.s	<
<	N.C.m.s	<
$b	N.C.m.s	bb
.	PONCT.S	.

72	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
logiques	A.qual.m.p	logique
:	PONCT.W	:
–	P	à
ET	C.C	et
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
$a	N.P.x.s	<unknown>
et	C.C	et
$b	N.C.m.s	bb
vrais	A.qual.m.p	vrai
)	PONCT.W	)
:	PONCT.W	:
$a	D.card.m.p	<unknown>
and	ET	and
$b	N.P.x.s	<unknown>
,	PONCT.W	,
$a	N.P.x.s	<unknown>
&&	D.card.m.p	<unknown>
$b	N.C.m.s	bb
.	PONCT.S	.

–	P	à
OU	N.C.m.s	ou
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
$a	N.P.x.s	<unknown>
ou	C.C	ou
$b	N.C.m.s	bb
vrai(s))	N.C.m.s	vrai-sçë
:	PONCT.W	:
$a	D.card.m.p	<unknown>
or	N.C.m.s	or
$b	N.C.m.s	bb
,	PONCT.W	,
$a	D.poss.f.s	con
||	N.C.m.p	çù
$b	N.C.m.s	bb
.	PONCT.S	.

–	P	à
OU-Exclusif/XOR	N.P.m.s	<unknown>
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
seul	A.qual.m.s	seul
$a	N.C.m.s	ca
ou	C.C	ou
$b	N.C.m.s	bb
vrai	A.qual.m.s	vrai
)	PONCT.W	)
:	PONCT.W	:
$a	N.P.x.s	<unknown>
xor	N.C.m.s	xor
$b	N.C.m.s	bb
,	PONCT.W	,
–	P	à
NON	N.P.m.s	Non
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
$a	N.C.f.s	ça
est	V.P.3.s	être
faux	A.qual.m.s	faux
)	PONCT.W	)
:	PONCT.W	:
!	PONCT.S	!

$a	N.C.f.s	ça
.	PONCT.S	.

73	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
d'	P	de
affectation	N.C.f.s	affectation
:	PONCT.W	:
–	P	à
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
d'	P	de
affectation	N.C.f.s	affectation
le	D.def.m.s	le
plus	ADV.-	plus
simple	A.qual.m.s	simple
est	V.P.3.s	être
le	D.def.m.s	le
signe	N.C.m.s	signe
=	PONCT.W	=
,	PONCT.W	,
–	C.S	–
il	CL.suj.3.m.s	il
ne	ADV.neg	ne
signifie	V.P.3.s	signifier
pas	ADV.neg	pas
"	PONCT.W	"
égal	A.qual.m.s	égal
à	P	à
"	PONCT.W	"
mais	C.C	mais
que	C.S	que
l'	D.def.f.s	le
opérande	N.C.f.s	opérande
à	P	à
gauche	N.C.m.s	gauche
du	P+D.def.m.s	du
signe	N.C.m.s	signe
=	V.P.3.s	être
se	CL.refl.3.m.s	se
voit	V.P.3.s	voir
affecté	VK.m.s	affecter
de	P	de
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
l'	D.def.f.s	le
opérande	N.C.f.s	opérande
de	P	de
droite	N.C.f.s	droite
,	PONCT.W	,
–	P	à
la	D.def.f.s	le
valeur	N.C.f.s	valeur
retournée	VK.f.s	retourner
par	P	par
une	D.ind.f.s	un
expression	N.C.f.s	expression
d'	P	de
assignement	N.C.m.s	assignement
est	V.P.3.s	être
la	D.def.f.s	le
valeur	N.C.f.s	valeur
assignée	VK.f.s	assigner
,	PONCT.W	,
Ex	N.P.m.s	Ex
:	PONCT.W	:
$a	N.P.x.s	<unknown>
=	V.P.3.s	être
(	PONCT.W	(
$b	N.C.m.s	bb
=	PONCT.W	=
4	N.card.m.s	@card@
)	PONCT.W	)
+	P	p
3	A.card.m.s	@card@
;	PONCT.W	;
#	N.card.m.p	#
$a	N.P.x.s	<unknown>
vaut	V.P.3.s	valoir
7	D.card.m.p	@card@
et	C.C	et
$b	N.C.m.s	bb
vaut	V.P.3.s	valoir
4	D.card.m.p	@card@
74	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.x.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.C.m.s	–
il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
en	P	en
plus	ADV.-	plus
des	D.ind.m.p	du
opérateurs	N.C.m.p	opérateur
combinés	A.qual.m.p	combiné
pour	P	pour
tous	A.ind.m.p	tous
les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
arithmétiques	A.qual.m.p	arithmétique
,	PONCT.W	,
les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
bits	VK.m.p	bir
à	P	à
bits	N.C.m.p	bit
et	C.C	et
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
de	P	de
concaténation	N.C.f.s	concaténation
,	PONCT.W	,
+=	P	uà
-=	PONCT.W	<unknown>
*=	N.C.m.p	çù
/=	D.card.m.p	<unknown>
%=	N.C.m.p	çù
.=	PONCT.S	<unknown>
&=	N.C.m.s	<unknown>
|=	P+D.def.m.s	çù
ˆ=	N.C.m.s	<unknown>
<	N.C.m.s	<
<=	N.C.m.s	<unknown>
>	N.C.m.s	>
>=	N.C.m.s	<unknown>
˜=	N.C.m.s	<unknown>
–	P	à
ceux	PRO.dem.m.p	celui
-ci	CL.suj.3.m.p	ci
permettent	V.P.3.p	permettre
d'	P	de
utiliser	VW	utiliser
la	D.def.f.s	le
valeur	N.C.f.s	valeur
d'	P	de
une	D.ind.f.s	un
variable	N.C.f.s	variable
dans	P	dans
une	D.ind.f.s	un
expression	N.C.f.s	expression
et	C.C	et
d'	P	de
affecter	VW	affecter
le	D.def.m.s	le
résultat	N.C.m.s	résultat
de	P	de
cette	D.dem.f.s	ce
expression	N.C.f.s	expression
à	P	à
cette	D.dem.f.s	ce
variable	N.C.f.s	variable
,	PONCT.W	,
Ex	N.P.m.s	Ex
:	PONCT.W	:
$toto	N.P.m.s	<unknown>
+=	P	uà
3	D.card.m.p	@card@
#	N.C.m.p	#
équivaut	N.C.m.s	équivaut
à	P	à
$toto	N.P.m.s	<unknown>
=	P	à
$toto	N.P.m.s	<unknown>
+	P	p
3	D.card.m.p	@card@
75	D.card.m.p	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	P	à
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
++	P	uu
est	V.P.3.s	être
équivalent	A.qual.m.s	équivalent
à	P	à
+=	N.C.m.s	au
1	N.card.m.s	@card@
,	PONCT.W	,
–	P	à
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
--	PONCT.W	--
est	V.P.3.s	être
équivalent	A.qual.m.s	équivalent
à	P	à
-=	N.P.m.s	<unknown>
1	N.card.m.s	@card@
,	PONCT.W	,
–	P	à
ces	D.dem.m.p	ce
deux	A.card.m.p	deux
opérateurs	N.C.m.p	opérateur
peuvent	V.P.3.p	pouvoir
être	VW	être
placés	VK.m.p	placer
avant	ADV.-	avant
(	PONCT.W	(
pré-exécution	N.C.f.s	pré-exécution
)	PONCT.W	)
ou	C.C	ou
après	ADV.-	après
(	PONCT.W	(
post-exécution	N.C.f.s	post-exécution
)	PONCT.W	)
la	D.def.f.s	le
variable	N.C.f.s	variable
à	P	à
laquelle	PRO.rel.f.s	lequel
ils	CL.suj.3.m.p	il
s'	CL.refl.3.m.p	se
appliquent	V.P.3.p	appliquer
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
0	PRO.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
++$toto	N.P.x.s	Anatoto
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
1	D.card.m.s	@card@
echo	ET	echo
$toto++	N.P.m.s	<unknown>
;	PONCT.W	;
#	A.card.f.s	#
affiche	V.P.3.s	afficher
1	D.card.m.s	@card@
echo	ET	echo
$toto	N.P.m.s	<unknown>
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
2	A.card.m.s	@card@
76	A.card.m.s	@card@
Syntaxe	N.C.m.p	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
opérateurs	N.C.m.p	opérateur
de	P	de
comparaison	N.C.f.s	comparaison
:	PONCT.W	:
–	N.C.m.s	–
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
==	P+D.def.m.s	çù
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
différent	A.qual.m.s	différent
de	P	de
:	PONCT.W	:
$a	N.P.m.s	<unknown>
!	PONCT.S	!

=	PONCT.W	=
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
supérieur	N.C.m.s	supérieur
à	P	à
:	PONCT.W	:
$a	N.C.f.s	ça
>	N.C.m.s	>
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
inférieur	A.qual.m.s	inférieur
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
<	N.C.m.s	<
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
supérieur	A.qual.m.s	supérieur
ou	C.C	ou
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
>=	P+D.def.m.s	çù
$b	N.C.m.s	bb
,	PONCT.W	,
–	N.C.m.s	–
inférieur	A.qual.m.s	inférieur
ou	C.C	ou
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
<=	P+D.def.m.s	çù
$b	N.C.m.s	bb
.	PONCT.S	.

77	A.card.m.s	@card@
Syntaxe	N.C.m.s	syntaxe
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
ternaire	A.qual.m.s	ternaire
:	PONCT.W	:
–	VK.m.s	être
issu	VK.m.s	<unknown>
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	PONCT.W	C
,	PONCT.W	,
–	N.C.m.s	–
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
?	PONCT.S	?

(	PONCT.W	(
expression1	N.C.f.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
(	PONCT.W	(
expression2	N.C.f.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
,	PONCT.W	,
–	P	à
renvoie	V.P.3.s	renvoyer
expression1	N.C.f.s	<unknown>
si	ADV.-	si
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
et	C.C	et
expression2	N.C.f.s	<unknown>
dans	P	dans
le	D.def.m.s	le
cas	N.C.m.s	cas
contraire	A.qual.m.s	contraire
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
echo	ET	echo
$toto	N.P.m.s	<unknown>
==	V.P.3.s	cevoir
0	A.card.m.s	@card@
?	PONCT.S	?

"	PONCT.W	"
Nul	I	nul
"	PONCT.W	"
:	PONCT.W	:
"	PONCT.W	"
Non	I	non
nul	D.neg.m.s	nul
"	PONCT.W	"
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
Nul	D.neg.m.s	nul
si	C.S	si
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
0	A.card.m.s	@card@
et	C.C	et
Non	ADV.neg	non
nul	D.neg.m.s	nul
sinon	N.C.m.s	sinon
78	D.card.f.p	@card@
Section	N.C.f.s	section
2	A.card.m.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
79	A.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Introduction	N.P.x.s	Introduction
;	PONCT.W	;
Instructions	N.C.f.p	instruction
conditionnelles	A.qual.f.p	conditionnel
;	PONCT.W	;
Boucles	N.P.m.s	Boucles
;	PONCT.W	;
Inclusions	N.C.f.p	inclusion
.	PONCT.S	.

80	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Introduction	N.C.f.s	introduction
Tous	A.ind.m.p	tous
les	D.def.m.p	le
scripts	N.C.m.p	script
PHP	N.P.m.s	Php
sont	V.P.3.p	être
une	D.ind.f.s	un
suite	N.C.f.s	suite
d'	P	de
instructions	N.C.f.p	instruction
;	PONCT.W	;
Une	D.ind.f.s	un
instruction	N.C.f.s	instruction
peut	V.P.3.s	pouvoir
être	VW	être
:	PONCT.W	:
–	P	à
un	D.ind.m.s	un
assignement	N.C.m.s	assignement
,	PONCT.W	,
–	P	à
un	D.ind.m.s	un
appel	N.C.m.s	appel
de	P	de
fonction	N.C.f.s	fonction
,	PONCT.W	,
–	P	à
une	D.ind.f.s	un
instruction	N.C.f.s	instruction
conditionnelle	A.qual.f.s	conditionnel
,	PONCT.W	,
ou	C.C	ou
–	N.C.m.s	–
une	D.ind.f.s	un
instruction	N.C.f.s	instruction
qui	PRO.rel.f.s	qui
ne	ADV.neg	ne
fait	V.P.3.s	faire
rien	PRO.neg.m.s	rien
(	PONCT.W	(
une	D.ind.f.s	un
instruction	N.C.f.s	instruction
vide	A.qual.f.s	vide
)	PONCT.W	)
.	PONCT.S	.

Une	D.ind.f.s	un
instruction	N.C.f.s	instruction
se	CL.refl.3.f.s	se
termine	V.P.3.s	terminer
habituellement	ADV.-	habituellement
par	P	par
un	D.ind.m.s	un
point	N.C.m.s	point
virgule	A.qual.m.s	virgule
(	PONCT.W	(
;	PONCT.W	;
)	PONCT.W	)
;	PONCT.W	;
81	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Plusieurs	D.ind.f.p	plusieurs
instructions	N.C.f.p	instruction
peuvent	V.P.3.p	pouvoir
être	VW	être
regroupées	VK.f.p	regrouper
en	P	en
bloc	N.C.m.s	bloc
,	PONCT.W	,
délimité	VK.m.s	délimiter
par	P	par
des	D.ind.f.p	du
accolades	N.C.f.p	accolade
(	PONCT.W	(
{	N.C.m.s	{
...	PONCT.W	<unknown>
}	N.C.m.s	}
)	PONCT.W	)
;	PONCT.W	;
Un	D.ind.m.s	un
bloc	N.C.m.s	bloc
est	V.P.3.s	être
considéré	VK.m.s	considérer
comme	P	comme
une	D.ind.f.s	un
instruction	N.C.f.s	instruction
;	PONCT.W	;
Les	D.def.m.p	le
différents	A.qual.m.p	différent
types	N.C.m.p	type
d'	P	de
instructions	N.C.f.p	instruction
sont	V.P.3.p	être
décrits	VK.m.p	décrire
dans	P	dans
ce	D.dem.m.s	ce
chapitre	N.C.m.s	chapitre
.	PONCT.S	.

82	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Instructions	N.C.f.p	instruction
conditionnelles	A.qual.f.p	conditionnel
L'	D.def.f.s	le
instruction	N.C.f.s	instruction
if	CL.suj.3.m.s	if
est	V.P.3.s	être
une	PRO.ind.f.s	un
des	P+D.def.f.p	du
plus	ADV.-	plus
importantes	A.qual.f.p	important
instructions	N.C.f.p	instruction
de	P	de
tous	A.ind.m.p	tous
les	D.def.m.p	le
langages	N.C.m.p	langage
,	PONCT.W	,
PHP	N.P.m.s	Php
inclus	VK.m.p	inclure
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
permet	V.P.3.s	permettre
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
conditionnelle	A.qual.f.s	conditionnel
d'	P	de
une	D.ind.f.s	un
partie	N.C.f.s	partie
de	P	de
code	N.C.m.s	code
;	PONCT.W	;
Les	D.def.f.p	le
fonctionnalités	N.C.f.p	fonctionnalité
de	P	de
l'	D.def.f.s	le
instruction	N.C.f.s	instruction
if	N.P.m.s	If
sont	V.P.3.p	être
les	D.def.m.p	le
mêmes	A.ind.m.p	même
en	P	en
PHP	N.C.m.s	php
qu'	C.S	que
en	P	en
C	N.P.f.s	C
;	PONCT.W	;
83	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
if	ET	if
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	N.C.m.s	}
Une	D.ind.f.s	un
chaine	N.C.f.s	chaine
de	P	de
caractère	N.C.m.s	caractère
ne	ADV.neg	ne
contenant	VG	contenir
que	ADV.neg	que
0	A.card.f.s	@card@
sera	V.F.3.s	être
évaluée	VK.f.s	évaluer
comme	P	comme
fausse	A.qual.f.s	faux
;	PONCT.W	;
84	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Souvent	ADV.-	souvent
on	CL.suj.3.m.s	on
souhaite	V.P.3.s	souhaiter
exécuter	VW	exécuter
une	D.ind.f.s	un
instruction	N.C.f.s	instruction
si	C.S	si
une	D.ind.f.s	un
condition	N.C.f.s	condition
est	V.P.3.s	être
remplie	VK.f.s	remplir
,	PONCT.W	,
et	C.C	et
une	D.ind.f.s	un
autre	A.ind.f.s	autre
instruction	N.C.f.s	instruction
si	C.S	si
cette	D.dem.f.s	ce
condition	N.C.f.s	condition
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
remplie	VK.f.s	remplir
;	PONCT.W	;
C'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
rôle	N.C.m.s	rôle
du	P+D.def.m.s	du
else	N.C.m.s	else
;	PONCT.W	;
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
if	ET	if
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
fausse	A.qual.f.s	faux
...	PONCT.W	<unknown>
}	N.C.m.s	}
85	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
elseif	A.qual.m.s	elseif
permet	V.P.3.s	permettre
,	PONCT.W	,
comme	P	comme
l'	D.def.f.s	le
expression	N.C.f.s	expression
else	PPRO.3.f.s	<unknown>
,	PONCT.W	,
d'	P	de
exécuter	VW	exécuter
une	D.ind.f.s	un
instruction	N.C.f.s	instruction
après	P	après
un	D.ind.m.s	un
if	N.C.m.s	if
dans	P	dans
le	D.def.m.s	le
cas	N.C.m.s	cas
où	PRO.rel.m.s	où
ce	D.dem.m.s	ce
dernier	A.qual.m.s	dernier
est	V.P.3.s	être
évalué	VK.m.s	évaluer
comme	P	comme
faux	A.qual.m.s	faux
;	PONCT.W	;
A	P	à
la	D.def.f.s	le
différence	N.C.f.s	différence
de	P	de
l'	D.def.f.s	le
expression	N.C.f.s	expression
else	A.qual.f.s	else
,	PONCT.W	,
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
exécutera	V.F.3.s	exécuter
les	D.def.f.p	le
instructions	N.C.f.p	instruction
que	ADV.neg	que
si	C.S	si
l'	D.def.f.s	le
expression	N.C.f.s	expression
condionnelle	A.qual.f.s	condionnel
elseif	A.qual.f.s	elseif
est	V.P.3.s	être
évaluée	VK.f.s	évaluer
comme	P	comme
vraie	A.qual.f.s	vrai
;	PONCT.W	;
86	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
if	ET	if
(	PONCT.W	(
condition1	N.C.f.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition1	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	P+D.def.m.s	c
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
condition2	N.C.f.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition2	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	P+D.def.m.s	c
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
condition3	N.C.f.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition3	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
aucune	PRO.neg.f.s	aucun
des	P+D.def.f.p	du
conditions	N.C.f.p	condition
n'	ADV.neg	ne
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	N.C.m.s	}
87	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
La	D.def.f.s	le
syntaxe	N.C.f.s	syntaxe
du	P+D.def.m.s	du
if	N.C.m.s	if
que	PRO.rel.m.s	que
nous	CL.suj.1.m.p	nous
venons	V.P.1.p	venir
de	P	de
voir	VW	voir
est	V.P.3.s	être
directement	ADV.-	directement
héritée	VK.f.s	hériter
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	PONCT.W	C
;	PONCT.W	;
Pas	ADV.-	pas
toujours	ADV.-	toujours
très	ADV.-	très
adaptée	VK.f.s	adapter
pour	P	pour
mélanger	VW	mélanger
code	P	code
PHP	N.P.m.s	Php
et	C.C	et
HTML	N.P.m.s	<unknown>
;	PONCT.W	;
PHP	N.P.m.s	Php
propose	V.P.3.s	proposer
donc	ADV.-	donc
une	D.ind.f.s	un
autre	A.ind.f.s	autre
syntaxe	N.C.f.s	syntaxe
pour	P	pour
le	D.def.m.s	le
if	N.C.m.s	if
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
d'	P	de
améliorer	VW	améliorer
la	D.def.f.s	le
lisibilité	N.C.f.s	lisibilité
;	PONCT.W	;
88	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Prototype	N.C.m.s	prototype
simplifié	VK.m.s	simplifier
:	PONCT.W	:
if	ET	if
(	PONCT.W	(
condition1	N.C.f.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition1	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
condition2	N.C.f.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition2	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
condition3	N.C.f.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition3	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
else	PPRO.3.f.s	<unknown>
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
aucune	PRO.neg.f.s	aucun
des	P+D.def.f.p	du
conditions	N.C.f.p	condition
n'	ADV.neg	ne
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
endif	N.C.m.s	endif
;	PONCT.W	;
89	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
if	ET	if
(	PONCT.W	(
$type	N.P.m.s	<unknown>
==	PONCT.W	<unknown>
"	PONCT.W	"
Femme	ET	femme
"	PONCT.W	"
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
Madame	N.P.m.s	Madame
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
$type	N.P.m.s	<unknown>
==	PONCT.W	<unknown>
"	PONCT.W	"
Homme	ET	homme
"	PONCT.W	"
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
Monsieur	N.P.m.s	Monsieur
"	PONCT.W	"
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
êtes	V.P.2.p	être
bizarre	A.qual.m.s	bizarre
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
90	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Boucles	N.P.m.s	Boucles
La	D.def.f.s	le
boucle	A.qual.f.s	boucle
while	N.C.f.s	while
est	V.P.3.s	être
le	D.def.m.s	le
moyen	N.C.m.s	moyen
le	D.def.m.s	le
plus	ADV.-	plus
simple	A.qual.m.s	simple
d'	P	de
implémenter	VW	implémenter
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
en	P	en
PHP	N.P.f.s	Php
;	PONCT.W	;
Cette	D.dem.f.s	ce
boucle	N.C.f.s	boucle
se	CL.refl.3.f.s	se
comporte	V.P.3.s	comporter
de	P	de
la	D.def.f.s	le
même	A.ind.f.s	même
manière	N.C.f.s	manière
qu'	C.S	que
en	P	en
C	N.P.f.s	C
:	PONCT.W	:
les	D.def.f.p	le
instructions	N.C.f.p	instruction
sont	V.P.3.p	être
exécutées	VK.f.p	exécuter
tant	ADV.-	tant
que	C.S	que
l'	D.def.f.s	le
expression	N.C.f.s	expression
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
;	PONCT.W	;
La	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
l'	D.def.f.s	le
expression	N.C.f.s	expression
est	V.P.3.s	être
vérifiée	VK.f.s	vérifier
à	P	à
chaque	D.ind.m.s	chaque
début	N.C.m.s	début
de	P	de
boucle	N.C.f.s	boucle
;	PONCT.W	;
91	N.card.f.s	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Si	C.S	si
la	D.def.f.s	le
valeur	N.C.f.s	valeur
change	V.P.3.s	changer
durant	P	durant
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
de	P	de
l'	D.def.f.s	le
instruction	N.C.f.s	instruction
,	PONCT.W	,
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
ne	ADV.neg	ne
s'	CL.refl.3.f.s	se
arrêtera	V.F.3.s	arrêter
qu'	ADV.neg	qu'
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
de	P	de
l'	D.def.f.s	le
itération	N.C.f.s	itération
;	PONCT.W	;
Comme	P	comme
avec	P	avec
le	D.def.m.s	le
if	N.C.m.s	if
,	PONCT.W	,
PHP	N.P.m.s	Php
définit	V.P.3.s	définir
une	D.ind.f.s	un
syntaxe	N.C.f.s	syntaxe
simplifiée	A.qual.f.s	simplifié
,	PONCT.W	,
en	P	en
plus	ADV.-	plus
de	P	de
celle	PRO.dem.f.s	celui
héritée	VK.f.s	hériter
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	N.P.m.s	C
;	PONCT.W	;
92	D.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
while	N.C.m.s	while
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	P	à
Prototype	N.C.m.s	prototype
simplifié	A.qual.m.s	simplifié
:	PONCT.W	:
while	N.C.m.s	while
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
endwhile	N.C.m.s	endwhile
;	PONCT.W	;
93	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
compter	VW	compter
jusqu'	P	jusque
à	P	à
10	D.card.m.p	@card@
$i	N.C.m.p	çi
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$i	N.C.f.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
$i++	N.P.m.s	<unknown>
;	PONCT.W	;
}	P+D.def.m.s	c
Affiche	N.C.m.s	affiche
1	A.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
5	A.card.m.s	@card@
6	A.card.m.s	@card@
7	A.card.m.s	@card@
8	A.card.m.s	@card@
9	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

94	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
La	D.def.f.s	le
boucle	A.qual.f.s	boucle
do..while	N.C.m.s	dometle
ressemble	V.P.3.s	ressembler
beaucoup	ADV.-	beaucoup
à	P	à
la	D.def.f.s	le
boucle	N.C.f.s	boucle
while	N.C.m.s	while
;	PONCT.W	;
La	D.def.f.s	le
différence	N.C.f.s	différence
est	V.P.3.s	être
que	C.S	que
l'	D.def.f.s	le
expression	N.C.f.s	expression
est	V.P.3.s	être
testée	VK.f.s	tester
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
de	P	de
chaque	D.ind.f.s	chaque
itération	N.C.f.s	itération
au	P+D.def.m.s	au
lieu	N.C.m.s	lieu
du	P+D.def.m.s	du
début	N.C.m.s	début
;	PONCT.W	;
La	D.def.f.s	le
première	A.ord.f.s	premier
itération	N.C.f.s	itération
de	P	de
la	D.def.f.s	le
boucle	N.C.f.s	boucle
est	V.P.3.s	être
donc	ADV.-	donc
toujours	ADV.-	toujours
exécutée	VK.f.s	exécuter
;	PONCT.W	;
Il	CL.suj.3.m.s	il
n'	ADV.neg	ne
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
qu'	ADV.-	qu'
une	D.ind.f.s	un
syntaxe	N.C.f.s	syntaxe
possible	A.qual.f.s	possible
pour	P	pour
les	D.def.m.p	le
boucles	A.qual.m.p	boucle
do..while	N.C.m.s	dometle
qui	PRO.rel.f.s	qui
est	V.P.3.s	être
,	PONCT.W	,
elle	PPRO.3.f.s	elle
aussi	ADV.-	aussi
,	PONCT.W	,
héritée	VK.f.s	hériter
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	N.P.m.s	C
;	PONCT.W	;
95	N.card.f.s	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
do	D.card.f.p	<unknown>
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
la	D.def.f.s	le
première	A.ord.f.s	premier
fois	N.C.f.s	foi
et	C.C	et
ensuite	ADV.-	ensuite
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	N.C.m.s	}
while	N.C.m.s	while
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
;	PONCT.W	;
96	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
compter	VW	compter
jusqu'	P	jusque
à	P	à
10	D.card.m.p	@card@
$i	N.C.m.p	çi
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
do	N.C.m.s	do
{	ET	{
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
$i++	N.C.m.s	çiu
;	PONCT.W	;
}	ET	}
while	N.C.m.s	while
(	PONCT.W	(
$i	N.C.f.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
Affiche	V.P.3.s	afficher
1	A.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
5	A.card.m.s	@card@
6	A.card.m.s	@card@
7	A.card.m.s	@card@
8	A.card.m.s	@card@
9	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

97	N.card.f.s	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
La	D.def.f.s	le
boucle	A.qual.f.s	boucle
for	N.C.m.s	for
est	V.P.3.s	être
,	PONCT.W	,
en	P	en
PHP	N.P.m.s	Php
tout	ADV.-	tout
comme	C.C	comme
en	P	en
C	CL.suj.3.m.s	c
,	PONCT.W	,
la	D.def.f.s	le
boucle	N.C.f.s	boucle
la	D.def.f.s	le
plus	ADV.-	plus
complexe	A.qual.f.s	complexe
mais	C.C	mais
aussi	ADV.-	aussi
la	D.def.f.s	le
plus	ADV.-	plus
puissante	A.qual.f.s	puissant
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
fonctionne	V.P.3.s	fonctionner
comme	P	comme
la	D.def.f.s	le
boucle	A.qual.f.s	boucle
for	N.C.m.s	for
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	N.P.m.s	C
;	PONCT.W	;
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
for	N.C.m.s	for
(	PONCT.W	(
expression1	N.C.f.s	<unknown>
;	PONCT.W	;
condition	N.C.f.s	condition
;	PONCT.W	;
expression2	N.C.f.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	N.C.m.s	}
98	N.card.m.s	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
expression1	N.C.f.s	<unknown>
est	V.P.3.s	être
évaluée	VK.f.s	évaluer
(	PONCT.W	(
exécutée	VK.f.s	exécuter
)	PONCT.W	)
quoi	PRO.rel.f.s	quoi
qu'	PRO.rel.f.p	que
il	CL.suj.3.m.s	il
arrive	V.P.3.s	arriver
au	P+D.def.m.s	au
début	N.C.m.s	début
de	P	de
la	D.def.f.s	le
boucle	N.C.f.s	boucle
;	PONCT.W	;
Au	P+D.def.m.s	au
début	N.C.m.s	début
de	P	de
chaque	D.ind.f.s	chaque
itération	N.C.f.s	itération
,	PONCT.W	,
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
évaluée	VK.f.s	évaluer
;	PONCT.W	;
–	C.S	–
si	C.S	si
elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
,	PONCT.W	,
la	D.def.f.s	le
boucle	N.C.f.s	boucle
continue	A.qual.f.s	continu
et	C.C	et
les	D.def.f.p	le
instructions	N.C.f.p	instruction
sont	V.P.3.p	être
à	P	à
nouveau	A.qual.m.s	nouveau
exécutées	VK.f.p	exécuter
,	PONCT.W	,
–	P	à
si	C.S	si
elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
fausse	A.qual.f.s	faux
,	PONCT.W	,
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
de	P	de
la	D.def.f.s	le
boucle	N.C.f.s	boucle
s'	CL.refl.3.f.s	se
arrête	V.P.3.s	arrêter
.	PONCT.S	.

A	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
de	P	de
chaque	D.ind.f.s	chaque
itération	N.C.f.s	itération
,	PONCT.W	,
l'	D.def.f.s	le
expression2	N.C.f.s	<unknown>
est	V.P.3.s	être
évaluée	VK.f.s	évaluer
(	PONCT.W	(
exécutée	VK.f.s	exécuter
)	PONCT.W	)
;	PONCT.W	;
99	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
expressions/conditions	N.C.f.p	<unknown>
peuvent	V.P.3.p	pouvoir
éventuellement	ADV.-	éventuellement
être	VW	être
laissées	VK.f.p	laisser
vides	A.qual.f.p	vide
(	PONCT.W	(
->	D.card.f.p	<unknown>
attention	N.C.f.s	attention
aux	P+D.def.f.p	au
boucles	N.C.f.p	boucle
infinies	A.qual.f.p	infini
)	PONCT.W	)
;	PONCT.W	;
Comme	P	comme
avec	P	avec
le	D.def.m.s	le
if	N.C.m.s	if
et	C.C	et
le	D.def.m.s	le
while	N.C.m.s	while
,	PONCT.W	,
PHP	N.P.m.s	Php
définit	V.P.3.s	définir
une	D.ind.f.s	un
syntaxe	N.C.f.s	syntaxe
simplifiée	A.qual.f.s	simplifié
,	PONCT.W	,
en	P	en
plus	ADV.-	plus
de	P	de
celle	PRO.dem.f.s	celui
héritée	VK.f.s	hériter
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	N.P.m.s	C
;	PONCT.W	;
Prototype	N.C.m.s	prototype
simplifié	A.qual.m.s	simplifié
:	PONCT.W	:
for	N.C.m.s	for
(	PONCT.W	(
expression1	N.C.f.s	<unknown>
;	PONCT.W	;
condition	N.C.f.s	condition
;	PONCT.W	;
expression2	N.C.f.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
endfor	N.C.m.s	endfor
;	PONCT.W	;
100	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
compter	VW	compter
jusqu'	P	jusque
à	P	à
10	A.card.m.s	@card@
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
}	N.P.x.s	}
Ex2	N.C.m.s	<unknown>
:	PONCT.W	:
compter	VW	compter
jusqu'	P	jusque
à	P	à
10	A.card.m.s	@card@
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
;	PONCT.W	;
print	VK.m.s	prindre
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
,	PONCT.W	,
$i++	N.C.m.s	çiu
)	PONCT.W	)
;	PONCT.W	;
Ex3	N.P.x.s	Ex3
:	PONCT.W	:
compter	VW	compter
jusqu'	P	jusque
à	P	à
10	A.card.m.s	@card@
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
;	PONCT.W	;
print	V.J.3.s	prendre
$i++	N.C.m.s	çiu
)	PONCT.W	)
;	PONCT.W	;
Ces	D.dem.m.p	ce
3	A.card.m.p	@card@
exemples	N.C.m.p	exemple
affichent	V.P.3.p	afficher
1	D.card.m.p	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
5	A.card.m.s	@card@
6	A.card.m.s	@card@
7	A.card.m.p	@card@
8	A.card.m.s	@card@
9	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

101	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
PHP4	N.P.m.s	Php4
définit	V.P.3.s	définir
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
foreach	A.qual.f.s	foreach
,	PONCT.W	,
comme	P	comme
en	P	en
Perl	N.P.m.s	Perl
,	PONCT.W	,
pour	P	pour
réaliser	VW	réaliser
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
sur	P	sur
les	D.def.m.p	le
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
;	PONCT.W	;
En	P	en
PHP3	N.P.m.s	<unknown>
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
réaliser	VW	réaliser
l'	D.def.m.s	le
équivalent	N.C.m.s	équivalent
avec	P	avec
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
while	N.C.f.s	while
et	C.C	et
les	D.def.f.p	le
fonction	N.C.f.s	fonction
list()	V.P.3.s	listcer
et	C.C	et
each()	N.C.m.s	eachëë
que	PRO.rel.f.s	que
nous	CL.suj.1.m.p	nous
avons	V.P.1.p	avoir
vu	VK.m.s	voir
précédemment	ADV.-	précédemment
;	PONCT.W	;
Ex	N.C.m.s	ex
:	PONCT.W	:
afficher	VW	afficher
tous	A.ind.m.p	tous
les	D.def.m.p	le
arguments	N.C.m.p	argument
d'	P	de
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
POST	N.P.m.s	Post
while	N.C.m.s	while
(	PONCT.W	(
list($cle	N.C.m.s	listçäcle
,	PONCT.W	,
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
=	V.P.3.s	être
each($HTTP_POST_VARS))	N.P.x.s	Eachëëhttppostëvarsçë
{	P	à
echo	ET	echo
"	PONCT.W	"
$cle	A.qual.m.s	cle
=>	N.P.x.s	<unknown>
$valeur	N.C.f.s	çvaleur
,	PONCT.W	,
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
102	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Avec	P	avec
l'	D.def.f.s	le
instruction	N.C.f.s	instruction
foreach	A.qual.f.s	foreach
cette	D.dem.f.s	ce
boucle	N.C.f.s	boucle
devient	V.P.3.s	devenir
:	PONCT.W	:
foreach	ET	foreach
(	PONCT.W	(
$HTTP_POST_VARS	N.C.m.p	<unknown>
as	ET	as
$cle	N.C.m.s	ccle
=>	N.P.x.s	<unknown>
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
$cle	N.C.m.s	ccle
=>	N.P.x.s	<unknown>
$valeur	N.C.f.s	çvaleur
,	PONCT.W	,
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
Ou	C.C	ou
bien	ADV.-	bien
,	PONCT.W	,
si	C.S	si
l'	D.def.m.s	le
on	CL.suj.3.m.s	on
ne	ADV.neg	ne
veut	V.P.3.s	vouloir
récupérer	VW	récupérer
que	ADV.neg	que
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
:	PONCT.W	:
foreach	N.C.m.s	foreach
(	PONCT.W	(
$HTTP_POST_VARS	N.P.m.s	<unknown>
as	ADV.neg	as
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
$valeur	N.P.m.s	<unknown>
,	PONCT.W	,
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
103	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
instruction	N.C.f.s	instruction
break	A.qual.f.s	break
permet	V.P.3.s	permettre
de	P	de
sortir	VW	sortir
d'	P	de
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
à	P	à
n'	ADV.neg	ne
importe	V.P.3.s	importer
quel	D.excl.m.s	quel
moment	N.C.m.s	moment
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
compter	VW	compter
jusqu'	P	jusque
à	P	à
10	A.card.m.s	@card@
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
,	PONCT.W	,
,	PONCT.W	,
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	P	à
if	N.C.m.s	if
(	PONCT.W	(
$i	N.C.f.s	çi
>	N.C.m.s	>
10	A.card.m.s	@card@
)	PONCT.W	)
break	ET	break
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
Affiche	N.C.m.s	affiche
1	A.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
5	A.card.m.s	@card@
6	A.card.m.s	@card@
7	A.card.m.s	@card@
8	A.card.m.s	@card@
9	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

104	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
instruction	N.C.f.s	instruction
continue	V.P.3.s	continuer
permet	V.P.3.s	permettre
d'	P	de
ignorer	VW	ignorer
les	D.def.f.p	le
instructions	N.C.f.p	instruction
restantes	A.qual.f.p	restant
dans	P	dans
la	D.def.f.s	le
boucle	N.C.f.s	boucle
et	C.C	et
de	P	de
passer	VW	passer
directement	ADV.-	directement
à	P	à
l'	D.def.f.s	le
itération	N.C.f.s	itération
suivante	A.qual.f.s	suivant
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
compter	VW	compter
2	A.card.m.s	@card@
par	P	par
2	A.card.m.s	@card@
jusqu'	P	jusque
à	P	à
10	A.card.m.s	@card@
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
,	PONCT.W	,
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
,	PONCT.W	,
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	P	à
if	N.C.m.s	if
(	PONCT.W	(
$i	D.card.m.p	<unknown>
%	N.C.m.p	%
2	A.card.m.s	@card@
)	PONCT.W	)
continue	V.P.3.s	continuer
;	PONCT.W	;
#	P	à
$i	P	à
impaire	A.qual.m.s	impair
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
Affiche	N.C.m.s	affiche
2	A.card.m.s	@card@
4	A.card.m.s	@card@
6	A.card.m.s	@card@
8	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

105	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
instruction	N.C.f.s	instruction
switch	ET	switch
équivaut	V.P.3.s	équivaloir
à	P	à
une	D.ind.f.s	un
serie	N.C.f.s	serie
d'	P	de
instructions	N.C.f.p	instruction
if..elseif..elseif	A.qual.m.s	<unknown>
...	PONCT.W	<unknown>
.else	PRO.ind.f.s	<unknown>
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
utilisée	VK.f.s	utiliser
pour	P	pour
comparer	VW	comparer
la	D.def.f.s	le
même	A.qual.f.s	même
variable	N.C.f.s	variable
(	PONCT.W	(
ou	C.C	ou
expression	N.C.f.s	expression
)	PONCT.W	)
avec	P	avec
un	D.ind.m.s	un
grand	A.qual.m.s	grand
nombre	N.C.m.s	nombre
de	P	de
valeurs	N.C.f.p	valeur
différentes	A.qual.f.p	différent
et	C.C	et
d'	P	de
exécuter	VW	exécuter
différentes	A.qual.f.p	différent
parties	N.C.f.p	partie
de	P	de
code	N.C.m.s	code
suivant	P	suivant
la	D.def.f.s	le
valeur	N.C.f.s	valeur
à	P	à
laquelle	PRO.rel.f.s	lequel
elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
égale	A.qual.f.s	égal
;	PONCT.W	;
106	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
switch	ET	switch
(	PONCT.W	(
expression	N.C.f.s	expression
)	PONCT.W	)
{	P	à
case	N.C.f.s	case
resultat1	N.C.m.s	<unknown>
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
l'	D.def.f.s	le
expression	N.C.f.s	expression
vaut	V.P.3.s	valoir
resultat1	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
resultat2	N.C.m.s	<unknown>
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
l'	D.def.f.s	le
expression	N.C.f.s	expression
vaut	V.P.3.s	valoir
resultat2	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
break	N.C.m.s	break
;	PONCT.W	;
...	PONCT.W	<unknown>
default	N.C.m.s	default
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
en	P	en
dernier	A.qual.m.s	dernier
recours	N.C.m.s	recours
...	PONCT.W	<unknown>
}	N.C.m.s	}
107	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
instruction	N.C.f.s	instruction
switch	A.qual.f.s	switch
exécute	V.P.3.s	exécuter
chacune	PRO.ind.f.s	chacun
des	P+D.def.f.p	du
clauses	N.C.f.p	clause
dans	P	dans
l'	D.def.m.s	le
ordre	N.C.m.s	ordre
d'	P	de
écriture	N.C.f.s	écriture
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
exécutée	VK.f.s	exécuter
ligne	V.P.3.s	ligner
par	P	par
ligne	N.C.f.s	ligne
;	PONCT.W	;
Aucun	D.neg.m.s	aucun
code	N.C.m.s	code
n'	ADV.neg	ne
est	V.P.3.s	être
exécuté	VK.m.s	exécuter
jusqu'	P	jusque
à	P	à
ce	PRO.dem.m.s	ce
que	C.S	que
le	D.def.m.s	le
premier	A.ord.m.s	premier
case	N.C.m.s	case
soit	V.S.3.s	être
vérifié	VK.m.s	vérifier
;	PONCT.W	;
108	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Lorsqu'	C.S	lorsque
il	CL.suj.3.m.s	il
trouve	V.P.3.s	trouver
le	D.def.m.s	le
premier	A.ord.m.s	premier
case	N.C.m.s	case
vérifié	VK.m.s	vérifier
,	PONCT.W	,
PHP	N.P.m.s	Php
exécute	V.P.3.s	exécuter
alors	ADV.-	alors
les	D.def.f.p	le
instructions	N.C.f.p	instruction
correspondantes	A.qual.f.p	correspondant
et	C.C	et
continue	V.P.3.s	continuer
jusqu'	P	jusque
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
du	P+D.def.m.s	du
bloc	N.C.m.s	bloc
switch	A.qual.m.s	switch
;	PONCT.W	;
Pour	P	pour
reproduire	VW	reproduire
le	D.def.m.s	le
fonctionnement	N.C.m.s	fonctionnement
d'	P	de
un	D.ind.m.s	un
if..elseif..elseif	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
.else	PRO.ind.f.s	<unknown>
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
terminer	VW	terminer
tous	A.ind.f.p	tous
les	D.def.f.p	le
cases	N.C.f.p	case
par	P	par
des	D.ind.m.p	du
break	N.C.m.p	break
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
définir	VW	définir
un	D.ind.m.s	un
case	N.C.m.s	case
exécuté	VK.m.s	exécuter
par	P	par
défaut	N.C.m.s	défaut
(	PONCT.W	(
équivalent	N.C.m.s	équivalent
au	P+D.def.m.s	au
else	ET	else
)	PONCT.W	)
grâce	N.C.f.s	grâce
à	P	à
default	N.C.m.s	default
;	PONCT.W	;
109	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
switch	ET	switch
(	PONCT.W	(
$type	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
case	N.C.f.s	case
"	PONCT.W	"
Femme	ET	femme
"	PONCT.W	"
:	PONCT.W	:
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
Madame	N.P.m.s	Madame
"	PONCT.W	"
;	PONCT.W	;
break	ET	break
;	PONCT.W	;
case	N.C.f.s	case
"	PONCT.W	"
Homme	ET	homme
"	PONCT.W	"
:	PONCT.W	:
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
Monsieur	N.P.m.s	Monsieur
"	PONCT.W	"
;	PONCT.W	;
break	ET	break
;	PONCT.W	;
default	ET	default
:	PONCT.W	:
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
êtes	V.P.2.p	être
bizarre	A.qual.m.s	bizarre
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
110	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Inclusions	N.C.f.p	inclusion
La	D.def.f.s	le
fonction	N.C.f.s	fonction
require()	V.P.3.s	requirecer
se	CL.refl.3.f.s	se
substitue	V.P.3.s	substituer
elle-même	PRO.refl.f.s	elle-même
avec	P	avec
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
spécifié	VK.m.s	spécifier
en	P	en
argument	N.C.m.s	argument
;	PONCT.W	;
La	D.def.f.s	le
substitution	N.C.f.s	substitution
s'	CL.refl.3.f.s	se
opère	V.P.3.s	opérer
avant	P	avant
l'	D.def.f.s	le
interprétation	N.C.f.s	interprétation
du	P+D.def.m.s	du
code	N.C.m.s	code
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
ressemble	V.P.3.s	ressembler
à	P	à
peu	ADV.-	peu
près	ADV.-	près
au	P+D.def.m.s	au
#include	N.C.m.s	çinclude
du	P+D.def.m.s	du
C	N.P.m.s	C
;	PONCT.W	;
Si	C.S	si
on	CL.suj.3.m.s	on
l'	CL.obj.3.f.s	la
utilise	V.P.3.s	utiliser
au	P+D.def.m.s	au
sein	N.C.m.s	sein
d'	P	de
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
,	PONCT.W	,
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
fichier	N.C.m.s	fichier
tel	A.qual.m.s	tel
qu'	C.S	que
il	CL.suj.3.m.s	il
était	V.I.3.s	être
à	P	à
la	D.def.f.s	le
première	A.ord.f.s	premier
itération	N.C.f.s	itération
qui	PRO.rel.f.s	qui
sera	V.F.3.s	être
réutilisé	VK.m.s	réutiliser
à	P	à
chaque	D.ind.f.s	chaque
itération	N.C.f.s	itération
(	PONCT.W	(
même	ADV.-	même
s'	C.S	si
il	CL.suj.3.m.s	il
a	V.P.3.s	avoir
changé	VK.m.s	changer
entre	P	entre
temps	N.C.m.s	temps
)	PONCT.W	)
;	PONCT.W	;
De	P	de
plus	ADV.-	plus
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
déconseillé	VK.m.s	déconseiller
d'	P	de
utiliser	VW	utiliser
require()	VW	<unknown>
avec	P	avec
un	D.ind.m.s	un
nom	N.C.m.s	nom
de	P	de
fichier	N.C.m.s	fichier
dynamique	A.qual.m.s	dynamique
(	PONCT.W	(
contenant	VG	contenir
une	D.ind.f.s	un
variable	N.C.f.s	variable
)	PONCT.W	)
;	PONCT.W	;
111	PRO.card.f.p	@card@
Les	D.def.f.p	le
structures	N.C.f.p	structure
de	P	de
contrôle	N.C.m.s	contrôle
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
La	D.def.f.s	le
fonction	N.C.f.s	fonction
include()	N.C.m.s	includeçà
inclut	V.P.3.s	inclure
et	C.C	et
évalue	V.P.3.s	évaluer
le	D.def.m.s	le
fichier	N.C.m.s	fichier
spécifié	VK.m.s	spécifier
en	P	en
argument	N.C.m.s	argument
;	PONCT.W	;
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
fait	VK.m.s	faire
à	P	à
chaque	D.ind.f.s	chaque
fois	N.C.f.s	foi
que	C.S	que
la	D.def.f.s	le
fonction	N.C.f.s	fonction
est	V.P.3.s	être
rencontrée	VK.f.s	rencontrer
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
donc	ADV.-	donc
utiliser	VW	utiliser
cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
au	P+D.def.m.s	au
sein	N.C.m.s	sein
d'	P	de
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
pour	P	pour
inclure	VW	inclure
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
différent	A.qual.m.s	différent
à	P	à
chaque	D.ind.f.s	chaque
fois	N.C.f.s	foi
par	P	par
exemple	N.C.m.s	exemple
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
include("toto_$i")	N.C.m.s	includeçtotoë
;	PONCT.W	;
)	PONCT.W	)
.	PONCT.S	.

112	A.card.m.s	@card@
Section	N.C.f.s	section
3	A.card.f.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Fonctions	N.C.f.p	fonction
113	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Présentation	N.C.f.s	présentation
des	P+D.def.f.p	du
fonctions	N.C.f.p	fonction
PHP	N.P.m.s	Php
;	PONCT.W	;
Les	D.def.f.p	le
valeurs	N.C.f.p	valeur
de	P	de
retour	N.C.m.s	retour
;	PONCT.W	;
Les	D.def.m.p	le
arguments	N.C.m.p	argument
.	PONCT.S	.

114	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Présentation	N.C.f.s	présentation
des	P+D.def.f.p	du
fonctions	N.C.f.p	fonction
PHP	N.P.m.s	Php
Une	D.ind.f.s	un
fonction	N.C.f.s	fonction
peut	V.P.3.s	pouvoir
être	VW	être
définie	VK.f.s	définir
en	P	en
utilisant	VG	utiliser
la	D.def.f.s	le
syntaxe	N.C.f.s	syntaxe
suivante	A.qual.f.s	suivant
:	PONCT.W	:
function	N.C.f.s	function
ma_fonction	N.C.f.s	maëfonction
(	PONCT.W	(
$arg_1	N.P.m.s	<unknown>
,	PONCT.W	,
$arg_2	N.P.m.s	<unknown>
,	PONCT.W	,
...	PONCT.W	<unknown>
,	PONCT.W	,
$arg_n	N.P.m.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.m.p	#
Corps	N.C.m.s	corps
de	P	de
ma	D.poss.f.s	mon
fonction	N.C.f.s	fonction
...	PONCT.W	<unknown>
return	N.C.m.s	return
$valeur_de_retour	N.P.m.s	<unknown>
;	PONCT.W	;
}	N.P.m.s	}
Tout	D.ind.m.s	tout
code	N.C.m.s	code
PHP	N.C.m.s	php
correct	A.qual.m.s	correct
syntaxiquement	ADV.-	syntaxiquement
peut	V.P.3.s	pouvoir
apparaître	VW	apparaître
dans	P	dans
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
et	C.C	et
dans	P	dans
une	D.ind.f.s	un
définition	N.C.f.s	définition
de	P	de
classe	N.C.f.s	classe
;	PONCT.W	;
En	P	en
PHP3	N.P.x.s	<unknown>
toute	D.ind.f.s	tout
fonction	N.C.f.s	fonction
doit	V.P.3.s	devoir
être	VW	être
préalablement	ADV.-	préalablement
définie	VK.f.s	définir
avant	P	avant
d'	P	de
être	VW	être
utilisée	VK.f.s	utiliser
(	PONCT.W	(
idem	A.ord.m.s	<unknown>
langage	N.C.m.s	langage
C	PONCT.W	C
)	PONCT.W	)
.	PONCT.S	.

Elle	CL.suj.3.f.s	elle
peut	V.P.3.s	pouvoir
être	VW	être
définie	VK.f.s	définir
n'	ADV.neg	ne
importe	V.P.3.s	importer
où	PRO.rel.f.s	où
en	P	en
PHP4	N.P.m.s	Php4
.	PONCT.S	.

115	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
valeurs	N.C.f.p	valeur
de	P	de
retour	N.C.m.s	retour
Les	D.def.f.p	le
valeurs	N.C.f.p	valeur
sont	V.P.3.p	être
renvoyées	VK.f.p	renvoyer
en	P	en
utilisant	VG	utiliser
une	D.ind.f.s	un
instruction	N.C.f.s	instruction
de	P	de
retour	N.C.m.s	retour
optionnelle	A.qual.f.s	optionnel
;	PONCT.W	;
Tous	A.ind.m.p	tous
les	D.def.m.p	le
types	N.C.m.p	type
de	P	de
variables	N.C.f.p	variable
peuvent	V.P.3.p	pouvoir
être	VW	être
renvoyés	VK.m.p	renvoyer
(	PONCT.W	(
tableaux	N.C.m.p	tableau
et	C.C	et
objets	N.C.m.p	objet
compris	VK.m.p	comprendre
)	PONCT.W	)
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
carre($nombre)	N.C.m.s	carreçnombreë
{	P	à
return	N.C.m.s	return
$nombre	A.qual.m.s	änombre
*	N.C.m.s	*
$nombre	N.C.m.s	änombre
;	PONCT.W	;
}	ET	}
echo	ET	echo
carre(3)	N.C.m.s	<unknown>
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
la	D.def.f.s	le
valeur	N.C.f.s	valeur
9	D.card.f.p	@card@
116	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
On	CL.suj.3.m.s	on
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
pas	ADV.neg	pas
renvoyer	VW	renvoyer
plusieurs	D.ind.f.p	plusieurs
valeurs	N.C.f.p	valeur
en	P	en
même	A.qual.m.s	même
temps	N.C.m.s	temps
mais	C.C	mais
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
obtenir	VW	obtenir
un	D.ind.m.s	un
résultat	N.C.m.s	résultat
identique	A.qual.m.s	identique
en	P	en
renvoyant	VG	renvoyer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
couleurs()	N.C.m.s	couleursçë
{	P	à
return	N.C.m.s	return
array("Coeur	N.C.m.s	arrayççcœur
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
Pique	N.P.m.s	Pique
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
Trèfle	N.C.m.s	trèfle
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
Carreau	N.P.m.s	Carreau
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
}	D.card.m.s	}
list($c1	N.C.m.s	<unknown>
,	PONCT.W	,
$c2	N.P.f.s	<unknown>
,	PONCT.W	,
$c3	N.P.f.s	<unknown>
,	PONCT.W	,
$c4	N.P.f.s	<unknown>
)	PONCT.W	)
=	V.P.3.s	être
couleurs()	N.C.m.s	couleursçë
;	PONCT.W	;
117	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
PHP4	N.P.m.s	Php4
permet	V.P.3.s	permettre
également	ADV.-	également
le	D.def.m.s	le
retour	N.C.m.s	retour
de	P	de
fonction	N.C.f.s	fonction
par	P	par
référence	N.C.f.s	référence
;	PONCT.W	;
Ce	D.dem.m.s	ce
mécanisme	N.C.m.s	mécanisme
est	V.P.3.s	être
utile	A.qual.m.s	utile
lorsque	C.S	lorsque
l'	D.def.m.s	le
on	CL.suj.3.m.s	on
cherche	V.P.3.s	chercher
à	P	à
utiliser	VW	utiliser
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
pour	P	pour
trouver	VW	trouver
une	D.ind.f.s	un
variable	N.C.f.s	variable
que	PRO.rel.f.s	que
l'	D.def.m.s	le
on	CL.suj.3.m.s	on
veux	V.S.3.s	voir
lier	VW	lier
;	PONCT.W	;
A	P	à
la	D.def.f.s	le
différence	N.C.f.s	différence
du	P+D.def.m.s	du
passage	N.C.m.s	passage
par	P	par
référence	N.C.f.s	référence
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
utiliser	VW	utiliser
un	D.ind.m.s	un
&	PONCT.W	&
à	P	à
deux	D.card.m.p	deux
endroits	N.C.m.p	endroit
:	PONCT.W	:
–	N.C.m.s	–
pour	P	pour
indiquer	VW	indiquer
que	C.S	que
l'	D.def.f.s	le
on	CL.suj.3.m.s	on
retourne	V.P.3.s	retourner
une	D.ind.f.s	un
référence	N.C.f.s	référence
(	PONCT.W	(
et	C.C	et
non	ADV.neg	non
une	D.ind.f.s	un
copie	N.C.f.s	copie
comme	P	comme
à	P	à
l'	D.def.f.s	le
habitude	N.C.f.s	habitude
)	PONCT.W	)
,	PONCT.W	,
mais	C.C	mais
aussi	ADV.-	aussi
–	A.qual.m.s	–
pour	P	pour
indiquer	VW	indiquer
qu'	C.S	que
une	D.ind.f.s	un
liaison	N.C.f.s	liaison
à	P	à
une	D.ind.f.s	un
référence	N.C.f.s	référence
et	C.C	et
non	ADV.neg	non
un	D.ind.m.s	un
simple	A.qual.m.s	simple
assignement	N.C.m.s	assignement
de	P	de
variable	N.C.f.s	variable
doit	V.P.3.s	devoir
avoir	VW	avoir
lieu	N.C.m.s	lieu
avec	P	avec
la	D.def.f.s	le
variable	N.C.f.s	variable
de	P	de
retour	N.C.m.s	retour
.	PONCT.S	.

118	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
&	PONCT.W	&
trouve_variable	N.C.m.s	trouveëvariable
(	PONCT.W	(
$param	N.P.m.s	<unknown>
)	PONCT.W	)
{	N.C.f.s	{
#	N.C.m.s	#
...	PONCT.W	<unknown>
recherche	V.P.3.s	rechercher
de	P	de
la	D.def.f.s	le
variable	A.qual.m.s	variable
$toto	N.P.m.s	<unknown>
...	PONCT.W	<unknown>
return	N.C.m.s	return
$toto	N.P.m.s	<unknown>
;	PONCT.W	;
}	P	à
$titi	N.C.m.s	<unknown>
=	PONCT.W	=
&	PONCT.W	&
trouve_variable($tata)	N.C.m.s	trouveëvariableçat
;	PONCT.W	;
$titi->x	N.P.m.s	<unknown>
=	V.P.3.s	être
2	N.card.m.s	@card@
;	PONCT.W	;
Les	D.def.f.p	le
propriétés	N.C.f.p	propriété
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
retourné	VK.m.s	retourner
par	P	par
la	D.def.f.s	le
fonction	N.C.f.s	fonction
trouve_variable()	N.C.m.s	trouveëvariableçà
sont	V.P.3.p	être
liées	VK.f.p	lier
à	P	à
$titi	N.P.x.s	<unknown>
.	PONCT.S	.

Il	CL.suj.3.m.s	il
ne	ADV.neg	ne
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
pas	ADV.neg	pas
d'	P	de
une	D.ind.f.s	un
copie	N.C.f.s	copie
de	P	de
$toto	N.P.m.s	<unknown>
.	PONCT.S	.

119	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
arguments	N.C.m.p	argument
Des	P+D.def.f.p	du
informations	N.C.f.p	information
peuvent	V.P.3.p	pouvoir
être	VW	être
passées	VK.f.p	passer
à	P	à
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
en	P	en
utilisant	VG	utiliser
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
d'	P	de
arguments	N.C.m.p	argument
dont	PRO.rel.m.p	dont
chaque	D.ind.m.s	chaque
élément	N.C.m.s	élément
est	V.P.3.s	être
séparé	VK.m.s	séparer
par	P	par
une	D.ind.f.s	un
virgule	N.C.f.s	virgule
;	PONCT.W	;
Un	D.ind.m.s	un
élément	N.C.m.s	élément
peut	V.P.3.s	pouvoir
être	VW	être
une	D.ind.f.s	un
variable	N.C.f.s	variable
ou	C.C	ou
une	D.ind.f.s	un
constante	N.C.f.s	constante
;	PONCT.W	;
PHP	N.C.m.s	php
supporte	V.P.3.s	supporter
:	PONCT.W	:
–	P	à
le	D.def.m.s	le
passage	N.C.m.s	passage
d'	P	de
arguments	N.C.m.p	argument
par	P	par
valeur	N.C.f.s	valeur
(	PONCT.W	(
méthode	N.C.f.s	méthode
par	P	par
défaut	N.C.m.s	défaut
)	PONCT.W	)
,	PONCT.W	,
–	P	à
le	D.def.m.s	le
passage	N.C.m.s	passage
d'	P	de
arguments	N.C.m.p	argument
par	P	par
référence	N.C.f.s	référence
,	PONCT.W	,
et	C.C	et
–	P	à
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
par	P	par
défaut	N.C.m.s	défaut
des	P+D.def.m.p	du
arguments	N.C.m.p	argument
.	PONCT.S	.

Une	D.ind.f.s	un
liste	N.C.f.s	liste
d'	P	de
arguments	N.C.m.p	argument
dont	PRO.rel.f.s	dont
le	D.def.m.s	le
nombre	N.C.m.s	nombre
est	V.P.3.s	être
variable	A.qual.m.s	variable
ne	ADV.neg	ne
fonctionne	V.P.3.s	fonctionner
pas	ADV.neg	pas
en	P	en
PHP	N.P.m.s	Php
mais	C.C	mais
un	D.ind.m.s	un
résultat	N.C.m.s	résultat
similaire	A.qual.m.s	similaire
peut	V.P.3.s	pouvoir
être	VW	être
obtenu	VK.m.s	obtenir
en	P	en
utilisant	VG	utiliser
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
;	PONCT.W	;
120	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Passage	N.C.m.s	passage
d'	P	de
arguments	N.C.m.p	argument
par	P	par
valeur	N.C.f.s	valeur
:	PONCT.W	:
C'	CL.suj.3.m.s	ce
est	V.P.3.s	être
la	D.def.f.s	le
méthode	N.C.f.s	méthode
par	P	par
défaut	N.C.m.s	défaut
;	PONCT.W	;
Les	D.def.f.p	le
variables	N.C.f.p	variable
ne	ADV.neg	ne
sont	V.P.3.p	être
pas	ADV.neg	pas
affectées	VK.f.p	affecter
par	P	par
des	D.ind.m.p	du
changements	N.C.m.p	changement
au	P+D.def.m.s	au
sein	N.C.m.s	sein
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
donc	ADV.-	donc
changer	VW	changer
la	D.def.f.s	le
valeur	N.C.f.s	valeur
des	P+D.def.m.p	du
arguments	N.C.m.p	argument
au	P+D.def.m.s	au
sein	N.C.m.s	sein
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
sans	P	sans
que	C.S	que
ceci	PRO.dem.m.s	ceci
ait	V.S.3.s	avoir
des	D.ind.f.p	du
répercussions	N.C.f.p	répercussion
à	P	à
l'	D.def.m.s	le
extérieur	N.C.m.s	extérieur
de	P	de
celle	PRO.dem.f.s	celui
-ci	ADV.-	-ci
;	PONCT.W	;
121	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
ajoute_deux($nombre)	N.C.m.s	ajouteëdeuxç-nombre
{	P+D.def.m.s	c
$nombre	N.C.m.s	änombre
+=	P	uà
2	A.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
$nombre	N.C.m.s	änombre
;	PONCT.W	;
}	ET	}
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
3	A.card.m.s	@card@
;	PONCT.W	;
ajoute_deux($toto)	N.C.m.s	ajouteëdeuxçëtoë
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
5	D.card.m.p	@card@
echo	ET	echo
$toto	N.P.m.s	<unknown>
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
3	D.card.f.p	@card@
122	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Passage	N.P.m.s	Passage
d'	P	de
arguments	N.C.m.p	argument
par	P	par
référence	N.C.f.s	référence
:	PONCT.W	:
Les	D.def.f.p	le
variables	N.C.f.p	variable
sont	V.P.3.p	être
affectées	VK.f.p	affecter
par	P	par
des	D.ind.m.p	du
changements	N.C.m.p	changement
au	P+D.def.m.s	au
sein	N.C.m.s	sein
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
;	PONCT.W	;
Deux	D.card.f.p	deux
possibilités	N.C.f.p	possibilité
:	PONCT.W	:
–	N.C.m.s	–
de	P	de
façon	N.C.f.s	façon
permanente	A.qual.f.s	permanent
en	P	en
ajoutant	VG	ajouter
un	D.ind.m.s	un
&	PONCT.W	&
devant	P	devant
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
dans	P	dans
la	D.def.f.s	le
définition	N.C.f.s	définition
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
,	PONCT.W	,
ou	C.C	ou
–	N.C.m.s	–
de	P	de
façon	N.C.f.s	façon
ponctuelle	A.qual.f.s	ponctuel
en	P	en
ajoutant	VG	ajouter
un	D.ind.m.s	un
&	PONCT.W	&
devant	P	devant
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
lors	N.C.f.s	lors
de	P	de
l'	D.def.m.s	le
appel	N.C.m.s	appel
à	P	à
la	D.def.f.s	le
fonction	N.C.f.s	fonction
.	PONCT.S	.

123	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
retranche_deux(	N.P.m.s	<unknown>
&	PONCT.W	&
$nombre	N.C.m.s	änombre
)	PONCT.W	)
{	P+D.def.m.s	c
$nombre	N.C.m.s	änombre
-=	PONCT.W	<unknown>
2	A.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
$nombre	N.C.m.s	änombre
;	PONCT.W	;
}	P	à
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
3	A.card.m.s	@card@
;	PONCT.W	;
ajoute_deux(	N.C.m.s	ajouteëdeuxà
&	PONCT.W	&
$toto	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
5	D.card.m.p	@card@
echo	ET	echo
$toto	N.P.m.s	<unknown>
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
5	A.card.m.s	@card@
retranche_deux($toto)	N.C.m.p	retrancheëdeuxotoë
;	PONCT.W	;
#	N.C.f.s	#
affiche	V.P.3.s	afficher
3	D.card.m.p	@card@
echo	ET	echo
$toto	N.P.m.s	<unknown>
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
3	D.card.f.p	@card@
124	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Valeurs	N.C.f.p	valeur
par	P	par
défaut	N.C.m.s	défaut
des	P+D.def.m.p	du
arguments	N.C.m.p	argument
:	PONCT.W	:
PHP	N.P.m.s	Php
permet	V.P.3.s	permettre
,	PONCT.W	,
comme	P	comme
en	P	en
C++	N.P.f.s	Can
,	PONCT.W	,
de	P	de
spécifier	VW	spécifier
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
par	P	par
défaut	N.C.m.s	défaut
pour	P	pour
les	D.def.m.p	le
arguments	N.C.m.p	argument
de	P	de
type	N.C.m.s	type
scalaire	A.qual.m.s	scalaire
;	PONCT.W	;
Il	CL.suj.3.m.s	il
suffit	V.P.3.s	suffire
de	P	de
spécifier	VW	spécifier
la	D.def.f.s	le
valeur	N.C.f.s	valeur
par	P	par
défaut	N.C.m.s	défaut
avec	P	avec
un	D.ind.m.s	un
=	N.C.m.s	=
dans	P	dans
la	D.def.f.s	le
déclaration	N.C.f.s	déclaration
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
;	PONCT.W	;
Cette	D.dem.f.s	ce
valeur	N.C.f.s	valeur
doit	V.P.3.s	devoir
être	VW	être
une	D.ind.f.s	un
constante	N.C.f.s	constante
(	PONCT.W	(
pas	ADV.neg	pas
de	P	de
variables	N.C.f.p	variable
ni	C.C	ni
d'	P	de
attributs	N.C.m.p	attribut
de	P	de
classes	N.C.f.p	classe
)	PONCT.W	)
et	C.C	et
les	D.def.m.p	le
arguments	N.C.m.p	argument
par	P	par
défaut	N.C.m.s	défaut
doivent	V.P.3.p	devoir
être	VW	être
les	D.def.m.p	le
derniers	N.C.m.p	dernier
dans	P	dans
la	D.def.f.s	le
liste	N.C.f.s	liste
;	PONCT.W	;
125	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
annotation($type	N.C.f.s	annotationç-type
=	PONCT.W	=
"	PONCT.W	"
assez	ADV.-	assez
bien	ADV.-	bien
"	PONCT.W	"
)	PONCT.W	)
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
Vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
$type	N.C.m.s	<unknown>
travaillé	VK.m.s	travailler
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
annotation("mal")	N.C.f.p	annotationçmalçë
;	PONCT.W	;
#	D.card.f.s	#
affiche	V.P.3.s	afficher
Vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
mal	ADV.-	mal
travaillé	VK.m.s	travailler
annotation()	N.C.f.p	<unknown>
;	PONCT.W	;
#	N.P.x.s	#
affiche	V.P.3.s	afficher
Vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
assez	ADV.-	assez
bien	ADV.-	bien
travaillé	VK.m.s	travailler
126	D.card.f.p	@card@
Section	N.C.f.s	section
4	A.card.f.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
127	A.card.f.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Rappels	N.C.m.p	rappel
sur	P	sur
la	D.def.f.s	le
programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
;	PONCT.W	;
Les	D.def.f.p	le
classes	N.C.f.p	classe
en	P	en
PHP	N.P.m.s	Php
;	PONCT.W	;
Les	D.def.m.p	le
objets	N.C.m.p	objet
en	P	en
PHP	N.P.m.s	Php
;	PONCT.W	;
Particularités	N.C.f.p	particularité
de	P	de
PHP	N.P.m.s	Php
.	PONCT.S	.

128	A.card.m.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Rappels	N.C.m.p	rappel
sur	P	sur
la	D.def.f.s	le
programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
POO	N.P.m.s	Poo
->	PONCT.W	<unknown>
raisonner	VW	raisonner
en	P	en
termes	N.C.m.p	terme
de	P	de
fonctionnalités	N.C.f.p	fonctionnalité
et	C.C	et
de	P	de
propriétés	N.C.f.p	propriété
et	C.C	et
non	ADV.neg	non
en	P	en
terme	N.C.m.s	terme
de	P	de
traitements	N.C.m.p	traitement
;	PONCT.W	;
L	D.def.f.s	l
’	P	à
encapsulation	N.C.f.s	encapsulation
:	PONCT.W	:
L'	D.def.m.s	le
objet	N.C.m.s	objet
représente	V.P.3.s	représenter
une	D.ind.f.s	un
abstraction	N.C.f.s	abstraction
d'	P	de
une	D.ind.f.s	un
entité	N.C.f.s	entité
abstraite	A.qual.f.s	abstrait
ou	C.C	ou
concrète	A.qual.f.s	concret
pour	P	pour
laquelle	PRO.rel.f.s	lequel
il	CL.suj.3.m.s	il
regroupe	V.P.3.s	regrouper
en	P	en
une	D.ind.f.s	un
même	A.ind.f.s	même
structure	N.C.f.s	structure
les	D.def.f.p	le
données	N.C.f.p	donnée
et	C.C	et
les	D.def.m.p	le
traitements	N.C.m.p	traitement
;	PONCT.W	;
Un	D.ind.m.s	un
objet	N.C.m.s	objet
possède	V.P.3.s	posséder
des	D.ind.f.p	du
caractéristiques	N.C.f.p	caractéristique
et	C.C	et
des	P+D.def.f.p	du
fonctionnalités	N.C.f.p	fonctionnalité
et	C.C	et
on	CL.suj.3.m.s	on
l'	CL.obj.3.m.s	le
utilise	V.P.3.s	utiliser
sans	P	sans
savoir	VW	savoir
comment	ADV.int	comment
elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
implémentées	VK.f.p	implémenter
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
un	D.ind.m.s	un
téléphone	N.C.m.s	téléphone
)	PONCT.W	)
;	PONCT.W	;
129	D.card.f.p	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.f.p	le
caractéristiques/fonctionnalités	N.C.f.p	caractéristiquestfonctionnalité
non	ADV.neg	non
utiles	A.qual.f.p	utile
pour	P	pour
la	D.def.f.s	le
manipulation	N.C.f.s	manipulation
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
mais	C.C	mais
utiles	A.qual.f.p	utile
à	P	à
son	D.poss.m.s	son
fonctionnement	N.C.m.s	fonctionnement
sont	V.P.3.p	être
masquées	VK.f.p	masquer
à	P	à
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
les	D.def.m.p	le
composants	N.C.m.p	composant
internes	A.qual.m.p	interne
du	P+D.def.m.s	du
téléphone	N.C.m.s	téléphone
)	PONCT.W	)
;	PONCT.W	;
L	D.def.m.s	l
’	N.C.m.s	’
héritage	N.C.m.s	héritage
:	PONCT.W	:
Un	D.ind.m.s	un
objet	N.C.m.s	objet
peut	V.P.3.s	pouvoir
dériver	VW	dériver
d'	P	de
un	D.ind.m.s	un
autre	A.ind.m.s	autre
objet	N.C.m.s	objet
et	C.C	et
posséder	VW	posséder
des	D.ind.f.p	du
caractéristiques/fonctionnalités	N.C.f.p	caractéristiquestfonctionnalité
supplémentaires	A.qual.f.p	supplémentaire
tout	ADV.-	tout
en	P	en
héritant	VG	hériter
des	P+D.def.f.p	du
caractéristiques/fonctionalités	N.C.f.p	caractéristiquenctionalité
de	P	de
son	D.poss.m.s	son
aïeul	A.qual.m.s	aïeul
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
un	D.ind.m.s	un
téléphone	N.C.m.s	téléphone
sans	P	sans
fils	N.C.m.s	fil
est	V.P.3.s	être
un	D.ind.m.s	un
téléphone	N.C.m.s	téléphone
un	D.ind.m.s	un
peu	ADV.-	peu
particulier	A.qual.m.s	particulier
)	PONCT.W	)
;	PONCT.W	;
130	D.card.f.p	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Le	D.def.m.s	le
polymorphisme	N.C.m.s	polymorphisme
:	PONCT.W	:
Lorsqu'	C.S	lorsque
on	CL.suj.3.m.s	on
invoque	V.P.3.s	invoquer
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
,	PONCT.W	,
le	D.def.m.s	le
programme	N.C.m.s	programme
saura	V.F.3.s	savoir
retrouver	VW	retrouver
la	D.def.f.s	le
méthode	N.C.f.s	méthode
parmis	P	parmis
celles	PRO.dem.f.p	celui
des	P+D.def.m.p	du
aïeux	N.C.m.p	aïeux
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
si	C.S	si
celle	PRO.dem.f.s	celui
-ci	CL.suj.3.m.s	ci
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
explicitement	ADV.-	explicitement
définie	VK.f.s	définir
pour	P	pour
lui	PPRO.3.m.s	lui
mais	C.C	mais
qu'	C.S	que
il	CL.suj.3.m.s	il
en	CL.obj.3.m.s	en
a	V.P.3.s	avoir
hérité	VK.m.s	hériter
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
la	D.def.f.s	le
méthode	N.C.f.s	méthode
"	PONCT.W	"
décrocher	VW	décrocher
le	D.def.m.s	le
téléphone	N.C.m.s	téléphone
"	PONCT.W	"
pour	P	pour
un	D.ind.m.s	un
sans	P	sans
fils	N.C.m.s	fil
)	PONCT.W	)
;	PONCT.W	;
131	A.card.f.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
A	P	à
la	D.def.f.s	le
création	N.C.f.s	création
(	PONCT.W	(
instanciation	N.C.f.s	instanciation
)	PONCT.W	)
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
,	PONCT.W	,
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
(	PONCT.W	(
qui	PRO.rel.f.s	qui
porte	V.P.3.s	porter
généralement	ADV.-	généralement
le	D.def.m.s	le
même	A.ind.m.s	même
nom	N.C.m.s	nom
que	C.S	que
la	D.def.f.s	le
classe	N.C.f.s	classe
)	PONCT.W	)
est	V.P.3.s	être
appellée	VK.f.s	appeller
automatiquement	ADV.-	automatiquement
:	PONCT.W	:
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
;	PONCT.W	;
Parfois	ADV.-	parfois
,	PONCT.W	,
à	P	à
la	D.def.f.s	le
destruction	N.C.f.s	destruction
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
,	PONCT.W	,
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
(	PONCT.W	(
qui	PRO.rel.f.s	qui
porte	V.P.3.s	porter
généralement	ADV.-	généralement
le	D.def.m.s	le
même	A.ind.m.s	même
nom	N.C.m.s	nom
que	C.S	que
la	D.def.f.s	le
classe	N.C.f.s	classe
précédé	VK.m.s	précéder
d'	P	de
un	D.ind.m.s	un
˜	N.C.m.s	˜
)	PONCT.W	)
est	V.P.3.s	être
appellée	VK.f.s	appeller
automatiquement	ADV.-	automatiquement
:	PONCT.W	:
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
destructeur	N.C.m.s	destructeur
;	PONCT.W	;
132	A.card.m.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Une	D.ind.f.s	un
classe	N.C.f.s	classe
est	V.P.3.s	être
une	D.ind.f.s	un
collection	N.C.f.s	collection
de	P	de
variables	N.C.f.p	variable
(	PONCT.W	(
attributs	N.C.m.p	attribut
)	PONCT.W	)
et	C.C	et
de	P	de
fonctions	N.C.f.p	fonction
(	PONCT.W	(
méthodes	N.C.f.p	méthode
)	PONCT.W	)
qui	PRO.rel.f.p	qui
s'	CL.refl.3.f.p	se
appliquent	V.P.3.p	appliquer
à	P	à
ces	D.dem.f.p	ce
variables	N.C.f.p	variable
;	PONCT.W	;
Un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
une	D.ind.f.s	un
instance	N.C.f.s	instance
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
.	PONCT.S	.

Son	D.poss.m.s	son
type	N.C.m.s	type
de	P	de
données	N.C.f.p	donnée
est	V.P.3.s	être
la	D.def.f.s	le
classe	N.C.f.s	classe
d'	P	de
objets	N.C.m.p	objet
à	P	à
laquelle	PRO.rel.f.s	lequel
il	CL.suj.3.m.s	il
appartient	V.P.3.s	appartenir
(	PONCT.W	(
un	D.ind.m.s	un
peu	ADV.-	peu
comme	P	comme
$toto	N.P.m.s	<unknown>
=	P	à
123	PRO.card.m.p	@card@
;	PONCT.W	;
est	V.P.3.s	être
une	D.ind.f.s	un
instance	N.C.f.s	instance
du	P+D.def.m.s	du
type	N.C.m.s	type
entier	A.qual.m.s	entier
)	PONCT.W	)
.	PONCT.S	.

133	A.card.m.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
classes	N.C.f.p	classe
en	P	en
PHP	N.P.m.s	Php
En	P	en
PHP	N.P.f.s	Php
,	PONCT.W	,
on	CL.suj.3.m.s	on
définit	V.P.3.s	définir
une	D.ind.f.s	un
classe	N.C.f.s	classe
d'	P	de
objets	N.C.m.p	objet
de	P	de
la	D.def.f.s	le
façon	N.C.f.s	façon
suivante	A.qual.f.s	suivant
:	PONCT.W	:
class	ET	class
MaClasse	N.P.f.s	Maclasse
{	P	à
#	P	à
Attributs	N.C.m.p	attribut
var	P	var
$monAttribut	N.P.m.s	<unknown>
;	PONCT.W	;
#	P	à
Méthodes	N.P.m.s	Méthodes
function	N.C.f.s	function
maMethode($argument)	N.C.m.s	mamethodeçargument-
{	N.C.m.s	{
#	N.C.m.s	#
...	PONCT.W	<unknown>
traitement	N.C.m.s	traitement
de	P	de
$monAttribut	N.C.m.s	<unknown>
avec	P	avec
$argument	N.C.m.s	çargument
...	PONCT.W	<unknown>
}	N.C.m.s	}
}	N.C.m.s	}
134	A.card.m.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
objets	N.C.m.p	objet
en	P	en
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
de	P	de
spécifier	VW	spécifier
une	D.ind.f.s	un
variable	A.qual.f.s	variable
objet	N.C.m.s	objet
de	P	de
la	D.def.f.s	le
façon	N.C.f.s	façon
suivante	A.qual.f.s	suivant
:	PONCT.W	:
$monObjet	N.C.m.s	<unknown>
=	P	à
new	ET	new
MaClasse	N.P.f.s	Maclasse
;	PONCT.W	;
On	CL.suj.3.m.s	on
accède	V.P.3.s	accéder
à	P	à
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
ou	C.C	ou
à	P	à
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
de	P	de
la	D.def.f.s	le
façon	N.C.f.s	façon
suivante	A.qual.f.s	suivant
:	PONCT.W	:
$monObjet->monAttribut	N.C.m.s	çmonobjet-çmonattribut
=	PONCT.W	=
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
;	PONCT.W	;
$monObjet->maMethode(23)	N.P.x.s	<unknown>
;	PONCT.W	;
135	D.card.f.p	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Particularités	N.C.f.p	particularité
de	P	de
PHP	N.P.m.s	Php
Tous	A.ind.m.p	tous
les	D.def.m.p	le
attributs	N.C.m.p	attribut
et	C.C	et
méthodes	N.C.f.p	méthode
sont	V.P.3.p	être
publics	A.qual.m.p	public
;	PONCT.W	;
Les	D.def.m.p	le
objets	N.C.m.p	objet
sont	V.P.3.p	être
libérés	VK.m.p	libérer
automatiquement	ADV.-	automatiquement
quand	C.S	quand
ils	CL.suj.3.m.p	il
ne	ADV.neg	ne
sont	V.P.3.p	être
plus	ADV.neg	plus
utilisés	VK.m.p	utiliser
(	PONCT.W	(
Garbage	N.C.m.s	garbage
Collector	N.P.m.s	Collector
)	PONCT.W	)
;	PONCT.W	;
Pas	ADV.neg	pas
de	P	de
destructeur	N.C.m.s	destructeur
.	PONCT.S	.

136	A.card.m.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
le	D.def.m.s	le
Caddie	N.P.m.s	Caddie
class	ET	class
Caddie	N.P.m.s	Caddie
{	P	à
var	P	var
$elements	N.C.m.p	çelement
;	PONCT.W	;
#	D.card.m.p	#
éléments	N.C.m.p	élément
de	P	de
notre	D.poss.m.s	notre
Caddie	N.P.m.s	Caddie
#	P	à
Constructeur	N.C.m.s	constructeur
qui	PRO.rel.m.s	qui
ajoute	V.P.3.s	ajouter
un	D.ind.m.s	un
cadeau	N.C.m.s	cadeau
à	P	à
chaque	D.ind.m.s	chaque
nouveau	A.qual.m.s	nouveau
Caddie	N.P.m.s	Caddie
function	N.C.f.s	function
Caddie()	N.P.m.s	<unknown>
{	P	à
$this->ajoute(1	N.P.x.s	<unknown>
,	PONCT.W	,
"	PONCT.W	"
cadeau	N.C.m.s	cadeau
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
}	N.C.m.s	}
#	P	à
Ajout	N.C.m.s	ajout
de	P	de
$nombre	N.C.m.s	änombre
articles	N.C.m.p	article
de	P	de
type	N.C.m.s	type
$type	N.P.m.s	<unknown>
au	P+D.def.m.s	au
Caddie	N.P.m.s	Caddie
function	N.C.f.s	function
ajoute($nombre	N.P.x.s	Ajouteënombre
,	PONCT.W	,
$type	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
$this->elements[$type	N.P.x.s	<unknown>
]	PONCT.W	]
+=	P+D.def.m.s	un
$nombre	N.C.m.s	änombre
;	PONCT.W	;
}	D.card.m.s	}
137	A.card.m.s	@card@
Programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
#	P+D.def.m.s	c
Retrait	N.C.m.s	retrait
de	P	de
$nombre	N.C.m.s	änombre
articles	N.C.m.p	article
de	P	de
type	N.C.m.s	type
$type	N.P.m.s	<unknown>
au	P+D.def.m.s	au
Caddie	N.P.m.s	Caddie
function	N.C.f.s	function
enleve($nombre	N.P.x.s	Enleveënombre
,	PONCT.W	,
$type	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
if	N.P.m.s	If
(	PONCT.W	(
$this->elements[$type	N.P.m.s	<unknown>
]	PONCT.W	]
>	P+D.def.m.s	c
$nombre	N.C.m.s	änombre
)	PONCT.W	)
{	P	à
$this->elements[$type	N.P.x.s	<unknown>
]	PONCT.W	]
-=	PONCT.W	<unknown>
$nombre	N.C.m.s	änombre
;	PONCT.W	;
return	N.C.m.s	return
true	N.C.f.s	true
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
return	N.C.m.s	return
false	A.qual.f.s	fals
;	PONCT.W	;
}	D.card.m.s	}
}	N.C.m.s	}
}	N.C.m.s	}
138	D.card.m.p	@card@
Chapitre	N.C.m.s	chapitre
3	D.card.f.p	@card@
Alcôve	N.P.f.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Fonctionnalités	N.C.f.p	fonctionnalité
essentielles	A.qual.f.p	essentiel
139	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
essentielles	A.qual.f.p	essentiel
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
du	P+D.def.m.s	du
chapitre	N.C.m.s	chapitre
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
connexions	N.C.f.p	connexion
et	C.C	et
des	P+D.def.m.p	du
utilisateurs	N.C.m.p	utilisateur
;	PONCT.W	;
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
;	PONCT.W	;
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
essentielles	A.qual.f.p	essentiel
.	PONCT.S	.

140	D.card.f.p	@card@
Section	N.C.f.s	section
1	A.card.f.s	@card@
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
141	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
utilisateurs	N.C.m.p	utilisateur
-	PONCT.W	-
authentification	N.C.f.s	authentification
;	PONCT.W	;
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
connexions	N.C.f.p	connexion
.	PONCT.S	.

142	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
utilisateurs	N.C.m.p	utilisateur
-	PONCT.W	-
authentification	N.C.f.s	authentification
Les	D.def.f.p	le
fonctions	N.C.f.p	fonction
d'	P	de
authentification	N.C.f.s	authentification
HTTP	N.P.m.s	Http
ne	ADV.neg	ne
sont	V.P.3.p	être
disponibles	A.qual.f.p	disponible
que	ADV.neg	que
si	C.S	si
PHP	N.P.m.s	Php
est	V.P.3.s	être
exécuté	VK.m.s	exécuter
comme	P	comme
module	N.C.m.s	module
Apache	N.P.m.s	Apache
(	PONCT.W	(
et	C.C	et
non	ADV.neg	non
pas	ADV.neg	pas
comme	P	comme
CGI	N.P.f.s	Cgi
)	PONCT.W	)
;	PONCT.W	;
On	CL.suj.3.m.s	on
utilise	V.P.3.s	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
header()	N.C.m.s	headerçë
pour	P	pour
demander	VW	demander
une	D.ind.f.s	un
authentification	N.C.f.s	authentification
(	PONCT.W	(
Authentication	N.C.f.s	authentication
Required	N.P.m.s	Required
)	PONCT.W	)
au	P+D.def.m.s	au
client	N.C.m.s	client
,	PONCT.W	,
générant	VG	générer
ainsi	ADV.-	ainsi
l'	D.def.f.s	le
apparition	N.C.f.s	apparition
d'	P	de
une	D.ind.f.s	un
fenêtre	N.C.f.s	fenêtre
de	P	de
demande	N.C.f.s	demande
de	P	de
nom	N.C.m.s	nom
d'	P	de
utilisateur	N.C.m.s	utilisateur
et	C.C	et
de	P	de
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
;	PONCT.W	;
143	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Une	D.ind.f.s	un
fois	N.C.f.s	foi
que	PRO.rel.f.s	que
les	D.def.m.p	le
champs	N.C.m.p	champ
ont	V.P.3.p	avoir
été	VK.m.s	être
remplis	VK.m.p	remplir
,	PONCT.W	,
l'	D.def.f.s	le
URL	N.P.f.s	Url
sera	V.F.3.s	être
de	P	de
nouveau	A.qual.m.s	nouveau
appelée	N.C.f.s	appelée
mais	C.C	mais
avec	P	avec
les	D.def.f.p	le
variables	N.C.f.p	variable
suivantes	A.qual.f.p	suivant
mises	VK.f.p	mettre
à	P	à
jour	N.C.m.s	jour
:	PONCT.W	:
–	N.C.m.s	–
$PHP_AUTH_USER	N.P.m.s	<unknown>
:	PONCT.W	:
utilisateur	N.C.m.s	utilisateur
,	PONCT.W	,
–	N.C.m.s	–
$PHP_AUTH_PW	N.P.m.s	<unknown>
:	PONCT.W	:
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
,	PONCT.W	,
et	C.C	et
–	N.P.x.s	–
$PHP_AUTH_TYPE	N.P.x.s	<unknown>
:	PONCT.W	:
type	N.C.m.s	type
d'	P	de
authentification	N.C.f.s	authentification
.	PONCT.S	.

Actuellement	ADV.-	actuellement
,	PONCT.W	,
seule	A.ind.f.s	seul
l'	D.def.f.s	le
authentification	N.C.f.s	authentification
basique	A.qual.f.s	basique
(	PONCT.W	(
Basic	N.P.m.s	Basic
)	PONCT.W	)
est	V.P.3.s	être
supportée	VK.f.s	supporter
;	PONCT.W	;
144	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
page	N.C.f.s	page
d'	P	de
authentification	N.C.f.s	authentification
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if(	A.qual.m.s	ifà
!	PONCT.S	!

isset($PHP_AUTH_USER))	N.P.m.s	Issetçëphpauthëuuë
{	P+D.def.m.s	c
Header("WWW-Authenticate	N.P.m.s	Headeräwww-Authenticate
:	PONCT.W	:
Basic	N.P.m.s	Basic
realm=’Titre	N.C.m.s	realmççtitre
’	N.C.m.s	’
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
Header("HTTP/1.0	N.P.m.s	<unknown>
401	N.card.m.s	@card@
Unauthorized	N.P.m.s	Unauthorized
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
Texte	N.C.m.s	texte
à	P	à
envoyer	VW	envoyer
au	P+D.def.m.s	au
client	N.C.m.s	client
en	P	en
cas	N.C.m.s	cas
d'	P	de
annulation	N.C.f.s	annulation
"	PONCT.W	"
;	PONCT.W	;
exit	V.P.3.s	exir
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
$PHP_AUTH_USER.<br>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
Votre	D.poss.m.s	votre
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
est	V.P.3.s	être
$PHP_AUTH_PW	N.P.m.s	<unknown>
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	D.card.f.p	>
145	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
connexions	N.C.f.p	connexion
Le	D.def.m.s	le
statut	N.C.m.s	statut
des	P+D.def.f.p	du
connexions	N.C.f.p	connexion
est	V.P.3.s	être
conservé	VK.m.s	conserver
en	P	en
interne	N.C.m.s	interne
par	P	par
PHP	N.P.m.s	Php
;	PONCT.W	;
Il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
trois	D.card.m.p	trois
états	N.C.m.p	état
possibles	A.qual.m.p	possible
:	PONCT.W	:
–	N.C.m.s	–
0	D.card.m.s	@card@
/	PONCT.W	@card@
NORMAL	N.P.m.s	Normal
:	PONCT.W	:
le	D.def.m.s	le
script	N.C.m.s	script
PHP	N.P.m.s	Php
travaille	V.P.3.s	travailler
,	PONCT.W	,
–	N.C.m.s	–
1	A.card.m.s	@card@
/	PONCT.W	@card@
ABORTED	N.P.f.s	Aborted
:	PONCT.W	:
le	D.def.m.s	le
client	N.C.m.s	client
distant	A.qual.m.s	distant
s'	CL.refl.3.m.s	se
est	V.P.3.s	être
déconnecté	VK.m.s	déconnecter
,	PONCT.W	,
–	P+D.def.m.s	c
2	A.card.m.s	@card@
/	PONCT.W	@card@
TIMEOUT	N.P.m.s	Timeout
:	PONCT.W	:
la	D.def.f.s	le
durée	N.C.f.s	durée
maximale	A.qual.f.s	maximal
d'	P	de
exécution	N.C.f.s	exécution
est	V.P.3.s	être
dépassée	A.qual.f.s	dépassé
.	PONCT.S	.

146	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Par	P	par
défaut	N.C.m.s	défaut
,	PONCT.W	,
le	D.def.m.s	le
script	N.C.m.s	script
PHP	N.P.m.s	Php
se	CL.refl.3.m.s	se
termine	V.P.3.s	terminer
dès	P	dès
que	C.S	que
le	D.def.m.s	le
client	N.C.m.s	client
se	CL.refl.3.m.s	se
déconnecte	V.P.3.s	déconnecter
mais	C.C	mais
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
changer	VW	changer
cette	D.dem.f.s	ce
politique	N.C.f.s	politique
de	P	de
différentes	A.qual.f.p	différent
façons	N.C.f.p	façon
:	PONCT.W	:
–	P	à
continuer	VW	continuer
le	D.def.m.s	le
script	N.C.m.s	script
comme	C.S	comme
si	C.S	si
le	D.def.m.s	le
client	N.C.m.s	client
était	V.I.3.s	être
encore	ADV.-	encore
là	ADV.-	là
en	P	en
activant	VG	activer
l'	D.def.f.s	le
option	N.C.f.s	option
:	PONCT.W	:
ignore_user_abort	N.C.m.s	ignoreçuserçort
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
,	PONCT.W	,
ou	C.C	ou
[	PONCT.W	[
php3_ignore_user_abort/ignore_user_abort	N.C.m.s	<unknown>
dans	P	dans
apache.conf	N.C.m.s	apachecconf
.	PONCT.S	.

–	P	à
exécuter	VW	exécuter
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
de	P	de
fermeture	N.C.f.s	fermeture
préalablement	ADV.-	préalablement
enregistrée	VK.f.s	enregistrer
grâce	N.C.f.s	grâce
à	P	à
la	D.def.f.s	le
fonction	N.C.f.s	fonction
register_shutdown_function(	N.C.f.s	registerçshutdownunctionctionc
)	PONCT.W	)
.	PONCT.S	.

147	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
La	D.def.f.s	le
fonction	N.C.f.s	fonction
enregistrée	VK.f.s	enregistrer
avec	P	avec
register_shutdown_function()	N.C.f.s	registeràshutdownçunctionctionc
sera	V.F.3.s	être
aussi	ADV.-	aussi
appelée	VK.f.s	appeler
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
du	P+D.def.m.s	du
script	N.C.m.s	script
quand	C.S	quand
celui	PRO.dem.m.s	celui
-ci	CL.suj.3.m.s	ci
se	CL.refl.3.m.s	se
termine	V.P.3.s	terminer
normalement	ADV.-	normalement
;	PONCT.W	;
Pour	P	pour
pouvoir	VW	pouvoir
avoir	VW	avoir
un	D.ind.m.s	un
comportement	N.C.m.s	comportement
différent	A.qual.m.s	différent
suivant	P	suivant
l'	D.def.m.s	le
état	N.C.m.s	état
du	P+D.def.m.s	du
script	N.C.m.s	script
lors	A.qual.m.s	lors
de	P	de
sa	D.poss.f.s	son
finalisation	N.C.f.s	finalisation
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
tester	VW	tester
l'	D.def.m.s	le
état	N.C.m.s	état
déconnecté	VK.m.s	déconnecter
du	P+D.def.m.s	du
script	N.C.m.s	script
avec	P	avec
la	D.def.f.s	le
fonction	N.C.f.s	fonction
connection_aborted()	N.C.m.s	connectionçabortedç-
;	PONCT.W	;
La	D.def.f.s	le
fonction	N.C.f.s	fonction
connection_status()	N.P.m.s	Connectionçstatusëë
permet	V.P.3.s	permettre
également	ADV.-	également
de	P	de
retourner	VW	retourner
l'	D.def.m.s	le
état	N.C.m.s	état
du	P+D.def.m.s	du
script	N.C.m.s	script
(	PONCT.W	(
0	N.card.m.s	@card@
,	PONCT.W	,
1	N.card.m.s	@card@
,	PONCT.W	,
2	N.card.m.s	@card@
ou	C.C	ou
3	A.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
148	D.card.f.p	@card@
Connexions	N.C.f.p	connexion
et	C.C	et
utilisateurs	N.C.m.p	utilisateur
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
modifier	VW	modifier
le	D.def.m.s	le
délai	N.C.m.s	délai
de	P	de
timeout	N.C.m.s	<unknown>
(	PONCT.W	(
30	D.card.f.p	@card@
secondes	N.C.f.p	seconde
par	P	par
défaut	N.C.m.s	défaut
)	PONCT.W	)
de	P	de
plusieurs	D.ind.f.p	plusieurs
manières	N.C.f.p	manière
:	PONCT.W	:
–	P	à
fonction	N.C.f.s	fonction
set_time_limit()	N.C.m.s	set-timeëlimitçë
,	PONCT.W	,
–	P+D.def.m.s	c
max_execution_time	N.C.m.s	maxçexecutionçtime
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
,	PONCT.W	,
ou	C.C	ou
–	D.card.m.s	–
php3_max_execution_time/max_execution_time	N.C.m.s	<unknown>
dans	P	dans
apache.conf	N.C.m.s	apachecconf
.	PONCT.S	.

La	D.def.f.s	le
fonction	N.C.f.s	fonction
enregistrée	VK.f.s	enregistrer
avec	P	avec
register_shutdown_function()	N.C.f.s	registeràshutdownçunctionctionc
sera	V.F.3.s	être
également	ADV.-	également
appelée	VK.f.s	appeler
lorsqu'	C.S	lorsque
un	D.ind.m.s	un
timeout	N.C.m.s	<unknown>
intervient	V.P.3.s	intervenir
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
tester	VW	tester
l'	D.def.m.s	le
état	N.C.m.s	état
timeout	N.C.m.s	<unknown>
du	P+D.def.m.s	du
script	N.C.m.s	script
avec	P	avec
la	D.def.f.s	le
fonction	N.C.f.s	fonction
connection_timeout()	N.C.m.s	connectionçmeoutçë
;	PONCT.W	;
149	D.card.f.p	@card@
Section	N.C.f.s	section
2	A.card.f.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
150	A.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Principe	N.P.m.s	Principe
;	PONCT.W	;
Sessions	N.C.f.p	session
avec	P	avec
PHPlib	N.P.m.s	Phplib
;	PONCT.W	;
Sessions	N.C.f.p	session
avec	P	avec
PHP4	N.P.m.s	Php4
.	PONCT.S	.

151	A.card.f.s	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Principe	N.P.m.s	Principe
La	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
avec	P	avec
PHP	N.P.m.s	Php
est	V.P.3.s	être
un	D.ind.m.s	un
moyen	N.C.m.s	moyen
de	P	de
sauver	VW	sauver
des	D.ind.f.p	du
informations	N.C.f.p	information
entre	P	entre
deux	D.card.m.p	deux
accès	N.C.m.p	accès
(	PONCT.W	(
requêtes	N.C.f.p	requête
HTTP	N.P.m.s	Http
)	PONCT.W	)
;	PONCT.W	;
Cela	PRO.dem.m.s	cela
permet	V.P.3.s	permettre
notamment	ADV.-	notamment
de	P	de
construire	VW	construire
des	D.ind.f.p	du
applications	N.C.f.p	application
personnalisées	A.qual.f.p	personnalisé
,	PONCT.W	,
et	C.C	et
d'	P	de
accroître	VW	accroître
les	D.def.f.p	le
fonctionnalités	N.C.f.p	fonctionnalité
de	P	de
votre	D.poss.m.s	votre
site	N.C.m.s	site
;	PONCT.W	;
Malheureusement	ADV.-	malheureusement
,	PONCT.W	,
la	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
n'	ADV.neg	ne
était	V.I.3.s	être
pas	ADV.neg	pas
inclue	VK.f.s	inclure
dans	P	dans
les	D.def.f.p	le
fonctionnalités	N.C.f.p	fonctionnalité
standards	A.qual.f.p	standard
de	P	de
PHP	N.P.m.s	Php
jusqu'	P	jusque
à	P	à
la	D.def.f.s	le
version	N.C.f.s	version
PHP4	N.P.f.s	Php4
;	PONCT.W	;
Une	D.ind.f.s	un
bibliothèque	N.C.f.s	bibliothèque
complémentaire	A.qual.f.s	complémentaire
a	V.P.3.s	avoir
donc	ADV.-	donc
été	VK.m.s	être
développée	VK.f.s	développer
pour	P	pour
gérer	VW	gérer
les	D.def.f.p	le
sessions	N.C.f.p	session
avec	P	avec
PHP3	N.P.m.s	<unknown>
,	PONCT.W	,
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
PHPlib	N.P.m.s	Phplib
;	PONCT.W	;
152	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Sessions	N.C.f.p	session
avec	P	avec
PHPlib	N.P.m.s	Phplib
PHPlib	N.P.m.s	Phplib
est	V.P.3.s	être
une	D.ind.f.s	un
bibliothèque	N.C.f.s	bibliothèque
PHP	N.P.m.s	Php
libre	A.qual.f.s	libre
qui	PRO.rel.f.s	qui
vise	V.P.3.s	viser
à	P	à
faciliter	VW	faciliter
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
sites	N.C.m.p	site
avec	P	avec
PHP	N.P.m.s	Php
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
est	V.P.3.s	être
toujours	ADV.-	toujours
utilisable	A.qual.f.s	utilisable
avec	P	avec
PHP4	N.P.m.s	Php4
et	C.C	et
présente	V.P.3.s	présenter
d'	P	de
ailleurs	ADV.-	ailleurs
des	P+D.def.f.p	du
fonctionnalités	N.C.f.p	fonctionnalité
que	PRO.rel.f.p	que
ce	D.dem.m.s	ce
dernier	A.qual.m.s	dernier
ne	ADV.neg	ne
possède	V.P.3.s	posséder
toujours	ADV.-	toujours
pas	ADV.neg	pas
en	P	en
natif	N.C.m.s	natif
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
se	CL.refl.3.f.s	se
compose	V.P.3.s	composer
de	P	de
classes	N.C.f.p	classe
et	C.C	et
de	P	de
fonctions	N.C.f.p	fonction
qui	PRO.rel.f.p	qui
permettent	V.P.3.p	permettre
:	PONCT.W	:
–	P	à
le	D.def.m.s	le
suivi	N.C.m.s	suivi
des	P+D.def.f.p	du
sessions	N.C.f.p	session
,	PONCT.W	,
–	P	à
l'	D.def.f.s	le
utilisation	N.C.f.s	utilisation
de	P	de
variables	N.C.f.p	variable
persistantes	A.qual.f.p	persistant
au	P+D.def.m.s	au
niveau	N.C.m.s	niveau
utilisateur	A.qual.m.s	utilisateur
et	C.C	et
au	P+D.def.m.s	au
niveau	N.C.m.s	niveau
session	N.C.f.s	session
,	PONCT.W	,
–	P	à
l'	D.def.f.s	le
authentification	N.C.f.s	authentification
et	C.C	et
la	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
permissions	N.C.f.p	permission
,	PONCT.W	,
–	P	à
la	D.def.f.s	le
génération	N.C.f.s	génération
rapide	A.qual.f.s	rapide
de	P	de
code	N.C.m.s	code
HTML	N.P.m.s	<unknown>
...	PONCT.S	<unknown>
153	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Installation	N.C.f.s	installation
:	PONCT.W	:
–	P	à
récupérer	VW	récupérer
l'	D.def.f.s	le
archive	N.C.f.s	archive
(	PONCT.W	(
http	ET	<unknown>
://phplib.netuse.de	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
la	CL.obj.3.f.s	la
décompresser	VW	décompresser
dans	P	dans
un	D.ind.m.s	un
répertoire	N.C.m.s	répertoire
quelconque	A.qual.m.s	quelconque
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
/usr/lib/phplib/	N.C.m.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
éditer	VW	éditer
le	D.def.m.s	le
fichier	N.C.m.s	fichier
php3.ini/php.ini	A.ind.m.s	<unknown>
et	C.C	et
fixer	VW	fixer
les	D.def.f.p	le
options	N.C.f.p	option
de	P	de
la	D.def.f.s	le
façon	N.C.f.s	façon
suivante	A.qual.f.s	suivant
:	PONCT.W	:
magic_quotes_gpc	N.C.m.s	<unknown>
=	PONCT.W	=
Off	ET	off
magic_quotes_runtime	N.P.x.s	Magicçquotesçruntime
=	P	à
Off	ET	off
magic_quotes_sybase	N.P.x.s	Magicçquotesybase
=	PONCT.W	=
Off	ET	off
track_vars	N.C.m.p	trackçvar
=	PONCT.W	=
On	CL.suj.3.m.s	on
auto_prepend_file	N.C.m.s	autoëprependçfile
=	P	à
<répertoire	N.C.m.s	çrépertoire
contenant	VG	contenir
prepend.php>	ET	prependphphp
include_path	N.P.x.s	Includeëpath
=	P	à
<répertoire	N.C.m.s	çrépertoire
d'	P	de
installation>	N.C.f.s	installationç
154	D.card.f.p	@card@
Gestion	N.C.f.p	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Pour	P	pour
l'	D.def.f.s	le
utilisation	N.C.f.s	utilisation
de	P	de
PHPlib	N.P.m.s	Phplib
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
créer	VW	créer
quelques	D.ind.m.p	quelque
fichiers	N.C.m.p	fichier
en	P	en
plus	ADV.-	plus
des	P+D.def.m.p	du
scripts	N.C.m.p	script
PHP	N.P.m.s	Php
:	PONCT.W	:
–	D.card.f.p	–
prepend.php	N.C.m.s	prependrphp
sert	V.P.3.s	servir
à	P	à
définir	VW	définir
toutes	A.ind.f.p	tout
les	D.def.f.p	le
librairies	N.C.f.p	librairie
PHPlib	N.P.m.s	Phplib
à	P	à
inclure	VW	inclure
avant	P	avant
chaque	D.ind.m.s	chaque
fichier	N.C.m.s	fichier
,	PONCT.W	,
et	C.C	et
–	P	à
local.inc	N.C.m.s	localinc
sert	V.P.3.s	servir
à	P	à
définir	VW	définir
les	D.def.f.p	le
classes	N.C.f.p	classe
qui	PRO.rel.f.p	qui
vont	V.P.3.p	aller
être	VW	être
utilisées	VK.f.p	utiliser
par	P	par
les	D.def.m.p	le
scripts	N.C.m.p	script
.	PONCT.S	.

155	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Pour	P	pour
gérer	VW	gérer
les	D.def.f.p	le
sessions	N.C.f.p	session
et	C.C	et
les	D.def.f.p	le
variables	N.C.f.p	variable
persistantes	A.qual.f.p	persistant
,	PONCT.W	,
la	D.def.f.s	le
librairie	N.C.f.s	librairie
se	CL.refl.3.f.s	se
sert	V.P.3.s	servir
d'	P	de
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
,	PONCT.W	,
d'	P	de
un	D.ind.m.s	un
annuaire	N.C.m.s	annuaire
LDAP	N.P.m.s	Ldap
ou	C.C	ou
encore	ADV.-	encore
d'	P	de
un	D.ind.m.s	un
simple	A.qual.m.s	simple
fichier	N.C.m.s	fichier
;	PONCT.W	;
Cette	D.dem.f.s	ce
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
et	C.C	et
les	D.def.f.p	le
différentes	A.qual.f.p	différent
tables	N.C.f.p	table
qui	PRO.rel.f.p	qui
sont	V.P.3.p	être
utilisées	VK.f.p	utiliser
par	P	par
les	D.def.m.p	le
scripts	N.C.m.p	script
utilisant	VG	utiliser
PHPlib	N.P.m.s	Phplib
doivent	V.P.3.p	devoir
être	VW	être
créées	VK.f.p	créer
par	P	par
vos	D.poss.m.p	votre
soins	N.C.m.p	soin
grâce	N.C.f.s	grâce
aux	P+D.def.m.p	au
fichiers	N.C.m.p	fichier
de	P	de
configurations	N.C.f.p	configuration
fournis	VK.m.p	fournir
(	PONCT.W	(
généralement	ADV.-	généralement
dans	P	dans
/usr/lib/phplib/stuff/	N.C.m.p	<unknown>
)	PONCT.W	)
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
MySQL	N.P.m.s	Mysql
mysql	ET	<unknown>
-h	PONCT.W	h
<ma_machine_hote>	N.P.m.s	<unknown>
<ma_base>	N.P.x.s	<unknown>
<create_database.mysql	N.P.x.s	<unknown>
156	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Pour	P	pour
gérer	VW	gérer
une	D.ind.f.s	un
session	N.C.f.s	session
,	PONCT.W	,
PHPlib	N.P.m.s	Phplib
utilise	V.P.3.s	utiliser
un	D.ind.m.s	un
identifiant	N.C.m.s	identifiant
qui	PRO.rel.m.s	qui
est	V.P.3.s	être
transmis	VK.m.s	transmettre
de	P	de
script	N.C.m.s	script
en	P	en
script	N.C.m.s	script
au	P+D.def.m.s	au
cours	N.C.m.s	cours
de	P	de
la	D.def.f.s	le
navigation	N.C.f.s	navigation
;	PONCT.W	;
Pour	P	pour
les	D.def.f.p	le
sessions	N.C.f.p	session
sans	P	sans
reprise	N.C.f.s	reprise
,	PONCT.W	,
cet	D.dem.m.s	ce
identifiant	N.C.m.s	identifiant
peut	V.P.3.s	pouvoir
être	VW	être
transmis	VK.m.s	transmettre
dans	P	dans
l'	D.def.m.s	le
URL	N.P.f.s	Url
;	PONCT.W	;
Pour	P	pour
gérer	VW	gérer
les	D.def.f.p	le
reprises	N.C.f.p	reprise
de	P	de
sessions	N.C.f.p	session
,	PONCT.W	,
PHPlib	N.P.m.s	Phplib
peut	V.P.3.s	pouvoir
stocker	VW	stocker
l'	CL.obj.3.m.s	le
identifiant	A.qual.m.s	identifiant
dans	P	dans
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
qu'	PRO.rel.m.s	que
il	CL.suj.3.m.s	il
transmet	V.P.3.s	transmettre
au	P+D.def.m.s	au
client	N.C.m.s	client
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
de	P	de
chaque	D.ind.m.s	chaque
script	N.C.m.s	script
(	PONCT.W	(
fonction	N.C.f.s	fonction
page_close())	N.C.m.s	pageëcloseçëë
;	PONCT.W	;
157	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
PHPlib	N.P.m.s	Phplib
définit	V.P.3.s	définir
des	D.ind.f.p	du
classes	N.C.f.p	classe
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
et	C.C	et
gérer	VW	gérer
les	D.def.f.p	le
sessions	N.C.f.p	session
;	PONCT.W	;
Vous	CL.suj.2.m.p	vous
devez	V.P.2.p	devoir
définir	VW	définir
vos	D.poss.f.p	votre
propres	A.qual.f.p	propre
classes	N.C.f.p	classe
qui	PRO.rel.f.p	qui
dérivent	V.P.3.p	dériver
des	D.ind.f.p	du
classes	N.C.f.p	classe
génériques	A.qual.f.p	générique
de	P	de
PHPlib	N.P.m.s	Phplib
;	PONCT.W	;
Ces	D.dem.f.p	ce
classes	N.C.f.p	classe
sont	V.P.3.p	être
généralement	ADV.-	généralement
stockées	VK.f.p	stocker
dans	P	dans
le	D.def.m.s	le
fichier	N.C.m.s	fichier
local.inc	A.qual.m.s	localinc
;	PONCT.W	;
158	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Toutes	A.ind.f.p	tout
les	D.def.f.p	le
pages	N.C.f.p	page
gérant	VG	gérer
la	D.def.f.s	le
session	N.C.f.s	session
doivent	V.P.3.p	devoir
être	VW	être
encadrées	VK.f.p	encadrer
par	P	par
:	PONCT.W	:
–	D.card.f.p	–
page_open(array("sess	ET	pageçopençarrayçs
"	PONCT.W	"
=>	N.P.x.s	<unknown>
"	PONCT.W	"
MaSession	N.P.f.s	Masession
"	PONCT.W	"
)	PONCT.W	)
)	PONCT.W	)
,	PONCT.W	,
et	C.C	et
–	P	à
page_close()	N.C.m.s	pageçcloseë
;	PONCT.W	;
Si	C.S	si
on	CL.suj.3.m.s	on
ne	ADV.neg	ne
souhaite	V.P.3.s	souhaiter
pas	ADV.neg	pas
utiliser	VW	utiliser
l'	D.def.f.s	le
option	N.C.f.s	option
auto_prepend_file	A.qual.f.s	autoëprependçfile
pour	P	pour
inclure	VW	inclure
le	D.def.m.s	le
fichier	N.C.m.s	fichier
prepend.php	N.C.m.s	prependrphp
,	PONCT.W	,
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
commencer	VW	commencer
le	D.def.m.s	le
script	N.C.m.s	script
par	P	par
un	D.ind.m.s	un
include()	N.C.m.s	includeçà
de	P	de
ce	D.dem.m.s	ce
fichier	N.C.m.s	fichier
;	PONCT.W	;
Pour	P	pour
rendre	VW	rendre
une	D.ind.f.s	un
variable	N.C.f.s	variable
persistante	A.qual.f.s	persistant
,	PONCT.W	,
on	CL.suj.3.m.s	on
utilise	V.P.3.s	utiliser
la	D.def.f.s	le
méthode	N.C.f.s	méthode
register()	N.C.m.s	registerçë
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
MaSession	N.P.f.s	Masession
;	PONCT.W	;
159	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
session.php	N.C.f.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
page_open(array("sess	ET	pageçopençarrayçs
"	PONCT.W	"
=>	N.P.x.s	<unknown>
"	PONCT.W	"
MaSession	N.P.f.s	Masession
"	PONCT.W	"
)	PONCT.W	)
)	PONCT.W	)
;	PONCT.W	;
if(	ET	ifà
!	PONCT.S	!

isset($toto))	N.P.x.s	Issetçëtotoë
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
print	A.qual.m.s	print
++$toto	N.P.x.s	Anatoto
;	PONCT.W	;
$sess->register("toto")	N.P.x.s	<unknown>
;	PONCT.W	;
page_close()	N.C.m.s	pageçcloseë
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
160	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
(	PONCT.W	(
suite	N.C.f.s	suite
)	PONCT.W	)
:	PONCT.W	:
local.php	ET	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
class	ET	class
MaBaseSql	N.P.m.s	<unknown>
extends	A.qual.m.p	extend
DB_Sql	N.P.m.s	<unknown>
{	P	à
var	P	var
$Host	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
ma_machine_hote	N.C.m.s	maëmachineçhote
"	PONCT.W	"
;	PONCT.W	;
var	P	var
$Database	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
ma_base	A.qual.m.s	maëbase
"	PONCT.W	"
;	PONCT.W	;
var	VW	var
$User	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
mon_utilisateur	N.C.m.s	monçutilisateur
"	PONCT.W	"
;	PONCT.W	;
var	ET	var
$Password	ET	<unknown>
=	PONCT.W	=
"	PONCT.W	"
mon_password	ET	monäpassword
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
class	ET	class
MonContainerSql	N.P.m.s	<unknown>
extends	ET	extend
CT_Sql	N.P.m.s	Ctësql
{	P	à
var	P	var
$database_class	N.P.x.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
MaBaseSql	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
var	ET	var
$database_table	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
ma_table	A.qual.m.s	maëtable
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
161	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
class	ET	class
MaSession	N.P.f.s	Masession
extends	ET	extend
Session	N.C.f.s	session
{	P	à
var	P	var
$classname	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
MaSession	N.P.f.s	Masession
"	PONCT.W	"
;	PONCT.W	;
var	P	var
$mode	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
cookie	N.C.f.s	cookie
"	PONCT.W	"
;	PONCT.W	;
var	ET	var
$lifetime	N.P.m.s	<unknown>
=	PONCT.W	=
6000	N.card.m.s	@card@
;	PONCT.W	;
var	P	var
$that_class	N.P.x.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
MonContainerSql	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.p	}
?	PONCT.S	?

>	N.C.m.s	>
162	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
(	PONCT.W	(
fin	N.C.f.s	fin
)	PONCT.W	)
:	PONCT.W	:
prepend.php	N.C.m.s	prependrphp
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
!	PONCT.S	!

is_array($_PHPLIB))	A.qual.m.s	<unknown>
$_PHPLIB["libdir	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
"	PONCT.W	"
;	PONCT.W	;
require($_PHPLIB["libdir	VW	requireëëphplibççlibdir
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
db_mysql.inc	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
require($_PHPLIB["libdir	VW	requireëëphplibççlibdir
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
ct_sql.inc	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
require($_PHPLIB["libdir	VW	requireëëphplibççlibdir
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
session.inc	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
require($_PHPLIB["libdir	VW	requireëëphplibççlibdir
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
local.inc	ET	localinc
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
require($_PHPLIB["libdir	VW	requireëëphplibççlibdir
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
page.inc	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
163	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Sessions	N.C.f.p	session
avec	P	avec
PHP4	N.P.m.s	Php4
Le	D.def.m.s	le
principe	N.C.m.s	principe
est	V.P.3.s	être
le	D.def.m.s	le
même	A.ind.m.s	même
qu'	C.S	que
avec	P	avec
PHPlib	N.P.m.s	Phplib
:	PONCT.W	:
on	CL.suj.3.m.s	on
attribue	V.P.3.s	attribuer
à	P	à
un	D.ind.m.s	un
nouvel	A.qual.m.s	nouveau
utilisateur	N.C.m.s	utilisateur
un	D.ind.m.s	un
identificateur	N.C.m.s	identificateur
de	P	de
session	N.C.f.s	session
(	PONCT.W	(
SID	N.P.m.s	Sid
)	PONCT.W	)
;	PONCT.W	;
Ce	D.dem.m.s	ce
numéro	N.C.m.s	numéro
est	V.P.3.s	être
transmis	VK.m.s	transmettre
soit	C.C	soit
sous	P	sous
forme	N.C.f.s	forme
de	P	de
cookie	N.C.f.s	cookie
soit	C.C	soit
dans	P	dans
les	D.def.m.p	le
URLs	N.C.m.p	url
;	PONCT.W	;
Quand	C.S	quand
un	D.ind.m.s	un
visiteur	A.qual.m.s	visiteur
accède	N.C.m.s	accède
à	P	à
la	D.def.f.s	le
page	N.C.f.s	page
,	PONCT.W	,
PHP4	N.P.m.s	Php4
vérifie	V.P.3.s	vérifier
si	C.S	si
un	D.ind.m.s	un
identificateur	N.C.m.s	identificateur
de	P	de
session	N.C.f.s	session
a	V.P.3.s	avoir
été	VK.m.s	être
transmis	VK.m.s	transmettre
avec	P	avec
la	D.def.f.s	le
requête	N.C.f.s	requête
;	PONCT.W	;
164	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Cette	D.dem.f.s	ce
vérification	N.C.f.s	vérification
peut	V.P.3.s	pouvoir
être	VW	être
faite	VK.f.s	faire
de	P	de
trois	D.card.f.p	trois
manières	N.C.f.p	manière
différentes	A.qual.f.p	différent
:	PONCT.W	:
–	P	à
automatiquement	ADV.-	automatiquement
si	C.S	si
l'	D.def.f.s	le
option	N.C.f.s	option
session.auto_start	A.qual.f.s	<unknown>
est	V.P.3.s	être
activée	VK.f.s	activer
dans	P	dans
php.ini	N.C.m.s	phpini
,	PONCT.W	,
–	P	à
explicitement	ADV.-	explicitement
par	P	par
l'	D.def.m.s	le
appel	N.C.m.s	appel
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
session_start()	N.C.f.s	sessionästartëë
,	PONCT.W	,
ou	C.C	ou
–	P	à
implicitement	ADV.-	implicitement
par	P	par
l'	D.def.m.s	le
appel	N.C.m.s	appel
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
session_register(	N.P.x.s	Sessionçregisterë
)	PONCT.W	)
.	PONCT.S	.

Dans	P	dans
le	D.def.m.s	le
cas	N.C.m.s	cas
où	PRO.rel.m.s	où
le	D.def.m.s	le
numéro	N.C.m.s	numéro
de	P	de
session	N.C.f.s	session
est	V.P.3.s	être
valide	A.qual.m.s	valide
,	PONCT.W	,
tout	A.ind.m.s	tout
l'	D.def.m.s	le
environnement	N.C.m.s	environnement
de	P	de
celle	PRO.dem.f.s	celui
-ci	CL.suj.3.m.s	ci
est	V.P.3.s	être
restauré	VK.m.s	restaurer
;	PONCT.W	;
165	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
option	N.C.f.s	option
register_globals	V.I.3.s	<unknown>
de	P	de
php.ini	N.C.m.s	phpini
autorise	V.P.3.s	autoriser
les	D.def.f.p	le
variables	N.C.f.p	variable
globales	A.qual.f.p	global
à	P	à
être	VW	être
sauvegardées	VK.f.p	sauvegarder
dans	P	dans
une	D.ind.f.s	un
session	N.C.f.s	session
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_register("toto")	N.C.f.s	sessionçregisterç
;	PONCT.W	;
$toto++	N.P.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
L'	D.def.f.s	le
option	N.C.f.s	option
track_vars	N.C.m.p	trackçvar
de	P	de
php.ini	N.C.m.s	phpini
(	PONCT.W	(
qui	PRO.rel.f.s	qui
est	V.P.3.s	être
bloquée	VK.f.s	bloquer
à	P	à
1	D.card.m.s	@card@
pour	P	pour
les	D.def.f.p	le
versions	N.C.f.p	version
de	P	de
PHP4	N.C.m.p	<unknown>
supérieures	A.qual.f.p	supérieur
à	P	à
la	D.def.f.s	le
4.0.3	N.P.f.s	@card@
)	PONCT.W	)
autorise	V.P.3.s	autoriser
les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
$HTTP_SESSION_VARS	N.P.x.s	<unknown>
à	P	à
être	VW	être
sauvegardées	VK.f.p	sauvegarder
dans	P	dans
une	D.ind.f.s	un
session	N.C.f.s	session
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
session_register("toto")	N.C.f.s	sessionçregisterç
;	PONCT.W	;
$HTTP_SESSION_VARS["toto"]++	N.P.x.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
166	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
deux	D.card.f.p	deux
manières	N.C.f.p	manière
pour	P	pour
transmettre	VW	transmettre
le	D.def.m.s	le
numéro	N.C.m.s	numéro
de	P	de
session	N.C.f.s	session
au	P+D.def.m.s	au
sein	N.C.m.s	sein
de	P	de
l'	D.def.m.s	le
URL	N.P.f.s	Url
:	PONCT.W	:
–	N.C.m.s	–
manuellement	ADV.-	manuellement
grâce	N.C.f.s	grâce
à	P	à
la	D.def.f.s	le
constante	N.C.f.s	constante
SID	N.P.x.s	Sid
qui	PRO.rel.f.s	qui
est	V.P.3.s	être
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
caractères	N.C.m.p	caractère
de	P	de
la	D.def.f.s	le
forme	N.C.f.s	forme
session_name=session_id	N.P.x.s	<unknown>
(	PONCT.W	(
ou	C.C	ou
vide	N.C.m.s	vide
)	PONCT.W	)
,	PONCT.W	,
–	N.C.m.s	–
automatiquement	ADV.-	automatiquement
si	C.S	si
PHP4	N.P.m.s	Php4
a	V.P.3.s	avoir
été	VK.m.s	être
compilé	VK.m.s	compiler
avec	P	avec
l'	D.def.f.s	le
option	N.C.f.s	option
--	PONCT.W	--
enable-trans-sid	N.C.m.s	enable-trans-sid
.	PONCT.S	.

167	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
compteur	N.C.m.s	compteur
de	P	de
visites	N.C.f.p	visite
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
session_register("compteur")	N.C.m.s	sessionçregisterçcompteurçë
;	PONCT.W	;
$compteur++	N.P.x.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
vu	VK.m.s	voir
cette	D.dem.f.s	ce
page	N.C.f.s	page
<	N.C.m.s	<
?	PONCT.S	?

echo	ET	echo
$compteur	N.C.m.s	ccompteur
;	PONCT.W	;
?	PONCT.S	?

>	D.card.f.p	>
fois	N.C.f.p	foi
.	PONCT.S	.

<	I	à
!	PONCT.S	!

--	PONCT.W	--
<	N.C.m.s	<
?	PONCT.S	?

=SID	N.C.m.s	<unknown>
?	PONCT.S	?

>	N.C.m.s	>
sert	V.P.3.s	servir
à	P	à
conserver	VW	conserver
le	D.def.m.s	le
numéro	N.C.m.s	numéro
de	P	de
session	N.C.f.s	session
au	P+D.def.m.s	au
cas	N.C.m.s	cas
où	PRO.rel.m.s	où
les	D.def.f.p	le
cookies	N.C.f.p	cookie
sont	V.P.3.p	être
desactivés	VK.m.p	desactiver
--	PONCT.W	--
>	N.C.m.s	>
Pour	P	pour
continuer	VW	continuer
cliquez	V.Y.2.p	cliquer
<A	P	à
href="compteur.php	N.C.m.s	<unknown>
?	PONCT.S	?

<	N.C.m.s	<
?	PONCT.S	?

=SID	N.C.m.s	<unknown>
?	PONCT.S	?

>">ici</A>	N.P.x.s	<unknown>
168	D.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
fonctions	N.C.f.p	fonction
les	D.def.f.p	le
plus	ADV.-	plus
utilisées	VK.f.p	utiliser
sont	V.P.3.p	être
:	PONCT.W	:
–	P	à
session_start()	N.C.f.s	sessionästartëë
:	PONCT.W	:
crée	N.C.f.s	crée
ou	C.C	ou
restaure	V.P.3.s	restaurer
une	D.ind.f.s	un
session	N.C.f.s	session
,	PONCT.W	,
–	P	à
session_destroy()	N.C.m.s	sessionädestroyçë
:	PONCT.W	:
détruit	V.P.3.s	détruire
une	D.ind.f.s	un
session	N.C.f.s	session
,	PONCT.W	,
–	N.C.m.s	–
session_register()/session_unregister()	N.C.m.s	<unknown>
:	PONCT.W	:
sauvegarde/oublie	VK.f.s	<unknown>
une	D.ind.f.s	un
variable	N.C.f.s	variable
,	PONCT.W	,
–	P+D.def.m.s	c
session_set_save_handler()	N.C.m.s	sessionçset-saveçhandlerç
:	PONCT.W	:
permet	V.P.3.s	permettre
de	P	de
définir	VW	définir
ses	D.poss.f.p	son
propres	A.qual.f.p	propre
fonctions	N.C.f.p	fonction
de	P	de
sauvegarde	N.C.f.s	sauvegarde
de	P	de
sessions	N.C.f.p	session
(	PONCT.W	(
pour	P	pour
stocker	VW	stocker
les	D.def.f.p	le
données	N.C.f.p	donnée
dans	P	dans
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
par	P	par
exemple	N.C.m.s	exemple
)	PONCT.W	)
.	PONCT.S	.

169	D.card.f.p	@card@
Section	N.C.f.s	section
3	D.card.f.p	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
170	A.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Récupération	N.C.f.s	récupération
et	C.C	et
traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
erreurs	N.C.f.p	erreur
;	PONCT.W	;
Les	D.def.f.p	le
cookies	N.C.f.p	cookie
.	PONCT.S	.

171	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Récupération	N.C.f.s	récupération
et	C.C	et
traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
erreurs	N.C.f.p	erreur
Il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
4	D.card.m.p	@card@
types	N.C.m.p	type
d'	P	de
erreurs	N.C.f.p	erreur
et	C.C	et
d'	P	de
alertes	N.C.f.p	alerte
PHP	N.P.m.s	Php
:	PONCT.W	:
–	N.P.m.s	–
E_ERROR	N.P.m.s	Eëerror
(	PONCT.W	(
1	N.card.m.s	@card@
)	PONCT.W	)
:	PONCT.W	:
erreur	N.C.f.s	erreur
d'	P	de
exécution	N.C.f.s	exécution
–	P	à
E_WARNING	N.P.m.s	Eëwarning
(	PONCT.W	(
2	N.card.m.s	@card@
)	PONCT.W	)
:	PONCT.W	:
alerte	N.C.f.s	alerte
–	P+D.def.m.s	c
E_PARSE	N.P.m.s	Eëparse
(	PONCT.W	(
4	N.card.m.s	@card@
)	PONCT.W	)
:	PONCT.W	:
erreur	N.C.f.s	erreur
d'	P	de
analyse	N.C.f.s	analyse
–	P	à
E_NOTICE	N.P.x.s	Eënotice
(	PONCT.W	(
8	N.card.m.s	@card@
)	PONCT.W	)
:	PONCT.W	:
notes	N.C.f.p	note
(	PONCT.W	(
alertes	N.C.f.p	alerte
qui	PRO.rel.f.p	qui
peuvent	V.P.3.p	pouvoir
être	VW	être
ignorées	VK.f.p	ignorer
)	PONCT.W	)
Pour	P	pour
définir	VW	définir
un	D.ind.m.s	un
niveau	N.C.m.s	niveau
d'	P	de
erreur	N.C.f.s	erreur
,	PONCT.W	,
on	CL.suj.3.m.s	on
ajoute	V.P.3.s	ajouter
les	D.def.m.p	le
chiffres	N.C.m.p	chiffre
des	P+D.def.f.p	du
erreurs	N.C.f.p	erreur
que	PRO.rel.f.p	que
l'	CL.obj.3.m.s	le
on	CL.suj.3.m.s	on
souhaite	V.P.3.s	souhaiter
prendre	VW	prendre
en	P	en
compte	N.C.m.s	compte
(	PONCT.W	(
bitmask	N.C.m.s	bitmask
par	P	par
défaut	N.C.m.s	défaut
7	A.card.m.s	@card@
=	PONCT.W	=
4	D.card.m.p	@card@
+	P	p
2	A.card.m.s	@card@
+	P	p
1	N.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
172	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ce	D.dem.m.s	ce
niveau	N.C.m.s	niveau
peut	V.P.3.s	pouvoir
être	VW	être
changé	VK.m.s	changer
de	P	de
trois	D.card.f.p	trois
manières	N.C.f.p	manière
:	PONCT.W	:
–	P	à
directive	A.qual.f.s	directif
error_reporting	A.ind.m.s	errorçreporting
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
,	PONCT.W	,
–	D.card.m.s	–
directive	A.qual.m.s	directif
php3_error_reporting/error_reporting/error_reporting	N.C.m.s	<unknown>
dans	P	dans
httpd.conf	N.C.m.s	<unknown>
,	PONCT.W	,
–	P	à
fonction	N.C.f.s	fonction
error_reporting(	N.P.x.s	<unknown>
)	PONCT.W	)
.	PONCT.S	.

173	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Toutes	A.ind.f.p	tout
les	D.def.f.p	le
expressions	N.C.f.p	expression
PHP	N.P.m.s	Php
peuvent	V.P.3.p	pouvoir
être	VW	être
appelées	VK.f.p	appeler
avec	P	avec
le	D.def.m.s	le
préfixe	N.C.m.s	préfixe
@	N.C.m.s	@
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
d'	P	de
ignorer	VW	ignorer
le	D.def.m.s	le
rapport	N.C.m.s	rapport
d'	P	de
erreur	N.C.f.s	erreur
pour	P	pour
cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
particulière	A.qual.f.s	particulier
;	PONCT.W	;
Si	C.S	si
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
survient	V.P.3.s	survenir
dans	P	dans
une	D.ind.f.s	un
telle	A.qual.f.s	tel
expression	N.C.f.s	expression
,	PONCT.W	,
et	C.C	et
que	C.S	que
l'	D.def.f.s	le
option	N.C.f.s	option
track_errors	N.C.m.p	track-error
est	V.P.3.s	être
activée	VK.f.s	activer
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
,	PONCT.W	,
on	CL.suj.3.m.s	on
retrouve	V.P.3.s	retrouver
le	D.def.m.s	le
message	N.C.m.s	message
d'	P	de
erreur	N.C.f.s	erreur
dans	P	dans
la	D.def.f.s	le
variable	N.C.f.s	variable
globale	A.qual.f.s	global
$php_errormsg	N.P.x.s	<unknown>
;	PONCT.W	;
La	D.def.f.s	le
fonction	N.C.f.s	fonction
error_reporting()	N.C.m.s	erroräreportingçë
établit	V.P.3.s	établir
le	D.def.m.s	le
niveau	N.C.m.s	niveau
d'	P	de
erreur	N.C.f.s	erreur
à	P	à
prendre	VW	prendre
en	P	en
compte	N.C.m.s	compte
et	C.C	et
renvoie	V.P.3.s	renvoyer
l'	D.def.m.s	le
ancien	A.qual.m.s	ancien
niveau	N.C.m.s	niveau
;	PONCT.W	;
174	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
La	D.def.f.s	le
fonction	N.C.f.s	fonction
error_log()	N.P.m.s	Errorçlogçë
envoie	V.P.3.s	envoyer
un	D.ind.m.s	un
message	N.C.m.s	message
d'	P	de
erreur	N.C.f.s	erreur
:	PONCT.W	:
–	N.C.m.s	–
dans	P	dans
les	D.def.m.p	le
logs	N.C.m.p	log
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
,	PONCT.W	,
–	N.C.m.s	–
à	P	à
un	D.ind.m.s	un
port	N.C.m.s	port
TCP	N.P.f.s	Tcp
,	PONCT.W	,
ou	C.C	ou
–	N.C.m.s	–
à	P	à
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
.	PONCT.S	.

Elle	CL.suj.3.f.s	elle
prend	V.P.3.s	prendre
comme	P	comme
paramètres	N.C.m.p	paramètre
:	PONCT.W	:
–	D.card.m.p	–
message	N.C.m.s	message
:	PONCT.W	:
message	N.C.m.s	message
qui	PRO.rel.m.s	qui
doit	V.P.3.s	devoir
être	VW	être
envoyé	VK.m.s	envoyer
,	PONCT.W	,
–	P+D.def.m.s	c
message_type	N.C.m.s	messageçtype
:	PONCT.W	:
type	N.C.m.s	type
de	P	de
transmission	N.C.f.s	transmission
choisi	VK.m.s	choisir
:	PONCT.W	:
0	PRO.card.m.s	@card@
:	PONCT.W	:
système	N.C.m.s	système
standard	A.qual.m.s	standard
de	P	de
log	N.C.m.s	log
de	P	de
PHP	N.P.m.s	Php
,	PONCT.W	,
1	N.card.m.s	@card@
:	PONCT.W	:
mail	N.C.m.s	mail
,	PONCT.W	,
2	N.card.m.s	@card@
:	PONCT.W	:
machine	N.C.f.s	machine
distante	A.qual.f.s	distant
(	PONCT.W	(
TCP/IP	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
ou	C.C	ou
3	A.card.m.s	@card@
:	PONCT.W	:
fichier	N.C.m.s	fichier
local	A.qual.m.s	local
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
error_log("Alerte	N.C.f.s	errorçlogççalerte
rouge	A.qual.f.s	rouge
"	PONCT.W	"
,	PONCT.W	,
1	N.card.m.s	@card@
,	PONCT.W	,
"	PONCT.W	"
webmaster@monsite.fr	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
175	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.f.p	le
cookies	N.C.f.p	cookie
Les	D.def.f.p	le
cookies	N.C.f.p	cookie
sont	V.P.3.p	être
un	D.ind.m.s	un
mécanisme	N.C.m.s	mécanisme
d'	P	de
enregistrement	N.C.m.s	enregistrement
d'	P	de
informations	N.C.f.p	information
sur	P	sur
le	D.def.m.s	le
disque	N.C.m.s	disque
du	P+D.def.m.s	du
client	N.C.m.s	client
mais	C.C	mais
aussi	ADV.-	aussi
de	P	de
relecture	N.C.f.s	relecture
de	P	de
ces	D.dem.f.p	ce
informations	N.C.f.p	information
;	PONCT.W	;
Ce	D.dem.m.s	ce
système	N.C.m.s	système
permet	V.P.3.s	permettre
d'	P	de
authentifier	VW	authentifier
et	C.C	et
de	P	de
suivre	VW	suivre
les	D.def.m.p	le
visiteurs	N.C.m.p	visiteur
;	PONCT.W	;
PHP	N.P.m.s	Php
supporte	V.P.3.s	supporter
les	D.def.f.p	le
cookies	N.C.f.p	cookie
de	P	de
manière	N.C.f.s	manière
transparente	A.qual.f.s	transparent
;	PONCT.W	;
176	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Pour	P	pour
envoyer	VW	envoyer
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
,	PONCT.W	,
on	CL.suj.3.m.s	on
utilise	V.P.3.s	utiliser
la	D.def.f.s	le
commande	N.C.f.s	commande
setcookie()	N.P.m.s	Setcookieëë
;	PONCT.W	;
Les	D.def.f.p	le
Cookies	N.P.f.p	Cookies
font	V.P.3.p	faire
partie	N.C.f.s	partie
de	P	de
l'	D.def.f.s	le
entête	N.C.f.s	entête
HTTP	N.P.m.s	Http
,	PONCT.W	,
ce	PRO.dem.m.s	ce
qui	PRO.rel.m.s	qui
impose	V.P.3.s	imposer
que	C.S	que
setcookie()	N.C.m.s	setcookieëë
soit	V.S.3.s	être
appelée	VK.f.s	appeler
avant	P	avant
tout	D.ind.m.s	tout
affichage	N.C.m.s	affichage
sur	P	sur
le	D.def.m.s	le
client	N.C.m.s	client
(	PONCT.W	(
idem	A.ord.m.s	<unknown>
header())	N.C.m.s	headerçç
;	PONCT.W	;
Avec	P	avec
PHP4	N.P.m.s	Php4
,	PONCT.W	,
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
contourner	VW	contourner
cette	D.dem.f.s	ce
limitation	N.C.f.s	limitation
en	P	en
bufferisant	VG	bufferiser
la	D.def.f.s	le
sortie	N.C.f.s	sortie
standard	A.qual.f.s	standard
grâce	N.C.f.s	grâce
à	P	à
la	D.def.f.s	le
fonction	N.C.f.s	fonction
ob_start()	N.P.m.s	Obästartçë
puis	C.C	pui
en	P	en
libérant	VG	libérer
celle	PRO.dem.f.s	celui
-ci	ADV.-	-ci
grâce	N.C.f.s	grâce
à	P	à
la	D.def.f.s	le
fonction	N.C.f.s	fonction
ob_end_flush	N.P.x.s	Obäendäflush
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
indiquer	VW	indiquer
à	P	à
PHP4	N.P.x.s	Php4
de	P	de
bufferiser	VW	bufferiser
automatiquement	ADV.-	automatiquement
la	D.def.f.s	le
sortie	N.C.f.s	sortie
grâce	N.C.f.s	grâce
à	P	à
l'	D.def.f.s	le
option	N.C.f.s	option
output_buffering	N.C.m.s	outputäbuffering
de	P	de
php.ini	N.C.m.s	phpini
mais	C.C	mais
ceci	PRO.dem.m.s	ceci
ralentit	V.P.3.s	ralentir
sensiblement	ADV.-	sensiblement
PHP4	N.P.m.s	Php4
;	PONCT.W	;
177	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Tous	A.ind.m.p	tous
les	D.def.f.p	le
cookies	N.C.f.p	cookie
qui	PRO.rel.f.p	qui
sont	V.P.3.p	être
envoyés	VK.m.p	envoyer
au	P+D.def.m.s	au
client	N.C.m.s	client
sont	V.P.3.p	être
automatiquement	ADV.-	automatiquement
retournés	VK.m.p	retourner
au	P+D.def.m.s	au
script	N.C.m.s	script
PHP	N.P.m.s	Php
et	C.C	et
placés	VK.m.p	placer
dans	P	dans
le	D.def.m.s	le
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
$HTTP_COOKIE_VARS	N.P.x.s	<unknown>
;	PONCT.W	;
Seuls	A.ind.m.p	seul
les	D.def.f.p	le
cookies	N.C.f.p	cookie
qui	PRO.rel.f.p	qui
correspondent	V.P.3.p	correspondre
au	P+D.def.m.s	au
nom	N.C.m.s	nom
de	P	de
domaine	N.C.m.s	domaine
de	P	de
la	D.def.f.s	le
page	N.C.f.s	page
demandée	VK.f.s	demander
sont	V.P.3.p	être
envoyés	VK.m.p	envoyer
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
par	P	par
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
;	PONCT.W	;
Pour	P	pour
affecter	VW	affecter
plusieurs	D.ind.f.p	plusieurs
valeurs	N.C.f.p	valeur
à	P	à
un	D.ind.m.s	un
seul	A.ind.m.s	seul
cookie	N.C.m.s	cookie
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
ajouter	VW	ajouter
[	PONCT.W	[
]	PONCT.W	]
au	P+D.def.m.s	au
nom	N.C.m.s	nom
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
;	PONCT.W	;
178	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
cookie_ecriture.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
setcookie("MonCookie	N.C.f.s	setcookieç-moncookie
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
Contenu	VK.m.s	contenir
"	PONCT.W	"
,	PONCT.W	,
time()	N.C.m.s	timeçë
+	P	p
3600	PRO.card.m.p	@card@
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<HTML><BODY><H1>	N.P.x.s	<unknown>
Maintenant	ADV.-	maintenant
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
l'	CL.obj.3.m.s	le
avez	V.P.2.p	avoir
!	PONCT.S	!

<br>	N.P.m.s	<unknown>
Allez	V.Y.2.p	aller
sur	P	sur
la	D.def.f.s	le
page	N.C.f.s	page
<a	P	ce
href	N.C.m.s	href
=	PONCT.W	=
"	PONCT.W	"
cookie_lecture.php">précédente</a>	N.P.x.s	Cookieëlecturechénteëcénteë
.	PONCT.S	.

</H1></BODY></HTML>	N.P.x.s	<unknown>
179	D.card.f.p	@card@
Autres	A.ind.f.p	autre
fonctionnalités	N.C.f.p	fonctionnalité
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
(	PONCT.W	(
suite	N.C.f.s	suite
)	PONCT.W	)
:	PONCT.W	:
cookie_lecture.php	N.C.m.s	<unknown>
<HTML><BODY><H1>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	ET	if
(isset($HTTP_COOKIE_VARS["MonCookie"]))	N.P.x.s	<unknown>
:	PONCT.W	:
?	PONCT.S	?

>	P	à
Le	D.def.m.s	le
cookie	N.C.m.s	cookie
MonCookie	N.P.m.s	Moncookie
contient	V.P.3.s	contenir
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
print	A.qual.m.s	print
$HTTP_COOKIE_VARS["MonCookie	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
else	PPRO.3.f.s	<unknown>
:	PONCT.W	:
?	PONCT.S	?

>	P	à
Vous	CL.suj.2.m.p	vous
n'	ADV.neg	ne
avez	V.P.2.p	avoir
pas	ADV.neg	pas
le	D.def.m.s	le
cookie	N.C.m.s	cookie
MonCookie.<br>	N.P.m.s	<unknown>
Allez	N.P.m.s	Allez
le	CL.obj.3.m.s	le
chercher	VW	chercher
<a	P	ce
href	N.C.m.s	href
=	PONCT.W	=
"	PONCT.W	"
cookie_ecriture.php">ici</a>	N.P.x.s	<unknown>
.	PONCT.S	.

<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
endif	A.qual.m.s	endif
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</H1></BODY></HTML>	N.P.x.s	<unknown>
180	N.card.f.s	@card@
Chapitre	N.C.m.s	chapitre
4	A.card.m.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Utilisation	N.C.f.s	utilisation
avancée	VK.f.s	avancer
181	A.card.f.s	@card@
Utilisation	N.C.f.s	utilisation
avancée	VK.f.s	avancer
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
du	P+D.def.m.s	du
chapitre	N.C.m.s	chapitre
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
;	PONCT.W	;
Traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
;	PONCT.W	;
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
.	PONCT.S	.

182	N.card.f.s	@card@
Section	N.C.f.s	section
1	D.card.m.s	@card@
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
183	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Utilisation	N.C.f.s	utilisation
des	P+D.def.m.p	du
SGBDs	N.P.m.p	Sgbds
;	PONCT.W	;
Interfaçage	N.P.x.s	Interfaçage
avec	P	avec
l'	D.def.f.s	le
API	N.P.f.s	Api
Apache	N.P.m.s	Apache
;	PONCT.W	;
Utilisation	N.C.f.s	utilisation
de	P	de
LDAP	N.P.m.s	Ldap
.	PONCT.S	.

184	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Utilisation	N.C.f.s	utilisation
des	P+D.def.m.p	du
SGBDs	N.P.m.p	Sgbds
Un	D.ind.m.s	un
grand	A.qual.m.s	grand
nombre	N.C.m.s	nombre
de	P	de
S	D.ind.m.p	s
ystèmes	N.C.m.p	ystème
de	P	de
G	N.C.m.s	g
estion	N.C.f.s	estion
de	P	de
B	D.card.f.p	B
ases	N.C.f.p	ases
de	P	de
D	N.C.m.s	d
onnées	N.C.f.p	onnée
(	PONCT.W	(
SGBD	N.P.m.s	Sgbd
)	PONCT.W	)
sont	V.P.3.p	être
supportés	VK.m.p	supporter
par	P	par
PHP	N.P.m.s	Php
;	PONCT.W	;
La	D.def.f.s	le
plupart	N.C.f.s	plupart
sont	V.P.3.p	être
accessibles	A.qual.m.p	accessible
via	P	via
le	D.def.m.s	le
langage	N.C.m.s	langage
SQL	N.P.m.s	Sql
(	PONCT.W	(
S	CL.refl.3.m.s	s
tructured	N.C.m.s	tructured
Q	PONCT.W	q
uery	ET	<unknown>
L	PONCT.W	l
angage	N.C.m.s	angage
)	PONCT.W	)
;	PONCT.W	;
Celui	PRO.dem.m.s	celui
-ci	CL.suj.3.m.s	ci
permet	V.P.3.s	permettre
,	PONCT.W	,
comme	P	comme
son	D.poss.m.s	son
nom	N.C.m.s	nom
l'	CL.obj.3.m.s	le
indique	V.P.3.s	indiquer
,	PONCT.W	,
de	P	de
réaliser	VW	réaliser
des	D.ind.f.p	du
requêtes	N.C.f.p	requête
sur	P	sur
les	D.def.f.p	le
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
et	C.C	et
ceci	PRO.dem.m.s	ceci
de	P	de
façon	N.C.f.s	façon
structurée	A.qual.f.s	structuré
et	C.C	et
standardisée	A.qual.f.s	standardisé
;	PONCT.W	;
L'	D.def.f.s	le
utilisation	N.C.f.s	utilisation
des	P+D.def.f.p	du
bases	N.C.f.p	base
des	P+D.def.f.p	du
données	N.C.f.p	donnée
est	V.P.3.s	être
la	D.def.f.s	le
clé	N.C.f.s	clé
de	P	de
voûte	N.C.f.s	voûte
des	P+D.def.m.p	du
sites	N.C.m.p	site
dynamiques	A.qual.m.p	dynamique
et	C.C	et
de	P	de
commerce	N.C.m.s	commerce
électronique	A.qual.m.s	électronique
;	PONCT.W	;
185	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Bases	N.P.m.s	Bases
SQL	N.P.m.s	Sql
supportées	VK.f.p	supporter
:	PONCT.W	:
Adabas	N.P.m.s	Adabas
D	P+D.def.m.s	du
Empress	N.P.m.s	Empress
IBM	N.P.m.s	Ibm
DB2	N.P.m.s	<unknown>
Informix	N.P.m.s	Informix
Interbase	N.P.m.s	Interbase
mSQL	N.P.m.s	<unknown>
MySQL	N.P.m.s	Mysql
ODBC	N.P.m.s	Odbc
(	PONCT.W	(
Access	N.P.m.s	Access
,	PONCT.W	,
MS-SQL	N.P.m.s	Ms-Sql
,	PONCT.W	,
iODBC	N.P.x.s	<unknown>
...	PONCT.W	<unknown>
)	PONCT.W	)
Oracle	N.P.m.s	Oracle
PostgreSQL	N.P.x.s	Postgresql
Raima	N.P.m.s	Raima
Velocis	N.P.m.s	Velocis
Solid	N.P.m.s	Solid
Sybase	N.P.m.s	Sybase
Autres	A.ind.m.p	autre
SGBD	N.P.m.s	Sgbd
supportés	VK.m.p	supporter
:	PONCT.W	:
–	P	à
dBase	N.C.f.s	dbase
,	PONCT.W	,
–	P	à
filePro	N.P.m.s	Filepro
(	PONCT.W	(
lecture	N.C.f.s	lecture
seule	A.qual.f.s	seul
)	PONCT.W	)
,	PONCT.W	,
–	D.card.m.s	–
dbm	N.C.m.s	<unknown>
(	PONCT.W	(
ndbm	N.C.m.s	<unknown>
,	PONCT.W	,
gdbm	N.C.m.s	<unknown>
,	PONCT.W	,
Berkeley	N.P.m.s	Berkeley
db	ET	db
)	PONCT.W	)
.	PONCT.S	.

186	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Principales	A.qual.f.p	principal
commandes	N.C.f.p	commande
SQL	N.P.m.s	Sql
:	PONCT.W	:
–	P	à
CREATE	N.C.m.s	create
TABLE	N.P.f.s	Table
:	PONCT.W	:
crée	V.P.3.s	créer
une	D.ind.f.s	un
nouvelle	A.qual.f.s	nouveau
table	N.C.f.s	table
,	PONCT.W	,
–	P	à
DELETE	N.P.f.s	Delete
:	PONCT.W	:
supprime	N.C.f.s	supprime
des	P+D.def.f.p	du
lignes	N.C.f.p	ligne
d'	P	de
une	D.ind.f.s	un
table	N.C.f.s	table
,	PONCT.W	,
–	N.C.m.s	–
INSERT	N.P.m.s	Insert
:	PONCT.W	:
insère	V.P.3.s	insérer
une	D.ind.f.s	un
nouvelle	A.qual.f.s	nouveau
ligne	N.C.f.s	ligne
dans	P	dans
une	D.ind.f.s	un
table	N.C.f.s	table
,	PONCT.W	,
–	P	à
SELECT	N.P.f.s	Select
:	PONCT.W	:
récupère	V.P.3.s	récupérer
des	P+D.def.f.p	du
lignes	N.C.f.p	ligne
d'	P	de
une	D.ind.f.s	un
table	N.C.f.s	table
ou	C.C	ou
d'	P	de
une	D.ind.f.s	un
vue	N.C.f.s	vue
,	PONCT.W	,
–	P	à
UPDATE	N.P.m.s	Update
:	PONCT.W	:
modifie	N.C.f.s	modifie
des	P+D.def.f.p	du
valeurs	N.C.f.p	valeur
dans	P	dans
des	D.ind.m.p	du
champs	N.C.m.p	champ
.	PONCT.S	.

187	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
création	N.C.f.s	création
et	C.C	et
alimentation	N.C.f.s	alimentation
d'	P	de
une	D.ind.f.s	un
table	N.C.f.s	table
CREATE	N.P.f.s	Create
TABLE	N.P.f.s	Table
Personne	N.P.f.s	Personne
(	PONCT.W	(
Secu	N.P.x.s	Secu
INT8	N.P.m.s	Intm
NOT	N.P.m.s	Not
NULL	N.P.m.s	Null
PRIMARY	N.P.m.s	Primary
KEY	N.P.m.s	Key
,	PONCT.W	,
Nom	N.P.m.s	Nom
VARCHAR(20)	N.P.m.s	Varcharçh0
NOT	N.P.m.s	Not
NULL	N.P.m.s	Null
,	PONCT.W	,
Prenom	N.P.m.s	Prenom
VARCHAR(20)	N.P.m.s	Varcharçh0
NOT	N.P.m.s	Not
NULL	N.P.m.s	Null
)	PONCT.W	)
INSERT	N.P.m.s	Insert
INTO	N.P.m.s	Into
Personne	N.P.m.s	Personne
VALUES	N.P.m.s	Values
(	PONCT.W	(
’	N.C.m.s	’
132456789	N.card.m.s	@card@
’	N.C.m.s	’
,	PONCT.W	,
’	N.C.m.s	’
Smith	N.P.m.s	Smith
’	N.C.m.s	’
,	PONCT.W	,
’	P	à
John	N.P.m.s	John
’	N.C.m.s	’
)	PONCT.W	)
INSERT	N.P.m.s	Insert
INTO	N.P.m.s	Into
Personne	N.P.m.s	Personne
VALUES	N.P.m.s	Values
(	PONCT.W	(
’	N.C.m.s	’
987654321	N.card.f.s	@card@
’	N.C.m.s	’
,	PONCT.W	,
’	P	à
Gates	N.P.m.s	Gates
’	N.C.m.s	’
,	PONCT.W	,
’	N.C.m.s	’
Bill	N.P.m.s	Bill
’	N.C.m.s	’
)	PONCT.W	)
188	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
(	PONCT.W	(
suite	N.C.f.s	suite
)	PONCT.W	)
:	PONCT.W	:
affichage	N.C.m.s	affichage
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
et	C.C	et
suppression	N.C.f.s	suppression
d'	P	de
une	D.ind.f.s	un
entrée	N.C.f.s	entrée
SELECT	N.P.f.s	Select
*	N.C.m.s	*
FROM	N.P.m.s	From
Personne	N.P.m.s	Personne
Secu	N.P.m.s	Secu
Nom	N.P.m.s	Nom
Prenom	N.P.m.s	Prenom
132456789	N.card.m.s	@card@
Smith	N.P.m.s	Smith
John	N.P.m.s	John
987654321	N.card.f.s	@card@
Gates	N.P.m.s	Gates
Bill	N.P.m.s	Bill
DELETE	N.P.m.s	Delete
FROM	N.P.m.s	From
Personne	N.P.m.s	Personne
WHERE	N.P.m.s	Where
Nom	N.P.m.s	Nom
=	V.P.3.s	être
’	N.P.m.s	’
Gates	N.P.m.s	Gates
’	N.C.m.s	’
189	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Chaque	D.ind.f.s	chaque
base	N.C.f.s	base
SQL	N.P.m.s	Sql
possède	V.P.3.s	posséder
sa	D.poss.f.s	son
propre	A.qual.f.s	propre
API	N.C.f.s	api
mais	C.C	mais
les	D.def.m.p	le
mécanismes	N.C.m.p	mécanisme
de	P	de
consultation	N.C.f.s	consultation
sont	V.P.3.p	être
globalement	ADV.-	globalement
les	D.def.m.p	le
mêmes	A.ind.m.p	même
pour	P	pour
toutes	PRO.ind.f.p	tout
:	PONCT.W	:
–	D.card.f.p	–
connexion	N.C.f.s	connexion
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
de	P	de
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
(	PONCT.W	(
machine	N.C.f.s	machine
,	PONCT.W	,
utilisateur	N.C.m.s	utilisateur
,	PONCT.W	,
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
)	PONCT.W	)
,	PONCT.W	,
–	P	à
sélection	N.C.f.s	sélection
de	P	de
la	D.def.f.s	le
base	N.C.f.s	base
à	P	à
utiliser	VW	utiliser
(	PONCT.W	(
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
base	N.C.f.s	base
)	PONCT.W	)
,	PONCT.W	,
–	P	à
requête	N.C.f.s	requête
SQL	N.P.m.s	Sql
,	PONCT.W	,
–	P	à
exploitation	N.C.f.s	exploitation
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
(	PONCT.W	(
affichage	N.C.m.s	affichage
...	PONCT.W	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
déconnexion	N.C.f.s	déconnexion
.	PONCT.S	.

Bien	ADV.-	bien
sûr	A.qual.m.s	sûr
avant	ADV.-	avant
d'	P	de
utiliser	VW	utiliser
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
particulière	A.qual.f.s	particulier
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
s'	CL.refl.3.m.s	se
assurer	VW	assurer
que	C.S	que
la	D.def.f.s	le
librairie	N.C.f.s	librairie
correspondante	A.qual.f.s	correspondant
est	V.P.3.s	être
chargée	VK.f.s	charger
dans	P	dans
PHP	N.P.m.s	Php
;	PONCT.W	;
190	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Pour	P	pour
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
MySQL	N.P.m.s	Mysql
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
ajouter	VW	ajouter
la	D.def.f.s	le
ligne	N.C.f.s	ligne
extension=mysql.so	A.qual.f.s	<unknown>
dans	P	dans
le	D.def.m.s	le
fichier	N.C.m.s	fichier
php3.ini/php.ini	A.ind.m.s	<unknown>
et	C.C	et
vérifier	VW	vérifier
que	C.S	que
le	D.def.m.s	le
fichier	N.C.m.s	fichier
mysql.so	N.P.m.s	<unknown>
se	CL.refl.3.m.s	se
trouve	V.P.3.s	trouver
bien	ADV.-	bien
dans	P	dans
le	D.def.m.s	le
répertoire	N.C.m.s	répertoire
extension_dir	VW	extensionädir
;	PONCT.W	;
Les	D.def.f.p	le
fonctions	N.C.f.p	fonction
MySQL	N.P.m.s	Mysql
les	D.def.f.p	le
plus	ADV.-	plus
couramment	ADV.-	couramment
utilisées	VK.f.p	utiliser
sont	V.P.3.p	être
les	D.def.f.p	le
suivantes	A.qual.f.p	suivant
:	PONCT.W	:
–	P	à
mysql_connect()	N.C.m.s	mysqläconnectçë
:	PONCT.W	:
ouvre	V.P.3.s	ouvrir
une	D.ind.f.s	un
connexion	N.C.f.s	connexion
à	P	à
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
MySQL	N.P.m.s	Mysql
,	PONCT.W	,
–	N.C.m.s	–
mysql_list_*()	N.C.m.s	mysqlälistëëç
:	PONCT.W	:
retournent	V.P.3.p	retourner
la	D.def.f.s	le
liste	N.C.f.s	liste
des	P+D.def.f.p	du
bases	N.C.f.p	base
,	PONCT.W	,
tables	N.C.f.p	table
ou	C.C	ou
champs	N.C.m.p	champ
disponibles	A.qual.m.p	disponible
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
,	PONCT.W	,
–	N.C.m.s	–
mysql_select_db()	N.C.m.s	mysqläselectëd
:	PONCT.W	:
selectionne	V.P.3.s	selectionner
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
,	PONCT.W	,
191	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.C.m.s	–
mysql_query()	N.C.m.s	mysqläqueryçë
:	PONCT.W	:
envoie	V.P.3.s	envoyer
une	D.ind.f.s	un
requête	N.C.f.s	requête
SQL	N.P.m.s	Sql
sur	P	sur
la	D.def.f.s	le
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
active	A.qual.f.s	actif
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
et	C.C	et
renvoie	V.P.3.s	renvoyer
un	D.ind.m.s	un
identifiant	N.C.m.s	identifiant
de	P	de
résultat	N.C.m.s	résultat
:	PONCT.W	:
mysql_result()	N.P.x.s	<unknown>
:	PONCT.W	:
exploite	V.P.3.s	exploiter
le	D.def.m.s	le
résultat	N.C.m.s	résultat
,	PONCT.W	,
mysql_fetch_*()	N.P.x.s	Mysqlëfetchëëë
:	PONCT.W	:
exploitent	V.P.3.p	exploiter
et	C.C	et
manipulent	V.P.3.p	manipuler
le	D.def.m.s	le
résultat	N.C.m.s	résultat
,	PONCT.W	,
mysql_field_*()	N.C.m.s	mysqlëfieldëë
:	PONCT.W	:
permettent	V.P.3.p	permettre
de	P	de
naviguer	VW	naviguer
au	P+D.def.m.s	au
sein	N.C.m.s	sein
du	P+D.def.m.s	du
résultat	N.C.m.s	résultat
.	PONCT.S	.

–	N.C.m.s	–
mysql_close()	N.C.m.s	<unknown>
:	PONCT.W	:
ferme	V.P.3.s	fermer
la	D.def.f.s	le
connexion	N.C.f.s	connexion
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
MySQL	N.P.m.s	Mysql
(	PONCT.W	(
fait	VK.m.s	faire
par	P	par
défaut	N.C.m.s	défaut
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
du	P+D.def.m.s	du
script	N.C.m.s	script
)	PONCT.W	)
.	PONCT.S	.

192	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
de	P	de
réaliser	VW	réaliser
une	D.ind.f.s	un
connection	N.C.f.s	connection
persistante	A.qual.f.s	persistant
à	P	à
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
MySQL	N.P.m.s	Mysql
en	P	en
utilisant	VG	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
mysql_pconnect()	N.P.x.s	Mysqläpconnectëë
;	PONCT.W	;
Une	D.ind.f.s	un
telle	A.qual.f.s	tel
connexion	N.C.f.s	connexion
ne	ADV.neg	ne
sera	V.F.3.s	être
pas	ADV.neg	pas
fermée	VK.f.s	fermer
automatiquement	ADV.-	automatiquement
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
du	P+D.def.m.s	du
script	N.C.m.s	script
;	PONCT.W	;
Accélère	V.P.3.s	accélérer
sensiblement	ADV.-	sensiblement
les	D.def.m.p	le
scripts	N.C.m.p	script
quand	C.S	quand
les	D.def.f.p	le
connexions	N.C.f.p	connexion
à	P	à
la	D.def.f.s	le
base	N.C.f.s	base
sont	V.P.3.p	être
fréquentes	A.qual.f.p	fréquent
;	PONCT.W	;
La	D.def.f.s	le
connexion	N.C.f.s	connexion
sera	V.F.3.s	être
refermée	VK.f.s	refermer
automatiquement	ADV.-	automatiquement
après	P	après
un	D.ind.m.s	un
certain	A.ind.m.s	certain
temps	N.C.m.s	temps
d'	P	de
inutilisation	N.C.f.s	inutilisation
;	PONCT.W	;
193	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
mysql_pconnect("db.mon-server.com	N.P.x.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
username	A.qual.m.s	username
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
password	ET	password
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
mysql_select_db("ma_base")	N.C.m.s	mysqläselectämbaseë
;	PONCT.W	;
$resultat	N.C.m.s	<unknown>
=	PONCT.W	=
mysql_query("SELECT	N.C.m.s	mysqläqueryselect
*	ET	*
FROM	N.P.m.s	From
ma_table	A.qual.m.s	maëtable
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$resultat	N.C.m.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
?	PONCT.S	?

>	P	à
<TABLE>	N.C.m.s	<unknown>
<TR><TH>Nom</TH>	N.C.m.s	<unknown>
<TH>Description</TH></TR>	N.P.x.s	<unknown>
194	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
while	N.C.m.s	while
(	PONCT.W	(
$tableau	N.C.m.s	<unknown>
=	PONCT.W	=
mysql_fetch_array($resultat))	N.P.m.s	Mysqlëfetchërrayçulçë
echo	ET	echo
"	PONCT.W	"
<TR><TD>	N.P.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$tableau["nom	ET	çtableauçnom
"	PONCT.W	"
]	PONCT.W	]
,	PONCT.W	,
"	PONCT.W	"
</TD>	N.P.f.s	<unknown>
<TD>	N.P.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$tableau["descr	ET	<unknown>
"	PONCT.W	"
]	PONCT.W	]
,	PONCT.W	,
"	PONCT.W	"
</TD></TR>\n	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</TABLE>	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
else	PPRO.3.f.s	<unknown>
:	PONCT.W	:
echo	ET	echo
"	PONCT.W	"
Votre	D.poss.f.s	votre
table	N.C.f.s	table
est	V.P.3.s	être
vide	A.qual.f.s	vide
"	PONCT.W	"
;	PONCT.W	;
endif	N.C.m.s	endif
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
195	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
des	D.ind.m.p	du
outils	N.C.m.p	outil
d'	P	de
administration	N.C.f.s	administration
de	P	de
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
entièrement	ADV.-	entièrement
écrits	VK.m.p	écrire
en	P	en
PHP	N.P.m.s	Php
;	PONCT.W	;
–	P+D.def.m.s	c
PHPMyAdmin	N.P.m.s	Phpmyadmin
pour	P	pour
les	D.def.f.p	le
bases	N.C.f.p	base
MySQL	N.P.m.s	Mysql
(	PONCT.W	(
http	ET	<unknown>
://www.phpwizard.net/phpMyAdmin/	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	N.P.x.s	–
PHPPgAdmin	N.P.m.s	Phppgadmin
pour	P	pour
les	D.def.f.p	le
bases	N.C.f.p	base
PostgreSQL	N.P.x.s	Postgresql
(	PONCT.W	(
http	ET	<unknown>
://www.phpwizard.net/phpPgAdmin/	N.P.x.s	<unknown>
)	PONCT.W	)
.	PONCT.S	.

Ces	D.dem.m.p	ce
outils	N.C.m.p	outil
sont	V.P.3.p	être
très	ADV.-	très
utiles	A.qual.m.p	utile
pour	P	pour
créer	VW	créer
les	D.def.f.p	le
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
avant	P	avant
de	P	de
les	CL.obj.3.m.p	le
utiliser	VW	utiliser
dans	P	dans
des	D.ind.m.p	du
scripts	N.C.m.p	script
PHP	N.P.m.s	Php
;	PONCT.W	;
Ils	CL.suj.3.m.p	il
sont	V.P.3.p	être
également	ADV.-	également
pratique	A.qual.m.s	pratique
pour	P	pour
maintenir	VW	maintenir
les	D.def.f.p	le
bases	N.C.f.p	base
;	PONCT.W	;
Ces	D.dem.m.p	ce
outils	N.C.m.p	outil
étant	VG	être
libres	A.qual.m.p	libre
,	PONCT.W	,
leur	D.poss.f.s	leur
code	A.qual.f.s	code
source	N.C.f.s	source
peut	V.P.3.s	pouvoir
servir	VW	servir
de	P	de
référence	N.C.f.s	référence
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
avec	P	avec
PHP	N.P.m.s	Php
;	PONCT.W	;
196	N.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Interfaçage	N.P.x.s	Interfaçage
avec	P	avec
l'	D.def.f.s	le
API	N.P.f.s	Api
Apache	N.P.m.s	Apache
La	D.def.f.s	le
fonction	N.C.f.s	fonction
getallheaders()	N.P.m.s	<unknown>
permet	V.P.3.s	permettre
de	P	de
récupérer	VW	récupérer
tous	A.ind.m.p	tous
les	D.def.f.p	le
en-têtes	N.C.f.p	en-tête
HTTP	N.P.m.s	Http
correspondant	VG	correspondre
à	P	à
la	D.def.f.s	le
requête	N.C.f.s	requête
courante	A.qual.f.s	courant
;	PONCT.W	;
Les	D.def.f.p	le
en-têtes	N.C.f.p	en-tête
sont	V.P.3.p	être
stockés	VK.m.p	stocker
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
$headers	N.P.x.s	<unknown>
=	PONCT.W	=
getallheaders()	N.C.m.s	<unknown>
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
list($header	N.C.m.s	list-ëheader
,	PONCT.W	,
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
=	PONCT.W	=
each($headers))	N.P.x.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
$header	N.P.m.s	<unknown>
:	PONCT.W	:
$valeur	N.C.f.s	çvaleur
<BR>\n	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
197	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Utilisation	N.C.f.s	utilisation
de	P	de
LDAP	N.P.m.s	Ldap
L	D.def.m.s	l
ightweight	N.C.m.s	ightweight
D	P+D.def.m.s	du
irectory	ET	irectory
A	P	à
ccess	N.C.m.p	ccess
P	PONCT.W	p
rotocol	N.C.m.s	rotocol
;	PONCT.W	;
Protocole	N.P.m.s	Protocole
normalisé	VK.m.s	normaliser
d'	P	de
accès	N.C.m.s	accès
aux	P+D.def.m.p	au
services	N.C.m.p	service
d'	P	de
annuaires	N.C.m.p	annuaire
;	PONCT.W	;
Un	D.ind.m.s	un
annuaire	N.C.m.s	annuaire
est	V.P.3.s	être
équivalent	A.qual.m.s	équivalent
à	P	à
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
où	PRO.rel.f.s	où
les	D.def.f.p	le
informations	N.C.f.p	information
sont	V.P.3.p	être
rangées	VK.f.p	ranger
de	P	de
manière	N.C.f.s	manière
hiérarchique	A.qual.f.s	hiérarchique
;	PONCT.W	;
Les	D.def.f.p	le
caractéristiques	N.C.f.p	caractéristique
de	P	de
LDAP	N.P.m.s	Ldap
:	PONCT.W	:
–	P	à
organisation	N.C.f.s	organisation
globale	A.qual.f.s	global
,	PONCT.W	,
–	P	à
standard	N.C.m.s	standard
ouvert	A.qual.m.s	ouvert
,	PONCT.W	,
–	P	à
extensible	A.qual.m.s	extensible
et	C.C	et
paramétrable	A.qual.m.s	paramétrable
,	PONCT.W	,
–	D.card.m.p	–
stockages	N.C.m.p	stockage
de	P	de
données	N.C.f.p	donnée
hétérogènes	A.qual.f.p	hétérogène
,	PONCT.W	,
–	P	à
sécurisé	VK.m.s	sécuriser
.	PONCT.S	.

198	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
LDAP	N.P.m.s	Ldap
utilise	V.P.3.s	utiliser
une	D.ind.f.s	un
syntaxe	N.C.f.s	syntaxe
à	P	à
nom	N.C.m.s	nom
distincts	A.qual.m.p	distinct
(	PONCT.W	(
dn	N.C.m.s	dn
:	PONCT.W	:
distinguished	N.C.m.s	distinguished
names	ET	name
)	PONCT.W	)
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
dn	N.C.m.s	dn
et	C.C	et
signification	N.C.f.s	signification
dn	P	dn
=	N.C.m.s	=
"	PONCT.W	"
cn=Linus	N.C.m.p	cnëlinus
Torvalds	N.P.m.s	Torvalds
,	PONCT.W	,
ou=Devel	N.C.m.s	ouëdevel
,	PONCT.W	,
o=Transmeta	N.P.m.s	<unknown>
,	PONCT.W	,
c=USA	N.C.m.s	cçusa
"	PONCT.W	"
country	ET	country
=	P	à
USA	D.ind.f.s	usa
organization	N.C.f.s	organization
=	PONCT.W	=
Transmeta	N.P.m.s	Transmeta
organizationUnit	V.I.3.s	<unknown>
=	P	à
Devel	N.P.m.s	Devel
commonName	N.C.m.s	commonname
=	P	à
Linus	N.P.m.s	Linus
Torvalds	N.P.m.s	Torvalds
199	N.card.m.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Avant	VG	avoir
de	P	de
pouvoir	VW	pouvoir
utiliser	VW	utiliser
LDAP	N.P.m.s	Ldap
avec	P	avec
PHP	N.P.m.s	Php
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
ajouter	VW	ajouter
la	D.def.f.s	le
ligne	A.qual.f.s	ligne
extension	N.C.f.s	extension
=	PONCT.W	=
ldap.so	N.C.m.p	<unknown>
dans	P	dans
php3.ini/php.ini	N.C.m.s	<unknown>
et	C.C	et
vérifier	VW	vérifier
que	C.S	que
la	D.def.f.s	le
librairie	N.C.f.s	librairie
ldap.so	ADV.-	<unknown>
se	CL.refl.3.f.s	se
trouve	V.P.3.s	trouver
bien	ADV.-	bien
dans	P	dans
le	D.def.m.s	le
répertoire	N.C.m.s	répertoire
extension_dir	VW	extensionädir
;	PONCT.W	;
Une	D.ind.f.s	un
séquence	N.C.f.s	séquence
type	A.qual.f.s	type
de	P	de
consultation/modification	N.C.f.s	<unknown>
d'	P	de
une	D.ind.f.s	un
base	N.C.f.s	base
LDAP	N.P.f.s	Ldap
avec	P	avec
PHP	N.P.m.s	Php
prendra	V.F.3.s	prendre
la	D.def.f.s	le
forme	N.C.f.s	forme
suivante	A.qual.f.s	suivant
:	PONCT.W	:
–	N.C.m.s	–
ldap_connect()	N.C.m.s	ldapàconnectçl
:	PONCT.W	:
établit	V.P.3.s	établir
une	D.ind.f.s	un
connexion	N.C.f.s	connexion
avec	P	avec
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
LDAP	N.P.m.s	Ldap
,	PONCT.W	,
–	P+D.def.m.s	c
ldap_bind()	N.C.m.s	<unknown>
:	PONCT.W	:
liaison	N.C.f.s	liaison
et	C.C	et
authentification	N.C.f.s	authentification
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
,	PONCT.W	,
–	P+D.def.m.s	c
ldap_get_*()/ldap_add()/ldap_modify()	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
:	PONCT.W	:
consultation/modification	N.C.f.s	<unknown>
de	P	de
la	D.def.f.s	le
base	N.C.f.s	base
,	PONCT.W	,
–	P	à
ldap_close()	N.C.m.s	<unknown>
:	PONCT.W	:
déconnexion	N.C.f.s	déconnexion
.	PONCT.S	.

200	D.card.f.p	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
recherche	N.C.f.s	recherche
de	P	de
tous	A.ind.m.p	tous
les	CL.obj.3.m.p	le
dn	P	dn
commançant	VG	commancer
par	P	par
l	D.def.m.s	l
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$ds	N.C.m.p	<unknown>
=	PONCT.W	=
ldap_connect("ldap.mon-serveur.com")	N.C.m.s	cdapàconnectçëllec
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$ds	N.C.m.p	<unknown>
)	PONCT.W	)
{	P+D.def.m.s	c
ldap_bind($ds)	N.C.m.s	ldapçbind-dëë
;	PONCT.W	;
$sr	N.P.x.s	<unknown>
=	PONCT.W	=
ldap_search($ds	N.C.m.p	ldap-searchëdd
,	PONCT.W	,
"	PONCT.W	"
ou=Devel	N.C.m.s	ouëdevel
,	PONCT.W	,
o=Transmeta	N.P.m.s	<unknown>
,	PONCT.W	,
c=USA	N.C.m.s	cçusa
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
dn=l*	ET	dnëlà
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$info	N.P.m.s	<unknown>
=	PONCT.W	=
ldap_get_entries($ds	N.P.x.s	<unknown>
,	PONCT.W	,
$sr	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
201	D.card.f.s	@card@
Interopérabilité	N.C.f.s	interopérabilité
avec	P	avec
des	D.ind.m.p	du
applicatifs	N.C.m.p	applicatif
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
for	N.C.m.s	for
(	PONCT.W	(
$i=0	N.P.m.s	<unknown>
;	PONCT.W	;
$i	N.P.m.s	<unknown>
<	P	à
$info["count	N.C.m.s	çinfoëçcount
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
dn	P	dn
vaut	V.P.3.s	valoir
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$info[$i]["dn	N.C.m.s	çinfoëëçdn
"	PONCT.W	"
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
<br>	ET	çbrà
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
première	A.ord.f.s	premier
entrée	N.C.f.s	entrée
cn	CL.suj.3.m.s	<unknown>
vaut	V.P.3.s	valoir
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$info[$i]["cn"][0	N.C.m.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
<br>	ET	çbrà
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
première	A.ord.f.s	premier
email	N.C.m.s	email
vaut	V.P.3.s	valoir
:	PONCT.W	:
"	PONCT.W	"
.	PONCT.S	.

$info[$i]["mail"][0	N.C.m.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
<br>	N.C.m.s	çbrà
"	PONCT.W	"
;	PONCT.W	;
}	P+D.def.m.s	c
ldap_close($ds)	N.C.m.s	ldapàcloseëdëë
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
<H4>Impossible	A.qual.m.s	çh4-impossible
de	P	de
se	CL.refl.3.m.s	se
connecter	VW	connecter
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
LDAP</H4>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	N.C.m.s	>
202	A.card.m.s	@card@
Section	N.C.f.s	section
2	A.card.m.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Traitement	ADV.-	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
203	A.card.m.s	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Manipulation	N.C.f.s	manipulation
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
;	PONCT.W	;
Expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
.	PONCT.S	.

204	A.card.m.s	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Manipulation	N.C.f.s	manipulation
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Affichage	N.C.m.s	affichage
:	PONCT.W	:
–	P	à
echo()	N.C.m.s	echoëë
:	PONCT.W	:
affiche	V.P.3.s	afficher
une	D.ind.f.s	un
ou	C.C	ou
plusieurs	D.ind.f.p	plusieurs
chaînes	N.C.f.p	chaîne
séparées	VK.f.p	séparer
par	P	par
des	D.ind.f.p	du
virgules	N.C.f.p	virgule
,	PONCT.W	,
–	P	à
print()	N.C.m.s	printçë
:	PONCT.W	:
affiche	V.P.3.s	afficher
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
,	PONCT.W	,
–	N.C.m.s	–
printf()	N.C.m.s	printfçë
:	PONCT.W	:
affiche	V.P.3.s	afficher
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
selon	P	selon
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
formatage	N.C.m.s	formatage
(	PONCT.W	(
idem	A.ord.m.s	<unknown>
langage	N.C.m.s	langage
C	PONCT.W	C
)	PONCT.W	)
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
"	PONCT.W	"
,	PONCT.W	,
$nom	N.C.m.s	<unknown>
;	PONCT.W	;
#	ET	#
affiche	V.P.3.s	afficher
Bonjour	N.P.m.s	Bonjour
toto	ET	toto
print	VK.m.s	prindre
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
$nom	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
#	N.P.x.s	#
affiche	V.P.3.s	afficher
Bonjour	N.P.m.s	Bonjour
toto	ET	toto
printf("Bonjour	N.C.m.s	printfëëbonjour
%s	N.C.m.p	-s
"	PONCT.W	"
,	PONCT.W	,
$nom	N.C.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
#	N.P.m.s	#
affiche	V.P.3.s	afficher
Bonjour	N.P.m.s	Bonjour
toto	N.P.m.s	Toto
205	D.card.m.p	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Substitutions	N.C.f.p	substitution
:	PONCT.W	:
–	D.card.m.s	–
addslashes()	N.C.m.s	<unknown>
:	PONCT.W	:
ajoute	V.P.3.s	ajouter
un	D.ind.m.s	un
backslash	N.C.m.s	backslash
devant	P	devant
tous	A.ind.m.p	tous
les	D.def.m.p	le
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
,	PONCT.W	,
–	P	à
stripslashes()	N.C.m.s	<unknown>
:	PONCT.W	:
enlève	V.P.3.s	enlever
les	D.def.m.p	le
backslashs	N.C.m.p	backslash
ajoutés	VK.m.p	ajouter
par	P	par
la	D.def.f.s	le
fonction	N.C.f.s	fonction
addslashes	A.qual.f.s	addslashe
,	PONCT.W	,
–	P+D.def.m.s	c
str_replace()	N.C.m.s	sträreplaceçà
:	PONCT.W	:
remplace	V.P.3.s	remplacer
toutes	A.ind.f.p	tout
les	D.def.f.p	le
occurrences	N.C.f.p	occurrence
d'	P	de
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
par	P	par
une	D.ind.f.s	un
autre	PRO.ind.f.s	autre
,	PONCT.W	,
Ex	N.C.m.s	ex
:	PONCT.W	:
print	D.card.m.s	print
addslashes(’\	N.C.m.s	<unknown>
’	P+D.def.m.s	c
\	N.C.m.s	\
"	PONCT.W	"
’	N.C.m.s	’
)	PONCT.W	)
;	PONCT.W	;
#	N.P.x.s	#
affiche	V.P.3.s	afficher
\	N.C.m.s	\
’	N.C.m.s	’
\	N.C.m.s	\
\	N.C.m.s	\
"	PONCT.W	"
print	A.qual.m.s	print
str_replace("toto	ET	sträreplaceçtoto
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
titi	VK.m.s	titir
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
toto	N.P.m.s	Toto
!	PONCT.S	!

"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
#	N.P.x.s	#
affiche	V.P.3.s	afficher
Bonjour	N.P.m.s	Bonjour
titi	VK.m.s	titir
!	PONCT.S	!

206	A.card.m.s	@card@
Traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Découpage	N.P.m.s	Découpage
:	PONCT.W	:
–	P+D.def.m.s	c
explode()	N.C.m.s	explodeçà
:	PONCT.W	:
scinde	V.P.3.s	scinder
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
en	P	en
morceaux	N.C.m.p	morceau
grâce	N.C.f.s	grâce
à	P	à
un	D.ind.m.s	un
délimiteur	N.C.m.s	délimiteur
,	PONCT.W	,
–	D.card.m.s	–
implode()/join()	N.C.m.s	<unknown>
:	PONCT.W	:
regroupe	V.P.3.s	regrouper
tous	A.ind.m.p	tous
les	D.def.m.p	le
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
dans	P	dans
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
en	P	en
ajoutant	VG	ajouter
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
jointure	N.C.f.s	jointure
,	PONCT.W	,
–	N.C.m.s	–
ltrim()/chop()	N.C.m.s	<unknown>
:	PONCT.W	:
enlève	V.P.3.s	enlever
les	D.def.m.p	le
espaces	N.C.m.p	espace
de	P	de
début/fin	N.C.m.s	<unknown>
de	P	de
chaîne	N.C.f.s	chaîne
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$composants	N.C.m.p	ccomposant
=	PONCT.W	=
"	PONCT.W	"
resistance	N.C.f.s	resistance
,	PONCT.W	,
condensateur	N.C.m.s	condensateur
,	PONCT.W	,
transistor	N.C.m.s	transistor
"	PONCT.W	"
;	PONCT.W	;
$composants	N.C.m.p	ccomposant
=	PONCT.W	=
chop($composants)	N.C.m.s	chopç-composantsà
;	PONCT.W	;
$tableau	N.C.m.s	<unknown>
=	PONCT.W	=
explode(	ET	explodeë
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
,	PONCT.W	,
$composants	N.C.m.p	ccomposant
)	PONCT.W	)
;	PONCT.W	;
print	V.J.3.s	prendre
$tableau[2	N.C.m.p	<unknown>
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
#	P	à
affiche	V.P.3.s	afficher
transistor	N.C.m.s	transistor
.	PONCT.S	.

207	A.card.m.s	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Web	N.P.m.s	Web
:	PONCT.W	:
–	P+D.def.m.s	c
rawurlencode()/rawurldecode()	N.C.m.s	<unknown>
:	PONCT.W	:
encode/décode	VK.m.s	<unknown>
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
en	P	en
URL	N.P.f.s	Url
selon	P	selon
la	D.def.f.s	le
RFC1738	N.P.f.s	<unknown>
,	PONCT.W	,
–	P	à
htmlspecialchars()/htmlentities()	N.C.m.s	<unknown>
:	PONCT.W	:
converti	VK.m.s	convertir
tous	A.ind.m.p	tous
les	D.def.m.p	le
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
en	P	en
équivalent	N.C.m.s	équivalent
HTML	N.P.m.s	<unknown>
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$url	N.C.m.s	<unknown>
=	P	à
rawurlencode(’bonjour@toi	N.C.m.s	rawurlencodeçbonjourätoi
/toto/	N.C.m.s	<unknown>
’	N.C.m.s	’
)	PONCT.W	)
;	PONCT.W	;
print	V.J.3.s	prendre
$url	N.P.m.s	<unknown>
;	PONCT.W	;
#	P+D.def.m.s	c
affiche	V.P.3.s	afficher
bonjour%40toi%20%2Ftoto%2F	N.C.m.p	<unknown>
$html	N.P.x.s	<unknown>
=	PONCT.W	=
htmlentities("2	N.C.m.s	<unknown>
<	N.C.m.s	<
3	A.card.m.s	@card@
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
print	V.J.3.s	prendre
$html	N.P.x.s	<unknown>
;	PONCT.W	;
#	V.P.3.s	être
affiche	V.P.3.s	afficher
2	A.card.m.s	@card@
<	N.C.m.p	<
3	A.card.m.s	@card@
mais	C.C	mais
le	D.def.m.s	le
source	N.C.m.s	source
HTML	N.P.m.s	<unknown>
contient	V.P.3.s	contenir
2	A.card.m.s	@card@
<	N.C.m.p	<
3	A.card.m.s	@card@
208	A.card.m.s	@card@
Traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Comparaison	N.C.f.s	comparaison
:	PONCT.W	:
–	D.card.m.s	–
parse_str()	N.C.m.s	parseëstrçë
:	PONCT.W	:
analyse	V.P.3.s	analyser
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
et	C.C	et
en	P	en
déduit	N.C.m.s	déduit
des	P+D.def.f.p	du
variables	N.C.f.p	variable
et	C.C	et
leur	D.poss.f.s	leur
valeur	N.C.f.s	valeur
,	PONCT.W	,
–	N.C.m.s	–
strcmp()	N.C.m.s	<unknown>
:	PONCT.W	:
comparaison	N.C.f.s	comparaison
sensible	A.qual.f.s	sensible
à	P	à
la	D.def.f.s	le
casse	N.C.f.s	casse
,	PONCT.W	,
–	P	à
strlen()	N.C.m.s	<unknown>
:	PONCT.W	:
retourne	V.P.3.s	retourner
la	D.def.f.s	le
longueur	N.C.f.s	longueur
de	P	de
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
parse_str("toto=23&	N.C.m.s	<unknown>
tab[]=Ceci+fonctionne	V.P.3.s	tabçäceciufonctionner
&	PONCT.W	&
tab[]=aussi	N.C.m.p	tabç-çaussi
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
print	A.qual.m.s	print
"	PONCT.W	"
$toto	N.P.m.s	<unknown>
,	PONCT.W	,
$tab[0	N.P.m.s	<unknown>
]	PONCT.W	]
,	PONCT.W	,
$tab[1	N.P.m.s	<unknown>
]	PONCT.W	]
"	PONCT.W	"
;	PONCT.W	;
Affiche	N.C.m.s	affiche
23	A.card.m.s	@card@
,	PONCT.W	,
Ceci	PRO.dem.m.s	ceci
fonctionne	V.P.3.s	fonctionner
,	PONCT.W	,
aussi	ADV.-	aussi
209	D.card.m.p	@card@
Traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Casse	N.P.f.s	Casse
:	PONCT.W	:
–	N.C.m.s	–
strtolower()/strtoupper()	N.C.m.s	<unknown>
:	PONCT.W	:
met	V.P.3.s	mettre
tous	A.ind.m.p	tous
les	D.def.m.p	le
caractères	N.C.m.p	caractère
en	P	en
minuscule/majuscule	N.C.m.s	<unknown>
,	PONCT.W	,
–	P	à
ucfirst()	N.C.m.s	<unknown>
:	PONCT.W	:
force	V.P.3.s	forcer
le	D.def.m.s	le
premier	A.ord.m.s	premier
caractère	N.C.m.s	caractère
d'	P	de
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
en	P	en
majuscule	N.C.m.s	majuscule
,	PONCT.W	,
–	P+D.def.m.s	c
ucwords()	N.C.m.s	ucwordsçë
:	PONCT.W	:
force	V.P.3.s	forcer
le	D.def.m.s	le
premier	A.ord.m.s	premier
caractère	N.C.m.s	caractère
de	P	de
chaque	D.ind.m.s	chaque
mot	N.C.m.s	mot
d'	P	de
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
en	P	en
majuscule	N.C.m.s	majuscule
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
BiLL	N.P.m.s	Bill
GaTeZ	N.P.m.s	Gatez
"	PONCT.W	"
;	PONCT.W	;
print	V.J.3.s	prendre
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
strtolower($nom)	N.C.m.s	<unknown>
;	PONCT.W	;
#	ET	#
affiche	V.P.3.s	afficher
bill	ADV.-	bill
gatez	V.Y.2.p	gater
print	A.qual.m.s	print
strtolower($nom)	N.C.m.s	<unknown>
;	PONCT.W	;
#	N.P.x.s	#
affiche	V.P.3.s	afficher
Bill	N.P.m.s	Bill
Gatez	N.P.m.s	Gatez
210	D.card.m.p	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
Les	D.def.f.p	le
expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
(	PONCT.W	(
abrv	N.C.m.s	<unknown>
:	PONCT.W	:
regex	N.C.m.s	regex
)	PONCT.W	)
sont	V.P.3.p	être
utilisées	VK.f.p	utiliser
pour	P	pour
faire	VW	faire
des	D.ind.f.p	du
manipulations	N.C.f.p	manipulation
complexes	A.qual.f.p	complexe
sur	P	sur
les	D.def.f.p	le
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
(	PONCT.W	(
ex	D.card.f.p	ex
:	PONCT.W	:
substitutions	N.C.f.p	substitution
ou	C.C	ou
recherches	N.C.f.p	recherche
complexes	A.qual.f.p	complexe
)	PONCT.W	)
;	PONCT.W	;
PHP	N.P.m.s	Php
gère	V.P.3.s	gérer
deux	D.card.m.p	deux
types	N.C.m.p	type
d'	P	de
expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
:	PONCT.W	:
–	P	à
les	D.def.f.p	le
expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
avancées	VK.f.p	avancer
de	P	de
POSIX	N.P.m.s	Posix
,	PONCT.W	,
et	C.C	et
–	P	à
les	D.def.f.p	le
expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
modifiées	VK.f.p	modifier
du	P+D.def.m.s	du
langage	N.C.m.s	langage
Perl	N.P.m.s	Perl
.	PONCT.S	.

211	A.card.m.s	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Principes	N.C.m.p	principe
de	P	de
base	N.C.f.s	base
des	P+D.def.f.p	du
expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
:	PONCT.W	:
–	P+D.def.m.s	c
recherche	V.P.3.s	rechercher
de	P	de
séquences	N.C.f.p	séquence
de	P	de
caractères	N.C.m.p	caractère
au	P+D.def.m.s	au
sein	N.C.m.s	sein
d'	P	de
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
,	PONCT.W	,
–	P	à
besoin	N.C.m.s	besoin
d'	P	de
expressions	N.C.f.p	expression
pour	P	pour
décrire	VW	décrire
ces	D.dem.f.p	ce
séquences	N.C.f.p	séquence
,	PONCT.W	,
–	P	à
utilisation	N.C.f.s	utilisation
d'	P	de
une	D.ind.f.s	un
syntaxe	N.C.f.s	syntaxe
puissante	A.qual.f.s	puissant
,	PONCT.W	,
–	PRO.rel.f.s	c
équivaut	N.C.m.s	équivaut
à	P	à
la	D.def.f.s	le
définition	N.C.f.s	définition
de	P	de
conditions	N.C.f.p	condition
de	P	de
recherche	N.C.f.s	recherche
.	PONCT.S	.

212	A.card.m.s	@card@
Traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Signification	N.C.f.s	signification
des	P+D.def.f.p	du
principales	A.qual.f.p	principal
expressions	N.C.f.p	expression
régulières	A.qual.f.p	régulier
:	PONCT.W	:
–	N.C.m.s	–
c	PONCT.W	c
:	PONCT.W	:
caractère	N.C.m.s	caractère
c	PONCT.W	c
(	PONCT.W	(
sauf	P	sauf
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
)	PONCT.W	)
,	PONCT.W	,
–	P	à
\c	N.C.m.s	cc
:	PONCT.W	:
caractère	N.C.m.s	caractère
spécial	A.qual.m.s	spécial
c	PONCT.W	c
(	PONCT.W	(
sauf	P	sauf
chiffres	N.C.m.p	chiffre
de	P	de
1	D.card.m.s	@card@
à	P	à
9	A.card.m.s	@card@
)	PONCT.W	)
,	PONCT.W	,
–	N.C.m.s	–
ˆ	N.C.m.s	ˆ
:	PONCT.W	:
début	N.C.m.s	début
de	P	de
la	D.def.f.s	le
ligne	N.C.f.s	ligne
,	PONCT.W	,
–	N.C.m.s	–
$	N.C.m.s	$
:	PONCT.W	:
fin	N.C.f.s	fin
de	P	de
la	D.def.f.s	le
ligne	N.C.f.s	ligne
,	PONCT.W	,
–	N.C.m.s	–
.	PONCT.S	.

:	PONCT.W	:
n'	ADV.neg	ne
importe	V.P.3.s	importer
quel	D.excl.m.s	quel
caractère	N.C.m.s	caractère
,	PONCT.W	,
–	N.C.m.s	–
[	PONCT.W	[
s	CL.refl.3.m.s	s
]	PONCT.W	]
:	PONCT.W	:
caractère	N.C.m.s	caractère
appartenant	VG	appartenir
à	P	à
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
s	A.card.m.s	s
,	PONCT.W	,
où	PRO.rel.m.s	où
s	CL.refl.3.m.s	s
est	V.P.3.s	être
une	D.ind.f.s	un
suite	N.C.f.s	suite
de	P	de
caractères	N.C.m.p	caractère
et/ou	A.ind.m.p	<unknown>
une	D.ind.f.s	un
échelle	N.C.f.s	échelle
de	P	de
caractères	N.C.m.p	caractère
(	PONCT.W	(
[	PONCT.W	[
c-c	PONCT.W	c-c
]	PONCT.W	]
)	PONCT.W	)
,	PONCT.W	,
213	D.card.m.p	@card@
Traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.C.m.s	–
[	PONCT.W	[
ˆs	N.C.m.p	-s
]	PONCT.W	]
:	PONCT.W	:
caractère	N.C.m.s	caractère
n'	ADV.neg	ne
appartenant	VG	appartenir
pas	ADV.neg	pas
à	P	à
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
s	N.card.m.s	s
,	PONCT.W	,
–	D.card.m.s	–
r*	N.C.m.s	rà
:	PONCT.W	:
0	PRO.card.m.s	@card@
,	PONCT.W	,
1	D.card.f.p	@card@
ou	C.C	ou
plusieurs	D.ind.f.p	plusieurs
occurrences	N.C.f.p	occurrence
successives	A.qual.f.p	successif
de	P	de
l'	D.def.f.s	le
expression	N.C.f.s	expression
régulière	A.qual.f.s	régulier
r	PONCT.W	r
,	PONCT.W	,
–	P	à
rx	N.C.m.s	<unknown>
:	PONCT.W	:
r	PONCT.W	r
,	PONCT.W	,
suivie	N.C.f.s	suivie
de	P	de
l'	D.def.f.s	le
expression	N.C.f.s	expression
régulière	A.qual.f.s	régulier
x	A.card.f.s	X
(	PONCT.W	(
concaténation	N.C.f.s	concaténation
)	PONCT.W	)
,	PONCT.W	,
–	N.C.m.s	–
r{m,n	N.C.m.s	<unknown>
}	N.C.m.s	}
:	PONCT.W	:
un	D.ind.m.s	un
nombre	N.C.m.s	nombre
(	PONCT.W	(
entre	P	entre
m	N.C.m.s	m
et	C.C	et
n	N.C.m.s	n
)	PONCT.W	)
d'	P	de
occurrences	N.C.f.p	occurrence
successives	A.qual.f.p	successif
de	P	de
r	N.C.m.s	r
,	PONCT.W	,
–	D.card.m.s	–
r{m	N.C.m.s	räm
}	N.C.m.s	}
:	PONCT.W	:
exactement	ADV.-	exactement
m	D.card.f.p	m
occurrences	N.C.f.p	occurrence
successives	A.qual.f.p	successif
de	P	de
r	N.C.m.s	r
,	PONCT.W	,
–	P	à
r{m	N.C.m.s	räm
,	PONCT.W	,
}	N.C.m.s	}
:	PONCT.W	:
au	P	au
moins	ADV.-	moins
m	D.card.f.p	m
occurrences	N.C.f.p	occurrence
successives	A.qual.f.p	successif
de	P	de
l'	D.def.f.s	le
expression	N.C.f.s	expression
régulière	A.qual.f.s	régulier
r.	N.C.m.s	ron
214	A.card.m.s	@card@
Traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Utilisation	N.C.f.s	utilisation
avec	P	avec
PHP	N.P.m.s	Php
:	PONCT.W	:
–	D.card.m.s	–
ereg()/eregi()	N.C.m.s	<unknown>
:	PONCT.W	:
expression	N.C.f.s	expression
régulière	A.qual.f.s	régulier
standard	A.qual.f.s	standard
sensible/insensible	A.ind.f.s	<unknown>
à	P	à
la	D.def.f.s	le
casse	N.C.f.s	casse
,	PONCT.W	,
–	P+D.def.m.s	c
ereg_replace()/eregi_replace()	N.C.m.s	<unknown>
:	PONCT.W	:
expression	N.C.f.s	expression
régulière	A.qual.f.s	régulier
de	P	de
substitution	N.C.f.s	substitution
sensible/insensible	A.ind.f.s	<unknown>
à	P	à
la	D.def.f.s	le
casse	N.C.f.s	casse
,	PONCT.W	,
–	N.C.m.s	–
split()	N.C.m.s	splitçë
:	PONCT.W	:
découpe	V.P.3.s	découper
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
grâce	N.C.f.s	grâce
à	P	à
un	D.ind.m.s	un
délimiteur	N.C.m.s	délimiteur
défini	VK.m.s	définir
par	P	par
une	D.ind.f.s	un
expression	N.C.f.s	expression
régulière	A.qual.f.s	régulier
,	PONCT.W	,
–	P	à
sql_regcase()	N.C.m.s	<unknown>
:	PONCT.W	:
prépare	V.P.3.s	préparer
une	D.ind.f.s	un
expression	N.C.f.s	expression
régulière	A.qual.f.s	régulier
insensible	A.qual.f.s	insensible
à	P	à
la	D.def.f.s	le
casse	N.C.f.s	casse
(	PONCT.W	(
utile	N.C.f.s	utile
pour	P	pour
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
ne	ADV.neg	ne
supportant	VG	supporter
pas	ADV.neg	pas
les	D.def.f.p	le
recherches	N.C.f.p	recherche
insensible	A.qual.f.s	insensible
à	P	à
la	D.def.f.s	le
casse	N.C.f.s	casse
)	PONCT.W	)
.	PONCT.S	.

215	D.card.m.p	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$personne	ET	<unknown>
=	PONCT.W	=
"	PONCT.W	"
Nom	N.P.m.s	Nom
:	PONCT.W	:
Smith	N.P.m.s	Smith
,	PONCT.W	,
Prénom	N.P.m.s	Prénom
:	PONCT.W	:
John	N.P.m.s	John
,	PONCT.W	,
Age	N.P.m.s	Age
:	PONCT.W	:
52	N.card.m.s	@card@
,	PONCT.W	,
Divers	N.P.m.s	Divers
:	PONCT.W	:
blond	N.C.m.s	blond
"	PONCT.W	"
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
ereg("blond	N.C.m.s	eregçëblond
"	PONCT.W	"
,	PONCT.W	,
$personne	N.P.f.s	<unknown>
)	PONCT.W	)
)	PONCT.W	)
print	V.J.3.s	prendre
"	PONCT.W	"
Cette	D.dem.f.s	ce
personne	N.C.f.s	personne
est	V.P.3.s	être
blonde	A.qual.f.s	blond
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
#	P	à
Affiche	V.P.3.s	afficher
Cette	D.dem.f.s	ce
personne	N.C.f.s	personne
est	V.P.3.s	être
blonde	A.qual.f.s	blond
.	PONCT.S	.

if	A.qual.m.s	if
(	PONCT.W	(
eregi("age	N.C.f.s	eregiëçage
:	PONCT.W	:
*([0-9]+)	N.C.m.s	çäë--9üüë
"	PONCT.W	"
,	PONCT.W	,
$personne	N.P.f.s	<unknown>
,	PONCT.W	,
$resultat	N.C.m.s	<unknown>
)	PONCT.W	)
)	PONCT.W	)
print	V.J.3.s	prendre
"	PONCT.W	"
Cette	D.dem.f.s	ce
personne	N.C.f.s	personne
a	V.P.3.s	avoir
$resultat[1	N.P.x.s	<unknown>
]	PONCT.W	]
ans	N.C.m.p	an
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
else	CL.suj.3.f.s	else
print	V.J.3.s	prendre
"	PONCT.W	"
Cette	D.dem.f.s	ce
personne	N.C.f.s	personne
n'	ADV.neg	ne
a	V.P.3.s	avoir
pas	ADV.neg	pas
d'	D.ind.f.s	de
age	N.C.f.s	age
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
#	P	à
Affiche	V.P.3.s	afficher
Cette	D.dem.f.s	ce
personne	N.C.f.s	personne
a	V.P.3.s	avoir
52	D.card.m.p	@card@
ans	N.C.m.p	an
.	PONCT.S	.

216	A.card.m.s	@card@
Traitement	N.C.m.p	traitement
des	P+D.def.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
print	V.J.3.s	prendre
eregi_replace("(age	N.C.f.s	eregiëreplaceçage
:	PONCT.W	:
)	PONCT.W	)
*[0-9]+.*	N.C.m.s	çä
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
\1	N.card.m.s	<unknown>
68	N.card.m.s	@card@
"	PONCT.W	"
,	PONCT.W	,
$personne	N.P.f.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
#	N.C.m.s	#
Affiche	N.C.m.s	affiche
Nom	N.P.m.s	Nom
:	PONCT.W	:
Smith	N.P.m.s	Smith
,	PONCT.W	,
Prénom	N.P.m.s	Prénom
:	PONCT.W	:
John	N.P.m.s	John
,	PONCT.W	,
Age	N.P.m.s	Age
:	PONCT.W	:
68	D.card.m.p	@card@
print	D.card.m.p	print
sql_regcase("John	N.C.m.p	<unknown>
Smith	N.P.m.s	Smith
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
#	ET	#
Affiche	N.C.m.s	affiche
[	PONCT.W	[
Jj][Oo][Hh][Nn	N.P.x.s	Jjëoooçhhënn
]	PONCT.W	]
[	PONCT.W	[
Ss][Mm][Ii][Tt][Hh	N.P.x.s	Ssëmmmçiçhë
]	PONCT.W	]
?	PONCT.S	?

>	N.C.m.s	>
217	A.card.f.s	@card@
Section	N.C.f.s	section
3	D.card.f.p	@card@
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
218	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
de	P	de
la	D.def.f.s	le
section	N.C.f.s	section
Manipulation	N.P.f.s	Manipulation
et	C.C	et
traitement	N.C.m.s	traitement
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
;	PONCT.W	;
Arguments	N.C.m.p	argument
et	C.C	et
gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
URLs	N.C.m.p	url
;	PONCT.W	;
Création	N.C.f.s	création
dynamique	A.qual.f.s	dynamique
d'	P	de
images	N.C.f.p	image
;	PONCT.W	;
Fonctions	N.C.f.p	fonction
mathématiques	A.qual.f.p	mathématique
;	PONCT.W	;
PHP	N.P.m.s	Php
et	C.C	et
XML	N.P.x.s	Xml
;	PONCT.W	;
Templates	N.C.m.p	template
avec	P	avec
PHPlib	N.P.m.s	Phplib
;	PONCT.W	;
Utilisation	N.C.f.s	utilisation
de	P	de
PHP	N.P.m.s	Php
comme	P	comme
langage	N.C.m.s	langage
de	P	de
script	N.C.m.s	script
.	PONCT.S	.

219	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Manipulation	N.C.f.s	manipulation
et	C.C	et
traitement	N.C.m.s	traitement
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
Quel	A.int.m.s	quel
que	PRO.rel.m.s	que
soit	V.S.3.s	être
le	D.def.m.s	le
langage	N.C.m.s	langage
de	P	de
programmation	N.C.f.s	programmation
,	PONCT.W	,
la	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
est	V.P.3.s	être
toujours	ADV.-	toujours
importante	A.qual.f.s	important
pour	P	pour
le	D.def.m.s	le
stockage	N.C.m.s	stockage
de	P	de
données	N.C.f.p	donnée
;	PONCT.W	;
La	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
en	P	en
PHP	N.P.m.s	Php
est	V.P.3.s	être
issue	VK.f.s	isseoir
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	PONCT.W	C
mais	C.C	mais
elle	CL.suj.3.f.s	elle
comporte	V.P.3.s	comporter
quelques	D.ind.f.p	quelque
fonctions	N.C.f.p	fonction
supplémentaires	A.qual.f.p	supplémentaire
très	ADV.-	très
utiles	A.qual.f.p	utile
(	PONCT.W	(
comme	P	comme
la	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
distants	A.qual.m.p	distant
par	P	par
exemple	N.C.m.s	exemple
)	PONCT.W	)
;	PONCT.W	;
220	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
principales	A.qual.f.p	principal
fonctions	N.C.f.p	fonction
de	P	de
manipulation	N.C.f.s	manipulation
de	P	de
fichiers	N.C.m.p	fichier
sont	V.P.3.p	être
les	D.def.f.p	le
suivantes	N.C.f.p	suivante
:	PONCT.W	:
–	N.C.m.s	–
fopen()	N.C.m.s	fopenç
:	PONCT.W	:
ouverture	N.C.f.s	ouverture
d'	P	de
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
(	PONCT.W	(
possibilité	N.C.f.s	possibilité
de	P	de
fournir	VW	fournir
une	D.ind.f.s	un
URL	N.P.f.s	Url
HTTP	N.P.m.s	Http
ou	C.C	ou
FTP	N.P.f.s	Ftp
pour	P	pour
les	D.def.m.p	le
fichiers	N.C.m.p	fichier
distants	A.qual.m.p	distant
)	PONCT.W	)
,	PONCT.W	,
–	P	à
fclose()	N.C.m.s	fcloseçà
:	PONCT.W	:
fermeture	N.C.f.s	fermeture
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
,	PONCT.W	,
–	N.C.m.s	–
fpassthru()	N.C.m.s	<unknown>
:	PONCT.W	:
lit	V.P.3.s	lire
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
en	P	en
entier	N.C.m.s	entier
et	C.C	et
l'	D.def.f.s	le
affiche	N.C.f.s	affiche
,	PONCT.W	,
–	N.C.m.s	–
fread()/fgets()	N.C.m.s	<unknown>
:	PONCT.W	:
lit	V.P.3.s	lire
n	N.C.m.p	n
caractères	N.C.m.p	caractère
dans	P	dans
le	D.def.m.s	le
fichier	N.C.m.s	fichier
,	PONCT.W	,
–	N.C.m.s	–
fwrite()/fputs()	N.C.m.s	<unknown>
:	PONCT.W	:
écrit	V.P.3.s	écrire
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
dans	P	dans
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
,	PONCT.W	,
–	P+D.def.m.s	c
rewind()/fseek()/ftell()	N.C.m.s	<unknown>
:	PONCT.W	:
positionnement	N.C.m.s	positionnement
au	P+D.def.m.s	au
sein	N.C.m.s	sein
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
.	PONCT.S	.

221	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
affichage	N.C.m.s	affichage
de	P	de
l'	D.def.f.s	le
image	N.C.f.s	image
image.png	N.C.m.s	<unknown>
<	N.P.m.s	<
?	PONCT.S	?

php	ET	<unknown>
Header("Content-type	N.P.m.s	Headerçcontent-Type
:	PONCT.W	:
image/png	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

$fd	N.C.m.s	äfd
=	PONCT.W	=
fopen("image.png	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
rb	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
)	PONCT.W	)
echo	ET	echo
"	PONCT.W	"
Impossible	A.qual.m.s	impossible
d'	P	de
ouvrir	VW	ouvrir
le	D.def.m.s	le
fichier	N.C.m.s	fichier
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
else	PPRO.3.f.s	<unknown>
fpassthru($fd)	N.C.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
222	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex2	N.P.m.s	Exc
:	PONCT.W	:
fichier	N.C.m.s	fichier
de	P	de
log	N.C.m.s	log
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
if	A.qual.m.s	if
(	PONCT.W	(
!	PONCT.S	!

$fd	N.C.m.s	äfd
=	PONCT.W	=
fopen("mon_error.log	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
a	V.P.3.s	avoir
"	PONCT.W	"
)	PONCT.W	)
)	PONCT.W	)
echo	ET	echo
"	PONCT.W	"
Impossible	A.qual.m.s	impossible
d'	P	de
ouvrir	VW	ouvrir
le	D.def.m.s	le
fichier	N.C.m.s	fichier
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
else	PPRO.3.f.s	<unknown>
fputs($fd	N.P.x.s	Fputsëëfd
,	PONCT.W	,
"	PONCT.W	"
Erreur	N.C.f.s	erreur
:	PONCT.W	:
$errormsg\n	N.P.x.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
#	ET	#
Ecrit	V.P.3.s	ecrire
le	D.def.m.s	le
dernier	A.qual.m.s	dernier
message	N.C.m.s	message
d'	P	de
erreur	N.C.f.s	erreur
renvoyé	VK.m.s	renvoyer
dans	P	dans
mon_error.log	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
?	PONCT.S	?

>	P	à
223	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
principales	A.qual.f.p	principal
fonctions	N.C.f.p	fonction
de	P	de
gestion	N.C.f.s	gestion
de	P	de
fichiers	N.C.m.p	fichier
sont	V.P.3.p	être
les	D.def.f.p	le
suivantes	N.C.f.p	suivante
:	PONCT.W	:
–	P+D.def.m.s	c
file_exists()	N.C.m.s	fileçexistsëë
:	PONCT.W	:
test	N.C.m.s	test
de	P	de
l'	D.def.f.s	le
existence	N.C.f.s	existence
d'	P	de
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
,	PONCT.W	,
–	P	à
copy()	N.C.m.s	copyç
:	PONCT.W	:
copie	N.C.f.s	copie
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
,	PONCT.W	,
–	P	à
rename()	N.C.m.s	renameçë
:	PONCT.W	:
renomme	V.P.3.s	renommer
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
,	PONCT.W	,
–	N.C.m.s	–
unlink()	N.C.m.s	unlinkçë
:	PONCT.W	:
efface	V.P.3.s	effacer
définitivement	ADV.-	définitivement
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$fichier	A.qual.m.s	çfichier
=	PONCT.W	=
"	PONCT.W	"
toto.html	ET	<unknown>
"	PONCT.W	"
if	ET	if
(file_exists($fichier))	PONCT.W	çfileçexistsëchier
copy($fichier	N.C.m.s	copyççfichier
,	PONCT.W	,
"	PONCT.W	"
/tmp/	N.C.m.s	<unknown>
"	PONCT.W	"
.	PONCT.S	.

$fichier	N.C.m.s	çfichier
)	PONCT.W	)
;	PONCT.W	;
else	PPRO.3.f.s	<unknown>
echo	ET	echo
"	PONCT.W	"
Impossible	A.qual.m.s	impossible
d'	P	de
ouvrir	VW	ouvrir
le	D.def.m.s	le
fichier	N.C.m.s	fichier
.	PONCT.W	.
"	PONCT.S	"

;	PONCT.W	;
?	PONCT.S	?

>	P	à
224	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
principales	A.qual.f.p	principal
fonctions	N.C.f.p	fonction
de	P	de
manipulation	N.C.f.s	manipulation
des	P+D.def.m.p	du
répertoires	N.C.m.p	répertoire
sont	V.P.3.p	être
les	D.def.f.p	le
suivantes	A.qual.f.p	suivant
:	PONCT.W	:
–	P+D.def.m.s	c
chdir()	N.C.m.s	chdirçë
:	PONCT.W	:
changement	N.C.m.s	changement
de	P	de
répertoire	N.C.m.s	répertoire
courant	A.qual.m.s	courant
,	PONCT.W	,
–	P	à
opendir()	N.C.m.s	opendirçç
:	PONCT.W	:
ouverture	N.C.f.s	ouverture
d'	P	de
un	D.ind.m.s	un
répertoire	N.C.m.s	répertoire
,	PONCT.W	,
–	N.C.m.s	–
closedir()	N.C.m.s	closedirçë
:	PONCT.W	:
fermeture	N.C.f.s	fermeture
du	P+D.def.m.s	du
répertoire	N.C.m.s	répertoire
,	PONCT.W	,
–	P	à
readdir()	N.C.m.s	readdirçë
:	PONCT.W	:
lit	V.P.3.s	lire
l'	D.def.f.s	le
entrée	N.C.f.s	entrée
suivante	A.qual.f.s	suivant
dans	P	dans
le	D.def.m.s	le
répertoire	N.C.m.s	répertoire
,	PONCT.W	,
–	N.C.m.s	–
rewinddir()	N.C.m.s	rewinddirçë
:	PONCT.W	:
revient	V.P.3.s	revenir
au	P+D.def.m.s	au
début	N.C.m.s	début
du	P+D.def.m.s	du
répertoire	N.C.m.s	répertoire
,	PONCT.W	,
–	P	à
mkdir()	N.C.m.s	<unknown>
:	PONCT.W	:
crée	V.P.3.s	créer
un	D.ind.m.s	un
nouveau	A.qual.m.s	nouveau
répertoire	N.C.m.s	répertoire
,	PONCT.W	,
–	N.C.m.s	–
rmdir()	N.C.m.s	<unknown>
:	PONCT.W	:
supprime	V.P.3.s	supprimer
un	D.ind.m.s	un
répertoire	N.C.m.s	répertoire
,	PONCT.W	,
–	D.card.m.s	–
dir()	N.C.m.s	dirçë
:	PONCT.W	:
instanciation	N.C.f.s	instanciation
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
répertoire	A.qual.m.s	répertoire
pour	P	pour
une	D.ind.f.s	un
manipulation	N.C.f.s	manipulation
objet	N.C.m.s	objet
de	P	de
celui	PRO.dem.m.s	celui
-ci	ADV.-	-ci
,	PONCT.W	,
225	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
équivalent	N.C.m.s	équivalent
de	P	de
la	D.def.f.s	le
commande	N.C.f.s	commande
ls	D.def.f.s	l
<	N.C.m.p	<
?	PONCT.S	?

php	ET	<unknown>
chdir("/tmp")	N.C.m.s	<unknown>
;	PONCT.W	;
$dir	N.P.x.s	<unknown>
=	V.P.3.s	être
dir(".")	N.C.m.s	dirçëë

;	PONCT.W	;
$dir->rewind()	N.P.x.s	<unknown>
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$fichier	N.P.m.s	<unknown>
=	PONCT.W	=
$dir->read())	N.P.x.s	<unknown>
echo	ET	echo
"	PONCT.W	"
$fichier<br>	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$dir->close()	N.P.x.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
226	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Arguments	N.C.m.p	argument
et	C.C	et
gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
URLs	N.C.m.p	url
La	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
URLs	N.P.f.s	Urls
est	V.P.3.s	être
importante	A.qual.f.s	important
pour	P	pour
encoder/décoder	VW	<unknown>
des	D.ind.f.p	du
informations	N.C.f.p	information
au	P+D.def.m.s	au
sein	N.C.m.s	sein
même	A.qual.m.s	même
de	P	de
celles	PRO.dem.f.p	celui
-ci	CL.suj.3.m.s	ci
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
utiliser	VW	utiliser
l'	D.def.f.s	le
URL	N.P.f.s	Url
pour	P	pour
transmettre	VW	transmettre
des	D.ind.f.p	du
informations	N.C.f.p	information
(	PONCT.W	(
variables	N.C.f.p	variable
...	PONCT.W	<unknown>
)	PONCT.W	)
d'	P	de
un	D.ind.m.s	un
script	N.C.m.s	script
à	P	à
l'	D.def.m.s	le
autre	PRO.ind.m.s	autre
;	PONCT.W	;
Ce	D.dem.m.s	ce
mécanisme	N.C.m.s	mécanisme
peut	V.P.3.s	pouvoir
constituer	VW	constituer
une	D.ind.f.s	un
mini-gestion	N.C.f.s	mini-gestion
de	P	de
sessions	N.C.f.p	session
par	P	par
exemple	N.C.m.s	exemple
;	PONCT.W	;
227	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
principales	A.qual.f.p	principal
fonctions	N.C.f.p	fonction
utilisées	VK.f.p	utiliser
pour	P	pour
la	D.def.f.s	le
gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
URLs	N.C.m.p	url
sont	V.P.3.p	être
les	D.def.f.p	le
suivantes	N.C.f.p	suivante
:	PONCT.W	:
–	P	à
parse_url	N.C.m.s	parseçurl
:	PONCT.W	:
analyse	V.P.3.s	analyser
une	D.ind.f.s	un
URL	N.P.f.s	Url
et	C.C	et
retourne	V.P.3.s	retourner
ses	D.poss.m.p	son
composants	N.C.m.p	composant
sous	P	sous
forme	N.C.f.s	forme
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
,	PONCT.W	,
–	P	à
urlencode/urldecode	N.P.x.s	<unknown>
:	PONCT.W	:
encode/décode	VK.m.s	<unknown>
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
en	P	en
remplaçant	VG	remplacer
les	D.def.m.p	le
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
par	P	par
des	D.ind.m.p	du
%xx	N.C.m.p	<unknown>
et	C.C	et
les	D.def.m.p	le
espaces	N.C.m.p	espace
par	P	par
des	D.ind.m.p	du
+	N.C.m.p	natr
(	PONCT.W	(
application/x-www-form-urlencode	N.C.f.s	applicationix-www-fwrm-form-urlenc
)	PONCT.W	)
,	PONCT.W	,
–	P	à
base64_encode/base64_decode	N.C.m.s	<unknown>
:	PONCT.W	:
encode/décode	VK.m.s	<unknown>
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
en	P	en
base64	N.C.f.p	<unknown>
pour	P	pour
permettre	VW	permettre
à	P	à
certains	D.ind.m.p	certain
systèmes	N.C.m.p	système
de	P	de
manipuler	VW	manipuler
les	D.def.f.p	le
informations	N.C.f.p	information
binaires	A.qual.f.p	binaire
sur	P	sur
8	D.card.m.p	@card@
bits	N.C.m.p	bit
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
corps	N.C.m.p	corps
de	P	de
mail	N.C.m.s	mail
)	PONCT.W	)
.	PONCT.S	.

228	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
transmission	N.C.f.s	transmission
d'	P	de
une	D.ind.f.s	un
variable	N.C.f.s	variable
par	P	par
l'	D.def.f.s	le
URL	N.P.f.s	Url
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$chaine	A.qual.f.s	çchain
=	PONCT.W	=
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
tout	A.ind.m.s	tout
le	D.def.m.s	le
monde	N.C.m.s	monde
?	PONCT.S	?

"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
<A	P	à
href="mon-cgi	N.C.m.s	<unknown>
?	PONCT.S	?

chaine=<	A.qual.m.p	chaineë
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
urlencode($chaine)	A.qual.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>">Envoyer</A>	N.P.x.s	<unknown>
Appelle	V.P.3.s	appeler
le	D.def.m.s	le
script	N.C.m.s	script
CGI	N.P.m.s	Cgi
mon-cgi	N.C.m.s	<unknown>
avec	P	avec
l'	D.def.m.s	le
URL	N.P.m.s	Url
"	PONCT.W	"
mon-cgi	N.C.m.s	<unknown>
?	PONCT.S	?

chaine=Bonjour+tout+le+monde+%3F	N.C.f.p	chaineëbonjourutoutulm
"	PONCT.W	"
229	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Création	N.C.f.s	création
dynamique	A.qual.f.s	dynamique
d'	P	de
images	N.C.f.p	image
PHP	N.P.m.s	Php
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
limité	VK.m.s	limiter
à	P	à
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
fichiers	N.C.m.p	fichier
HTML	N.P.m.s	<unknown>
,	PONCT.W	,
il	CL.suj.3.m.s	il
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
servir	VW	servir
à	P	à
générer	VW	générer
dynamiquement	ADV.-	dynamiquement
des	D.ind.f.p	du
images	N.C.f.p	image
(	PONCT.W	(
PNG	N.C.m.s	png
,	PONCT.W	,
JPEG	N.P.m.s	Jpeg
,	PONCT.W	,
GIF	N.P.m.s	Gif
)	PONCT.W	)
;	PONCT.W	;
Ces	D.dem.f.p	ce
images	N.C.f.p	image
peuvent	V.P.3.p	pouvoir
être	VW	être
émises	VK.f.p	émettre
directement	ADV.-	directement
vers	P	vers
le	D.def.m.s	le
client	N.C.m.s	client
ou	C.C	ou
sauvegardées	VK.f.p	sauvegarder
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
;	PONCT.W	;
Elles	CL.suj.3.f.p	elle
sont	V.P.3.p	être
très	ADV.-	très
pratiques	A.qual.f.p	pratique
pour	P	pour
dessiner	VW	dessiner
rapidement	ADV.-	rapidement
des	D.ind.m.p	du
graphiques	N.C.m.p	graphique
à	P	à
partir	VW	partir
de	P	de
données	N.C.f.p	donnée
dynamiques	A.qual.f.p	dynamique
(	PONCT.W	(
ex	PRO.card.f.p	ex
:	PONCT.W	:
statistiques	N.C.f.p	statistique
du	P+D.def.m.s	du
site	N.C.m.s	site
,	PONCT.W	,
résultats	N.C.m.p	résultat
d'	P	de
un	D.ind.m.s	un
sondage	N.C.m.s	sondage
...	PONCT.W	<unknown>
)	PONCT.W	)
;	PONCT.W	;
230	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Pour	P	pour
générer	VW	générer
des	D.ind.f.p	du
images	N.C.f.p	image
,	PONCT.W	,
PHP	N.P.m.s	Php
utilise	V.P.3.s	utiliser
la	D.def.f.s	le
librairie	N.C.f.s	librairie
GD	N.P.m.s	Gd
;	PONCT.W	;
Celle	PRO.dem.f.s	celui
-ci	CL.suj.3.m.s	ci
se	CL.refl.3.f.s	se
compose	V.P.3.s	composer
d'	P	de
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
de	P	de
fonctions	N.C.f.p	fonction
qui	PRO.rel.f.p	qui
permettent	V.P.3.p	permettre
de	P	de
créer	VW	créer
des	D.ind.f.p	du
images	N.C.f.p	image
dynamiques	A.qual.f.p	dynamique
de	P	de
qualité	N.C.f.s	qualité
avec	P	avec
très	ADV.-	très
peu	ADV.-	peu
de	P	de
code	N.C.f.s	code
;	PONCT.W	;
Historiquement	ADV.-	historiquement
,	PONCT.W	,
le	D.def.m.s	le
format	N.C.m.s	format
GIF	N.P.m.s	Gif
est	V.P.3.s	être
le	D.def.m.s	le
premier	A.ord.m.s	premier
à	P	à
avoir	VW	avoir
été	VK.m.s	être
supporté	VK.m.s	supporter
mais	C.C	mais
aujourd’hui	ADV.-	aujourd-hui
on	CL.suj.3.m.s	on
lui	CL.obj.3.m.s	lui
prefère	V.P.3.s	preférer
les	D.def.m.p	le
formats	N.C.m.p	format
JPEG	N.P.m.s	Jpeg
et	C.C	et
surtout	ADV.-	surtout
PNG	N.C.m.s	png
,	PONCT.W	,
le	D.def.m.s	le
format	N.C.m.s	format
le	D.def.m.s	le
plus	ADV.-	plus
ouvert	A.qual.m.s	ouvert
de	P	de
tous	PRO.ind.m.p	tout
;	PONCT.W	;
Bien	ADV.-	bien
sûr	A.qual.m.s	sûr
avant	ADV.-	avant
d'	P	de
utiliser	VW	utiliser
cette	D.dem.f.s	ce
librairie	N.C.f.s	librairie
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
au	P+D.def.m.s	au
préalable	N.C.m.s	préalable
la	CL.obj.3.f.s	la
charger	VW	charger
dans	P	dans
PHP	N.P.m.s	Php
en	P	en
ajoutant	VG	ajouter
la	D.def.f.s	le
ligne	N.C.f.s	ligne
extension=gd.so	A.qual.f.s	<unknown>
dans	P	dans
le	D.def.m.s	le
fichier	N.C.m.s	fichier
php3.ini/php.ini	A.ind.m.s	<unknown>
et	C.C	et
en	P	en
vérifiant	VG	vérifier
que	C.S	que
le	D.def.m.s	le
fichier	N.C.m.s	fichier
gd.so	N.C.m.s	<unknown>
se	CL.refl.3.m.s	se
trouve	V.P.3.s	trouver
bien	ADV.-	bien
dans	P	dans
votre	D.poss.m.s	votre
extension_dir	VW	extensionädir
;	PONCT.W	;
231	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.f.s	le
API	N.P.f.s	Api
est	V.P.3.s	être
très	ADV.-	très
intuitive	A.qual.f.s	intuitif
:	PONCT.W	:
–	N.P.x.s	–
ImageCreate*()	N.P.x.s	Imagecreateëë
:	PONCT.W	:
pour	P	pour
créer	VW	créer
une	D.ind.f.s	un
image	N.C.f.s	image
blanche	A.qual.f.s	blanc
ou	C.C	ou
à	P	à
partir	VW	partir
d'	P	de
une	D.ind.f.s	un
image	N.C.f.s	image
existante	A.qual.f.s	existant
,	PONCT.W	,
–	P	à
ImageColor*()	N.P.x.s	Imagecolorçë
:	PONCT.W	:
pour	P	pour
définir	VW	définir
une	D.ind.f.s	un
couleur	N.C.f.s	couleur
et	C.C	et
la	D.def.f.s	le
transparence	N.C.f.s	transparence
,	PONCT.W	,
–	P	à
ImageString()	N.P.x.s	Imagestringçë
:	PONCT.W	:
pour	P	pour
écrire	VW	écrire
du	P+D.def.m.s	du
texte	N.C.m.s	texte
,	PONCT.W	,
–	P	à
Image<forme>()	N.P.x.s	Imageëformeë
:	PONCT.W	:
pour	P	pour
dessiner	VW	dessiner
des	D.ind.f.p	du
formes	N.C.f.p	forme
géométrique	A.qual.f.s	géométrique
connue	VK.f.s	connaître
(	PONCT.W	(
rectangle	N.C.m.s	rectangle
,	PONCT.W	,
arc	N.C.m.s	arc
,	PONCT.W	,
ligne	N.C.f.s	ligne
,	PONCT.W	,
polygone	N.C.m.s	polygone
...	PONCT.W	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	N.C.m.s	–
ImageFill*()	N.P.m.s	Imagefillçëë
:	PONCT.W	:
pour	P	pour
colorier	N.C.m.s	colorier
des	P+D.def.f.p	du
formes	N.C.f.p	forme
,	PONCT.W	,
–	P	à
Image<attribut>()	N.P.x.s	Imageçattributëëë
:	PONCT.W	:
pour	P	pour
connaître	VW	connaître
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
(	PONCT.W	(
largeur	N.C.f.s	largeur
,	PONCT.W	,
hauteur	N.C.m.s	hauteur
,	PONCT.W	,
taille	N.C.f.s	taille
...	PONCT.W	<unknown>
)	PONCT.W	)
de	P	de
l'	D.def.f.s	le
image	N.C.f.s	image
,	PONCT.W	,
–	N.C.m.s	–
Image<type>()	N.P.x.s	<unknown>
:	PONCT.W	:
pour	P	pour
envoyer	VW	envoyer
une	D.ind.f.s	un
image	N.C.f.s	image
de	P	de
type	N.C.m.s	type
PNG	N.P.x.s	Png
,	PONCT.W	,
JPEG	N.P.m.s	Jpeg
ou	C.C	ou
GIF	N.P.m.s	Gif
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
,	PONCT.W	,
–	N.C.m.s	–
ImageDestroy()	N.P.m.s	Imagedestroyçë
:	PONCT.W	:
pour	P	pour
détruire	VW	détruire
l'	D.def.f.s	le
image	N.C.f.s	image
...	PONCT.W	<unknown>
232	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Toutes	A.ind.f.p	tout
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
de	P	de
l'	D.def.f.s	le
API	N.P.f.s	Api
manipulent	V.P.3.p	manipuler
un	D.ind.m.s	un
pointeur	N.C.m.s	pointeur
sur	P	sur
l'	D.def.f.s	le
image	N.C.f.s	image
courante	A.qual.f.s	courant
;	PONCT.W	;
Ce	D.dem.m.s	ce
pointeur	N.C.m.s	pointeur
est	V.P.3.s	être
retourné	VK.m.s	retourner
par	P	par
la	D.def.f.s	le
fonction	N.C.f.s	fonction
ImageCreate*()	N.P.x.s	Imagecreateëë
à	P	à
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
l'	D.def.f.s	le
image	N.C.f.s	image
;	PONCT.W	;
Typiquement	ADV.-	typiquement
,	PONCT.W	,
on	CL.suj.3.m.s	on
crée	V.P.3.s	créer
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
PHP	N.C.m.s	php
dont	PRO.rel.m.s	dont
le	D.def.m.s	le
seul	A.ind.m.s	seul
but	N.C.m.s	but
est	V.P.3.s	être
de	P	de
retourner	VW	retourner
une	D.ind.f.s	un
image	N.C.f.s	image
dynamique	A.qual.f.s	dynamique
;	PONCT.W	;
233	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Les	D.def.m.p	le
arguments	N.C.m.p	argument
pour	P	pour
créer	VW	créer
l'	D.def.f.s	le
image	N.C.f.s	image
sont	V.P.3.p	être
alors	ADV.-	alors
passés	VK.m.p	passer
dans	P	dans
l'	D.def.f.s	le
URL	N.P.f.s	Url
à	P	à
la	D.def.f.s	le
manière	N.C.f.s	manière
des	P+D.def.f.p	du
formulaires	N.C.f.p	formulaire
en	P	en
mode	N.C.f.s	mode
GET	N.P.f.s	Get
par	P	par
exemple	N.C.m.s	exemple
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
<IMG	N.C.m.s	<unknown>
src	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
bouton.php	ET	<unknown>
?	PONCT.S	?

texte=TITRE+BOUTON">	N.C.m.p	texteçtitreuboutonç
)	PONCT.W	)
Le	D.def.m.s	le
fichier	N.C.m.s	fichier
doit	V.P.3.s	devoir
retourner	VW	retourner
un	D.ind.m.s	un
en-tête	N.C.m.s	en-tête
correspondant	A.qual.m.s	correspondant
à	P	à
l'	D.def.f.s	le
image	N.C.f.s	image
retournée	VK.f.s	retourner
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
Header("Content-type	N.P.m.s	Headerçcontent-Type
:	PONCT.W	:
image/gif	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
)	PONCT.W	)
afin	V.P.3.s	<unknown>
que	C.S	que
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
puisse	V.S.3.s	pouvoir
correctement	ADV.-	correctement
l'	CL.obj.3.m.s	le
afficher	VW	afficher
;	PONCT.W	;
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
aussi	ADV.-	aussi
créer	VW	créer
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
qui	PRO.rel.f.s	qui
génère	V.P.3.s	générer
l'	D.def.f.s	le
image	N.C.f.s	image
mais	C.C	mais
cette	D.dem.f.s	ce
technique	N.C.f.s	technique
est	V.P.3.s	être
moins	ADV.-	moins
facile	A.qual.f.s	facile
à	P	à
utiliser	VW	utiliser
car	C.C	car
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
s'	CL.refl.3.m.s	se
occuper	VW	occuper
de	P	de
stocker	VW	stocker
l'	D.def.f.s	le
image	N.C.f.s	image
puis	C.C	pui
éventuellement	ADV.-	éventuellement
de	P	de
la	CL.obj.3.f.s	la
détruire	VW	détruire
par	P	par
la	D.def.f.s	le
suite	N.C.f.s	suite
;	PONCT.W	;
234	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
génération	N.C.f.s	génération
dynamique	A.qual.f.s	dynamique
de	P	de
boutons	N.C.m.p	bouton
,	PONCT.W	,
bouton.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
Header("Content-type	N.P.m.s	Headerçcontent-Type
:	PONCT.W	:
image/gif	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
!	PONCT.S	!

isset($texte))	N.C.m.s	issetçëtexteëë
$texte	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
"	PONCT.W	"
;	PONCT.W	;
$image	ET	çimage
=	PONCT.W	=
ImageCreateFromGif("images/bouton.gif")	N.P.x.s	<unknown>
;	PONCT.W	;
$couleur	N.C.f.s	çcouleur
=	P	à
ImageColorAllocate($image	N.P.x.s	Imagecolorallocateçe
,	PONCT.W	,
255	N.card.m.s	@card@
,	PONCT.W	,
255	N.card.m.s	@card@
,	PONCT.W	,
255	N.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
$espace	N.C.m.s	cespace
=	ET	=
(	PONCT.W	(
ImageSX($image)	N.P.x.s	Imagesxüëimage
-	PONCT.W	-
7.5	D.card.m.p	@card@
*	N.C.m.p	*
strlen($texte))	N.C.m.s	<unknown>
/	PONCT.W	@card@
2	A.card.m.s	@card@
;	PONCT.W	;
ImageString($image	N.P.m.s	Imagestringçëge
,	PONCT.W	,
5	N.card.m.s	@card@
,	PONCT.W	,
$espace	N.C.m.s	cespace
,	PONCT.W	,
9	A.card.m.s	@card@
,	PONCT.W	,
$texte	N.C.m.s	<unknown>
,	PONCT.W	,
$couleur	N.C.f.s	çcouleur
)	PONCT.W	)
;	PONCT.W	;
ImageGif($image)	N.P.x.s	Imagegifçimagef
;	PONCT.W	;
ImageDestroy($image)	N.P.m.s	Imagedestroymageë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
235	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Avant	N.P.m.s	Avant
:	PONCT.W	:
<IMG	N.C.m.s	<unknown>
src	P	<unknown>
=	PONCT.W	=
"	PONCT.W	"
bouton.php	ET	<unknown>
?	PONCT.S	?

texte=Mon+titre">	N.C.f.p	texteëmonutitreë
Après	P	après
:	PONCT.W	:
236	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Fonctions	N.C.f.p	fonction
mathématiques	A.qual.f.p	mathématique
Il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
deux	D.card.m.p	deux
types	N.C.m.p	type
de	P	de
fonctions	N.C.f.p	fonction
mathématiques	A.qual.f.p	mathématique
dans	P	dans
PHP	N.P.m.s	Php
:	PONCT.W	:
–	P	à
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
standards	A.qual.f.p	standard
,	PONCT.W	,
qui	PRO.rel.f.p	qui
s'	CL.refl.3.f.p	se
appliquent	V.P.3.p	appliquer
sur	P	sur
des	D.ind.m.p	du
entiers	N.C.m.p	entier
long	A.qual.m.s	long
(	PONCT.W	(
double	N.C.m.s	double
)	PONCT.W	)
,	PONCT.W	,
et	C.C	et
–	P	à
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
de	P	de
précision	N.C.f.s	précision
où	PRO.rel.f.p	où
les	D.def.m.p	le
nombres	N.C.m.p	nombre
sont	V.P.3.p	être
représentés	VK.m.p	représenter
par	P	par
des	D.ind.f.p	du
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
.	PONCT.S	.

La	D.def.f.s	le
constante	N.C.f.s	constante
M_PI	N.P.m.s	Müpi
est	V.P.3.s	être
définie	VK.f.s	définir
pour	P	pour
le	D.def.m.s	le
nombre	N.C.m.s	nombre
Pi	N.P.m.s	Pi
;	PONCT.W	;
237	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.C.m.s	php
Les	D.def.f.p	le
fonctions	N.C.f.p	fonction
standards	A.qual.f.p	standard
les	D.def.f.p	le
plus	ADV.-	plus
utilisées	VK.f.p	utiliser
sont	V.P.3.p	être
les	D.def.f.p	le
suivantes	A.qual.f.p	suivant
:	PONCT.W	:
–	P	à
abs()	N.C.m.s	absçë
:	PONCT.W	:
valeur	N.C.f.s	valeur
absolue	A.qual.f.s	absolu
,	PONCT.W	,
–	P+D.def.m.s	c
number_format()	N.C.m.s	numberçformatçë
:	PONCT.W	:
formate	V.P.3.s	formater
un	D.ind.m.s	un
nombre	N.C.m.s	nombre
par	P	par
groupe	N.C.m.s	groupe
de	P	de
milliers	N.C.m.p	millier
,	PONCT.W	,
–	P+D.def.m.s	c
round()/ceil()/floor()	N.C.m.s	<unknown>
:	PONCT.W	:
arrondis	N.C.m.p	arrondi
,	PONCT.W	,
–	D.card.m.p	–
max()/min()	N.C.m.s	<unknown>
:	PONCT.W	:
encadrements	N.C.m.p	encadrement
,	PONCT.W	,
–	P+D.def.m.s	c
pow()/sqrt()	N.C.m.s	<unknown>
:	PONCT.W	:
puissances	N.C.f.p	puissance
,	PONCT.W	,
–	P+D.def.m.s	c
exp()/log()/log10()	N.C.m.s	<unknown>
:	PONCT.W	:
exponentielles	N.C.f.p	exponentiel
et	C.C	et
logarithmes	N.C.m.p	logarithme
,	PONCT.W	,
238	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.C.m.s	–
cos()/sin()/tan()/acos()/asin()/atan()	N.C.m.s	<unknown>
:	PONCT.W	:
trigonométrie	N.C.f.s	trigonométrie
,	PONCT.W	,
–	N.C.m.s	–
base_convert()/BinDec()/DecBin()/HexDec()/	N.C.m.s	<unknown>
DecHex()/OctDec()/DecOct()	N.P.x.s	<unknown>
:	PONCT.W	:
changements	N.C.m.p	changement
de	P	de
bases	N.C.f.p	base
,	PONCT.W	,
–	P+D.def.m.s	c
rand()/srand()/getrandmax()	N.C.m.s	rand-handrand-hédd-ëraxçë
:	PONCT.W	:
nombres	A.qual.m.p	nombre
pseudo-aléatoires	N.C.m.p	pseudo-aléatoire
(	PONCT.W	(
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
mt_*	A.qual.f.p	<unknown>
sont	V.P.3.p	être
meilleures	A.qual.f.p	meilleur
et	C.C	et
plus	ADV.-	plus
rapides	A.qual.f.p	rapide
)	PONCT.W	)
.	PONCT.S	.

239	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
$x	N.C.m.s	cx
=	PONCT.W	=
-12	N.card.f.s	@card@
;	PONCT.W	;
print	V.J.3.s	prendre
sqrt(pow($x	N.C.m.s	<unknown>
,	PONCT.W	,
2	N.card.m.s	@card@
)	PONCT.W	)
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
=	N.C.m.s	=
"	PONCT.W	"
.	PONCT.S	.

abs($x)	N.C.m.s	absçëxà
;	PONCT.W	;
#	N.C.m.s	#
Affiche	N.C.m.s	affiche
12	A.card.m.s	@card@
=	V.P.3.s	être
12	A.card.m.s	@card@
print	V.J.3.s	prendre
number_format(round(12550.49999999)	N.C.m.s	<unknown>
,	PONCT.W	,
3	N.card.m.s	@card@
,	PONCT.W	,
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
#	V.P.3.s	être
Affiche	N.C.m.s	affiche
12	A.card.m.s	@card@
550,000	D.card.m.p	@card@
print	A.card.m.s	print
cos(M_PI/4)	N.C.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
=	N.C.m.s	=
"	PONCT.W	"
.	PONCT.S	.

1/sqrt(2)	N.C.m.s	<unknown>
;	PONCT.W	;
#	P	à
Affiche	N.C.m.s	affiche
0.70710678118655	A.card.f.s	@card@
=	V.P.3.s	être
0.70710678118655	D.card.f.p	@card@
240	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
PHP	N.P.m.s	Php
et	C.C	et
XML	N.P.m.s	Xml
e	PONCT.W	e
X	A.card.m.s	X
tensible	A.qual.m.s	tensible
M	N.C.m.p	m
arkup	N.C.m.s	arkup
L	D.def.m.s	l
anguage	N.C.m.s	anguage
;	PONCT.W	;
Standard	N.P.m.s	Standard
ouvert	VK.m.s	ouvrir
de	P	de
description	N.C.f.s	description
de	P	de
données	N.C.f.p	donnée
;	PONCT.W	;
Utilise	N.C.f.s	utilise
des	P+D.def.m.p	du
marqueurs	N.C.m.p	marqueur
qui	PRO.rel.m.p	qui
,	PONCT.W	,
à	P	à
la	D.def.f.s	le
différence	N.C.f.s	différence
des	P+D.def.m.p	du
autres	A.ind.m.p	autre
ML	N.C.m.p	ml
,	PONCT.W	,
décrivent	V.P.3.p	décrire
les	D.def.f.p	le
données	N.C.f.p	donnée
et	C.C	et
non	ADV.neg	non
pas	ADV.neg	pas
la	D.def.f.s	le
manière	N.C.f.s	manière
dont	PRO.rel.f.s	dont
celles	PRO.dem.f.p	celui
-ci	CL.suj.3.m.s	ci
doivent	V.P.3.p	devoir
être	VW	être
affichées	VK.f.p	afficher
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
HTML	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
L'	D.def.f.s	le
utilisation	N.C.f.s	utilisation
de	P	de
XML	N.P.m.s	Xml
avec	P	avec
PHP	N.P.m.s	Php
nécessite	V.P.3.s	nécessiter
l'	D.def.f.s	le
installation	N.C.f.s	installation
de	P	de
la	D.def.f.s	le
librairie	N.C.f.s	librairie
Expat	N.P.m.s	Expat
(	PONCT.W	(
http	ET	<unknown>
://www.jclark.com/xml/	N.P.x.s	<unknown>
)	PONCT.W	)
et	C.C	et
la	D.def.f.s	le
compilation	N.C.f.s	compilation
de	P	de
PHP	N.P.m.s	Php
avec	P	avec
l'	D.def.f.s	le
option	N.C.f.s	option
--	PONCT.W	--
with-xml	N.C.m.s	<unknown>
;	PONCT.W	;
Depuis	P	depuis
la	D.def.f.s	le
version	N.C.f.s	version
1.3.7	A.card.f.s	@card@
d'	P	de
Apache	N.P.m.s	Apache
,	PONCT.W	,
la	D.def.f.s	le
librairie	N.C.f.s	librairie
Expat	N.P.m.s	Expat
est	V.P.3.s	être
directement	ADV.-	directement
intégrée	VK.f.s	intégrer
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
web	N.C.m.s	web
;	PONCT.W	;
241	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Le	D.def.m.s	le
module	N.C.m.s	module
XML	N.P.m.s	Xml
permet	V.P.3.s	permettre
de	P	de
créer	VW	créer
un	D.ind.m.s	un
parseur	N.C.m.s	parseur
XML	N.P.m.s	Xml
appelant	VG	appeler
des	D.ind.f.p	du
fonctions	N.C.f.p	fonction
définies	VK.f.p	définir
par	P	par
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
et	C.C	et
permettant	VG	permettre
de	P	de
traiter	VW	traiter
les	D.def.f.p	le
données	N.C.f.p	donnée
incluses	A.qual.f.p	inclus
dans	P	dans
les	D.def.m.p	le
tags	N.C.m.p	tag
XML	N.P.m.s	Xml
;	PONCT.W	;
Fonctions	N.C.f.p	fonction
principales	A.qual.f.p	principal
:	PONCT.W	:
–	P+D.def.m.s	c
xml_parser_create()	N.C.m.s	<unknown>
:	PONCT.W	:
crée	V.P.3.s	créer
un	D.ind.m.s	un
parseur	N.C.m.s	parseur
XML	N.P.m.s	Xml
et	C.C	et
retourne	V.P.3.s	retourner
un	D.ind.m.s	un
descripteur	N.C.m.s	descripteur
de	P	de
parseur	N.C.f.s	parseur
qui	PRO.rel.m.s	qui
sera	V.F.3.s	être
utiliser	VW	utiliser
par	P	par
les	D.def.f.p	le
autres	A.ind.f.p	autre
fonctions	N.C.f.p	fonction
,	PONCT.W	,
–	P	à
xml_set_element_handler()	N.C.m.s	<unknown>
:	PONCT.W	:
modifie	V.P.3.s	modifier
les	D.def.f.p	le
options	N.C.f.p	option
associées	VK.f.p	associer
à	P	à
un	D.ind.m.s	un
parseur	N.C.m.s	parseur
(	PONCT.W	(
sensibilité	N.C.f.s	sensibilité
à	P	à
la	D.def.f.s	le
casse	N.C.f.s	casse
,	PONCT.W	,
encodage	N.C.m.s	encodage
des	P+D.def.m.p	du
caractères	N.C.m.p	caractère
...	PONCT.W	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	N.C.m.s	–
xml_set_character_data_handler()	N.C.m.s	xmläsetächaracterädataëhe
:	PONCT.W	:
définit	V.P.3.s	définir
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
à	P	à
appeler	VW	appeler
à	P	à
l'	D.def.f.s	le
ouverture	N.C.f.s	ouverture
et	C.C	et
à	P	à
la	D.def.f.s	le
fermeture	N.C.f.s	fermeture
d'	P	de
un	D.ind.m.s	un
tag	N.C.m.s	tag
XML	N.C.m.s	<unknown>
spécifique	A.qual.m.s	spécifique
,	PONCT.W	,
–	P+D.def.m.s	c
xml_parse()	N.C.m.s	<unknown>
:	PONCT.W	:
le	D.def.m.s	le
parseur	N.C.m.s	parseur
XML	N.P.m.s	Xml
,	PONCT.W	,
–	P+D.def.m.s	c
xml_parser_free()	N.C.m.s	<unknown>
:	PONCT.W	:
élimination	N.C.f.s	élimination
d'	P	de
un	D.ind.m.s	un
parseur	N.C.m.s	parseur
XML	N.C.m.s	<unknown>
de	P	de
la	D.def.f.s	le
mémoire	N.C.f.s	mémoire
.	PONCT.S	.

242	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
On	CL.suj.3.m.s	on
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
pas	ADV.neg	pas
directement	ADV.-	directement
manipuler	VW	manipuler
un	D.ind.m.s	un
parseur	N.C.m.s	parseur
XML	N.P.m.s	Xml
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
PHP	N.C.m.s	php
;	PONCT.W	;
Il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
pour	P	pour
cela	PRO.dem.m.s	cela
définir	VW	définir
un	D.ind.m.s	un
parseur	N.C.m.s	parseur
comme	P	comme
variable	A.qual.m.s	variable
d'	P	de
instance	N.C.f.s	instance
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
et	C.C	et
passer	VW	passer
l'	D.def.m.s	le
objet	N.C.m.s	objet
par	P	par
référence	N.C.f.s	référence
à	P	à
la	D.def.f.s	le
fonction	N.C.f.s	fonction
xml_set_object()	N.P.x.s	<unknown>
;	PONCT.W	;
Ex	N.C.m.s	ex
:	PONCT.W	:
xml_set_object(parser	N.C.m.s	<unknown>
,	PONCT.W	,
&	PONCT.W	&
object	N.C.m.s	object
)	PONCT.W	)
;	PONCT.W	;
Par	P	par
la	D.def.f.s	le
suite	N.C.f.s	suite
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
utiliser	VW	utiliser
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
xml_set_*()	N.P.x.s	<unknown>
avec	P	avec
$this->parser	N.P.x.s	<unknown>
comme	P	comme
identifiant	VG	identifier
de	P	de
parseur	N.C.f.s	parseur
.	PONCT.S	.

243	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Utilisation	N.C.f.s	utilisation
des	P+D.def.m.p	du
templates	N.C.m.p	template
PHPlib	N.P.m.s	Phplib
PHPlib	N.P.m.s	Phplib
propose	V.P.3.s	proposer
une	D.ind.f.s	un
classe	N.C.f.s	classe
Template	N.P.m.s	Template
permettant	VG	permettre
de	P	de
séparer	VW	séparer
le	D.def.m.s	le
squelette	N.C.m.s	squelette
HTML	N.P.m.s	<unknown>
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
,	PONCT.W	,
du	P+D.def.m.s	du
traitement	N.C.m.s	traitement
des	P+D.def.f.p	du
données	N.C.f.p	donnée
permettant	VG	permettre
de	P	de
modifier	VW	modifier
dynamiquement	ADV.-	dynamiquement
cette	D.dem.f.s	ce
page	N.C.f.s	page
;	PONCT.W	;
Les	D.def.f.p	le
parties	N.C.f.p	partie
dynamiques	A.qual.f.p	dynamique
de	P	de
la	D.def.f.s	le
page	N.C.f.s	page
sont	V.P.3.p	être
représentées	VK.f.p	représenter
dans	P	dans
le	D.def.m.s	le
code	N.C.m.s	code
HTML	N.P.m.s	<unknown>
par	P	par
des	D.ind.m.p	du
identifiants	N.C.m.p	identifiant
entourés	VK.m.p	entourer
d'	P	de
accolades	N.C.f.p	accolade
;	PONCT.W	;
Ces	D.dem.m.p	ce
identifiants	N.C.m.p	identifiant
seront	V.F.3.p	être
remplacées	VK.f.p	remplacer
par	P	par
leur	D.poss.f.s	leur
valeur	N.C.f.s	valeur
calculée	VK.f.s	calculer
par	P	par
le	D.def.m.s	le
script	N.C.m.s	script
PHP	N.P.m.s	Php
;	PONCT.W	;
244	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
le	D.def.m.s	le
template	N.C.m.s	template
(	PONCT.W	(
expl.ihtml	N.C.m.s	<unknown>
)	PONCT.W	)
<html><head>	N.P.m.s	<unknown>
<title>{LETITRE}</title>	A.ind.m.s	<unknown>
</head	N.P.m.s	<unknown>
>	A.ind.m.s	>
<body>	N.P.m.s	<unknown>
<br>Un	A.qual.m.s	ubrçun
exemple	N.C.m.s	exemple
de	P	de
variable	N.C.f.s	variable
:{ICI	N.P.x.s	<unknown>
}	D.card.m.s	}
</body></html>	N.P.x.s	<unknown>
245	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
(	PONCT.W	(
suite	N.C.f.s	suite
)	PONCT.W	)
:	PONCT.W	:
code	N.C.f.s	code
PHP	N.P.m.s	Php
utilisant	VG	utiliser
le	D.def.m.s	le
template	N.C.m.s	template
expl.ihtml	ET	<unknown>
include("template.inc")	ET	<unknown>
$tmpl	N.P.x.s	<unknown>
=	ET	=
new	ET	new
Template("rep-template")	ET	templateçhérep-templateç
;	PONCT.W	;
$tmpl->set_file("main	N.C.m.s	çtmpl--setäfileçmain
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
expl.ihtml	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$tmpl->set_var(array(	N.P.m.s	<unknown>
"	PONCT.W	"
LETITRE"=>"Exemple	N.C.m.s	letitreëççexemple
de	P	de
titre	N.C.m.s	titre
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
ICI"=>"Un	N.P.m.s	Iciëççun
message	N.C.m.s	message
"	PONCT.W	"
)	PONCT.W	)
)	PONCT.W	)
;	PONCT.W	;
$tpml->parse("out	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
main	N.C.f.s	main
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$tmpl->p("out")	N.P.x.s	<unknown>
;	PONCT.W	;
246	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Fonctions	N.C.f.p	fonction
associées	VK.f.p	associer
aux	P+D.def.m.p	au
templates	N.C.m.p	template
:	PONCT.W	:
–	N.C.m.s	–
template()	N.C.m.s	templateçp
:	PONCT.W	:
retourne	V.P.3.s	retourner
un	D.ind.m.s	un
objet	N.C.m.s	objet
Template	N.P.m.s	Template
associé	VK.m.s	associer
au	P+D.def.m.s	au
répertoire	N.C.m.s	répertoire
où	PRO.rel.m.s	où
sont	V.P.3.p	être
stockés	VK.m.p	stocker
les	D.def.f.p	le
squelettes	N.C.f.p	squelette
HTML	N.P.m.s	<unknown>
,	PONCT.W	,
–	P	à
set_file()	N.C.m.s	setäfileçà
:	PONCT.W	:
associe	V.P.3.s	associer
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
template	V.P.3.s	templater
à	P	à
une	D.ind.f.s	un
variable	N.C.f.s	variable
qui	PRO.rel.f.s	qui
représente	V.P.3.s	représenter
celui	PRO.dem.m.s	celui
-ci	ADV.-	-ci
,	PONCT.W	,
–	P	à
set_var()	N.C.m.s	setçvarçë
:	PONCT.W	:
affecte	V.P.3.s	affecter
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
à	P	à
un	D.ind.m.s	un
nom	N.C.m.s	nom
de	P	de
variable	N.C.f.s	variable
du	P+D.def.m.s	du
template	N.C.m.s	template
,	PONCT.W	,
Ces	D.dem.f.p	ce
deux	A.card.f.p	deux
dernières	A.qual.f.p	dernier
fonctions	N.C.f.p	fonction
peuvent	V.P.3.p	pouvoir
aussi	ADV.-	aussi
être	VW	être
appelées	VK.f.p	appeler
avec	P	avec
comme	P	comme
unique	A.qual.m.s	unique
argument	N.C.m.s	argument
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
contenant	VG	contenir
des	D.ind.f.p	du
paires	N.C.f.p	paire
clefs/valeurs	N.C.m.p	<unknown>
;	PONCT.W	;
247	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	D.card.f.p	–
parse()	N.C.m.s	parseëë
:	PONCT.W	:
cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
substitue	V.P.3.s	substituer
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
toutes	A.ind.f.p	tout
les	D.def.f.p	le
variables	N.C.f.p	variable
définies	VK.f.p	définir
dans	P	dans
la	D.def.f.s	le
variable	N.C.f.s	variable
de	P	de
référence	N.C.f.s	référence
puis	C.C	pui
stocke	N.C.m.s	stocke
(	PONCT.W	(
ou	C.C	ou
ajoute	V.P.3.s	ajouter
)	PONCT.W	)
le	D.def.m.s	le
résultat	N.C.m.s	résultat
dans	P	dans
la	D.def.f.s	le
variable	A.qual.f.s	variable
cible	N.C.f.s	cible
,	PONCT.W	,
–	P	à
p()	N.C.m.s	pçë
:	PONCT.W	:
cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
affiche	V.P.3.s	afficher
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
passée	VK.f.s	passer
en	P	en
argument	N.C.m.s	argument
dans	P	dans
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
.	PONCT.S	.

248	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Afin	N.P.f.s	Afin
de	P	de
pouvoir	VW	pouvoir
traiter	VW	traiter
des	D.ind.m.p	du
éléments	N.C.m.p	élément
répétitifs	A.qual.m.p	répétitif
(	PONCT.W	(
tableaux	N.C.m.p	tableau
,	PONCT.W	,
listes	N.C.f.p	liste
de	P	de
sélection	N.C.f.s	sélection
...	PONCT.W	<unknown>
)	PONCT.W	)
,	PONCT.W	,
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
déclarer	VW	déclarer
des	D.ind.m.p	du
blocs	N.C.m.p	bloc
dans	P	dans
les	D.def.f.p	le
variables	N.C.f.p	variable
manipulées	VK.f.p	manipuler
par	P	par
la	D.def.f.s	le
classe	N.C.f.s	classe
Template	N.P.m.s	Template
;	PONCT.W	;
La	D.def.f.s	le
définition	N.C.f.s	définition
utilise	V.P.3.s	utiliser
les	D.def.m.p	le
commentaires	N.C.m.p	commentaire
HTML	N.P.m.s	<unknown>
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
<form	ET	fform
action	N.C.f.s	action
=	PONCT.W	=
"	PONCT.W	"
{	N.C.m.s	{
PHPSELF}">	N.P.m.s	Phpselfüëë
<select	ET	<unknown>
name	A.qual.m.s	name
=	PONCT.W	=
"	PONCT.W	"
variable">	N.P.x.s	Variableëù
<	I	à
!	PONCT.S	!

--	PONCT.W	--
BEGIN	N.C.m.s	begin
monbloc	N.C.m.s	monbloc
->	A.ind.m.s	-
<option>{MUL	N.P.x.s	<unknown>
}	P	à
<	N.C.m.s	<
!	PONCT.S	!

--	PONCT.W	--
END	P	end
monbloc	N.C.m.s	monbloc
->	A.ind.m.s	-
</select>	N.P.x.s	<unknown>
<br><input	N.P.x.s	<unknown>
type="submit"></form>	N.C.m.s	<unknown>
249	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
(	PONCT.W	(
suite	N.C.f.s	suite
)	PONCT.W	)
:	PONCT.W	:
$tmpl	ET	<unknown>
=	ET	=
new	ET	new
Template("rep-template")	ET	templateçhérep-templateç
;	PONCT.W	;
$tmpl->set_file("main	N.C.m.s	çtmpl--setäfileçmain
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
expl.ihtml	ET	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$tmpl->set_bloc("main	N.C.m.s	çtmpl--setäblocçëmain
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
monbloc	N.C.m.s	monbloc
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$tmpl->set_var("PHPSELF	N.P.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$PHP_SELF	N.P.m.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
for	N.C.m.s	for
(	PONCT.W	(
$i	N.P.m.s	<unknown>
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<	N.C.m.s	<
10	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	D.card.m.s	{
$tmpl->set_var("MUL	N.C.m.s	çtmpl--setävarçël
"	PONCT.W	"
,	PONCT.W	,
$i	N.C.m.s	çi
)	PONCT.W	)
;	PONCT.W	;
$tmpl->parse("toto	N.P.x.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
monbloc	N.C.m.s	monbloc
"	PONCT.W	"
,	PONCT.W	,
true	N.C.f.s	true
)	PONCT.W	)
;	PONCT.W	;
}	D.card.m.s	}
$tpml->parse("out	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
main	N.C.f.s	main
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$tmpl->p("out")	N.P.x.s	<unknown>
;	PONCT.W	;
250	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Une	D.ind.f.s	un
fois	N.C.f.s	foi
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
défini	A.qual.m.s	défini
,	PONCT.W	,
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
le	CL.obj.3.m.s	le
répéter	VW	répéter
en	P	en
spécifiant	VG	spécifier
true	N.C.f.s	true
comme	P	comme
dernier	A.qual.m.s	dernier
argument	N.C.m.s	argument
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
parse	A.qual.f.s	pars
;	PONCT.W	;
La	D.def.f.s	le
fonction	N.C.f.s	fonction
set_block($parent	N.P.x.s	Setäblockçëparent
,	PONCT.W	,
$blocname	N.P.m.s	<unknown>
,	PONCT.W	,
$name	N.P.f.s	<unknown>
)	PONCT.W	)
indique	V.P.3.s	indiquer
que	C.S	que
la	D.def.f.s	le
variable	N.C.f.s	variable
$parent	N.P.m.s	<unknown>
contient	V.P.3.s	contenir
un	D.ind.m.s	un
bloc	N.C.m.s	bloc
nommé	VK.m.s	nommer
$blocname	N.C.m.s	<unknown>
.	PONCT.S	.

Cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
enlève	V.P.3.s	enlever
le	D.def.m.s	le
bloc	N.C.m.s	bloc
de	P	de
$parent	N.P.x.s	<unknown>
et	C.C	et
le	CL.obj.3.m.s	le
remplace	N.C.m.s	remplace
par	P	par
une	D.ind.f.s	un
variable	A.qual.f.s	variable
$name	N.P.f.s	<unknown>
.	PONCT.S	.

251	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Utilisation	N.C.f.s	utilisation
de	P	de
PHP	N.P.m.s	Php
comme	P	comme
langage	N.C.m.s	langage
de	P	de
script	N.C.m.s	script
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
utiliser	VW	utiliser
toute	A.ind.f.s	tout
la	D.def.f.s	le
puissance	N.C.f.s	puissance
et	C.C	et
la	D.def.f.s	le
richesse	N.C.f.s	richesse
des	P+D.def.f.p	du
fonctions	N.C.f.p	fonction
de	P	de
PHP	N.P.m.s	Php
pour	P	pour
faire	VW	faire
des	D.ind.m.p	du
scripts	N.C.m.p	script
non	ADV.neg	non
orientés	VK.m.p	orienter
web	N.C.m.s	web
;	PONCT.W	;
Il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
avoir	VW	avoir
au	P+D.def.m.s	au
préalable	A.qual.m.s	préalable
compilé	VK.m.s	compiler
PHP	N.P.m.s	Php
comme	P	comme
CGI	N.P.f.s	Cgi
(	PONCT.W	(
la	D.def.f.s	le
cohabitation	N.C.f.s	cohabitation
entre	P	entre
plusieurs	D.ind.f.p	plusieurs
formes	N.C.f.p	forme
de	P	de
PHP	N.P.m.s	Php
est	V.P.3.s	être
possible	A.qual.f.s	possible
sur	P	sur
une	D.ind.f.s	un
même	A.ind.f.s	même
machine	N.C.f.s	machine
)	PONCT.W	)
;	PONCT.W	;
La	D.def.f.s	le
commande	N.C.f.s	commande
php	N.P.x.s	<unknown>
donne	V.P.3.s	donner
alors	ADV.-	alors
accès	N.C.m.s	accès
à	P	à
un	D.ind.m.s	un
shell	N.C.m.s	shell
PHP	N.C.m.s	php
où	PRO.rel.m.s	où
chaque	D.ind.f.s	chaque
commande	N.C.f.s	commande
PHP	N.P.m.s	Php
tapée	N.C.f.s	tapé
est	V.P.3.s	être
interprétée	VK.f.s	interpréter
immédiatement	ADV.-	immédiatement
;	PONCT.W	;
252	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Bien	ADV.-	bien
sûr	A.qual.m.s	sûr
,	PONCT.W	,
seules	A.qual.f.p	seul
les	D.def.f.p	le
commandes	N.C.f.p	commande
encadrées	VK.f.p	encadrer
par	P	par
les	D.def.m.p	le
<	N.C.m.p	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
?	PONCT.S	?

>	CL.obj.3.m.s	c
seront	V.F.3.p	être
interprétées	VK.f.p	interpréter
les	D.def.f.p	le
autres	PRO.ind.f.p	autre
étant	VG	être
affichées	VK.f.p	afficher
telles-quelles	A.qual.f.p	telle-quel
;	PONCT.W	;
L'	D.def.f.s	le
option	N.C.f.s	option
-q	PONCT.W	-q
permet	V.P.3.s	permettre
d'	P	de
éviter	VW	éviter
d'	P	de
avoir	VW	avoir
un	D.ind.m.s	un
en-tête	N.C.m.s	en-tête
HTTP	N.P.m.s	Http
envoyé	VK.m.s	envoyer
avant	P	avant
le	D.def.m.s	le
premier	A.ord.m.s	premier
affichage	N.C.m.s	affichage
;	PONCT.W	;
Pour	P	pour
réaliser	VW	réaliser
des	D.ind.m.p	du
scripts	N.C.m.p	script
classiques	A.qual.m.p	classique
en	P	en
PHP	N.P.m.s	Php
il	CL.suj.3.m.s	il
suffit	V.P.3.s	suffire
de	P	de
faire	VW	faire
commencer	VW	commencer
le	D.def.m.s	le
fichier	N.C.m.s	fichier
par	P	par
la	D.def.f.s	le
ligne	N.C.f.s	ligne
:	PONCT.W	:
#	I	à
!	PONCT.S	!

/usr/bin/php<version>	N.C.m.p	<unknown>
-q	PONCT.W	-q
253	D.card.f.p	@card@
Fonctionnalités	N.C.f.p	fonctionnalité
utiles	A.qual.f.p	utile
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Ex	N.P.m.s	Ex
:	PONCT.W	:
script	N.C.m.s	script
d'	P	de
invite	N.C.m.s	invite
login	A.qual.m.s	login
,	PONCT.W	,
login.php	N.C.m.s	<unknown>
#	N.C.m.s	#
!	PONCT.S	!

/usr/bin/php<version>	N.C.m.p	<unknown>
-q	PONCT.W	-q
Bonjour	N.P.m.s	Bonjour
monsieur	A.qual.m.s	monsieur
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
$USER	N.P.m.s	<unknown>
,	PONCT.W	,
"	PONCT.W	"
\n	N.C.m.s	<unknown>
"	PONCT.W	"
?	PONCT.S	?

>	N.C.m.s	>
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
êtes	V.P.2.p	être
sur	P	sur
la	D.def.f.s	le
machine	N.C.f.s	machine
<	N.P.f.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
$HOSTNAME	N.P.x.s	Hoostname
,	PONCT.W	,
"	PONCT.W	"
\n	N.C.m.s	<unknown>
"	PONCT.W	"
?	PONCT.S	?

>	N.C.m.s	>
En	P	en
vérifiant	VG	vérifier
que	C.S	que
les	D.def.f.p	le
variables	N.C.f.p	variable
$USER	N.P.m.s	<unknown>
et	C.C	et
$HOSTNAME	N.P.x.s	Hoostname
sont	V.P.3.p	être
bien	ADV.-	bien
exportées	VK.f.p	exporter
par	P	par
le	D.def.m.s	le
shell	N.C.m.s	shell
et	C.C	et
en	P	en
rendant	VG	rendre
le	D.def.m.s	le
script	N.C.m.s	script
login.php	N.C.m.s	<unknown>
exécutable	A.qual.m.s	exécutable
(	PONCT.W	(
chmod	N.C.m.s	chmod
+x	P	u
login.php	N.C.m.s	<unknown>
)	PONCT.W	)
la	D.def.f.s	le
commande	N.C.f.s	commande
./login.php	N.P.x.s	<unknown>
affiche	V.P.3.s	afficher
:	PONCT.W	:
Bonjour	N.P.m.s	Bonjour
monsieur	A.qual.m.s	monsieur
nom_login	A.ind.m.s	nomçlogin
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
êtes	V.P.2.p	être
sur	P	sur
la	D.def.f.s	le
machine	N.C.f.s	machine
nom_machine	A.qual.f.s	nomämachin
.	PONCT.S	.

254	D.card.f.p	@card@
Section	N.C.f.p	section
4	A.card.f.s	@card@
Alcôve	N.P.f.p	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Conclusion	N.C.f.s	conclusion
255	A.card.f.s	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Objectifs	N.C.m.p	objectif
du	P+D.def.m.s	du
chapitre	N.C.m.s	chapitre
Conseils	N.C.m.p	conseil
de	P	de
programmation	N.C.f.s	programmation
PHP	N.P.m.s	Php
;	PONCT.W	;
L'	D.def.m.s	le
avenir	N.C.m.s	avenir
de	P	de
PHP	N.P.m.s	Php
;	PONCT.W	;
Références	N.C.f.p	référence
;	PONCT.W	;
Glossaire	N.P.m.s	Glossaire
.	PONCT.S	.

256	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Conseils	N.C.m.p	conseil
de	P	de
programmation	N.C.f.s	programmation
PHP	N.P.m.s	Php
Penser	VW	penser
en	P	en
matière	N.C.f.s	matière
de	P	de
réutilisabilité	N.C.f.s	réutilisabilité
du	P+D.def.m.s	du
code	N.C.m.s	code
;	PONCT.W	;
Ne	ADV.-	ne
pas	ADV.neg	pas
lésiner	VW	lésiner
sur	P	sur
les	D.def.m.p	le
commentaires	N.C.m.p	commentaire
,	PONCT.W	,
ils	CL.suj.3.m.p	il
aideront	V.F.3.p	aider
les	D.def.m.p	le
autres	PRO.ind.m.p	autre
à	P	à
comprendre	VW	comprendre
votre	D.poss.m.s	votre
code	N.C.m.s	code
(	PONCT.W	(
on	CL.suj.3.m.s	on
est	V.P.3.s	être
rarement	ADV.-	rarement
seul	A.qual.m.s	seul
à	P	à
travailler	VW	travailler
sur	P	sur
un	D.ind.m.s	un
site	N.C.m.s	site
web	N.C.m.s	web
)	PONCT.W	)
;	PONCT.W	;
Segmenter	VW	segmenter
le	D.def.m.s	le
code	N.C.m.s	code
PHP	N.P.m.s	Php
pour	P	pour
le	CL.obj.3.m.s	le
rendre	VW	rendre
plus	ADV.-	plus
clair	A.qual.m.s	clair
:	PONCT.W	:
–	P	à
préférer	VW	préférer
les	D.def.f.p	le
fonctions	N.C.f.p	fonction
courtes	A.qual.f.p	court
et	C.C	et
mono-tâches	A.qual.f.p	mono-tâche
,	PONCT.W	,
–	P	à
utiliser	VW	utiliser
des	D.ind.m.p	du
fichiers	N.C.m.p	fichier
différents	A.qual.m.p	différent
...	PONCT.S	<unknown>
257	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Essayer	VW	essayer
de	P	de
séparer	VW	séparer
au	P+D.def.m.s	au
maximum	N.C.m.s	maximum
les	D.def.m.p	le
aspects	N.C.m.p	aspect
graphiques	A.qual.m.p	graphique
(	PONCT.W	(
charte	N.C.f.s	charte
graphique	A.qual.f.s	graphique
,	PONCT.W	,
feuilles	N.C.f.p	feuille
de	P	de
styles	N.C.m.p	style
...	PONCT.W	<unknown>
)	PONCT.W	)
,	PONCT.W	,
contenu	VK.m.s	contenir
(	PONCT.W	(
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
données	N.C.f.p	donnée
dynamiques	A.qual.f.p	dynamique
...	PONCT.W	<unknown>
)	PONCT.W	)
et	C.C	et
mise	VK.f.s	mettre
en	P	en
forme	N.C.f.s	forme
(	PONCT.W	(
affichage	N.C.m.s	affichage
des	P+D.def.f.p	du
données	N.C.f.p	donnée
dynamiques	A.qual.f.p	dynamique
...	PONCT.W	<unknown>
)	PONCT.W	)
:	PONCT.W	:
–	P+D.def.m.s	c
utilisation	N.C.f.s	utilisation
de	P	de
fichiers	N.C.m.p	fichier
d'	P	de
en-têtes	N.C.f.p	en-tête
,	PONCT.W	,
de	P	de
barres	N.C.f.p	barre
de	P	de
navigation	N.C.f.s	navigation
et	C.C	et
de	P	de
pieds	N.C.m.p	pied
de	P	de
pages	N.C.f.p	page
séparés	A.qual.m.p	séparé
,	PONCT.W	,
–	P	à
utilisation	N.C.f.s	utilisation
de	P	de
fichiers	N.C.m.p	fichier
contenant	VG	contenir
les	D.def.f.p	le
classes	N.C.f.p	classe
manipulées	VK.f.p	manipuler
par	P	par
les	D.def.m.p	le
scripts	N.C.m.p	script
...	PONCT.S	<unknown>
258	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
L'	D.def.m.s	le
avenir	N.C.m.s	avenir
de	P	de
PHP	N.P.m.s	Php
De	P	de
plus	ADV.-	plus
en	P	en
plus	ADV.-	plus
utilisé	VK.m.s	utiliser
sur	P	sur
Internet	N.P.m.s	Internet
(	PONCT.W	(
plusieurs	D.ind.m.p	plusieurs
millions	N.card.m.p	million
de	P	de
domaines	N.C.m.p	domaine
différents	A.qual.m.p	différent
)	PONCT.W	)
;	PONCT.W	;
PHP4	N.P.m.s	Php4
depuis	P	depuis
le	D.def.m.s	le
début	N.C.m.s	début
de	P	de
l'	D.def.f.s	le
année	N.C.f.s	année
2000	N.card.f.s	@card@
;	PONCT.W	;
Cette	D.dem.f.s	ce
version	N.C.f.s	version
est	V.P.3.s	être
néanmoins	ADV.-	néanmoins
contestée	VK.f.s	contester
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
FSF	N.P.m.s	Fsf
)	PONCT.W	)
à	P	à
cause	N.C.f.s	cause
de	P	de
ses	D.poss.f.p	son
nouvelles	A.qual.f.p	nouveau
licences	N.C.f.p	licence
;	PONCT.W	;
Elle	CL.suj.3.f.s	elle
apporte	V.P.3.s	apporter
cependant	ADV.-	cependant
plus	ADV.-	plus
de	P	de
rapidité	N.C.f.s	rapidité
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
analyseur	N.C.m.s	analyseur
Zend	N.P.m.s	Zend
)	PONCT.W	)
et	C.C	et
de	D.ind.f.p	de
nouvelles	A.qual.f.p	nouveau
fonctionnalités	N.C.f.p	fonctionnalité
natives	A.qual.f.p	natif
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
...	PONCT.W	<unknown>
)	PONCT.W	)
;	PONCT.W	;
259	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Références	N.C.f.p	référence
Livres	N.P.m.s	Livres
:	PONCT.W	:
–	P+D.def.m.s	c
Professional	N.P.m.s	Professional
PHP	N.P.m.s	Php
Programming	N.P.m.s	Programming
(	PONCT.W	(
Wrox	N.P.m.s	Wrox
)	PONCT.W	)
,	PONCT.W	,
–	P	à
Programmation	N.C.f.s	programmation
Web	N.P.m.s	Web
avec	P	avec
PHP	N.P.m.s	Php
(	PONCT.W	(
Eyrolles	N.P.m.s	Eyrolles
)	PONCT.W	)
,	PONCT.W	,
–	P	à
PHP	N.P.m.s	Php
,	PONCT.W	,
précis	N.C.m.p	précis
&	PONCT.W	&
concis	N.C.m.p	concis
(	PONCT.W	(
O’Reilly	N.P.m.s	Oëreilly
)	PONCT.W	)
,	PONCT.W	,
–	P	à
Programmation	N.C.f.s	programmation
PHP	N.P.m.s	Php
(	PONCT.W	(
CampusPress	N.C.m.p	campuspress
)	PONCT.W	)
...	PONCT.S	<unknown>
260	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
URLs	N.P.f.s	Urls
:	PONCT.W	:
–	N.card.m.s	–
Le	D.def.m.s	le
site	N.C.m.s	site
officiel	A.qual.m.s	officiel
de	P	de
PHP	N.P.m.s	Php
(	PONCT.W	(
http	ET	<unknown>
://www.php.net	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
Documentation	N.C.f.s	documentation
officielle	A.qual.f.s	officiel
en	P	en
anglais	N.C.m.s	anglais
(	PONCT.W	(
http	ET	<unknown>
://www.php.net/manual	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
Traduction	N.C.f.s	traduction
française	A.qual.f.s	français
de	P	de
la	D.def.f.s	le
documentation	N.C.f.s	documentation
officielle	A.qual.f.s	officiel
(	PONCT.W	(
http	ET	<unknown>
://dev.nexen.net/docs	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
Le	D.def.m.s	le
site	N.C.m.s	site
de	P	de
Zend	N.P.m.s	Zend
(	PONCT.W	(
http	ET	<unknown>
://www.zend.com	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	D.card.m.s	–
Développement	N.C.m.s	développement
PHP/MySQL	N.P.x.s	<unknown>
chez	P	chez
Nexen	N.P.m.s	Nexen
(	PONCT.W	(
http	ET	<unknown>
://dev.nexen.net	N.P.x.s	<unknown>
)	PONCT.W	)
261	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	D.card.m.p	–
Projets	N.C.m.p	projet
libres	A.qual.m.p	libre
autour	N.C.m.s	autour
de	P	de
PHP	N.P.m.s	Php
(	PONCT.W	(
http	ET	<unknown>
://www.phpwizard.net	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	D.card.m.p	–
Articles	N.C.m.p	article
techniques	A.qual.m.p	technique
sur	P	sur
PHP	N.P.m.s	Php
(	PONCT.W	(
http	ET	<unknown>
://www.phpbuilder.com/	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	P	à
Le	D.def.m.s	le
site	N.C.m.s	site
officiel	A.qual.m.s	officiel
de	P	de
PHPlib	N.P.m.s	Phplib
(	PONCT.W	(
http	ET	<unknown>
://phplib.netuse.de	N.P.x.s	<unknown>
)	PONCT.W	)
,	PONCT.W	,
–	D.card.m.s	–
Site	N.C.m.s	site
Francophone	N.P.m.s	Francophone
pour	P	pour
l'	D.def.f.s	le
Aide	N.P.f.s	Aide
à	P	à
la	D.def.f.s	le
Programmation	N.C.f.s	programmation
en	P	en
PHP	N.P.m.s	Php
(	PONCT.W	(
http	ET	<unknown>
://www.phpfr.org	N.P.x.s	<unknown>
)	PONCT.W	)
...	PONCT.S	<unknown>
262	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
Glossaire	N.C.m.s	glossaire
–	N.C.m.s	–
Apache	N.P.m.s	Apache
:	PONCT.W	:
serveur	N.C.m.s	serveur
web	N.C.m.s	web
(	PONCT.W	(
HTTP	N.C.m.s	<unknown>
)	PONCT.W	)
le	D.def.m.s	le
plus	ADV.-	plus
utilisé	VK.m.s	utiliser
sur	P	sur
Internet	N.P.m.s	Internet
,	PONCT.W	,
–	N.C.m.s	–
Browser	N.P.m.s	Browser
:	PONCT.W	:
navigateur/butineur	N.C.m.s	<unknown>
de	P	de
page	N.C.f.s	page
web	N.C.m.s	web
,	PONCT.W	,
–	P	à
CGI	N.P.f.s	Cgi
(	PONCT.W	(
Common	ET	common
Gateway	N.P.m.s	Gateway
Interface	N.P.m.s	Interface
)	PONCT.W	)
:	PONCT.W	:
interface	N.C.f.s	interface
de	P	de
communication	N.C.f.s	communication
pour	P	pour
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
programmes	N.C.m.p	programme
capables	A.qual.m.p	capable
d'	P	de
être	VW	être
exécutés	VK.m.p	exécuter
par	P	par
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
HTTP	N.P.m.s	Http
,	PONCT.W	,
elle	CL.suj.3.f.s	elle
permet	V.P.3.s	permettre
la	D.def.f.s	le
création	N.C.f.s	création
dynamique	A.qual.f.s	dynamique
de	P	de
pages	N.C.f.p	page
du	P+D.def.m.s	du
côté	N.C.m.s	côté
serveur	A.qual.m.s	serveur
,	PONCT.W	,
–	P+D.def.m.s	c
GET	N.P.m.s	Get
:	PONCT.W	:
méthode	N.C.f.s	méthode
HTTP	N.C.m.s	<unknown>
de	P	de
transmission	N.C.f.s	transmission
de	P	de
formulaires	N.C.m.p	formulaire
via	P	via
les	D.def.m.p	le
URLs	N.C.m.p	url
(	PONCT.W	(
données	N.C.f.p	donnée
encodées	VK.f.p	encoder
dans	P	dans
l'	D.def.m.s	le
URL	N.P.f.s	Url
)	PONCT.W	)
,	PONCT.W	,
263	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.P.m.s	–
GIF	N.P.m.s	Gif
(	PONCT.W	(
Graphics	N.P.m.s	Graphics
Interchange	N.P.m.s	Interchange
Format	N.P.m.s	Format
)	PONCT.W	)
:	PONCT.W	:
format	N.C.m.s	format
breveté	VK.m.s	breveter
d'	P	de
images	N.C.f.p	image
compressés	A.qual.m.p	compressé
,	PONCT.W	,
très	ADV.-	très
utilisé	VK.m.s	utiliser
sur	P	sur
le	D.def.m.s	le
web	N.C.m.s	web
,	PONCT.W	,
–	P	à
HTML	N.P.m.s	<unknown>
(	PONCT.W	(
Hyper	N.P.m.s	Hyper
Text	N.P.m.s	Text
Markup	N.P.m.s	Markup
Language	N.P.m.s	Language
)	PONCT.W	)
:	PONCT.W	:
langage	N.C.m.s	langage
de	P	de
description	N.C.f.s	description
structurale	A.qual.f.s	structural
de	P	de
documents	N.C.m.p	document
,	PONCT.W	,
basé	VK.m.s	baser
sur	P	sur
la	D.def.f.s	le
notion	N.C.f.s	notion
d'	P	de
environnement	N.C.m.s	environnement
et	C.C	et
de	P	de
délimiteurs	N.C.m.p	délimiteur
,	PONCT.W	,
utilisé	VK.m.s	utiliser
pour	P	pour
créer	VW	créer
les	D.def.f.p	le
pages	N.C.f.p	page
web	N.C.m.s	web
,	PONCT.W	,
–	P	à
HTTP	N.P.m.s	Http
(	PONCT.W	(
HyperText	N.P.m.s	Hypertext
Transfer	N.P.m.s	Transfer
Protocol	N.P.m.s	Protocol
)	PONCT.W	)
:	PONCT.W	:
protocole	N.C.m.s	protocole
de	P	de
transfert	N.C.m.s	transfert
de	P	de
fichiers	N.C.m.p	fichier
utilisé	VK.m.s	utiliser
sur	P	sur
le	D.def.m.s	le
web	N.C.m.s	web
,	PONCT.W	,
–	P	à
HTTPD	N.P.m.s	<unknown>
(	PONCT.W	(
HTTP	N.P.m.s	Http
Daemon	N.P.m.s	Daemon
)	PONCT.W	)
:	PONCT.W	:
partie	N.C.f.s	partie
principale	A.qual.f.s	principal
d'	P	de
un	D.ind.m.s	un
serveur	N.C.m.s	serveur
web	N.C.m.s	web
qui	PRO.rel.m.s	qui
échange	V.P.3.s	échanger
,	PONCT.W	,
via	P	via
HTTP	N.P.m.s	Http
,	PONCT.W	,
des	D.ind.m.p	du
fichiers	N.C.m.p	fichier
avec	P	avec
les	D.def.m.p	le
clients	N.C.m.p	client
web	ET	web
(	PONCT.W	(
navigateurs	N.C.m.p	navigateur
)	PONCT.W	)
,	PONCT.W	,
264	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.f.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.C.m.s	–
JPEG	N.P.m.s	Jpeg
:	PONCT.W	:
format	N.C.m.s	format
d'	P	de
images	N.C.f.p	image
compressés	VK.m.p	compresser
très	ADV.-	très
utilisé	VK.m.s	utiliser
sur	P	sur
le	D.def.m.s	le
web	N.C.m.s	web
,	PONCT.W	,
–	N.P.m.s	–
LDAP	N.P.m.s	Ldap
(	PONCT.W	(
Lightweight	N.P.m.s	Lightweight
Directory	N.P.m.s	Directory
Access	ET	access
Protocol	N.P.m.s	Protocol
)	PONCT.W	)
:	PONCT.W	:
protocole	N.C.m.s	protocole
normalisé	VK.m.s	normaliser
d'	P	de
accès	N.C.m.s	accès
aux	P+D.def.m.p	au
services	N.C.m.p	service
d'	P	de
annuaires	N.C.m.p	annuaire
,	PONCT.W	,
–	P	à
PHP	N.P.m.s	Php
(	PONCT.W	(
PHP	N.P.m.s	Php
:	PONCT.W	:
Hypertext	N.P.m.s	Hypertext
PreProcessor	N.P.m.s	Preprocessor
)	PONCT.W	)
:	PONCT.W	:
langage	N.C.m.s	langage
de	P	de
script	N.C.m.s	script
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
,	PONCT.W	,
embarqué	VK.m.s	embarquer
dans	P	dans
les	D.def.f.p	le
pages	N.C.f.p	page
HTML	N.P.m.s	<unknown>
,	PONCT.W	,
–	P+D.def.m.s	c
PNG	N.C.m.s	png
(	PONCT.W	(
Portable	A.qual.m.s	portable
Network	N.P.m.s	Network
Graphics	N.P.m.s	Graphics
)	PONCT.W	)
:	PONCT.W	:
format	N.C.m.s	format
libre	A.qual.m.s	libre
d'	P	de
images	N.C.f.p	image
compressés	VK.m.p	compresser
créé	VK.m.s	créer
pour	P	pour
fournir	VW	fournir
une	D.ind.f.s	un
alternative	N.C.f.s	alternative
libre	A.qual.f.s	libre
au	P+D.def.m.s	au
format	N.C.m.s	format
GIF	N.P.m.s	Gif
,	PONCT.W	,
265	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.C.m.s	–
POST	N.P.m.s	Post
:	PONCT.W	:
méthode	N.C.f.s	méthode
HTTP	N.C.m.s	<unknown>
de	P	de
transmission	N.C.f.s	transmission
de	P	de
formulaires	N.C.f.p	formulaire
dans	P	dans
le	D.def.m.s	le
corps	N.C.m.s	corps
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
(	PONCT.W	(
alternative	A.qual.f.s	alternatif
à	P	à
la	D.def.f.s	le
méthode	N.C.f.s	méthode
GET	N.P.m.s	Get
)	PONCT.W	)
,	PONCT.W	,
–	P	à
Regex	N.P.m.s	Regex
:	PONCT.W	:
raccourci	VK.m.s	raccourcir
pour	P	pour
Regular	N.P.m.s	Regular
Expressions	N.C.f.p	expression
,	PONCT.W	,
syntaxe	N.C.m.s	syntaxe
pour	P	pour
réaliser	VW	réaliser
des	D.ind.f.p	du
manipulations	N.C.f.p	manipulation
complexes	A.qual.f.p	complexe
sur	P	sur
les	D.def.f.p	le
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
,	PONCT.W	,
–	P	à
Session	N.C.f.s	session
PHP	N.P.m.s	Php
:	PONCT.W	:
mécanisme	N.C.m.s	mécanisme
de	P	de
sauvegarde	N.C.f.s	sauvegarde
d'	P	de
informations	N.C.f.p	information
entre	P	entre
deux	D.card.m.p	deux
accès	N.C.m.p	accès
(	PONCT.W	(
requêtes	N.C.f.p	requête
HTTP	N.P.m.s	Http
)	PONCT.W	)
,	PONCT.W	,
–	N.P.m.s	–
SGBD	N.P.m.s	Sgbd
:	PONCT.W	:
Système	N.C.m.s	système
de	P	de
Gestion	N.C.f.s	gestion
de	P	de
Bases	N.P.m.s	Bases
de	P	de
Données	N.P.x.s	Données
,	PONCT.W	,
266	D.card.f.p	@card@
Conclusion	N.C.f.s	conclusion
Alcôve	N.P.m.s	Alcôve
-	PONCT.W	-
Programmer	N.P.m.s	Programmer
en	P	en
PHP	N.P.m.s	Php
–	N.C.m.s	–
SQL	N.P.m.s	Sql
(	PONCT.W	(
Structured	N.P.m.s	Structured
Query	N.P.m.s	Query
Langage	N.P.m.s	Langage
)	PONCT.W	)
:	PONCT.W	:
langage	N.C.m.s	langage
structuré	VK.m.s	structurer
de	P	de
requête	N.C.f.s	requête
pour	P	pour
interroger	VW	interroger
des	P+D.def.m.p	du
SGBDs	N.P.m.p	Sgbds
,	PONCT.W	,
–	P	à
URL	N.P.m.s	Url
(	PONCT.W	(
Uniform	N.P.m.s	Uniform
Resource	N.C.m.s	resource
Locator	N.P.m.s	Locator
)	PONCT.W	)
:	PONCT.W	:
syntaxe	N.C.m.s	syntaxe
utilisée	VK.f.s	utiliser
pour	P	pour
localiser	VW	localiser
une	D.ind.f.s	un
ressource	N.C.f.s	ressource
(	PONCT.W	(
fichier	N.C.m.s	fichier
)	PONCT.W	)
sur	P	sur
le	D.def.m.s	le
web	N.C.m.s	web
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
http	ET	<unknown>
://www.php.net/index.html	N.P.x.s	<unknown>
)	PONCT.W	)
–	ET	–
WWW	N.P.m.s	Www
(	PONCT.W	(
World	N.P.m.s	World
Wide	N.P.m.s	Wide
Web	N.P.m.s	Web
)	PONCT.W	)
:	PONCT.W	:
aussi	ADV.-	aussi
appellé	VK.m.s	appeller
web	N.C.m.s	web
,	PONCT.W	,
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
nom	N.C.m.s	nom
donné	VK.m.s	donner
au	P+D.def.m.s	au
réseau	N.C.m.s	réseau
Internet	N.P.m.s	Internet
,	PONCT.W	,
–	P+D.def.m.s	c
XML	N.P.m.s	Xml
(	PONCT.W	(
eXtensible	A.qual.m.s	extensible
Markup	N.P.m.s	Markup
Language	N.P.m.s	Language
)	PONCT.W	)
:	PONCT.W	:
standard	ET	standard
ouvert	VK.m.s	ouvrir
de	P	de
description	N.C.f.s	description
de	P	de
données	N.C.f.p	donnée
basé	VK.m.s	baser
sur	P	sur
l'	D.def.f.s	le
utilisation	N.C.f.s	utilisation
de	P	de
marqueurs	N.C.m.p	marqueur
decrivant	VG	decrire
les	D.def.f.p	le
données	N.C.f.p	donnée
qu'	PRO.rel.f.p	que
ils	CL.suj.3.m.p	il
encapsulent	V.P.3.p	encapsuler
.	PONCT.S	.

267	D.card.m.p	@card@

