Base	N.C.f.s	base
de	P	de
donnée	N.C.f.s	donnée
2	A.card.f.s	@card@
:	PONCT.W	:
PHP	ET	php
and	ET	and
Mysql	N.P.m.s	<unknown>
Crée	N.P.f.s	Crée
par	P	par
:	PONCT.W	:
Lamiae	N.P.m.s	<unknown>
DOUNAS	N.P.m.s	Dounas
Lamiae.dounas@gmail.com	N.P.m.s	<unknown>
Plan	N.C.m.s	plan
du	P+D.def.m.s	du
cours	N.C.m.s	cours
1	A.card.m.s	@card@
Rappel	N.C.m.s	rappel
SQL	N.P.m.s	Sql
2	D.card.f.p	@card@
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
web	N.C.m.s	web
et	C.C	et
PHP	N.P.m.s	Php
3	D.card.f.p	@card@
Variables	N.C.f.p	variable
et	C.C	et
constantes	A.qual.f.p	constant
4	D.card.m.p	@card@
Opérateurs	N.C.m.p	opérateur
5	D.card.m.p	@card@
Tableaux	N.C.m.p	tableau
6	D.card.f.p	@card@
Structures	N.C.f.p	structure
de	P	de
contrôles	N.C.m.p	contrôle
7	D.card.f.p	@card@
Fonctions	N.C.f.p	fonction
8	A.card.f.p	@card@
Gestion	N.C.f.s	gestion
des	P+D.def.m.p	du
formulaires	N.C.f.p	formulaire
9	A.card.f.p	@card@
Programmation	N.C.f.s	programmation
orienté	VK.m.s	orienter
objet	N.C.m.s	objet
(	PONCT.W	(
POO	N.P.m.s	Poo
)	PONCT.W	)
10	D.card.m.p	@card@
Accès	N.C.m.p	accès
aux	P+D.def.f.p	au
bases	N.C.f.p	base
de	P	de
données(Mysql)	N.C.m.s	<unknown>
11	D.card.m.p	@card@
cinq	A.card.m.p	cinq
mini	ADV.-	mini
Projets	N.C.m.p	projet
à	P	à
réaliser	VW	réaliser
RAPPEL	N.P.m.s	Rappel
SQL	N.P.m.s	Sql
•	P	à
Travaux	N.C.m.p	travail
pratiques	N.C.f.p	pratique
:	PONCT.W	:
Révision	N.C.f.s	révision
des	P+D.def.f.p	du
opérations	N.C.f.p	opération
:	PONCT.W	:
CREATE	N.P.m.s	Create
TABLE	N.P.m.s	Table
,	PONCT.W	,
INSERT	N.P.m.s	Insert
,	PONCT.W	,
UPDATE	N.P.m.s	Update
,	PONCT.W	,
ALTER	N.P.m.s	Alter
TABLE	N.P.m.s	Table
,	PONCT.W	,
ADD	P	add
CONSTRAINTS	N.P.x.s	Constraints
dans	P	dans
TP1	N.P.f.s	TF1
.	PONCT.S	.

Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
Web	N.P.m.s	Web
Qu'	PRO.rel.m.s	que
est	V.P.3.s	être
ce	PRO.dem.m.s	ce
que	PRO.rel.m.s	que
le	D.def.m.s	le
web	N.C.m.s	web
?	PONCT.S	?

Ø	P	à
Terme	N.C.m.s	terme
crée	VK.f.s	crer
par	P	par
par	P	par
Tim	N.P.m.s	Tim
Berners-Lee	N.P.m.s	Berners-Lee
(	PONCT.W	(
désigne	N.C.m.s	désigne
toile	A.qual.f.s	toil
d'	P	de
araignée	N.C.f.s	araignée
(	PONCT.W	(
en	P	en
anglais	N.C.m.s	anglais
)	PONCT.W	)
)	PONCT.W	)
.	PONCT.S	.

Ø	P	à
Enorme	N.P.m.s	Enorme
réseau	A.qual.m.s	réseau
d'	P	de
ordinateurs	N.C.m.p	ordinateur
connectés	VK.m.p	connecter
qui	PRO.rel.m.p	qui
hébergent	V.P.3.p	héberger
des	D.ind.m.p	du
sites	N.C.m.p	site
web	N.C.m.s	web
.	PONCT.S	.

Quel	A.int.m.s	quel
rapport	N.C.m.s	rapport
entre	P	entre
le	D.def.m.s	le
web	N.C.m.s	web
et	C.C	et
internet	A.qual.m.s	internet
?	PONCT.S	?

Ø	P	à
Web	N.P.m.s	Web
est	V.P.3.s	être
une	D.ind.f.s	un
application	N.C.f.s	application
d'	P	de
internet	N.C.m.s	Internet
juste	ADV.-	juste
comme	P	comme
la	D.def.f.s	le
messagerie	N.C.f.s	messagerie
instantanée	A.qual.f.s	instantané
!	PONCT.S	!

!	PONCT.S	!

Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
Web	N.P.m.s	Web
Qu'	PRO.rel.m.s	que
est	V.P.3.s	être
ce	PRO.dem.m.s	ce
qu'	PRO.rel.m.s	que
un	D.ind.m.s	un
site	N.C.m.s	site
web	N.C.m.s	web
?	PONCT.S	?

Ø	P	à
Ecrit	N.C.m.s	ecrit
en	P	en
3	D.card.m.p	@card@
langages	N.C.m.p	langage
:	PONCT.W	:
html	N.C.m.s	<unknown>
pour	P	pour
marquer	VW	marquer
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
site	N.C.m.s	site
.	PONCT.S	.

Css	N.C.m.p	cs
pour	P	pour
gérer	VW	gérer
le	D.def.m.s	le
style	N.C.m.s	style
et	C.C	et
javascript	A.qual.m.s	javascript
pour	P	pour
le	CL.obj.3.m.s	le
rendre	VW	rendre
interactif	A.qual.m.s	interactif
.	PONCT.S	.

Ø	N.C.m.s	Ø
Accessible	A.qual.m.s	accessible
depuis	P	depuis
une	D.ind.f.s	un
dresse	N.C.f.s	dresse
unique	A.qual.f.s	unique
:	PONCT.W	:
URL(Uniform	N.P.m.s	Urlüuniform
Resource	N.P.m.s	Resource
Locator	N.P.m.s	Locator
)	PONCT.W	)
Protocole	N.P.m.s	Protocole
Mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
Nom	N.P.m.s	Nom
du	P+D.def.m.s	du
Port	N.P.m.s	Port
(	PONCT.W	(
Facultatif	N.C.m.s	facultatif
chemin	N.C.m.s	chemin
(	PONCT.W	(
facultatif	A.qual.m.s	facultatif
)	PONCT.W	)
serveur	N.C.m.s	serveur
Si	C.S	si
80	D.card.m.p	@card@
)	PONCT.W	)
http://	N.C.m.p	<unknown>
user:password@	ET	<unknown>
www.ccm.net	ET	wwwet
glossair/	N.P.x.s	<unknown>
glossair.php	ET	<unknown>
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
PHP	N.P.m.s	Php
Php	N.P.x.s	Php
:	PONCT.W	:
php	ET	<unknown>
hypertext	A.qual.m.s	hypertext
preprocessor	N.C.m.s	preprocessor
.	PONCT.S	.

–	P	à
Langage	N.C.m.s	langage
interprété	VK.m.s	interpréter
pour	P	pour
créer	VW	créer
des	D.ind.m.p	du
sites	N.C.m.p	site
dynamiques	A.qual.m.p	dynamique
.	PONCT.S	.

–	P	à
Langage	N.C.m.s	langage
de	P	de
script	N.C.m.s	script
côté	N.C.m.s	côté
serveur	N.C.m.s	serveur
.	PONCT.S	.

–	P	à
langage	N.C.m.s	langage
«	P+D.def.m.s	c
Embedded	N.P.m.s	Embedded
HTML	N.P.m.s	<unknown>
»	N.P.m.s	»
.	PONCT.S	.

–	P	à
Open	N.P.m.s	Open
source	N.C.f.s	source
:	PONCT.W	:
PHP	N.P.m.s	Php
a	V.P.3.s	avoir
permis	VK.m.s	permettre
de	P	de
créer	VW	créer
un	D.ind.m.s	un
grand	A.qual.m.s	grand
nombre	N.C.m.s	nombre
de	P	de
sites	N.C.m.p	site
web	N.C.m.s	web
célèbres	A.qual.m.p	célèbre
,	PONCT.W	,
comme	P	comme
Facebook	N.P.m.s	Facebook
,	PONCT.W	,
Wikipédia	N.P.m.s	Wikipédia
,	PONCT.W	,
etc	ADV.-	<unknown>
.	PONCT.S	.

Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
PHP	N.P.m.s	Php
Site	N.P.m.s	Site
statique	A.qual.m.s	statique
vs	CL.refl.3.f.s	<unknown>
site	N.C.m.s	site
dynamique	A.qual.m.s	dynamique
-	PONCT.W	-
Site	N.C.m.s	site
statique	A.qual.m.s	statique
:	PONCT.W	:
écrit	VK.m.s	écrire
en	P	en
HTML(	N.P.m.s	Htmlü
éventuel	A.qual.m.s	éventuel
ement	N.C.m.s	ement
du	P+D.def.m.s	du
JavaScript	N.P.m.s	Javascript
)	PONCT.W	)
,	PONCT.W	,
même	ADV.-	même
contenu	VK.m.s	contenir
pour	P	pour
tous	A.ind.m.p	tous
les	D.def.m.p	le
utilisateurs	N.C.m.p	utilisateur
.	PONCT.S	.

-	PONCT.W	-
Site	N.C.m.s	site
Dynamique	N.P.m.s	Dynamique
:	PONCT.W	:
contenus	VK.m.p	contenir
adaptés	VK.m.p	adapter
aux	P+D.def.m.p	au
besoins	N.C.m.p	besoin
des	P+D.def.m.p	du
utilisateurs	N.C.m.p	utilisateur
(	PONCT.W	(
mais	C.C	mais
nécessite	V.P.3.s	nécessiter
un	D.ind.m.s	un
temps	N.C.m.s	temps
de	P	de
traitement	N.C.m.s	traitement
)	PONCT.W	)
.	PONCT.S	.

Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
PHP	N.P.m.s	Php
Relation	N.P.m.s	Relation
Client/Serveur	N.P.x.s	<unknown>
.	PONCT.S	.

Installation	N.C.f.s	installation
et	C.C	et
configuration	N.C.f.s	configuration
de	P	de
PHP	N.P.m.s	Php
Il	CL.suj.3.m.s	il
suffit	V.P.3.s	suffire
de	P	de
télécharger	VW	télécharger
le	D.def.m.s	le
serveur	N.C.m.s	serveur
web	N.C.m.s	web
:	PONCT.W	:
•	N.C.m.s	•
WAMP	N.P.m.s	Wamp
:	PONCT.W	:
http://www.wampserver.com/	N.C.m.s	<unknown>
•	N.C.m.s	•
MAMP	N.P.m.s	Mamp
:	PONCT.W	:
http://www.mamp.info/	N.C.m.s	<unknown>
•	P+D.def.m.s	c
XAMPP	N.P.m.s	Xampp
:	PONCT.W	:
https://www.apachefriends.org/fr/	N.C.m.s	<unknown>
Et	C.C	et
Editeur	N.C.m.s	editeur
de	P	de
texte	N.C.m.s	texte
:	PONCT.W	:
•	P+D.def.m.s	c
Sublim	N.P.m.s	Sublim
Text	N.P.m.s	Text
:	PONCT.W	:
http://www.sublimetext.com/2	N.C.m.s	<unknown>
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
PHP	N.C.m.s	php
Syntaxe	N.C.m.s	syntaxe
de	P	de
base	N.C.f.s	base
:	PONCT.W	:
<	N.card.m.s	<
<	N.C.m.s	<
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
HTML	N.P.m.s	<unknown>
PUBLIC	A.qual.m.s	public
"	PONCT.W	"
-//W3C//	PONCT.W	<unknown>
!	PONCT.S	!

doctype	N.C.m.s	doctype
html>	A.ind.m.s	<unknown>
DTD	N.P.m.s	Dtd
HTML	N.P.m.s	<unknown>
4.01//EN	N.C.m.s	@card@
"	PONCT.W	"
"	PONCT.W	"
http://	D.card.m.p	<unknown>
<html>	N.C.m.p	<unknown>
www.w3.org/TR/html4/strict.dtd">	ET	<unknown>
<head>	N.P.m.s	<unknown>
<title>Titre</title>	N.P.x.s	<unknown>
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
Hello	N.P.m.s	Hello
World	N.P.m.s	World
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
Introduction	N.C.f.s	introduction
au	P+D.def.m.s	au
PHP	N.P.m.s	Php
Commentaires	N.C.m.p	commentaire
:	PONCT.W	:
Ø	D.card.m.p	Ø
Commentaires	N.C.m.p	commentaire
hérités	A.qual.m.p	hérité
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	PONCT.W	C
et	C.C	et
Perl	N.P.m.s	Perl
//	PONCT.W	@card@
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
commentaire	N.C.m.s	commentaire
sur	P	sur
une	D.ind.f.s	un
seule	A.ind.f.s	seul
ligne	N.C.f.s	ligne
/*	C.C	<unknown>
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
commentaire	N.C.m.s	commentaire
sur	P	sur
plusieurs	D.ind.f.p	plusieurs
lignes	N.C.f.p	ligne
*/	PONCT.W	<unknown>
Ø	P	à
Commentaire	N.C.m.s	commentaire
style	N.C.m.s	style
shell	A.qual.m.s	shell
#	C.S	#
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
commentaire	N.C.m.s	commentaire
sur	P	sur
une	D.ind.f.s	un
seule	A.ind.f.s	seul
ligne	N.C.f.s	ligne
Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
PHP	N.P.m.s	Php
supporte	V.P.3.s	supporter
les	D.def.m.p	le
types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
suivants	A.qual.m.p	suivant
:	PONCT.W	:
•	D.card.m.p	•
nombres	N.C.m.p	nombre
entiers	A.qual.m.p	entier
,	PONCT.W	,
•	D.card.m.p	•
nombres	N.C.m.p	nombre
à	P	à
virgule	N.C.f.s	virgule
flottante	A.qual.f.s	flottant
,	PONCT.W	,
•	D.card.f.p	•
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
,	PONCT.W	,
•	D.card.m.p	•
tableaux	N.C.m.p	tableau
,	PONCT.W	,
•	P	à
objets	N.C.m.p	objet
(	PONCT.W	(
développés	VK.m.p	développer
dans	P	dans
la	D.def.f.s	le
section	N.C.f.s	section
programmation	N.C.f.s	programmation
orientée	VK.f.s	orienter
objet	N.C.m.s	objet
)	PONCT.W	)
.	PONCT.S	.

La	D.def.f.s	le
fonction	N.C.f.s	fonction
«	P	à
gettype	N.C.m.s	gettype
»	P+D.def.m.s	c
permet	V.P.3.s	permettre
de	P	de
connaitre	VW	connaître
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
.	PONCT.S	.

Si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
définie	VK.f.s	définir
,	PONCT.W	,
el	CL.suj.3.f.s	el
e	CL.obj.3.m.s	e
renvoie	V.P.3.s	renvoyer
"	PONCT.W	"
string	N.C.m.s	string
"	PONCT.W	"
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$a=	N.C.m.s	çaë
12	A.card.m.s	@card@
;	PONCT.W	;
echo	ET	echo
gettype($a)	N.P.x.s	Gettypeëçaë
;	PONCT.W	;
//	PONCT.W	@card@
=>	N.P.x.s	<unknown>
"	PONCT.W	"
integer	VW	integer
»	P	à
Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
Tous	A.ind.m.p	tous
les	D.def.m.p	le
noms	N.C.m.p	nom
de	P	de
variables	N.C.f.p	variable
sont	V.P.3.p	être
précédés	VK.m.p	précéder
d'	P	de
un	D.ind.m.s	un
$	N.C.m.s	$
:	PONCT.W	:
Pour	P	pour
spécifier	VW	spécifier
une	D.ind.f.s	un
variable	N.C.f.s	variable
de	P	de
type	N.C.m.s	type
entier	A.qual.m.s	entier
:	PONCT.W	:
•	P	à
$toto	N.P.x.s	<unknown>
=	P	à
123	PRO.card.m.p	@card@
;	PONCT.W	;
#	N.card.m.p	#
est	V.P.3.s	être
un	D.ind.m.s	un
entier	N.C.m.s	entier
en	P	en
base	N.C.f.s	base
10	N.card.f.s	@card@
,	PONCT.W	,
•	P	à
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
-123	PRO.card.m.p	@card@
;	PONCT.W	;
#	PRO.rel.m.s	c
est	V.P.3.s	être
un	D.ind.m.s	un
entier	N.C.m.s	entier
négatif	A.qual.m.s	négatif
.	PONCT.S	.

Pour	P	pour
spécifier	VW	spécifier
une	D.ind.f.s	un
variable	N.C.f.s	variable
de	P	de
type	N.C.m.s	type
chaîne	A.qual.f.s	chaîn
de	P	de
caractères	N.C.m.p	caractère
:	PONCT.W	:
•	P	à
$personne	N.P.x.s	<unknown>
=	PONCT.W	=
’	P	à
$toto	ET	<unknown>
Smith	N.P.m.s	Smith
’	N.C.m.s	’
;	PONCT.W	;
#	N.P.f.s	#
est	V.P.3.s	être
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
caractères	N.C.m.p	caractère
pour	P	pour
afficher	VW	afficher
les	D.def.m.p	le
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
.	PONCT.S	.

•	P	à
$personne	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
M.	N.C.m.s	monsieur
Smith	N.P.m.s	Smith
"	PONCT.W	"
;	PONCT.W	;
#	N.P.x.s	#
est	V.P.3.s	être
aussi	ADV.-	aussi
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
de	P	de
caractères	N.C.m.p	caractère
.	PONCT.S	.

•	N.C.m.s	•
$chaine=	N.C.m.s	cchaineë
«	P	à
chaine1	N.C.f.s	<unknown>
»	N.C.m.s	»
.	PONCT.S	.

«	P	à
chaine2	N.C.f.s	<unknown>
»	N.C.m.s	»
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
chaine1chaine2	N.C.f.s	<unknown>
•	N.C.m.s	•
$chaine=	N.C.m.s	cchaineë
«	P	à
chaine1	N.C.f.s	<unknown>
»	N.C.m.s	»
.	PONCT.S	.

$toto	N.C.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
chaine1	A.qual.f.s	<unknown>
123	D.card.m.p	@card@
Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
Opérateur	N.C.m.s	opérateur
sur	P	sur
les	D.def.f.p	le
chaînes	N.C.f.p	chaîne
de	P	de
caractères	N.C.m.p	caractère
:	PONCT.W	:
–	D.card.f.p	–
concaténation	N.C.f.s	concaténation
:	PONCT.W	:
chaine1	N.C.f.s	<unknown>
.	PONCT.S	.

Chaine2	D.card.m.p	<unknown>
Opérateurs	N.C.m.p	opérateur
logiques	A.qual.m.p	logique
:	PONCT.W	:
•	D.card.m.p	•
AND	N.P.m.s	And
ou	C.C	ou
&&	PRO.card.m.p	<unknown>
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
$a	N.P.x.s	<unknown>
et	C.C	et
$b	N.C.m.s	bb
vrais	A.qual.m.p	vrai
)	PONCT.W	)
•	N.card.m.s	•
OR	N.P.x.s	Or
ou	C.C	ou
||	N.P.x.s	<unknown>
(	PONCT.W	(
vrai	A.qual.m.s	vrai
si	C.S	si
$a	N.P.x.s	<unknown>
ou	C.C	ou
$b	N.P.x.s	<unknown>
sont	V.P.3.p	être
vrais	A.qual.m.p	vrai
)	PONCT.W	)
Opérateurs	N.C.m.p	opérateur
arithmétiques	A.qual.m.p	arithmétique
:	PONCT.W	:
•	D.ind.f.s	•
addition	N.C.f.s	addition
:	PONCT.W	:
$a	N.C.f.s	ça
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
soustraction	N.C.f.s	soustraction
:	PONCT.W	:
$a	N.P.x.s	<unknown>
-	PONCT.W	-
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
multiplication	N.C.f.s	multiplication
:	PONCT.W	:
$a	N.C.f.s	ça
*	N.C.m.s	*
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
division	N.C.f.s	division
:	PONCT.W	:
$a	N.P.x.s	<unknown>
/	PONCT.W	@card@
$b	N.C.m.s	bb
,	PONCT.W	,
•	P	à
modulo	N.C.m.s	modulo
(	PONCT.W	(
reste	N.C.m.s	reste
de	P	de
la	D.def.f.s	le
division	N.C.f.s	division
entière	A.qual.f.s	entier
)	PONCT.W	)
:	PONCT.W	:
$a	D.card.m.p	<unknown>
%	N.C.m.p	%
$b	N.C.m.s	bb
.	PONCT.S	.

Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
Opérateurs	N.C.m.p	opérateur
arithmétiques	A.qual.f.p	arithmétique
:	PONCT.W	:
•	D.card.f.p	•
Attention	N.C.f.s	attention
:	PONCT.W	:
lorsqu'	C.S	lorsque
une	D.ind.f.s	un
chaine	N.C.f.s	chaine
de	P	de
caractère	N.C.m.s	caractère
est	V.P.3.s	être
évaluer	VW	évaluer
comme	P	comme
un	D.ind.m.s	un
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
numérique	A.qual.f.s	numérique
,	PONCT.W	,
les	D.def.f.p	le
règles	N.C.f.p	règle
suivantes	A.qual.f.p	suivant
s'	CL.refl.3.f.p	se
appliquent	V.P.3.p	appliquer
:	PONCT.W	:
•	P	à
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
1	N.card.m.s	@card@
"	PONCT.W	"
4.5	N.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
5.5	D.card.m.p	@card@
•	N.C.m.p	•
$toto	N.C.m.s	<unknown>
=	PONCT.W	=
1	A.card.m.s	@card@
"	PONCT.W	"
titi	N.C.m.s	titi
149	A.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
1	D.card.m.s	@card@
car	C.C	car
la	D.def.f.s	le
chaine	N.C.f.s	chaine
vaut	V.P.3.s	valoir
0	PRO.card.m.s	@card@
si	C.S	si
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
du	P+D.def.m.s	du
texte	N.C.m.s	texte
ou	C.C	ou
,	PONCT.W	,
•	P	à
$toto	N.P.m.s	<unknown>
=	PONCT.W	=
1	N.card.m.s	@card@
"	PONCT.W	"
149	A.card.m.s	@card@
titi	N.C.m.s	titi
"	PONCT.W	"
;	PONCT.W	;
#	ET	#
$toto	N.P.m.s	<unknown>
vaut	V.P.3.s	valoir
150	PRO.card.m.p	@card@
car	C.C	car
la	D.def.f.s	le
chaine	N.C.f.s	chaine
vaut	V.P.3.s	valoir
149	N.card.f.s	@card@
(	PONCT.W	(
commence	N.C.f.s	commence
par	P	par
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
numérique	A.qual.f.s	numérique
)	PONCT.W	)
.	PONCT.S	.

Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
Opérateurs	N.C.m.p	opérateur
de	P	de
comparaison	N.C.f.s	comparaison
:	PONCT.W	:
•	N.C.m.s	•
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
==	P+D.def.m.s	çù
$b	N.C.m.s	bb
,	PONCT.W	,
•	N.C.m.s	•
différent	A.qual.m.s	différent
de	P	de
:	PONCT.W	:
$a	N.P.m.s	<unknown>
!	PONCT.S	!

=	PONCT.W	=
$b	N.C.m.s	bb
,	PONCT.W	,
•	N.C.m.s	•
supérieur	N.C.m.s	supérieur
à	P	à
:	PONCT.W	:
$a	N.C.f.s	ça
>	N.C.m.s	>
$b	N.C.m.s	bb
,	PONCT.W	,
•	N.C.m.s	•
inférieur	A.qual.m.s	inférieur
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
<	N.C.m.s	<
$b	N.C.m.s	bb
,	PONCT.W	,
•	N.C.m.s	•
supérieur	A.qual.m.s	supérieur
ou	C.C	ou
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
>=	P+D.def.m.s	çù
$b	N.C.m.s	bb
,	PONCT.W	,
•	N.C.m.s	•
inférieur	A.qual.m.s	inférieur
ou	C.C	ou
égal	A.qual.m.s	égal
à	P	à
:	PONCT.W	:
$a	N.P.x.s	<unknown>
<=	P+D.def.m.s	çù
$b	N.C.m.s	bb
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
echo	ET	echo
$toto	N.P.m.s	<unknown>
==	V.P.3.s	cevoir
0	A.card.m.s	@card@
?	PONCT.S	?

"	PONCT.W	"
Vrai	N.P.m.s	Vrai
"	PONCT.W	"
:	PONCT.W	:
"	PONCT.W	"
Faux	N.C.m.p	fau
"	PONCT.W	"
;	PONCT.W	;
Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
Date	N.P.f.s	Date
Déclaration	N.C.f.s	déclaration
avec	P	avec
:	PONCT.W	:
•	P	à
DATETIME	N.C.f.s	datetime
$date	N.C.f.s	<unknown>
=	P	à
new	ET	new
DateTime('2000-01-05')	N.P.m.s	<unknown>
;	PONCT.W	;
•	P	à
DATE_CREATE	N.C.m.s	dateçcreate
:	PONCT.W	:
un	D.ind.m.s	un
Alias	N.C.m.s	alias
de	P	de
DateTime::__construct()	N.P.x.s	<unknown>
$date2	N.C.f.s	<unknown>
=	PONCT.W	=
date_create('2000-01-01')	N.C.m.s	<unknown>
;	PONCT.W	;
Extraction	N.C.f.s	extraction
du	P+D.def.m.s	du
Mois	N.P.m.s	Mois
,	PONCT.W	,
année	N.C.f.s	année
,	PONCT.W	,
…	N.C.m.s	…
…	N.C.m.s	…
:	PONCT.W	:
Ø	N.C.m.s	Ø
Avec	P	avec
style	N.C.m.s	style
procédural	A.qual.m.s	procédural
en	P	en
utilisant	VG	utiliser
DATE_FORMAT	N.P.m.s	Dateëformat
echo	ET	echo
date_format($date	ET	dateëformatçdate
,	PONCT.W	,
"	PONCT.W	"
m	N.C.m.s	m
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
Ø	N.C.m.s	Ø
Avec	P	avec
style	N.C.m.s	style
orienté	VK.m.s	orienter
objet	N.C.m.s	objet
(	PONCT.W	(
OO	N.P.m.s	Oo
)	PONCT.W	)
:	PONCT.W	:
echo	ET	echo
$date->format('Y')	N.P.x.s	<unknown>
;	PONCT.W	;
Types	N.C.m.p	type
de	P	de
données	N.C.f.p	donnée
Date	N.P.f.s	Date
Exemples	N.C.m.p	exemple
:	PONCT.W	:
•	D.card.m.s	•
$date=date(	N.P.x.s	<unknown>
"	PONCT.W	"
d-m	P	d-m
-y	ET	y
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
echo	N.C.m.s	echo
«	P	à
ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
la	D.def.f.s	le
date	N.C.f.s	date
du	P+D.def.m.s	du
jour	N.C.m.s	jour
»	P	à
.$date	N.P.x.s	<unknown>
;	PONCT.W	;
•	P	à
$heure	N.C.f.s	çheure
=	PONCT.W	=
date("h:i:s")	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
l'	D.def.f.s	le
heure	N.C.f.s	heure
du	P+D.def.m.s	du
jour	N.C.m.s	jour
"	PONCT.W	"
.$heure	N.C.f.s	<unknown>
;	PONCT.W	;
Constantes	A.qual.f.p	constant
•	P	à
Les	D.def.f.p	le
constantes	N.C.f.p	constante
sont	V.P.3.p	être
des	D.ind.f.p	du
variables	N.C.f.p	variable
dont	PRO.rel.f.p	dont
la	D.def.f.s	le
valeur	N.C.f.s	valeur
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
pas	ADV.neg	pas
changer	VW	changer
durant	P	durant
la	D.def.f.s	le
durée	N.C.f.s	durée
de	P	de
vie	N.C.f.s	vie
d'	P	de
un	D.ind.m.s	un
script	N.C.m.s	script
.	PONCT.S	.

•	P	à
Les	D.def.f.p	le
constantes	N.C.f.p	constante
sont	V.P.3.p	être
utilisées	VK.f.p	utiliser
pour	P	pour
définir	VW	définir
les	D.def.m.p	le
paramètres	N.C.m.p	paramètre
des	P+D.def.f.p	du
applications	N.C.f.p	application
web	N.C.m.s	web
tq	N.C.m.s	<unknown>
:	PONCT.W	:
racine	N.C.f.s	racine
du	P+D.def.m.s	du
site	N.C.m.s	site
,	PONCT.W	,
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
…	N.C.m.s	…
.	PONCT.S	.

•	P	à
Le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
constante	N.C.f.s	constante
valide	A.qual.f.s	valide
commence	V.P.3.s	commencer
par	P	par
une	D.ind.f.s	un
lettre	N.C.f.s	lettre
ou	C.C	ou
un	D.ind.m.s	un
souligné	N.C.m.s	souligné
(	PONCT.W	(
_	N.C.m.s	_
)	PONCT.W	)
,	PONCT.W	,
suivi	VK.m.s	suivre
d'	P	de
un	D.ind.m.s	un
nombre	N.C.m.s	nombre
quelconque	A.qual.m.s	quelconque
de	P	de
lettre	N.C.f.s	lettre
,	PONCT.W	,
chiffres	N.C.m.p	chiffre
ou	C.C	ou
soulignés	VK.m.p	souligner
•	C.S	•
On	CL.suj.3.m.s	on
définit	V.P.3.s	définir
une	D.ind.f.s	un
constante	N.C.f.s	constante
en	P	en
utilisant	VG	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
define()	N.C.m.s	defineçà
;	PONCT.W	;
Exemple	N.C.m.s	exemple
:	PONCT.W	:
define("MA_CONSTANTE	N.C.f.s	defineçmaëconte
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
Hel	ET	hel
o	PONCT.W	o
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
•	V.P.3.s	être
Pour	P	pour
afficher	VW	afficher
une	D.ind.f.s	un
constante	N.C.f.s	constante
:	PONCT.W	:
echo	ET	echo
MA_CONSTANTE	N.P.x.s	Maëconstante
ou	C.C	ou
echo	ET	echo
const("MA_CONSTANTE")	N.C.m.s	constëëmaëconstanteç
;	PONCT.W	;
Exemple	N.C.m.s	exemple
:	PONCT.W	:
PHP	N.P.m.s	Php
définit	V.P.3.s	définir
certaines	D.ind.f.p	certain
constantes	N.C.f.p	constante
comme	P	comme
PHP_OS	N.P.x.s	Phpços
qui	PRO.rel.m.s	qui
indique	V.P.3.s	indiquer
le	D.def.m.s	le
système	N.C.m.s	système
d'	P	de
exploitation	N.C.f.s	exploitation
utilisé	VK.m.s	utiliser
par	P	par
la	D.def.f.s	le
machine	N.C.f.s	machine
qui	PRO.rel.f.s	qui
fait	V.P.3.s	faire
tourner	VW	tourner
le	D.def.m.s	le
PHP	N.P.m.s	Php
(	PONCT.W	(
ex	N.C.m.s	ex
:	PONCT.W	:
Linux	N.P.m.s	Linux
)	PONCT.W	)
.	PONCT.S	.

Tableaux	N.C.m.p	tableau
Les	D.def.m.p	le
tableaux	N.C.m.p	tableau
de	P	de
PHP	N.P.m.s	Php
ressemblent	V.P.3.p	ressembler
aux	P+D.def.m.p	au
tableaux	N.C.m.p	tableau
associatifs(	A.qual.m.p	<unknown>
hash-tables	A.qual.m.p	hash-table
)	PONCT.W	)
.	PONCT.S	.

•	N.C.m.s	•
L	D.def.m.s	l
’	A.card.m.s	’
index	N.C.m.s	index
est	V.P.3.s	être
appelé	VK.m.s	appeler
clé	VK.m.s	cler
•	P	à
La	D.def.f.s	le
valeur	N.C.f.s	valeur
associée	VK.f.s	associer
à	P	à
la	D.def.f.s	le
clé	N.C.f.s	clé
est	V.P.3.s	être
appelée	VK.f.s	appeler
valeur	N.C.f.s	valeur
.	PONCT.S	.

On	CL.suj.3.m.s	on
déclare	V.P.3.s	déclarer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
avec	P	avec
deux	D.card.f.p	deux
façons	N.C.f.p	façon
:	PONCT.W	:
•	P	à
Utiliser	VW	utiliser
la	D.def.f.s	le
fonction	N.C.f.s	fonction
array()	N.C.m.s	arrayçë
pour	P	pour
créer	VW	créer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
;	PONCT.W	;
•	P	à
Ou	C.C	ou
affecter	VW	affecter
directement	ADV.-	directement
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
au	P+D.def.m.s	au
tableau	N.C.m.s	tableau
;	PONCT.W	;
Tableaux	N.P.m.s	Tableaux
Fonctions	N.C.f.p	fonction
sur	P	sur
les	D.def.m.p	le
tableaux	N.C.m.p	tableau
:	PONCT.W	:
•	P	à
sizeof()	N.C.m.s	sizeofçë
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
nombre	N.C.m.s	nombre
d'	P	de
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
,	PONCT.W	,
ou	C.C	ou
•	P	à
count()	N.C.m.s	countçë
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
nombre	N.C.m.s	nombre
d'	P	de
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
s'	PRO.rel.m.s	se
il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
,	PONCT.W	,
1	N.card.m.s	@card@
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
et	C.C	et
0	PRO.card.m.s	@card@
si	C.S	si
la	D.def.f.s	le
variable	N.C.f.s	variable
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
.	PONCT.S	.

Tableaux	N.C.m.p	tableau
Exemple	N.C.m.s	exemple
:	PONCT.W	:
•	P	à
$suite	N.C.f.s	-suite
=	PONCT.W	=
array(1	N.C.m.s	<unknown>
,	PONCT.W	,
2	N.card.m.s	@card@
,	PONCT.W	,
3	N.card.m.s	@card@
,	PONCT.W	,
4	N.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
•	N.card.m.s	•
$tab[0	N.C.m.s	<unknown>
]	PONCT.W	]
=	V.P.3.s	être
1	N.card.m.s	@card@
;	PONCT.W	;
•	N.C.m.s	•
$tab[1	N.C.m.s	<unknown>
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
;	PONCT.W	;
#	C.S	#
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
mélanger	VW	mélanger
les	D.def.m.p	le
contenus	N.C.m.p	contenu
•	P	à
$tab[	N.C.m.s	<unknown>
"	PONCT.W	"
chaine	N.C.f.s	chaine
"	PONCT.W	"
]	PONCT.W	]
=	PONCT.W	=
"	PONCT.W	"
valeur	N.C.f.s	valeur
"	PONCT.W	"
;	PONCT.W	;
#	C.S	#
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
mélanger	VW	mélanger
les	D.def.f.p	le
clés	N.C.f.p	clé
.	PONCT.S	.

•	P	à
$personne	PRO.neg.m.s	cpersonne
=	PONCT.W	=
array("type	N.C.m.s	arrayççtype
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
M.	N.C.m.s	monsieur
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
•	N.C.m.s	•
"	PONCT.W	"
Smith	N.P.m.s	Smith
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
Tableaux	N.C.m.p	tableau
Parcourir	VW	parcourir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
//	PONCT.W	@card@
On	CL.suj.3.m.s	on
crée	V.P.3.s	créer
notre	D.poss.m.s	notre
array	N.C.m.s	array
$prenoms	ET	-prenom
$prenoms	ET	-prenom
=	PONCT.W	=
array	N.C.m.s	array
(	PONCT.W	(
'	PONCT.W	'
François	N.P.m.s	François
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Michel	N.P.m.s	Michel
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Nicole	N.P.f.s	Nicole
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Véronique	N.P.f.s	Véronique
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
Benoît	N.P.m.s	Benoît
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
Puis	C.C	pui
on	CL.suj.3.m.s	on
fait	V.P.3.s	faire
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
pour	P	pour
tout	PRO.ind.m.s	tout
afficher	VW	afficher
:	PONCT.W	:
for	N.C.m.s	for
(	PONCT.W	(
$numero	N.P.m.s	<unknown>
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
$numero	N.P.m.s	<unknown>
<	N.P.m.s	<
5	N.card.m.s	@card@
;	PONCT.W	;
$numero++	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
$prenoms[$numero	N.P.x.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.

'	PONCT.W	'
<br	N.C.m.s	<unknown>
/>	PONCT.W	<unknown>
'	PONCT.W	'
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Tableaux	N.P.m.s	Tableaux
Parcourir	VW	parcourir
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
:	PONCT.W	:
<	A.qual.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$personne	N.P.x.s	<unknown>
=	PONCT.W	=
array("type	N.C.m.s	arrayççtype
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
M.	N.C.m.s	monsieur
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	ET	çù
"	PONCT.W	"
Smith	N.P.m.s	Smith
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach($personne	N.P.x.s	Foreachëpersonne
as	ET	as
$cle	N.C.m.s	ccle
=>	N.P.x.s	<unknown>
$valeur	N.C.f.s	çvaleur
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
cle=	ET	cleë
"	PONCT.W	"
.$cle	N.C.m.s	<unknown>
.	PONCT.S	.
“	N.C.m.s	“
valeur=	N.C.m.s	valeurà
"	PONCT.W	"
.	PONCT.S	.

$valeur	N.C.f.s	çvaleur
;	PONCT.W	;
}	D.card.f.p	}
Conditions	N.C.f.p	condition
:	PONCT.W	:
«	P	à
if	N.C.m.s	if
…	P	à
else	PPRO.3.f.s	<unknown>
»	P	à
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
if	N.C.m.s	if
(	PONCT.W	(
condition1	N.C.f.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition1	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	P+D.def.m.s	c
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
condition2	N.C.f.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
la	D.def.f.s	le
condition2	N.C.f.s	<unknown>
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
...	PONCT.W	<unknown>
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
aucune	PRO.neg.f.s	aucun
des	P+D.def.f.p	du
conditions	N.C.f.p	condition
n'	ADV.neg	ne
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	N.C.m.s	}
Ø	N.C.m.s	Ø
Les	D.def.f.p	le
fonctionnalités	N.C.f.p	fonctionnalité
de	P	de
l'	D.def.f.s	le
instruction	N.C.f.s	instruction
if	N.P.m.s	If
sont	V.P.3.p	être
les	D.def.m.p	le
mêmes	A.ind.m.p	même
en	P	en
PHP	N.C.m.s	php
qu'	C.S	que
en	P	en
C	N.P.f.s	C
;	PONCT.W	;
Conditions	N.C.f.p	condition
:	PONCT.W	:
«	P	à
if	N.C.m.s	if
…	P	à
else	PPRO.3.f.s	<unknown>
»	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
if	ET	if
(	PONCT.W	(
$type	N.P.m.s	<unknown>
==	PONCT.W	<unknown>
"	PONCT.W	"
Femme	ET	femme
"	PONCT.W	"
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
Madame	N.P.m.s	Madame
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
elseif	N.C.m.s	<unknown>
(	PONCT.W	(
$type	N.P.m.s	<unknown>
==	PONCT.W	<unknown>
"	PONCT.W	"
Homme	ET	homme
"	PONCT.W	"
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
Monsieur	N.P.m.s	Monsieur
"	PONCT.W	"
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
Bonjour	N.P.m.s	Bonjour
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
êtes	V.P.2.p	être
bizarre	A.qual.m.s	bizarre
!	PONCT.S	!

"	PONCT.W	"
;	PONCT.W	;
}	D.card.f.p	}
Conditions	N.C.f.p	condition
:	PONCT.W	:
«	D.card.m.p	«
switch	N.C.m.s	switch
»	P	à
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
switch	ET	switch
(	PONCT.W	(
$var	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
case	N.C.f.s	case
val1	A.qual.f.s	<unknown>
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	ADV.-	si
val1	N.C.f.s	<unknown>
…	P	à
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
val2	N.C.f.s	<unknown>
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
si	C.S	si
val2	N.C.f.s	<unknown>
…	D.part.m.s	…
break	N.C.m.s	break
;	PONCT.W	;
default	N.C.m.s	default
:	PONCT.W	:
#	I	à
Ce	D.dem.m.s	ce
cas	N.C.m.s	cas
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
lorsque	C.S	lorsque
tous	A.ind.m.p	tous
les	D.def.m.p	le
autres	A.ind.m.p	autre
cas	N.C.m.p	cas
ont	V.P.3.p	avoir
échoué	VK.m.s	échouer
.	PONCT.S	.

break	N.C.m.s	break
;	PONCT.W	;
}	D.card.m.p	}
Boucles	N.P.m.s	Boucles
:	PONCT.W	:
while	N.C.m.s	while
La	D.def.f.s	le
boucle	A.qual.f.s	boucle
while	N.C.f.s	while
est	V.P.3.s	être
le	D.def.m.s	le
moyen	N.C.m.s	moyen
le	D.def.m.s	le
plus	ADV.-	plus
simple	A.qual.m.s	simple
d'	P	de
implémenter	VW	implémenter
une	D.ind.f.s	un
boucle	N.C.f.s	boucle
en	P	en
PHP	N.P.m.s	Php
;	PONCT.W	;
Ø	ET	Ø
Prototype	N.C.m.s	prototype
:	PONCT.W	:
while	N.C.m.s	while
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	P	à
Prototype	N.C.m.s	prototype
simplifié	A.qual.m.s	simplifié
:	PONCT.W	:
while	N.C.m.s	while
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
endwhile	N.C.m.s	endwhile
;	PONCT.W	;
Boucles	N.P.m.s	Boucles
:	PONCT.W	:
while	N.C.m.s	while
Exemple	N.C.m.s	exemple
:	PONCT.W	:
$i	N.C.m.s	çi
=	PONCT.W	=
1	A.card.m.s	@card@
;	PONCT.W	;
while	N.C.m.s	while
(	PONCT.W	(
$i	N.C.f.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
$i++	N.P.m.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
•	N.C.m.s	•
Affiche	N.C.m.s	affiche
1	A.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
5	A.card.m.s	@card@
6	A.card.m.s	@card@
7	A.card.m.s	@card@
8	A.card.m.s	@card@
9	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

Boucles	N.P.m.s	Boucles
:	PONCT.W	:
For	N.C.m.s	for
La	D.def.f.s	le
boucle	N.C.f.s	boucle
«	P	à
for	N.C.m.s	for
»	A.card.f.s	»
fonctionne	V.P.3.s	fonctionner
comme	P	comme
la	D.def.f.s	le
boucle	A.qual.f.s	boucle
for	N.C.m.s	for
du	P+D.def.m.s	du
langage	N.C.m.s	langage
C	N.P.m.s	C
;	PONCT.W	;
Prototype	N.P.m.s	Prototype
:	PONCT.W	:
for	N.C.m.s	for
(	PONCT.W	(
expression1	N.C.f.s	<unknown>
;	PONCT.W	;
condition	N.C.f.s	condition
;	PONCT.W	;
expression2	N.C.f.s	<unknown>
)	PONCT.W	)
{	N.C.m.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
}	P	à
Prototype	N.C.m.s	prototype
simplifié	A.qual.m.s	simplifié
:	PONCT.W	:
for	N.C.m.s	for
(	PONCT.W	(
expression1	N.C.f.s	<unknown>
;	PONCT.W	;
condition	N.C.f.s	condition
;	PONCT.W	;
expression2	N.C.f.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
#	D.card.f.p	#
instructions	N.C.f.p	instruction
à	P	à
exécuter	VW	exécuter
tant	ADV.-	tant
que	C.S	que
la	D.def.f.s	le
condition	N.C.f.s	condition
est	V.P.3.s	être
vraie	A.qual.f.s	vrai
...	PONCT.W	<unknown>
endfor	N.C.m.s	endfor
;	PONCT.W	;
Boucles	N.P.m.s	Boucles
:	PONCT.W	:
For	N.P.m.s	For
Exemple	N.C.m.s	exemple
:	PONCT.W	:
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.f.s	çi
=	PONCT.W	=
1	N.card.m.s	@card@
;	PONCT.W	;
$i	N.C.m.s	çi
<=	P+D.def.m.s	çù
10	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	ET	{
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
•	N.C.m.s	•
Affiche	N.C.m.s	affiche
1	A.card.m.s	@card@
2	A.card.m.s	@card@
3	A.card.m.s	@card@
4	A.card.m.s	@card@
5	A.card.m.s	@card@
6	A.card.m.s	@card@
7	A.card.m.s	@card@
8	A.card.m.s	@card@
9	A.card.m.s	@card@
10	A.card.m.s	@card@
.	PONCT.S	.

Exercices	N.C.m.p	exercice
1	A.card.m.s	@card@
:	PONCT.W	:
Écrire	VW	écrire
un	D.ind.m.s	un
script	N.C.m.s	script
PHP	N.C.m.s	php
pour	P	pour
afficher	VW	afficher
la	D.def.f.s	le
version	N.C.f.s	version
du	P+D.def.m.s	du
PHP	N.P.m.s	Php
et	C.C	et
d'	D.ind.f.p	de
autres	A.ind.f.p	autre
information	N.C.f.s	information
sur	P	sur
la	D.def.f.s	le
configuration	N.C.f.s	configuration
.	PONCT.S	.

Exercices	N.C.m.p	exercice
1	A.card.m.s	@card@
:	PONCT.W	:
Solution	N.C.f.s	solution
1	A.card.f.s	@card@
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
phpinfo()	N.C.m.s	phpinfoëë
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Solution	N.C.f.s	solution
2	A.card.m.s	@card@
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
"	PONCT.W	"
<pre>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
print_r($GLOBALS)	N.C.m.s	<unknown>
;	PONCT.W	;
//affiche	V.P.3.s	<unknown>
le	D.def.m.s	le
nom	N.C.m.s	nom
des	P+D.def.f.p	du
super	N.C.f.p	super
globales	A.qual.f.p	global
.	PONCT.S	.

echo	ET	echo
"	PONCT.W	"
</pre>	A.ind.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Exercices	N.C.m.p	exercice
2	A.card.m.s	@card@
:	PONCT.W	:
$var	N.P.m.s	<unknown>
=	PONCT.W	=
'	PONCT.W	'
PHP	N.P.m.s	Php
Tutorial	N.P.m.s	Tutorial
'	PONCT.W	'
.	PONCT.S	.

1-Mettre	VW	m-mettre
la	D.def.f.s	le
variable	N.C.f.s	variable
var	N.C.m.s	var
dans	P	dans
une	D.ind.f.s	un
section	N.C.f.s	section
h3	D.card.m.p	<unknown>
tag	N.C.m.p	tag
,	PONCT.W	,
la	CL.obj.3.f.s	la
centrer	VW	centrer
et	C.C	et
l'	CL.obj.3.f.s	la
afficher	VW	afficher
avec	P	avec
une	D.ind.f.s	un
couleur	N.C.f.s	couleur
rouge	A.qual.f.s	rouge
dans	P	dans
un	D.ind.m.s	un
document	N.C.m.s	document
HTML	N.P.m.s	<unknown>
.	PONCT.S	.

2-Souligner	VW	i-souligner
le	D.def.m.s	le
titre	N.C.m.s	titre
3-	PONCT.W	@card@
Ajouter	VW	ajouter
le	D.def.m.s	le
paragraphe	N.C.m.s	paragraphe
suivant	A.qual.m.s	suivant
:	PONCT.W	:
“	C.S	“
Ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
paragraphe	N.C.m.s	paragraphe
”	N.C.m.s	”
.	PONCT.S	.

Exercices	N.C.m.p	exercice
2	A.card.m.s	@card@
:	PONCT.W	:
Solution	N.C.f.s	solution
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$var	N.P.x.s	<unknown>
=	N.C.m.s	=
'	PONCT.W	'
PHP	N.P.m.s	Php
Tutorial	N.P.m.s	Tutorial
'	PONCT.W	'
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<	N.C.m.s	<
!	PONCT.S	!

DOCTYPE	N.C.f.s	doctype
html>	N.C.m.p	<unknown>
<html>	ET	<unknown>
<head>	N.P.m.s	<unknown>
<title><	N.P.m.s	<unknown>
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
$var	N.P.x.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</title></head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<u><h3>	N.P.m.s	<unknown>
<font	V.P.3.p	ffire
color="red">	N.C.m.s	colorç-redçë
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
$var	N.P.x.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

></h3></u>	N.P.x.s	<unknown>
</font>	N.P.x.s	<unknown>
<p>	N.P.x.s	<unknown>
ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
un	D.ind.m.s	un
paragraphe.</p>	N.C.m.s	paragrapheoph
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
Exercices	N.C.m.p	exercice
3	A.card.m.s	@card@
:	PONCT.W	:
compter	VW	compter
de	P	de
10	D.card.m.p	@card@
jusqu'	P	jusque
à	P	à
22	D.card.m.p	@card@
Exercices	N.C.m.p	exercice
3	A.card.m.s	@card@
:	PONCT.W	:
Solution	N.C.f.s	solution
for	N.C.m.s	for
(	PONCT.W	(
$i	N.C.m.s	çi
=	P	à
10	N.card.m.s	@card@
;	PONCT.W	;
$i	N.P.m.s	<unknown>
<=	P+D.def.m.s	çù
22	A.card.m.s	@card@
;	PONCT.W	;
$i++	N.C.m.s	çiu
)	PONCT.W	)
{	P	à
echo	ET	echo
"	PONCT.W	"
$i	N.C.m.s	çi
"	PONCT.W	"
;	PONCT.W	;
}	D.card.f.p	}
Fonctions	N.C.f.p	fonction
Une	D.ind.f.s	un
fonction	N.C.f.s	fonction
peut	V.P.3.s	pouvoir
être	VW	être
définie	VK.f.s	définir
par	P	par
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	P	à
function	N.C.f.s	function
»	P	à
en	P	en
utilisant	VG	utiliser
la	D.def.f.s	le
syntaxe	N.C.f.s	syntaxe
suivante	A.qual.f.s	suivant
:	PONCT.W	:
function	N.C.f.s	function
nomd-DelaFonction	N.P.x.s	Nomd-Delafonction
(	PONCT.W	(
$arg_1	N.P.m.s	<unknown>
,	PONCT.W	,
$arg_2	N.P.m.s	<unknown>
,	PONCT.W	,
/*	N.C.m.s	<unknown>
...	PONCT.W	<unknown>
,	PONCT.W	,
*/	PONCT.W	<unknown>
$arg_n	N.P.m.s	<unknown>
)	PONCT.W	)
{	N.C.f.s	{
#	D.card.f.p	#
instructions	N.C.f.p	instruction
...	PONCT.W	<unknown>
return	N.C.m.s	return
$valeur_de_retour	N.P.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
optionnel	A.qual.m.s	optionnel
}	P	à
IL	CL.suj.3.m.s	il
n'	ADV.neg	ne
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
pas	ADV.neg	pas
de	P	de
distinction	N.C.f.s	distinction
fonctions	N.C.f.p	fonction
/	P	@ca
procédures	N.C.f.p	procédure
en	P	en
PHP	N.P.m.s	Php
.	PONCT.S	.

Fonctions	N.C.f.p	fonction
Les	D.def.f.p	le
fonctions	N.C.f.p	fonction
n'	ADV.neg	ne
ont	V.P.3.p	avoir
pas	ADV.neg	pas
besoin	N.C.m.s	besoin
d'	P	de
être	VW	être
définies	VK.f.p	définir
avant	P	avant
d'	P	de
être	VW	être
utilisées	VK.f.p	utiliser
,	PONCT.W	,
SAUF	N.P.m.s	Sauf
lorsqu'	C.S	lorsque
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
est	V.P.3.s	être
définie	VK.f.s	définir
conditionnel	A.qual.m.s	conditionnel
ement	N.C.m.s	ement
ou	C.C	ou
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
d'	P	de
une	D.ind.f.s	un
autre	A.ind.f.s	autre
fonction	N.C.f.s	fonction
:	PONCT.W	:
1	N.card.m.s	@card@
.	PONCT.S	.

Une	D.ind.f.s	un
fonction	N.C.f.s	fonction
conditionnel	A.qual.f.s	conditionnel
e	PONCT.W	e
:	PONCT.W	:
//	PONCT.W	@card@
imposible	A.qual.m.s	imposible
d'	P	de
appeler	VW	appeler
foo()	N.C.m.s	<unknown>
car	C.C	car
la	D.def.f.s	le
fonction	N.C.f.s	fonction
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
if	A.qual.m.s	if
(	PONCT.W	(
condition	N.C.f.s	condition
)	PONCT.W	)
{	P	à
function	N.C.f.s	function
foo()	N.C.m.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
Je	CL.suj.1.m.s	je
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
tant	ADV.-	tant
que	C.S	que
le	D.def.m.s	le
programme	N.C.m.s	programme
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
passé	VK.m.s	passer
ici.\n	A.qual.m.s	icioën
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
}	D.card.f.p	}
Fonctions	N.C.f.p	fonction
2	A.card.f.s	@card@
.	PONCT.S	.

Une	D.ind.f.s	un
fonction	N.C.f.s	fonction
dans	P	dans
une	D.ind.f.s	un
autre	A.ind.f.s	autre
fonction	N.C.f.s	fonction
function	N.C.f.s	function
foo()	N.C.m.s	<unknown>
{	P	à
function	N.C.f.s	function
bar()	N.C.m.s	barçë
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
Je	CL.suj.1.m.s	je
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
tant	ADV.-	tant
que	C.S	que
foo()	N.C.m.s	<unknown>
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
appelé.\n	A.qual.m.s	appeléthn
"	PONCT.W	"
;	PONCT.W	;
}	N.card.m.s	}
}	N.C.m.s	}
/*	N.C.m.p	<unknown>
Impossible	A.qual.m.s	impossible
d'	P	de
appeler	VW	appeler
bar()	N.C.m.s	barçë
ici	ADV.-	ici
,	PONCT.W	,
car	C.C	car
il	CL.suj.3.m.s	il
n'	ADV.neg	ne
existe	V.P.3.s	exister
pas	ADV.neg	pas
.	PONCT.S	.

*/	PONCT.W	<unknown>
foo()	N.C.m.s	<unknown>
;	PONCT.W	;
/*	ET	<unknown>
Maintenant	ADV.-	maintenant
,	PONCT.W	,
nous	CL.suj.1.m.p	nous
pouvons	V.P.1.p	pouvoir
appeler	VW	appeler
bar()	N.C.m.s	barçë
,	PONCT.W	,
car	C.C	car
l'	D.def.f.s	le
utilisation	N.C.f.s	utilisation
de	P	de
foo()	N.C.m.s	<unknown>
l'	CL.obj.3.f.s	la
a	V.P.3.s	avoir
rendue	VK.f.s	rendre
accessible	A.qual.f.s	accessible
.	PONCT.S	.

*/	PONCT.W	<unknown>
bar()	N.C.m.s	barçë
;	PONCT.W	;
Fonctions	N.C.f.p	fonction
PHP	N.P.m.s	Php
supporte	V.P.3.s	supporter
le	D.def.m.s	le
passage	N.C.m.s	passage
d'	P	de
arguments	N.C.m.p	argument
:	PONCT.W	:
•	N.C.m.s	•
Par	P	par
valeur	N.C.f.s	valeur
:	PONCT.W	:
comportement	N.C.m.s	comportement
par	P	par
défaut	N.C.m.s	défaut
•	N.C.m.s	•
Par	P	par
référence	N.C.f.s	référence
:	PONCT.W	:
pour	P	pour
que	C.S	que
la	D.def.f.s	le
fonction	N.C.f.s	fonction
puisse	V.S.3.s	pouvoir
changer	VW	changer
la	D.def.f.s	le
valeur	N.C.f.s	valeur
des	P+D.def.m.p	du
arguments	N.C.m.p	argument
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$toto=2	N.C.m.s	<unknown>
;	PONCT.W	;
function	N.C.f.s	function
mafonctionRef(&$titi)	N.C.m.s	mafonctionrefçtiti
{	P+D.def.m.s	c
$titi=$titi+1	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
$titi	N.P.x.s	<unknown>
;	PONCT.W	;
}	ET	}
MafonctionRef($toto)	N.P.m.s	Mafonctionrefçëtoë
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
3	D.card.m.p	@card@
echo($toto)	N.C.m.s	echoëçtotoë
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
3	D.card.f.p	@card@
;	PONCT.W	;
Fonctions	N.C.f.p	fonction
•	P	à
Une	D.ind.f.s	un
liste	N.C.f.s	liste
variable	A.qual.f.s	variable
d'	P	de
arguments	N.C.m.p	argument
:	PONCT.W	:
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
…	V.P.3.s	être
indique	V.P.3.s	indiquer
que	C.S	que
la	D.def.f.s	le
fonction	N.C.f.s	fonction
accepte	V.P.3.s	accepter
un	D.ind.m.s	un
nombre	N.C.m.s	nombre
variable	A.qual.m.s	variable
des	P+D.def.m.p	du
arguments	N.C.m.p	argument
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
Function	N.C.f.s	function
sum(	ET	sumà
...	PONCT.W	<unknown>
$vars	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
$somme	N.C.m.s	çsomme
=	PONCT.W	=
0	N.card.m.s	@card@
;	PONCT.W	;
foreach	N.C.m.s	foreach
(	PONCT.W	(
$vars	N.P.m.s	<unknown>
as	N.C.m.p	as
$i	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
$somme	N.C.m.s	çsomme
=	V.P.3.s	être
$i	N.C.m.s	çi
;	PONCT.W	;
}	P	à
return	N.C.m.s	return
$somme	N.C.m.s	çsomme
;	PONCT.W	;
}	P	à
echo	ET	echo
sum(1	A.qual.m.s	<unknown>
,	PONCT.W	,
2	N.card.m.s	@card@
,	PONCT.W	,
3	N.card.m.s	@card@
,	PONCT.W	,
4	N.card.m.s	@card@
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
10	D.card.m.p	@card@
comme	P	comme
résultat	N.C.m.s	résultat
.	PONCT.S	.

Echo	N.P.m.s	Echo
sum(1,2)	VK.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
affcihe	V.P.3.s	affciher
3	A.card.f.s	@card@
;	PONCT.W	;
s	D.card.f.p	s
Fonctions	N.C.f.p	fonction
•	P	à
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
par	P	par
défaut	N.C.m.s	défaut
des	P+D.def.m.p	du
arguments	N.C.m.p	argument
.	PONCT.S	.

function	N.C.f.s	function
servir_cafe	A.qual.f.s	servirçcafe
(	PONCT.W	(
$type	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
cappuccino	ET	cappuccino
"	PONCT.W	"
)	PONCT.W	)
{	P	à
return	N.C.m.s	return
"	PONCT.W	"
Servir	VW	servir
un	D.ind.m.s	un
$type.\n	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
servir_cafe()	N.C.m.s	servirçcafeë
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
«	P	à
servir	VW	servir
un	D.ind.m.s	un
cappuccino	N.C.m.s	cappuccino
àLes	D.ind.m.p	àle
arguments	N.C.m.p	argument
sans	P	sans
valeur	N.C.f.s	valeur
par	P	par
défaut	N.C.m.s	défaut
doivent	V.P.3.p	devoir
être	VW	être
en	P	en
premiers	A.ord.m.p	premier
,	PONCT.W	,
sinon	C.C	sinon
erreur	N.C.f.s	erreur
function	N.C.f.s	function
melangeDarguments	N.C.m.p	melangedargument
(	PONCT.W	(
$type	N.C.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
parDefault	A.qual.m.s	pardefault
"	PONCT.W	"
,	PONCT.W	,
$varSansDefault	N.P.m.s	<unknown>
)	PONCT.W	)
{	P	à
return	N.C.m.s	return
"	PONCT.W	"
Message	N.P.m.s	Message
$type	N.P.m.s	<unknown>
$varSansDefault.\n	N.P.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
echo	ET	echo
melangeDarguments	N.C.m.p	melangedargument
(	PONCT.W	(
"	PONCT.W	"
test	N.C.m.s	test
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
Fonctions	N.C.f.p	fonction
•	P	à
A	P	à
partir	VW	partir
de	P	de
la	D.def.f.s	le
version	N.C.f.s	version
7.0	N.card.f.s	@card@
,	PONCT.W	,
php	N.C.m.s	<unknown>
supporte	V.P.3.s	supporter
la	D.def.f.s	le
définition	N.C.f.s	définition
du	P+D.def.m.s	du
type	N.C.m.s	type
de	P	de
retour	N.C.m.s	retour
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
function	N.C.f.s	function
maFonction($var)	N.C.m.s	mafonctionçarç
:	PONCT.W	:
string	N.C.m.s	string
{	P	à
return	N.C.m.s	return
$var	N.P.m.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
•	N.C.m.s	•
Si	C.S	si
return	N.C.m.s	return
est	V.P.3.s	être
omis	VK.m.s	omettre
,	PONCT.W	,
la	D.def.f.s	le
valeur	N.C.f.s	valeur
NULL	N.P.f.s	Null
sera	V.F.3.s	être
retournée	VK.f.s	retourner
.	PONCT.S	.

•	N.C.m.s	•
Pour	P	pour
renvoyer	VW	renvoyer
plusieurs	D.ind.f.p	plusieurs
valeurs	N.C.f.p	valeur
en	P	en
même	A.qual.m.s	même
temps	N.C.m.s	temps
,	PONCT.W	,
il	CL.suj.3.m.s	il
suffit	V.P.3.s	suffire
de	P	de
retourner	VW	retourner
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
;	PONCT.W	;
Ex	N.P.m.s	Ex
:	PONCT.W	:
function	N.C.f.s	function
couleurs()	N.C.m.s	couleursçë
{	P	à
return	N.C.m.s	return
array(	ET	arrayç
"	PONCT.W	"
res1	N.C.f.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
res2	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
res3	N.C.m.s	<unknown>
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
}	N.C.m.s	}
}	P+D.def.m.s	c
list($var1	N.C.m.s	<unknown>
,	PONCT.W	,
$var2	N.P.m.s	<unknown>
,	PONCT.W	,
$var3	N.P.m.s	<unknown>
)	PONCT.W	)
=	PONCT.W	=
couleurs()	N.C.m.s	couleursçë
;	PONCT.W	;
Fonctions	N.C.f.p	fonction
•	N.C.m.s	•
Pour	P	pour
retourner	VW	retourner
une	D.ind.f.s	un
référence	N.C.f.s	référence
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
,	PONCT.W	,
utilisez	V.Y.2.p	utiliser
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
&	PONCT.W	&
aussi	ADV.-	aussi
bien	ADV.-	bien
dans	P	dans
la	D.def.f.s	le
déclaration	N.C.f.s	déclaration
de	P	de
la	D.def.f.s	le
fonction	N.C.f.s	fonction
que	C.S	que
dans	P	dans
l'	D.def.f.s	le
assignation	N.C.f.s	assignation
de	P	de
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
retour	N.C.m.s	retour
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
?	PONCT.S	?

php>	N.C.m.p	phpà
function	N.C.f.s	function
&	PONCT.W	&
mafonction(&$var){	N.C.m.p	mafonctionçëëlçë
$var=$var+2	N.P.x.s	<unknown>
;	PONCT.W	;
return	N.C.m.s	return
$var	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
$toto=	N.C.m.s	<unknown>
&	PONCT.W	&
mafonction($var2)	N.C.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
à	P	à
Les	D.def.f.p	le
propriétés	N.C.f.p	propriété
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
retourné	VK.m.s	retourner
par	P	par
la	D.def.f.s	le
fonction	N.C.f.s	fonction
mafonction()	N.C.f.s	mafonctionçë
sont	V.P.3.p	être
liées	VK.f.p	lier
à	P	à
$toto	N.P.m.s	<unknown>
.	PONCT.S	.

Il	CL.suj.3.m.s	il
ne	ADV.neg	ne
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
pas	ADV.neg	pas
d'	P	de
une	D.ind.f.s	un
copie	N.C.f.s	copie
de	P	de
$var	N.P.m.s	<unknown>
.	PONCT.S	.

Fonctions	N.C.f.p	fonction
•	P	à
PHP	N.C.m.s	php
ne	ADV.neg	ne
supporte	V.P.3.s	supporter
pas	ADV.neg	pas
la	D.def.f.s	le
surcharge	N.C.f.s	surcharge
,	PONCT.W	,
la	D.def.f.s	le
destruction	N.C.f.s	destruction
et	C.C	et
la	D.def.f.s	le
redéfinition	N.C.f.s	redéfinition
de	P	de
fonctions	N.C.f.p	fonction
déjà	ADV.-	déjà
déclarées	VK.f.p	déclarer
.	PONCT.S	.

•	P	à
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
d'	P	de
appeler	VW	appeler
des	D.ind.f.p	du
fonctions	N.C.f.p	fonction
récursives	A.qual.f.p	récursif
en	P	en
PHP	N.P.m.s	Php
.	PONCT.S	.

A	P	à
noter	VW	noter
qu'	C.S	que
un	D.ind.m.s	un
appel	N.C.m.s	appel
récursif	A.qual.m.s	récursif
infini	A.qual.m.s	infini
est	V.P.3.s	être
considéré	VK.m.s	considérer
comme	P	comme
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
de	P	de
programmation	N.C.f.s	programmation
.	PONCT.S	.

Fonctions	N.C.f.p	fonction
utiles	A.qual.f.p	utile
en	P	en
PHP	N.C.m.s	php
•	P	à
gettype($var)	N.C.m.s	gettypeçvarç
:	PONCT.W	:
retourne	V.P.3.s	retourner
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
la	D.def.f.s	le
variable	N.C.f.s	variable
.	PONCT.S	.

•	P	à
Addslashes()	N.P.m.s	Addslashesçë
:	PONCT.W	:
Ajoute	N.C.f.s	ajoute
des	P+D.def.m.p	du
antislash	N.C.m.p	antislash
devant	P	devant
les	D.def.m.p	le
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$res	N.C.f.p	<unknown>
=	PONCT.W	=
addslashes("L'a")	N.C.m.s	addslashesçalç
;	PONCT.W	;
//	PONCT.W	@card@
retourn	N.C.m.s	retourn
L\’a	N.P.m.s	Lüëa
.	PONCT.S	.

•	P	à
Strstr(texte	N.C.m.s	<unknown>
,	PONCT.W	,
chaineAchercher	N.C.m.s	chaineachercher
)	PONCT.W	)
:	PONCT.W	:
Trouve	V.P.3.s	trouver
la	D.def.f.s	le
première	A.ord.f.s	premier
occurrence	N.C.f.s	occurrence
dans	P	dans
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$email	N.C.m.s	<unknown>
=	PONCT.W	=
'	PONCT.W	'
name@example.com	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
$domain	N.C.m.s	<unknown>
=	PONCT.W	=
strstr($email	N.C.m.s	<unknown>
,	PONCT.W	,
'	PONCT.W	'
@	N.card.m.s	@
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
echo	ET	echo
$domain	N.P.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
Affiche	N.P.m.s	Affiche
:	PONCT.W	:
@example.com	ET	<unknown>
Fonctions	N.C.f.p	fonction
utiles	A.qual.f.p	utile
en	P	en
PHP	N.P.m.s	Php
•	P	à
Htmlspecialchars	N.C.m.p	<unknown>
(	PONCT.W	(
chaine	N.C.f.s	chaine
,	PONCT.W	,
flags	N.C.m.p	flag
)	PONCT.W	)
:	PONCT.W	:
Convertit	V.P.3.s	convertir
les	D.def.m.p	le
caractères	N.C.m.p	caractère
spéciaux	A.qual.m.p	spécial
en	P	en
entités	N.C.f.p	entité
HTML	N.P.m.s	<unknown>
.	PONCT.S	.

El	CL.suj.3.m.s	el
e	CL.obj.3.m.s	e
remplace	V.P.3.s	remplacer
par	P	par
exemple	N.C.m.s	exemple
&	PONCT.W	&
(	PONCT.W	(
ET	C.C	et
commercial	A.qual.m.s	commercial
)	PONCT.W	)
en	P	en
&amp	N.C.m.s	çamp
;	PONCT.W	;
un	D.ind.m.s	un
example	N.C.m.s	example
de	P	de
flag	N.C.m.s	flag
est	V.P.3.s	être
ENT_QUOTES	N.P.x.s	Entçquotes
qui	PRO.rel.m.s	qui
Convertit	V.P.3.s	convertir
les	D.def.m.p	le
guil	N.C.m.p	guil
emets	N.C.m.p	emets
doubles	A.qual.m.p	double
et	C.C	et
les	D.def.m.p	le
guil	N.C.m.p	guil
emets	N.C.m.p	emets
simples	A.qual.m.p	simple
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$str	VW	<unknown>
=	PONCT.W	=
"	PONCT.W	"
This	N.P.m.s	This
is	CL.suj.3.m.p	is
some	V.P.3.s	somer
<b>	ET	çbë
bold	ET	bold
</b>	ET	çmbë
text	N.C.m.s	text
.	PONCT.W	.
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
htmlspecialchars($str)	A.qual.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
:	PONCT.W	:
This	N.P.m.s	This
is	CL.suj.3.m.p	is
some	N.C.m.p	some
&lt	N.card.m.s	<unknown>
;	PONCT.W	;
b&gt	N.C.m.s	bc
;	PONCT.W	;
bold&lt	N.C.m.s	boldält
;	PONCT.W	;
/	PONCT.W	@card@
`	D.card.m.s	`
b&gt	N.C.m.s	bc
;	PONCT.W	;
text	N.C.m.s	text
.	PONCT.S	.

•	P	à
strip_tags	N.C.m.p	stripçtag
(	PONCT.W	(
chaine	N.C.f.s	chaine
,	PONCT.W	,
allowableTags	N.C.m.p	allowabletag
)	PONCT.W	)
:	PONCT.W	:
Supprime	V.P.3.s	supprimer
les	D.def.f.p	le
balises	N.C.f.p	balise
HTML	N.P.m.s	<unknown>
et	C.C	et
PHP	N.P.m.s	Php
d'	P	de
une	D.ind.f.s	un
chaîne	N.C.f.s	chaîne
.	PONCT.S	.

Les	D.def.m.p	le
commentaires	N.C.m.p	commentaire
HTML	N.P.m.s	<unknown>
et	C.C	et
PHP	N.P.m.s	Php
sont	V.P.3.p	être
également	ADV.-	également
supprimés	VK.m.p	supprimer
.	PONCT.S	.

Ce	D.dem.m.s	ce
comportement	N.C.m.s	comportement
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
être	VW	être
modifié	VK.m.s	modifier
avec	P	avec
le	D.def.m.s	le
paramètre	N.C.m.s	paramètre
allowableTags	A.qual.m.p	<unknown>
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
$text	N.C.m.s	<unknown>
=	PONCT.W	=
'	PONCT.W	'
<p>Test	N.P.m.s	<unknown>
paragraph.</p><	A.ind.m.s	paragraphéphë
!	PONCT.S	!

--	PONCT.W	--
Comment	ADV.int	comment
--	PONCT.W	--
>	N.C.m.s	>
<a	P+D.def.m.s	ca
href="#fragment">Other	ET	hrefçäëfragmenther
text</a>	N.P.x.s	Textüéaë
'	PONCT.W	'
;	PONCT.W	;
//	PONCT.W	@card@
Autorise	V.P.3.s	autoriser
<p>	N.P.f.s	<unknown>
et	C.C	et
<a>	N.P.x.s	<unknown>
echo	ET	echo
strip_tags($text	N.P.x.s	Strip-tagsçëtext
,	PONCT.W	,
'	PONCT.W	'
<p><a>	N.P.m.s	<unknown>
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
//	PONCT.W	@card@
affiche	V.P.3.s	afficher
:	PONCT.W	:
<p>Test	N.P.m.s	<unknown>
paragraph.</p>	ET	paragraphipp
<a	ET	ça
href="#fragment">Other	ET	hrefçäëfragmenther
text</a>	ET	<unknown>
Fonctions	N.C.f.p	fonction
utiles	A.qual.f.p	utile
en	P	en
PHP	N.C.m.s	php
•	N.C.m.s	•
strlen()	N.C.m.s	<unknown>
:	PONCT.W	:
Retourne	V.P.3.s	retourner
la	D.def.f.s	le
longueur	N.C.f.s	longueur
de	P	de
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
•	P	à
Trim()	N.P.m.s	Trimçë
:	PONCT.W	:
efface	V.P.3.s	effacer
les	D.def.m.p	le
espaces	N.C.m.p	espace
blancs	A.qual.m.p	blanc
au	P+D.def.m.s	au
début	N.C.m.s	début
et	C.C	et
à	P	à
la	D.def.f.s	le
fin	N.C.f.s	fin
d'	P	de
une	D.ind.f.s	un
chaine	N.C.f.s	chaine
.	PONCT.S	.

•	N.C.m.s	•
Strtolower()	N.P.m.s	<unknown>
:	PONCT.W	:
passe	V.P.3.s	passer
tous	A.ind.m.p	tous
les	D.def.m.p	le
caractères	N.C.m.p	caractère
en	P	en
miniscules	N.C.m.p	miniscule
.	PONCT.S	.

•	N.C.m.s	•
Strtoupper()	N.C.m.s	<unknown>
:	PONCT.W	:
passe	V.P.3.s	passer
tous	A.ind.m.p	tous
les	D.def.m.p	le
caractères	N.C.m.p	caractère
en	P	en
majuscules	N.C.m.p	majuscule
.	PONCT.S	.

•	N.C.m.s	•
Strpos(texte,chaine)	N.P.m.s	<unknown>
:	PONCT.W	:
recherche	V.P.3.s	rechercher
la	D.def.f.s	le
position	N.C.f.s	position
de	P	de
la	D.def.f.s	le
première	A.ord.f.s	premier
«	N.C.f.s	«
chaine	N.C.f.s	chaine
»	A.card.f.s	»
trouvée	VK.f.s	trouver
.	PONCT.S	.

•	P	à
Ereg(chaine	N.P.f.s	Eregüchaine
,	PONCT.W	,
texte	N.C.m.s	texte
)	PONCT.W	)
:	PONCT.W	:
recherche	N.C.f.s	recherche
dans	P	dans
texte	N.C.m.s	texte
,	PONCT.W	,
les	D.def.f.p	le
séquences	N.C.f.p	séquence
des	P+D.def.m.p	du
caractères	N.C.m.p	caractère
«	P	à
chaine	N.C.f.s	chaine
»	N.C.m.s	»
,	PONCT.W	,
Retourne	V.P.3.s	retourner
la	D.def.f.s	le
longueur	N.C.f.s	longueur
de	P	de
l'	D.def.f.s	le
occurrence	N.C.f.s	occurrence
trouvée	VK.f.s	trouver
si	C.S	si
une	D.ind.f.s	un
occurrence	N.C.f.s	occurrence
a	V.P.3.s	avoir
été	VK.m.s	être
trouvée	VK.f.s	trouver
dans	P	dans
la	D.def.f.s	le
chaîne	N.C.f.s	chaîne
string	A.qual.f.s	string
et	C.C	et
FALSE	N.P.x.s	False
dans	P	dans
le	D.def.m.s	le
cas	N.C.m.s	cas
contraire	A.qual.m.s	contraire
ou	C.C	ou
si	C.S	si
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
est	V.P.3.s	être
survenue	VK.f.s	survenir
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
if(ereg("BCD","ABCDEF"))	N.C.m.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
oui	I	oui
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
else	PPRO.3.f.s	<unknown>
{	P	à
echo	ET	echo
"	PONCT.W	"
non	ADV.-	non
"	PONCT.W	"
;	PONCT.W	;
}	D.card.f.p	}
Fonctions	N.C.f.p	fonction
utiles	A.qual.f.p	utile
en	P	en
PHP	N.C.m.s	php
•	P+D.def.m.s	c
isset($var1,$var2,…)	N.P.x.s	<unknown>
:	PONCT.W	:
Détermine	N.P.f.s	Détermine
si	C.S	si
une	D.ind.f.s	un
variable	N.C.f.s	variable
ou	C.C	ou
plusieurs	PRO.ind.f.p	plusieurs
sont	V.P.3.p	être
définies	VK.f.p	définir
et	C.C	et
sont	V.P.3.p	être
différentes	A.qual.f.p	différent
de	P	de
NULL	N.P.f.s	Null
.	PONCT.S	.

Ex	N.C.m.s	ex
:	PONCT.W	:
if	ET	if
(isset($var))	N.C.m.s	çissetçëvarçë
{	P	à
echo	N.C.m.s	echo
'	PONCT.W	'
Cette	D.dem.f.s	ce
variable	N.C.f.s	variable
existe	V.P.3.s	exister
,	PONCT.W	,
donc	ADV.-	donc
je	CL.suj.1.m.s	je
peux	V.P.1.s	pouvoir
l\'afficher	VW	lä'afficher
.	PONCT.S	.
'	PONCT.S	'
;	PONCT.W	;
•	N.C.m.s	•
unset($var1,$var2,…)	N.C.m.s	<unknown>
:	PONCT.W	:
Détruit	VK.m.s	détruire
les	D.def.f.p	le
variables	N.C.f.p	variable
.	PONCT.S	.

•	P	à
empty	N.C.m.s	empty
(	PONCT.W	(
$var1	N.C.m.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
Détermine	N.P.f.s	Détermine
si	C.S	si
une	D.ind.f.s	un
variable	N.C.f.s	variable
est	V.P.3.s	être
vide	A.qual.f.s	vide
.	PONCT.S	.

•	P	à
array_key_exists	N.C.m.p	arrayçkeyçexist
(	PONCT.W	(
key	ET	key
,	PONCT.W	,
array	N.C.m.s	array
)	PONCT.W	)
:	PONCT.W	:
Vérifie	V.P.3.s	vérifier
si	C.S	si
une	D.ind.f.s	un
clé	N.C.f.s	clé
existe	V.P.3.s	exister
dans	P	dans
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
.	PONCT.S	.

Fonctions	N.C.f.p	fonction
utiles	A.qual.f.p	utile
en	P	en
PHP	N.P.m.s	Php
•	N.C.m.s	•
in_array(valeur	N.C.m.s	inçarrayçvaleur
,	PONCT.W	,
array	N.C.m.s	array
)	PONCT.W	)
:	PONCT.W	:
Indique	V.P.3.s	indiquer
si	C.S	si
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
appartient	V.P.3.s	appartenir
à	P	à
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
.	PONCT.S	.

•	P	à
array_keys(array	N.C.m.s	arrayçkeys-array
,	PONCT.W	,
valeur	N.C.f.s	valeur
)	PONCT.W	)
:	PONCT.W	:
Retourne	N.C.f.s	retourne
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
ou	C.C	ou
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
clés	N.C.f.p	clé
contenant	VG	contenir
«	P	à
valeur	N.C.f.s	valeur
»	N.C.m.s	»
,	PONCT.W	,
si	C.S	si
valeur	N.C.f.s	valeur
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
spécifié	VK.m.s	spécifier
alors	ADV.-	alors
retourne	V.P.3.s	retourner
toutes	A.ind.f.p	tout
les	D.def.f.p	le
clés	N.C.f.p	clé
du	P+D.def.m.s	du
tableau	N.C.m.s	tableau
.	PONCT.S	.

•	P+D.def.m.s	c
array_values(array)	N.C.m.s	<unknown>
:	PONCT.W	:
Retourne	N.C.f.s	retourne
toutes	A.ind.f.p	tout
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
d'	P	de
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
.	PONCT.S	.

Exercice	N.C.m.s	exercice
1	A.card.m.s	@card@
•	P	à
Ecrire	VW	ecrire
un	D.ind.m.s	un
script	N.C.m.s	script
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
d'	P	de
afficher	VW	afficher
les	D.def.m.p	le
nombres	N.C.m.p	nombre
premiers	A.ord.m.p	premier
parmi	P	parmi
0	A.card.m.s	@card@
et	C.C	et
1000	PRO.card.m.p	@card@
.	PONCT.S	.

Utiliser	VW	utiliser
2	D.card.f.p	@card@
méthodes	N.C.f.p	méthode
différentes	A.qual.f.p	différent
(	PONCT.W	(
While	N.P.m.s	While
,	PONCT.W	,
for	N.C.m.s	for
)	PONCT.W	)
.	PONCT.S	.

Exercice	N.C.m.s	exercice
1	D.card.m.s	@card@
Solution	N.C.f.s	solution
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$i=1	A.qual.m.s	<unknown>
;	PONCT.W	;
while($i<=1000)	N.C.m.s	<unknown>
{	P+D.def.m.s	c
$z=0	N.C.m.s	<unknown>
;	PONCT.W	;
for($j=2	N.C.m.s	<unknown>
;	PONCT.W	;
$j<$i	N.P.m.s	<unknown>
;	PONCT.W	;
$j++	N.P.x.s	<unknown>
)	PONCT.W	)
{	P	à
if(($i%$j)==0	N.C.m.s	cfce
&&	PRO.card.m.p	<unknown>
(	PONCT.W	(
$i	I	çi
!	PONCT.S	!

=$j	N.P.x.s	<unknown>
)	PONCT.W	)
)	PONCT.W	)
$z++	N.P.m.s	<unknown>
;	PONCT.W	;
}	ET	}
if($z==0)	ET	çfçëë
echo	ET	echo
$i	N.P.x.s	<unknown>
.	PONCT.S	.
'	PONCT.S	'

'	PONCT.W	'
;	PONCT.W	;
$i++	N.C.m.s	çiu
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Exercice	N.C.m.s	exercice
2	A.card.m.s	@card@
•	P	à
Ecrire	VW	ecrire
un	D.ind.m.s	un
script	N.C.m.s	script
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
de	P	de
créer	VW	créer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
contenant	VG	contenir
les	D.def.f.p	le
coordonnées	N.C.f.p	coordonnée
d'	P	de
une	D.ind.f.s	un
personne	N.C.f.s	personne
puis	C.C	pui
d'	P	de
afficher	VW	afficher
ses	D.poss.m.p	son
éléments	N.C.m.p	élément
.	PONCT.S	.

Utiliser	VW	utiliser
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
numéroté́	A.qual.m.s	<unknown>
puis	C.C	pui
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
.	PONCT.S	.

Exercice	N.C.m.s	exercice
2	A.card.m.s	@card@
Solution	N.C.f.s	solution
•	P	à
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$coordonnees=	ET	<unknown>
array(‘Camil	N.C.m.s	arrayççcamil
e	PONCT.W	e
'	PONCT.W	'
,	PONCT.W	,
’	P	à
Dupont	N.P.m.s	Dupont
'	PONCT.W	'
,	PONCT.W	,
21	N.card.m.s	@card@
,	PONCT.W	,
’	N.C.m.s	’
Paris	N.P.m.s	Paris
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
for($i=0	N.C.m.s	forccir
;	PONCT.W	;
$i<count($coordonnees)	N.P.x.s	<unknown>
;	PONCT.W	;
$i++	N.P.m.s	<unknown>
)	PONCT.W	)
echo	ET	echo
$coordonnees[$i	N.P.m.s	<unknown>
]	PONCT.W	]
.	PONCT.S	.
'	PONCT.S	'

'	PONCT.W	'
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
•	N.C.m.s	•
Tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$coordonnees=	ET	<unknown>
array(	ET	arrayç
"	PONCT.W	"
prenom	N.C.m.s	prenom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Camille	ET	camille
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
nom	N.C.m.s	nom
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Dupont	N.P.m.s	Dupont
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
age	N.C.f.s	age
"	PONCT.W	"
=>	N.P.m.s	<unknown>
21	N.card.m.s	@card@
,	PONCT.W	,
"	PONCT.W	"
ville	N.C.f.s	ville
"	PONCT.W	"
=>	N.P.m.s	<unknown>
"	PONCT.W	"
Paris	N.P.m.s	Paris
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach($coordonnees	N.C.f.p	foreach-coordonnee
as	ET	as
$cle	N.C.m.s	ccle
=>$value	N.P.x.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
$cle	A.qual.m.s	cle
.	PONCT.S	.

"	PONCT.W	"
=	N.C.m.s	=
"	PONCT.W	"
.	PONCT.S	.

$value	N.C.f.s	çvalue
.	PONCT.S	.

"	PONCT.W	"
<br/>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Exercice	N.C.m.s	exercice
3	A.card.m.s	@card@
•	P	à
Ecrire	VW	ecrire
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
'	PONCT.W	'
moisfr	N.C.m.s	<unknown>
'	PONCT.W	'
qui	PRO.rel.f.s	qui
permet	V.P.3.s	permettre
d'	P	de
afficher	VW	afficher
un	D.ind.m.s	un
mois	N.C.m.s	mois
en	P	en
toutes	D.ind.f.p	tout
lettres	N.C.f.p	lettre
et	C.C	et
en	P	en
français	N.C.m.s	français
en	P	en
utilisant	VG	utiliser
les	D.def.f.p	le
instructions	N.C.f.p	instruction
de	P	de
Switch	N.P.m.s	Switch
Case	N.P.m.s	Case
Afficher	VW	afficher
le	D.def.m.s	le
mois	N.C.m.s	mois
4	A.card.m.s	@card@
en	P	en
faisant	VG	faire
appel	N.C.m.s	appel
à	P	à
la	D.def.f.s	le
fonction	N.C.f.s	fonction
.	PONCT.S	.

Exercice	N.C.m.s	exercice
3	A.card.m.s	@card@
Solution	N.C.f.s	solution
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
function	N.C.f.s	function
moisfr($date)	N.C.m.s	moisfrüdateë
{	P+D.def.m.s	c
switch($date)	N.C.m.s	switchëdateë
{	P	à
case	N.C.f.s	case
1	D.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Janvier	N.P.m.s	Janvier
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
2	A.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Fevrier	N.P.m.s	Fevrier
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
3	A.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Mars	N.P.m.s	Mars
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
4	N.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Avril	N.C.m.s	avril
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
5	N.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Mai	N.C.m.s	mai
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
6	A.card.f.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Juin	N.P.m.s	Juin
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
7	A.card.f.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Juil	N.P.m.s	Juil
et	C.C	et
'	P	e
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
8	N.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Aout	PRO.ind.m.s	aout
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
9	A.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Septembre	N.C.m.s	septembre
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
10	A.card.f.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Octobre	N.C.m.s	octobre
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
11	A.card.f.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Novembre	N.C.m.s	novembre
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
case	N.C.f.s	case
12	A.card.m.s	@card@
:	PONCT.W	:
return	N.C.m.s	return
'	PONCT.W	'
Décembre	N.C.m.s	décembre
'	PONCT.W	'
;	PONCT.W	;
break	N.C.m.s	break
;	PONCT.W	;
default	N.C.m.s	default
:	PONCT.W	:
return	N.C.f.s	return
'	P	e
mois	N.C.m.s	mois
non	ADV.neg	non
valide	A.qual.m.s	valide
'	PONCT.W	'
;	PONCT.W	;
}	N.card.m.s	}
}	A.ind.m.s	}
echo	ET	echo
moisfr(4)	A.qual.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Exercice	N.P.m.s	Exercice
4	A.card.m.s	@card@
Ecrire	VW	ecrire
un	D.ind.m.s	un
script	N.C.m.s	script
php	N.C.m.s	<unknown>
permettant	VG	permettre
d'	P	de
afficher	VW	afficher
le	D.def.m.s	le
résulat	N.C.m.s	résulat
suivant	A.qual.m.s	suivant
:	PONCT.W	:
Astuce	N.P.m.s	Astuce
:	PONCT.W	:
Utiliser	VW	utiliser
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
et	C.C	et
la	D.def.f.s	le
foncion	N.C.f.s	foncion
gettype()	N.C.m.s	gettypeëë
;	PONCT.W	;
Test	V.P.3.s	tenir
sur	P	sur
les	D.def.f.p	le
variables	N.C.f.p	variable
la	D.def.f.s	le
variable	A.qual.m.s	variable
toto	N.C.f.s	toto
est	V.P.3.s	être
de	P	de
type	N.C.m.s	type
entier	A.qual.m.s	entier
,	PONCT.W	,
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
est	V.P.3.s	être
10	A.card.f.s	@card@
.	PONCT.S	.

la	D.def.f.s	le
variable	N.C.f.s	variable
titi	N.C.f.s	titi
est	V.P.3.s	être
de	P	de
type	N.C.m.s	type
String	N.P.m.s	String
,	PONCT.W	,
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
est	V.P.3.s	être
«	P	à
chaine	A.qual.f.s	chain
»	N.C.m.s	»
.	PONCT.S	.

Exercice	N.C.m.s	exercice
4	A.card.m.s	@card@
Solution	N.C.f.p	solution
:	PONCT.W	:
<html>	N.C.m.p	<unknown>
<body>	N.P.m.s	<unknown>
<center><h1>	N.P.x.s	<unknown>
Test	N.P.m.s	Test
sur	P	sur
les	D.def.f.p	le
variables	A.qual.m.p	variable
</h1></center>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$variables=	N.P.m.s	<unknown>
array(	ET	arrayç
"	PONCT.W	"
toto	ET	toto
"	PONCT.W	"
=>	N.P.m.s	<unknown>
10	N.card.m.s	@card@
,	PONCT.W	,
"	PONCT.W	"
titi	VK.m.s	titir
"	PONCT.W	"
=>	N.P.x.s	<unknown>
"	PONCT.W	"
chaine	A.qual.f.s	chain
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
foreach($variables	N.C.m.p	foreachëëvariable
as	ET	as
$cle	N.C.m.s	ccle
=>	N.P.x.s	<unknown>
$value	N.C.f.s	çvalue
)	PONCT.W	)
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
la	D.def.f.s	le
variable	N.C.f.s	variable
"	PONCT.W	"
.$cle	N.C.m.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
est	V.P.3.s	être
de	P	de
type	N.C.m.s	type
"	PONCT.W	"
.	PONCT.S	.

gettype($value	N.C.f.s	gettypeçvalue
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
,	PONCT.W	,
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
est	V.P.3.s	être
"	PONCT.W	"
.	PONCT.S	.

$value	N.C.f.s	çvalue
.	PONCT.S	.

"	PONCT.W	"
<br/>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	N.C.m.p	<unknown>
Formulaires	A.qual.m.p	formulaire
La	D.def.f.s	le
définition	N.C.f.s	définition
des	P+D.def.m.p	du
formulaires	N.C.f.p	formulaire
se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
avec	P	avec
la	D.def.f.s	le
balise	N.C.f.s	balise
<FORM>	N.P.m.s	<unknown>
en	P	en
utilisant	VG	utiliser
deux	D.card.m.p	deux
attributs	N.C.m.p	attribut
suivant	A.qual.m.s	suivant
:	PONCT.W	:
•	P	à
METHOD	N.P.x.s	Method
:	PONCT.W	:
pour	P	pour
définir	VW	définir
la	D.def.f.s	le
méthode	N.C.f.s	méthode
de	P	de
transfert	N.C.m.s	transfert
des	P+D.def.f.p	du
données	N.C.f.p	donnée
vers	P	vers
le	D.def.m.s	le
serveur	N.C.m.s	serveur
;	PONCT.W	;
deux	D.card.f.p	deux
valeurs	N.C.f.p	valeur
possible	A.qual.f.s	possible
«	P+D.def.m.s	c
POST	N.P.m.s	Post
»	N.C.m.s	»
ou	C.C	ou
«	N.C.m.s	«
GET	N.P.m.s	Get
»	N.C.m.s	»
(	PONCT.W	(
les	D.def.f.p	le
données	N.C.f.p	donnée
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
seront	V.F.3.p	être
encodées	VK.f.p	encoder
dans	P	dans
l'	D.def.m.s	le
URL	N.P.f.s	Url
)	PONCT.W	)
.	PONCT.S	.

•	P	à
ACTION	N.P.x.s	Action
:	PONCT.W	:
pour	P	pour
préciser	VW	préciser
l'	D.def.f.s	le
action	N.C.f.s	action
à	P	à
exécuter	VW	exécuter
lors	ADV.-	lors
du	P+D.def.m.s	du
l'	D.def.f.s	le
envoie	N.C.f.s	envoie
des	P+D.def.f.p	du
données	N.C.f.p	donnée
.	PONCT.S	.

Exemple	N.C.m.s	exemple
d'	P	de
utilisation	N.C.f.s	utilisation
:	PONCT.W	:
<FORM	N.P.m.s	<unknown>
METHOD="POST	N.P.m.s	Methodçëpost
"	PONCT.W	"
ACTION=	N.P.m.s	Actionç
"	PONCT.W	"
cible.php	ET	<unknown>
"	PONCT.W	"
>	N.C.m.s	>
…	N.C.m.s	…
.	PONCT.S	.

</FORM>	N.P.m.s	<unknown>
Formulaires	A.qual.m.p	formulaire
Les	D.def.m.p	le
éléments	N.C.m.p	élément
d'	P	de
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
:	PONCT.W	:
I.	N.P.m.s	I
INPUT	N.P.m.s	Input
:	PONCT.W	:
Champs	N.C.m.p	champ
de	P	de
saisie	N.C.f.s	saisie
de	P	de
texte	N.C.m.s	texte
et	C.C	et
différents	D.ind.m.p	différent
types	N.C.m.p	type
de	P	de
boutons	N.C.m.p	bouton
.	PONCT.S	.

II	A.card.m.s	II
.	PONCT.S	.

TEXTAREA	N.C.m.p	textarea
:	PONCT.W	:
zones	N.C.f.p	zone
de	P	de
texte	N.C.m.s	texte
multi-lignes	A.qual.m.s	multi-ligne
.	PONCT.S	.

III	A.card.m.s	III
.	PONCT.S	.

SELECT	N.C.m.s	select
:	PONCT.W	:
Listes	N.C.f.p	liste
déroulantes	A.qual.f.p	déroulant
.	PONCT.S	.

IV	A.card.m.s	IV
.	PONCT.S	.

FIELDSET	N.P.m.s	Fieldset
:	PONCT.W	:
regrouper	VW	regrouper
des	D.ind.m.p	du
éléments	N.C.m.p	élément
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
Formulaires	N.P.m.s	Formulaires
I.	N.P.m.s	I
INPUT	N.P.m.s	Input
:	PONCT.W	:
Champs	N.C.m.p	champ
de	P	de
saisie	N.C.f.s	saisie
de	P	de
texte	N.C.m.s	texte
et	C.C	et
différents	D.ind.m.p	différent
types	N.C.m.p	type
de	P	de
boutons	N.C.m.p	bouton
à	P	à
définir	VW	définir
avec	P	avec
l'	D.def.m.s	le
attribut	N.C.m.s	attribut
TYPE	N.P.f.s	Type
:	PONCT.W	:
1	N.card.m.s	@card@
.	PONCT.S	.

Text	N.P.m.s	Text
:	PONCT.W	:
une	D.ind.f.s	un
zone	N.C.f.s	zone
de	P	de
texte	N.C.m.s	texte
à	P	à
une	D.ind.f.s	un
seule	A.ind.f.s	seul
ligne	N.C.f.s	ligne
<input	N.P.m.s	<unknown>
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
id="toto	ET	idäëtoto
"	PONCT.W	"
name="titi	ET	nameçtiti
"	PONCT.W	"
{	P+D.def.m.s	c
autofocus/	N.C.m.s	<unknown>
required	V.P.3.s	<unknown>
}	P	à
/>	N.C.m.s	<unknown>
•	N.C.m.s	•
ID	N.P.x.s	Id
:	PONCT.W	:
est	V.P.3.s	être
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
lu	VK.m.s	lire
par	P	par
le	D.def.m.s	le
navigateur	N.C.m.s	navigateur
(	PONCT.W	(
en	P	en
HTML	N.P.m.s	<unknown>
,	PONCT.W	,
CSS	N.P.f.s	CSS
ou	C.C	ou
Javascript	N.P.m.s	Javascript
)	PONCT.W	)
;	PONCT.W	;
•	N.P.x.s	•
NAME	N.P.m.s	Name
:	PONCT.W	:
sert	V.P.3.s	servir
à	P	à
PHP	N.P.m.s	Php
lors	ADV.-	lors
de	P	de
la	D.def.f.s	le
validation	N.C.f.s	validation
d'	P	de
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
.	PONCT.S	.

Coté	N.C.m.s	coté
PHP	N.C.m.s	php
à	P	à
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
zone	N.C.f.s	zone
du	P+D.def.m.s	du
texte	N.C.m.s	texte
est	V.P.3.s	être
récupérée	VK.f.s	récupérer
en	P	en
PHP	N.P.m.s	Php
par	P	par
la	D.def.f.s	le
variable	N.C.f.s	variable
_$POST[‘titi	N.P.x.s	<unknown>
’	N.C.m.s	’
]	PONCT.W	]
,	PONCT.W	,
par	P	par
contre	P	contre
la	D.def.f.s	le
variable	N.C.f.s	variable
utilisée	VK.f.s	utiliser
en	P	en
css	N.C.m.p	<unknown>
pour	P	pour
donner	VW	donner
du	D.part.m.s	du
style	N.C.m.s	style
à	P	à
la	D.def.f.s	le
zone	N.C.f.s	zone
est	V.P.3.s	être
#toto{	N.P.x.s	<unknown>
…	P	à
}	N.C.m.s	}
.	PONCT.S	.

•	P	à
Value	N.C.f.s	value
:	PONCT.W	:
permet	V.P.3.s	permettre
de	P	de
pré-remplir	VW	pré-remplir
le	D.def.m.s	le
champ	N.C.m.s	champ
avec	P	avec
une	D.ind.f.s	un
valeur	N.C.f.s	valeur
par	P	par
défaut	N.C.m.s	défaut
.	PONCT.S	.

•	N.C.m.s	•
Placeholder	N.P.m.s	Placeholder
:	PONCT.W	:
permet	V.P.3.s	permettre
de	P	de
donner	VW	donner
une	D.ind.f.s	un
indication	N.C.f.s	indication
sur	P	sur
le	D.def.m.s	le
contenu	N.C.m.s	contenu
du	P+D.def.m.s	du
champ	N.C.m.s	champ
.	PONCT.S	.

Cette	D.dem.f.s	ce
indication	N.C.f.s	indication
disparaîtra	V.F.3.s	disparaître
dès	P	dès
que	C.S	que
le	D.def.m.s	le
visiteur	N.C.m.s	visiteur
aura	V.F.3.s	avoir
cliqué	VK.m.s	cliquer
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
du	P+D.def.m.s	du
champ	N.C.m.s	champ
.	PONCT.S	.

Formulaires	A.qual.m.p	formulaire
2	A.card.m.s	@card@
.	PONCT.S	.

Password	N.P.x.s	Password
:	PONCT.W	:
Zone	N.C.m.s	zone
de	P	de
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
(	PONCT.W	(
caratères	N.C.m.p	caratère
saisis	VK.m.p	saisir
ne	ADV.neg	ne
s'	CL.refl.3.m.p	se
affichent	V.P.3.p	afficher
pas	ADV.neg	pas
à	P	à
l'	D.def.m.s	le
écran	N.C.m.s	écran
)	PONCT.W	)
<input	ET	çinput
type="password	ET	typeëppassword
"	PONCT.W	"
name="pass	ET	nameçpass
"	PONCT.W	"
id="pass	ET	idçäpass
"	PONCT.W	"
/>	N.C.m.p	<unknown>
3	PRO.card.m.p	@card@
.	PONCT.S	.

Checkbox	N.P.m.s	Checkbox
:	PONCT.W	:
Les	D.def.f.p	le
cases	N.C.f.p	case
à	P	à
cocher	VW	cocher
<input	N.P.m.s	<unknown>
type="checkbox	N.C.m.s	typeëcheckbox
"	PONCT.W	"
name="choix	A.qual.m.s	nameçchoix
"	PONCT.W	"
id="choix	A.qual.m.s	idçächoix
"	PONCT.W	"
value=	V.P.3.s	<unknown>
"	PONCT.W	"
choix1	N.C.m.s	<unknown>
"	PONCT.W	"
checked	N.C.m.s	checked
/>	C.C	<unknown>
4	A.card.m.s	@card@
.	PONCT.S	.

Radio	N.C.f.s	radio
:	PONCT.W	:
Les	D.def.f.p	le
zones	N.C.f.p	zone
d'	P	de
options	N.C.f.p	option
<input	ET	çinput
type=	ET	typeë
"	PONCT.W	"
radio	ET	radio
"	PONCT.W	"
name="choix	ET	nameçchoix
"	PONCT.W	"
id="choix	A.qual.m.s	idçächoix
"	PONCT.W	"
value=	V.P.3.s	<unknown>
"	PONCT.W	"
choix1	N.C.m.s	<unknown>
"	PONCT.W	"
/>	N.C.m.p	<unknown>
Formulaires	N.C.m.p	formulaire
5	A.card.f.s	@card@
.	PONCT.S	.

Boutons	N.C.m.p	bouton
•	P	à
Reset	N.P.m.s	Reset
:	PONCT.W	:
remise	N.C.f.s	remise
à	P	à
zéro	N.C.m.s	zéro
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
<input	N.P.m.s	<unknown>
type="reset	N.C.m.s	typeëereset
"	PONCT.W	"
value="Effacer">	N.C.f.s	valueëfeffacerçë
•	P	à
Submit	N.P.m.s	Submit
:	PONCT.W	:
validation	N.C.f.s	validation
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
<input	N.P.m.s	<unknown>
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
Formulaires	N.C.m.p	formulaire
II	A.card.m.s	II
.	PONCT.S	.

TEXTAREA	N.P.f.s	Textarea
:	PONCT.W	:
créer	VW	créer
une	D.ind.f.s	un
zone	N.C.f.s	zone
de	P	de
texte	N.C.m.s	texte
multi-lignes	A.qual.m.s	multi-ligne
.	PONCT.S	.

<textarea	N.P.m.s	<unknown>
name="ameliorer	VW	nameçameliorer
"	PONCT.W	"
id="ameliorer">	A.ind.m.s	<unknown>
</textarea>	N.P.x.s	<unknown>
Il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
deux	D.card.f.p	deux
façons	N.C.f.p	façon
de	P	de
modifier	VW	modifier
la	D.def.f.s	le
tail	N.C.f.s	tail
e	PONCT.W	e
de	P	de
cette	D.dem.f.s	ce
zone	N.C.f.s	zone
:	PONCT.W	:
•	N.C.m.s	•
En	P	en
CSS	N.P.f.s	CSS
:	PONCT.W	:
en	P	en
utilisant	VG	utiliser
les	D.def.f.p	le
propriétés	N.C.f.p	propriété
CSS	N.P.f.s	CSS
«	P+D.def.m.s	c
width	N.C.m.s	width
»	N.C.m.s	»
et	C.C	et
«	P	à
height	N.C.m.s	height
»	N.C.m.s	»
.	PONCT.S	.

•	N.C.m.s	•
Avec	P	avec
des	D.ind.m.p	du
attributs	N.C.m.p	attribut
:	PONCT.W	:
«	D.card.m.p	«
rows	N.C.m.p	row
»	P	à
et	C.C	et
«	D.card.m.p	«
cols	N.C.m.p	col
»	N.C.m.s	»
de	P	de
la	D.def.f.s	le
balise	N.C.f.s	balise
<textarea>	N.P.x.s	<unknown>
.	PONCT.S	.

Le	D.def.m.s	le
premier	A.ord.m.s	premier
indique	V.P.3.s	indiquer
le	D.def.m.s	le
nombre	N.C.m.s	nombre
de	P	de
lignes	N.C.f.p	ligne
de	P	de
texte	N.C.m.s	texte
qui	PRO.rel.f.p	qui
peuvent	V.P.3.p	pouvoir
être	VW	être
affichées	VK.f.p	afficher
simultanément	ADV.-	simultanément
,	PONCT.W	,
et	C.C	et
le	D.def.m.s	le
second	A.ord.m.s	second
le	D.def.m.s	le
nombre	N.C.m.s	nombre
de	P	de
colonnes	N.C.f.p	colonne
.	PONCT.S	.

Formulaires	A.qual.m.p	formulaire
III	A.card.m.s	III
.	PONCT.S	.

SELECT	N.P.m.s	Select
:	PONCT.W	:
faire	VW	faire
un	D.ind.m.s	un
choix	N.C.m.s	choix
parmi	P	parmi
plusieurs	D.ind.f.p	plusieurs
possibilités	N.C.f.p	possibilité
sous	P	sous
forme	N.C.f.s	forme
de	P	de
liste	N.C.f.s	liste
.	PONCT.S	.

•	P	à
L'	D.def.m.s	le
attribut	N.C.m.s	attribut
«	N.C.m.s	«
multiple	A.qual.m.s	multiple
»	N.C.m.s	»
:	PONCT.W	:
indique	V.P.3.s	indiquer
qu'	C.S	que
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
sélectionner	VW	sélectionner
plusieurs	D.ind.f.p	plusieurs
options	N.C.f.p	option
parmi	P	parmi
cel	PRO.dem.m.s	celui
es	P+D.def.f.p	es
offertes	N.C.f.p	offerte
dans	P	dans
le	D.def.m.s	le
contrôle	N.C.m.s	contrôle
.	PONCT.S	.

Par	P	par
défaut	N.C.m.s	défaut
,	PONCT.W	,
si	C.S	si
cet	D.dem.m.s	ce
attribut	N.C.m.s	attribut
n'	ADV.neg	ne
est	V.P.3.s	être
pas	ADV.neg	pas
utilisé	VK.m.s	utiliser
,	PONCT.W	,
seule	A.ind.f.s	seul
une	D.ind.f.s	un
option	N.C.f.s	option
peut	V.P.3.s	pouvoir
être	VW	être
sélectionnée	VK.f.s	sélectionner
.	PONCT.S	.

•	N.C.m.s	•
A	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
<select>	N.P.x.s	<unknown>
</select>	N.P.x.s	<unknown>
,	PONCT.W	,
placer	VW	placer
plusieurs	D.ind.f.p	plusieurs
balises	N.C.f.p	balise
<option>	A.qual.f.p	<unknown>
</option>	N.P.x.s	<unknown>
et/ou	VG	<unknown>
grouper	VW	grouper
les	D.def.f.p	le
options	N.C.f.p	option
avec	P	avec
la	D.def.f.s	le
balise	N.C.f.s	balise
<optgroup>	N.P.x.s	<unknown>
</	P	à
optgroup>	N.C.m.p	<unknown>
.	PONCT.S	.

Formulaires	A.qual.m.p	formulaire
•	P	à
Exemple	N.C.m.s	exemple
avec	P	avec
Select	N.P.m.s	Select
:	PONCT.W	:
<select	A.qual.m.s	<unknown>
id="GID	N.C.m.s	idç-gid
"	PONCT.W	"
multiple	A.qual.m.s	multiple
>	P+D.def.m.s	c
<optgroup	N.P.m.s	<unknown>
label="Groupe	N.C.m.s	labelçgroupe
1">	D.card.m.s	1ëù
<option>Option	N.P.x.s	<unknown>
1.1</option>	A.ind.m.p	<unknown>
</optgroup>	N.C.m.p	<unknown>
<optgroup	N.P.x.s	<unknown>
label="Groupe	N.C.m.s	labelçgroupe
2">	D.card.m.p	2ùë
<option>Option	N.P.x.s	<unknown>
2.1</option>	N.P.x.s	@ord@
<option>Option	N.P.x.s	<unknown>
2.2</option>	N.P.x.s	@card@
</optgroup>	N.C.m.p	<unknown>
<optgroup	N.P.x.s	<unknown>
label="Groupe	N.C.m.s	labelçgroupe
3	D.card.m.p	@card@
"	PONCT.W	"
disabled>	A.qual.m.s	<unknown>
<option>Option	N.P.x.s	<unknown>
3.1</option>	A.ind.m.p	<unknown>
<option>Option	N.P.x.s	<unknown>
3.2</option>	A.ind.m.p	<unknown>
<option>Option	N.P.x.s	<unknown>
3.3</option>	A.ind.m.p	<unknown>
</optgroup>	N.C.m.p	<unknown>
</select>	N.P.x.s	<unknown>
Formulaires	A.qual.m.p	formulaire
IV	A.card.m.s	IV
.	PONCT.S	.

FIELDSET	N.P.m.s	Fieldset
:	PONCT.W	:
regrouper	VW	regrouper
des	D.ind.m.p	du
éléments	N.C.m.p	élément
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
qui	PRO.rel.m.p	qui
ont	V.P.3.p	avoir
un	D.ind.m.s	un
rapport	N.C.m.s	rapport
entre	P	entre
eux	PPRO.3.m.p	eux
.	PONCT.S	.

•	P	à
L'	D.def.m.s	le
attribut	N.C.m.s	attribut
«	N.C.m.s	«
Legend	N.P.m.s	Legend
»	V.P.3.s	être
permet	V.P.3.s	permettre
de	P	de
donner	VW	donner
un	D.ind.m.s	un
titre	N.C.m.s	titre
à	P	à
ce	D.dem.m.s	ce
groupement	N.C.m.s	groupement
.	PONCT.S	.

<fieldset>	N.C.m.p	<unknown>
<legend>Vos	ET	<unknown>
coordonnées</legend>	ET	<unknown>
<label	N.P.m.s	<unknown>
for="nom">Quel	A.ind.m.s	forçänomçquel
est	V.P.3.s	être
votre	D.poss.m.s	votre
nom	N.C.m.s	nom
?	PONCT.S	?

</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="nom	ET	nameçnom
"	PONCT.W	"
id="nom	ET	idçänom
"	PONCT.W	"
/>	ET	<unknown>
<label	N.P.m.s	<unknown>
for="prenom">Quel	A.qual.m.s	forçprenomçquel
est	V.P.3.s	être
votre	D.poss.m.s	votre
prénom	N.C.m.s	prénom
?	PONCT.S	?

</label>	N.P.x.s	<unknown>
<input	ET	çinput
type="text	ET	typeëtext
"	PONCT.W	"
name="prenom	ET	nameçprenom
"	PONCT.W	"
id="prenom	ET	idäëprenom
"	PONCT.W	"
/>	N.C.m.p	<unknown>
</fieldset>	ET	<unknown>
Traitement	N.C.m.s	traitement
des	P+D.def.m.p	du
Formulaires	N.C.m.p	formulaire
Traitement	N.C.m.s	traitement
des	P+D.def.m.p	du
Formulaires	N.C.m.p	formulaire
Selon	P	selon
la	D.def.f.s	le
méthode	N.C.f.s	méthode
utilisée	VK.f.s	utiliser
dans	P	dans
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
(	PONCT.W	(
spécifiée	VK.f.s	spécifier
dans	P	dans
l'	D.def.m.s	le
attribut	N.C.m.s	attribut
«	P	à
method	N.C.m.s	method
»	N.P.m.s	»
)	PONCT.W	)
:	PONCT.W	:
•	N.P.x.s	•
$_GET	N.P.m.s	<unknown>
est	V.P.3.s	être
une	D.ind.f.s	un
variable	N.C.f.s	variable
super-globale	A.qual.f.s	super-global
pour	P	pour
récupérer	VW	récupérer
les	D.def.f.p	le
données	N.C.f.p	donnée
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
avec	P	avec
la	D.def.f.s	le
méthode	N.C.f.s	méthode
GET	N.P.m.s	Get
.	PONCT.S	.

•	P	à
$_POST	N.P.m.s	<unknown>
est	V.P.3.s	être
une	D.ind.f.s	un
variable	N.C.f.s	variable
super-globale	A.qual.f.s	super-global
pour	P	pour
récupérer	VW	récupérer
les	D.def.f.p	le
données	N.C.f.p	donnée
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
avec	P	avec
la	D.def.f.s	le
méthode	N.C.f.s	méthode
POST	N.P.m.s	Post
.	PONCT.S	.

•	N.C.m.s	•
Un	D.ind.m.s	un
élément	N.C.m.s	élément
d'	P	de
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
est	V.P.3.s	être
identifié	VK.m.s	identifier
en	P	en
php	N.C.m.s	<unknown>
par	P	par
son	D.poss.m.s	son
attribut	N.C.m.s	attribut
«	P	à
name	A.qual.m.s	name
»	N.C.m.s	»
.	PONCT.S	.

Traitement	N.C.m.s	traitement
des	P+D.def.m.p	du
Formulaires	N.C.m.p	formulaire
Ex	N.C.m.s	ex
1	A.card.m.s	@card@
:	PONCT.W	:
<form	ET	fform
method="post	ET	methodçpost
"	PONCT.W	"
action="cible.php">	ET	<unknown>
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
id="toto	ET	idäëtoto
"	PONCT.W	"
name="titi	ET	nameçtiti
"	PONCT.W	"
/>	ET	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Envoyer	VW	valueëçenvoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</form>	N.P.x.s	<unknown>
En	P	en
php	N.C.m.s	<unknown>
,	PONCT.W	,
pour	P	pour
récupérer	VW	récupérer
la	D.def.f.s	le
valeur	N.C.f.s	valeur
saisie	VK.f.s	saisir
dans	P	dans
la	D.def.f.s	le
zone	N.C.f.s	zone
texte	A.qual.f.s	texte
:	PONCT.W	:
<p>Je	N.P.x.s	<unknown>
sais	ADV.-	sais
comment	ADV.int	comment
tu	VK.m.s	taire
t'	A.ord.m.s	te
appel	N.C.m.s	appel
es	P+D.def.f.p	es
,	PONCT.W	,
hé	VK.m.s	her
hé	VK.m.s	her
.	PONCT.S	.

Tu	P+D.def.m.s	tu
t'	A.ord.m.s	te
appel	N.C.m.s	appel
es	P+D.def.m.p	es
<	N.C.m.p	<
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
$_POST[’titi	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
?	PONCT.S	?

>	I	à
!	PONCT.S	!

</p>	N.C.m.p	<unknown>
Traitement	N.C.m.s	traitement
des	P+D.def.m.p	du
Formulaires	N.C.m.p	formulaire
Ex	N.C.m.s	ex
2	A.card.m.s	@card@
:	PONCT.W	:
<form	N.P.m.s	<unknown>
method=‘GET	N.C.f.p	methodçget
’	P	à
action=	ET	actionà
"	PONCT.W	"
cible.php">	N.C.m.p	<unknown>
Qu'	PRO.rel.m.s	que
est	V.P.3.s	être
-ce	CL.suj.3.m.s	ce
que	PRO.rel.m.s	que
vous	CL.obj.2.m.p	vous
aimer	VW	aimer
?	PONCT.S	?

<br	N.C.m.s	<unknown>
/>	D.card.m.p	<unknown>
<input	D.card.m.p	<unknown>
type="checkbox	N.C.m.s	typeëcheckbox
"	PONCT.W	"
name="loisirs[	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
value="shopping	N.C.m.s	valueççshopping
"	PONCT.W	"
/	PONCT.W	@card@
>	P	à
Faire	VW	faire
du	P+D.def.m.s	du
shopping<br	N.C.m.s	<unknown>
/>	PONCT.W	<unknown>
<input	ET	çinput
type="checkbox	N.C.m.s	typeëcheckbox
"	PONCT.W	"
name="loisirs[	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
value="sport	N.C.m.s	valueçàsport
"	PONCT.W	"
/>	ET	<unknown>
Faire	VW	faire
du	P+D.def.m.s	du
sport<br	N.C.m.s	<unknown>
/>	PONCT.W	<unknown>
<input	N.P.m.s	<unknown>
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value="Ma	V.F.3.s	<unknown>
réponse"/>	V.I.3.s	<unknown>
</form>	N.P.x.s	<unknown>
En	P	en
php	N.C.m.s	<unknown>
,	PONCT.W	,
pour	P	pour
récupérer	VW	récupérer
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
cochées	VK.f.p	cocher
:	PONCT.W	:
$loisirs	N.C.m.p	<unknown>
=	PONCT.W	=
$_GET["loisirs	N.P.x.s	<unknown>
"	PONCT.W	"
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<b>Vous	N.P.m.s	<unknown>
aimez	V.P.2.p	aimer
</b><br	N.P.x.s	<unknown>
/>	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
for	N.C.m.s	for
(	PONCT.W	(
$i=0	N.C.f.p	<unknown>
;	PONCT.W	;
$i<count($loisirs)	N.P.x.s	<unknown>
;	PONCT.W	;
$i++	N.P.m.s	<unknown>
)	PONCT.W	)
{	ET	{
echo	ET	echo
$loisirs[$i]."<br	N.P.x.s	<unknown>
/>	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	D.card.m.s	}
Exercices	N.C.m.p	exercice
•	P	à
Exercice	N.P.m.s	Exercice
1	N.card.m.s	@card@
:	PONCT.W	:
Transmettre	VW	transmettre
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
saisies	VK.f.p	saisir
des	P+D.def.f.p	du
variables	N.C.f.p	variable
Nom	N.P.m.s	Nom
,	PONCT.W	,
Prénom	N.P.m.s	Prénom
et	C.C	et
Age	N.P.m.s	Age
d'	P	de
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
d'	P	de
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
(	PONCT.W	(
source.php	N.C.m.s	<unknown>
)	PONCT.W	)
à	P	à
une	D.ind.f.s	un
autre	A.ind.f.s	autre
page	N.C.f.s	page
(	PONCT.W	(
Cible.php	N.P.m.s	<unknown>
)	PONCT.W	)
qui	PRO.rel.f.s	qui
permet	V.P.3.s	permettre
de	P	de
les	CL.obj.3.m.p	le
afficher	VW	afficher
.	PONCT.S	.

Exercices	N.C.m.p	exercice
Exercice	N.P.m.s	Exercice
1	A.card.m.s	@card@
:	PONCT.W	:
Solution	N.C.f.s	solution
source.php	V.P.3.s	<unknown>
<form	N.P.m.s	<unknown>
method=“post	N.P.m.s	Methodçëpost
”	P	à
action=”cible.php”>	ET	<unknown>
Prenom	N.P.m.s	Prenom
:	PONCT.W	:
<input	N.P.m.s	<unknown>
type=”text	N.P.x.s	Typeëtext
”	P+D.def.m.s	c
name=	N.C.m.s	nameç
“	D.card.m.s	“
prenom	N.C.m.s	prenom
”	P	à
><br/>	N.P.x.s	<unknown>
Nom	N.P.m.s	Nom
:	PONCT.W	:
<input	N.P.m.s	<unknown>
type=”text	N.P.x.s	Typeëtext
”	P+D.def.m.s	c
name=	N.C.m.s	nameç
“	D.card.m.s	“
nom	N.C.m.s	nom
”	P+D.def.m.s	c
><br/>	N.P.x.s	<unknown>
Age	ET	age
:	PONCT.W	:
<input	N.P.m.s	<unknown>
type=”text	N.C.m.s	typeëtext
”	P+D.def.m.s	c
name=	N.C.m.s	nameç
“	P	à
age	N.C.m.s	age
”	N.C.m.s	”
>	N.C.m.s	>
<input	N.P.m.s	<unknown>
type=”submit	N.P.x.s	Typeçsubmit
”	N.P.x.s	”
value=	N.C.m.s	valueë
“	P	à
envoyer	VW	envoyer
”	N.C.m.s	”
>	P	à
cible.php	N.C.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$prenom	N.P.m.s	<unknown>
=	P	à
$_POST[“prenom	N.P.x.s	<unknown>
”	N.C.m.s	”
]	PONCT.W	]
;	PONCT.W	;
$nom	N.C.m.s	<unknown>
=	PONCT.W	=
$_POST[“nom	N.P.x.s	<unknown>
”	N.C.m.s	”
]	PONCT.W	]
;	PONCT.W	;
$age=$_POST[“age	N.P.x.s	<unknown>
”	N.C.m.s	”
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
“	P	à
Bonjour	N.P.m.s	Bonjour
<b>$prenom	N.P.m.s	<unknown>
$nom</b>	N.P.x.s	<unknown>
,	PONCT.W	,
votre	D.poss.f.s	votre
age	N.C.f.s	age
est	V.P.3.s	être
:	PONCT.W	:
$age	N.C.m.s	çage
<br>	N.P.m.s	<unknown>
”	N.C.m.s	”
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Exercices	N.C.m.p	exercice
Exercice	N.P.m.s	Exercice
2	A.card.m.s	@card@
:	PONCT.W	:
Transmettre	VW	transmettre
à	P	à
travers	N.C.m.p	travers
un	D.ind.m.s	un
lien	N.C.m.s	lien
,	PONCT.W	,
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
des	P+D.def.f.p	du
variables	N.C.f.p	variable
Nom	N.P.m.s	Nom
et	C.C	et
Age	N.P.m.s	Age
d'	P	de
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
(	PONCT.W	(
source.php	N.C.m.s	<unknown>
)	PONCT.W	)
à	P	à
une	D.ind.f.s	un
autre	A.ind.f.s	autre
page	N.C.f.s	page
(	PONCT.W	(
Cible.php	N.P.m.s	<unknown>
)	PONCT.W	)
qui	PRO.rel.f.s	qui
permet	V.P.3.s	permettre
de	P	de
les	CL.obj.3.f.p	la
afficher	VW	afficher
.	PONCT.S	.

(	PONCT.W	(
sans	P	sans
utiliser	VW	utiliser
les	D.def.m.p	le
formulaires	N.C.m.p	formulaire
Utiliser	VW	utiliser
plutôt	ADV.-	plutôt
un	D.ind.m.s	un
lien	N.C.m.s	lien
hypertexte	A.qual.m.s	hypertexte
(	PONCT.W	(
<a	P	ce
href=	N.C.m.s	hrefà
‘	N.C.m.s	‘
nomLien	N.C.m.s	nomlien
’	P+D.def.m.s	c
></a>	N.P.x.s	<unknown>
)	PONCT.W	)
Exercices	N.C.m.p	exercice
Exercice	N.P.m.s	Exercice
2	A.card.m.s	@card@
:	PONCT.W	:
solution	N.C.f.s	solution
Source.php	N.P.x.s	<unknown>
:	PONCT.W	:
<html><body>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$nom="george	A.ind.m.s	änomçogeorge
"	PONCT.W	"
;	PONCT.W	;
$age=21	N.C.m.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	N.C.m.s	>
<a	D.poss.f.s	con
href='pagecibleTransValssForm.php	N.C.m.s	<unknown>
?	PONCT.S	?

nom=<	A.ind.m.s	nomçë
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
$nom	N.C.m.s	<unknown>
?	PONCT.S	?

>&age=<	N.P.x.s	<unknown>
?	PONCT.S	?

php	ET	<unknown>
echo	ET	echo
$age	A.qual.m.s	çage
?	PONCT.S	?

>	N.C.m.s	>
'	PONCT.W	'
>	P	à
Lien	N.P.m.s	Lien
vers	P	vers
cible	N.C.f.s	cible
</a>	N.P.x.s	<unknown>
</body></html>	N.P.x.s	<unknown>
Cible.php	N.P.x.s	<unknown>
:	PONCT.W	:
<html><body>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
nom=$_GET['nom	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
$age=$_GET['age	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
Bonjour	N.P.m.s	Bonjour
'	PONCT.W	'
.	PONCT.S	.

$nom	N.C.m.s	<unknown>
.	PONCT.S	.
'	PONCT.W	'
,	PONCT.W	,
votre	D.poss.f.s	votre
age	N.C.f.s	age
est	V.P.3.s	être
:	PONCT.W	:
'	ADV.-	'
.	PONCT.S	.

$age	N.C.m.s	çage
.'<br>	N.P.x.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	ET	<unknown>
Exercices	N.C.m.p	exercice
Exercice	N.P.m.s	Exercice
3	A.card.m.s	@card@
:	PONCT.W	:
Ecrire	VW	ecrire
un	D.ind.m.s	un
script	N.C.m.s	script
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
de	P	de
protéger	VW	protéger
le	D.def.m.s	le
contenu	N.C.m.s	contenu
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
secrète	A.qual.f.s	secret
avec	P	avec
un	D.ind.m.s	un
login	N.C.m.s	login
et	C.C	et
un	D.ind.m.s	un
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
en	P	en
utilisant	VG	utiliser
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
.	PONCT.S	.

Tout	A.ind.m.s	tout
le	D.def.m.s	le
script	N.C.m.s	script
doit	V.P.3.s	devoir
être	VW	être
écrit	VK.m.s	écrire
dans	P	dans
la	D.def.f.s	le
même	A.qual.f.s	même
page	N.C.f.s	page
.	PONCT.S	.

Exercices	N.C.m.p	exercice
Exercice	N.P.m.s	Exercice
3	A.card.m.s	@card@
:	PONCT.W	:
Solution	N.C.f.s	solution
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
$log="login	N.P.x.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
$pass="motDepass	N.C.m.p	<unknown>
"	PONCT.W	"
;	PONCT.W	;
if(isset($_POST['login'])	ET	ifëissetçëëpost-'login'çà
and	ET	and
isset($_POST['passw']))	N.P.x.s	Issetçëëpostë'passw'ëç
:	PONCT.W	:
$login=$_POST['login	N.P.m.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
$passw=$_POST['passw	N.P.m.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
Endif	N.P.m.s	Endif
;	PONCT.W	;
if($login==$log	ET	ifçäloginçlog
&&	D.card.m.p	<unknown>
$passw==$pass	N.P.x.s	<unknown>
)	PONCT.W	)
:	PONCT.W	:
?	PONCT.S	?

>	N.C.m.s	>
<html><body>	N.P.m.s	<unknown>
***************************CONTENU	N.C.m.s	äëëçäççççëëçççäçääççäëçççç
CONFIDENTIEL************************<br/>	N.P.x.s	çonfidentielçëëçëçëëëëëëçëëëëçëëëëçëëëëë
<b>	N.P.x.s	<unknown>
Code	ET	code
secret	N.C.m.s	secret
:	PONCT.W	:
XXXXXYYEYEYEYE</b>	N.P.m.s	XXxxxyyeyeyeçmë
</body></html>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
else	PPRO.3.f.s	<unknown>
:	PONCT.W	:
?	PONCT.S	?

>	P	à
<html><body>	N.P.m.s	<unknown>
<form	ET	fform
method="post">	N.C.m.p	methodçëpostçë
Login	N.P.m.s	Login
:	PONCT.W	:
<input	ET	çinput
type="text	N.C.m.s	typeëtext
"	PONCT.W	"
name="login	ET	nameçlogin
"	PONCT.W	"
/><br>	ET	<unknown>
Mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
:	PONCT.W	:
<input	ET	çinput
type="password	ET	typeëppassword
"	PONCT.W	"
name="passw	ET	<unknown>
"	PONCT.W	"
><br/>	ET	<unknown>
<input	ET	çinput
type="submit	N.C.m.s	<unknown>
"	PONCT.W	"
value=	A.qual.m.s	<unknown>
"	PONCT.W	"
Envoyer	VW	envoyer
"	PONCT.W	"
/>	D.card.m.p	<unknown>
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
endif	A.qual.m.s	endif
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Visibilité	N.C.f.s	visibilité
des	P+D.def.f.p	du
variables	N.C.f.p	variable
•	N.C.m.s	•
En	P	en
PHP	N.P.m.s	Php
il	CL.suj.3.m.s	il
existe	V.P.3.s	exister
3	D.card.m.p	@card@
niveaux	N.C.m.p	niveau
de	P	de
visibilité	N.C.f.s	visibilité
d'	P	de
une	D.ind.f.s	un
variables	N.C.f.s	variable
selon	P	selon
le	D.def.m.s	le
contexte	N.C.m.s	contexte
:	PONCT.W	:
•	N.C.m.s	•
Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
:	PONCT.W	:
sont	V.P.3.p	être
disponibles	A.qual.f.p	disponible
n'	ADV.neg	ne
importe	V.P.3.s	importer
où	PRO.rel.f.s	où
dans	P	dans
le	D.def.m.s	le
programme	N.C.m.s	programme
.	PONCT.S	.

•	P	à
Les	D.def.f.p	le
variables	N.C.f.p	variable
globales	A.qual.f.p	global
:	PONCT.W	:
ce	CL.suj.3.m.s	ce
sont	V.P.3.p	être
toutes	A.ind.f.p	tout
les	D.def.f.p	le
variables	N.C.f.p	variable
,	PONCT.W	,
tableaux	N.C.m.p	tableau
,	PONCT.W	,
objets	N.C.m.p	objet
et	C.C	et
constantes	A.qual.f.p	constant
que	C.S	que
nous	CL.suj.1.m.p	nous
créons	V.P.1.p	créer
nous	PPRO.1.m.p	nous
-même	CL.refl.1.m.p	même
dans	P	dans
le	D.def.m.s	le
programme	N.C.m.s	programme
principal	A.qual.m.s	principal
.	PONCT.S	.

Ils	CL.suj.3.m.p	il
sont	V.P.3.p	être
généralement	ADV.-	généralement
visible	A.qual.m.s	visible
que	C.S	que
dans	P	dans
le	D.def.m.s	le
programme	N.C.m.s	programme
principal	A.qual.m.s	principal
•	P	à
Les	D.def.f.p	le
variables	N.C.f.p	variable
locales	A.qual.f.p	local
:	PONCT.W	:
ce	CL.suj.3.m.s	ce
sont	V.P.3.p	être
toutes	A.ind.f.p	tout
les	D.def.f.p	le
variables	N.C.f.p	variable
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
(	PONCT.W	(
paramètres	N.C.m.p	paramètre
compris	A.qual.m.p	compris
)	PONCT.W	)
.	PONCT.S	.

Leur	D.poss.f.s	leur
visibilité	N.C.f.s	visibilité
n'	ADV.neg	ne
est	V.P.3.s	être
que	ADV.neg	que
locale	A.qual.f.s	local
,	PONCT.W	,
et	C.C	et
le	D.def.m.s	le
programme	N.C.m.s	programme
principal	A.qual.m.s	principal
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
pas	ADV.neg	pas
agir	VW	agir
sur	P	sur
ces	D.dem.f.p	ce
variables	N.C.f.p	variable
.	PONCT.S	.

Portée	VK.f.s	porter
des	P+D.def.f.p	du
variables	N.C.f.p	variable
globales	A.qual.f.p	global
•	P	à
En	P	en
PHP	N.P.m.s	Php
,	PONCT.W	,
une	D.ind.f.s	un
variable	N.C.f.s	variable
globale	A.qual.f.s	global
peut	V.P.3.s	pouvoir
être	VW	être
utilisée	VK.f.s	utiliser
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
sans	P	sans
la	CL.obj.3.f.s	la
passer	VW	passer
en	P	en
paramètre	N.C.m.s	paramètre
de	P	de
celle	PRO.dem.f.s	celui
-ci	ADV.-	-ci
.	PONCT.S	.

Cela	PRO.dem.m.s	cela
est	V.P.3.s	être
possible	A.qual.m.s	possible
en	P	en
utilisant	VG	utiliser
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	N.C.m.s	«
global	A.qual.m.s	global
»	N.C.m.s	»
.	PONCT.S	.

Cependant	ADV.-	cependant
cette	D.dem.f.s	ce
variable	N.C.f.s	variable
doit	V.P.3.s	devoir
être	VW	être
déclarée	VK.f.s	déclarer
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
chaque	D.ind.f.s	chaque
fonction	N.C.f.s	fonction
afin	A.qual.f.s	afin
de	P	de
pouvoir	VW	pouvoir
être	VW	être
utilisée	VK.f.s	utiliser
dans	P	dans
celle	PRO.dem.f.s	celui
-ci	ADV.-	-ci
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$a	N.P.x.s	<unknown>
=	P	à
1	A.card.m.s	@card@
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
2	N.card.m.s	@card@
;	PONCT.W	;
function	N.C.f.s	function
somme()	N.C.m.s	sommeçà
{	P	à
global	A.qual.m.s	global
$a	N.P.m.s	<unknown>
,	PONCT.W	,
$b	N.C.m.s	bb
;	PONCT.W	;
$b	N.C.m.s	bb
=	V.P.3.s	être
$a	N.P.x.s	<unknown>
+	P	p
$b	N.C.m.s	bb
;	PONCT.W	;
echo	ET	echo
$b	N.C.m.s	bb
;	PONCT.W	;
//	PONCT.W	@card@
dans	P	dans
cet	D.dem.m.s	ce
exemple	N.C.m.s	exemple
,	PONCT.W	,
on	CL.suj.3.m.s	on
a	V.P.3.s	avoir
déclarer	VW	déclarer
$a	N.P.m.s	<unknown>
et	C.C	et
$b	N.C.m.s	bb
avec	P	avec
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	P	à
global	A.qual.m.s	global
»	N.C.m.s	»
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
somme	N.C.f.s	somme
pour	P	pour
qu'	C.S	que
elles	CL.suj.3.f.p	elle
seront	V.F.3.p	être
manipuler	VW	manipuler
par	P	par
celle	PRO.dem.f.s	celui
-ci	ADV.-	-ci
.	PONCT.S	.

}	N.C.m.s	}
•	N.C.m.s	•
Une	D.ind.f.s	un
deuxième	A.ord.f.s	deuxième
méthode	N.C.f.s	méthode
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
variables	N.C.f.p	variable
globales	A.qual.f.p	global
est	V.P.3.s	être
d'	P	de
utiliser	VW	utiliser
la	D.def.f.s	le
variable	N.C.f.s	variable
superglobale	A.qual.f.s	superglobal
$GLOBALS	N.P.x.s	<unknown>
:	PONCT.W	:
Exemple	N.C.m.s	exemple
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$a	N.P.x.s	<unknown>
=	P	à
1	A.card.m.s	@card@
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
2	N.card.m.s	@card@
;	PONCT.W	;
function	N.C.f.s	function
somme()	N.C.m.s	sommeçà
{	P+D.def.m.s	c
$GLOBALS['b	N.P.m.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
=	PONCT.W	=
$GLOBALS['a	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
+	P	p
$GLOBALS['b	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
}	ET	}
echo	ET	echo
$b	N.C.m.s	bb
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	N.C.m.s	>
Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
•	A.qual.f.p	•
Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
sont	V.P.3.p	être
générées	VK.f.p	générer
automatiquement	ADV.-	automatiquement
par	P	par
PHP	N.P.m.s	Php
:	PONCT.W	:
–	C.S	–
el	CL.suj.3.m.s	el
es	CL.suj.3.f.p	es
sont	V.P.3.p	être
disponibles	A.qual.f.p	disponible
quel	A.int.m.s	quel
que	PRO.rel.m.s	que
soit	V.S.3.s	être
le	D.def.m.s	le
contexte	N.C.m.s	contexte
du	P+D.def.m.s	du
script	N.C.m.s	script
même	ADV.-	même
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
d'	P	de
une	D.ind.f.s	un
fonction	N.C.f.s	fonction
sans	P	sans
être	VW	être
passées	VK.f.p	passer
en	P	en
paramètre	N.C.m.s	paramètre
de	P	de
cel	PRO.dem.m.s	celui
e	PONCT.W	e
-ci	ADV.-	-ci
.	PONCT.S	.

–	P	à
el	CL.obj.3.m.s	el
es	CL.suj.3.f.p	es
sont	V.P.3.p	être
écrites	VK.f.p	écrire
en	P	en
majuscules	N.C.m.p	majuscule
et	C.C	et
commencent	V.P.3.p	commencer
,	PONCT.W	,
par	P	par
un	D.ind.m.s	un
underscore	N.C.m.s	underscore
(	PONCT.W	(
_	N.C.m.s	_
)	PONCT.W	)
.	PONCT.S	.

–	P	à
El	CL.suj.3.m.s	el
es	CL.obj.3.m.p	es
sont	V.P.3.p	être
généralement	ADV.-	généralement
des	D.ind.m.p	du
tableaux	N.C.m.p	tableau
associatifs	A.qual.m.p	associatif
.	PONCT.S	.

Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
Notons	V.Y.1.p	noter
:	PONCT.W	:
•	D.card.m.p	•
$GLOBALS	N.P.x.s	<unknown>
:	PONCT.W	:
rassemble	N.C.m.s	rassemble
les	D.def.f.p	le
variables	N.C.f.p	variable
globales	A.qual.f.p	global
.	PONCT.S	.

•	P	à
$_ENV	N.C.m.s	<unknown>
:	PONCT.W	:
ce	CL.suj.3.m.s	ce
sont	V.P.3.p	être
des	D.ind.f.p	du
variables	N.C.f.p	variable
d'	P	de
environnement	N.C.m.s	environnement
toujours	ADV.-	toujours
données	VK.f.p	donner
par	P	par
le	D.def.m.s	le
serveur	N.C.m.s	serveur
.	PONCT.S	.

•	P	à
$_SESSION	N.C.f.s	çäsession
:	PONCT.W	:
se	CL.refl.3.f.p	se
sont	V.P.3.p	être
des	D.ind.f.p	du
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
.	PONCT.S	.

Ces	D.dem.f.p	ce
variables	N.C.f.p	variable
restent	V.P.3.p	rester
stockées	VK.f.p	stocker
sur	P	sur
le	D.def.m.s	le
serveur	N.C.m.s	serveur
le	D.def.m.s	le
temps	N.C.m.s	temps
de	P	de
la	D.def.f.s	le
présence	N.C.f.s	présence
d'	P	de
un	D.ind.m.s	un
visiteur	N.C.m.s	visiteur
.	PONCT.S	.

•	P	à
$_COOKIE	N.C.m.s	cocookie
:	PONCT.W	:
contient	V.P.3.s	contenir
les	D.def.f.p	le
valeurs	N.C.f.p	valeur
des	P+D.def.f.p	du
cookies	N.C.f.p	cookie
enregistrés	VK.m.p	enregistrer
sur	P	sur
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
du	P+D.def.m.s	du
visiteur	N.C.m.s	visiteur
.	PONCT.S	.

•	P	à
$_GET	N.C.m.s	<unknown>
:	PONCT.W	:
contient	V.P.3.s	contenir
les	D.def.f.p	le
données	N.C.f.p	donnée
envoyées	VK.f.p	envoyer
en	P	en
paramètres	N.C.m.p	paramètre
dans	P	dans
l'	D.def.m.s	le
URL	N.P.f.s	Url
.	PONCT.S	.

•	P	à
$_POST	N.P.m.s	<unknown>
:	PONCT.W	:
contient	V.P.3.s	contenir
les	D.def.f.p	le
informations	N.C.f.p	information
qui	PRO.rel.f.p	qui
viennent	V.P.3.p	venir
d'	P	de
être	VW	être
envoyées	VK.f.p	envoyer
par	P	par
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
.	PONCT.S	.

Les	D.def.f.p	le
variables	N.C.f.p	variable
superglobales	A.qual.f.p	superglobal
Exemple	N.C.m.s	exemple
1	A.card.m.s	@card@
:	PONCT.W	:
<html>	ET	<unknown>
<head>	N.P.m.s	<unknown>
<title>La	N.P.m.s	<unknown>
variable	A.qual.m.s	variable
$_SERVER</title>	N.P.x.s	<unknown>
</head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
echo	N.C.m.s	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
en	P	en
cours	N.C.m.s	cours
d'	P	de
exécution	N.C.f.s	exécution
à	P	à
partir	VW	partir
de	P	de
la	D.def.f.s	le
racine:'.$_SERVER['PHP_SELF	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
<br/>	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
echo	N.C.m.s	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
de	P	de
la	D.def.f.s	le
racine	N.C.f.s	racine
du	P+D.def.m.s	du
script	N.C.m.s	script
:	PONCT.W	:
'	PONCT.W	'
.$_SERVER['DOCUMENT_ROOT	N.P.f.s	Erç'
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
<br/>	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
echo	N.C.m.s	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
du	P+D.def.m.s	du
client	N.C.m.s	client
HTML	N.P.m.s	<unknown>
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_SERVER['HTTP_USER_AGENT'].'<br>	N.P.x.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
echo	N.C.m.s	echo
'	PONCT.W	'
Nom	N.P.m.s	Nom
du	P+D.def.m.s	du
serveur	N.C.m.s	serveur
qui	PRO.rel.m.s	qui
exécute	V.P.3.s	exécuter
le	D.def.m.s	le
script	N.C.m.s	script
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_SERVER['SERVER_NAME	N.P.f.s	Éververç'Serçeme
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
<br/><br/>	N.P.x.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
echo	ET	echo
‘	P	à
Votre	D.poss.f.s	votre
adresse	N.C.f.s	adresse
IP	N.P.x.s	Ip
est	V.P.3.s	être
:	PONCT.W	:
‘	N.P.m.s	‘
.	PONCT.S	.

$_SERVER['REMOTE_ADDR	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
;	PONCT.W	;
?	PONCT.S	?

>	P+D.def.m.s	c
</body>	N.P.x.s	<unknown>
</html>	N.P.m.s	<unknown>
Inclusion	N.C.f.s	inclusion
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
L'	D.def.f.s	le
inclusion	N.C.f.s	inclusion
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
PHP	N.P.m.s	Php
sert	V.P.3.s	servir
à	P	à
réutiliser	VW	réutiliser
une	D.ind.f.s	un
partie	N.C.f.s	partie
de	P	de
code	N.C.f.s	code
identique	A.qual.f.s	identique
dans	P	dans
plusieurs	D.ind.m.p	plusieurs
endroits	N.C.m.p	endroit
dans	P	dans
une	D.ind.f.s	un
même	A.qual.f.s	même
page	N.C.f.s	page
ou	C.C	ou
dans	P	dans
des	D.ind.f.p	du
pages	N.C.f.p	page
différentes	A.qual.f.p	différent
.	PONCT.S	.

L'	D.def.f.s	le
inclusion	N.C.f.s	inclusion
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
avec	P	avec
include()	N.C.m.s	includeçà
et	C.C	et
require()	N.C.m.s	requireëë
:	PONCT.W	:
1	N.card.m.s	@card@
.	PONCT.S	.

include()	N.C.m.s	includeçà
:	PONCT.W	:
Cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
renvoie	V.P.3.s	renvoyer
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
de	P	de
type	N.C.m.s	type
WARNING	N.P.x.s	Warning
,	PONCT.W	,
de	P	de
ce	CL.suj.3.m.s	ce
fait	N.C.m.s	fait
si	C.S	si
el	CL.suj.3.m.s	el
e	CL.obj.3.m.s	e
n'	ADV.neg	ne
arrive	V.P.3.s	arriver
pas	ADV.neg	pas
à	P	à
ouvrir	VW	ouvrir
le	D.def.m.s	le
fichier	N.C.m.s	fichier
,	PONCT.W	,
le	D.def.m.s	le
code	N.C.m.s	code
qui	PRO.rel.m.s	qui
suit	V.P.3.s	suivre
sera	V.F.3.s	être
exécuté	VK.m.s	exécuter
.	PONCT.S	.

2	A.card.m.s	@card@
.	PONCT.S	.

require()	V.P.3.s	requirecer
Cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
est	V.P.3.s	être
identique	A.qual.f.s	identique
à	P	à
include	N.C.f.s	include
sauf	P	sauf
que	C.S	que
lorsqu'	C.S	lorsque
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
survient	V.P.3.s	survenir
,	PONCT.W	,
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
de	P	de
type	N.C.m.s	type
FATAL	N.P.m.s	Fatal
stoppera	V.F.3.s	stopper
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
du	P+D.def.m.s	du
script	N.C.m.s	script
.	PONCT.S	.

Inclusion	N.C.f.s	inclusion
des	P+D.def.m.p	du
fichiers	N.C.m.p	fichier
Lorsqu'	C.S	lorsque
un	D.ind.m.s	un
fichier	N.C.m.s	fichier
est	V.P.3.s	être
importé	VK.m.s	importer
,	PONCT.W	,
le	D.def.m.s	le
code	N.C.m.s	code
se	CL.refl.3.m.s	se
trouvant	VG	trouver
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
est	V.P.3.s	être
exécuté	VK.m.s	exécuter
.	PONCT.S	.

Ainsi	ADV.-	ainsi
,	PONCT.W	,
les	D.def.f.p	le
variables	N.C.f.p	variable
,	PONCT.W	,
les	D.def.f.p	le
constantes	N.C.f.p	constante
du	P+D.def.m.s	du
fichier	N.C.m.s	fichier
importé	VK.m.s	importer
peuvent	V.P.3.p	pouvoir
être	VW	être
réutilisés	VK.m.p	réutiliser
dans	P	dans
la	D.def.f.s	le
suite	N.C.f.s	suite
du	P+D.def.m.s	du
programme	N.C.m.s	programme
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
fichier1	A.qual.m.s	<unknown>
.php	N.C.m.s	<unknown>
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
//	PONCT.W	@card@
Définition	N.C.f.s	définition
des	P+D.def.f.p	du
variables	N.C.f.p	variable
$a	N.P.x.s	<unknown>
=	V.P.3.s	être
2	A.card.m.s	@card@
;	PONCT.W	;
$b	N.C.m.s	bb
=	PONCT.W	=
4	N.card.m.s	@card@
;	PONCT.W	;
//	PONCT.W	@card@
Affichage	N.C.m.s	affichage
d'	P	de
un	D.ind.m.s	un
texte	N.C.m.s	texte
echo	A.qual.m.s	echo
'	P	e
Un	D.ind.m.s	un
peu	ADV.-	peu
de	P	de
mathématiques	N.C.f.p	mathématique
...	PONCT.W	<unknown>
'	PONCT.S	'
;	PONCT.W	;
?	PONCT.S	?

>	P	à
fichier2	N.C.f.s	<unknown>
réutilise	V.P.3.s	réutiliser
le	D.def.m.s	le
code	N.C.m.s	code
du	P+D.def.m.s	du
fichier1	N.C.m.s	<unknown>
:	PONCT.W	:
?	PONCT.S	?

php	N.C.m.s	<unknown>
//	PONCT.W	@card@
Importation	N.C.f.s	importation
et	C.C	et
exécution	N.C.f.s	exécution
du	P+D.def.m.s	du
fichier1	A.qual.m.s	<unknown>
require(’fichier1.php')	N.C.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
Calcul	N.P.m.s	Calcul
du	P+D.def.m.s	du
produit	N.C.m.s	produit
$produit	A.qual.m.s	<unknown>
=	P	à
$a	N.P.x.s	<unknown>
*	N.C.m.s	*
$b	N.C.m.s	bb
;	PONCT.W	;
//	PONCT.W	@card@
Affichage	N.C.m.s	affichage
de	P	de
la	D.def.f.s	le
somme	N.C.f.s	somme
echo	N.C.m.s	echo
’	P+D.def.m.s	c
Produit	N.C.m.s	produit
de	P	de
$a	N.P.x.s	<unknown>
et	C.C	et
$b	N.C.m.s	bb
=	PONCT.W	=
'	PONCT.W	'
,	PONCT.W	,
$produit	N.C.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
affichera	V.F.3.s	afficher
8	PRO.card.m.p	@card@
?	PONCT.S	?

>	P	à
Redirection	N.C.f.s	redirection
vers	P	vers
une	D.ind.f.s	un
page	N.C.f.s	page
•	A.qual.f.s	•
En	P	en
PHP	N.C.m.s	php
,	PONCT.W	,
La	D.def.f.s	le
fonction	N.C.f.s	fonction
header()	N.C.m.s	headerçë
se	CL.refl.3.f.s	se
charge	V.P.3.s	charger
d'	P	de
envoyer	VW	envoyer
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
les	D.def.f.p	le
entêtes	N.C.f.p	entête
passés	VK.m.p	passer
en	P	en
paramètre	N.C.m.s	paramètre
.	PONCT.S	.

•	N.C.m.s	•
Pour	P	pour
créer	VW	créer
une	D.ind.f.s	un
redirection	N.C.f.s	redirection
avec	P	avec
PHP	N.P.m.s	Php
,	PONCT.W	,
on	CL.suj.3.m.s	on
utilise	V.P.3.s	utiliser
cette	D.dem.f.s	ce
fonction	N.C.f.s	fonction
pour	P	pour
envoyer	VW	envoyer
des	D.ind.f.p	du
entêtes	N.C.f.p	entête
de	P	de
type	N.C.m.s	type
Location	N.C.f.s	location
(	PONCT.W	(
adresse	N.C.f.s	adresse
)	PONCT.W	)
.	PONCT.S	.

•	P	à
Règle	N.C.f.s	règle
importante	A.qual.f.s	important
:	PONCT.W	:
l'	D.def.m.s	le
appel	N.C.m.s	appel
de	P	de
‘	N.C.m.s	‘
header()	N.C.m.s	headerçë
’	N.P.x.s	’
doit	V.P.3.s	devoir
se	CL.refl.3.m.s	se
faire	VW	faire
avant	P	avant
tout	D.ind.m.s	tout
envoi	N.C.m.s	envoi
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
Redirection	N.C.f.s	redirection
vers	P	vers
une	D.ind.f.s	un
page	N.C.f.s	page
Script	N.P.f.s	Script
de	P	de
redirection	N.C.f.s	redirection
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
header('Location	N.C.f.s	headerç'location
:	PONCT.W	:
http://	ET	<unknown>
www.votresite.com/pageprotegee.php	ET	<unknown>
'	PONCT.W	'
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
Variables	N.C.m.p	variable
de	P	de
session	N.C.f.s	session
•	P	à
Les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
servent	V.P.3.p	servir
à	P	à
stocker	VW	stocker
temporairement	ADV.-	temporairement
des	D.ind.f.p	du
informations	N.C.f.p	information
sur	P	sur
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
dans	P	dans
le	D.def.m.s	le
serveur	N.C.m.s	serveur
.	PONCT.S	.

•	P	à
El	CL.suj.3.m.s	el
es	CL.suj.3.f.p	es
sont	V.P.3.p	être
présentes	A.qual.f.p	présent
dans	P	dans
toutes	A.ind.f.p	tout
les	D.def.f.p	le
page	N.C.f.p	page
de	P	de
votre	D.poss.m.s	votre
site	N.C.m.s	site
pendant	P	pendant
la	D.def.f.s	le
présence	N.C.f.s	présence
d'	P	de
un	D.ind.m.s	un
visiteur	N.C.m.s	visiteur
.	PONCT.S	.

•	P	à
El	CL.suj.3.m.s	el
es	CL.obj.3.m.p	es
sont	V.P.3.p	être
accessible	A.qual.m.s	accessible
via	P	via
la	D.def.f.s	le
superglobale	A.qual.f.s	superglobal
$_SESSION	N.C.f.s	çäsession
variables	A.qual.m.p	variable
de	P	de
session	N.C.f.s	session
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
sessions	N.C.f.p	session
•	N.C.m.s	•
un	D.ind.m.s	un
visiteur	N.C.m.s	visiteur
arrive	V.P.3.s	arriver
sur	P	sur
un	D.ind.m.s	un
site	N.C.m.s	site
.	PONCT.S	.

une	D.ind.f.s	un
session	N.C.f.s	session
est	V.P.3.s	être
créée	VK.f.s	créer
pour	P	pour
lui	PPRO.3.m.s	lui
.	PONCT.S	.

PHP	N.P.m.s	Php
génère	V.P.3.s	générer
un	D.ind.m.s	un
identifiant	N.C.m.s	identifiant
unique	A.qual.m.s	unique
pour	P	pour
lui	PPRO.3.m.s	lui
,	PONCT.W	,
appelé	VK.m.s	appeler
‘	P	à
session	N.C.f.s	session
ID	N.P.x.s	Id
’	N.C.m.s	’
.	PONCT.S	.

•	P	à
une	D.ind.f.s	un
fois	N.C.f.s	foi
la	D.def.f.s	le
session	N.C.f.s	session
est	V.P.3.s	être
démarrée	VK.f.s	démarrer
automatiquement	ADV.-	automatiquement
ou	C.C	ou
avec	P	avec
session_start()	N.C.f.s	sessionästartëë
,	PONCT.W	,
une	D.ind.f.s	un
infinité	N.C.f.s	infinité
de	P	de
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
peuvent	V.P.3.p	pouvoir
être	VW	être
créées	VK.f.p	créer
selon	P	selon
le	D.def.m.s	le
besoin	N.C.m.s	besoin
.	PONCT.S	.

•	P	à
La	D.def.f.s	le
session	N.C.f.s	session
sera	V.F.3.s	être
fermée	VK.f.s	fermer
par	P	par
session_destroy()	N.P.x.s	Sessionädestroyçë
si	C.S	si
le	D.def.m.s	le
visiteur	N.C.m.s	visiteur
ne	ADV.neg	ne
charge	V.P.3.s	charger
plus	ADV.neg	plus
de	D.ind.f.s	de
page	N.C.f.s	page
dans	P	dans
le	D.def.m.s	le
site	N.C.m.s	site
pendant	P	pendant
quelques	D.ind.f.p	quelque
minutes	N.C.f.p	minute
ou	C.C	ou
si	C.S	si
le	D.def.m.s	le
visiteur	N.C.m.s	visiteur
souhaite	V.P.3.s	souhaiter
se	CL.refl.3.m.s	se
déconnecter	VW	déconnecter
.	PONCT.S	.

Variables	A.qual.m.p	variable
de	P	de
session	N.C.f.s	session
Pour	P	pour
que	C.S	que
les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
sessions	N.C.f.p	session
soient	V.S.3.p	être
accessibles	A.qual.f.p	accessible
dans	P	dans
toutes	A.ind.f.p	tout
les	D.def.f.p	le
pages	N.C.f.p	page
d'	P	de
un	D.ind.m.s	un
site	N.C.m.s	site
web	N.C.m.s	web
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
appeler	VW	appeler
session_start()	N.C.f.s	sessionästartëë
sur	P	sur
chacune	PRO.ind.f.s	chacun
de	P	de
ces	D.dem.f.p	ce
pages	N.C.f.p	page
avant	P	avant
décrire	VW	décrire
le	D.def.m.s	le
moindre	A.qual.m.s	moindre
code	N.C.m.s	code
HTML	N.P.m.s	<unknown>
(	PONCT.W	(
avant	P	avant
même	ADV.-	même
<	I	à
!	PONCT.S	!

doctype>	N.C.m.p	doctypeë
.	PONCT.S	.

Variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
•	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
//	PONCT.W	@card@
démarer	VW	démarer
une	D.ind.f.s	un
session	N.C.f.s	session
session_start()	N.C.f.s	sessionästartëë
;	PONCT.W	;
echo	ET	echo
'	PONCT.W	'
Bienvenue	N.P.f.s	Bienvenue
à	P	à
la	D.def.f.s	le
page	N.C.f.s	page
numéro	N.C.m.s	numéro
1	D.card.m.s	@card@
’	N.C.m.s	’
;	PONCT.W	;
//	PONCT.W	@card@
On	CL.suj.3.m.s	on
s'	CL.refl.3.m.s	se
amuse	V.P.3.s	amuser
à	P	à
créer	VW	créer
quelques	D.ind.f.p	quelque
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
dans	P	dans
$_SESSION	N.C.f.s	çäsession
$_SESSION['prenom	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
=	PONCT.W	=
'	PONCT.W	'
Jean	N.P.m.s	Jean
'	PONCT.W	'
;	PONCT.W	;
$_SESSION['motPass	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
=	PONCT.W	=
'	PONCT.W	'
MotDePasse	N.P.m.s	Motdepasse
’	N.C.m.s	’
;	PONCT.W	;
?	PONCT.S	?

>	P	à
<html>	N.C.m.p	<unknown>
<head><title>Les	N.P.x.s	<unknown>
sessions	N.C.f.p	session
</title></head>	N.P.x.s	<unknown>
<body>	N.P.m.s	<unknown>
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if(isset($_SESSION['prenom']))	N.C.f.p	ifçissetçç-session-''prepremçë
{	P	à
echo	ET	echo
"	PONCT.W	"
<p>	ET	<unknown>
salut	N.C.m.s	salut
je	CL.suj.1.m.s	je
sais	V.P.1.s	savoir
qui	PRO.int.m.s	qui
es	PPRO.3.m.p	es
-tu	PRO.ind.m.p	tu
,	PONCT.W	,
tu	CL.suj.2.m.s	tu
t'	D.ind.m.s	te
appel	N.C.m.s	appel
es	P+D.def.m.p	es
"	PONCT.W	"
.	PONCT.S	.

$_SESSION['prenom	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

"	PONCT.W	"
</p>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
<p>	N.P.x.s	<unknown>
<a	N.P.x.s	<unknown>
href=\"fichierUtilisantVariablesSession.php\">cliquer	VW	hrefççffichierutilicliquer
ici	ADV.-	ici
SVP	N.P.m.s	Svp
</a></p>	N.P.x.s	<unknown>
»	N.C.m.s	»
;	PONCT.W	;
}	P	à
else	PPRO.3.f.s	<unknown>
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
les	D.def.f.p	le
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
ne	ADV.neg	ne
sont	V.P.3.p	être
pas	ADV.neg	pas
déclarées<br/>	A.qual.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
</body>	N.P.x.s	<unknown>
</html>	N.P.x.s	<unknown>
Cookies	N.P.x.s	Cookies
•	P	à
Un	D.ind.m.s	un
cookie	N.C.m.s	cookie
est	V.P.3.s	être
un	D.ind.m.s	un
mécanisme	N.C.m.s	mécanisme
pour	P	pour
stocker	VW	stocker
des	D.ind.f.p	du
informations	N.C.f.p	information
sur	P	sur
les	D.def.m.p	le
visiteurs	N.C.m.p	visiteur
afin	ADV.-	afin
de	P	de
l'	CL.obj.3.m.s	le
identifier	VW	identifier
plus	ADV.-	plus
tard	ADV.-	tard
.	PONCT.S	.

•	P	à
Contrairement	ADV.-	contrairement
aux	P+D.def.f.p	au
variables	N.C.f.p	variable
de	P	de
session	N.C.f.s	session
,	PONCT.W	,
les	D.def.f.p	le
cookies	N.C.f.p	cookie
sont	V.P.3.p	être
des	D.ind.m.p	du
petits	A.qual.m.p	petit
fichiers	N.C.m.p	fichier
stockés	VK.m.p	stocker
sur	P	sur
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
de	P	de
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
pour	P	pour
une	D.ind.f.s	un
durée	N.C.f.s	durée
de	P	de
vie	N.C.f.s	vie
que	PRO.rel.f.s	que
nous	CL.suj.1.m.p	nous
pouvons	V.P.1.p	pouvoir
définir	VW	définir
.	PONCT.S	.

•	P	à
Les	D.def.f.p	le
cookies	N.C.f.p	cookie
sont	V.P.3.p	être
accessibles	A.qual.f.p	accessible
via	P	via
la	D.def.f.s	le
superglobale	A.qual.f.s	superglobal
$_COOKIE	N.P.x.s	<unknown>
.	PONCT.S	.

Cookies	N.C.f.p	cookie
•	P	à
la	D.def.f.s	le
fonction	N.C.f.s	fonction
setcookie()	N.P.m.s	Setcookieëë
permet	V.P.3.s	permettre
de	P	de
définir	VW	définir
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
qui	PRO.rel.m.s	qui
sera	V.F.3.s	être
envoyé	VK.m.s	envoyer
avec	P	avec
le	D.def.m.s	le
reste	N.C.m.s	reste
des	P+D.def.f.p	du
en-têtes	N.C.f.p	en-tête
HTTP	N.P.m.s	Http
.	PONCT.S	.

àLes	D.ind.f.p	àle
cookies	N.C.f.p	cookie
font	V.P.3.p	faire
partie	N.C.f.s	partie
des	P+D.def.f.p	du
en-têtes	N.C.f.p	en-tête
HTTP	N.P.m.s	Http
,	PONCT.W	,
ce	PRO.dem.m.s	ce
qui	PRO.rel.m.s	qui
impose	V.P.3.s	imposer
que	C.S	que
setcookie()	N.C.m.s	setcookieëë
soit	V.S.3.s	être
appelée	VK.f.s	appeler
avant	P	avant
tout	D.ind.m.s	tout
affichage	N.C.m.s	affichage
de	P	de
texte	N.C.m.s	texte
et	C.C	et
avant	P	avant
même	ADV.-	même
<	I	à
!	PONCT.S	!

doctype	N.C.m.s	doctype
>	N.C.m.s	>
.	PONCT.S	.

La	D.def.f.s	le
fonction	N.C.f.s	fonction
setcookie()	N.P.m.s	Setcookieëë
peut	V.P.3.s	pouvoir
prendre	VW	prendre
jusqu'	P	jusque
à	P	à
7	D.card.m.p	@card@
paramètres	N.C.m.p	paramètre
.	PONCT.S	.

Seul	A.qual.m.s	seul
le	D.def.m.s	le
premier	A.ord.m.s	premier
est	V.P.3.s	être
obligatoire	A.qual.m.s	obligatoire
car	C.C	car
il	CL.suj.3.m.s	il
définit	V.P.3.s	définir
le	D.def.m.s	le
nom	N.C.m.s	nom
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
,	PONCT.W	,
le	D.def.m.s	le
deuxième	A.ord.m.s	deuxième
définit	V.P.3.s	définir
la	D.def.f.s	le
valeur	N.C.f.s	valeur
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
et	C.C	et
le	D.def.m.s	le
troisième	A.ord.m.s	troisième
définit	V.P.3.s	définir
la	D.def.f.s	le
durée	N.C.f.s	durée
de	P	de
vie	N.C.f.s	vie
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
en	P	en
seconde	A.ord.f.s	second
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
setcookie(’nom	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
‘	P	à
nomUtilisateur	N.C.m.s	nomutilisateur
’	N.C.m.s	’
,	PONCT.W	,
time()+3600*24)	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
$_COOKIE[‘nom	N.P.x.s	<unknown>
’	N.C.m.s	’
]	PONCT.W	]
;	PONCT.W	;
//	PONCT.W	@card@
affichage	V.P.3.s	affichager
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
.	PONCT.S	.

•	P	à
La	D.def.f.s	le
fonction	N.C.f.s	fonction
setrawcookie()	N.C.m.s	setrawcookieëë
est	V.P.3.s	être
exactement	ADV.-	exactement
la	D.def.f.s	le
même	A.ind.f.s	même
que	C.S	que
setcookie()	N.C.m.s	setcookieëë
excepté	VK.m.s	excepter
que	C.S	que
la	D.def.f.s	le
valeur	N.C.f.s	valeur
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
ne	ADV.neg	ne
sera	V.F.3.s	être
pas	ADV.neg	pas
automatiquement	ADV.-	automatiquement
encodée	VK.f.s	encoder
URL	D.ind.m.s	url
lors	N.C.m.s	lors
de	P	de
l'	D.def.m.s	le
envoi	N.C.m.s	envoi
au	P+D.def.m.s	au
navigateur	N.C.m.s	navigateur
.	PONCT.S	.

•	N.C.m.s	•
Pour	P	pour
détruire	VW	détruire
un	D.ind.m.s	un
cookie	N.C.m.s	cookie
:	PONCT.W	:
appeler	VW	appeler
setCookie()	N.C.f.s	<unknown>
avec	P	avec
une	D.ind.f.s	un
date	N.C.f.s	date
d'	P	de
expiration	N.C.f.s	expiration
dans	P	dans
le	D.def.m.s	le
passé	N.C.m.s	passé
:	PONCT.W	:
•	D.card.m.s	•
Ex	N.P.m.s	Ex
:	PONCT.W	:
setcookie(	ET	<unknown>
"	PONCT.W	"
Nomcookie	N.P.f.s	Nomcookie
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
valeurCookie	N.C.f.s	valeurcookie
"	PONCT.W	"
,	PONCT.W	,
time()-3600)	N.C.m.s	<unknown>
;	PONCT.W	;
Cookies	N.P.x.s	Cookies
•	P+D.def.m.s	c
Exemple	N.C.m.s	exemple
de	P	de
cookie	N.C.f.s	cookie
sous	P	sous
forme	N.C.f.s	forme
de	P	de
tableau	N.C.m.s	tableau
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
setcookie("cookie[three	A.qual.m.s	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookiethree	N.C.m.s	<unknown>
»	N.C.m.s	»
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
setcookie("cookie[two	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookietwo	ET	cookietwo
»	N.C.m.s	»
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
setcookie("cookie[one	ET	<unknown>
]	PONCT.W	]
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
cookieone	N.C.m.s	<unknown>
»	N.C.m.s	»
,	PONCT.W	,
time()+3600*1)	N.C.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
l'	D.def.m.s	le
affichage	N.C.m.s	affichage
de	P	de
ces	D.dem.f.p	ce
cookies	N.C.f.p	cookie
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
if	A.qual.m.s	if
(isset($_COOKIE['cookie']))	N.C.m.s	çissetçëcookieçookie'çe
{	N.C.m.s	{
//	PONCT.W	@card@
exemple	N.C.m.s	exemple
d'	P	de
appel	N.C.m.s	appel
du	P+D.def.m.s	du
cookie	N.C.m.s	cookie
:	PONCT.W	:
echo	ET	echo
'	PONCT.W	'
le	D.def.m.s	le
cokie	N.C.m.s	cokie
two	ET	two
est	V.P.3.s	être
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$_COOKIE['cookie']['two	N.P.x.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
.	PONCT.S	.

'	PONCT.W	'
sinon	C.C	sinon
on	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
les	CL.obj.3.m.p	le
parcourir	VW	parcourir
avec	P	avec
foreach	N.C.m.s	foreach
comme	P	comme
suit	V.P.3.s	suivre
:	PONCT.W	:
<br/>	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
foreach	N.C.m.s	foreach
(	PONCT.W	(
$_COOKIE['cookie	N.P.f.s	<unknown>
'	PONCT.W	'
]	PONCT.W	]
as	ET	as
$name	N.C.f.s	<unknown>
=>	N.P.x.s	<unknown>
$value	N.C.f.s	çvalue
)	PONCT.W	)
{	P	à
$name	N.C.m.s	<unknown>
=	PONCT.W	=
htmlspecialchars($name)	N.C.m.s	<unknown>
;	PONCT.W	;
$value	N.C.f.s	çvalue
=	PONCT.W	=
htmlspecialchars($value)	N.C.m.s	<unknown>
;	PONCT.W	;
echo	ET	echo
"	PONCT.W	"
$name	N.P.f.s	<unknown>
:	PONCT.W	:
$value	N.C.f.s	çvalue
<br	N.P.m.s	<unknown>
/>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
}	N.C.m.s	}
?	PONCT.S	?

>	P	à
Exercice	N.P.m.s	Exercice
Ecrire	VW	ecrire
un	D.ind.m.s	un
script	N.C.m.s	script
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
de	P	de
protéger	VW	protéger
le	D.def.m.s	le
contenu	N.C.m.s	contenu
d'	P	de
une	D.ind.f.s	un
page	N.C.f.s	page
secrète	A.qual.f.s	secret
avec	P	avec
un	D.ind.m.s	un
login	N.C.m.s	login
et	C.C	et
un	D.ind.m.s	un
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
en	P	en
utilisant	VG	utiliser
un	D.ind.m.s	un
formulaire	N.C.m.s	formulaire
.	PONCT.S	.

Note	N.P.m.s	Note
:	PONCT.W	:
1-écrire	VW	<unknown>
une	D.ind.f.s	un
page	N.C.f.s	page
authentification.php	ADV.-	<unknown>
contenant	VG	contenir
un	D.ind.m.s	un
formulaire	A.qual.m.s	formulaire
login/mot	N.C.m.s	<unknown>
de	P	de
passe	N.C.f.s	passe
.	PONCT.S	.

Et	C.C	et
un	D.ind.m.s	un
lien	N.C.m.s	lien
hypertexte	A.qual.m.s	hypertexte
permettant	VG	permettre
d'	P	de
afficher	VW	afficher
la	D.def.f.s	le
page	N.C.f.s	page
secrète	A.qual.f.s	secret
si	C.S	si
une	D.ind.f.s	un
variable	N.C.f.s	variable
de	P	de
session	N.C.f.s	session
‘	P	à
login	N.C.m.s	login
’	N.C.m.s	’
a	V.P.3.s	avoir
été	VK.m.s	être
déjà	ADV.-	déjà
créée	VK.f.s	créer
.	PONCT.S	.

Manipuler	VW	manipuler
sur	P	sur
la	D.def.f.s	le
même	A.qual.f.s	même
page	N.C.f.s	page
les	D.def.f.p	le
données	N.C.f.p	donnée
du	P+D.def.m.s	du
formulaire	N.C.m.s	formulaire
comme	C.C	comme
suit	V.P.3.s	suivre
:	PONCT.W	:
2-Diriger	VW	<unknown>
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
vers	P	vers
pageSecret1.php	N.C.m.s	<unknown>
contenant	A.qual.m.s	contenant
code	N.C.m.s	code
secret	N.C.m.s	secret
:	PONCT.W	:
ZZZZZZZZZZ	N.P.m.s	Zzzzzz
si	C.S	si
login==‘login1	N.C.f.s	<unknown>
’	N.C.m.s	’
et	C.C	et
pass==‘pass1	N.P.x.s	<unknown>
’	N.C.m.s	’
.	PONCT.S	.

Au	P+D.def.m.s	au
début	N.C.m.s	début
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
vérifier	VW	vérifier
que	C.S	que
login==login1	N.C.f.s	<unknown>
et	C.C	et
afficher	VW	afficher
«	P	à
bonjour	N.C.m.s	bonjour
M/Mme	N.P.x.s	Mmmme
valeurdelogin	N.C.m.s	valeurdelogin
»	P	à
Afficher	VW	afficher
le	D.def.m.s	le
code	N.C.m.s	code
secret	A.qual.m.s	secret
Créer	VW	créer
par	P	par
la	D.def.f.s	le
suite	N.C.f.s	suite
un	D.ind.m.s	un
lien	N.C.m.s	lien
vers	P	vers
page	N.C.f.s	page
précédente	A.qual.f.s	précédent
Un	D.ind.m.s	un
lien	N.C.m.s	lien
de	P	de
déconnexion	N.C.f.s	déconnexion
permettant	VG	permettre
de	P	de
rester	VW	rester
sur	P	sur
la	D.def.f.s	le
même	A.ind.f.s	même
page	N.C.f.s	page
tout	ADV.-	tout
en	P	en
créant	VG	créer
une	D.ind.f.s	un
variable	N.C.f.s	variable
deconnecter=	ADV.-	deconnecterà
«	P	à
yes	N.C.m.p	ye
»	N.C.m.p	»
.	PONCT.S	.

3-Diriger	VW	<unknown>
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
vers	P	vers
pageSecret2.php	N.C.m.s	<unknown>
contenant	A.qual.m.s	contenant
code	N.C.m.s	code
secret	N.C.m.s	secret
:	PONCT.W	:
ZZZZZZZZZZ	N.P.m.s	Zzzzzz
si	ADV.-	si
login==‘login2	N.C.f.s	<unknown>
’	P	à
et	C.C	et
pass==‘pass2	N.P.x.s	<unknown>
’	N.C.m.s	’
.	PONCT.S	.

Au	P+D.def.m.s	au
début	N.C.m.s	début
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
vérifier	VW	vérifier
que	C.S	que
login==login2	N.C.f.s	<unknown>
et	C.C	et
afficher	VW	afficher
«	P	à
bonjour	N.C.m.s	bonjour
M/Mme	N.P.x.s	Mmmme
valeurdelogin	N.C.m.s	valeurdelogin
»	P	à
Afficher	VW	afficher
le	D.def.m.s	le
code	N.C.m.s	code
secret	A.qual.m.s	secret
Créer	VW	créer
par	P	par
la	D.def.f.s	le
suite	N.C.f.s	suite
un	D.ind.m.s	un
lien	N.C.m.s	lien
vers	P	vers
page	N.C.f.s	page
précédente	A.qual.f.s	précédent
Un	D.ind.m.s	un
lien	N.C.m.s	lien
de	P	de
déconnexion	N.C.f.s	déconnexion
permettant	VG	permettre
de	P	de
rester	VW	rester
sur	P	sur
la	D.def.f.s	le
même	A.ind.f.s	même
page	N.C.f.s	page
tout	ADV.-	tout
en	P	en
créant	VG	créer
une	D.ind.f.s	un
variable	N.C.f.s	variable
deconnecter=	ADV.-	deconnecterà
«	P	à
yes	N.C.m.p	ye
»	N.C.m.p	»
.	PONCT.S	.

4-Sinon	C.C	<unknown>
afficher	VW	afficher
sur	P	sur
la	D.def.f.s	le
même	A.qual.f.s	même
page	N.C.f.s	page
un	D.ind.m.s	un
message	N.C.m.s	message
«	A.qual.m.s	«
Veuil	N.P.m.s	Veuil
ez	CL.obj.3.m.s	ez
entrer	VW	entrer
un	D.ind.m.s	un
login	N.C.m.s	login
et	C.C	et
mot	N.C.m.s	mot
de	P	de
passe	N.C.f.s	passe
valide	A.qual.f.s	valide
»	N.P.x.s	»
et	C.C	et
tout	ADV.-	tout
en	P	en
laissant	VG	laisser
le	D.def.m.s	le
formulaire	N.C.m.s	formulaire
visible	A.qual.m.s	visible
afin	N.C.m.s	afin
de	P	de
permettre	VW	permettre
à	P	à
l'	D.def.m.s	le
utilisateur	N.C.m.s	utilisateur
de	P	de
s'	CL.refl.3.m.s	se
authentifier	VW	authentifier
.	PONCT.S	.

Programmation	N.C.f.s	programmation
Orienté	N.P.m.s	Orienté
Objet	N.P.m.s	Objet
(	PONCT.W	(
POO	N.P.m.s	Poo
)	PONCT.W	)
«	P	à
Classe	N.P.m.s	Classe
et	C.C	et
Objet	N.P.m.s	Objet
»	N.C.m.s	»
•	N.C.m.s	•
Une	D.ind.f.s	un
classe	N.C.f.s	classe
permet	V.P.3.s	permettre
la	D.def.f.s	le
définition	N.C.f.s	définition
d'	P	de
un	D.ind.m.s	un
nouveau	A.qual.m.s	nouveau
type	N.C.m.s	type
de	P	de
variable	N.C.f.s	variable
qui	PRO.rel.m.s	qui
rassemble	V.P.3.s	rassembler
plusieurs	D.ind.m.p	plusieurs
attributs	N.C.m.p	attribut
.	PONCT.S	.

•	P	à
El	CL.suj.3.m.s	el
e	CL.obj.3.m.s	e
permet	V.P.3.s	permettre
également	ADV.-	également
la	D.def.f.s	le
définition	N.C.f.s	définition
de	P	de
fonctions	N.C.f.p	fonction
manipulant	VG	manipuler
ces	D.dem.m.p	ce
attributs	N.C.m.p	attribut
,	PONCT.W	,
en	P	en
POO	N.P.f.s	Poo
,	PONCT.W	,
ces	D.dem.f.p	ce
fonctions	N.C.f.p	fonction
s'	CL.refl.3.f.p	se
appel	N.C.m.s	appel
ent	V.P.3.s	être
des	P+D.def.f.p	du
‘	A.card.f.p	‘
méthodes	N.C.f.p	méthode
’	N.C.m.s	’
.	PONCT.S	.

•	N.C.m.s	•
Un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
une	D.ind.f.s	un
instance	N.C.f.s	instance
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
.	PONCT.S	.

Un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
alors	ADV.-	alors
assimilé	VK.m.s	assimiler
à	P	à
une	D.ind.f.s	un
variable	N.C.f.s	variable
et	C.C	et
sa	D.poss.f.s	son
classe	N.C.f.s	classe
au	P+D.def.m.s	au
type	N.C.m.s	type
de	P	de
cet	D.dem.m.s	ce
objet	N.C.m.s	objet
.	PONCT.S	.

Programmation	N.C.f.s	programmation
Orienté	N.P.m.s	Orienté
Objet	N.P.m.s	Objet
(	PONCT.W	(
POO	N.P.m.s	Poo
)	PONCT.W	)
«	P	à
concepts	N.C.m.p	concept
de	P	de
base	N.C.f.s	base
»	P	à
La	D.def.f.s	le
POO	N.P.f.s	Poo
a	V.P.3.s	avoir
deux	D.card.m.p	deux
buts	N.C.m.p	but
:	PONCT.W	:
•	P	à
faciliter	VW	faciliter
la	D.def.f.s	le
réutilisation	N.C.f.s	réutilisation
du	P+D.def.m.s	du
code	N.C.m.s	code
que	PRO.rel.m.s	que
vous	CL.suj.2.m.p	vous
avez	V.P.2.p	avoir
déjà	ADV.-	déjà
écrit	VK.m.s	écrire
grâce	N.C.f.s	grâce
à	P	à
l'	D.def.m.s	le
héritage	N.C.m.s	héritage
.	PONCT.S	.

–	P	à
L'	D.def.m.s	le
héritage	N.C.m.s	héritage
permet	V.P.3.s	permettre
,	PONCT.W	,
à	P	à
partir	VW	partir
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
déjà	ADV.-	déjà
existante	A.qual.f.s	existant
,	PONCT.W	,
d'	P	de
en	CL.obj.3.m.s	en
créer	VW	créer
une	D.ind.f.s	un
nouvel	A.qual.m.s	nouveau
e	PONCT.W	e
qui	PRO.rel.f.s	qui
reprendra	V.F.3.s	reprendre
ses	D.poss.f.p	son
caractéristiques	N.C.f.p	caractéristique
et	C.C	et
de	P	de
les	CL.obj.3.m.p	le
adapter	VW	adapter
aux	P+D.def.m.p	au
besoins	N.C.m.p	besoin
sans	P	sans
modifier	VW	modifier
la	D.def.f.s	le
classe	N.C.f.s	classe
de	P	de
base	N.C.f.s	base
.	PONCT.S	.

–	P	à
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
alors	ADV.-	alors
de	P	de
redéfinir	VW	redéfinir
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
dans	P	dans
des	D.ind.f.p	du
classes	N.C.f.p	classe
héritant	VG	hériter
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
de	P	de
base	N.C.f.s	base
sauf	P	sauf
si	C.S	si
cette	D.dem.f.s	ce
méthode	N.C.f.s	méthode
a	V.P.3.s	avoir
été	VK.m.s	être
défini	VK.m.s	définir
comme	P	comme
final	A.qual.m.s	final
.	PONCT.S	.

L'	D.def.m.s	le
appel	N.C.m.s	appel
de	P	de
la	D.def.f.s	le
méthode	N.C.f.s	méthode
d'	P	de
un	D.ind.m.s	un
objet	N.C.m.s	objet
est	V.P.3.s	être
possible	A.qual.m.s	possible
sans	P	sans
se	CL.refl.3.m.s	se
soucier	VW	soucier
de	P	de
son	D.poss.m.s	son
type	N.C.m.s	type
intrinsèque	A.qual.m.s	intrinsèque
:	PONCT.W	:
il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
agit	V.P.3.s	agir
du	P+D.def.m.s	du
polymorphisme	N.C.m.s	polymorphisme
.	PONCT.S	.

Ø	P	à
Le	D.def.m.s	le
polymorphisme	N.C.m.s	polymorphisme
traite	V.P.3.s	traiter
de	P	de
la	D.def.f.s	le
capacité	N.C.f.s	capacité
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
à	P	à
posséder	VW	posséder
plusieurs	D.ind.f.p	plusieurs
formes	N.C.f.p	forme
.	PONCT.S	.

•	P	à
l'	D.def.f.s	le
encapsulation	N.C.f.s	encapsulation
des	P+D.def.f.p	du
données	N.C.f.p	donnée
et	C.C	et
les	D.def.m.p	le
traitements	N.C.m.p	traitement
correspondants	A.qual.m.p	correspondant
.	PONCT.S	.

–	P	à
L'	D.def.f.s	le
encapsulation	N.C.f.s	encapsulation
permet	V.P.3.s	permettre
de	P	de
regrouper	VW	regrouper
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
d'	P	de
attribut	N.C.m.s	attribut
avec	P	avec
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
de	P	de
méthodes	N.C.f.p	méthode
en	P	en
une	D.ind.f.s	un
classe	N.C.f.s	classe
permettant	VG	permettre
de	P	de
les	CL.obj.3.m.p	le
manipuler	VW	manipuler
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	N.C.m.s	«
syntaxe	N.C.m.s	syntaxe
de	P	de
base	N.C.f.s	base
»	N.C.m.s	»
Une	D.ind.f.s	un
définition	N.C.f.s	définition
de	P	de
classe	N.C.f.s	classe
commence	V.P.3.s	commencer
par	P	par
le	D.def.m.s	le
mot-clé	N.C.m.s	mot-clé
«	P	à
class	N.C.m.p	class
»	N.C.m.s	»
,	PONCT.W	,
suivi	VK.m.s	suivre
du	P+D.def.m.s	du
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
.	PONCT.S	.

A	P	à
la	D.def.f.s	le
création	N.C.f.s	création
(	PONCT.W	(
instanciation	N.C.f.s	instanciation
)	PONCT.W	)
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
,	PONCT.W	,
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
portant	VG	porter
le	D.def.m.s	le
même	A.ind.m.s	même
nom	N.C.m.s	nom
que	C.S	que
la	D.def.f.s	le
classe	N.C.f.s	classe
est	V.P.3.s	être
appelée	VK.f.s	appeler
automatiquement	ADV.-	automatiquement
:	PONCT.W	:
c'	CL.suj.3.m.s	ce
est	V.P.3.s	être
le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
.	PONCT.S	.

Ce	D.dem.m.s	ce
dernier	A.qual.m.s	dernier
est	V.P.3.s	être
définit	VK.m.s	définir
par	P	par
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	P	à
__construct	N.P.x.s	<unknown>
»	N.C.m.s	»
.	PONCT.S	.

Lors	ADV.-	lors
de	P	de
la	D.def.f.s	le
définition	N.C.f.s	définition
des	P+D.def.f.p	du
méthodes	N.C.f.p	méthode
de	P	de
classes	N.C.f.p	classe
,	PONCT.W	,
les	D.def.m.p	le
attributs	N.C.m.p	attribut
non	ADV.neg	non
statiques	A.qual.m.p	statique
sont	V.P.3.p	être
appelés	VK.m.p	appeler
par	P	par
l'	D.def.m.s	le
operateur	N.C.m.s	operateur
d'	P	de
objet	N.C.m.s	objet
$this->	N.P.m.s	<unknown>
nomDePropriété	N.C.f.s	<unknown>
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
class	ET	class
Personne	PRO.neg.m.s	personne
{	N.C.m.s	{
//	PONCT.W	@card@
déclaration	N.C.f.s	déclaration
des	P+D.def.m.p	du
attributs	N.C.m.p	attribut
public	A.qual.m.s	public
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$age	N.C.m.s	çage
;	PONCT.W	;
//	PONCT.W	@card@
déclaration	N.C.f.s	déclaration
du	P+D.def.m.s	du
constructeur	N.C.m.s	constructeur
public	A.qual.m.s	public
function	N.C.f.s	function
__construct	N.P.x.s	<unknown>
(	PONCT.W	(
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$age){	N.P.f.s	<unknown>
$this->nom=$nom	N.P.x.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
$this	N.P.m.s	<unknown>
représente	V.P.3.s	représenter
l'	D.def.m.s	le
objet	N.C.m.s	objet
que	PRO.rel.m.s	que
nous	CL.suj.1.m.p	nous
sommes	V.P.1.p	être
entrain	A.qual.m.s	entrain
de	P	de
définir	VW	définir
.	PONCT.S	.

$this->age=$age	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
//	PONCT.W	@card@
déclaration	N.C.f.s	déclaration
des	P+D.def.f.p	du
méthodes	N.C.f.p	méthode
public	A.qual.m.s	public
function	N.C.f.s	function
affiche	A.qual.f.s	affiche
(	PONCT.W	(
)	PONCT.W	)
{	P	à
echo	ET	echo
$this->nom	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
$this->age	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
}	N.C.m.s	}
POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	P	à
Visibilité	N.C.f.s	visibilité
d'	P	de
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
ou	C.C	ou
d'	P	de
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
»	N.C.m.s	»
•	N.C.m.s	•
«	N.C.m.s	«
public	N.C.m.s	public
»	N.C.m.s	»
:	PONCT.W	:
si	C.S	si
un	D.ind.m.s	un
attribut	N.C.m.s	attribut
ou	C.C	ou
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
est	V.P.3.s	être
public	A.qual.f.s	public
,	PONCT.W	,
alors	ADV.-	alors
on	CL.suj.3.m.s	on
pourra	V.F.3.s	pouvoir
y	CL.obj.3.m.s	y
avoir	VW	avoir
accès	N.C.m.s	accès
depuis	P	depuis
n'	ADV.neg	ne
importe	V.P.3.s	importer
où	PRO.rel.f.s	où
.	PONCT.S	.

•	N.C.m.s	•
«	P	à
private	A.qual.f.s	privat
»	N.C.m.s	»
:	PONCT.W	:
impose	V.P.3.s	imposer
quelques	D.ind.f.p	quelque
restrictions	N.C.f.p	restriction
.	PONCT.S	.

L'	D.def.m.s	le
accès	N.C.m.s	accès
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
et	C.C	et
méthodes	N.C.f.p	méthode
est	V.P.3.s	être
seulement	ADV.-	seulement
possible	A.qual.m.s	possible
depuis	P	depuis
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
.	PONCT.S	.

Ø	P	à
Ne	ADV.-	ne
mettez	V.Y.2.p	mettre
jamais	ADV.neg	jamais
le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
avec	P	avec
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
visibilité	N.C.f.s	visibilité
private	A.qual.f.s	privat
sinon	ADV.-	sinon
,	PONCT.W	,
el	CL.suj.3.m.s	el
e	CL.obj.3.m.s	e
ne	ADV.neg	ne
pourra	V.F.3.s	pouvoir
jamais	ADV.neg	jamais
être	VW	être
appelé	VK.m.s	appeler
,	PONCT.W	,
vous	CL.suj.2.m.p	vous
ne	ADV.neg	ne
pourrez	V.P.2.p	pourrer
donc	ADV.-	donc
pas	ADV.neg	pas
instancier	A.qual.m.s	instancier
votre	D.poss.f.s	votre
classe	N.C.f.s	classe
•	N.C.m.s	•
«	N.C.m.s	«
protected	N.C.m.s	protected
»	N.C.m.s	»
a	V.P.3.s	avoir
le	D.def.m.s	le
même	A.qual.m.s	même
effet	N.C.m.s	effet
que	C.S	que
private	A.qual.f.s	privat
,	PONCT.W	,
à	P	à
l'	D.def.f.s	le
exception	N.C.f.s	exception
que	PRO.rel.f.s	que
toutes	A.ind.f.p	tout
les	D.def.f.p	le
classes	N.C.f.p	classe
fil	N.C.m.s	fil
es	CL.refl.3.f.p	es
auront	V.F.3.p	avoir
accès	N.C.m.s	accès
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
protégés	VK.m.p	protéger
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	D.card.m.s	«
mot	N.C.m.s	mot
clé	N.C.f.s	clé
static	A.qual.m.s	static
»	P	à
Le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	P	à
static	N.C.m.s	static
»	N.C.m.s	»
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
après	P	après
le	D.def.m.s	le
type	N.C.m.s	type
de	P	de
visibilité	N.C.f.s	visibilité
pour	P	pour
déclarer	VW	déclarer
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
ou	C.C	ou
attribut	N.C.m.s	attribut
statique	A.qual.m.s	statique
.	PONCT.S	.

Les	D.def.m.p	le
attributs	N.C.m.p	attribut
et	C.C	et
les	D.def.f.p	le
méthodes	N.C.f.p	méthode
statiques	A.qual.f.p	statique
peuvent	V.P.3.p	pouvoir
être	VW	être
utilisés	VK.m.p	utiliser
sans	P	sans
avoir	VW	avoir
besoin	N.C.m.s	besoin
d'	P	de
instancier	VW	instancier
la	D.def.f.s	le
classe	N.C.f.s	classe
,	PONCT.W	,
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
y	CL.obj.3.m.s	y
accéder	VW	accéder
directement	ADV.-	directement
en	P	en
utilisant	VG	utiliser
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
.	PONCT.S	.

Les	D.def.m.p	le
attributs	N.C.m.p	attribut
statiques	A.qual.m.p	statique
sont	V.P.3.p	être
dites	VK.f.p	dire
‘	P	à
attributs	N.C.m.p	attribut
de	P	de
classe	N.C.f.s	classe
’	N.C.m.s	’
.	PONCT.S	.

Ainsi	ADV.-	ainsi
,	PONCT.W	,
tous	A.ind.m.p	tous
les	D.def.m.p	le
objets	N.C.m.p	objet
auront	V.F.3.p	avoir
accès	N.C.m.s	accès
à	P	à
ces	D.dem.m.p	ce
attributs	N.C.m.p	attribut
et	C.C	et
auront	V.F.3.p	avoir
les	D.def.f.p	le
mêmes	A.qual.f.p	même
valeurs	N.C.f.p	valeur
pour	P	pour
tous	A.ind.m.p	tous
les	D.def.m.p	le
objets	N.C.m.p	objet
.	PONCT.S	.

Les	D.def.f.p	le
méthodes	N.C.f.p	méthode
statiques	A.qual.f.p	statique
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
servent	V.P.3.p	servir
à	P	à
manipuler	VW	manipuler
les	D.def.m.p	le
attributs	N.C.m.p	attribut
statiques	A.qual.m.p	statique
.	PONCT.S	.

Ainsi	ADV.-	ainsi
,	PONCT.W	,
les	D.def.f.p	le
méthodes	N.C.f.p	méthode
statiques	A.qual.f.p	statique
ne	ADV.neg	ne
peuvent	V.P.3.p	pouvoir
pas	ADV.neg	pas
manipuler	VW	manipuler
les	D.def.m.p	le
attributs	N.C.m.p	attribut
non	ADV.neg	non
statiques	A.qual.m.p	statique
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	P	à
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
:	PONCT.W	:
:	PONCT.W	:
»	N.card.m.s	»
L'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
de	P	de
résolution	N.C.f.s	résolution
de	P	de
portée	N.C.f.s	portée
«	N.C.m.s	«
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
(	PONCT.W	(
double	A.qual.m.s	double
deux	D.card.m.p	deux
point	N.C.m.s	point
)	PONCT.W	)
fournit	V.P.3.s	fournir
un	D.ind.m.s	un
moyen	N.C.m.s	moyen
d'	P	de
accéder	VW	accéder
aux	P+D.def.m.p	au
membres	N.C.m.p	membre
statiques	A.qual.m.p	statique
ou	C.C	ou
constantes	A.qual.m.p	constant
,	PONCT.W	,
ainsi	ADV.-	ainsi
qu'	C.S	que
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
ou	C.C	ou
méthodes	N.C.f.p	méthode
surchargées	VK.f.p	surcharger
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
.	PONCT.S	.

àLe	P	àle
mot	N.C.m.s	mot
clé	N.C.f.s	clé
«	P	à
self	N.C.m.s	self
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
méthodes	N.C.f.p	méthode
et	C.C	et
attributs	N.C.m.p	attribut
statiques	A.qual.m.p	statique
depuis	P	depuis
la	D.def.f.s	le
classe	N.C.f.s	classe
.	PONCT.S	.

àLe	P	àle
mot	N.C.m.s	mot
clé	N.C.f.s	clé
«	CL.obj.3.m.s	c
parent	V.P.3.p	parer
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
propriétés	N.C.f.p	propriété
ou	C.C	ou
aux	P+D.def.f.p	au
méthodes	N.C.f.p	méthode
surchargés	VK.m.p	surcharger
ou	C.C	ou
constantes	A.qual.f.p	constant
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
depuis	P	depuis
la	D.def.f.s	le
classe	N.C.f.s	classe
fil	N.C.m.s	fil
e.	PONCT.S	<unknown>
àPour	P	àpour
référencez	V.P.2.p	référencer
ces	D.dem.m.p	ce
éléments	N.C.m.p	élément
en	P	en
dehors	N.C.m.p	dehors
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
,	PONCT.W	,
utilisez	V.Y.2.p	utiliser
plutôt	ADV.-	plutôt
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
«	P	à
nomClasse	N.C.m.s	nomclasse
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	N.C.m.s	«
Héritage	N.C.m.s	héritage
»	N.C.m.s	»
Une	D.ind.f.s	un
classe	N.C.f.s	classe
peut	V.P.3.s	pouvoir
hériter	VW	hériter
d'	P	de
une	D.ind.f.s	un
autre	A.ind.f.s	autre
classe	N.C.f.s	classe
en	P	en
utilisant	VG	utiliser
le	D.def.m.s	le
mot-clé	N.C.m.s	mot-clé
«	P	à
extends	N.C.m.p	extend
»	N.C.m.s	»
dans	P	dans
la	D.def.f.s	le
déclaration	N.C.f.s	déclaration
.	PONCT.S	.

Pour	P	pour
accéder	VW	accéder
aux	P+D.def.f.p	au
méthodes	N.C.f.p	méthode
ou	C.C	ou
une	D.ind.f.s	un
propriétés	N.C.f.p	propriété
statiques	A.qual.f.p	statique
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
mère	A.qual.f.s	mère
,	PONCT.W	,
l'	D.def.m.s	le
opérateur	N.C.m.s	opérateur
«	A.qual.m.s	«
parent	V.P.3.p	parer
:	PONCT.W	:
:	PONCT.W	:
»	N.C.m.s	»
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
class	ET	class
ExtendClass	ET	extendclass
extends	A.qual.m.p	extend
SimpleClass	N.P.m.s	Simpleclass
{	N.C.m.s	{
//	PONCT.W	@card@
Redéfinition	N.C.f.s	redéfinition
de	P	de
la	D.def.f.s	le
méthode	N.C.f.s	méthode
parente	A.qual.f.s	parent
et/ou	C.C	<unknown>
l'	D.def.m.s	le
ajout	N.C.m.s	ajout
des	P+D.def.m.p	du
attributs	N.C.m.p	attribut
function	N.C.f.s	function
afficher()	V.P.3.s	affichercer
{	P	à
echo	ET	echo
"	PONCT.W	"
Classe	N.P.m.s	Classe
étendue	A.qual.f.s	étendu
"	PONCT.W	"
;	PONCT.W	;
parent::afficher()	N.P.x.s	<unknown>
;	PONCT.W	;
}	ET	}
}	ET	}
$extended	ET	çextended
=	PONCT.W	=
new	ET	new
ExtendClass	N.P.x.s	Extendclass
;	PONCT.W	;
//	PONCT.W	@card@
instanciation	N.C.f.s	instanciation
$extended->afficher()	N.P.m.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
polymorphisme	N.C.m.s	polymorphisme
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	P	à
Abstraction	N.C.f.s	abstraction
»	P	à
Classe	N.P.m.s	Classe
abstraite	A.qual.f.s	abstrait
:	PONCT.W	:
est	V.P.3.s	être
une	D.ind.f.s	un
classe	N.C.f.s	classe
qu'	PRO.rel.f.s	que
on	CL.suj.3.m.s	on
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
pas	ADV.neg	pas
instancier	A.qual.m.s	instancier
directement	ADV.-	directement
.	PONCT.S	.

Ø	P	à
El	CL.suj.3.m.s	el
e	CL.obj.3.m.s	e
est	V.P.3.s	être
définit	VK.m.s	définir
par	P	par
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	P	à
abstract	N.C.m.s	abstract
»	N.C.m.s	»
dans	P	dans
la	D.def.f.s	le
déclaration	N.C.f.s	déclaration
.	PONCT.S	.

Ø	N.C.m.s	Ø
Pour	P	pour
exploiter	VW	exploiter
une	D.ind.f.s	un
classe	N.C.f.s	classe
abstraite	A.qual.f.s	abstrait
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
créer	VW	créer
une	D.ind.f.s	un
classe	N.C.f.s	classe
qui	PRO.rel.f.s	qui
hérite	V.P.3.s	hériter
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
abstraite	A.qual.f.s	abstrait
.	PONCT.S	.

Une	D.ind.f.s	un
classe	N.C.f.s	classe
abstraite	A.qual.f.s	abstrait
permet	V.P.3.s	permettre
de	P	de
définir	VW	définir
des	D.ind.m.p	du
comportements	N.C.m.p	comportement
(	PONCT.W	(
méthodes	N.C.f.p	méthode
)	PONCT.W	)
dont	PRO.rel.f.p	dont
l'	D.def.f.s	le
implémentation	N.C.f.s	implémentation
(	PONCT.W	(
le	D.def.m.s	le
code	N.C.m.s	code
dans	P	dans
la	D.def.f.s	le
méthode	N.C.f.s	méthode
)	PONCT.W	)
se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
dans	P	dans
les	D.def.f.p	le
classes	N.C.f.p	classe
fil	A.qual.m.s	fil
es	P+D.def.m.p	es
:	PONCT.W	:
Ø	N.C.m.s	Ø
Si	C.S	si
on	CL.suj.3.m.s	on
rend	V.P.3.s	rendre
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
abstraite	VK.f.s	abstraire
en	P	en
utilisant	VG	utiliser
le	D.def.m.s	le
mot	N.C.m.s	mot
clé	A.qual.m.s	clé
«	P	à
abstract	N.C.m.s	abstract
»	N.C.m.s	»
avant	P	avant
la	D.def.f.s	le
visibilité	N.C.f.s	visibilité
de	P	de
la	D.def.f.s	le
méthode	N.C.f.s	méthode
,	PONCT.W	,
alors	ADV.-	alors
toutes	A.ind.f.p	tout
les	D.def.f.p	le
classes	N.C.f.p	classe
fil	N.C.m.s	fil
es	CL.obj.3.f.p	es
sont	V.P.3.p	être
forcés	VK.m.p	forcer
à	P	à
écrire	VW	écrire
cette	D.dem.f.s	ce
méthode	N.C.f.s	méthode
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	P	à
Abstraction	N.C.f.s	abstraction
»	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
classe	ET	classe
abstraite	V.P.3.s	abstraiter
abstract	ET	abstract
class	ET	class
NomAbstractClass	N.P.m.s	Nomabstractclass
{	P	à
//	PONCT.W	@card@
Force	V.P.3.s	forcer
les	D.def.f.p	le
classes	N.C.f.p	classe
fil	A.qual.m.s	fil
es	P+D.def.f.p	es
à	P	à
définir	VW	définir
les	D.def.m.p	le
deux	A.card.f.p	deux
méthode	N.C.f.p	méthode
suivants	A.qual.m.p	suivant
abstract	N.C.m.s	abstract
protected	A.qual.f.s	<unknown>
function	N.C.f.s	function
getValue()	N.C.m.s	<unknown>
;	PONCT.W	;
abstract	N.C.m.s	abstract
protected	A.qual.f.s	<unknown>
function	N.C.f.s	function
prefixValue($prefix)	N.C.m.s	prefixvalueçrefixc
;	PONCT.W	;
//	PONCT.W	@card@
méthode	N.C.f.s	méthode
commune	A.qual.f.s	commun
public	A.qual.f.s	public
function	N.C.f.s	function
printOut()	N.C.m.s	printoutçë
{	P	à
print	A.qual.m.s	print
$this->getValue()	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
\n	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	N.C.m.s	}
}	N.C.m.s	}
POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	N.C.m.s	«
constante	N.C.f.s	constante
de	P	de
classe	N.C.f.s	classe
»	N.C.m.s	»
Il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
de	P	de
définir	VW	définir
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
constantes	A.qual.f.p	constant
à	P	à
l'	D.def.m.s	le
intérieur	N.C.m.s	intérieur
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
,	PONCT.W	,
qui	PRO.rel.f.p	qui
ne	ADV.neg	ne
seront	V.F.3.p	être
pas	ADV.neg	pas
modifiables	A.qual.f.p	modifiable
.	PONCT.S	.

La	D.def.f.s	le
visibilité	N.C.f.s	visibilité
par	P	par
défaut	N.C.m.s	défaut
des	P+D.def.f.p	du
constantes	N.C.f.p	constante
de	P	de
classe	N.C.f.s	classe
est	V.P.3.s	être
public	A.qual.m.s	public
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
class	N.C.m.p	class
MyClass	N.P.m.s	Myclass
{	N.P.m.s	{
const	N.C.m.s	const
CONSTANT	N.P.m.s	Constant
=	P	à
'	P	e
valeur	N.C.f.s	valeur
constante	A.qual.f.s	constant
'	PONCT.W	'
;	PONCT.W	;
function	N.C.f.s	function
showConstant()	N.C.f.s	showconstantëë
{	P+D.def.m.s	c
echo	ET	echo
self::CONSTANT	N.P.x.s	<unknown>
.	PONCT.S	.

"	PONCT.W	"
\n	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
//	PONCT.W	@card@
self::CONSTANT=‘nouvel	N.P.x.s	<unknown>
e	P	e
valeur	N.C.f.s	valeur
’	P	à
entrainera	V.F.3.s	entrainer
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
}	A.qual.f.s	}
}	P	à
echo	N.C.m.s	echo
MyClasse:CONSTANT	N.P.x.s	<unknown>
;	PONCT.W	;
POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	N.C.m.s	«
constante	N.C.f.s	constante
de	P	de
classe	N.C.f.s	classe
»	P	à
Attention	N.C.f.s	attention
à	P	à
ne	ADV.neg	ne
pas	ADV.neg	pas
confondre	VW	confondre
les	D.def.m.p	le
attributs	N.C.m.p	attribut
statiques	A.qual.m.p	statique
et	C.C	et
constantes	A.qual.m.p	constant
de	P	de
classe	N.C.f.s	classe
:	PONCT.W	:
àun	D.ind.m.s	àun
attribut	N.C.m.s	attribut
statique	A.qual.m.s	statique
peut	V.P.3.s	pouvoir
tout	PRO.ind.m.s	tout
à	P	à
fait	N.C.m.s	fait
changer	VW	changer
de	P	de
valeur	N.C.f.s	valeur
au	P+D.def.m.s	au
cours	N.C.m.s	cours
du	P+D.def.m.s	du
temps	N.C.m.s	temps
,	PONCT.W	,
à	P	à
la	D.def.f.s	le
différence	N.C.f.s	différence
d'	P	de
une	D.ind.f.s	un
constante	N.C.f.s	constante
dont	PRO.rel.f.s	dont
la	D.def.f.s	le
valeur	N.C.f.s	valeur
est	V.P.3.s	être
fixée	VK.f.s	fixer
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	N.C.m.s	«
constante	N.C.f.s	constante
de	P	de
classe	N.C.f.s	classe
»	P	à
Cependant	ADV.-	cependant
,	PONCT.W	,
il	CL.suj.3.m.s	il
est	V.P.3.s	être
possible	A.qual.m.s	possible
de	P	de
déclarer	VW	déclarer
une	D.ind.f.s	un
constante	N.C.f.s	constante
dans	P	dans
la	D.def.f.s	le
classe	N.C.f.s	classe
de	P	de
base	N.C.f.s	base
,	PONCT.W	,
et	C.C	et
de	P	de
changer	VW	changer
sa	D.poss.f.s	son
valeur	N.C.f.s	valeur
dans	P	dans
la	D.def.f.s	le
classe	N.C.f.s	classe
fil	N.C.m.s	fil
e	P	e
seulement	ADV.-	seulement
en	P	en
utilisant	VG	utiliser
la	D.def.f.s	le
méthode	N.C.f.s	méthode
«	P	à
get_called_class	N.P.x.s	Getçcalled-class
»	P	à
qui	PRO.rel.f.s	qui
retournera	V.F.3.s	retourner
le	D.def.m.s	le
nom	N.C.m.s	nom
de	P	de
la	D.def.f.s	le
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
depuis	P	depuis
laquel	PRO.rel.m.s	lequel
e	P	e
la	D.def.f.s	le
constante	N.C.f.s	constante
est	V.P.3.s	être
appelée	VK.f.s	appeler
.	PONCT.S	.

à	P	à
Ainsi	ADV.-	ainsi
,	PONCT.W	,
la	D.def.f.s	le
nouvel	N.C.f.s	nouvel
e	P	e
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
constante	N.C.f.s	constante
sera	V.F.3.s	être
propre	A.qual.f.s	propre
à	P	à
la	D.def.f.s	le
classe	N.C.f.s	classe
fil	N.C.m.s	fil
e	PONCT.W	e
et	C.C	et
la	D.def.f.s	le
classe	N.C.f.s	classe
mère	A.qual.f.s	mère
garde	V.P.3.s	garder
la	D.def.f.s	le
valeur	N.C.f.s	valeur
initiale	A.qual.f.s	initial
de	P	de
la	D.def.f.s	le
constante	N.C.f.s	constante
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	N.C.m.s	«
constante	N.C.f.s	constante
de	P	de
classe	N.C.f.s	classe
»	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	ET	<unknown>
class	ET	class
Personne	PRO.neg.m.s	personne
{	N.C.m.s	{
//	PONCT.W	@card@
déclaration	N.C.f.s	déclaration
de	P	de
la	D.def.f.s	le
constante	N.C.f.s	constante
const	ET	const
nomClasse="Personne	ET	nomclasseësonne
"	PONCT.W	"
;	PONCT.W	;
public	A.qual.m.s	public
function	N.C.f.s	function
__construct	ET	çäconstruct
(){	ET	çùë
echo	ET	echo
‘	P	à
ceci	PRO.dem.m.s	ceci
est	V.P.3.s	être
le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
’	N.C.m.s	’
;	PONCT.W	;
/*	PRO.rel.m.s	<unknown>
on	CL.suj.3.m.s	on
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
pas	ADV.neg	pas
changer	VW	changer
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
constante	N.C.f.s	constante
ici	ADV.-	ici
par	P	par
:	PONCT.W	:
self::nomClasse=‘test	N.P.m.s	<unknown>
’	N.C.m.s	’
*/	PONCT.W	<unknown>
}	P	à
public	A.qual.m.s	public
function	N.C.f.s	function
affiche	V.P.3.s	afficher
(	PONCT.W	(
)	PONCT.W	)
{	P	à
$c=get_called_class()	N.P.x.s	<unknown>
;	PONCT.W	;
echo	N.C.m.s	echo
’	P	à
la	D.def.f.s	le
valeur	N.C.f.s	valeur
de	P	de
la	D.def.f.s	le
constante	N.C.f.s	constante
nomClasse	N.C.f.s	nomclasse
est	V.P.3.s	être
:	PONCT.W	:
'	PONCT.W	'
.	PONCT.S	.

$c::nomClasse	N.P.x.s	<unknown>
.	PONCT.S	.

'	PONCT.W	'
<br/>	N.C.m.s	<unknown>
'	PONCT.W	'
;	PONCT.W	;
}	N.C.m.s	}
}	P	à
class	N.C.m.p	class
HPErsonne	N.P.m.s	Hpersonne
extends	ET	extend
Personne	PRO.neg.m.s	personne
{	P	à
const	N.C.m.s	const
nomClasse="HPErsonne	N.C.f.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
public	ET	public
function	N.C.f.s	function
__construct	ET	çäconstruct
(){	ET	çùë
parent::__construct(	ET	parentc-cconstructà
)	PONCT.W	)
;	PONCT.W	;
//parent::nomClasse=‘test2	N.C.m.p	<unknown>
’	N.P.x.s	’
’	CL.obj.3.m.s	c
retournera	V.F.3.s	retourner
encore	ADV.-	encore
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
}	A.qual.f.s	}
}	N.C.m.s	}
$p=new	N.P.m.s	<unknown>
Personne()	N.P.m.s	Personneëù
;	PONCT.W	;
$p->affiche()	N.P.x.s	<unknown>
;	PONCT.W	;
$hp=new	N.P.m.s	<unknown>
HPErsonne()	N.P.m.s	Hpersonneëù
;	PONCT.W	;
$hp->affiche()	N.P.x.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	D.card.m.s	«
mot	N.C.m.s	mot
clé	N.C.f.s	clé
final	A.qual.m.s	final
»	P	à
Le	D.def.m.s	le
mot-clé	N.C.m.s	mot-clé
«	P	à
final	A.qual.m.s	final
»	N.P.x.s	»
indique	V.P.3.s	indiquer
qu'	C.S	que
un	D.ind.m.s	un
élément	N.C.m.s	élément
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
être	VW	être
changé	VK.m.s	changer
dans	P	dans
la	D.def.f.s	le
suite	N.C.f.s	suite
du	P+D.def.m.s	du
programme	N.C.m.s	programme
.	PONCT.S	.

Ø	P	à
Il	CL.suj.3.m.s	il
s'	CL.refl.3.m.s	se
appliquer	VW	appliquer
aux	P+D.def.f.p	au
méthodes	N.C.f.p	méthode
d'	P	de
une	D.ind.f.s	un
classe	N.C.f.s	classe
ainsi	ADV.-	ainsi
que	C.S	que
la	D.def.f.s	le
classe	N.C.f.s	classe
el	CL.suj.3.f.s	el
e	PONCT.W	e
-même	ADV.-	même
.	PONCT.S	.

Ø	P	à
Les	D.def.m.p	le
attributs	N.C.m.p	attribut
ne	ADV.neg	ne
peuvent	V.P.3.p	pouvoir
être	VW	être
déclarés	VK.m.p	déclarer
comme	P	comme
final	A.qual.m.s	final
.	PONCT.S	.

Une	D.ind.f.s	un
méthode	N.C.f.s	méthode
indiquée	VK.f.s	indiquer
comme	P	comme
final	N.C.m.s	final
ne	ADV.neg	ne
peut	V.P.3.s	pouvoir
être	VW	être
redéfinie	VK.f.s	redéfinir
dans	P	dans
une	D.ind.f.s	un
classe	N.C.f.s	classe
dérivée	A.qual.f.s	dérivé
.	PONCT.S	.

Ø	CL.suj.3.m.s	c
On	CL.suj.3.m.s	on
peut	V.P.3.s	pouvoir
s'	CL.refl.3.m.s	se
en	CL.obj.3.m.s	en
servir	VW	servir
pour	P	pour
forcer	VW	forcer
le	D.def.m.s	le
comportement	N.C.m.s	comportement
d'	P	de
une	D.ind.f.s	un
méthode	N.C.f.s	méthode
dans	P	dans
les	D.def.m.p	le
sous-classes	N.C.m.p	sous-classe
.	PONCT.S	.

•	P	à
Les	D.def.f.p	le
classes	N.C.f.p	classe
final	A.qual.m.s	final
ne	ADV.neg	ne
peuvent	V.P.3.p	pouvoir
être	VW	être
dérivées	VK.f.p	dériver
(	PONCT.W	(
non	ADV.neg	non
possibilité	N.C.f.s	possibilité
d'	P	de
héritage	N.C.m.s	héritage
)	PONCT.W	)
.	PONCT.S	.

POO	N.P.m.s	Poo
en	P	en
PHP	N.C.m.s	php
«	D.card.m.s	«
mot	N.C.m.s	mot
clé	N.C.f.s	clé
final	A.qual.m.s	final
»	P	à
Exemple	N.C.m.s	exemple
:	PONCT.W	:
classe	ET	classe
final	A.qual.m.s	final
final	A.qual.m.s	final
class	ET	class
BaseClass	N.P.m.s	Baseclass
{	P	à
public	N.C.m.s	public
function	N.C.f.s	function
test()	N.C.m.s	testçë
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
BaseClass::test()	N.P.m.s	<unknown>
appelée	VK.f.s	appeler
"	PONCT.W	"
;	PONCT.W	;
}	V.P.3.s	être
//	PONCT.W	@card@
Ici	ADV.-	ici
la	D.def.f.s	le
méthode	N.C.f.s	méthode
suivante	A.qual.f.s	suivant
est	V.P.3.s	être
finale	A.qual.f.s	final
final	A.qual.m.s	final
public	A.qual.m.s	public
function	N.C.f.s	function
moreTesting()	N.C.m.s	moretestingçë
{	P	à
echo	N.C.m.s	echo
"	PONCT.W	"
BaseClass::moreTesting()	N.P.m.s	<unknown>
appelée	VK.f.s	appeler
"	PONCT.W	"
;	PONCT.W	;
}	ET	}
}	P	à
class	N.C.m.p	class
ChildClass	N.P.m.s	Childclass
extends	ET	extend
BaseClass	N.P.m.s	Baseclass
{	P	à
}	N.C.m.s	}
//	PONCT.W	@card@
Résultat	N.C.m.s	résultat
:	PONCT.W	:
Fatal	ET	fatal
error	N.C.m.s	error
:	PONCT.W	:
Class	N.P.m.s	Class
ChildClass	N.P.m.s	Childclass
may	ET	may
not	ET	not
inherit	A.qual.m.s	inherit
from	N.C.m.s	from
final	A.qual.m.s	final
class	ET	class
(	PONCT.W	(
BaseClass	N.P.m.s	Baseclass
)	PONCT.W	)
SGBS	N.P.m.s	Sgb
avec	P	avec
PHP	N.P.m.s	Php
•	N.C.m.s	•
Qu'	PRO.rel.m.s	que
est	V.P.3.s	être
ce	PRO.dem.m.s	ce
qu'	PRO.rel.m.s	que
un	D.ind.m.s	un
SGBD	N.C.m.s	<unknown>
?	PONCT.S	?

?	PONCT.S	?

à	P	à
«	N.C.m.s	«
est	V.P.3.s	être
un	D.ind.m.s	un
logiciel	A.qual.m.s	logiciel
système	N.C.m.s	système
destiné	VK.m.s	destiner
à	P	à
stocker	VW	stocker
et	C.C	et
à	P	à
partager	VW	partager
des	D.ind.f.p	du
informations	N.C.f.p	information
dans	P	dans
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
,	PONCT.W	,
en	P	en
garantissant	VG	garantir
la	D.def.f.s	le
qualité	N.C.f.s	qualité
,	PONCT.W	,
la	D.def.f.s	le
pérennité	N.C.f.s	pérennité
et	C.C	et
la	D.def.f.s	le
confidentialité	N.C.f.s	confidentialité
des	P+D.def.f.p	du
informations	N.C.f.p	information
,	PONCT.W	,
tout	ADV.-	tout
en	P	en
cachant	VG	cacher
la	D.def.f.s	le
complexité	N.C.f.s	complexité
des	P+D.def.f.p	du
opérations	N.C.f.p	opération
.	PONCT.W	.
»	N.C.m.s	»
WIKIPEDIA	N.P.x.s	Wikipedia
à	P	à
Parmi	P	parmi
les	D.def.m.p	le
logiciels	N.C.m.p	logiciel
les	D.def.m.p	le
plus	ADV.-	plus
connus	A.qual.m.p	connu
,	PONCT.W	,
on	CL.suj.3.m.s	on
trouve	V.P.3.s	trouver
:	PONCT.W	:
MySQL	N.P.x.s	Mysql
,	PONCT.W	,
PostgreSQL	N.P.x.s	Postgresql
,	PONCT.W	,
SQLite	N.P.f.s	Sqlite
,	PONCT.W	,
Oracle	N.P.m.s	Oracle
et	C.C	et
MAriaDB	N.P.x.s	Mariadb
.	PONCT.S	.

Pour	P	pour
une	D.ind.f.s	un
liste	N.C.f.s	liste
détail	N.C.m.s	détail
ée	VK.f.s	avoir
des	P+D.def.m.p	du
SGBD	N.P.x.s	Sgbd
,	PONCT.W	,
consulter	VW	consulter
ce	D.dem.m.s	ce
lien	N.C.m.s	lien
http://fadace.developpez.com/sgbdcmp/#LI	N.C.m.s	<unknown>
SGBS	N.P.m.s	Sgb
avec	P	avec
PHP	N.P.m.s	Php
Ces	D.dem.m.p	ce
systèmes	N.C.m.p	système
peuvent	V.P.3.p	pouvoir
être	VW	être
catégorisés	VK.m.p	catégoriser
comme	P	comme
suit	VK.m.s	suivre
:	PONCT.W	:
SGDB	N.P.m.s	Sgdb
Relationnel	A.qual.m.s	relationnel
Système	N.C.m.s	système
basé	VK.m.s	baser
sur	P	sur
le	D.def.m.s	le
modèle	N.C.m.s	modèle
relationnel	A.qual.m.s	relationnel
:	PONCT.W	:
données	VK.f.p	donner
stockées	VK.f.p	stocker
dans	P	dans
des	D.ind.f.p	du
tables	N.C.f.p	table
structurées	A.qual.f.p	structuré
(	PONCT.W	(
en	P	en
colonnes	N.C.f.p	colonne
,	PONCT.W	,
lignes	N.C.f.p	ligne
)	PONCT.W	)
et	C.C	et
des	P+D.def.f.p	du
relations	N.C.f.p	relation
qui	PRO.rel.f.p	qui
lient	V.P.3.p	lier
les	D.def.f.p	le
tables	N.C.f.p	table
entre	P	entre
el	PPRO.3.f.p	<unknown>
es	P+D.def.m.p	es
.	PONCT.S	.

–	P	à
Système	N.C.m.s	système
libre	A.qual.m.s	libre
:	PONCT.W	:
MySQL	N.P.m.s	Mysql
,	PONCT.W	,
PostgreSQL	N.P.x.s	Postgresql
,	PONCT.W	,
MariaDB	N.P.m.s	Mariadb
,	PONCT.W	,
Firebird	N.P.m.s	Firebird
,	PONCT.W	,
Ingres	N.P.m.s	Ingres
,	PONCT.W	,
HSQLDB	N.P.m.s	Hsqldb
,	PONCT.W	,
Derby	N.P.m.s	Derby
.	PONCT.S	.

–	P	à
Système	N.C.m.s	système
propriétaire	A.qual.m.s	propriétaire
:	PONCT.W	:
Oracle	N.P.m.s	Oracle
Database	N.P.m.s	Database
,	PONCT.W	,
Microsoft	N.P.m.s	Microsoft
SQL	N.P.m.s	Sql
Server	N.P.m.s	Server
,	PONCT.W	,
DB2	N.P.m.s	<unknown>
,	PONCT.W	,
MaxDB	N.P.m.s	Maxdb
,	PONCT.W	,
4D	N.card.m.s	<unknown>
,	PONCT.W	,
dBase	N.P.f.s	<unknown>
,	PONCT.W	,
Informix	N.P.m.s	Informix
,	PONCT.W	,
Sybase	N.P.m.s	Sybase
.	PONCT.S	.

SGBD	N.C.m.s	<unknown>
Orienté	N.P.m.s	Orienté
objet	N.C.m.s	objet
:	PONCT.W	:
ZODB	N.P.m.s	Zodb
,	PONCT.W	,
db4o	N.C.m.s	<unknown>
Embarqué	N.P.m.s	Embarqué
:	PONCT.W	:
SQLite	N.P.f.s	Sqlite
,	PONCT.W	,
Berkeley	N.P.m.s	Berkeley
DB	N.P.m.s	Db
.	PONCT.S	.

SGBD	N.P.m.s	Sgbd
NoSQL	N.P.m.s	Nosql
:	PONCT.W	:
Cassandra	N.P.m.s	Cassandra
,	PONCT.W	,
Redis	N.P.m.s	Redis
,	PONCT.W	,
MongoDB	N.P.m.s	Mongodb
,	PONCT.W	,
SimpleDB	N.P.f.s	Simpledb
,	PONCT.W	,
BigTable	N.P.f.s	Bigtable
,	PONCT.W	,
CouchDB	N.P.m.s	Couchdb
,	PONCT.W	,
HBase	N.P.m.s	Hbase
,	PONCT.W	,
LevelDB	N.P.f.s	Leveldb
,	PONCT.W	,
RethinkDB	N.P.m.s	Rethinkdb
,	PONCT.W	,
Memcached	N.P.m.s	Memcached
.	PONCT.S	.

SGBS	N.C.m.s	sgb
avec	P	avec
PHP	N.P.m.s	Php
Manipulation	N.C.f.s	manipulation
des	P+D.def.f.p	du
bases	N.C.f.p	base
de	P	de
données	N.C.f.p	donnée
mysql	N.C.m.s	<unknown>
se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
soit	C.C	soit
via	P	via
interface	N.C.f.s	interface
graphique	A.qual.f.s	graphique
comme	P	comme
‘	P	à
PhpMyAdmin	N.P.m.s	Phpmyadmin
’	V.P.3.s	être
soit	C.C	soit
en	P	en
exécutant	VG	exécuter
un	D.ind.m.s	un
script	N.C.m.s	script
php	N.C.m.s	<unknown>
.	PONCT.S	.

1	A.card.m.s	@card@
.	PONCT.S	.

PhpMyadmin	N.P.m.s	Phpmyadmin
•	P	à
Un	D.ind.m.s	un
programme	N.C.m.s	programme
permettant	VG	permettre
d'	P	de
avoir	VW	avoir
une	D.ind.f.s	un
vue	N.C.f.s	vue
rapide	A.qual.f.s	rapide
de	P	de
l'	D.def.m.s	le
ensemble	N.C.m.s	ensemble
des	P+D.def.f.p	du
données	N.C.f.p	donnée
.	PONCT.S	.

•	N.C.m.s	•
C'	CL.suj.3.m.s	ce
est	V.P.3.s	être
un	PRO.ind.m.s	un
des	P+D.def.m.p	du
outils	N.C.m.p	outil
les	D.def.m.p	le
plus	ADV.-	plus
connus	A.qual.m.p	connu
permettant	VG	permettre
de	P	de
manipuler	VW	manipuler
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
MySQL	N.P.m.s	Mysql
.	PONCT.S	.

•	N.C.m.s	•
PhpMyAdmin	N.P.m.s	Phpmyadmin
est	V.P.3.s	être
livré	VK.m.s	livrer
avec	P	avec
WAMP	N.P.m.s	Wamp
,	PONCT.W	,
et	C.C	et
presque	ADV.-	presque
tous	A.ind.m.p	tous
les	D.def.m.p	le
hébergeurs	N.C.m.p	hébergeur
permettent	V.P.3.p	permettre
d'	P	de
utiliser	VW	utiliser
phpMyAdmin	N.C.m.s	<unknown>
.	PONCT.S	.

(	PONCT.W	(
chemin	N.C.m.s	chemin
d'	P	de
accès	N.C.m.s	accès
:	PONCT.W	:
http://localhost:8888/phpMyAdmin	N.C.m.s	<unknown>
)	PONCT.W	)
SGBS	N.P.m.s	Sgb
avec	P	avec
PHP	N.P.m.s	Php
2	A.card.m.s	@card@
.	PONCT.S	.

Utilisation	N.C.f.s	utilisation
d'	P	de
un	D.ind.m.s	un
SGBD	N.P.m.s	Sgbd
via	P	via
un	D.ind.m.s	un
script	N.C.m.s	script
PHP	N.C.m.s	php
la	D.def.f.s	le
manipulation	N.C.f.s	manipulation
d'	P	de
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
s'	CL.refl.3.f.s	se
effectue	V.P.3.s	effectuer
en	P	en
5	D.card.m.p	@card@
temps	N.C.m.p	temps
:	PONCT.W	:
§	D.card.f.p	§
Connexion	N.C.f.s	connexion
au	P+D.def.m.s	au
serveur	N.C.m.s	serveur
de	P	de
données	N.C.f.p	donnée
§	P+D.def.m.s	c
Sélection	N.C.f.s	sélection
de	P	de
la	D.def.f.s	le
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
§	P	à
Requête	N.C.f.s	requête
§	P	à
Exploitation	N.C.f.s	exploitation
des	P+D.def.f.p	du
requêtes	N.C.f.p	requête
§	P	à
Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
MYSQL	N.P.m.s	Mysql
avec	P	avec
PHP	N.P.m.s	Php
Exemple	N.C.m.s	exemple
d'	P	de
un	D.ind.m.s	un
SGBD	N.C.m.s	<unknown>
MYSQL	N.P.m.s	Mysql
:	PONCT.W	:
PHP	N.P.m.s	Php
offre	N.C.f.s	offre
3	D.card.f.p	@card@
API	N.P.x.s	Api
pour	P	pour
se	CL.refl.3.f.s	se
connecter	VW	connecter
à	P	à
MySQL	N.P.m.s	Mysql
:	PONCT.W	:
1.Mysqli	N.P.m.s	<unknown>
//	PONCT.W	@card@
connexion	N.C.f.s	connexion
à	P	à
la	D.def.f.s	le
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
$link	N.P.x.s	<unknown>
=	PONCT.W	=
mysqli_connect("localhost	N.P.x.s	Mysqliëconnectçëlhost
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
root	ET	root
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
passwords	ET	password
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
dbName	ET	dbname
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
if	ET	if
(mysqli_connect_errno())	N.C.m.s	<unknown>
{	N.C.m.s	{
/*	N.C.m.p	<unknown>
Vérification	N.C.f.s	vérification
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
*/	PONCT.W	<unknown>
printf("Échec	N.C.m.s	printfçéchec
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
:	PONCT.W	:
%s\n	ET	çsën
"	PONCT.W	"
,	PONCT.W	,
mysqli_connect_error())	N.C.m.s	mysqliëconnectëerçëë
;	PONCT.W	;
exit()	N.C.m.s	exitçf
;	PONCT.W	;
}	P	à
$query	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.P.m.s	Select
Name	N.P.m.s	Name
FROM	N.P.m.s	From
tablename	N.C.m.s	tablename
ORDER	N.P.x.s	Order
by	ET	by
ID	N.P.x.s	Id
DESC	N.P.m.s	Desc
"	PONCT.W	"
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$result	N.P.m.s	<unknown>
=	PONCT.W	=
mysqli_query($link	N.C.m.s	mysqliçqueryçlink
,	PONCT.W	,
$query	N.P.m.s	<unknown>
)	PONCT.W	)
)	PONCT.W	)
{	N.C.m.s	{
/*	P	àà
exécution	N.C.f.s	exécution
de	P	de
la	D.def.f.s	le
requête	N.C.f.s	requête
*/	PONCT.W	<unknown>
while	N.C.m.s	while
(	PONCT.W	(
$row	N.P.m.s	<unknown>
=	PONCT.W	=
mysqli_fetch_assoc($result))	N.C.m.s	mysqliëfetchäassocçüresultçà
{	N.C.m.s	{
/*	N.C.m.s	<unknown>
Récupère	V.P.3.s	récupérer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
associatif	A.qual.m.s	associatif
*/	PONCT.W	<unknown>
printf	A.qual.m.s	printf
(	PONCT.W	(
"	PONCT.W	"
%s	N.C.m.p	-s
<br/>	N.P.x.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
$row['Name	N.C.m.s	çrowç'name
’	N.C.m.s	’
]	PONCT.W	]
)	PONCT.W	)
;	PONCT.W	;
}	D.card.m.s	}
mysqli_free_result($result)	N.C.m.s	<unknown>
;	PONCT.W	;
/*	V.P.3.s	avoir
Libère	V.P.3.s	libérer
le	D.def.m.s	le
jeu	N.C.m.s	jeu
de	P	de
résultats	N.C.m.p	résultat
*/	C.C	ce
}	N.C.m.s	}
/	PONCT.W	@card@
mysqli_close($link)	N.P.x.s	Mysqliëcloseçlinkë
;	PONCT.W	;
/*	ET	<unknown>
Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
*	N.C.m.s	*
?	PONCT.S	?

>	N.C.m.s	>
MYSQL	N.P.m.s	Mysql
avec	P	avec
PHP	N.P.m.s	Php
2	A.card.m.s	@card@
.	PONCT.S	.

Mysql	N.P.m.s	<unknown>
(	PONCT.W	(
obsolète	N.C.f.s	obsolète
et	C.C	et
supprimé	VK.m.s	supprimer
depuis	P	depuis
la	D.def.f.s	le
version	N.C.f.s	version
PHP.7	N.P.m.s	Php
)	PONCT.W	)
$c	N.P.m.s	<unknown>
=	PONCT.W	=
mysql_connect("example.com	N.C.m.s	<unknown>
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
user	VW	user
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
password	ET	password
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
mysql_select_db("database")	N.C.m.s	mysqläselectäbdaseç
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	ET	=
mysql_query("SELECT	N.C.m.s	mysqläqueryselect
nom	ET	nom
from	ET	from
tableName	N.C.m.s	tablename
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$row	ET	çrow
=	PONCT.W	=
mysql_fetch_assoc($result)	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
htmlentities($row[’nom'])	N.C.m.s	htmlentitiesçerowçänom
;	PONCT.W	;
?	PONCT.S	?

>	P	à
MYSQL	N.P.m.s	Mysql
avec	P	avec
PHP	N.P.m.s	Php
3	PRO.card.m.p	@card@
.	PONCT.S	.

PDO	N.P.x.s	Pdo
(	PONCT.W	(
OO	N.P.x.s	Oo
)	PONCT.W	)
$pdo	N.P.x.s	<unknown>
=	PONCT.W	=
new	ET	new
PDO('mysql:host=example.com	N.P.x.s	<unknown>
;	PONCT.W	;
dbname=database	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
user	VW	user
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
password	N.C.m.s	password
’	N.C.m.s	’
)	PONCT.W	)
$statement	ADV.-	çstatement
=	P	à
$pdo->	N.P.m.s	<unknown>
query("SELECT	ET	queryçselect
nom	ET	nom
from	ET	from
tableName	N.C.m.s	tablename
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$row	N.P.m.s	<unknown>
=	PONCT.W	=
$statement->	N.P.x.s	<unknown>
fetch(PDO::FETCH_ASSOC)	N.P.x.s	<unknown>
;	PONCT.W	;
echo	ET	echo
htmlentities($row[‘nom'])	N.C.m.s	htmlentitiesçerowçänom
;	PONCT.W	;
RQ	N.P.m.s	Rq
:	PONCT.W	:
PHP	N.P.m.s	Php
offre	V.P.3.s	offrir
une	D.ind.f.s	un
possibilité	N.C.f.s	possibilité
d'	P	de
exploiter	VW	exploiter
l'	D.def.f.s	le
API	N.C.f.s	api
mysqli	N.C.m.s	<unknown>
façon	N.C.f.s	façon
orienté	VK.m.s	orienter
objet	N.C.m.s	objet
(	PONCT.W	(
OO	N.P.m.s	Oo
)	PONCT.W	)
:	PONCT.W	:
$mysqli	N.P.m.s	<unknown>
=	PONCT.W	=
new	ET	new
mysqli("localhost	ET	mysqliççlocalhost
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
root	ET	root
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
password	ET	password
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
world	ET	world
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query("SELECT	N.P.x.s	<unknown>
Name	ET	name
from	ET	from
tablename	N.C.m.s	tablename
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
while($row	N.C.m.s	whileçärow
=	PONCT.W	=
$result->fetch_assoc()){	ET	çresult-ëfetchäacçëëë
echo	ET	echo
htmlentities($row['Name	N.C.m.s	htmlentitiesçewowame
'	PONCT.W	'
]	PONCT.W	]
)	PONCT.W	)
.	PONCT.S	.

"	PONCT.W	"
<br/>	N.C.m.s	<unknown>
"	PONCT.W	"
;	PONCT.W	;
}	D.card.m.s	}
MYSQL	N.P.m.s	Mysql
avec	P	avec
PHP	N.P.m.s	Php
POO	N.P.m.s	Poo
Manipulation	N.C.f.s	manipulation
des	P+D.def.m.p	du
résultats	N.C.m.p	résultat
d'	P	de
une	D.ind.f.s	un
requête	N.C.f.s	requête
sous	P	sous
forme	N.C.f.s	forme
d'	P	de
objets	N.C.m.p	objet
:	PONCT.W	:
Exemple	N.C.m.s	exemple
1	A.card.m.s	@card@
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$mysqli	N.P.m.s	<unknown>
=	P	à
new	ET	new
mysqli("localhost	ET	mysqliççlocalhost
"	PONCT.W	"
,	PONCT.W	,
«	P	à
root	N.C.m.s	root
"	PONCT.W	"
,	PONCT.W	,
«	P	à
root	N.C.m.s	root
"	PONCT.W	"
,	PONCT.W	,
"	PONCT.W	"
world	ET	world
"	PONCT.W	"
)	PONCT.W	)
;	PONCT.W	;
/*	ET	<unknown>
Vérification	N.C.f.s	vérification
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
*/	PONCT.W	<unknown>
if	ET	if
(mysqli_connect_errno())	N.C.m.s	<unknown>
{	P+D.def.m.s	c
printf("Échec	N.C.m.s	printfçéchec
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
:	PONCT.W	:
%s\n	ET	çsën
"	PONCT.W	"
,	PONCT.W	,
mysqli_connect_error())	N.C.m.s	mysqliëconnectëerçëë
;	PONCT.W	;
exit()	N.C.m.s	exitçf
;	PONCT.W	;
}	P	à
$query	N.P.m.s	<unknown>
=	PONCT.W	=
"	PONCT.W	"
SELECT	N.P.m.s	Select
ID	N.P.m.s	Id
,	PONCT.W	,
Name	N.P.m.s	Name
,	PONCT.W	,
CountryCode	N.P.m.s	Countrycode
FROM	N.P.m.s	From
citoyen	A.qual.m.s	citoyen
ORDER	N.P.m.s	Order
by	ET	by
ID	N.P.x.s	Id
DESC	N.P.m.s	Desc
LIMIT	N.C.m.s	limit
50,5	A.card.m.s	@card@
"	PONCT.W	"
;	PONCT.W	;
if	ET	if
(	PONCT.W	(
$result	N.P.m.s	<unknown>
=	PONCT.W	=
$mysqli->query($query))	N.P.m.s	Mmysqli-çqueryçççëë
{	N.C.m.s	{
/*	V.P.3.s	avoir
Récupère	V.P.3.s	récupérer
un	D.ind.m.s	un
tableau	N.C.m.s	tableau
d'	P	de
objets	N.C.m.p	objet
*/	PONCT.W	<unknown>
while	N.C.m.s	while
(	PONCT.W	(
$obj	N.P.m.s	<unknown>
=	PONCT.W	=
$result->fetch_object())	N.P.x.s	<unknown>
{	P+D.def.m.s	c
printf	N.C.m.s	<unknown>
(	PONCT.W	(
"	PONCT.W	"
%s	N.C.m.p	-s
(%s)\n	N.C.m.p	çä
"	PONCT.W	"
,	PONCT.W	,
$obj->Name	N.P.x.s	<unknown>
,	PONCT.W	,
$obj->CountryCode	N.P.x.s	<unknown>
)	PONCT.W	)
;	PONCT.W	;
}	ET	}
/*	ET	<unknown>
free	ET	free
result	N.C.m.s	result
set	A.qual.m.s	set
*/	PONCT.W	<unknown>
$result->close()	N.P.x.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
/*	ET	<unknown>
Fermeture	N.C.f.s	fermeture
de	P	de
la	D.def.f.s	le
connexion	N.C.f.s	connexion
*/	PONCT.W	<unknown>
$mysqli->close()	N.P.x.s	<unknown>
;	PONCT.W	;
?	PONCT.S	?

>	P	à
NOTEZ	N.P.m.s	Notez
que	C.S	que
fetch_object(	N.P.m.s	Fetchçobjectë
)	PONCT.W	)
affecte	V.P.3.s	affecter
les	D.def.m.p	le
attributs	N.C.m.p	attribut
de	P	de
l'	D.def.m.s	le
objet	N.C.m.s	objet
avant	ADV.-	avant
d'	P	de
en	CL.obj.3.m.s	en
appeler	VW	appeler
le	D.def.m.s	le
constructeur	N.C.m.s	constructeur
.	PONCT.S	.

Il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
alors	ADV.-	alors
vérifier	VW	vérifier
si	C.S	si
des	D.ind.f.p	du
valeurs	N.C.f.p	valeur
ne	ADV.neg	ne
sont	V.P.3.p	être
pas	ADV.neg	pas
assignées	VK.f.p	assigner
aux	P+D.def.m.p	au
attributs	N.C.m.p	attribut
avant	P	avant
de	P	de
leurs	D.poss.f.p	leur
affecter	VW	affecter
des	D.ind.f.p	du
nouvelles	A.qual.f.p	nouveau
valeurs	N.C.f.p	valeur
dans	P	dans
la	D.def.f.s	le
déclaration	N.C.f.s	déclaration
du	P+D.def.m.s	du
constructeur	N.C.m.s	constructeur
.	PONCT.S	.

MYSQL	N.C.m.s	mysql
avec	P	avec
PHP	N.P.m.s	Php
POO	N.P.m.s	Poo
Manipulation	N.C.f.s	manipulation
des	P+D.def.m.p	du
résultats	N.C.m.p	résultat
d'	P	de
une	D.ind.f.s	un
requête	N.C.f.s	requête
sous	P	sous
forme	N.C.f.s	forme
d'	P	de
objets	N.C.m.p	objet
:	PONCT.W	:
avec	P	avec
la	D.def.f.s	le
déclaration	N.C.f.s	déclaration
de	P	de
la	D.def.f.s	le
class	ET	class
Exemple	N.C.m.s	exemple
2	A.card.m.s	@card@
:	PONCT.W	:
//	PONCT.W	@card@
Définition	N.C.f.s	définition
de	P	de
la	D.def.f.s	le
classe	N.C.f.s	classe
:	PONCT.W	:
class	ET	class
Personne	PRO.neg.m.s	personne
{	N.C.m.s	{
//	PONCT.W	@card@
déclaration	N.C.f.s	déclaration
des	P+D.def.m.p	du
attributs	N.C.m.p	attribut
Private	N.P.f.s	Private
$id	N.P.m.s	<unknown>
,	PONCT.W	,
$nom	N.P.m.s	<unknown>
,	PONCT.W	,
$age	N.C.m.s	çage
;	PONCT.W	;
//	PONCT.W	@card@
déclaration	N.C.f.s	déclaration
du	P+D.def.m.s	du
constructeur	N.C.m.s	constructeur
public	A.qual.m.s	public
function	N.C.f.s	function
__construct	ET	çäconstruct
($id=0){	N.P.x.s	<unknown>
if(	ET	ifà
!	PONCT.S	!

$this->id	N.P.m.s	<unknown>
)	PONCT.W	)
$this->id=$id	N.P.m.s	<unknown>
;	PONCT.W	;
}	ET	}
public	A.qual.m.s	public
function	N.C.f.s	function
__ToString	N.P.m.s	<unknown>
(	PONCT.W	(
)	PONCT.W	)
{	P	à
Return	N.C.m.s	return
‘	P	à
nom	N.C.m.s	nom
:	PONCT.W	:
’	N.C.m.s	’
.	PONCT.S	.

$this->nom	N.P.m.s	<unknown>
.	PONCT.S	.

‘	P	à
age	N.C.m.s	age
:	PONCT.W	:
‘	N.C.m.s	‘
.	PONCT.S	.

$this->age	N.P.x.s	<unknown>
.	PONCT.S	.

‘	N.C.m.s	‘
<br/>	N.C.m.s	<unknown>
;	PONCT.W	;
}	N.C.m.s	}
}	N.C.m.s	}
//	PONCT.W	@card@
connexion	N.C.f.s	connexion
à	P	à
la	D.def.f.s	le
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
…	N.C.m.s	…
.	PONCT.S	.

//	PONCT.W	@card@
affichage	N.C.m.s	affichage
du	P+D.def.m.s	du
résultats	N.C.m.s	résultat
:	PONCT.W	:
while	N.C.m.s	while
(	PONCT.W	(
$obj	N.P.m.s	<unknown>
=	PONCT.W	=
$result->fetch_object(‘Personne’))	N.P.x.s	<unknown>
{	P+D.def.m.s	c
echo	ET	echo
$obj	N.P.x.s	<unknown>
;	PONCT.W	;
}	P	à
Traquer	VW	traquer
les	D.def.f.p	le
erreurs	N.C.f.p	erreur
avec	P	avec
PDO	N.P.x.s	Pdo
try-catch(PDOException)	N.C.m.s	try-catchëpdoexceptionç
Pour	P	pour
identifier	VW	identifier
la	D.def.f.s	le
source	N.C.f.s	source
des	P+D.def.f.p	du
erreurs	N.C.f.p	erreur
lors	ADV.-	lors
de	P	de
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
du	P+D.def.m.s	du
script	N.C.m.s	script
PHP	N.P.m.s	Php
,	PONCT.W	,
Ajouter	VW	ajouter
le	D.def.m.s	le
6ème	A.ord.m.s	6ème
paramètre	N.C.m.s	paramètre
dans	P	dans
PDO	N.P.x.s	Pdo
comme	P	comme
suit	V.P.3.s	suivre
:	PONCT.W	:
<	N.C.m.s	<
?	PONCT.S	?

php	N.C.m.s	<unknown>
$bdd	N.P.x.s	<unknown>
=	PONCT.W	=
new	ET	new
PDO	N.P.x.s	Pdo
(	PONCT.W	(
'	PONCT.W	'
mysql:host=localhost	N.P.x.s	<unknown>
;	PONCT.W	;
dbname=world	N.C.m.s	<unknown>
;	PONCT.W	;
charset=utf8	N.C.m.s	<unknown>
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
root	N.C.m.s	root
'	PONCT.W	'
,	PONCT.W	,
'	PONCT.W	'
'	PONCT.W	'
,	PONCT.W	,
array(PDO::ATTR_ERRMODE	N.C.m.s	<unknown>
=>	N.P.x.s	<unknown>
PDO::ERRMODE_EXCEPTION	N.P.x.s	<unknown>
)	PONCT.W	)
)	PONCT.W	)
;	PONCT.W	;
?	PONCT.S	?

>	P	à
àDésormais	ADV.-	àdésormais
,	PONCT.W	,
toutes	A.ind.f.p	tout
vos	D.poss.f.p	votre
requêtes	N.C.f.p	requête
SQL	PRO.rel.f.p	sql
qui	PRO.rel.f.p	qui
comportent	V.P.3.p	comporter
des	D.ind.f.p	du
erreurs	N.C.f.p	erreur
vont	V.P.3.p	aller
avoir	VW	avoir
un	D.ind.m.s	un
message	N.C.m.s	message
beaucoup	ADV.-	beaucoup
plus	ADV.-	plus
clair	A.qual.m.s	clair
.	PONCT.S	.

Exercices	N.C.m.p	exercice
PHP/MYSQL	N.P.m.s	Phpmysql
Exercice	N.P.m.s	Exercice
1	A.card.m.s	@card@
:	PONCT.W	:
Ecrire	VW	ecrire
un	D.ind.m.s	un
script	N.C.m.s	script
PHP	N.C.m.s	php
pour	P	pour
afficher	VW	afficher
les	D.def.f.p	le
lignes	N.C.f.p	ligne
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
citoyen	A.qual.m.s	citoyen
en	P	en
affichant	VG	afficher
la	D.def.f.s	le
date	N.C.f.s	date
au	P+D.def.m.s	au
format	N.C.m.s	format
jj-mm-yyyy	N.P.m.s	Jj-mmyyyy
.	PONCT.S	.

Exercice	N.C.m.s	exercice
2	A.card.m.s	@card@
:	PONCT.W	:
REFAIRE	N.C.m.s	refaire
l'	D.def.m.s	le
exercice	N.C.m.s	exercice
du	P+D.def.m.s	du
code	N.C.m.s	code
secret	A.qual.m.s	secret
en	P	en
utilisant	VG	utiliser
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
.	PONCT.S	.

-login1/pass1	N.P.f.s	<unknown>
va	V.P.3.s	aller
devoir	VW	devoir
lire	VW	lire
la	D.def.f.s	le
page	N.C.f.s	page
secret1.php	A.qual.f.s	<unknown>
-login2./pass2	N.P.x.s	<unknown>
va	V.P.3.s	aller
devoir	VW	devoir
lire	VW	lire
la	D.def.f.s	le
page	N.C.f.s	page
secret2.php	A.qual.f.s	<unknown>
.	PONCT.S	.

Transaction	N.C.f.s	transaction
:	PONCT.W	:
Modèle	N.P.m.s	Modèle
ACID	N.P.m.s	Acid
Transaction	N.C.f.s	transaction
est	V.P.3.s	être
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
de	P	de
traitements	N.C.m.p	traitement
(	PONCT.W	(
requêtes	N.C.f.p	requête
)	PONCT.W	)
exécutés	VK.m.p	exécuter
en	P	en
tous	PRO.ind.m.p	tout
ou	C.C	ou
rien	PRO.neg.m.s	rien
.	PONCT.S	.

ACID	N.C.m.s	acid
=	P	à
Atomicité	N.C.f.s	atomicité
,	PONCT.W	,
Cohérence	N.C.f.s	cohérence
,	PONCT.W	,
Isolation	N.C.f.s	isolation
et	C.C	et
Durabilité	N.P.f.s	Durabilité
.	PONCT.S	.

1	A.card.m.s	@card@
.	PONCT.S	.

Atomicité	N.C.f.s	atomicité
assure	V.P.3.s	assurer
qu'	C.S	que
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
se	CL.refl.3.f.s	se
fait	V.P.3.s	faire
au	P+D.def.m.s	au
complet	N.C.m.s	complet
ou	C.C	ou
pas	ADV.neg	pas
du	P+D.def.m.s	du
tout	N.C.m.s	tout
.	PONCT.S	.

àCette	D.dem.f.s	àcette
règle	N.C.f.s	règle
doit	V.P.3.s	devoir
être	VW	être
respectée	VK.f.s	respecter
dans	P	dans
toute	A.ind.f.s	tout
les	D.def.f.p	le
situations	N.C.f.p	situation
,	PONCT.W	,
notamment	ADV.-	notamment
lors	A.qual.m.s	lors
d'	P	de
une	D.ind.f.s	un
panne	N.C.f.s	panne
d'	P	de
électricité	N.C.f.s	électricité
,	PONCT.W	,
une	D.ind.f.s	un
défaillance	N.C.f.s	défaillance
de	P	de
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
Début	N.C.m.s	début
de	P	de
transaction	N.C.f.s	transaction
:	PONCT.W	:
START	N.P.m.s	Start
TRANSACTION	N.C.f.s	transaction
Requêtes	N.C.f.p	requête
:	PONCT.W	:
SELECT	N.P.m.s	Select
,	PONCT.W	,
UPDATE	N.P.f.s	Update
.	PONCT.S	.
.	PONCT.S	.
Validation	N.C.f.s	validation
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
:	PONCT.W	:
COMMIT	N.P.m.s	Commit
OU	D.poss.f.s	ou
Annulation	N.C.f.s	annulation
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
en	P	en
cas	N.C.m.s	cas
d'	P	de
erreur	N.C.f.s	erreur
:	PONCT.W	:
ROLLBACK	N.P.m.s	Rollback
.	PONCT.S	.

RQ	N.P.f.s	Rq
:	PONCT.W	:
S'	C.S	si
il	CL.suj.3.m.s	il
y	CL.obj.3.m.s	y
a	V.P.3.s	avoir
une	D.ind.f.s	un
erreur	N.C.f.s	erreur
d'	P	de
intégrité	N.C.f.s	intégrité
de	P	de
données	N.C.f.p	donnée
,	PONCT.W	,
le	D.def.m.s	le
roolback	N.C.m.s	roolback
se	CL.refl.3.m.s	se
fait	V.P.3.s	faire
automatiquement	ADV.-	automatiquement
Transaction	N.C.f.s	transaction
:	PONCT.W	:
Modèle	N.C.m.s	modèle
ACID	N.P.m.s	Acid
2	A.card.m.s	@card@
.	PONCT.S	.

Cohérence	N.C.f.s	cohérence
assure	V.P.3.s	assurer
que	C.S	que
chaque	D.ind.f.s	chaque
transaction	N.C.f.s	transaction
amènera	V.F.3.s	amener
le	D.def.m.s	le
système	N.C.m.s	système
d'	P	de
un	D.ind.m.s	un
état	N.C.m.s	état
valide	A.qual.m.s	valide
(	PONCT.W	(
t	N.card.m.s	t
)	PONCT.W	)
à	P	à
un	D.ind.m.s	un
autre	A.ind.m.s	autre
état	N.C.m.s	état
valide	A.qual.m.s	valide
t+1	N.C.m.s	<unknown>
(	PONCT.W	(
t	PONCT.W	t
:	PONCT.W	:
avant	P	avant
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
et	C.C	et
t+1	N.C.m.s	<unknown>
après	P	après
l'	D.def.f.s	le
exécution	N.C.f.s	exécution
)	PONCT.W	)
.	PONCT.S	.

Transaction	N.C.f.s	transaction
:	PONCT.W	:
Modèle	N.C.m.s	modèle
ACID	N.P.m.s	Acid
3	A.card.m.s	@card@
.	PONCT.S	.

Isolation	N.C.f.s	isolation
:	PONCT.W	:
aucune	D.neg.f.s	aucun
dépendance	N.C.f.s	dépendance
entre	P	entre
les	D.def.f.p	le
transactions	N.C.f.p	transaction
.	PONCT.S	.

Exemple	N.C.m.s	exemple
:	PONCT.W	:
utilisation	N.C.f.s	utilisation
de	P	de
la	D.def.f.s	le
notion	N.C.f.s	notion
de	P	de
‘	N.C.m.s	‘
verrou	A.qual.m.s	verrou
’	N.C.m.s	’
pour	P	pour
bloquer	VW	bloquer
en	P	en
lecture	N.C.f.s	lecture
et	C.C	et
/ou	C.S	oou
en	P	en
écriture	N.C.f.s	écriture
l'	D.def.m.s	le
accès	N.C.m.s	accès
à	P	à
une	D.ind.f.s	un
base	N.C.f.s	base
de	P	de
données	N.C.f.p	donnée
.	PONCT.S	.

4	A.card.m.s	@card@
.	PONCT.S	.

Durabilité	N.C.f.s	durabilité
:	PONCT.W	:
assure	V.P.3.s	assurer
que	C.S	que
lorsqu'	C.S	lorsque
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
a	V.P.3.s	avoir
été	VK.m.s	être
confirmée	VK.f.s	confirmer
,	PONCT.W	,
el	CL.suj.3.m.s	el
e	CL.refl.3.f.s	e
demeure	V.P.3.s	demeurer
enregistrée	VK.f.s	enregistrer
même	ADV.-	même
à	P	à
la	D.def.f.s	le
suite	N.C.f.s	suite
d'	P	de
une	D.ind.f.s	un
panne	N.C.f.s	panne
d'	P	de
électricité	N.C.f.s	électricité
,	PONCT.W	,
d'	P	de
une	D.ind.f.s	un
panne	N.C.f.s	panne
de	P	de
l'	D.def.m.s	le
ordinateur	N.C.m.s	ordinateur
ou	C.C	ou
d'	P	de
un	D.ind.m.s	un
autre	A.ind.m.s	autre
problème	N.C.m.s	problème
...	PONCT.W	<unknown>
Transactions	N.C.f.p	transaction
avec	P	avec
MYSQL	N.P.m.s	Mysql
MYSQL	N.P.m.s	Mysql
a	V.P.3.s	avoir
la	D.def.f.s	le
particularité	N.C.f.s	particularité
de	P	de
gérer	VW	gérer
plusieurs	D.ind.m.p	plusieurs
moteurs	N.C.m.p	moteur
de	P	de
stockage	N.C.m.s	stockage
dans	P	dans
une	D.ind.f.s	un
même	A.ind.f.s	même
BD	N.P.m.s	Bd
,	PONCT.W	,
aussi	ADV.-	aussi
appelé	VK.m.s	appeler
moteur	N.C.m.s	moteur
de	P	de
table	N.C.f.s	table
.	PONCT.S	.

•	N.C.m.s	•
Un	D.ind.m.s	un
moteur	N.C.m.s	moteur
de	P	de
stockage	N.C.m.s	stockage
est	V.P.3.s	être
un	D.ind.m.s	un
ensemble	N.C.m.s	ensemble
d'	P	de
algorithmes	N.C.m.p	algorithme
permettant	VG	permettre
de	P	de
stocker	VW	stocker
et	C.C	et
d'	P	de
accéder	VW	accéder
aux	P+D.def.f.p	au
données	N.C.f.p	donnée
dans	P	dans
un	D.ind.m.s	un
SGBD	N.P.m.s	Sgbd
.	PONCT.S	.

En	P	en
principe	N.C.m.s	principe
,	PONCT.W	,
un	D.ind.m.s	un
seul	A.qual.m.s	seul
moteur	N.C.m.s	moteur
est	V.P.3.s	être
utilisé	VK.m.s	utiliser
par	P	par
un	D.ind.m.s	un
SGBD	N.P.m.s	Sgbd
.	PONCT.S	.

•	N.C.m.s	•
Pour	P	pour
lister	VW	lister
tous	A.ind.m.p	tous
les	D.def.m.p	le
moteurs	N.C.m.p	moteur
,	PONCT.W	,
utilisez	V.Y.2.p	utiliser
la	D.def.f.s	le
requête	N.C.f.s	requête
:	PONCT.W	:
SHOW	N.P.m.s	Show
ENGINES	N.P.x.s	Engines
;	PONCT.W	;
Transactions	N.C.f.p	transaction
avec	P	avec
MYSQL	N.P.m.s	Mysql
•	D.card.m.p	•
Principaux	A.qual.m.p	principal
moteurs	N.C.m.p	moteur
de	P	de
stockage	N.C.m.s	stockage
MYSQL	N.P.m.s	Mysql
:	PONCT.W	:
MyISAM	N.P.m.s	Myisam
:	PONCT.W	:
très	ADV.-	très
populaire	A.qual.m.s	populaire
ü	P+D.def.m.s	ü
Très	ADV.-	très
simple	A.qual.m.s	simple
d'	P	de
utilisation	N.C.f.s	utilisation
.	PONCT.S	.

ü	D.ind.m.s	ü
très	ADV.-	très
performant	A.qual.m.s	performant
sur	P	sur
des	D.ind.f.p	du
tables	N.C.f.p	table
fréquemment	ADV.-	fréquemment
ouvertes	A.qual.f.p	ouvert
(	PONCT.W	(
très	ADV.-	très
rapide	A.qual.f.s	rapide
pour	P	pour
les	D.def.f.p	le
opération	N.C.f.s	opération
count()	N.C.m.s	countçë
et	C.C	et
en	P	en
lecture	N.C.f.s	lecture
)	PONCT.W	)
ü	P+D.def.m.s	ü
Offre	V.P.3.s	offrir
un	D.ind.m.s	un
index	N.C.m.s	index
FULL-TEXT	N.P.m.s	Full-Text
qui	PRO.rel.m.s	qui
permet	V.P.3.s	permettre
de	P	de
faire	VW	faire
des	D.ind.f.p	du
recherche	N.C.f.s	recherche
précise	A.qual.f.s	précis
sur	P	sur
textes	N.C.m.p	texte
.	PONCT.S	.

×	P	à
Ne	ADV.neg	ne
supporte	V.P.3.s	supporter
ni	C.C	ni
clés	N.C.f.p	clé
étrangères	A.qual.f.p	étranger
,	PONCT.W	,
ni	C.C	ni
les	D.def.f.p	le
transactions	N.C.f.p	transaction
×	P	à
Gère	N.P.m.s	Gère
le	D.def.m.s	le
verrouil	N.C.m.s	verrouil
age	V.P.3.s	ager
au	P+D.def.m.s	au
niveau	N.C.m.s	niveau
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
(	PONCT.W	(
bloque	V.P.3.s	bloquer
la	D.def.f.s	le
table	N.C.f.s	table
entière	A.qual.f.s	entier
lors	ADV.-	lors
des	D.ind.f.p	du
opérations	N.C.f.p	opération
d'	P	de
insertions	N.C.f.p	insertion
,	PONCT.W	,
suppressions	N.C.f.p	suppression
ou	C.C	ou
MAJ	N.P.x.s	Maj
)	PONCT.W	)
.	PONCT.S	.

Transactions	N.C.f.p	transaction
avec	P	avec
MYSQL	N.P.m.s	Mysql
•	D.card.m.p	•
Principaux	A.qual.m.p	principal
moteurs	N.C.m.p	moteur
de	P	de
stockage	N.C.m.s	stockage
MYSQL	N.P.m.s	Mysql
:	PONCT.W	:
Memory	N.P.m.s	Memory
:	PONCT.W	:
Stocke	N.P.m.s	Stocke
les	D.def.f.p	le
données	N.C.f.p	donnée
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
en	P	en
mémoire	N.C.f.s	mémoire
(	PONCT.W	(
RAM	N.P.f.s	Ram
)	PONCT.W	)
.	PONCT.S	.

ü	P+D.def.m.s	ü
Rapidité	N.C.f.s	rapidité
d'	P	de
accès	N.C.m.s	accès
×	A.qual.m.s	×
En	P	en
cas	N.C.m.s	cas
de	P	de
panne	N.C.f.s	panne
,	PONCT.W	,
les	D.def.f.p	le
données	N.C.f.p	donnée
stockées	VK.f.p	stocker
sont	V.P.3.p	être
supprimées	VK.f.p	supprimer
.	PONCT.S	.

InnoDB	N.P.m.s	Innodb
:	PONCT.W	:
souvent	ADV.-	souvent
utilisé	VK.m.s	utiliser
dans	P	dans
les	D.def.m.p	le
secteurs	N.C.m.p	secteur
sensibles	A.qual.m.p	sensible
.	PONCT.S	.

ü	P+D.def.m.s	ü
Gestion	N.C.f.s	gestion
des	P+D.def.f.p	du
clés	N.C.f.p	clé
étrangères	A.qual.f.p	étranger
et	C.C	et
support	A.qual.m.s	support
des	P+D.def.f.p	du
transactions	N.C.f.p	transaction
(	PONCT.W	(
chaque	D.ind.f.s	chaque
requête	N.C.f.s	requête
est	V.P.3.s	être
considérée	VK.f.s	considérer
comme	P	comme
une	D.ind.f.s	un
transaction	N.C.f.s	transaction
)	PONCT.W	)
.	PONCT.S	.

ü	P+D.def.m.s	ü
Gère	N.P.m.s	Gère
le	D.def.m.s	le
verrouil	N.C.m.s	verrouil
age	V.P.3.s	ager
au	P+D.def.m.s	au
niveau	N.C.m.s	niveau
de	P	de
la	D.def.f.s	le
ligne	N.C.f.s	ligne
.	PONCT.S	.

×	P	à
Ne	ADV.neg	ne
propose	V.P.3.s	proposer
pas	ADV.neg	pas
d'	P	de
index	N.C.m.s	index
FULL-TEXT	N.P.m.s	Full-Text
,	PONCT.W	,
légèrement	ADV.-	légèrement
plus	ADV.-	plus
lent	A.qual.m.s	lent
dans	P	dans
les	D.def.f.p	le
opérations	N.C.f.p	opération
.	PONCT.S	.

Transactions	N.C.f.p	transaction
avec	P	avec
MYSQL	N.P.m.s	Mysql
•	P	à
Exemple	N.C.m.s	exemple
de	P	de
gestion	N.C.f.s	gestion
de	P	de
transaction	N.C.f.s	transaction
avec	P	avec
Mysql	N.P.m.s	<unknown>
(	PONCT.W	(
achat	N.C.m.s	achat
en	P	en
ligne	N.C.f.s	ligne
)	PONCT.W	)
1	N.card.m.s	@card@
.	PONCT.S	.

Pour	P	pour
supporter	VW	supporter
les	D.def.f.p	le
transaction	N.C.f.p	transaction
,	PONCT.W	,
il	CL.suj.3.m.s	il
faut	V.P.3.s	falloir
spécifier	VW	spécifier
le	D.def.m.s	le
moteur	N.C.m.s	moteur
InnoDB	A.qual.m.s	<unknown>
lors	A.qual.m.s	lors
de	P	de
la	D.def.f.s	le
création	N.C.f.s	création
de	P	de
la	D.def.f.s	le
table	N.C.f.s	table
CREATE	N.P.f.s	Create
TABLE	N.P.f.s	Table
Compte	N.P.x.s	Compte
(	PONCT.W	(
ID	N.P.m.s	Id
int	V.J.3.s	enir
,	PONCT.W	,
Solde	N.P.f.s	Solde
int	V.J.3.s	enir
not	D.poss.m.s	notre
null	A.qual.m.s	nul
)	PONCT.W	)
ENGINE=InnoDB	N.P.x.s	Engineinnodb
;	PONCT.W	;
SET	N.P.m.s	Set
autocommit=0	V.P.3.s	<unknown>
;	PONCT.W	;
//	PONCT.W	@card@
désactiver	VW	désactiver
la	D.def.f.s	le
validation	N.C.f.s	validation
automatique	A.qual.f.s	automatique
des	P+D.def.f.p	du
requêtes	N.C.f.p	requête
.	PONCT.S	.

START	N.P.m.s	Start
TRANSACTION	N.C.f.s	transaction
;	PONCT.W	;
UPDATE	N.P.m.s	Update
compte	V.P.3.s	compter
SET	N.P.m.s	Set
solde=solde+100	A.card.m.p	<unknown>
where	N.C.m.s	where
id=IDVendeur	N.P.x.s	Idçidvendeur
;	PONCT.W	;
UPDATE	N.P.m.s	Update
compte	V.P.3.s	compter
SET	N.P.m.s	Set
solde=solde-100	D.card.m.s	<unknown>
where	N.C.m.s	where
id=IDAcheteur	N.P.x.s	Idçidacheteur
;	PONCT.W	;
COMMIT	N.P.m.s	Commit
;	PONCT.W	;
Transactions	N.C.f.p	transaction
avec	P	avec
PDO	N.P.x.s	Pdo
Exemple	N.C.m.s	exemple
:	PONCT.W	:
•	P+D.def.m.s	c
Début	N.C.m.s	début
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
:	PONCT.W	:
$bdd->beginTransaction()	N.P.x.s	<unknown>
;	PONCT.W	;
•	P+D.def.m.s	c
Specification	N.C.f.s	specification
de	P	de
Transaction	N.C.f.s	transaction
:	PONCT.W	:
$bdd->query()	N.P.m.s	<unknown>
;	PONCT.W	;
$bdd->query()	N.P.m.s	<unknown>
;	PONCT.W	;
.	PONCT.S	.
.	PONCT.S	.
Validation	N.C.f.s	validation
/	PONCT.W	@card@
annulation	N.C.f.s	annulation
de	P	de
la	D.def.f.s	le
transaction	N.C.f.s	transaction
avec	P	avec
:	PONCT.W	:
$bdd->commit()	N.P.x.s	<unknown>
;	PONCT.W	;
$bdd->rol	N.P.m.s	<unknown>
back()	N.C.m.s	backçë
;	PONCT.W	;
Exercice	N.P.m.s	Exercice
Écrire	VW	écrire
un	D.ind.m.s	un
script	N.C.m.s	script
php	N.C.m.s	<unknown>
qui	PRO.rel.m.s	qui
va	V.P.3.s	aller
compter	VW	compter
le	D.def.m.s	le
nombre	N.C.m.s	nombre
de	P	de
visiteurs	N.C.m.p	visiteur
sur	P	sur
votre	D.poss.m.s	votre
site	N.C.m.s	site
.	PONCT.S	.

Remarque	N.C.f.s	remarque
:	PONCT.W	:
1	N.card.m.s	@card@
.	PONCT.S	.

Avant	P	avant
d'	P	de
écrire	VW	écrire
le	D.def.m.s	le
script	N.C.m.s	script
,	PONCT.W	,
pensez	V.P.2.p	penser
à	P	à
choisir	VW	choisir
le	D.def.m.s	le
moteur	N.C.m.s	moteur
de	P	de
stockage	N.C.m.s	stockage
adéquat	A.qual.m.s	adéquat
.	PONCT.S	.

2	A.card.m.s	@card@
.	PONCT.S	.

Utiliser	VW	utiliser
le	D.def.m.s	le
driver	VW	driver
PDO	N.P.x.s	Pdo
.	PONCT.S	.

Références	N.C.f.p	référence
Manuel	N.P.m.s	Manuel
PHP	N.P.m.s	Php
:	PONCT.W	:
•	D.card.m.p	•
http://php.net	N.C.m.s	<unknown>
Cours	N.P.m.s	Cours
en	P	en
ligne	N.C.f.s	ligne
:	PONCT.W	:
•	D.card.m.s	•
https://openclassrooms.com/courses/	N.C.m.s	<unknown>
programmez-en-oriente-objet-en-php	ADV.-	programmez-en-oriente-objet-en-php
•	P+D.def.m.s	c
http://caron.ws/data/livre/PHP_v1.pdf	N.C.m.s	<unknown>

