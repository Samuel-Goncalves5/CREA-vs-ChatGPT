PHP
INTRO
–
HTML
–
WAMP
–
PREMIERS
PROGRAMMES
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/introduction-a-php
http
//php.net/manual/fr/langref.php
http
//www.w3schools.com/php/
Open
Class
Room
SOMMAIRE
Sommaire
...................................................................................................................................
1
INTRO-HTML-WAMP-Premiers
programmes
................................................................................
3
1
Introduction
PHP
.........................................................................................................................
3
Exemples
exercices
...................................................................................................................................
3
Objectifs
cours
.........................................................................................................................................
3
Site
dynamique
site
statique
–
Rôle
utilisateur
administrateur
............................................
4
Historique
PHP
.........................................................................................................................................
5
Architecture
client
serveur
...........................................................................................................................
6
Principes
PHP
écrire
code
HTML
......................................................................................................
9
2
Rappels
HTML
-
CSS
.........................................................................................................................
12
HTML
base
h1-h6
p
br
img
................................................................................................................
12
Squelette
html
............................................................................................................................................
12
CSS
base
.................................................................................................................................................
13
Chargez
tous
exemples
HTML
...............................................................................................................
14
Exemple
1
page
base
....................................................................................................................
14
Exemple
2
page
base
lien
vers
formulaire
.................................................................
15
Exemple
3
page
base
lien
vers
formulaire
tableau
......................................
17
3
outils
développement
...........................................................................................................
19
Outils
fonctionnement
site
WEB
............................................................................................
19
Outils
développement
PHP-MySQL
.......................................................................................................
20
4
Installation
WAMP
......................................................................................................................
22
5
Premiers
usages
WAMP
..............................................................................................................
23
1
Démarrer
WAMP
...................................................................................................................................
23
2
Installer
icône
WAMP
directement
barre
icône
..................................................................
23
3
Passer
Wamp
français
......................................................................................................................
23
4
Consulter
serveurs
gestionnaire
tâches
........................................................................
24
5
Tester
WAMP
afficher
page
WampServer
.......................................................................................
25
6
Allez
dossier
projets
\wamp64\www
créez
dossier
home
...............................
25
7
Afficher
contenu
home
page
WampServer
................................................................
25
8
Accéder
dossier
home
page
WampServer
.....................................................................
25
6
Premiers
programmes
PHP
.........................................................................................................
26
9
Premier
programme
php
.......................................................................................................................
26
10
Fichier
index.php
.................................................................................................................................
27
11
Deuxième
programme
php
..................................................................................................................
28
12
Consulter
contenu
dossiers
site
ligne
........................................................................
29
WAMP
-
version
détaillée
peut
passer
........................................................................................
30
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
1/53
0
Reprise
détaillée
paragraphe
précédent
premiers
usages
-
résumé
............................................
30
1
Tester
WAMP
.........................................................................................................................................
30
2
Travailler
fichiers
PHP
.............................................................................................................
32
3
Paramétrages
divers
..............................................................................................................................
37
4
PHPMyAdmin
.........................................................................................................................................
37
5
Paramétrage
installations
display_errors
display_startup_errors
...........................................
37
MAMP
–
version
détaillée
...................................................................................................................
39
1
Principes
.................................................................................................................................................
39
2
Lancer
MAMP
........................................................................................................................................
39
3
Problème
installation
–
problème
port
.........................................................................................
39
4
Accès
projets
web
...........................................................................................................................
39
5
PHPMyAdmin
.........................................................................................................................................
39
6
Fichier
php.ini
........................................................................................................................................
40
7
Trois
exemples
instruction
echo
print
.................................................................................
41
Chargez
installez
exemples
...............................................................................................................
41
Exemple
1
code
HTML
minimum
..............................................................................................................
41
Exemple
2
code
HTML
minimum
echo
php
................................................................................
42
Exemple
3
page
HTML
standard
echo
php
.................................................................................
43
Exercice
echo
..............................................................................................................................................
44
Principes
généraux
code
PHP
................................................................................................................
45
8
Gestion
erreurs
.........................................................................................................................
46
Affichage
erreurs
-
Rappel
...................................................................................................................
46
Principaux
messages
erreurs
...................................................................................................................
46
TP
Gestion
erreurs
-
variables
display_errors
display_startup_errors
.................................
47
9
Inclusion
fichiers
PHP
–
factorisation
code
HTML
....................................................................
48
Rappel
balises
structurantes
HTML
.................................................................................................
48
problème
................................................................................................................................................
48
Solution
PHP
inclusion
fichier
PHP
...............................................................................................
48
Exemple
....................................................................................................................................................
49
Solution
HTML
inclusion
fichier
HTML
..........................................................................................
50
TP
Includes
................................................................................................................................................
51
10
Documentation
.............................................................................................................................
52
Principes
.....................................................................................................................................................
52
Exemple
usage
php.net
.........................................................................................................................
52
Edition
février
2019
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
2/53
INTRO-HTML-WAMP-PREMIERS
PROGRAMMES
1
Introduction
PHP
Exemples
exercices
exemples
cours
fichier
zip
fournis
article
cours
00-BASES-DULANGAGE.zip
exemples
présentés
chapitre
vert
Chargez
fichier
mettez-le
dossier
Partie_2
répertoire
web
www
serveur
WAMP
exercices
faire
présentés
chapitre
jaune
Objectifs
cours
pages
web
HTML
aussi…
•
Formulaire
contact
•
Espace
membre
login
pseudo
forum
actualités
newsletter
etc.
•
Back
office
•
Faire
circuler
informations
page
page
•
Faire
attention
failles
sécurité
•
Enregistrer
infos
BD
•
Structurer
site
POO
architecture
MVC
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
3/53
Site
dynamique
site
statique
–
Rôle
utilisateur
administrateur
Site
statique
web
1.0
utilisateur
consulte
contenu
site
sans
fournir
informations
message
login
etc.
administrateur
ajoute
nouveaux
éléments
site
nouvelles
informations
nouveaux
articles
nouvelles
pages
revenant
code
programmant
sites
statiques
faits
uniquement
HTML
CSS
JavaScript
langages
clients
universels
Site
dynamique
web
2.0
utilisateur
fournit
informations
site
messages
login
etc
partie
site
publique
faut
mot
passe
connecter
front-office
administrateur
gère
contenu
site
ajout
modification
suppression
informations
articles
messages
utilisateur
modération
messages
etc.
partie
site
dédiée
administration
back-office
sites
dynamiques
faits
•
langages
clients
HTML
CSS
JavaScript
•
langage
serveur
PHP
Java
#
Ruby
Python
JavaScript
Node
etc.
•
langages
serveurs
utilisent
général
base
données
MySQL
MariaDB
Oracle
SQL-Server
PostgreSQL
SQLite
etc
Souvent
associe
BD
langage
serveur
•
PHP-MySQL
•
Java-Oracle
•
#
-SQL-Server
utilise
aussi
souvent
framework
facilite
accélère
travail
•
Symfony
Laravel
Zend
PHP
•
JEE
Java
•
.Net
#
•
RubyOnRails
Ruby
•
Django
Python
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
4/53
Historique
PHP
PHP-MySQL
début
WEB
2.0
grand
public
PHP
langage
simple
peu
sale
versus
Java
langage
propre
Aujourd
hui
PHP
objet
langage
propre
PHP
intégré
aspects
sécurité
utilise
souvent
frameworks
Laravel
Symfony
Zend
etc.
https
//fr.wikipedia.org/wiki/PHP
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
5/53
Architecture
client
serveur
Langages
côté
client
HTML
CSS
JavaScript
Applications
côté
client
Navigateurs
Firefox
Internet
Explorer
Safari
Opera
etc.
Langages
côté
serveur
SQL
PHP
#
Java
Python
Ruby
etc.
Applications
côté
serveur
Serveurs
HTTP
serveur
web
Apache
PHP
Tomcat
Java
JEE
IIS
#
.Net
Serveurs
SGBD
MySQL
Oracle
SQL-Server
PostgreSQL
MariaDB
SQLite
Remarque
serveur
machine
fait
fonctionner
programme
appelle
aussi
serveur
machine
serveur
parce
contient
programme
serveur
programme
serveur
programme
tourne
24H
24
comme
caractéristique
avoir
interface
utilisateur
Seuls
autres
programmes
peuvent
communiquer
programme
serveur
appelle
serveur
deamon
serveur
mysql
PC
appelle
mysqld
deamon
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
6/53
Affichage
page
HTML
navigateur
3
cas
possibles
•
local
•
langage
serveur
•
AJAX
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
7/53
Exemple
comment
accède
page
Web
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
8/53
Principes
PHP
écrire
code
HTML
Ecrire
code
HTML
PHP
PHP
sert
écrire
code
HTML
dynamique
allant
exemple
chercher
informations
BD
Traduction
PHP
HTML
navigateur
comprend
langage
HTML
serveur
web
permet
traduire
code
PHP
page
HTML
Principes
traduction
1
client
demande
fichier
HTML
PHP
page
web
HTML
PHP
2
serveur
web
récupère
page
HTML
PHP
puis
traduit
HTML
rien
faire
HTML
3
traduction
peut
consister
inclure
autres
fichiers
fichiers
PHP
aussi
récupérer
informations
base
données
fichiers
4
fin
traduction
produit
page
entièrement
HTML
renvoyée
client
navigateur
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
9/53
Exemples
traduction
Quand
trouve
instructions
PHP
serveur
Apache
transforme
instructions
code
HTML
Exemple
1
traduction
p
php
echo
``
visiteur
n°
numVisiteur
/p
balise
p
laissée
telle
quelle
balise
php
traduite
résultat
traduction
donnera
variable
numVisiteur
vaut
45
p
visiteur
n°
45
/p
peut
aussi
avoir
instructions
php
interrogent
base
données
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
10/53
Exemple
2
traduction
p
php
reponse
=
bdd-
query
'SELECT
prenom
FROM
utilisateurs
WHERE
id=235
'
echo
``
Bonjour
``
reponse
/p
donnera
SELECT
revoit
Bertrand
p
Bonjour
Bertrand
/p
fonctionner
exemple
nécessite
connecte
abord
BD
pages
HTML
peuvent
être
envoyées
navigateur
client
peut
désormais
interpréter
afficher
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
11/53
2
Rappels
HTML
-
CSS
HTML
base
h1-h6
p
br
img
h1
titre
/h1
h2-h6
p
br
img
src
=
monImage.jpg
href=
URL
…
chaque
balise
peut
mettre
couples
attribut
=
valeur
Squelette
html
DOCTYPE
html
html
lang=
fr
head
meta
charset=
utf-8
/
link
rel=
stylesheet
href=
style.css
/
title
page
/title
/head
body
Contenu
HTML
/body
/html
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
12/53
CSS
base
Principes
selecteur
{
p1
v1
p2
v2
…
pn
vn
}
selecteur
définit
balises
concernées
couple
propriété
valeur
Exemples
sélecteur
*
toutes
balises
p
h1
h2
etc
#
idCeci
balises
id
=
idCeci
.classeCela
balises
class
=
classeCela
p.classeCela
balises
p
class
=
classeCela
att
balises
attribut
nommé
att
att
=
petit
balises
attribut
att=
petit
pseudo
classe
pseudo-classe
mot-clé
peut
être
ajouté
sélecteur
afin
d'indiquer
l'état
spécifique
lequel
l'élément
doit
être
être
ciblé
déclaration
place
après
selecteur
simple
introduits
elt
first-child
premier
enfant
balise
link
non
visités
visited
visités
elt
hover
élément
survolés
elt
focus
élément
focus
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
13/53
Chargez
tous
exemples
HTML
http
//bliaudet.free.fr/IMG/zip/00-Rappels-HTML.zip
Exemple
1
page
base
Coder
page
1
titre
paragraphe
texte
sous
titre
texte
image
Changer
typo
texte
=
font-family
Comic
font-style
italic
color
blue
Encadrer
titre
=
border
solid
black
1px
Centrer
image
=
text-align
center
mettre
faux
texte
chercher
Lorem
ipsum
dolor
google
site
propose
faux
texte
couleurs
nommées
voir
exemple
http
//stylescss.free.fr/couleurs.php
Exemple
1
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
14/53
Exemple
2
page
base
lien
vers
formulaire
Rappels
théoriques
formulaire
balises
formulaire
form
action=
page.php
method=GET
regrouper
input
action
définit
page
appelée
quand
valide
formulaire
méthode
notion
PHP
fieldset
mettre
cadre
autour
input
legend
mettre
texte
cadre
input
type
=
text
name
=
nom
Type=text
avoir
champ
saisie
name
permettra
accéder
PHP
value
saisie
input
type=
submit
name=
submit
value=
Valider
Type
submit
avoir
bouton
validation
value
texte
affiché
Quand
clique
bouton
page
fait
appel
action
balise
form
input
type=
reset
name=
reset
value=
Annuler
Type
reset
annuler
saisie
cours
input
type=
hidden
name=
saisie
value=
saisie
Type
hydden
faire
circuler
name
value
sans
cela
concerne
utilisateur
caché
très
utile
programmation
PHP
select
option
créer
menu
déroulant
textarea
avoir
zone
saisie
Autres
type
balise
input
précisant
e
type
balise
input
obtient
comportement
différent
exemple
type
tel
saisie
numéro
téléphone
champ
saisie
passe
rouge
type=password
caractères
cachés
email
url
tel
number
+min
max
step
range
+min
max
step
curseur
color
firefox
propose
palette
colorée
date
search
chechobox
+checked
boutons
cocher
radio
radio
bouton
1
seul
parmi
plusieurs
Autres
attributs
balise
input
Attribut
maxlength
input
taille
maximum
saisie
Attribut
autofocus
input
input
place
curseur
directement
champ
Attribut
required
input
oblige
saisie
avant
envoyer
formulaire
Safari
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
15/53
Exemple
2
code
propose
page
exercice
1
lien
vers
formulaire
formulaire
renvoie
vers
page
exercice
1
quand
valide
3
cas
possible
âge
18
18-25
25
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
16/53
Exemple
3
page
base
lien
vers
formulaire
tableau
Rappels
théoriques
tableaux
balises
structures
table
tr
texte
directement
dedans
•
table
tableau
•
tr
ligne
balises
données
th
td
chaque
ligne
met
cellules
•
th
nom
colonne
1ère
ligne
•
td
toutes
autres
cellules
Encadrement
minimum
table
border
•
table
border
encadre
comme
suit
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
17/53
Exemple
3
peut
mettre
formulaire
tableau
résultat
précédemment
sauf
zones
saisie
alignées
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
18/53
3
outils
développement
Outils
fonctionnement
site
WEB
Présentation
faire
fonctionner
site
WEB
faut
outils
côté
client
côté
serveur
Coté
Client
navigateur
navigateur
interagit
utilisateur
comprend
HTML
CSS
JavaScript
comprend
PHP
Côté
Serveur
serveur
web
serveur
BD
1
serveur
web
serveur
http
interagit
navigateur
serveur
BD
serveur
web
traduit
code
PHP
HTML
comprend
PHP
serveur
BD
interagit
serveur
web
disque
dur
sauvegarder
récupérer
données
comprend
SQL
1
différence
entre
serveur
web
serveur
application
https
//www.supinfo.com/articles/single/1156-difference-serveur-web
pdf
correspondant
lien
marche
http
//bliaudet.free.fr/IMG/pdf/Difference-entre-serveur-web-et-serveur-d-application.pdf
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
19/53
Outils
développement
PHP-MySQL
Présentation
développer
site
WEB
faut
outils
permettent
écrire
code
faire
machine
serveur
navigateur
Coté
Client
–
Partie
statique
•
HTML
CSS
Editeur
texte
VSCode
SublimeText
brackets
etc.
•
Affichage
page
Navigateur
•
Hébergement
site
logiciel
FTP
Côté
Serveur
-
Partie
dynamique
•
PHP
Editeur
texte
•
SQL
Editeur
texte
•
Serveur
HTTP
Apache
•
Serveur
SGBD
MySQL
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
20/53
Solutions
existe
solutions
tout
fournissent
serveurs
HTTP
SGBD
ainsi
interface
utilisateur
utiliser
serveurs
tester
code
HTML
PHP
machine
développement
joue
rôle
serveur
elle-même
tant
client
exemple
WAMP
Windows
Apache
MySQL
PHP
MAMP
Mac
LAMPP
sous
Linux
P
plus
Perl
XAMPP
EasyPHP
etc
Aucune
solution
parfaite
radicalement
supérieure
autre
question
habitude
choisit
WAMP
peut
aussi
utiliser
XAMPP
MAMP
MAC
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
21/53
4
Installation
WAMP
http
//bliaudet.free.fr/article.php3
id_article=307
Aller
option
3
WAMP
allez
télécharger
fichier
installation
wampserver3.1.4_x64.exe
selon
version
Pendant
installation
choisir
navigateur
défaut
Chrome
Firefox
préférence
surtout
internet
explorer
choisir
éditeur
défaut
VSCode
préférence
Sublime
Text
Autoriser
déblocage
pare-feu
Détails
installation
WAMP
article
http
//bliaudet.free.fr/article.php3
id_article=277
poly
http
//bliaudet.free.fr/IMG/pdf/01_Installation_de_WAMP.pdf
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
22/53
5
Premiers
usages
WAMP
1
Démarrer
WAMP
faut
autoriser
pare-feu
2
serveurs
puissent
démarrer
Double
clic
raccourci
bureau
Ca
marche
obtient
icône
verte
icône
rouge
aucun
serveur
démarré
icône
orange
seul
serveur
démarré
peut
démarrer
arrêter
redémarrer
services
services
=
serveurs
2
Installer
icône
WAMP
directement
barre
icône
Déplacer
icône
directement
barre
icônes
3
Passer
Wamp
français
icône
Wamp
–
bouton
gauche
-
choix
langage
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
23/53
4
Consulter
serveurs
gestionnaire
tâches
•
peut
regarder
processus
tournent
Windows
CTRL-ALT-SUP
CTRL-SHIFTESC
•
faut
afficher
détails
•
Apache
HTTP
Server
serveur
web
peut
avoir
deux
•
mysqld
serveur
BD
MySQL
peut
avoir
deux
peut
avoir
3
plus
MariaDB
•
tous
cas
arrête
serveurs
doit
rester
aucun
reste
faut
arrêter
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
24/53
5
Tester
WAMP
afficher
page
WampServer
navigateur
localhost
bien
icône
Wamp
–
bouton
droit
-
choix
localhost
icône
Wamp
icône
verte
zone
notification
bas
droite
page
WampServer
apparaît
6
Allez
dossier
projets
\wamp64\www
créez
dossier
home
icône
Wamp
–
bouton
droit
-
choix
répertoire
www
Mettez
dossier
home
répertoire
www
7
Afficher
contenu
home
page
WampServer
Icône
Wamp
–
bouton
droit
-
choix
localhost
dossier
home
apparait
zone
Projets
cliquable
8
Accéder
dossier
home
page
WampServer
Icône
Wamp
–
bouton
droit
-
choix
localhost
url
trouve
localhost
Ajoutez
/home
url
localhost/home
arrive
page
web
répertoire
home
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
25/53
6
Premiers
programmes
PHP
9
Premier
programme
php
Code
dossier
home
ajouter
fichier
test_1.php
code
suivant
php
echo
h1
Hello
World
/h1
Test
fichier
apparaît
page
WampServer
page
url
http
//localhost/home/
cliquant
dessus
apparaître
page
HTML
correspondant
code
peut
visualiser
code
HTML
MAJ-CTRL-i
Firefox
voit
uniquement
code
HTML
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
26/53
10
Fichier
index.php
répertoire
contient
fichier
index.php
index.html
automatiquement
exécuté
quand
rentre
dossier
Dupliquez
test_1.php
nommant
index.php
Ajoutez
echo
h1
Hello
World
index
/h1
Vérifiez
propriété
Ensuite
renommer
index.php
index0.php
Vérifiez
plus
exécution
automatique
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
27/53
11
Deuxième
programme
php
Code
dossier
home
ajouter
fichier
test_2.php
code
suivant
php
//
utilisant
l'url
//
localhost/home/helloWorld.php
name=Bertrand
name
=
_GET
'name
'
//
header
précise
type
page
header
'Content-Type
text/html
'
echo
'
html
'
echo
'
body
Bonjour
'
name
'
/body
'
echo
'
/html
'
Test
fichier
apparaît
page
WampServer
page
url
http
//localhost/home/
cliquant
dessus
apparaître
page
HTML
correspondant
code
bug
faut
ajouter
url
name=Bertrand
ça
marche
http
//localhost/home/test_2.php
name=Bertrand
peut
visualiser
code
HTML
MAJ-CTRL-i
Firefox
voit
uniquement
code
HTML
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
28/53
12
Consulter
contenu
dossiers
site
ligne
Exemple
http
//www.amberieunatation.fr/spip/IMG/jpg/
site
constate
peut
accéder
contenu
dossier
peut
remonter
dossier
http
//www.amberieunatation.fr/spip/IMG
Jusqu
racine
site
http
//www.amberieunatation.fr
racine
contient
fichier
index.php
page
accueil
site
affiche
éviter
problème
peut
exemple
mettre
fichier
index.php
tous
répertoires
renvoie
exemple
page
accueil
fonction
header
PHP
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
29/53
WAMP
-
version
détaillée
peut
passer
0
Reprise
détaillée
paragraphe
précédent
premiers
usages
-
résumé
chapitre
détaille
fait
paragraphe
précédent
1
Tester
WAMP
Démarrer
WAMP
faut
autoriser
pare-feu
2
serveurs
puissent
démarrer
Double
clic
raccourci
bureau
Ca
marche
obtient
icône
verte
Passer
Wamp
français
icône
Wamp
–
bouton
gauche
-
choix
langage
Tester
WAMP
afficher
page
WampServer
navigateur
localhost
bien
icône
Wamp
–
bouton
droit
-
choix
localhost
icône
Wamp
icône
verte
zone
notification
bas
droite
page
WampServer
apparaît
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
30/53
zone
Projets
vide
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
31/53
2
Travailler
fichiers
PHP
Allez
dossier
projets
\wamp64\www
Aller
\wamp64\www
dossier
mettra
tous
dossiers
travail
Créer
dossier
mon-site
exemple
zone
Projets
contient
nom
dossier
vient
créer
Accéder
projet
localhost/mon-site
entrant
localhost/mon-site
navigateur
accède
projet
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
32/53
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
33/53
Accès
direct
projets
clique
directement
nom
projet
obtient
erreur
accède
projet
Solution
1
remédier
cela
icône
verte
Wamp
bouton
droit
/
paramètres
Wamp
/
ajouter
localhost
URL
Ca
ajoute
warning
zone
Projets
peut
désormais
accéder
projet
cliquant
nom
Solution
2
dossier
projets
/wampp64/www
ouvrez
fichier
index.php
Vers
ligne
33
après
ligne
suppress_localhost
=
wampConf
'urlAddLocalhost
'
==
'off
'
true
false
Ajoutez
suppress_localhost=
false
solution
donne
mêmes
résultats
précédente
plus
compliqué
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
34/53
Solution
3
main
navigateur
localhost/mon-site
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
35/53
Création
premier
fichier
PHP
Ouvrir
dossier
mon-site
VSCode
SublimeText
nom
dossier
ouvrir
fichier
new
file
Puis
save
appelle
index.php
trouve
répertoire
mon-site
fichier
index.php
Exécuter
fichier
PHP
suffit
cliquer
dossier
mon-site
défaut
fichier
index.php
envoyé
serveur
apache
retourne
navigateur
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
36/53
3
Paramétrages
divers
Bouton
droit
icône
verte
Wamp
Langue
Bouton
droit
/
language/
français
Paramètres
Wamp
Ajouter
localhost
URL
accès
direct
dossier
travail
exemple
Outils
tester
ports
exemple
Clic
icône
verte
Wamp
•
Démarrer
arrêter
serveurs
services
apache
mysql
•
Accès
direct
page
localhost
•
Accéder
phpmyadmin
utilitaire
gérer
BD
•
Paramétrer
Apache
MySQL
PHP
AMP
4
PHPMyAdmin
accède
PHPMyAdmin
ainsi
http
//localhost/phpmyadmin/
icône
Wamp
/
PHPMyAdmin
5
Paramétrage
installations
display_errors
display_startup_errors
Fichier
php.ini
existe
fichier
php.ini
paramètre
usage
WAMP
php
trouve
clic
/
PHP
Sous
MAMP
faut
trouver
bon
Quand
va
phpInfo
trouve
configuration
file
/Applications/MAMP/bin/php/php7.0.0/conf
fichier
faut
modifier
Variables
display_errors
=
display_startup_errors
=
variables
display_errors
display_startup_errors
permettent
afficher
messages
erreur
plus
explicites
Elles
doivent
être
messages
erreur
affichent
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
37/53
faut
redémarrer
serveur
Apache
prise
compte
faite
peut
voir
phpInfo
MAMP
Alternative
site
production
Attention
messages
erreurs
doivent
être
vus
utilisateurs
site
déjà
production
faut
passer
fichiers
log
Regarder
fichier
conf
plus
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
38/53
informations
MAMP
–
version
détaillée
1
Principes
suit
logique
tester
WAMP
faut
suivre
chapitre
précédent
faire
partie
pratique
revenir
chapitre
voir
spécificités
MAMP
2
Lancer
MAMP
•
faut
autoriser
parefeu
2
serveurs
puissent
démarrer
•
démarrer
MAMP
Application/MAMP/MAMP.appp
programme
propose
utiliser
MAMP
PRO
évite
•
Préférences
gérer
ports
serveurs
démarrage
automatique
serveurs
•
Démarrer
/
Arrêter
serveurs
3
Problème
installation
–
problème
port
Onglet
préférence
menu
ports
Apache
8080
défaut
4
Accès
projets
web
localhost
:8080
navigateur
taper
localhost
:8080
http
//localhost:8080/
page
index
of
/
apparaît
vide
contiendra
projets
page
correspond
répertoire
/Applications/mamp/htdocs
répertoire
paramétrable
Préférences
/serveur
web
Ouvrir
page
web
start
/mon
site
web
accède
page
localhost
:8080
ainsi
Ouvrir
page
web
start
/
site
web
5
PHPMyAdmin
accède
PHPMyAdmin
ainsi
http
//localhost:8080/phpMyAdmin
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
39/53
Ouvrir
page
web
start
/Tools
/
PHPMyAdmin
6
Fichier
php.ini
existe
fichier
php.ini
paramètre
usage
WAMP
php
trouve
clic
/
PHP
Sous
MAMP
faut
trouver
bon
Quand
va
phpInfo
trouve
configuration
file
/Applications/MAMP/bin/php/php7.0.0/conf
fichier
faut
modifier
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
40/53
7
Trois
exemples
instruction
echo
print
Chargez
installez
exemples
Commencez
charger
dossier
zippé
02-premiers-programmes-echo.zip
installez-le
répertoire
serveur
WAMP
www
Exemple
1
code
HTML
minimum
Objectifs
Simple
affichage
texte
sans
php
Comparaison
entre
fichier
.html
.php
Codes
php
Fichier
Exemple_01_bonjourHTML.html
bonjour
sans
balise
fichier
.php
h3
bonjour
balise
fichier
.php
/h3
Résultats
bonjour
sans
balise
fichier
.php
bonjour
balise
fichier
.php
Fichier
Exemple_01_bonjourHTML.php
bonjour
sans
balise
fichier
.php
h3
bonjour
balise
fichier
.php
/h3
Résultats
bonjour
sans
balise
fichier
.php
bonjour
balise
fichier
.php
Explications
résultat
deux
cas
fichier
.html
fourni
directement
navigateur
texte
affiche
fichier
.php
traité
serveur
Apache
contient
balise
php
serveur
web
effectue
aucune
transformation
résultat
transmis
navigateur
texte
affiche
évite
utiliser
fichiers
html
programmes
côté
serveur
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
41/53
Exemple
2
code
HTML
minimum
echo
php
Objectifs
Simple
affichage
texte
php
Comparaison
entre
fichier
.html
.php
Fichier
php
php
echo
``
bonjour
balise
php
php
echo
``
h3
bonjour
balises
HTML
php
/h3
Résultats
navigateur
bonjour
sans
balise
php
bonjour
balises
HTML
php
Page
HTML
générée
bonjour
sans
balise
php
h3
bonjour
balises
HTML
php
/h3
Explications
•
fichier
.php
traité
serveur
Apache
•
ligne
PHP
trouve
entre
php
•
Echo
instruction
Chaque
instruction
terminée
•
serveur
Apache
traite
instructions
situées
entre
php
echo
instruction
permet
écrire
trouve
entre
guillemets
•
résultat
fichier
HTML
transmis
navigateur
texte
affiche
Remarques
Faire
echo
PHP
plutôt
afficher
directement
texte
HTML
ça
sert
rien
PHP
langage
programmation
permettra
récupérer
informations
formulaires
HTML
faire
calculs
complexes
enregistrer
informations
BD
fichier
récupérer
informations
BD
fichier
remplir
tableaux
données
BD
etc.
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
42/53
Exemple
3
page
HTML
standard
echo
php
Objectifs
Page
HTML
classique
simple
affichage
texte
php
Comparaison
entre
fichier
.html
.php
Fichier
php
DOCTYPE
html
html
lang=
fr
head
meta
charset=
utf-8
/
title
Exemple
1
echo
/title
/head
body
php
echo
``
h1
Affichage
texte
HTML
PHP
/h1
php
echo
``
p
PHP
echo
``
span
style=\
color
red
\
Ligne
écrite
\
echo\
strong
PHP
/strong
/span
/p
/body
/html
Résultats
navigateur
Affichage
texte
HTML
PHP
PHP
Ligne
écrite
``
echo
PHP
Page
HTML
générée
DOCTYPE
html
html
lang=
fr
head
meta
charset=
utf-8
/
title
Exemple
1
echo
/title
/head
body
h1
Affichage
texte
HTML
PHP
/h1
p
PHP
span
style=
color
red
Ligne
écrite
``
echo
strong
PHP
/strong
/span
/p
/body
/html
Explications
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
43/53
h1
mis
echo
php
séparé
ça
sert
rien
test
php
suivant
fait
echo
ouvre
p
puis
autre
ouvre
span
style
strong
ferme
/span
aussi
/p
ouvert
précédent
echo
mettre
guillemet
texte
echo
afficher
guillemet
code
HTML
met
\
Exercice
echo
Coder
toute
page
précédente
échos
Combien
faut-il
mettre
minimum
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
44/53
Principes
généraux
code
PHP
Règles
•
code
PHP
commence
php
sans
espace
finit
va
parler
balise
PHP
•
peut
placer
balise
PHP
importe
code
HTML
code
CSS
•
balise
PHP
peut
mettre
autant
instructions
lignes
PHP
veut
•
doit
mettre
fin
chaque
instruction
PHP
•
peut
mettre
commentaires
entre
/
*
*
/
code
PHP
commentaires
peuvent
étaler
plusieurs
lignes
commentaires
disparaîtront
code
HTML
•
peut
mettre
commentaires
fin
ligne
//
Erreurs
courantes
•
Parse
error
quand
oublie
fin
instruction
facultatif
dernière
instruction
•
fichier
.htlm
place
fichier
.php
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
45/53
8
Gestion
erreurs
Affichage
erreurs
-
Rappel
Variables
display_errors
=
display_startup_errors
=
variables
display_errors
display_startup_errors
permettent
afficher
messages
erreur
plus
explicites
défaut
erreurs
affichent
PC
voir
variables
ouvrez
fichier
php.ini
WAMP
/
PHP
/
php.ini
Cherchez
variables
display_errors
display_startup_errors
trouvez
lignes
sans
début
sinon
commentaire
display_startup_errors
=
display_errors
=
faut
redémarrer
serveur
Apache
prise
compte
faite
erreurs
affichent
peut
voir
variables
phpInfo
Mamp
Alternative
site
production
Attention
messages
erreurs
doivent
être
vus
utilisateurs
site
déjà
production
faut
passer
fichiers
log
Regarder
fichier
conf
plus
informations
Principaux
messages
erreurs
Parse
error
indiqué
fichier
ligne
souvent
cause
erreur
peut
être
ligne
ligne
précédente
Ça
peut
correspondre
•
Oubli
•
Apostrophe
guillemet
non
fermé
•
Concaténation
problème
Undefined
function
fonction
reconnue
quand
sert
faut
probablement
include
Wrong
parameter
count
fonction
bon
nombre
paramètres
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
46/53
Erreur
autour
BD
erreurs
SQL
plus
moins
explicites
faut
vérifier
code
SQL
fonctionne
headers
already
sent
by…
code
HTML
avant
header
session
Maximum
execution
time
exceeded
Boucle
sans
fin
TP
Gestion
erreurs
-
variables
display_errors
display_startup_errors
Chargez
zip
04-exercice-gestion-erreur.zip
Essayez
programme
TP_gestion_erreur.php
corrigez
erreurs
Affichage
erreurs
MAC
défaut
erreurs
affichent
MAC
faut
modifier
variables
display_errors
display_startup_errors
fichier
php.ini
cela
Démarrez
MAMP
Ouvrir
page
web
start
/
phpinfo
Cherchez
php.ini
trouvez
Configuration
File
php.ini
Path
valeur
/Applications/MAMP/bin/php/php7.0.0/conf
Allez
répertoire
ouvrez
fichier
php.ini
Passez
deux
variables
display_startup_errors
=
display_errors
=
Relancez
serveur
MAMP
/
Arrêter
serveurs
–
MAMP
/
Démarrer
serveurs
Affichage
erreurs
PC
défaut
erreurs
affichent
PC
voir
variables
ouvrez
fichier
php.ini
WAMP
/
PHP
/
php.ini
Cherchez
variables
display_errors
display_startup_errors
trouvez
lignes
sans
début
sinon
commentaire
display_startup_errors
=
display_errors
=
erreurs
affichent
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
47/53
9
Inclusion
fichiers
PHP
–
factorisation
code
HTML
Rappel
balises
structurantes
HTML
HTML
5
propose
balises
structuration
pages
•
header
nav
footer
comme
balise
plutôt
unique
page
correspondent
éléments
retrouve
toutes
pages
site
•
section
article
aside
comme
balises
éventuellement
multiples
page
différentes
selon
pages
•
div
comme
balise
structuration
personnelle
problème
header
nav
footer
vont
général
retrouver
toutes
pages
Comment
éviter
répéter
code
toutes
pages
devoir
faire
mises
jour
toutes
pages
Solution
PHP
inclusion
fichier
PHP
Tout
code
balise
header
peut
être
mis
fichier
header.php
Ensuite
instruction
include
permet
faire
appel
fichier
inclure
fichier
appelant
include
fichier.php
instruction
suivante
php
include
header.php
code
page
limité
contient
spécifique
modifie
header
modifie
toutes
pages
peut
faire
chose
footer
nav
nav
header
peut
mettre
inclusion
fichier
header.php
Syntaxe
include
fonction
parenthèses
laquelle
fournit
nom
fichier
veut
charger
entre
guillemets
différence
echo
prend
parenthèses
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
48/53
Exemple
body
include
header
footer
body
php
include
``
header.php
section
/section
php
include
``
footer.php
/body
header
inclut
nav
header
h1
SUPER
SITE
/h1
php
include
``
nav.php
/header
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
49/53
Solution
HTML
inclusion
fichier
HTML
ancienne
solution
inclusion
fichier
HTML
balise
frame
obsolète
sites
utilisent
langage
serveur
utilisait
balise
frame
factoriser
pages
balise
plus
supportée
HTML
5
remplacée
balise
iframe
http
//www.w3schools.com/tags/tag_frame.asp
balise
frame
ferme
utilise
intérieur
balise
frameset
balise
iframe
inclusion
fichier
HTML
déprécié
balise
sert
surtout
inclure
morceaux
autre
site
permet
partager
adresse
site
fournit
iframe
bouton
exporter
https
//www.franceculture.fr/emissions/les-series-musicales-dete/les-series-musicales-detelundi-24-juillet-2017
usage
toutefois
déprécié
DOCTYPE
html
html
body
iframe
src=
https
//www.franceculture.fr/player/exportreecouter
content=9c19db61-0761-4b50-b4ae-907f0dbf3259
width=
481
frameborder=
0
scrolling=
no
height=
137
p
Your
browser
does
not
support
iframes.
/p
/iframe
/body
/html
Widget
widgets
tendent
remplacer
iframe
simples
div
copier
site
widget
météo
ici
http
//www.meteovista.fr/Widgets-Meteo/4266446/0
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
50/53
TP
Includes
Chargez
zip
05-exercice-include.zip
contient
dossier
page
HTML
1
Réécrivez-la
sortant
header
footer
fichiers
séparés
utilisant
include
Testez
résultat
2
Ensuite
mettez
fichiers
header
footer
dossier
include
fichier
css
in
dossier
css
but
avoir
fichier
index1.php
racine
3
Ajoutez
page
contient
en-tête
footer
section
contient
uniquement
lien
permettant
revenir
index
page
principale
index1.php
index1.php
menus
permettra
accéder
nouvelle
page
appelle
index2.php
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
51/53
10
Documentation
Principes
références
existe
plusieurs
sites
référence
avoir
documentation
php.net
http
//php.net/docs.php
w3school
http
//www.w3schools.com/php/
cours
Code
academy
https
//www.codecademy.com/learn/php
OpenClassRoom
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-etmysql
https
//openclassrooms.com/paths/developpeur-php-symfony
bien
sûr
google
bons
usages
faut
toujours
essayer
passer
documentation
officielle
comprendre
mieux
possible
sans
contenter
exemple
marche
faut
apprendre
servir
documentation
Exemple
usage
php.net
Page
accueil
français
http
//php.net/manual/fr/
trouve
sommaire
Liste
fonctions
http
//php.net/manual/fr/funcref.php
Notez
Extensions
mathématiques
contient
Math
fonctions
mathématiques
Traitement
texte
contient
Chaîne
caractères
fonction
traitement
chaines
Accès
direct
fonction
php.net/nomFonction
php.net/date
arrive
directement
fonction
date
http
//php.net/manual/fr/function.date.php
remonte
menu
droite
reviendrai
niveau
liste
fonctions
Liste
thématiques
fonctions
•
audio
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
52/53
•
identification
•
ligne
commande
•
archivage
compression
•
cartes
crédit
•
cryptographie
•
bases
données
•
dates
heures
•
systèmes
fichiers
•
langage
humain
encodage
caractères
•
génération
traitement
images
•
emails
•
mathématiques
•
données
non-textuelles
•
contrôle
processus
•
moteurs
recherche
•
serveurs
•
sessions
•
traitement
texte
•
variables
types
•
services
Web
•
Windows
•
XML
PHP
–
Intro
–
HTML
–
WAMP
–
Premiers
programmes
–
page
53/53
BASES
LANGAGE
PHP
http
//php.net/manual/fr/langref.php
http
//www.w3schools.com/php/
Open
Class
Room
SOMMAIRE
SOMMAIRE
.................................................................................................................................
1
BASES
LANGAGE
PHP
..............................................................................................................
3
Installation
fichiers
tests
............................................................................................................
3
variables
........................................................................................................................................
4
Définition
......................................................................................................................................................
4
types
.......................................................................................................................................................
4
Vérifier
type
..............................................................................................................................................
5
signification
..............................................................................................................................................
5
peut
faire
variable
............................................................................................................
5
Exemple
1
peut
utiliser
variable
calcul
.............................................................................
6
Constantes
...........................................................................................................................................
6
Tests
exemples
2
3
.........................................................................................................................
7
if
else
elseif
.................................................................................................................................................
7
opérateurs
comparaison
.........................................................................................................................
7
opérateurs
logiques
......................................................................................................................................
7
switch
............................................................................................................................................................
7
opérateur
comparaison
ternaire
......................................................................................................
7
HTML
PHP
séparé
PHP
exemple
4
..................................................................................
8
HTML
PHP
.........................................................................................................................................
8
HTML
séparé
PHP
....................................................................................................................................
8
HTML
PHP
balise
heredoc
...............................................................................................
8
Boucles
exemple
5
.............................................................................................................................
9
While
.............................................................................................................................................................
9
for
.................................................................................................................................................................
9
Exercice
10
premiers
entiers
carrés
racines
tableau
HTML
..................................................
10
Débranchements
.................................................................................................................................
11
Présentation
...............................................................................................................................................
11
break
...........................................................................................................................................................
11
continue
......................................................................................................................................................
11
goto
.............................................................................................................................................................
11
Bibliothèque
Fonctions
...................................................................................................................
12
Présentation
...............................................................................................................................................
12
Fonctions
calcul
mathématique
............................................................................................................
12
Fonction
traitement
chaine
caractères
.......................................................................................
12
Fonction
traitement
date
.................................................................................................................
12
Envoi
mail
..............................................................................................................................................
12
Générer
PDF
PHP
............................................................................................................................
12
Générer
images
PHP
.......................................................................................................................
12
Traiter
expressions
régulières
PHP
.................................................................................................
12
Tableau
numéroté
tableau
associatif
...............................................................................................
14
Tableau
numéroté
–
exemples
6
7
8
.....................................................................................................
14
Base
PHP
–
Environnement
développement
–
page
1/29
-
Open
Class
Room
Exercice
–
tableau
prénoms
liste
puces
.........................................................................................
16
Tableau
associatif
–
exemple
9
...................................................................................................................
17
Exercice
–
tableau-users-Etape-0
...............................................................................................................
18
Exercice
–
tableau
périodique
éléments
..............................................................................................
18
Tableau
numéroté
tableau
associatif
–
exemple
10
.............................................................................
20
Fonctions
manipulation
tableau
–
exemples
11
12
.....................................................................
21
Exercice
–
tableau-users-Etape-1
...............................................................................................................
22
Ecrire
propres
fonctions
–
exemple
13
14
...................................................................................
23
Fonction
affichage
renvoie
rien
–
exemple
13
............................................................................
23
Fonction
renvoie
résultat
–
exemple
14
.........................................................................................
23
Fonction
paramètre
sortie
modifié
–
exemple
15
.....................................................
24
Visibilité
variables
–
exemple
16
–
global
GLOBALS
static
.................................................................
24
Exercice
–
tableau-users-Etape-2
codage
fonctions
........................................................................
26
Filtrer
tableau
fonction
array_filter
–
exemple
17
..............................................................................
28
Exercice
–
tableau-users-Etape
3
tri
données
...................................................................................
29
Edition
mars
2018
Base
PHP
–
Environnement
développement
–
page
2/29
-
Open
Class
Room
BASES
LANGAGE
PHP
Installation
fichiers
tests
exemples
cours
fichier
zip
fournis
article
cours
00-BASES-DULANGAGE.zip
exemples
présentés
chapitre
vert
Chargez
fichier
mettez-le
dossier
Partie_2
répertoire
web
www
serveur
WAMP
exercices
faire
présentés
chapitre
jaune
REMARQUE
Tous
fichiers
exemples
commencent
trois
lignes
echo
'
h1
CODE
PHP
/h1
'
highlight_file
'fichier.php
'
echo
'
h1
RESULTATS
/h1
'
code
affiche
deux
balises
h1
CODE
PHP
puis
RESULTATS
fonction
highlight_file
permet
afficher
contenu
fichier
proposé
Quand
teste
code
commence
affiche
code
Ca
permet
voir
code
temps
résultats
généraliser
code
écrit
highlight_file
basename
__FILE__
basename
__FILE__
permet
récupérer
nom
fichier
cours
traitement
Base
PHP
–
Environnement
développement
–
page
3/29
-
Open
Class
Room
variables
Définition
variable
moyen
stocker
mémoire
information
temps
génération
page
PHP
variable
nom
valeur
type
signification
PHP
nom
variable
commence
exemple
username
variable
type
string
signification
contenir
information
nom
utilisateur
types
Présentation
variables
peuvent
enregistrer
informations
différents
types
Entier
décimal
nombre
virgule
texte
booléen
vrai
faux
principaux
http
//php.net/manual/fr/language.types.php
type
entier
int
0
1
2
3
etc
entiers
négatifs
-1
-2
etc
type
décimal
float
nombres
virgules
1.234
écrit
virgule
point
Tant
besoin
précision
extrême
conviennent
très
bien
tous
calculs
type
texte
chaine
caractères
string
chaines
caractères
écrites
entre
guillemets
apostrophe
parle
aussi
quotte
simple
quotte
simple
guillemet
apostrophes
double
quotte
guillemets
type
booléen
bool
Peut
prendre
valeurs
true
false
valeur
NULL
peut
donner
valeur
NULL
toutes
variables
quel
type
Cela
veut
dire
variable
contient
rien
Types
tableau
objet
ressource
existe
aussi
type
tableaux
suite
cours
objets
cours
POO
ressource
ressource
référence
ressource
externe
voir
doc
PHP
Base
PHP
–
Environnement
développement
–
page
4/29
-
Open
Class
Room
Vérifier
type
Quand
utilise
variable
besoin
préciser
type
Selon
valeur
donne
variable
type
défini
automatiquement
fonctions
permettent
savoir
quel
type
quelle
variable
exemple
is_bool
maVariable
retourne
vrai
1
maVariable
booléen
faux
0
sinon
http
//php.net/manual/fr/function.is-bool.php
is_bool
is_float
is_numeric
etc
signification
variable
sert
quelque
chose
exemple
enregistrer
nom
utilisateur
signification
donne
nom
rapport
signification
obligé
préférable
peut
faire
variable
peut
donner
valeur
variable
username=
``
Barack
parle
affectation
assignation
peut
afficher
contenu
variable
echo
username
Ici
guillemets
comme
quand
affiche
texte
peut
concaténer
variable
chaine
caractère
texte
entre
apostrophes
entre
guillemets
peut
concaténer
variable
opérateur
Echo
'bonjour
'
username
'
Comment
allez-vous
'
Mieux
vaut
utiliser
apostrophes
‘
PHP
guillemets
“
HTML
peut
afficher
contenu
variable
chaine
caractère
texte
entre
guillemets
peut
mettre
variable
directement
texte
entre
guillemets
Echo
``
bonjour
username
Comment
allez-vous
évite
usage
utilise
précédent
concaténation
Concaténation
opérateur
permet
concaténer
deux
textes
variable
texte
deux
variables
Opérateurs
arithmétique
utilise
opérateurs
classiques
+
-
/
*
Opérateur
incrémentation
Base
PHP
–
Environnement
développement
–
page
5/29
-
Open
Class
Room
i++
équivaut
i=
i+1
Attention
post-incrémentation
fait
echo
i++
i
avant
incrémentation
affiché
Exemple
1
peut
utiliser
variable
calcul
php
prix_unitaire=11.6
quantite=5
produit=
clé
USB
32
GO
prix_total=
quantite
*
prix_unitaire
echo
'bonjour
br
'
echo
quantite
'
'
produit
'
'
prix_total
peut
utiliser
symboles
classiques
calcul
+
-
x
/
modulo
toutes
fonction
classiques
sin
cos
sqrt
pow
http
//php.net/manual/fr/function.pow.php
noter
gauche
signe
=
modifie
valeur
variable
variable
avant
modification
perdu
droite
signe
=
utilise
valeur
variable
faire
calcul
noter
aussi
met
point
autour
variable
echo
début
echo
début
variable
fin
variable
fin
echo
Constantes
constante
sorte
variable
peut
être
modifiée
nom
donné
majuscule
convention
valeur
donnée
fonction
define
accède
sans
utiliser
php
define
``
CONSTANT
``
Bonjour
monde
``
echo
CONSTANT
//
affiche
``
Bonjour
monde
define
'ANIMALS
'
array
'chien
'
'chat
'
'oiseaux'
echo
ANIMALS
1
//
affiche
``
chat
Base
PHP
–
Environnement
développement
–
page
6/29
-
Open
Class
Room
Tests
exemples
2
3
if
else
elseif
if
maVariable
==
0
{
instructions
}
elseif
maVariable
0
{
instructions
}
else
{
/
*
maVariable
0
*
/
instructions
}
if
http
//php.net/manual/fr/control-structures.if.php
else
http
//php.net/manual/fr/control-structures.else.php
elseif
http
//php.net/manual/fr/control-structures.elseif.php
opérateurs
comparaison
==
=
=
=
http
//php.net/manual/fr/language.operators.comparison.php
#
language.operators.comparison
===
vrai
valeurs
identiques
type
==
opérateurs
logiques
binaires
AND
&
&
OR
||
0
and
10
unaires
is_int
http
//php.net/manual/fr/language.operators.logical.php
switch
switch
maVariable
{
case
0
instructions
break
case
1
instructions
break
default
instructions
}
switch
http
//php.net/manual/fr/control-structures.switch.php
opérateur
comparaison
ternaire
monResultat
=
maVarialble
==
0
true
false
Base
PHP
–
Environnement
développement
–
page
7/29
-
Open
Class
Room
http
//php.net/manual/fr/language.operators.comparison.php
#
language.operators.comparison.te
rnary
HTML
PHP
séparé
PHP
exemple
4
HTML
PHP
php
if
variable
0
{
echo
strong
variable
'.
variable
'
/strong
c\'est
négatif
'
}
peut
mettre
variables
echo
faut
utiliser
\
HTML
séparé
PHP
php
if
variable
0
{
strong
variable
/strong
négatif
php
}
solution
sépare
code
HTML
code
PHP
beaucoup
code
HTML
sans
variable
plus
pratique
évite
\
doit
ajouter
variables
inadapté
HTML
PHP
balise
heredoc
opérateur
peut
appeler
balise
heredoc
permet
ouvrir
deux
balises
_BALISE
Tout
texte
contenu
balise
chaîne
caractère
apostrophes
guillemets
peuvent
être
traités
tels
quels
sans
\
peut
mettre
directement
variables
variable
balise
fermante
_BALISE
doit
être
collée
marge
gauche
être
seule
if
variable
0
{
echo
_BALISE
strong
variable
variable
/strong
c'est
négatif
br
_BALISE
peut
facilement
utiliser
variables
évite
\
peu
utilisé
Base
PHP
–
Environnement
développement
–
page
8/29
-
Open
Class
Room
Boucles
exemple
5
While
http
//php.net/manual/fr/control-structures.while.php
Présentation
while
cpt
10
{
instructions
}
tant
maVariable
10
répète
instructions
faut
bien
sûr
maVariable
modifiée
instructions
pur
puisse
sortir
boucle
Boucler
10
fois
boucler
10
fois
peut
écrire
cpt
=1
while
cpt
=
10
{
instructions
cpt
++
}
++
permet
incrémenter
cpt
cpt
++
équivalent
cpt
=
cpt
+1
for
http
//php.net/manual/fr/control-structures.for.php
boucle
for
équivalent
boucle
while
boucler
10
fois
autant
fois
veut
for
cpt
=1
cpt
1
cpt++
{
instructions
}
trois
parties
for
•
initialisation
maVariable
for
premier
•
condition
sortie
milieu
•
incrémentation
maVariable
troisième
position
Base
PHP
–
Environnement
développement
–
page
9/29
-
Open
Class
Room
Exercice
10
premiers
entiers
carrés
racines
tableau
HTML
Ecrire
script
affiche
10
premiers
entiers
carré
racine
carré
tableau
Chercher
fonction
racine
carré
Résultat
attendu
etc
Base
PHP
–
Environnement
développement
–
page
10/29
-
Open
Class
Room
Débranchements
Présentation
2
instructions
permettent
quitter
fonctionnement
standard
boucles
break
fait
quitter
boucle
continue
permet
passer
suivant
break
http
//php.net/manual/fr/control-structures.break.php
while
maVariable
10
{
if
casParticulierQuiFaitSortir
==true
{
faire
break
//
}
cas
général
}
continue
http
//php.net/manual/fr/control-structures.continue.php
while
maVariable
10
{
if
casParticulierQuiFaitPasserAuSuivant
==true
{
faire
continue
//
passe
suivant
}
cas
général
}
goto
http
//php.net/manual/fr/control-structures.goto.php
goto
permet
aller
importe
vers
importe
éviter
Base
PHP
–
Environnement
développement
–
page
11/29
-
Open
Class
Room
Bibliothèque
Fonctions
Présentation
existe
milliers
fonctions
peut
utiliser
PHP
http
//php.net/manual/fr/funcref.php
Fonctions
calcul
mathématique
http
//php.net/manual/fr/book.math.php
sqrt
racine
carré
pow
puissance
round
arrondi
rand
aléatoire
min
max
cos
sin
etc
Fonction
traitement
chaine
caractères
http
//php.net/manual/fr/ref.strings.php
length
substr
strpos
str_replace
longueur
extraction
position
remplacement
trim
ltrim
supprimer
espaces
début
fin
chaîne
chr
ord
passer
caractère
nombre
printf
fprintf
print
formaté
f
fin
print
formaté
fichier
f
début
sscanf
scan
formaté
f
fin
string
début
Fonction
traitement
date
http
//php.net/manual/fr/ref.datetime.php
Envoi
mail
http
//php.net/manual/fr/function.mail.php
Générer
PDF
PHP
http
//php.net/manual/fr/book.pdf.php
Générer
images
PHP
http
//php.net/manual/fr/book.image.php
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/creer-desimages-en-php
Traiter
expressions
régulières
PHP
http
//php.net/manual/fr/book.pcre.php
Base
PHP
–
Environnement
développement
–
page
12/29
-
Open
Class
Room
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/lesexpressions-regulieres-partie-1-2
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/lesexpressions-regulieres-partie-2-2-2
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/mementodes-expressions-regulieres
Base
PHP
–
Environnement
développement
–
page
13/29
-
Open
Class
Room
Tableau
numéroté
tableau
associatif
Tableau
numéroté
–
exemples
6
7
8
Présentation
Tableau
classique
permet
mettre
plusieurs
valeurs
type
variable
Fonction
array
créer
tableau
prenoms
=
array
‘
Aurélien
‘
Isabelle
‘
Ahmed
‘
Olivier
‘
Nour
‘
Chang
//
crée
prenoms
0
prenoms
1
jusqu
prenoms
5
Créer
tableau
indices
lesPrenoms
0
=
Aurélien
lesPrenoms
1
=
Isabelle
lesPrenoms
2
=
Ahmed
Notez
premier
élément
tableau
indice
0
indice
aussi
appelé
clé
Créer
tableau
indices
automatiques
lesPrenoms
=
Aurélien
//
crée
prenoms
0
lesPrenoms
=
Isabelle
//
crée
prenoms
1
lesPrenoms
=
Ahmed
//
crée
prenoms
2
Quand
utilise
crochets
vides
nouvel
élément
placé
automatiquement
suite
précédents
Instruction
echo
afficher
élément
tableau
echo
prenoms
2
Boucle
for
afficher
tout
tableau
php
lesPrenoms
0
='Aurélien
'
lesPrenoms
1
='Olivier
'
lesPrenoms
2
='Ahmed
'
for
indice
=
0
indice
count
lesPrenoms
indice++
{
echo
'lesPrenoms
'.
indice
'
=
'
lesPrenoms
indice
'
br/
'
}
Notez
présence
fonction
count
avoir
nombre
éléments
tableau
Base
PHP
–
Environnement
développement
–
page
14/29
-
Open
Class
Room
Fonction
print-r
affichage
basique
tableau
sans
mise
forme
Affichage
seule
ligne
php
lesPrenoms=array
'Aurélien
'
'Isabelle
'
'Ahmed
'
print_r
lesPrenoms
Affichage
ligne
ligne
balise
pre
php
lesPrenoms=array
'Aurélien
'
'Isabelle
'
'Ahmed
'
echo
lesPrenoms
echo
'
pre
'
print_r
lesPrenoms
echo
'
/pre
'
Fonction
var_dump
affichage
basique
informations
variable
Affichage
seule
ligne
type
plus
php
lesPrenoms=array
'Aurélien
'
'Isabelle
'
'Ahmed
'
var_dump
lesPrenoms
i=5
var_dump
i
Attention
doit
avoir
trous
tableau
php
lesPrenoms
0
='Aurélien
'
lesPrenoms
1
='Olivier
'
lesPrenoms
2
='Ahmed
'
lesPrenoms
5
='Hang
'
//
ça
affiche
4
prénom
print_r
lesPrenoms
//
for
affichera
rien
lesPrenoms
3
//
affichera
lesPrenoms
4
for
indice
=
0
indice
count
lesPrenoms
indice++
{
echo
'lesPrenoms
'.
indice
'
=
'
lesPrenoms
indice
'
br/
'
}
boucle
foreach
afficher
tout
tableau
quel
indice
passer
revue
tous
éléments
tableau
quel
numéro
tableau
utilise
foreach
boucle
foreach
met
tableau
nom
variable
récupère
tableau
deux
éléments
séparés
boucle
foreach
gère
automatiquement
fait
démarrer
premier
élément
tableau
aller
jusqu
dernier
php
Base
PHP
–
Environnement
développement
–
page
15/29
-
Open
Class
Room
lesPrenoms=array
'Aurélien
'
'Isabelle
'
'Ahmed
'
foreach
lesPrenoms
unPrenom
{
echo
unPrenom
'
br/
'
}
boucle
foreach
key
=
value
Chaque
élément
tableau
correspond
couple
key
value
clé
numéro
élément
tableau
value
valeur
peut
ajouter
key
boucle
foreach
ça
permet
accéder
clé
directement
php
lesPrenoms=array
'Aurélien
'
'Isabelle
'
'Ahmed
'
echo
'
h2
affichage
foreach
key
=
value
/h2
'
foreach
lesPrenoms
key
=
value
{
echo
'
key
'.
key
'
br/
'
echo
'
value
'.
value
'
br/
'
}
chaine
vers
tableau
implode
explode
explode
convertir
chaine
liste
valeurs
tableau
numéroté
implode
convertir
tableau
numéroté
chaine
contenant
liste
valeurs
tableau
précise
fonction
séparateur
trouve
entre
valeurs
chaine
chaine=implode
sep
tableau
chaine=implode
br
tableau
tab
=
explode
sep
chaine
tab
=
explode
chaine
Exercice
–
tableau
prénoms
liste
puces
Ecrire
script
affiche
contenu
tableau
prénoms
liste
puces
prénoms
écrits
minuscules
majuscule
premier
Résultat
attendu
Faites
version
affiche
prénoms
première
lettre
vient
après
H
Chercher
informations
fonction
strcmp
documentation
PHP
utilisera
continue
Base
PHP
–
Environnement
développement
–
page
16/29
-
Open
Class
Room
Tableau
associatif
–
exemple
9
Présentation
tableau
associatif
tableau
particulier
permet
mettre
plusieurs
valeurs
type
différents
variable
équivalent
structure
struct
objet
autres
langages
chaque
valeur
associe
nom
appelle
clé
attribut
nom
associé
valeur
PHP
parle
tableau
associatif
fonction
array
créer
tableau
utilisateur
=
array
'nom
'
=
'Toto
'
'prenom
'
=
'Aurélien
'
'dateNaissance
'
=
1995
'nomUtilisateur
'
=
'aurelien1995'
Créer
tableau
indices
utilisateur
'nom
'
=
'Toto
'
utilisateur
'prenom
'
=
'Aurélien
'
utilisateur
'dateNaissance
'
=
1995
utilisateur
'nomDUtilisateur
'
=
'aurelien1995
'
Instruction
echo
afficher
élément
tableau
echo
utilisateur
‘
nomUtilisateur
Fonction
print-r
affichage
basique
tableau
associatif
sans
mise
forme
Affichage
seule
ligne
php
utilisateur
=
array
'nom
'
=
'Toto
'
'prenom
'
=
'Aurélien
'
'dateNaissance
'
=
1995
nomUtilisateur
=
'aurelien1995
'
print_r
utilisateur
Affichage
ligne
ligne
balise
pre
php
utilisateur
=
array
'nom
'
=
'Toto
'
'prenom
'
=
'Aurélien
'
'dateNaissance
'
=
1995
nomUtilisateur
=
'aurelien1995
'
echo
'
pre
'
print_r
utilisateur
echo
'
/pre
'
Base
PHP
–
Environnement
développement
–
page
17/29
-
Open
Class
Room
Afficher
tout
tableau
associatif
boucle
foreach
boucle
foreach
met
tableau
nom
variable
récupère
tableau
deux
éléments
séparés
boucle
foreach
gère
automatiquement
fait
démarrer
premier
élément
tableau
aller
jusqu
dernier
php
utilisateur
=
array
'nom
'
=
'Toto
'
'prenom
'
=
'Aurélien
'
'dateNaissance
'
=
1995
nomUtilisateur
=
'aurelien1995
'
foreach
utilisateur
element
{
echo
element
'
br/
'
}
boucle
foreach
key
=
value
Chaque
élément
tableau
associatif
comme
tableau
numéroté
correspond
couple
key
value
key
correspond
attribut
value
valeur
peut
ajouter
key
boucle
foreach
ça
permet
accéder
attribut
php
utilisateur
=
array
'nom
'
=
'Toto
'
'prenom
'
=
'Aurélien
'
'dateNaissance
'
=
1995
nomUtilisateur
=
'aurelien1995
'
echo
'
h2
affichage
foreach
key
=
value
/h2
'
foreach
utilisateur
key
=
value
{
echo
'
key
'.
key
'
br/
'
echo
'
value
'.
value
'
br/
'
}
Exercice
–
tableau-users-Etape-0
veut
gérer
utilisateurs
caractéristiques
suivantes
Prénom
NOM
seul
champ
mail
motDePasse
age
Créer
utilisateur
informations
tableau
associatif
Afficher
tableau
associatif
print_r
ligne
information
Afficher
tableau
associatif
tableau
HTML
Exercice
–
tableau
périodique
éléments
chimie
tableau
périodique
éléments
associe
symbole
nom
élément
chimique
H
Hydrogène
He
Helium
etc
Faites
programme
affiche
moins
5
premiers
éléments
tableau
HTML
Base
PHP
–
Environnement
développement
–
page
18/29
-
Open
Class
Room
pouvez
trouver
autres
internet
Résultats
attendus
devez
mettre
résultats
page
HTML
Base
PHP
–
Environnement
développement
–
page
19/29
-
Open
Class
Room
Tableau
numéroté
tableau
associatif
–
exemple
10
Présentation
utilise
souvent
tableaux
numérotés
contiennent
tableaux
associatifs
exemple
tableau
élèves
utilise
foreach
foreach
key=
value
utilisateurs
=
array
'nom
'
=
'Toto
'
'prenom
'
=
'Aurélien
'
'dateNaissance
'
=
1995
'nomUtilisateur
'
=
'aurelien1995'
utilisateurs
=
array
'nom
'
=
'Tata
'
'prenom
'
=
'Bertrand
'
'dateNaissance
'
=
1990
'nomUtilisateur
'
=
'bertrand1990'
utilisateurs
=
'Toto3
'
'Olivier
'
1992
'olivier1992
'
utilisateurs
=
'Titi4
'
'Ahmed
'
1990
'ahmed1990
'
echo
'
h2
affichage
foreach
/h2
'
foreach
utilisateurs
user
{
echo
'
pre
'
print_r
user
echo
'
/pre
'
}
echo
'
h2
affichage
foreach
skey
=
value
/h2
'
foreach
utilisateurs
index
=
user
{
echo
'
p
b
index
'.
index
'
/b
/p
'
echo
'
pre
'
print_r
user
echo
'
/pre
'
foreach
user
key
=
value
{
echo
'
p
key
'.
key
'
br
'
echo
'
value
'.
value
'
/p
'
}
}
Base
PHP
–
Environnement
développement
–
page
20/29
-
Open
Class
Room
Fonctions
manipulation
tableau
–
exemples
11
12
existe
beaucoup
fonction
manipulation
tableau
http
//php.net/manual/fr/ref.array.php
Citons
particulièrement
array
créer
tableau
count
-
sizeof
count
monTableau
sizeof
monTableau
récupérer
nombre
éléments
tableau
sort
–
exemple
11
sort
monTableau
trier
tableau
numéroté
rsort
trier
sens
inverse
Exemple
11
Toutes
fonctions
tri
http
//php.net/manual/fr/array.sorting.php
ksort
ksort
monTableau
trier
tableau
associatif
selon
key
krsort
trier
sens
inverse
asort
asort
monTableau
trier
tableau
associatif
selon
value
arsort
trier
sens
inverse
in_array
in_array
‘
valeur
monTableau
vrai
‘
valeur
monTableau
array_key_exists
–
exemple
12
array_key_exists
cle
monTableauAssociatif
vrai
cle
clé
tableau
associatif
monTableauAssociatif
array-search
array_search
‘
Nour
lesPrenoms
renvoie
indice
valeur
‘
Nour
tableau
lesPrenoms
4
exemple
cf
plus
haut
shuffle
–
exemple
11
shuffle
monTableau
mélanger
tableau
Base
PHP
–
Environnement
développement
–
page
21/29
-
Open
Class
Room
Exercice
–
tableau-users-Etape-1
1
veut
gérer
utilisateurs
caractéristiques
suivantes
Prénom
NOM
seul
champ
mail
motDePasse
age
Créer
utilisateur
informations
tableau
associatif
Afficher
tableau
associatif
print_r
ligne
information
2
veut
créer
non
plus
seul
utilisateur
tableau
utilisateurs
Créer
tableau
5
utilisateurs
créera
premier
utilisateur
syntaxe
suivante
lesUtilisateurs
0
'nom
'
='Toto
TOTO
'
etc.
autres
syntaxe
lesUtilisateurs
=
array
'nom'=
'Toto
TOTO
'
etc.
3
4
5
6
Afficher
utilisateurs
créés
print_r
Afficher
utilisateurs
for
Afficher
utilisateurs
foreach
Afficher
tableau
5
utilisateurs
HTML
tableau
HTML
Base
PHP
–
Environnement
développement
–
page
22/29
-
Open
Class
Room
Ecrire
propres
fonctions
–
exemple
13
14
Fonction
affichage
renvoie
rien
–
exemple
13
veut
afficher
Olivier
20
ans
partir
prénom
année
naissance
php
function
afficherAge
prenom
anneeNaissance
{
today=getdate
age=
today
'year
'
-
anneeNaissance
echo
prenom
'
'
age
'
ans
'
}
utilisateur
=
array
'nom
'
=
'Toto
'
'prenom
'
=
'Aurélien
'
'anneeNaissance
'
=
1995
'nomUtilisateur
'
=
'aurelien1995
'
afficherAge
utilisateur
'prenom
'
utilisateur
'anneeNaissance
'
fonction
deux
paramètres
entrée
prénom
année
naissance
calcul
âge
fonction
année
naissance
année
date
jour
fonction
getdate
permet
récupérer
information
Ensuite
utilise
fonction
partir
exemple
tableau
associatif
déjà
vu
Fonction
renvoie
résultat
–
exemple
14
va
écrire
fonction
renvoie
âge
partir
année
naissance
php
function
calculerAge
anneeNaissance
{
today=getdate
year=
today
'year
'
age=
year-
anneeNaissance
return
age
}
anneeNaissance=1990
age=calculerAge
anneeNaissance
echo
'né
'
anneeNaissance
'
'
age
'
ans
'
fonction
paramètre
entrée
année
naissance
calcul
âge
fonction
année
naissance
année
date
jour
renvoie
résultat
return
fonction
peut
alors
être
utilisée
donner
valeur
variable
exemple
Base
PHP
–
Environnement
développement
–
page
23/29
-
Open
Class
Room
Fonction
paramètre
sortie
modifié
–
exemple
15
va
écrire
fonction
augmente
employé
employé
tableau
associatif
nom
salaire
fonction
reçoit
paramètre
employé
augmentation
php
echo
'
h1
CODE
PHP
/h1
'
highlight_file
basename
__FILE__
echo
'
h1
RESULTATS
/h1
'
function
augmenter
&
employe
augmentation
{
employe
'salaire
'
=
employe
'salaire
'
+
augmentation
}
emp=array
'nom'=
'Toto
'
'salaire'=
2000
print_r
emp
echo
'
br
'
augmenter
emp
100
print_r
emp
fonction
met
&
devant
employe
fait
ressortira
modifié
test
fait
passer
2000
2100
Sans
&
reste
2000
Visibilité
variables
–
exemple
16
–
global
GLOBALS
static
3
niveaux
visibilité
variables
http
//php.net/manual/fr/language.variables.scope.php
•
variables
page
variables
globales
elles
visibles
page
après
première
apparition
sauf
fonctions
page
sauf
elles
redéclarées
global
fonctions
Elles
visibles
autres
pages
noter
variables
page
appelées
général
variables
globales
globales
page
noter
aussi
peut
utiliser
tableau
associatif
GLOBALS
contient
couples
keyvalue
correspondant
couples
nomDeVariable-valeurDeVariable
•
variables
locales
elles
visibles
fonction
elles
définies
•
variables
static
encore
locales-globales
elles
visibles
fonction
elles
définies
elles
gardent
valeur
quand
revient
fonction
Circulation
information
Entre
fonctions
entre
page
fonctions
passer
information
fonction
passe
paramètre
fonction
variable
veut
accéder
variable
page
doit
déclarer
global
fonction
php
function
test1
{
varGlobale='test1
'
}
Base
PHP
–
Environnement
développement
–
page
24/29
-
Open
Class
Room
function
test2
{
global
varGlobale
varGlobale='test2
'
}
varGlobale='global
'
test1
echo
varGlobale
'
br
'
//
Affiche
global
test2
echo
varGlobale
'
br
'
//
Affiche
test2
Entre
pages
faire
circuler
information
entre
pages
utilise
variables
_GET
_POST
aussi
variable
_SESSION
Cf
chapitre
suivant
Base
PHP
–
Environnement
développement
–
page
25/29
-
Open
Class
Room
Exercice
–
tableau-users-Etape-2
codage
fonctions
prend
fichier
correction
Exercice-tableau-users-Etape-1
duplique
appelle
Etape-2.php
1
nouveau
fichier
appelé
unUser.php
va
créer
fonction
permettant
créer
utilisateur
appelle
newUser
Ecrivez
fonction
Mettez
jour
copie
fichier
étape1
utilise
fonction
//
creation
utilisateur
newUser
parametres
déterminer
2
fichier
unUser.php
ajoutez
fonction
permette
afficher
utilisateur
print_r
Mettez
jour
copie
fichier
étape1
utilise
fonction
//
affichage
tableau
print_r
print_rUnUser
parametres
déterminer
3
fichier
unUser.php
ajoutez
fonction
permette
afficher
utilisateur
champ
champ
Mettez
jour
copie
fichier
étape1
utilise
fonction
//
affichage
tableau
print_r
printUnUser
parametres
déterminer
4
nouveau
fichier
appelé
lesUsers.php
ajoutez
fonction
permette
créer
tableau
utilisateurs
utilisateurs
fournis
fonction
appelle
fonction
initTab
Mettez
jour
copie
fichier
étape1
utilise
fonction
//
initialisation
d'un
tableau
d'utilisateurs
initLesUsers
parametres
déterminer
5
Ensuite
dote
fonction
affiche
utilisateurs
print_r
Ajouter
appel
fonction
copie
fichier
étape1
//
affichage
tableau
print_r
print_rLesUsers
lesUtilisateurs
6
Ensuite
dote
fonction
affiche
for
Mettez
jour
copie
fichier
étape1
utilise
fonction
//
affichage
tableau
façon
basique
for
print_rLesUsersFor
lesUtilisateurs
7
Ensuite
dote
fonction
affiche
foreach
Mettez
jour
copie
fichier
étape1
utilise
fonction
//
affichage
tableau
façon
basique
foreach
print_rLesUsersForeach
lesUtilisateurs
Base
PHP
–
Environnement
développement
–
page
26/29
-
Open
Class
Room
8
place
âges
entre
année
naissance
Adapter
programme
continue
afficher
âges
dote
fonction
calculerAge
anneeNaissance
met
jour
fonction
printUnUser
tout
fichier
unUser.php
9
Créer
fonction
affichage
stylé
exemple
affiche
tableau
HTML
gère
peu
CSS
tableau
Base
PHP
–
Environnement
développement
–
page
27/29
-
Open
Class
Room
Filtrer
tableau
fonction
array_filter
–
exemple
17
fonction
array_filter
permet
filtrer
tableau
php
tab=array
1
2
3
4
5
6
7
8
9
10
echo
'
h2
affichage
tableau
complet
/h2
'
echo
'
pre
'
print_r
tab
echo
'
/pre
'
function
filtreLesPairs
element
{
if
element
2==0
return
true
else
return
false
}
tab_filtre
=
array_filter
tab
``
filtreLesPairs
echo
'
h2
affichage
pairs
/h2
'
echo
'
pre
'
print_r
tab_filtre
echo
'
/pre
'
Explication
passe
tableau
nom
fonction
paramètre
fonction
array_filter
Ici
fonction
appelle
filtreLesPairs
définit
fonction
paramètre
correspond
élément
tableau
passé
paramètre
array_filter
peut
appeler
paramètre
element
va
choisir
quel
element
conserve
retourne
true
conserve
element
tableau
sinon
garde
Ici
teste
entier
divisible
2
Base
PHP
–
Environnement
développement
–
page
28/29
-
Open
Class
Room
Exercice
–
tableau-users-Etape
3
tri
données
1
veut
trier
utilisateurs
nom
utilise
fonction
array_multisort
principe
créer
tableau
uniquement
noms
puis
faire
appel
fonction
array_multisort
passant
paramètre
tableau
noms
constante
SORT_ASC
dire
tri
croissant
enfin
tableau
utilisateurs
function
triParNomDesc
&
lesUsers
{
//
tri
tableau
nom
//
commence
fabriquer
tableau
noms
foreach
lesUsers
indice
=
unUser
{
lesNoms
indice
=
unUser
'nom
'
}
//
appel
array_multisort
tableau
trier
dernier
array_multisort
lesNoms
SORT_DESC
lesUsers
}
Enregistrer
fonction
fichier
tri.php
tester
fonction
partir
résultat
Etape
2
2
méthode
trier
âge
décroissant
3
méthode
trier
âge
nom
décroissant
4
Ensuite
va
généraliser
fonction
tri
puisse
trier
selon
importe
quel
champ
5
Enfin
écrit
fonction
tri
selon
2
champs
façon
générale
Base
PHP
–
Environnement
développement
–
page
29/29
-
Open
Class
Room
ECHANGE
INFORMATIONS
PHP
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql
http
//php.net/manual/fr/langref.php
Open
Class
Room
SOMMAIRE
Sommaire
.........................................................................
1
Echanges
informations
PHP
......................................
3
Introduction
passer
variables
URL
.........................................................................................
3
Recherche
google
php
variable
_GET
..................................................................................
3
Exercice
.......................................................................................................................................................
3
Installation
fichiers
test
................................................................................................................
4
Méthode
Get
-
URL
-
tableau
_GET
....................................................................................................
4
Problématique
............................................................................................................................................
4
Exemple-1
href=
URL
tableau
_GET
...........................................................................................
4
Toujours
vérifier
informations
fournies
utilisateur
–
1
................................................................
7
Présentation
...............................................................................................................................................
7
Exemple-2
href-GET-sans-verifications
.....................................................................................................
7
Exemple-3
href-GET-avec-verifications
....................................................................................................
7
Fonction
gestion
variables
..............................................................................................................
8
Méthode
POST
-
Formulaires
-
tableau
_POST
...................................................................................
9
Rappels
formulaires
.........................................................................................................................
9
Exemple
4
formulaire-POST
....................................................................................................................
10
Exemple
5
formuaire-GET
.......................................................................................................................
11
Toujours
vérifier
informations
fournies
utilisateur
–
2
faille
XSS
.............................................
12
Never
trust
user
input
............................................................................................................................
12
Exemples
4
5
.........................................................................................................................................
12
Solution
exemple
6
.................................................................................................................................
12
Fonctions
traitement
chaînes
caractères
..................................................................................
13
protéger
contre
failles
aide
ligne
.............................................................................................
13
TP
1
Exercice
password
........................................................................................................................
14
Première
version
......................................................................................................................................
14
Remarque
crypter
mots
passe
.....................................................................................................
14
Deuxième
version
monofichier
...............................................................................................................
15
Exemple
7
saisie
utilisateur
.........................................................................................................
16
Structure
code
.....................................................................................................................................
16
Conclusion
................................................................................................................................................
20
_SESSION
.............................................................................................................................................
21
Présentation
.............................................................................................................................................
21
Utilisation
tableau
associatif
_SESSION
.............................................................................................
21
Terminer
session
...............................................................................................................................
21
TP
2
Synthèse
site
users
.....................................................................................................................
23
Objectif
...................................................................................................................................................
23
Etape
1
affichage
utilisateurs
Header
Nav
.................................................................
23
Etape
2
ajout
formulaire
admin-mot
passe
..................................................................................
25
Etape
3
page
administration
................................................................................................................
26
Etape
4
vérifier
login
...........................................................................................................................
28
Base
PHP
–
Environnement
développement
–
page
1/43
Etape
5
enregistrer
nouveau
user
.......................................................................................................
29
Etape
6
création
fichier
index.php
–
fonction
header
URL
...........................................................
30
variables
superglobales
............................................
31
Présentation
.........................................................................................................................................
31
tableaux
associatifs
...............................................................................................................
31
S_GET
-
_POST
-
_SESSION
....................................................................................................................
31
_COOKIE
_REQUEST
.........................................................................................................................
31
S_FILE
........................................................................................................................................................
31
_SERVER
_
ENV
.................................................................................................................................
31
Afficher
superglobales
print_r
var_dump
...............................................................................
31
_FILE
....................................................................................................................................................
32
Objectif
upload
.......................................................................................................................................
32
Technique
formulaire
spécial
............................................................................................................
32
Exemple
8
_FILE
....................................................................................................................................
32
fichiers
............................................................................................................................................
34
Présentation
.............................................................................................................................................
34
Autoriser
écriture
fichier
serveur
CHMOD
.............................................................................
34
Syntaxe
générale
manipulation
fichiers
....................................................................................
34
Algorithmique
fichiers
........................................................................................................................
35
Exemple
9
–
tableau-users-Etape-4
codage
fichier
........................................................................
36
_COOKIES
exemple
10
.......................................................................................................................
38
Présentation
.............................................................................................................................................
38
Principes
codage
..................................................................................................................................
38
Modifier
supprimer
cookie
..............................................................................................................
39
Précisions
..................................................................................................................................................
39
Bilan
...............................................................................
40
Construction
site
variables
page
...........................................................................................
40
Echanges
entre
pages
.......................................................................................................................
40
Appel
page
..................................................................................................................................
41
href=
url
......................................................................................................................................
41
form
action=
url
method=
.......................................................................................................
41
header
‘
location
url
..............................................................................................................................
41
.HTACCESS
.HTPASSWD
..............................................
42
Présentation
.........................................................................................................................................
42
.htaccess
...............................................................................................................................................
42
.htpasswd
.............................................................................................................................................
42
Edition
mars
2019
Base
PHP
–
Environnement
développement
–
page
2/43
ECHANGES
INFORMATIONS
PHP
Manuel
Référence
PHP
http
//php.net/manual/fr/langref.php
Introduction
passer
variables
URL
Recherche
google
php
variable
_GET
Résultats
URL
résultat
suivante
https
//www.google.fr/
#
safe=active
&
q=php+variable+
24_get
Derrière
https
//www.google.fr/
trouve
plusieurs
éléments
séparés
&
va
trouver
q=php+variable+
24_GET
variable
q
contient
informations
php
+
variable
+
24_get
24
vient
remplacer
Modification
URL
peut
modifier
directement
URL
met
exemple
POST
place
GET
obtient
page
recherche
php
variable
_POST
Simplification
peut
écrire
directement
URL
https
//www.google.fr/search
q=php+variable+
24_POST
Conclusion
adresse
URL
donne
page
afficher
paramètres
plus
Exercice
Google
Chercher
java
directement
URL
google
Page
cours
Regardez
URL
page
cours
ici
Quelle
question
posée
URL
Modifiez
valeur
article
exemple
216
constatez-vous
Base
PHP
–
Environnement
développement
–
page
3/43
Installation
fichiers
test
exemples
cours
fichier
zip
fournis
article
cours
01exemples_GET_POST.zip
Chargez
fichier
mettez-le
dossier
Partie_2
répertoire
web
www
serveur
WAMP
exemples
présentés
chapitre
vert
exercices
faire
présentés
chapitre
jaune
REMARQUE
Tous
fichiers
exemples
commencent
souvent
trois
lignes
echo
'
h1
CODE
PHP
/h1
'
highlight_file
'fichier.php
'
echo
'
h1
RESULTATS
/h1
'
code
affiche
deux
balises
h1
CODE
PHP
puis
RESULTATS
fonction
highlight_file
permet
afficher
contenu
fichier
proposé
Quand
teste
code
commence
affiche
code
Ca
permet
voir
code
temps
résultats
généraliser
code
écrit
highlight_file
basename
__FILE__
basename
__FILE__
permet
récupérer
nom
fichier
cours
traitement
Méthode
Get
-
URL
-
tableau
_GET
Problématique
Comment
faire
passer
informations
page
web
autre
Passer
page
autre
peut
faire
href=
URL
vient
voir
peut
passer
informations
URL
va
pouvoir
passer
informations
page
autre
manière
Exemple-1
href=
URL
tableau
_GET
Objectif
objectif
partir
première
page
page
appel
faire
appel
deuxième
page
page
appelée
passant
informations
circuleront
travers
URL
Principes
passage
paramètres
•
utilise
href=
URL
link
text
/a
•
URL
va
mettre
paramètres
•
page
appelée
paramètres
retrouve
tableau
associatif
paramètres
_GET
Base
PHP
–
Environnement
développement
–
page
4/43
Page
appelante
href
Fichier
index_appel_bonjour.php
page
HTML
PHP
faudra
exécuter
via
serveur
web
href
DOCTYPE
html
html
head
meta
charset=
utf-8
/
title
_GET-Appelant
/title
/head
body
h1
Test
_GET
/h1
p
Rendez-vous
href=
01-1-bonjour.php
prenom=Bertrand
&
amp
nom=Liaudet
bonjour
personnalisé
_GET
/a
syntaxe
nom
variable=valeur
&
nom
variable=etc
/p
/body
/html
href=
bonjour.php
prenom=Bertrand
&
amp
nom=Liaudet
•
nom
fichier
bonjour.php
•
•
nom
variable
=
information
prenom=Bertrand
informations
envoyées
vont
remplir
tableau
associatif
_GET
•
variables
séparées
&
écrit
&
amp
car
&
tout
seul
crée
confusion
HTML
•
deuxième
variable
valeur
nom=Liaudet
Page
appelée
_GET
Fichier
bonjour.php
php
echo
'
h1
CODE
PHP
/h1
'
highlight_file
basename
__FILE__
echo
'
h1
RESULTATS
/h1
'
echo
'
h3
TABLEAU
_GET
/h3
'
echo
'
pre
'
print_r
_GET
echo
'
/pre
'
DOCTYPE
html
html
head
meta
charset=
utf-8
/
title
_GET-Appelé
/title
/head
body
h1
Page
appeléeee
&
lt
href=
URL
&
gt
/h1
Base
PHP
–
Environnement
développement
–
page
5/43
h2
paramètres
passées
l'URL
tableau
_GET
/h2
p
Bonjour
php
echo
_GET
'prenom
'
'
'
_GET
'nom
'
/p
/body
/html
Explications
page
appelée
tableau
associatif
_GET
contient
clés
valeurs
fournies
page
appelante
array
prenom
=
Bertrand
nom
=
Liaudet
peut
exploiter
tableau
associatif
comme
veut
page
appelée
&
alt
permet
avoir
&
gt
permet
avoir
code
spéciaux
HTML
ici
Précisions
Ø
URL
voit
paramètres
…bonjour.php
prenom=Bertrand
&
nom=Liaudet
adresse
espaces
traduits
20
Ø
Sécurité
–
Confidentialité
information
circule
visible
lien
URL
faut
faire
attention
limiter
information
non
confidentielle
Ø
Limite
général
navigateurs
acceptent
url
plus
256
caractères
faut
éviter
passer
trop
informations
moyen
Base
PHP
–
Environnement
développement
–
page
6/43
Toujours
vérifier
informations
fournies
utilisateur
–
1
Présentation
vu
pouvait
voir
URL
informations
fournies
utilisateur
peut
aussi
modifier
informations
supprimer
directement
URL
Ca
peut
être
gênant
fonctionnement
site
faut
faire
vérifications
Exemple-2
href-GET-sans-verifications
Code
sans
vérifications
peut
tester
résultats
donne
mauvaises
valeurs
changeant
URL
peut
ralentir
serveur
générer
erreur
Exemple-3
href-GET-avec-verifications
Code
vérifications
vérifie
tous
cas
problème
possibles
php
echo
'
h2
attend
nombre
programme
appelant
/h2
'
if
isset
_GET
'nombre
'
{
echo
'
p
nombre
reçu
/p
'
}
else
{
//
cast
_GET
n'est
entier
obtient
0
nombre=
int
_GET
'nombre
'
if
_GET
'nombre
'
10000
OR
_GET
'nombre
'
=0
{
echo
'
p
nombre
reçu
n\'est
valide
/p
'
}
else
{
echo
'
p
allons
compter
jusqu\
'
'
nombre
'
/p
'
for
i=1
i
=
_GET
'nombre
'
i++
{
echo
'
p
'
i
'
/p
'
}
}
}
Vérifier
informations
attendues
existent
isset
var
isset
vrai
quelque
chose
variable
faux
sinon
pourrait
aussi
utiliser
fonction
empy
Transtypage
cast
forcer
type
variable
int
_GET
‘
nombre
forcément
chaine
caractères
pourrait
tester
contient
chiffres
fonction
ctype_digit
peu
aussi
caster
directement
_GET
‘
nombre
int
_GET
‘
nombre
entier
cast
renvoie
0
Base
PHP
–
Environnement
développement
–
page
7/43
Fonction
gestion
variables
existe
nombreuses
fonctions
permettent
faire
vérifications
particulièrement
fonctions
gestion
variables
http
//php.net/manual/fr/ref.var.php
Base
PHP
–
Environnement
développement
–
page
8/43
Méthode
POST
-
Formulaires
-
tableau
_POST
Rappels
formulaires
Principes
formulaires
outil
base
échanger
informations
visiteurs
http
//www.w3schools.com/html/html_forms.asp
http
//www.w3schools.com/tags/att_form_action.asp
http
//bliaudet.free.fr/IMG/pdf/HTML_4_Fonctionnalites_avancees.pdf
chapitre
3
formulaires
pages
9
12
form
input
Syntaxe
base
•
Exemple
form
action=
action.php
method=
POST
p
label
for=
nom
nom
/label
input
type=
text
name=
nom
id=
nom
maxlength=
10
placeholder=
nom
/p
p
input
type=
submit
value=
Valider
/p
/form
•
balise
form
contient
2
attributs
principaux
method
action
•
balise
form
contient
balises
inclues
permettent
1.
caractériser
type
formulaire
champ
saisie
bouton
menu
déroulant
etc.
2.
fournir
variables
passer
page
appelée
via
tableaux
associatifs
_GET
_POST
Principes
passage
paramètres
comme
appel
fonction
page
page
paramètres
retrouvent
tableau
associatif
paramètres
_GET
_POST
code
HTML
page
appelante
remplit
_GET
_POST
page
appelée
accède
éléments
tableau
associatif
_GET
_POST
attributs
méthode
form
•
attribut
method
permet
choisir
technique
transfert
informations
2
GET
POST
méthode
GET
celle
déjà
vue
fait
transiter
information
URL
limite
information
256
caractères
méthode
POST
permet
envoyer
gros
contenus
informations
cacher
transit
utilisateurs
utilise
préférentiellement
méthode
POST
formulaires
•
attribut
action
dit
quelle
autre
page
appelée
balise
form
quand
valide
bouton
exemple
quelle
page
enverra
informations
page
php
importe
quel
autre
page
langage
serveur
capable
traiter
informations
transmises
peut
aussi
faire
appel
page
Base
PHP
–
Environnement
développement
–
page
9/43
balises
inclues
balise
form
•
balise
input
principale
balise
saisie
fournit
général
champ
saisie
aussi
saisie
typées
téléphone
mail
couleurs
etc
fournit
aussi
boutons
validation
•
balise
textarea
fournit
zone
texte
saisir
•
balise
select
fournit
menu
déroulant
•
balise
fieldset
permet
regrouper
cadre
plusieurs
éléments
saisie
balise
legend
joue
rôle
label
cadre
•
balise
label
permet
mettre
texte
associé
zone
saisie
http
//www.w3schools.com/html/html_form_input_types.asp
2
attributs
fondamentaux
balises
inclues
name
value
remplir
_GET
_POST
chaque
élément
formulaire
champ
saisie
bouton
menu
déroulant
etc.
peut
définir
name
nom
variable
retrouvera
_
GET
_POST
accessible
page
appelée
name
variable
passée
paramètre
page
appelée
peut
définir
aussi
value
valeur
variable
définie
name
value
pourra
être
fournie
travers
variable
php
importe
quel
langage
serveur
noter
value
peut
aussi
être
valeur
affiche
formulaire
exemple
texte
bouton
validation
Exemple
4
formulaire-POST
Page
appelante
form
action=
actionPOST.php
method=
POST
Code
formulaire
form
action=
actionPOST.php
method=
POST
p
label
for=
prenom
prenom
/label
input
type=
text
name=
prenom
id=
prenom
placeholder=
prenom
/p
p
label
for=
nom
nom
/label
input
type=
text
name=
nom
id=
nom
placeholder=
nom
/p
p
input
type=
submit
value=
Valider
/p
/form
input
•
type
définit
type
saisie
ici
texte
•
name
clé
tableau
associatif
_POST
_GET
ici
_POST
•
id
sert
CSS
•
for
label
égal
id
clic
label
conduit
input
éviter
confusions
•
placeholder
info
saisie
grisée
Page
appelée
_POST
p
Bonjour
php
echo
_POST
'prenom
'
'
'
_POST
'nom
'
/p
Base
PHP
–
Environnement
développement
–
page
10/43
tableau
_POST
fonctionne
comme
tableau
_GET
tableau
associatif
name
clés
key
tableau
_POST
cas
tout
autres
formulaires
Quand
teste
constate
information
URL
Exemple
5
formuaire-GET
Page
appelante
form
action=
actionPOST.php
method=
GET
Code
formulaire
form
action=
actionPOST.php
method=
GET
Page
appelée
_GET
p
Bonjour
php
echo
_GET
'prenom
'
'
'
_GET
'nom
'
/p
cas
variables
transiteront
via
URL
peut
voir
URL
Base
PHP
–
Environnement
développement
–
page
11/43
Toujours
vérifier
informations
fournies
utilisateur
–
2
faille
XSS
Never
trust
user
input
Principe
envoyer
code
méthode
POST
information
envoyée
cachée
peut
envoyer
importe
quoi
particulièrement
code
HTML
JavaScript
nuire
utilisation
normale
site
affichant
exemple
contenus
inadaptés
envoi
code
place
texte
appelle
faille
XSS
Exemples
4
5
exemples
précédents
protégés
peut
saisir
simple
balise
HTML
code
JavaScript
balises
HTML
complexes
formulaire
Ø
Saisie
balise
test
précédent
place
saisir
simple
nom
Bertrand
peut
saisir
h1
Bertrand
/h1
cas
balise
h1
interprétée
texte
apparaitra
très
gros
Ø
Saisie
code
javascript
peut
aussi
ajouter
code
JavaScript
script
type=
text/javascript
alert
'Un
virus
détecter
Veuillez
rendre
bliaudet.free.fr
'
/script
2
exemples
précédents
très
grave
code
JavaScript
pirate
peut
récupérer
informations
privées
utilisateur
Ø
Rôle
navigateurs
Safari
apple
protège
automatiquement
contre
intrusions
XSS
firefox
Firefox
50.0.2
laisse
passer
Javascript
Solution
exemple
6
Principes
PHP
fournit
deux
fonctions
permettent
traiter
code
interprétable
comme
simple
chaîne
caractères
Fonction
htmlspecialchars
fonction
htmlspecialchars
permet
code
inséré
traité
comme
texte
normal
htmlspecialchars
_POST
'nom
'
Ainsi
saisit
h1
Bertrand
/h1
site
affichera
bonjour
h1
Bertrand
/h1
balise
h1
prise
compte
http
//php.net/manual/fr/function.htmlspecialchars.php
Transformation
caractère
spécial
caractère
normal
&
lt
Quand
regarde
code
source
page
htmlspecialchars
voit
interprété
navigateur
comme
début
balise
remplacé
&
lt
permet
navigateur
afficher
Base
PHP
–
Environnement
développement
–
page
12/43
cas
Safari
Firefox
Chrome
Fonction
htmlentities
fonction
htmlentities
équivalente
fonction
htmlspecialchars
encore
plus
restrictive
tous
caractères
équivalents
HTML
traduits
http
//php.net/manual/fr/function.htmlentities.php
Fonctions
traitement
chaînes
caractères
Htmlspecialchars
htmlentities
fonctions
traitement
chaîne
caractères
Toutes
fonctions
http
//php.net/manual/fr/ref.strings.php
trouve
exemple
ltrim
suppression
espaces
trop
ucfirst
upper
case
première
lettre
etc
aussi
printf
sprintf
fonctions
printf
permet
écrire
chaine
variables
formatés
comme
echo
formaté
fonction
sprintf
permet
retourner
lef
résultat
chaine
Exemple
printf
prix
.2f
euros
prix
résultat
affiché
prix
2
chiffres
après
virgule
string
f
float
plusieurs
chiffres
après
virgule
entier
caractère
etc
Toute
documentation
http
//php.net/manual/fr/function.sprintf.php
Tester
code
http
//phptester.net
protéger
contre
failles
aide
ligne
https
//openclassrooms.com/courses/protegez-vous-efficacement-contre-les-failles-web
Base
PHP
–
Environnement
développement
–
page
13/43
TP
1
Exercice
password
Première
version
Objectif
Donner
accès
page
contient
informations
cachées
ceux
mot
passe
bon
mot
passe
revient
page
accueil
Méthode
abord
réfléchir
papier
Quelles
pages
jeu
plusieurs
Comment
pages
communiquent-elles
entre
elles
Première
analyse
•
page
accueil
formulaire
saisie
mot
passe
HTML
•
mot
passe
saisi
formulaire
envoyé
tableau
_POST
page
action
PHP
vérifie
mot
passe
bon
avant
afficher
informations
cachées
•
mot
passe
faux
faut
afficher
message
erreur
•
tous
cas
page
appelé
permet
revenir
page
appelante
Elément
solution
page
action
trouve
code
if
isset
_POST
'password
'
AND
htmlspecialchars
_POST
'password
'
=='password
'
{
Remarque
crypter
mots
passe
Circulation
réseau
https
mot
passe
apparaît
page
action
Toutefois
code
php
if
jamais
visible
navigateur
poste
client
correctement
sécurisé
serveur
aussi
sécurisé
fait
circuler
mot
passe
réseau
risque
https
permet
sécuriser
circulation
Enregistrement
BD
pratique
mot
passe
récupéré
BD
mots
passe
doivent
être
enregistré
crypté
BD
crypter
utilise
fonction
crypt
hashed_password
=
crypt
password
décrytpter
écrit
code
suivant
password
mot
passe
saisi
hashed_password
mot
passe
récupéré
BD
if
crypt
password
hashed_password
==
hashed_password
{
Base
PHP
–
Environnement
développement
–
page
14/43
echo
``
Mot
passe
correct
``
}
else
{
echo
``
Mot
passe
incorrect
``
}
Deuxième
version
monofichier
souhaite
tout
coder
seul
fichier
page
action
page
accueil
elle-même
va
falloir
tester
différents
cas
début
page
accueil
•
Est-on
cas
faut
afficher
formulaire
_POST
'password
'
setté
•
Est-on
cas
mot
passe
bon
_POST
'password
'
=
password
•
Est-on
cas
mot
passe
mauvais
_POST
'password
'
=
password
Base
PHP
–
Environnement
développement
–
page
15/43
Exemple
7
saisie
utilisateur
Structure
code
veut
obtenir
page
suivante
Utilisation
fonctions
va
utiliser
fonction
printLesUsersHTML
défini
exercices
tableaux
utilisateur
Base
PHP
–
Environnement
développement
–
page
16/43
cas
erreur
saisit
tous
champs
affiche
message
voit
jaune
Base
PHP
–
Environnement
développement
–
page
17/43
Structure
page
HTML
page
HTML
va
utiliser
2
variables
PHP
lesUsers
msgErr
page
HTML
classique
tout
petit
peu
PHP
gris
DOCTYPE
html
html
head
meta
charset=
utf-8
/
link
rel=
stylesheet
href=
style.css
/
title
Tableau
/title
/head
body
php
echo
'
h2
Affichage
utilisateurs
/h2
'
printLesUsersHTML
lesUsers
h2
Entrez
informations
dun
utilisateurs
/h2
p
Tous
champs
obligatoires
/h2
form
action=
index-tp-users-formulaire.php
method=
POST
fieldset
legend
Entrez
bon
mot
passe
accéder
codes
secrets
/legend
p
label
for=
nom
Nom
Prénom
/label
input
type=
nom
name=
nom
id=
password
placeholder=
nom
/p
p
label
for=
mail
mail
/label
input
type=
mail
name=
mail
id=
mail
placeholder=
mail
/p
p
label
for=
mail
mot
passe
/label
input
type=
password
name=
password
id=
password
placeholder=
password
/p
p
label
for=
annee
année
naissance
/label
input
type=
annee
name=
annee
id=
password
placeholder=
annee
/p
input
type=
hidden
name=
lesUsers
value=
'
php
echo
serialize
lesUsers
'
p
input
type=
submit
name=
submit
value=
Valider
/p
/fieldset
/form
php
if
isset
msgErr
{
echo
msgErr
}
/body
/html
Base
PHP
–
Environnement
développement
–
page
18/43
Code
PHP
code
PHP
placé
tout
début
4
étapes
1
debug
affiche
_POST
2
inclut
fonctions
3
initialise
variables
ici
lesUsers
4
traite
cas
validé
saisie
php
//
1
debut
echo
'
_POST
'
print_r
_POST
echo
'
br
'
//
2
inclusion
fonctions
include_once
``
unUser.php
include_once
``
lesUsers.php
//
3
initialise
tableau
users
lesUsers=initLesUsers
//
4
validé
formulaire
if
isset
_POST
'submit
'
{
//
charge
bon
lesUsers
lesUsers
=
unserialize
_POST
'lesUsers
'
//
saisie
n'est
complète
if
isset
_POST
'nom
'
OR
ltrim
_POST
'nom
'
==
OR
isset
_POST
'mail
'
OR
ltrim
_POST
'mail
'
==
OR
isset
_POST
'annee
'
OR
ltrim
_POST
'annee
'
==
OR
isset
_POST
'password
'
OR
ltrim
_POST
'password
'
==
{
msgErr=
'
h2
style=
background-color
yellow
Tous
champs
obligatoires
/h2
'
}
//
saisie
complète
récupère
lesUsers
ajoute
saisie
else
{
lesUsers
=newUser
_POST
'nom
'
_POST
'mail
'
_POST
'passwo
rd
'
_POST
'annee
'
}
}
Base
PHP
–
Environnement
développement
–
page
19/43
Conclusion
organisation
séparé
PHP
HTML
première
étape
vers
MVC
pages
HTML-PHP
vont
souvent
ressembler
php
//Partie
PHP
session_start
//
ouvre
session
fait
1er
etc.
DOCTYPE
html
Partie
HTML
/html
Base
PHP
–
Environnement
développement
–
page
20/43
_SESSION
Présentation
•
session
instance
fonctionnement
programme
•
début
fin
•
site
web
session
fonctionnement
site
client
est-à-dire
navigateur
•
Chaque
session
contient
informations
peuvent
être
accessibles
toutes
pages
informations
rangées
tableau
associatif
_SESSION
Précision
technique
Comment
fait
serveur
savoir
agit
tel
tel
utilisateur
cookie
session
permet
garantir
cela
cookie
sens
serveur
web
donne
aucune
information
utilisateur
reviendra
chapitre
cookies
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/session-cookies
Utilisation
tableau
associatif
_SESSION
démarrage
session
doit
faire
avant
tout
code
HTML
session_start
pouvoir
utiliser
variable
_SESSION
faut
appeler
fonction
session_start
Toutes
pages
veulent
utiliser
_SESSION
doivent
appeler
session_start
php
session_start
DOCTYPE
html
appel
fonction
doit
faire
tout
début
page
avant
DOCTYPE
html
_SESSION
_SESSION
utilise
comme
tableau
associatif
enregistrer
donnée
_SESSION
écrira
_SESSION
'administrateur
'
='Bertrand
'
fois
clé
administrateur
créée
peut
tester
existe
If
isset
_SESSION
'administrateur
'
{
echo
'Bonjour
'
_SESSION
'administrateur
'
echo
'Vous
connecté
pouvez
accéder
back-office
'
}
Terminer
session
Plusieurs
techniques
peuvent
terminer
session
1
unset
_SESSION
'administrateur
'
Base
PHP
–
Environnement
développement
–
page
21/43
unset
finit
vraiment
session
supprime
clé
_SESSION
test
isset
donnera
réponse
fausse
2
_SESSION
=
array
instruction
supprime
toutes
variables
sssion
3
patienter
timeout
bout
certain
temps
sans
activité
timeout
variables
session
supprimées
4
déconnecter
fermer
client
navigateur
•
quitte
navigateur
variables
session
supprimées
•
noter
fermer
page
sans
fermer
navigateur
supprime
variables
session
•
noter
aussi
certains
sites
conservent
variables
session
connexion
typiquement
quand
fermé
navigateur
cas
utilisent
cookies
reviendra
5
session_destroy
http
//php.net/manual/fr/function.session-destroy.php
fonction
bloque
effet
session_start
sans
supprimer
données
nouveau
session_start
permet
réaccéder
Base
PHP
–
Environnement
développement
–
page
22/43
TP
2
Synthèse
site
users
Objectif
Consulter
utilisateurs
connecter
comme
admin
pouvoir
ajouter
utilisateur
Coder
séparant
PHP
HTML
reprend
corrigés
exercices
tableau
user
étape
2-fonction
étape
3-tri
Etape
1
affichage
utilisateurs
Header
Nav
objectif
obtenir
page
suivante
index-users.php
CSS
obtenir
résultat
CSS
fourni
header
-
nav
fonctionne
gère
header
HTML
contient
nav
lien
Users
nav
id=nav
Base
PHP
–
Environnement
développement
–
page
23/43
mieux
mettre
header
fichier
séparé
header.php
tout
dossier
include
initLesUsers
printLesUsers
tableau
utilisateurs
obtenu
utilisant
fonctions
initLesUsers
printLesUsersHTML
fournies
fichier
lesUsers.php
faut
inclure
triParNomDesc
triParNomAsc
ajoute
deux
boutons
tri
nom
desc
tri
nom
asc
va
utiliser
fonctions
triParNomDesc
triParNomAsc
définies
fichier
tri.php
Après
avoir
utiliser
fonction
initLesUsers
devra
vérifier
tri
faire
Affichage
débug
debut
fichier
écrit
echo'POST
'
print_r
_POST
echo
'
br/
'
echo'GET
'
print_r
_GET
echo
'
br/
'
echo'URL
'
print_r
_SERVER
'PHP_SELF
'
echo
'
br/
'
STRUCTURE
CODE
très
impotant
Dossiers
dote
dossier
css
dossier
include
laisse
racine
indexUser.php
fichier
indexUser.php
commence
code
php
debug
initialisation
tableau
tri
tableau
Ensuite
met
code
HTML
DOCTYPE
html
etc
Base
PHP
–
Environnement
développement
–
page
24/43
Etape
2
ajout
formulaire
admin-mot
passe
Objectif
ajoute
formulaire
connexion
page
administration
permettra
saisir
nouvel
utilisateur
formulaire
obtenir
résultat
CSS
ajoute
nav
formulaire
admin
password
ok
formulaire
id
=
admin
bouton
ok
amène
page
index-admin-users.php
va
écrire
page
suivante
variables
formulaire
appellent
admin
password
Base
PHP
–
Environnement
développement
–
page
25/43
Etape
3
page
administration
objectif
obtenir
page
suivante
index-admin-users.php
Ø
header
dote
nouveau
header
header-admin.php
duplique
header.php
fait
mises
jour
ajoutant
lien
Admin
Users
modifiant
formulaire
saisie
gérer
utilisateur
connecté
enregistré
valeur
admin
mot
passe
_SESSION
Ø
Fichier
index-admin-users.php
duplique
fichier
index-user.php
supprime
concerne
tris
Ø
Formulaire
saisie
Base
PHP
–
Environnement
développement
–
page
26/43
afficher
formulaire
saisie
nouvel
utilisateur
utilise
exercice
étape
3
03exercice-tableau-users-formulaire
Ø
Gérer
toutes
entrées
deux
pages
premier
temps
gère
aucune
conséquence
boutons
autre
accès
page
vérifie
mot
passe
enregistre
nouveau
user
Base
PHP
–
Environnement
développement
–
page
27/43
Etape
4
vérifier
login
Objectif
vérifie
mot
passe
cas
erreur
affiche
page
erreur
cas
réussite
fait
sorte
utilisateur
reste
connecté
clique
menu
Users
gère
déconnexion
Page
erreur
obtenir
page
erreur
crée
nouvelle
page
indexErreur.php
page
HTML
inclut
header.php
affiche
message
erreur
peut
tester
directement
page
Vérification
login
–
mot-de-passe
page
admin
vérifie
début
bien
reçu
bon
login
–
motDePasse
vérifie
deux
champs
settés
contiennent
exemple
admin
admin
cas
enregistre
valeur
_SESSION
‘
admin
commence
faire
session_start
début
page
Ensuite
teste
_SESSION
‘
admin
setté
cas
include
indexErreur.php
quitte
page
ajoute
echo'SESSION
'
print_r
_SESSION
echo
'
br/
'
debug
Gestion
déconnexion
page
user
teste
_POST
'deconnexion
'
setté
vient
bouton
déconnexion
cas
unset
_SESSION
'admin
'
page
admin
clique
Users
revient
page
user
faudrait
rester
admin
ça
quand
affiche
page
admin
faut
selectionner
header
headerAdmin
selon
_SESSION
‘
admin
setté
Base
PHP
–
Environnement
développement
–
page
28/43
Etape
5
enregistrer
nouveau
user
Objectif
reprend
exercice
étape
3
03-exercice-tableau-users-formulaire
exercice
permettait
ajouter
utilisateur
tableau
gérant
champs
hidden
fonction
serialize
Solution
exercice
faut
faire
circuler
tableau
utilisateurs
entre
tous
pages
tous
cas
plus
simple
mettre
_SESSION
instruction
_SESSION
'lesUsers
'
=
serialize
lesUsers
page
indexUser.php
Avant
initialiser
tableau
lesUsers
teste
_SESSION
'lesUsers
'
setté
cas
lesUsers
vaudra
contenu
_SESSION
'lesUsers
'
lesUsers
=
unserialize
_SESSION
'lesUsers
'
page
indexAdminUser.php
initialiser
tableau
lesUsers
récupère
_SESSION
lesUsers
=
unserialize
_SESSION
'lesUsers
'
Ensuite
fait
insertion
nouveau
user
lieu
Ensuite
met
jour
_SESSION
_SESSION
'lesUsers
'
=
serialize
lesUsers
Insertion
nouveau
user
peut
reprendre
exercice
étape
3
03-exercice-tableau-users-formulaire
adaptant
peu
Base
PHP
–
Environnement
développement
–
page
29/43
Etape
6
création
fichier
index.php
–
fonction
header
URL
Objectif
veut
projet
démarre
tout
seul
quand
arrive
dossier
Idée
pourrait
choisir
renommer
page
indexUser.php
index.php
mettre
jour
tous
appels
page
code
long
refaire
change
page
accueil
Solution
fonction
header
URL
http
//php.net/manual/fr/function.header.php
Header
permet
demander
URL
peu
comme
href
pourra
passer
paramètres
comme
toute
URL
utile
quand
passera
MVC
doit
impérativement
être
utilisée
avant
tout
code
HTML
Ø
Exemple
fichier
header
php
header
'Location
mapage.php
'
Base
PHP
–
Environnement
développement
–
page
30/43
VARIABLES
SUPERGLOBALES
Présentation
tableaux
associatifs
http
//php.net/manual/fr/language.variables.superglobals.php
variables
superglobales
tableaux
associatifs
Elles
accessibles
tout
moment
page
quel
contexte
particulièrement
fonctions
S_GET
-
_POST
-
_SESSION
déjà
abordé
3
variables
superglobales
_COOKIE
_REQUEST
_COOKIE
variable
utilisée
conserver
informations
machine
client
via
cookies
Cf
chapitre
suivant
_REQUEST
contient
défaut
_COOKIE
_GET
_POST
S_FILE
_FILES
variable
utilisée
téléchargements
fichier
via
HTTP
méthode
POST
Cf
chapitre
suivant
_SERVER
_
ENV
_SERVER
variables
concernant
serveur
programme
trouve
exemple
_SERVER
‘
REMOTE_ADDR
adresse
IP
client
demande
page
courante
_ENV
variables
concernant
variables
environnement
serveur
superglobale
rarement
utilisée
Afficher
superglobales
print_r
var_dump
fonctions
print_r
var_dump
affiche
tableaux
associatifs
ligne
balise
PRE
/PRE
peut
avoir
affichage
ligne
couple
key-value
Base
PHP
–
Environnement
développement
–
page
31/43
_FILE
Objectif
upload
Transmettre
fichier
script
PHP
Ø
Gestion
chargements
fichiers
•
http
//php.net/manual/fr/features.file-upload.php
Ø
Chargements
fichiers
méthode
POST
•
http
//php.net/manual/fr/features.file-upload.post-method.php
Ø
_FILES
•
http
//php.net/manual/fr/reserved.variables.files.php
•
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/transmettredes-donnees-avec-les-formulaires
Technique
formulaire
spécial
•
balise
FORM
attribut
method=
POST
attriubt
enctype=
multipart/formdata
•
balise
INPUT
attribut
type=
file
attribut
name=
clé
nom
fichier
_FILES
Exemple
8
_FILE
fichier
balise
FORM
contient
formulaire
suivant
form
method=
post
action=
action.php
enctype=
multipart/form-data
Sélectionner
fichier
input
type=
file
name=
userfile
input
type=
submit
value=
Envoyer
/form
attribut
name
donne
nom
clé
tableau
associatif
_FILES
comme
valeur
fichier
uploadé
input
type=
file
génère
interface
sélection
fichier
ordinateur
client
fichier
action
Ø
Résultats
-
_FILE
page
action.php
variable
_FILE
‘
userfile
définie
champs
suivants
name
type
size
tmp_name
error
Array
userfile
=
Array
name
=
exo.php
Base
PHP
–
Environnement
développement
–
page
32/43
type
=
text/php
tmp_name
=
/Applications/MAMP/tmp/php/phpYpRqlW
error
=
0
size
=
269
Ø
move_uploaded_file
page
action
va
mettre
fichier
chargé
répertoire
veut
fichier
chargé
répertoire
temporaire
_FILE
‘
userfile
‘
tmp_name
mettre
veut
utilise
fonction
move_uploaded_file
nomDuFichierTmpSurLeServeur
nomDuFichierSurLeSite
nomFile
=
_FILES
'userfile
'
'name
'
echo
'Fichier
chargé
'.
nomFile
'
br
'
tmpDir=
_FILES
'userfile
'
'tmp_name
'
echo
'Fichier
stocké
temporairement
ici
'.
tmpDir
'
br
'
//
uploade
fichier
temporaire
tmpDir
nouveau
fichier
//
appelle
nomFile
trouve
repertoire
courant
//
repertoire
fichier
php
exécute
res=move_uploaded_file
tmpDir
uploadDir.
nomFile
if
res
echo
'Upload
réussi
br
'
else
echo
'
L\'upload
échoué
br
'
Test
teste
upload
fichier
peut
trouver
importe
machine
navigateur
peut
uploader
importe
quel
fichier
programme
test
affiche
contenu
fichiers
texte
fichiers
php
sql
images
Base
PHP
–
Environnement
développement
–
page
33/43
fichiers
Présentation
http
//php.net/manual/fr/ref.filesystem.php
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/lire-et-ecrire-dansun-fichier-5
fichiers
permettent
enregistrer
informations
serveur
consulter
modifier
ultérieurement
fonctionnement
général
celui
langage
Autoriser
écriture
fichier
serveur
CHMOD
CHMOD
commande
linux
donner
droits
lecture
écriture
exécution
fichiers
dossiers
écrire
fichier
serveur
faut
dossier
contient
fichiers
donne
droit
utilisateurs
lire
écrire
éventuellement
exécuter
valeur
777
manipulation
fait
directement
serveur
travers
logiciel
FTP
exemple
Syntaxe
générale
manipulation
fichiers
3
étapes
manipulation
fichiers
1
Créer
ouvrir
fichier
•
fopen
2
traitements
Ø
Ø
Ø
Ecrire
fichier
•
fputs
écrire
ligne
•
fputc
écrire
caractère
•
fprintf
écrire
chaîne
formatée
•
etc
Lire
fichier
•
fgets
lire
ligne
•
fgetc
lire
caractère
fseek
déplacer
fichier
•
fscanf
lire
chaîne
formatée
•
etc.
déplacer
fichier
•
fseek
4
Fermer
fichier
•
fclose
Base
PHP
–
Environnement
développement
–
page
34/43
Algorithmique
fichiers
type
fichier
type
essentiellement
pointeur
donne
l'adresse
d'un
élément
fichier
d'abord
l'adresse
premier
élément
fichier
va
aussi
contenir
d'autres
informations
fait
structure
l'un
champs
contient
l'adresse
l'élément
courant
fichier
faut
bien
comprendre
programme
variable
habituelle
structure
comme
n'importe
quelle
structure
contient
l'adresse
d'un
élément
d'un
fichier
ptfich
fichier
ad
PROGRAMME
ROM
Ouvrir
fichier
créer
nécessaire
fopen
http
//php.net/manual/fr/function.fopen.php
ptfich
=
fopen
``
nomDuFichierSurLeDisque
``
mode
ouverture
nom
fichier
disque
peut
être
absolu
relatif
plusieurs
mode
ouverture
fichier
r
r+
w
w+
a+
etc.
r
permet
lecture
seule
r+
lecture
écriture
w
écriture
seule
création
fichier
existe
w+
lecture
écriture
création
fichier
existe
etc
Voir
documentation
référence
détail
Fermer
fichier
fclose
faut
fermer
fichiers
utilise
permettre
autres
utiliser
booléen
fclose
ptFich
lire
fichier
string
fgets
ptFich
fgets
permet
lire
ligne
courante
autres
fonctions
fgetc
fscanf
fread
etc
Voir
exemple
http
//php.net/manual/fr/function.fscanf.php
chapitre
voir
aussi
écrire
fichier
int
fwrite
ptFich
string
fwrite
écrit
string
passée
paramètre
fputs
alias
fwrite
fonction
retourne
nombre
octets
écrits
0
=
false
0
octet
écrit
fonction
fprintf
autre
fonction
permettant
écrire
fichier
système
formatage
Base
PHP
–
Environnement
développement
–
page
35/43
http
//php.net/manual/fr/function.fwrite.php
déplacer
fichier
peut
déplacer
fichier
nombre
octets
précisés
nombre
négatif
part
fin
fichier
fseek
ptFich
nombreDOctets
http
//php.net/manual/fr/function.fseek.php
Repérer
fin
fichier
peut
vérifier
tout
moment
ptfich
arrivé
fin
ficher
booléen
feof
ptFich
http
//php.net/manual/fr/function.feof.php
Exemple
9
–
tableau-users-Etape-4
codage
fichier
reprend
étape
2
étape
3
va
rajouter
fonctions
traitements
fichier
dote
fonction
écriture
tableau
lesUsers
fichier
function
ecrireLesUsersDansFichier
nomFichier
lesUsers
fonction
lecture
tableau
lesUsers
partir
fichier
function
lireLesUsersDansFichier
nomFichier
&
lesUsers
Fonction
ecrireLesUsersDansFichier
function
ecrireLesUsersDansFichier
nomFichier
lesUsers
{
ptfich=fopen
nomFichier
``
w
foreach
lesUsers
unUser
{
foreach
unUser
element
{
echo
element
'
'
fprintf
ptfich
``
``
element
}
echo
'
br/
'
fprintf
ptfich
``
\n
//\n
tout
seul
saut
ligne
}
fclose
ptfich
}
fonction
commence
fopen
retourne
ptfich
chercher
usage
fopen
écrire
fichier
passe
w
fopen
Ensuite
écrit
fichier
fprintf
chercher
usage
fprintf
passer
ligne
écrira
fprintf
ptfich
``
\n
Enfin
fclose
ferme
fichier
Fonction
lireLesUsersDansFichier
function
lireLesUsersDansFichier
nomFichier
&
lesUsers
{
ptfich=fopen
nomFichier
``
r
while
feof
ptfich
{
//
lit
5
param
car
prénom
nom
2
chaînes
séparées
//
met
car
fichier
Base
PHP
–
Environnement
développement
–
page
36/43
//
considère
3
champs
contiennent
d'espaces
lectureOK=fscanf
ptfich
``
``
prenom
nom
mail
motDePasse
anneeNaissance
if
lectureOK
{
//
pb
lecture
sort
return
0
//
peut
gérer
ça
plus
finement
}
unUser=newUser
prenom
'
'.
nom
mail
motDePasse
anneeNaissance
printUnUser
unUser
lesUsers
=
unUser
}
fclose
ptfich
return
1
}
fonction
commence
fopen
mode
r
lit
fichier
fscanf
récupère
ainsi
tous
champs
utilisateur
crée
utilisateur
met
lesUtilisateurs
Enfin
fclose
ferme
fichier
Base
PHP
–
Environnement
développement
–
page
37/43
_COOKIES
exemple
10
Présentation
cookies
petits
fichiers
4ko
stockés
navigateur
poste
client
conserver
informations
prochaine
fois
peuvent
ainsi
garder
trace
visite
site
visite
suivante
appelle
aussi
témoin
connexion
Seul
domaine
créé
cookie
peut
relire
utilisateurs
navigateurs
peuvent
désactiver
cookies
domaine
particulier
Selon
législations
vigueur
utilisateur
doit
donner
accord
recevoir
cookies
cas
France
http
//php.net/manual/fr/reserved.variables.cookies.php
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/session-cookies
Principes
codage
peut
enregistrer
cookies
fonction
setcookie
peut
lire
cookies
variable
_COOKIE
Enregistrer
cookie
machine
client
setcookie
http
//php.net/manual/fr/function.setcookie.php
setcookie
permet
enregistrer
cookie
machine
client
setcookie
doit
être
écrit
avant
code
HTML
avant
DOCTYPE
exemple
arrive
page
suite
validation
formulaire
POST
variable
nom
variable
prenom
_POST
peut
enregistrer
2
cookies
nom
prénom
utilisateur
php
if
isset
_POST
'nom
'
setcookie
'nom
'
_POST
'nom
'
time
+3600
*
24
*
7
if
isset
_POST
'prenom
'
setcookie
'prenom
'
_POST
'prenom
'
time
+3600
*
24
*
7
DOCTYPE
html
cookie
général
minimum
3
caractéristiques
•
nom
•
valeur
•
date
expiration
aujourd
hui
time
+
secondes
ici
semaine
Accéder
cookie
code
_COOKIE
veut
maintenant
afficher
bonjour
nom
prenom
quand
utilisateur
arrive
site
déjà
venu
enregistré
cookies
nom
prenom
utilise
tableau
associatif
_COOKIE
Base
PHP
–
Environnement
développement
–
page
38/43
header
exemple
pourra
récupérer
nom
prenom
afficher
bonjour
autre
chose
if
isset
_COOKIE
'nom
'
{
nom
=
COOKIE
'nom
'
}
if
isset
_COOKIE
'nom
'
{
prenom
=
COOKIE
'nom
'
}
//
peut
ensuite
faire
veut
nom
prenom
Ø
Sécuriser
cookies
Attention
cookies
modifiables
client
faut
considérer
comme
informations
non
sûres
faut
utiliser
fonction
htmlspecialchars
protéger
contenu
cookie
if
isset
_COOKIE
'nom
'
{
nom
=
htmlspecialchars
COOKIE
'nom
'
}
if
isset
_COOKIE
'nom
'
{
prenom
=
htmlspecialchars
COOKIE
'nom
'
}
//
peut
ensuite
faire
veut
nom
prenom
Modifier
supprimer
cookie
modifier
supprimer
cookie
reprend
fonction
setcookie
modification
garde
nom
peut
changer
valeur
et/ou
date
expiration
suppression
garde
nom
passe
date
expiration
avant
date
heure
actuelle
passe
time
–
1000
exemple
Précisions
Consulter
cookies
navigateur
navigateur
affichant
outils
développement
ressources
page
peut
accéder
ressources
stockage
visualiser
cookies
va
voir
cookie
voit
aussi
cookie
PHPSESSID
PHP
SESS
ID
cookie
créé
automatiquement
PHP
comme
valeur
ID
session
permet
retrouver
utilisateur
Autres
paramètres
setcookie
http
//php.net/manual/fr/function.setcookie.php
aussi
4
autres
paramètres
fonction
setcookie
permettent
sécuriser
cookies
dernier
httponly
true
peut
limiter
risque
faille
XSS
interdisant
Javascript
puisse
accéder
cookie
setcookie
'nom
'
'Bertrand
Liaudet
'
time
+3600
*
24
*
7
null
null
false
true
Base
PHP
–
Environnement
développement
–
page
39/43
BILAN
Construction
site
variables
page
•
site
constitué
pages
correspondent
chacune
main
•
Chaque
page
gère
variables
pages
locales
globales
•
variables
page
visibles
autre
page
•
pages
peuvent
échanger
informations
variables
superglobales
fichiers
BD
Echanges
entre
pages
•
Quand
page
appelle
autre
page
peut
fournir
information
tableaux
_GET
_POST
•
pages
peuvent
lire
écrire
tableau
_SESSION
vont
partager
•
pages
peuvent
écrire
cookies
lire
cookies
tableau
_COOKIES
•
pages
peuvent
lire
écrire
fichiers
elles
peuvent
partager
•
pages
peuvent
lire
écrire
base
données
elles
peuvent
partager
•
pages
peuvent
lire
informations
concernant
serveur
client
tableaux
_ENV
_SERVER
Base
PHP
–
Environnement
développement
–
page
40/43
Appel
page
peut
appeler
page
3
façons
href=
url
cas
information
circule
forcément
_GET
directement
url
https
//www.w3schools.com/tags/tag_a.asp
form
action=
url
method=
cas
information
circule
_GET
_POST
selon
valeur
attribut
method
balise
form
GET
POST
http
//www.w3schools.com/tags/att_form_action.asp
header
‘
location
url
cas
information
circule
forcément
_GET
directement
url
http
//php.net/manual/fr/function.header.php
Base
PHP
–
Environnement
développement
–
page
41/43
.HTACCESS
.HTPASSWD
Présentation
fichiers
.htaccess
.htpasswd
permettent
protéger
dossiers
fichiers
site
web
début
nom
font
fichiers
cachés
OS
Linux
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/proteger-undossier-avec-un-htaccess
http
//www.siteduzero.com/tutoriel-3-14649-proteger-un-dossier-avec-un-htaccess.html
http
//www.siteduzero.com/tutoriel-3-35126-le-htaccess-et-ses-fonctionnalites.html
sécurité
sites
web
exemple
https
//legissa.ovh/internet-se-proteger-des-pirates-et-hackers.html
.htaccess
fichier
.htaccess
permet
interdire
accès
dossier
met
fichier
.htaccess
dossier
concerné
peut
préciser
beaucoup
choses
fichier
minimum
bloquer
affichage
contenu
Options
-
Indexes
.htpasswd
fichier
.htpasswd
permet
protéger
dossier
mot
passe
associé
fichier
.htaccess
particulier
Contenu
fichier
.htaccess
AuthName
``
Page
d'administration
protégée
AuthType
Basic
AuthUserFile
``
/C
/wamp/www/admin/.htpasswd
Require
valid-user
•
AuthName
texte
répond
tentative
accès
•
AuthUserFile
chemin
vers
fichier
.htpasswd
chemin
peut
être
absolu
relatif
selon
hébergeurs
local
absolu
général
absolu
connaître
chemin
absolu
fichier
php
echo
realpath
'monFichier.php
'
Contenu
fichier
.htpasswd
user1
password1
Base
PHP
–
Environnement
développement
–
page
42/43
user2
password2
Sous
WAMP
mot
passe
spécifé
clair
bertrand
motDePasseBertrand
admin
motDePasseAdmin
serveur
ligne
mot
passe
doit
être
crypté
bertrand
1
MEqT//cb
hAVid.qmmSGFW/wDlIfQ81
admin
1
/lgP8dYa
sQNXcCP47KhP1sneRIZoO0
Ø
Crypter
mot
passe
php
echo
crypt
'monpasswd
'
Base
PHP
–
Environnement
développement
–
page
43/43
PHP
–
MYSQL
-
MVC
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/presentation-desbases-de-donnees-2
http
//php.net/manual/fr/langref.php
Open
Class
Room
SOMMAIRE
Sommaire
......................................................................................................................................
1
PHP
-
MySQL
.................................................................................................................................
4
Installation
fichiers
test
................................................................................................................
4
exemples
présentés
chapitre
vert
.............................................................................
4
exercices
faire
présentés
chapitre
jaune
.................................................................
4
Utilisation
PHPMyAdmin
....................................................................................................................
4
Oouvrir
phpMyAdmin
.................................................................................................................................
4
Créer
Base
données
........................................................................................................................
4
Créer
table
tuples
.......................................................................................................................
4
Mettre
jour
colonne
BD
gauche
onglet
flèche
circulaire
verte
.................................................
5
Affichez
contenu
table
utilisateur
..................................................................................................
5
Exécuter
SELECT
....................................................................................................................................
5
Exporter
......................................................................................................................................................
5
Importer
.....................................................................................................................................................
5
Connexion
BD
print_r
contenu
table
...............................................................................
7
Utilisation
base
donnée
PHP
....................................................................................................
7
Connexion
BD
new
PDO
exemple
1
–
connexion
...........................................................................
7
Code
........................................................................................................................................................................
7
Explications
.............................................................................................................................................................
7
Afficher
contenu
table
-1
query
fetch
print_r
exemple
2
–
select
...................................
8
Exemple
..................................................................................................................................................................
8
Explications
.............................................................................................................................................................
9
Résultats
.................................................................................................................................................................
9
Chargez
exemples
1
2
testez-les
............................................................................................................
10
Vocabulaire
Programmation
orientée
objet
......................................................................................
10
Classe
........................................................................................................................................................
10
Objet
.........................................................................................................................................................
10
Méthode
...................................................................................................................................................
10
Exceptions
.................................................................................................................................................
10
Guides
style
.........................................................................................................................................
10
Gestion
requêtes
.............................................................................................................................
11
Technique
programmation
–
PDO
PDOStatement
-
bdd
requete
reqSQL
...............................
11
Terminologie
bdd
-
reqSQL
-
requete
-
ligne
..........................................................................................
11
bdd
PDO
–
query
-
prepare
.............................................................................................................................
11
requete
PDOStatement
-
execute
-
fetch
-
closeCurseur
............................................................................
11
Synthèse
................................................................................................................................................................
11
Accès
champs
gestion
erreurs
order
by
like
limit
exemple
3
–
Select
Where
........................
12
Chargez
BD
pouvoir
tester
codes
........................................................................................................
12
Accéder
champs
.............................................................................................................................................
12
Select
attribut1
attribut2
Where
Order
by
........................................................................................................
12
Select
…
like
..........................................................................................................................................................
12
Select
…
Order
by
limit
.........................................................................................................................................
12
Requêtes
variables
where
realisateur
=
exemple
4
–
Select
Variable
.............................................
13
PHP
–
MySQL
–
MVC
-
page
1/34
Solution
basique
éviter
risque
XSS
...................................................................................................................
13
Solution
requête
préparée
where
prepare
execute
..........................................................................
13
Remplacer
alias
...............................................................................................................................
13
Déboguer
or
die
bdd-
errorInfo
..........................................................................................................
14
Créer
bdd
gestion
erreurs
déjà
vu
..............................................................................................
14
Aternative
exécuter
requête
query
execute
or
die
............................................................................
14
Ajouter
modifier
supprimer
données
table
exemple
5
–
insert-update-delete
...........
15
Via
phpMyAdmin
–
Afficher
..................................................................................................................................
15
Via
phpMyAdmin
–
SQL
........................................................................................................................................
15
Via
php
-
INSERT
....................................................................................................................................................
15
Via
php
–
DELETE
..................................................................................................................................................
15
Via
php
–
UPDATE
.................................................................................................................................................
16
Bons
usages
...........................................................................................................................................................
16
TP
1
–
Insert
Update
Delete
consultation
.............................................................................................
16
TP
Site
Artiste
–
non
MVC
......................................................................................................................
17
Exemple
6
Etape
1
uniquement
œuvres
–
TP
2
Installez
testez
regardez
bien
code
...........
17
Contenu
dossier
...............................................................................................................................................
17
Installation
............................................................................................................................................................
17
Tester
code
........................................................................................................................................................
17
TP3
Etape
2
œuvres
exposition
œuvres
exposées
–
gestion
basique
HTML
.......................
18
1
Quand
choisit
œuvres
obtient
ceci
page
accueil
.......................................................
18
2
Quand
choisit
exposition
obtient
ceci
............................................................................................
18
3
Quand
clique
exposition
obtient
liste
œuvres
exposées
.............................................
19
TP
4
Etape
3
–
comme
étape
2
séparation
PHP
HTML
..........................................
20
Problématique
organisation
base
quels
fichiers
projets
................................................
21
Questions
poser
...........................................................................................................................................
21
Schéma
synthèse
réaliser
..............................................................................................................................
21
MVC
............................................................................................................................................
22
Problématique
quels
fichiers
quels
dossiers
projets
............................................................
22
Organisation
non-MVC
..........................................................................................................................
22
Principes
organisation
non-MVC
...........................................................................................................
22
Défauts
organisation
non-MVC
.........................................................................................................
22
Présentation
MVC
............................................................................................................................
23
MVC
Modèle
-
Vue
-
Contrôleur
............................................................................................................
23
Modèle
SQL
.......................................................................................................................................
23
Vue
HTML
..........................................................................................................................................
23
Contrôleur
PHP
..................................................................................................................................
24
Fonctionnement
global
.............................................................................................................................
24
MVC
design
pattern
tête
première
.....................................................................................................
25
Organisation
répertoires
fichiers
MVC
......................................................................
26
Organisation
répertoires
MVC
.............................................................................................................
26
fichiers
modèle
.............................................................................................................................
26
fichiers
contrôleur
........................................................................................................................
26
fichiers
vue
....................................................................................................................................
26
font
contrôleur
=
contrôleur
global
=
routeur
=
indexSwitch
.............................................................
27
problème
..............................................................................................................................................
27
solution
front
contrôleur
.........................................................................................................
27
fichier
indexSwitch.html
routeur
...................................................................................................
27
Principes
................................................................................................................................................................
27
Exemple
................................................................................................................................................................
27
empty
isset
..................................................................................................................................................
28
Include
entête
pied
page
.............................................................................................................................
28
Déconnexion
.........................................................................................................................................................
28
Debug
....................................................................................................................................................................
28
Variante
sans
switch
beaucoup
plus
courte
.........................................................................................
28
PHP
–
MySQL
–
MVC
-
page
2/34
fichier
index.html
.................................................................................................................................
29
MVC
–
Exemple
7
Site
Artiste
V1-MVC
-
affichage
œuvres
-
Testez
exemple
.............................
30
Organisation
dossiers
fichiers
..................................................................................................
30
TP
Site
Artiste
MVC
...............................................................................................................................
31
TP-MVC-V2
Site
Artiste
V2
–
MVC
affichage
toutes
tables
.........................................................
31
TP-MVC-V3
Site
Artiste
V3
–
MVC
administration
œuvres
............................................................
31
page
administration
œuvres
pourra
ressembler
ceci
........................................................................
31
Connexion
comme
administrateur
.......................................................................................................................
32
Vérifier
login
......................................................................................................................................................
32
TP-MVC-V4
Site
Artiste
V4
–
MVC
administration
expositions
................................................
34
Edition
mars
2019
PHP
–
MySQL
–
MVC
-
page
3/34
PHP
-
MYSQL
PHP-MySQL
https
//openclassrooms.com/courses/concevez-votre-site-web-avec-php-et-mysql/presentation-desbases-de-donnees-2
Manuel
Référence
PHP
http
//php.net/manual/fr/langref.php
Manuel
Référence
SQL
http
//www.w3schools.com/sql/
Installation
fichiers
test
exemples
cours
fichier
zip
fournis
article
cours
00-Exemples-PHP-
MySQL.zip
Chargez
fichier
mettez-le
dossier
Partie_4
répertoire
web
www
serveur
WAMP
exemples
présentés
chapitre
vert
exercices
faire
présentés
chapitre
jaune
Utilisation
PHPMyAdmin
Oouvrir
phpMyAdmin
Icône
Wamp
/
bouton
droit
/
phpMyAdmin
Créer
Base
données
Onglet
Base
données
champ
nom
base
donnée
saisissez
BD_Utilisateur
vient
créer
BD_Utilisateur
apparaît
navigateur
gauche
Créer
table
tuples
Allez
onget
SQL
va
créer
table
suivante
tuples
associés
fichier
BD_Utilisateur.sql
exercice
1
CREATE
TABLE
Utilisateur
id
int
11
primary
key
AUTO_INCREMENT
prenomNom
varchar
20
NOT
NULL
adMail
varchar
20
NOT
NULL
motDePasse
varchar
20
NOT
NULL
PHP
–
MySQL
–
MVC
-
page
4/34
annee
int
4
NOT
NULL
ENGINE=InnoDB
Insert
into
Utilisateur
values
NULL
'Sia
PEI
'
'ji
gmail.com
'
'jipei
'
1995
Insert
into
Utilisateur
values
NULL
'Yawei
CAI
'
'jawei
yahoo.com
'
'yaweicai',1996
Insert
into
Utilisateur
values
NULL
'Zikeng
PENG
'
'zikeng
china.com
'
'zikeng',1994
Insert
into
Utilisateur
values
NULL
'Jiawen
LI
'
'jiawen
orange.fr
'
'jiawen',1995
Insert
into
Utilisateur
values
NULL
'Xiaoyu
LIU
'
'xiowyu
gmail.fr
'
'liu',1996
Insert
into
Utilisateur
values
NULL
'Olivier
TRAN
'
'tran
gmailcom
'
'olivier',1997
Collez
code
zone
saisie
SQL
exécuter
table
créée
tuples
Mettre
jour
colonne
BD
gauche
onglet
flèche
circulaire
verte
Cliquez
flèche
circulaire
verte
mettre
jour
colonne
BD
pouvez
ouvrir
BD
BD_Utilisateur
voyez
apparaître
table
Utilisateur
Affichez
contenu
table
utilisateur
cliquant
table
colonne
BD
voit
apparaître
liste
tuples
Exécuter
SELECT
allant
onglet
SQL
peut
saisir
requête
exemple
SELECT
*
FROM
`
utilisateur
`
WHERE
id
=
3
Exporter
peut
exporter
BD
différents
formats
SQL
Ca
génère
script
SQL
permet
reconstituer
BD
identique
sauvegarde
Exportez
BD
générée
regardez
script
CSV
Ca
génère
fichier
texte
pourra
importer
Excel
Exportez
BD
format
CSV
importez
fichier
CSV
Excel
Importer
commence
créer
BD
Ensuite
peut
importer
contenu
BD
différents
formats
SQL
choisir
fichier
importer
fichier
code
SQL
DDL
DML
CREATE
TABLE
INSERT
INTO
exemple
fichier
exporté
sauvegarde
PHP
–
MySQL
–
MVC
-
page
5/34
CSV
peut
importer
fichier
Excel
enregistré
format
CSV
faut
préciser
séparateur
colonne
plutôt
CSV
préciser
colonnes
première
ligne
nom
colonne
peut
dire
arrêter
cas
erreur
INSERT
faudra
ensuite
ajouter
contraintes
intégrité
table
Particulièrement
mettre
clés
primaires
étrangères
donnez
nom
table
PHP
–
MySQL
–
MVC
-
page
6/34
Connexion
BD
print_r
contenu
table
Utilisation
base
donnée
PHP
3
jeux
fonctions
API
permettent
connecter
BD
utiliser
mysql
mysqli
PDO
http
//php.net/manual/fr/mysqlinfo.api.choosing.php
jeu
mysql
plus
ancien
mieux
vaut
éviter
peut
utiliser
mysqli
PDO
PHP
Data
Object
particulièrement
PDO_MYSQL
intérêt
PDO
interface
abstraction
permettant
utilisation
importe
quelle
BD
plus
orienté
objet
utilisera
plutôt
PDO_MYSQL
http
//php.net/manual/en/ref.pdo-mysql.php
Connexion
BD
new
PDO
exemple
1
–
connexion
Code
php
function
connexionBD
dbname
{
//
paramètres
base
donnée
sgbdname='mysql
'
host='localhost
'
charset='utf8
'
//
dsn
data
source
name
dsn
=
sgbdname
'
host='.
host
'
dbname='.
dbname
'
charset='.
charset
//
utilisateur
connecté
base
donnée
username
=
'root
'
password
=
'root
'
//
avoir
erreurs
SQL
plus
claires
erreur
=
array
PDO
:ATTR_ERRMODE
=
PDO
:ERRMODE_EXCEPTION
try
{
//
connexion
BD
new
PDO
bdd
=
new
PDO
dsn
username
password
erreur
echo
'
p
Connexion
réussie
/p
'
return
bdd
}
catch
PDOException
e
{
echo
'Connexion
échouée
'
e-
getMessage
return
NULL
//
die
'Connexion
échouée
'
e-
getMessage
}
}
Explications
Ø
fait
new
PDO
4
paramètres
PDO
classe
crée
nouvel
objet
classe
appelle
bdd
http
//php.net/manual/fr/pdo.construct.php
new
PDO
4
paramètres
PHP
–
MySQL
–
MVC
-
page
7/34
•
dsn
data
source
name
contient
infos
SGBD
mysql
serveur
host
ici
localhost
nom
BD
jeu
caractères
utilisé
UTF8
plus
générique
•
username
nom
utilisateur
connecte
BD
•
password
password
utilisateur
connecte
BD
•
erreur
gérer
messages
erreur
Ø
utilise
variables
rendre
code
générique
utilise
variables
rendre
code
plus
générique
•
host
machine
serveur
SGBD
•
sgbdname
type
SGBD
•
username
nom
utilisateur
connecte
BD
•
password
mot
passe
utilisateur
•
dbname
nom
BD
laquelle
accède
SGBD
Ø
erreur
gestion
erreurs
erreur
=
array
PDO
:ATTR_ERRMODE
=
PDO
:ERRMODE_EXCEPTION
ajoutant
paramètre
erreur
tel
là
new
PDO
messages
erreurs
SGBD
exemple
SELECT
mal
écrit
Syntaxe
PDO
:ATTR_ERRMODE
PDO
:ERRMODE_EXCEPTION
constantes
classe
définies
classe
PDO
syntaxe
array
clé
=
valeur
permet
définir
couple
clé-valeur
tableau
PDO
:ATTR_ERRMODE
http
//php.net/manual/fr/pdo.constants.php
PDO
:ERRMODE_EXCEPTION
http
//php.net/manual/fr/pdo.error-handling.php
Ø
Gestion
erreurs
try
catch
structure
try
catch
structure
programmation
objet
gérer
erreurs
die
permet
arrêter
proprement
exécution
page
cas
erreur
Afficher
contenu
table
-1
query
fetch
print_r
exemple
2
–
select
Exemple
//
écrit
requête
reqSQL='SELECT
*
FROM
utilisateur
'
//
récupère
résultat
requete=
bdd-
query
reqSQL
echo
'
pre
'
print_r
requete
echo
'
/pre
'
//
affiche
résultat
ligne
ligne
while
ligne=
requete-
fetch
{
echo
'
pre
'
print_r
ligne
echo
'
/pre
'
echo
'
p
nombre
éléments
ligne
'
.sizeof
ligne
'
/p
'
}
//
libère
tables
requête
requete-
closeCursor
//
finir
traitement
PHP
–
MySQL
–
MVC
-
page
8/34
Explications
•
écrit
select
reqSQL
•
utilise
méthode
fonction
query
bdd
-
passant
reqSQL
paramètre
•
résultat
requete
objet
complexe
lequel
peut
appliquer
méthodes
fonctions
contient
tableau
données
select
•
affiche
peut
réponse
occurrence
seule
requête
affiche
•
passe
lignes
réponse
revue
méthode
fetch
•
Chaque
ligne
retourné
fetch
tableau
associatif
peut
faire
print_r
ligne
•
constate
alors
deux
accès
possible
chaque
donnée
nom
champs
id
exemple
numéro
0
id
2
fois
plus
éléments
prévu
chaque
ligne
•
Quand
fini
travailler
fait
closeCursor
libérer
tables
requête
Résultats
Connexion
réussie
DEBUT
pre
print_r
requete
/pre
PDOStatement
Object
queryString
=
SELECT
*
FROM
utilisateur
while
ligne=
requete-
fetch
{
Array
id
=
1
0
=
1
prenomNom
=
Sia
PEI
1
=
Sia
PEI
adMail
=
ji
gmail.com
2
=
ji
gmail.com
motDePasse
=
jipei
3
=
jipei
annee
=
1995
4
=
1995
nombre
éléments
ligne
10
Array
id
=
2
0
=
2
prenomNom
=
Yawei
CAI
1
=
Yawei
CAI
adMail
=
jawei
yahoo.com
2
=
jawei
yahoo.com
motDePasse
=
yaweicai
3
=
yaweicai
annee
=
1996
4
=
1996
nombre
éléments
ligne
10
PHP
–
MySQL
–
MVC
-
page
9/34
Chargez
exemples
1
2
testez-les
Vocabulaire
Programmation
orientée
objet
Classe
classe
type
comme
entier
réel
caractère
string
booléen
général
classe
correspond
équivalent
tableau
associatif
contient
plus
couples
clé-valeur
différentes
clés
appelées
attribut
plus
associe
fonctions
classe
appelle
alors
méthode
Objet
objet
variable
type
Classe
Quand
crée
objet
valeurs
couples
clé-valeur
attributs
dit
instancie
objet
Ca
passe
commande
new
Méthode
méthodes
fonctions
attachées
classe
utilisables
objets
classe
écrit
objet-
methode
appeler
méthode
objet
question
comme
passé
objet
paramètre
méthode
Exceptions
cas
erreur
programmation
objet
passe
objets
classe
Exception
Ca
fait
try
catch
try
essaie
exécuter
suite
instruction
catch
suite
instructions
exécutée
générer
erreur
sous
forme
exception
passe
bloc
catch
catch
précise
nom
objet
exception
va
traiter
peut
alors
accéder
informations
méthode
getMessage
exemple
Guides
style
https
//fr.wikipedia.org/wiki/CamelCase
https
//eilgin.github.io/php-the-right-way/
#
code_style_guide
PHP
–
MySQL
–
MVC
-
page
10/34
Gestion
requêtes
Technique
programmation
–
PDO
PDOStatement
-
bdd
requete
reqSQL
manipuler
BD
utilise
principalement
deux
classes
PDO
PDOStatemenet
Terminologie
bdd
-
reqSQL
-
requete
-
ligne
•
bdd
objet
classe
PDO
appelé
bdd
quelque
sorte
objet
permet
accès
concret
base
données
utilisateur
base
donnée
•
reqSQL
texte
requête
mis
reqSQL
simple
chaine
caractères
doit
être
confondu
résultat
requête
requete
•
requete
objet
classe
PSOStatement
appelé
requete
statement
peut
vouloir
dire
requête
requete
objet
complexe
contient
fois
reqSQL
résultat
requête
fois
celle-ci
exécutée
•
ligne
résultat
fetch
ligne
ligne
=
requete-
fetch
tuple
table
résultant
requête
SQL
bdd
PDO
–
query
-
prepare
http
//php.net/manual/fr/class.pdo.php
PDO
contient
méthodes
contient
attributs
Notons
Particulièrement
•
query
renvoie
requete
auquel
associé
reqSQL
passé
paramètre
résultat
requête
résultat
Select
prêt
être
fetché
prêt
être
parcouru
•
prepare
renvoie
requete
auquel
associé
reqSQL
passé
paramètre
requête
exécutée
peut
contenir
variables
PDO
contient
aussi
méthodes
propres
BD
comme
gestion
transactions
commit
rollback
etc.
autres
choses
requete
PDOStatement
-
execute
-
fetch
-
closeCurseur
http
//php.net/manual/fr/class.pdostatement.php
PDOStatement
contient
attribut
valeur
resSQL
fourni
paramètre
quand
créé
contient
aussi
méthodes
Notons
particulièrement
•
execute
permet
exécuter
requête
variables
faut
fournir
paramètre
tableau
valeurs
variables
•
fetch
permet
récupérer
lignes
résultat
requête
•
fetchAll
permet
récupérer
lignes
résultats
requête
toutes
tableau
•
closeCurseur
permet
refaire
execute
Synthèse
bdd
PDO
requete
PDOStatement
-
query
reqSQL
PDOStatement
-
fetch
ligne
-
prepare
reqSQL
PDOStatement
-
exectute
bool
-
closeCursor
bool
-
fetchAll
toutes
lignes
PHP
–
MySQL
–
MVC
-
page
11/34
Accès
champs
gestion
erreurs
order
by
like
limit
exemple
3
–
Select
Where
Chargez
BD
pouvoir
tester
codes
tester
codes
faut
charger
BD
plus
installer
code
répertoire
serveur
WEB
Accéder
champs
ligne
tableau
associatif
peut
écrire
echo
'
p
strong
prenom
nom
/strong
/p
'
while
ligne=
requete-
fetch
{
echo
'
p
'
ligne
prenom
'
'
ligne
nom
'
/p
'
}
Select
attribut1
attribut2
Where
Order
by
reqSQL='
Select
realistateur
titre
annee
from
films
where
realisateur
=
'\King
Vidor\'
order
by
annee
'
//
precise
3
champs
realisateur
titre
annee
//
attention
\'
//
trie
annee
Select
…
like
reqSQL='
SELECT
*
FROM
films
WHERE
realisateur
like
\
'
manki
\'
order
by
realisateur
annee
'
//
like
manki
importe
quoi
autour
manki
//
order
by
realisateur
annee
plusieurs
realisateurs
possibles
//
resultat
ordonne
résultat
Select
…
Order
by
limit
reqSQL='
Select
realistateur
titre
annee
from
films
where
annee
=
1960
order
by
annee
limit
0
10
'
//
prend
10
premiers
1
10
//
limit
10
10
10
suivants
//
limite
20
10
10
suivants
etc.
PHP
–
MySQL
–
MVC
-
page
12/34
Requêtes
variables
where
realisateur
=
exemple
4
–
Select
Variable
Objectif
mettre
variable
requête
exemple
information
saisie
utilisateur
Solution
basique
éviter
risque
XSS
pourrait
mettre
_GET
reqSQL
reqSQL='Select…
where
auteur=\
_GET
'realisateur
'
'\
éviter
_GET
contient
‘
toto
\
'
or
\
'
a\'=\
'
select
renverra
toute
table
Solution
requête
préparée
where
prepare
execute
reqSQL='Select…
where
realisateur
=
requete=
bdd-
prepare
reqSQL
requete-
execute
array
_GET
'realisateur
'
sépare
arguments
array
Remplacer
alias
solution
plus
lisible
celle
va
privilégier
reqSQL='Select…
where
realisateur=
realisateur
requete=
bdd-
prepare
reqSQL
requete-
execute
array
'realisateur'=
_GET
'realisateur
'
PHP
–
MySQL
–
MVC
-
page
13/34
Déboguer
or
die
bdd-
errorInfo
Créer
bdd
gestion
erreurs
déjà
vu
afficher
détails
erreur
crée
bdd
gestion
erreurs
erreur
=
array
PDO
:ATTR_ERRMODE
=
PDO
:ERRMODE_EXCEPTION
bdd
=
new
PDO
dsn
username
password
erreur
suffisant
obtenir
messages
erreur
propres
Aternative
exécuter
requête
query
execute
or
die
utilise
erreur
new
PDO
peut
ajouter
or
die
query
execute
afficher
détails
erreur
requete=
bdd-
query
reqSQL
or
die
print-r
bdd
errorInfo
requete-
execute
array
…
or
die
print-r
bdd
errorInfo
or
die
inutile
connexion
PDO
ERRMODE
or
die
utilise
quand
travaille
jeu
mysql
fonctions
fonction
mysql_connect
…
http
//php.net/manual/fr/pdo.errorinfo.php
Ø
limites
or
die
confidentialité
user
friendly
or
die
peut
être
pratique
phase
développement
production
met
jour
informations
peuvent
être
confidentielles
userfriendly
http
//www.alsacreations.com/tuto/lire/676-gestion-erreurs-mysql-php-or-die.html
PHP
–
MySQL
–
MVC
-
page
14/34
Ajouter
modifier
supprimer
données
table
exemple
5
–
insert-update-delete
Via
phpMyAdmin
–
Afficher
Interface
graphique
Via
phpMyAdmin
–
SQL
peut
entrer
commandes
SQL
INSERT
UPDATE
DELETE
système
propose
pré-remplissage
commandes
Via
php
-
INSERT
peut
entrer
commandes
SQL
INSERT
UPDATE
DELETE
reqSQL='
INSERT
INTO
films
titre
realisateur
annee
VALUES
titre
realisateur
annee
'
//exemple
'
L\'homme
irrationnel
'
'Woody
Allen
'
'2015
'
requete=
bdd-
prepare
reqSQL
resultat=
req-
execute
array
'titre'=
_GET
'titre
'
'realisateur'=
_GET
'realisateur
'
'annee'=
_GET
'annee
'
//
or
die
print-r
bdd-
errorInfo
/
*
or
die
inutile
connexion
ERRMODE
*
/
/
*
resultat
traiter
erreurs
proprement
sans
ERRMODE
*
/
Via
php
–
DELETE
reqSQL='
DELETE
FROM
films
WHERE
titre
=
titre
AND
realisateur
=
realisateur'
requete=
bdd-
prepare
reqSQL
resultat=
requete-
execute
array
'titre'=
_GET
'titre
'
'realisateur'=
_GET
'realisateur
'
/
*
tester
résultat
0
DELETE
*
/
if
requete-
rowCount
{
//
rowCount
compte
nombre
delete
echo
'
br/
DELETE
effectué
'
requete-
rowCount
'
fois
'
}
else
{
echo
'
br/
DELETE
échoué
'
}
rowCount
permet
savoir
combien
delete
effectués
http
//www.astuces-webmaster.ch/page/mysql-pdo
PHP
–
MySQL
–
MVC
-
page
15/34
Ø
ATTENTION
DELETE
Attention
delete
quand
donnée
supprimée
peut
récupérer
mode
validation
autocommit
plus
fréquent
faut
faire
vérifications
exemple
if
isset
_GET
'realisateur
'
or
isset
_GET
'titre
'
or
_GET
'realisateur
'
==
or
_GET
'titre
'
==
{
echo
'
br/
n\'avez
saisi
tous
paramètres
'
}
Via
php
–
UPDATE
reqSQL='
UPDATE
films
SET
duree=
duree
WHERE
titre
=
titre
AND
realisateur
=
realisateur
'
Ø
ATTENTION
UPDATE
Attention
UPDATE
quand
donnée
modifiée
peut
récupérer
mode
validation
autocommit
plus
fréquent
Bons
usages
place
'titre'=
_GET
'titre
'
'titre'=
titre
variables
titre
realisateur
etc.
récupérées
via
_POST
_GET
TP
1
–
Insert
Update
Delete
consultation
travaille
base
CINEMA
1
Changez
volontairement
paramètres
connexion
voir
message
erreur
correspondant
2
Ajoutez
film
Vérifiez
bien
présent
BD
utilisant
script
consultation
3
Supprimer
film
venez
ajouter
Vérifiez
bien
absent
BD
utilisant
script
consultation
4
Rajoutez
film
Vérifiez
bien
présent
BD
utilisant
script
consultation
5
Modifiez
année
film
venez
rajouter
Vérifiez
modification
faite
BD
utilisant
script
consultation
PHP
–
MySQL
–
MVC
-
page
16/34
TP
Site
Artiste
–
non
MVC
Exemple
6
Etape
1
uniquement
œuvres
–
TP
2
Installez
testez
regardez
bien
code
Contenu
dossier
dossier
exemple
6
contient
code
BD
BD_ARTISTE.sql
dossier
images
fichier
connexion
BD
page
affichage
œuvres
Installation
Installez
BD
WAMP
Parcourez
contenu
BD
bien
comprendre
Regardez
page
affichage
œuvres
indexOeuvres.php
Tester
code
obtient
affichage
suivant
PHP
–
MySQL
–
MVC
-
page
17/34
TP3
Etape
2
œuvres
exposition
œuvres
exposées
–
gestion
basique
HTML
Ensuite
veut
pouvoir
afficher
aussi
expositions
œuvres
exposées
considère
Site
Artiste
nav
header
HTML
1
Quand
choisit
œuvres
obtient
ceci
page
accueil
2
Quand
choisit
exposition
obtient
ceci
PHP
–
MySQL
–
MVC
-
page
18/34
3
Quand
clique
exposition
obtient
liste
œuvres
exposées
PHP
–
MySQL
–
MVC
-
page
19/34
TP
4
Etape
3
–
comme
étape
2
séparation
PHP
HTML
va
maintenant
organiser
code
séparant
maximum
code
PHP
code
HTML
ça
va
utiliser
fonction
fetchAll
lesOeuvres=
requete-
fetchAll
Ainsi
récupère
tableau
complet
œuvres
issu
Select
peut
ensuite
parcourir
tableau
PHP
classique
foreach
foreach
lesOeuvres
ligne
{
echo
'
h3
'
ligne
'id
'
'
'
ligne
'titre
'
'
-
'
ligne
'annee
'
'
-
'
ligne
'prix
'
'
euros
/h3
'
etc.
}
PHP
–
MySQL
–
MVC
-
page
20/34
Problématique
organisation
base
quels
fichiers
projets
but
afficher
œuvres
expositions
œuvres
exposées
Questions
poser
Quels
fichier
dois-je
créer
1
fichier
page
Comment
circule-t-on
page
page
a-t-il
éléments
commun
côté
HTML
Côté
HTML
header
partagé
a-t-il
éléments
commun
côté
PHP
Côté
PHP
connexion
BD
partagée
Schéma
synthèse
réaliser
PHP
–
MySQL
–
MVC
-
page
21/34
MVC
https
//openclassrooms.com/courses/votre-site-php-presque-complet-architecture-mvc-et-bonnespratiques/avant-propos-comment-fonctionne-ce-tutoriel
https
//openclassrooms.com/courses/adopter-un-style-de-programmation-clair-avec-le-modele-mvc
Problématique
quels
fichiers
quels
dossiers
projets
MVC
intéresse
problématique
organisation
fichiers
répertoires
noter
particulièrement
problèmes
suivants
•
•
•
•
•
Quels
dossiers
dois-je
créer
Comment
dois-je
organiser
fichiers
Comment
passe-t-on
fichier
autre
Quels
inclusions
envisager
a-t-il
besoin
d'un
dossier
admin
Organisation
non-MVC
Principes
organisation
non-MVC
va
avoir
page
php
page
site
page
comme
main
reçoit
paramètres
_GET
_POST
liste
paramètres
variable
selon
entrée
href
autre
href
formulaire
saisie
autre
header
aussi
variables
globales
partagées
toutes
pages
_SESSION
page
réagit
différemment
fonction
paramètres
reçoit
Selon
cas
fera
totalité
partie
•
Récupérer
contenus
_GET
_POST
_SESSION
•
Mettre
jour
_SESSION
•
Inclure
fichiers
header
footer
connexion
BD
etc.
•
Gérer
donnée
BD
INSERT
UPDATE
DELETE
SELECT
associés
nécessaire
•
construction
page
HTML
afficher
SELECT
associés
nécessaire
Défauts
organisation
non-MVC
•
Tout
mélangé
SQL
PHP
HTML
surtout
sépare
PHP
HTML
•
pages
peuvent
devenir
très
grosses
•
maintenance
facile
•
Travail
plusieurs
rendu
difficile
PHP
–
MySQL
–
MVC
-
page
22/34
Présentation
MVC
MVC
Modèle
-
Vue
-
Contrôleur
architecture
MVC
sépare
logique
code
trois
parties
trois
ensembles
fichiers
•
modèle
correspond
SQL
•
vue
correspond
HTML
•
contrôleur
correspond
PHP
faisant
lien
entre
deux
précédent
Cela
rend
code
plus
facile
mettre
jour
permet
organiser
travail
3
parties
travailler
parallèle
architecture
MVC
bonne
pratique
programmation
connaissance
architecture
MVC
rend
capable
créer
site
web
qualité
facile
maintenir
pratique
architectures
MVC
mises
œuvre
appuient
théorie
adaptent
façon
pragmatique
plusieurs
façons
mettre
œuvre
MVC
principaux
framework
développés
MVC
CodeIgniter
CakePHP
Symfony
Jelix
Zend
Framework
etc
Modèle
SQL
modèle
gère
données
site
Essentiellement
accès
BD
aussi
gestion
fichiers
propose
fonctions
faire
Insert
Update
Delete
Select
fonctions
peuvent
renvoyer
tableaux
données
résultats
exploités
contrôleur
aussi
HTML
page
pur
PHP
idée
générale
application
base
données
centrale
BD
bien
conçue
application
facile
maintenir
faire
évoluer
BD
mal
conçue
application
complexe
maintenir
Vue
HTML
vue
affiche
page
HTML
Elles
récupèrent
variables
Contrôleur
et/ou
Modèle
savoir
elles
doivent
afficher
page
HTML
quelques
boucles
conditions
PHP
très
simples
afficher
tableaux
données
issus
Modèle
vue
contient
DOCTYPE
peut
fonctionner
contexte
contrôleur
PHP
–
MySQL
–
MVC
-
page
23/34
Contrôleur
PHP
contrôleur
page
appelée
véritable
index
autrement
dit
main
fonctionne
trois
étapes
1
utilise
fonctions
Modèle
include
appels
fonctions
2
analyse
traite
données
issues
Modèle
aussi
celles
passées
paramètre
appel
page
_GET
_POST
_SESSION
détermine
exemple
visiteur
droit
voir
page
non
3
fonction
calculs
appelle
vue
correspondante
include
page
pur
PHP
contrôleur
chef
orchestre
récupère
demande
utilisateur
travers
vue
page
HTML
href
formulaire
header
échange
données
modèle
fait
calculs
peuvent
être
complexes
puis
choisit
vue
afficher
fournissant
variables
rôle
contrôleur
peut
limiter
faire
lien
entre
modèle
vue
colle
Fonctionnement
global
utilisateur
travers
vue
fait
appel
page
contrôleur
href
formulaire
contrôleur
include
modèle
utilise
fonctions
modèle
fait
ensuite
calculs
Selon
résultats
include
vue
autre
afficher
utilisateur
ainsi
suite
PHP
–
MySQL
–
MVC
-
page
24/34
MVC
design
pattern
tête
première
Car
modèle
-
essentiel
vue
-
magnifique
p
têt
feignant
-
oui
fou
lignes
code
-
colle
code
fait
rien
-
vraiment
magique
fait
transmettre
-
valeurs
colle
contrôleur
dit
MCV
design
pattern
DP
réalité
assemblage
DP
élémentaires
lettre
DP
stratégie
composite
observateur
DP
noms
code
réellement
DP
alors
mise
jour
automatique
notifications
DP
observateur
PHP
–
MySQL
–
MVC
-
page
25/34
Organisation
répertoires
fichiers
MVC
Organisation
répertoires
MVC
racine
site
crée
3
répertoires
•
modele
•
vue
•
controleur
chacun
répertoires
crée
sous-répertoire
module
site
exemple
forum
blog
chat
admin
etc.
fichiers
modèle
Chaque
modèle
fichier
PHP
contenant
appel
BD
renvoie
exemple
tableau
résultats
fetchAll
plutôt
fetch
fichier
PHP
balise
fermante
ça
évite
problèmes
objet
bdd
déclaré
global
avoir
refaire
connexion
chaque
opération
idéal
faut
utiliser
DP
singleton
permet
recréer
objet
déjà
créé
chaque
sous-repertoire
module
crée
fichier
fonction
nom
fonction
Ainsi
fait
include
fichier
appel
fonction
fichiers
contrôleur
Chaque
contrôleur
aussi
fichier
PHP
inclut
modèle
début
include_once
éviter
inclure
plusieurs
fois
fin
inclura
vue
Autrement
dit
réalité
contient
tout
code
sépare
code
3
parties
modèle
contrôle
vue
chaque
partie
propre
fichier
contrôleur
fait
calculs
avant
appel
vue
Quand
demande
fichier
barre
d'adresse
contrôleur
appelle
fichiers
vue
Chaque
vue
fichier
HTML
fera
simple
affichage
jeu
données
fourni
contrôleur
peut
avoir
boucle
PHP
parcourir
tableaux
tests
choisir
veut
afficher
fichier
vue
page
utilisateur
PHP
–
MySQL
–
MVC
-
page
26/34
font
contrôleur
=
contrôleur
global
=
routeur
=
indexSwitch
problème
organisation
précédente
main
page
contrôleur
problème
majeur
va
être
faire
lien
entre
pages
effet
href
partira
page
contrôleur
aller
autre
page
autre
contrôleur
problème
ça
obligera
parcourir
arborescence
fichiers
href
type
Href=
..
/admin/pageAdmin.php
href
fichier
includé
telle
organisation
risque
souvent
avoir
problèmes
routage
trouver
route
page
ouvrir
très
complexe
change
peu
structure
fichiers
répertoires
simplement
change
nom
répertoire
faudra
retrouver
tous
href
référence
répertoire
mettre
jour
long
pénible
solution
front
contrôleur
dotera
contrôleur
global
permet
entrée
site
permet
choisir
contrôleur
appeler
page
afficher
front
contrôleur
routeur
retrouve
terme
routeur
frameworks
autres
contrôleurs
parfois
appelés
backContoller
rôle
front
contrôleur
déterminer
quel
contrôleur
appeler
faire
initialisations
générales
connexion
BD
affichage
en-tête
pied
page
etc.
fichier
index.html
appellera
routeur
route
particulière
est-à-dire
contrôleur
particulier
page
particulière
afficher
Ainsi
va
centraliser
problème
routage
change
nom
répertoire
faudra
faire
modifications
front-contrôleur
fichier
indexSwitch.html
routeur
Principes
IndexSwitch
front
contrôleur
choisit
contrôleur
exécuter
front
controleur
appellera
routeur
framework
php
regarde
quel
index
setté
savoir
quel
contrôleur
appeler
teste
_GET
_POST
car
peut
venir
header
href
formulaire
Exemple
php
session_start
//On
démarre
session
include
'modele/connexion_sql.php
'
//
connexion
BD
include
'vues/entete.php
'
//HTML
entête
site
//
grand
SWITCH
d'accès
pages
//
elseif
if
isset
_GET
'indexOeuvres
'
OR
isset
_POST
'indexOeuvres
'
{
PHP
–
MySQL
–
MVC
-
page
27/34
include
'controleur/public/'indexOeuvres'.php
'
}
elseif
isset
_GET
'indexExpositions
'
OR
isset
_POST
'indexExpositions
'
{
include
'controleur/public/'indexExpositions'.php
'
}
//etc
empty
isset
presque
chose
empty
vrai
non
défini
=0
=null
isset
faux
uniquement
non
défini
http
//php.net/manual/fr/function.empty.php
Include
entête
pied
page
peut
faire
include
entête
pied
page
front
contrôleur
toujours
toutes
pages
Déconnexion
libérer
proprement
BD
PDO
déconnexion
utile
fait
close
cursor
include
'modele/deconnexion_sql.php
'
//
deconnexion
BD
Debug
affiche
_
SESSION
POST
GET
suivre
passe
chaque
page
plus
besoin
nom
fichier
puisque
toujours
celui
front
controleur
peut
mettre
ça
test
ainsi
suffit
passer
debut
0
arrêter
affichage
superglogabes
debug=1
if
debug==1
{
print_r
_SESSION
echo
'
br/
'
echo'POST
'
print_r
_POST
echo
'
br/
'
echo'GET
'
print_r
_GET
echo
'
br/
'
}
Variante
sans
switch
beaucoup
plus
courte
_GET
_POST
arrive
front
controleur
pourrait
contenir
nom
contrôleur
veut
appeler
chemin
.Par
exemple
public/œuvres.php
encore
admin/œuvres.php
partir
là
front
controleur
vérifie
_GET
_POST
setté
fichier
correspondant
controleur
veut
appeler
existe
is_file
cas
peut
faire
include
controleur
back
Sinon
revient
page
accueil
Ainsi
plus
besoin
swich
//On
inclut
contrôleur
s'il
existe
s'il
spécifié
if
empty
_GET
'page
'
&
&
is_file
'controleurs/'.
_GET
'page
'
'.php
'
PHP
–
MySQL
–
MVC
-
page
28/34
include
'controleurs/'.
_GET
'page
'
'.php
'
else
include
'controleurs/accueil.php
'
//
controleur
accueil
fichier
index.html
fichier
index.html
appelle
fonction
header
front
contrôleur
ici
fichier
indexSwitch
passe
paramètre
URL
exemple
indexOeuvres
page
accueil
site
donne
importe
quelle
valeur
paramètre
fera
tester
setté
php
//
appelle
indexSwith
settant
indexArticle
n'importe
quel
valeur
header
'location
indexSwitch.php
indexOeuvre=set
'
PHP
–
MySQL
–
MVC
-
page
29/34
MVC
–
Exemple
7
Site
Artiste
V1-MVC
-
affichage
œuvres
-
Testez
exemple
Organisation
dossiers
fichiers
organisation
MVC
suivante
PHP
–
MySQL
–
MVC
-
page
30/34
TP
Site
Artiste
MVC
TP-MVC-V2
Site
Artiste
V2
–
MVC
affichage
toutes
tables
partir
SiteArtisteV1-MVC-base
faite
V2
prenne
compte
gestion
expositions
celle
œuvres
exposées
étape
2
MVC
suit
logique
étape
2
non-MVC
TP-MVC-V3
Site
Artiste
V3
–
MVC
administration
œuvres
Ajoutez
possibilité
connecter
comme
administrateur
entrée
back-office
administrateur
peut
déconnecter
retourner
site
public
entrée
administration
fera
page
administration
œuvres
affichera
liste
œuvres
tableau
permettra
chaque
œuvre
consulter
détail
modifier
supprimer
page
administration
œuvres
pourra
ressembler
ceci
charger
images
faudra
utiliser
superglobal
_FILE
PHP
–
MySQL
–
MVC
-
page
31/34
Connexion
comme
administrateur
connecter
comme
administrateur
faudra
créer
formulaire
exemple
comme
ceci
chaque
page
partie
publique
Vérifier
login
Ø
Objectif
premier
temps
vérifie
mot
passe
cas
erreur
affiche
page
erreur
cas
réussite
affiche
page
administration
œuvres
gère
déconnexion
Ø
Objectif
second
temps
prendra
aussi
compte
possibilité
modifier
consulter
supprimer
œuvres
Ø
Vérification
login
–
mot-de-passe
if
isset
_POST
'admin
'
AND
htmlspecialchars
_POST
'admin
'
==
'admin'
AND
isset
_POST
'password
'
AND
htmlspecialchars
_POST
'password
'
=='admin
'
{
_SESSION
'admin
'
=
_POST
'admin
'
}
contrôleur
administration
vérifie
début
bien
reçu
bon
login
–
motDePasse
vérifie
deux
champs
settés
contiennent
exemple
admin
admin
PHP
–
MySQL
–
MVC
-
page
32/34
cas
enregistre
valeur
_SESSION
‘
admin
commence
faire
session_start
début
page
Ø
Affichage
bonne
vue
Selon
_SESSION
'admin
'
setté
choisit
vue
afficher
//
'
droits
d'administration
if
isset
_SESSION
'admin
'
{
include
'vue/admin/vueInterdiction.php
'
}
else
{
include
'vue/admin/vueAdminOeuvres.php
'
}
Ø
Gestion
déconnexion
Quand
déconnecte
passera
_POST
'deconnexion
'
page
retour
occurrence
celle
œuvres
là
page
œuvres
teste
_POST
'deconnexion
'
setté
vient
bouton
déconnexion
cas
unset
_SESSION
'admin
'
Ø
Page
erreur
crée
nouvelle
vue
gérer
erreur
admin
mot
passe
vue
garde
header
utilisateurs
publics
peut
retourner
œuvres
expositions
PHP
–
MySQL
–
MVC
-
page
33/34
TP-MVC-V4
Site
Artiste
V4
–
MVC
administration
expositions
fois
connecté
tant
administrateur
peut
aussi
administrer
expositions
ajouter
supprimer
modifier
Quand
ajoute
exposition
faut
pouvoir
préciser
liste
œuvres
exposées
Quand
supprime
exposition
faut
supprimer
aussi
toutes
œuvres
exposées
Quand
modifie
exposition
faut
pouvoir
ajouter
supprimer
œuvres
aussi
modifier
prix
œuvres
exposition
Quand
utilisateur
connecté
comme
administrateur
fera
sorte
reste
connecté
aille
sauf
déconnecte
PHP
–
MySQL
–
MVC
-
page
34/34
